(globalThis["webpackChunk"] = globalThis["webpackChunk"] || []).push([["vendors-node_modules_react-aria_button_dist_module_js-node_modules_react-aria_menu_dist_modul-af0898"],{

/***/ "../node_modules/@formatjs/fast-memoize/lib/index.js":
/*!***********************************************************!*\
  !*** ../node_modules/@formatjs/fast-memoize/lib/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ memoize),
/* harmony export */   "strategies": () => (/* binding */ strategies)
/* harmony export */ });
//
// Main
//
function memoize(fn, options) {
    var cache = options && options.cache ? options.cache : cacheDefault;
    var serializer = options && options.serializer ? options.serializer : serializerDefault;
    var strategy = options && options.strategy ? options.strategy : strategyDefault;
    return strategy(fn, {
        cache: cache,
        serializer: serializer,
    });
}
//
// Strategy
//
function isPrimitive(value) {
    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === "string" 'unsafe' primitive for our needs
}
function monadic(fn, cache, serializer, arg) {
    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === 'undefined') {
        computedValue = fn.call(this, arg);
        cache.set(cacheKey, computedValue);
    }
    return computedValue;
}
function variadic(fn, cache, serializer) {
    var args = Array.prototype.slice.call(arguments, 3);
    var cacheKey = serializer(args);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === 'undefined') {
        computedValue = fn.apply(this, args);
        cache.set(cacheKey, computedValue);
    }
    return computedValue;
}
function assemble(fn, context, strategy, cache, serialize) {
    return strategy.bind(context, fn, cache, serialize);
}
function strategyDefault(fn, options) {
    var strategy = fn.length === 1 ? monadic : variadic;
    return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
    return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
    return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
//
// Serializer
//
var serializerDefault = function () {
    return JSON.stringify(arguments);
};
//
// Cache
//
function ObjectWithoutPrototypeCache() {
    this.cache = Object.create(null);
}
ObjectWithoutPrototypeCache.prototype.get = function (key) {
    return this.cache[key];
};
ObjectWithoutPrototypeCache.prototype.set = function (key, value) {
    this.cache[key] = value;
};
var cacheDefault = {
    create: function create() {
        // @ts-ignore
        return new ObjectWithoutPrototypeCache();
    },
};
var strategies = {
    variadic: strategyVariadic,
    monadic: strategyMonadic,
};


/***/ }),

/***/ "../node_modules/@formatjs/icu-messageformat-parser/lib/error.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@formatjs/icu-messageformat-parser/lib/error.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ErrorKind": () => (/* binding */ ErrorKind)
/* harmony export */ });
var ErrorKind;
(function (ErrorKind) {
    /** Argument is unclosed (e.g. `{0`) */
    ErrorKind[ErrorKind["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
    /** Argument is empty (e.g. `{}`). */
    ErrorKind[ErrorKind["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
    /** Argument is malformed (e.g. `{foo!}``) */
    ErrorKind[ErrorKind["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
    /** Expect an argument type (e.g. `{foo,}`) */
    ErrorKind[ErrorKind["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
    /** Unsupported argument type (e.g. `{foo,foo}`) */
    ErrorKind[ErrorKind["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
    /** Expect an argument style (e.g. `{foo, number, }`) */
    ErrorKind[ErrorKind["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
    /** The number skeleton is invalid. */
    ErrorKind[ErrorKind["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
    /** The date time skeleton is invalid. */
    ErrorKind[ErrorKind["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */
    ErrorKind[ErrorKind["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */
    ErrorKind[ErrorKind["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */
    ErrorKind[ErrorKind["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
    /** Missing select argument options (e.g. `{foo, select}`) */
    ErrorKind[ErrorKind["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */
    ErrorKind[ErrorKind["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */
    ErrorKind[ErrorKind["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */
    ErrorKind[ErrorKind["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */
    ErrorKind[ErrorKind["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */
    ErrorKind[ErrorKind["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
    /**
     * Expecting a message fragment after the `plural` or `selectordinal` selector
     * (e.g. `{foo, plural, one}`)
     */
    ErrorKind[ErrorKind["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */
    ErrorKind[ErrorKind["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
    /**
     * Duplicate selectors in `plural` or `selectordinal` argument.
     * (e.g. {foo, plural, one {#} one {#}})
     */
    ErrorKind[ErrorKind["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
    /** Duplicate selectors in `select` argument.
     * (e.g. {foo, select, apple {apple} apple {apple}})
     */
    ErrorKind[ErrorKind["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
    /** Plural or select argument option must have `other` clause. */
    ErrorKind[ErrorKind["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */
    ErrorKind[ErrorKind["INVALID_TAG"] = 23] = "INVALID_TAG";
    /** The tag name is invalid. (e.g. `<123>foo</123>`) */
    ErrorKind[ErrorKind["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */
    ErrorKind[ErrorKind["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */
    ErrorKind[ErrorKind["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));


/***/ }),

/***/ "../node_modules/@formatjs/icu-messageformat-parser/lib/index.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@formatjs/icu-messageformat-parser/lib/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SKELETON_TYPE": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.SKELETON_TYPE),
/* harmony export */   "TYPE": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.TYPE),
/* harmony export */   "createLiteralElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.createLiteralElement),
/* harmony export */   "createNumberElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.createNumberElement),
/* harmony export */   "isArgumentElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isArgumentElement),
/* harmony export */   "isDateElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isDateElement),
/* harmony export */   "isDateTimeSkeleton": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isDateTimeSkeleton),
/* harmony export */   "isLiteralElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isLiteralElement),
/* harmony export */   "isNumberElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isNumberElement),
/* harmony export */   "isNumberSkeleton": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isNumberSkeleton),
/* harmony export */   "isPluralElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isPluralElement),
/* harmony export */   "isPoundElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isPoundElement),
/* harmony export */   "isSelectElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isSelectElement),
/* harmony export */   "isTagElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isTagElement),
/* harmony export */   "isTimeElement": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isTimeElement),
/* harmony export */   "parse": () => (/* binding */ parse)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ "../node_modules/@formatjs/icu-messageformat-parser/lib/error.js");
/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser */ "../node_modules/@formatjs/icu-messageformat-parser/lib/parser.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ "../node_modules/@formatjs/icu-messageformat-parser/lib/types.js");




function pruneLocation(els) {
    els.forEach(function (el) {
        delete el.location;
        if ((0,_types__WEBPACK_IMPORTED_MODULE_2__.isSelectElement)(el) || (0,_types__WEBPACK_IMPORTED_MODULE_2__.isPluralElement)(el)) {
            for (var k in el.options) {
                delete el.options[k].location;
                pruneLocation(el.options[k].value);
            }
        }
        else if ((0,_types__WEBPACK_IMPORTED_MODULE_2__.isNumberElement)(el) && (0,_types__WEBPACK_IMPORTED_MODULE_2__.isNumberSkeleton)(el.style)) {
            delete el.style.location;
        }
        else if (((0,_types__WEBPACK_IMPORTED_MODULE_2__.isDateElement)(el) || (0,_types__WEBPACK_IMPORTED_MODULE_2__.isTimeElement)(el)) &&
            (0,_types__WEBPACK_IMPORTED_MODULE_2__.isDateTimeSkeleton)(el.style)) {
            delete el.style.location;
        }
        else if ((0,_types__WEBPACK_IMPORTED_MODULE_2__.isTagElement)(el)) {
            pruneLocation(el.children);
        }
    });
}
function parse(message, opts) {
    if (opts === void 0) { opts = {}; }
    opts = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
    var result = new _parser__WEBPACK_IMPORTED_MODULE_1__.Parser(message, opts).parse();
    if (result.err) {
        var error = SyntaxError(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind[result.err.kind]);
        // @ts-expect-error Assign to error object
        error.location = result.err.location;
        // @ts-expect-error Assign to error object
        error.originalMessage = result.err.message;
        throw error;
    }
    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
        pruneLocation(result.val);
    }
    return result.val;
}



/***/ }),

/***/ "../node_modules/@formatjs/icu-messageformat-parser/lib/parser.js":
/*!************************************************************************!*\
  !*** ../node_modules/@formatjs/icu-messageformat-parser/lib/parser.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Parser": () => (/* binding */ Parser)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ "../node_modules/@formatjs/icu-messageformat-parser/lib/error.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ "../node_modules/@formatjs/icu-messageformat-parser/lib/types.js");
/* harmony import */ var _regex_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./regex.generated */ "../node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js");
/* harmony import */ var _formatjs_icu_skeleton_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @formatjs/icu-skeleton-parser */ "../node_modules/@formatjs/icu-skeleton-parser/lib/index.js");
var _a;





var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(_regex_generated__WEBPACK_IMPORTED_MODULE_2__.SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(_regex_generated__WEBPACK_IMPORTED_MODULE_2__.SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
    return { start: start, end: end };
}
// #region Ponyfills
// Consolidate these variables up top for easier toggling during debugging
var hasNativeStartsWith = !!String.prototype.startsWith;
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger
    ? Number.isSafeInteger
    : function (n) {
        return (typeof n === 'number' &&
            isFinite(n) &&
            Math.floor(n) === n &&
            Math.abs(n) <= 0x1fffffffffffff);
    };
// IE11 does not support y and u.
var REGEX_SUPPORTS_U_AND_Y = true;
try {
    var re = RE('([^\\p{White_Space}\\p{Pattern_Syntax}]*)', 'yu');
    /**
     * legacy Edge or Xbox One browser
     * Unicode flag support: supported
     * Pattern_Syntax support: not supported
     * See https://github.com/formatjs/formatjs/issues/2822
     */
    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';
}
catch (_) {
    REGEX_SUPPORTS_U_AND_Y = false;
}
var startsWith = hasNativeStartsWith
    ? // Native
        function startsWith(s, search, position) {
            return s.startsWith(search, position);
        }
    : // For IE11
        function startsWith(s, search, position) {
            return s.slice(position, position + search.length) === search;
        };
var fromCodePoint = hasNativeFromCodePoint
    ? String.fromCodePoint
    : // IE11
        function fromCodePoint() {
            var codePoints = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                codePoints[_i] = arguments[_i];
            }
            var elements = '';
            var length = codePoints.length;
            var i = 0;
            var code;
            while (length > i) {
                code = codePoints[i++];
                if (code > 0x10ffff)
                    throw RangeError(code + ' is not a valid code point');
                elements +=
                    code < 0x10000
                        ? String.fromCharCode(code)
                        : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00);
            }
            return elements;
        };
var fromEntries = 
// native
hasNativeFromEntries
    ? Object.fromEntries
    : // Ponyfill
        function fromEntries(entries) {
            var obj = {};
            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
                var _a = entries_1[_i], k = _a[0], v = _a[1];
                obj[k] = v;
            }
            return obj;
        };
var codePointAt = hasNativeCodePointAt
    ? // Native
        function codePointAt(s, index) {
            return s.codePointAt(index);
        }
    : // IE 11
        function codePointAt(s, index) {
            var size = s.length;
            if (index < 0 || index >= size) {
                return undefined;
            }
            var first = s.charCodeAt(index);
            var second;
            return first < 0xd800 ||
                first > 0xdbff ||
                index + 1 === size ||
                (second = s.charCodeAt(index + 1)) < 0xdc00 ||
                second > 0xdfff
                ? first
                : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;
        };
var trimStart = hasTrimStart
    ? // Native
        function trimStart(s) {
            return s.trimStart();
        }
    : // Ponyfill
        function trimStart(s) {
            return s.replace(SPACE_SEPARATOR_START_REGEX, '');
        };
var trimEnd = hasTrimEnd
    ? // Native
        function trimEnd(s) {
            return s.trimEnd();
        }
    : // Ponyfill
        function trimEnd(s) {
            return s.replace(SPACE_SEPARATOR_END_REGEX, '');
        };
// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.
function RE(s, flag) {
    return new RegExp(s, flag);
}
// #endregion
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
    // Native
    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\p{White_Space}\\p{Pattern_Syntax}]*)', 'yu');
    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {
        var _a;
        IDENTIFIER_PREFIX_RE_1.lastIndex = index;
        var match = IDENTIFIER_PREFIX_RE_1.exec(s);
        return (_a = match[1]) !== null && _a !== void 0 ? _a : '';
    };
}
else {
    // IE11
    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {
        var match = [];
        while (true) {
            var c = codePointAt(s, index);
            if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {
                break;
            }
            match.push(c);
            index += c >= 0x10000 ? 2 : 1;
        }
        return fromCodePoint.apply(void 0, match);
    };
}
var Parser = /** @class */ (function () {
    function Parser(message, options) {
        if (options === void 0) { options = {}; }
        this.message = message;
        this.position = { offset: 0, line: 1, column: 1 };
        this.ignoreTag = !!options.ignoreTag;
        this.requiresOtherClause = !!options.requiresOtherClause;
        this.shouldParseSkeletons = !!options.shouldParseSkeletons;
    }
    Parser.prototype.parse = function () {
        if (this.offset() !== 0) {
            throw Error('parser can only be used once');
        }
        return this.parseMessage(0, '', false);
    };
    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {
        var elements = [];
        while (!this.isEOF()) {
            var char = this.char();
            if (char === 123 /* `{` */) {
                var result = this.parseArgument(nestingLevel, expectingCloseTag);
                if (result.err) {
                    return result;
                }
                elements.push(result.val);
            }
            else if (char === 125 /* `}` */ && nestingLevel > 0) {
                break;
            }
            else if (char === 35 /* `#` */ &&
                (parentArgType === 'plural' || parentArgType === 'selectordinal')) {
                var position = this.clonePosition();
                this.bump();
                elements.push({
                    type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.pound,
                    location: createLocation(position, this.clonePosition()),
                });
            }
            else if (char === 60 /* `<` */ &&
                !this.ignoreTag &&
                this.peek() === 47 // char code for '/'
            ) {
                if (expectingCloseTag) {
                    break;
                }
                else {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
                }
            }
            else if (char === 60 /* `<` */ &&
                !this.ignoreTag &&
                _isAlpha(this.peek() || 0)) {
                var result = this.parseTag(nestingLevel, parentArgType);
                if (result.err) {
                    return result;
                }
                elements.push(result.val);
            }
            else {
                var result = this.parseLiteral(nestingLevel, parentArgType);
                if (result.err) {
                    return result;
                }
                elements.push(result.val);
            }
        }
        return { val: elements, err: null };
    };
    /**
     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the
     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters
     * are accepted:
     *
     * ```
     * tag ::= "<" tagName (whitespace)* "/>" | "<" tagName (whitespace)* ">" message "</" tagName (whitespace)* ">"
     * tagName ::= [a-z] (PENChar)*
     * PENChar ::=
     *     "-" | "." | [0-9] | "_" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |
     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |
     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
     * ```
     *
     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name
     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do
     * since other tag-based engines like React allow it
     */
    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {
        var startPosition = this.clonePosition();
        this.bump(); // `<`
        var tagName = this.parseTagName();
        this.bumpSpace();
        if (this.bumpIf('/>')) {
            // Self closing tag
            return {
                val: {
                    type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.literal,
                    value: "<".concat(tagName, "/>"),
                    location: createLocation(startPosition, this.clonePosition()),
                },
                err: null,
            };
        }
        else if (this.bumpIf('>')) {
            var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
            if (childrenResult.err) {
                return childrenResult;
            }
            var children = childrenResult.val;
            // Expecting a close tag
            var endTagStartPosition = this.clonePosition();
            if (this.bumpIf('</')) {
                if (this.isEOF() || !_isAlpha(this.char())) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
                }
                var closingTagNameStartPosition = this.clonePosition();
                var closingTagName = this.parseTagName();
                if (tagName !== closingTagName) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
                }
                this.bumpSpace();
                if (!this.bumpIf('>')) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
                }
                return {
                    val: {
                        type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.tag,
                        value: tagName,
                        children: children,
                        location: createLocation(startPosition, this.clonePosition()),
                    },
                    err: null,
                };
            }
            else {
                return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
            }
        }
        else {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
        }
    };
    /**
     * This method assumes that the caller has peeked ahead for the first tag character.
     */
    Parser.prototype.parseTagName = function () {
        var startOffset = this.offset();
        this.bump(); // the first tag name character
        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
            this.bump();
        }
        return this.message.slice(startOffset, this.offset());
    };
    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {
        var start = this.clonePosition();
        var value = '';
        while (true) {
            var parseQuoteResult = this.tryParseQuote(parentArgType);
            if (parseQuoteResult) {
                value += parseQuoteResult;
                continue;
            }
            var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
            if (parseUnquotedResult) {
                value += parseUnquotedResult;
                continue;
            }
            var parseLeftAngleResult = this.tryParseLeftAngleBracket();
            if (parseLeftAngleResult) {
                value += parseLeftAngleResult;
                continue;
            }
            break;
        }
        var location = createLocation(start, this.clonePosition());
        return {
            val: { type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.literal, value: value, location: location },
            err: null,
        };
    };
    Parser.prototype.tryParseLeftAngleBracket = function () {
        if (!this.isEOF() &&
            this.char() === 60 /* `<` */ &&
            (this.ignoreTag ||
                // If at the opening tag or closing tag position, bail.
                !_isAlphaOrSlash(this.peek() || 0))) {
            this.bump(); // `<`
            return '<';
        }
        return null;
    };
    /**
     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes
     * a character that requires quoting (that is, "only where needed"), and works the same in
     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.
     */
    Parser.prototype.tryParseQuote = function (parentArgType) {
        if (this.isEOF() || this.char() !== 39 /* `'` */) {
            return null;
        }
        // Parse escaped char following the apostrophe, or early return if there is no escaped char.
        // Check if is valid escaped character
        switch (this.peek()) {
            case 39 /* `'` */:
                // double quote, should return as a single quote.
                this.bump();
                this.bump();
                return "'";
            // '{', '<', '>', '}'
            case 123:
            case 60:
            case 62:
            case 125:
                break;
            case 35: // '#'
                if (parentArgType === 'plural' || parentArgType === 'selectordinal') {
                    break;
                }
                return null;
            default:
                return null;
        }
        this.bump(); // apostrophe
        var codePoints = [this.char()]; // escaped char
        this.bump();
        // read chars until the optional closing apostrophe is found
        while (!this.isEOF()) {
            var ch = this.char();
            if (ch === 39 /* `'` */) {
                if (this.peek() === 39 /* `'` */) {
                    codePoints.push(39);
                    // Bump one more time because we need to skip 2 characters.
                    this.bump();
                }
                else {
                    // Optional closing apostrophe.
                    this.bump();
                    break;
                }
            }
            else {
                codePoints.push(ch);
            }
            this.bump();
        }
        return fromCodePoint.apply(void 0, codePoints);
    };
    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {
        if (this.isEOF()) {
            return null;
        }
        var ch = this.char();
        if (ch === 60 /* `<` */ ||
            ch === 123 /* `{` */ ||
            (ch === 35 /* `#` */ &&
                (parentArgType === 'plural' || parentArgType === 'selectordinal')) ||
            (ch === 125 /* `}` */ && nestingLevel > 0)) {
            return null;
        }
        else {
            this.bump();
            return fromCodePoint(ch);
        }
    };
    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {
        var openingBracePosition = this.clonePosition();
        this.bump(); // `{`
        this.bumpSpace();
        if (this.isEOF()) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        if (this.char() === 125 /* `}` */) {
            this.bump();
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
        // argument name
        var value = this.parseIdentifierIfPossible().value;
        if (!value) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
        this.bumpSpace();
        if (this.isEOF()) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        switch (this.char()) {
            // Simple argument: `{name}`
            case 125 /* `}` */: {
                this.bump(); // `}`
                return {
                    val: {
                        type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.argument,
                        // value does not include the opening and closing braces.
                        value: value,
                        location: createLocation(openingBracePosition, this.clonePosition()),
                    },
                    err: null,
                };
            }
            // Argument with options: `{name, format, ...}`
            case 44 /* `,` */: {
                this.bump(); // `,`
                this.bumpSpace();
                if (this.isEOF()) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
                }
                return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
            }
            default:
                return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
    };
    /**
     * Advance the parser until the end of the identifier, if it is currently on
     * an identifier character. Return an empty string otherwise.
     */
    Parser.prototype.parseIdentifierIfPossible = function () {
        var startingPosition = this.clonePosition();
        var startOffset = this.offset();
        var value = matchIdentifierAtIndex(this.message, startOffset);
        var endOffset = startOffset + value.length;
        this.bumpTo(endOffset);
        var endPosition = this.clonePosition();
        var location = createLocation(startingPosition, endPosition);
        return { value: value, location: location };
    };
    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {
        var _a;
        // Parse this range:
        // {name, type, style}
        //        ^---^
        var typeStartPosition = this.clonePosition();
        var argType = this.parseIdentifierIfPossible().value;
        var typeEndPosition = this.clonePosition();
        switch (argType) {
            case '':
                // Expecting a style string number, date, time, plural, selectordinal, or select.
                return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
            case 'number':
            case 'date':
            case 'time': {
                // Parse this range:
                // {name, number, style}
                //              ^-------^
                this.bumpSpace();
                var styleAndLocation = null;
                if (this.bumpIf(',')) {
                    this.bumpSpace();
                    var styleStartPosition = this.clonePosition();
                    var result = this.parseSimpleArgStyleIfPossible();
                    if (result.err) {
                        return result;
                    }
                    var style = trimEnd(result.val);
                    if (style.length === 0) {
                        return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
                    }
                    var styleLocation = createLocation(styleStartPosition, this.clonePosition());
                    styleAndLocation = { style: style, styleLocation: styleLocation };
                }
                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
                if (argCloseResult.err) {
                    return argCloseResult;
                }
                var location_1 = createLocation(openingBracePosition, this.clonePosition());
                // Extract style or skeleton
                if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {
                    // Skeleton starts with `::`.
                    var skeleton = trimStart(styleAndLocation.style.slice(2));
                    if (argType === 'number') {
                        var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
                        if (result.err) {
                            return result;
                        }
                        return {
                            val: { type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.number, value: value, location: location_1, style: result.val },
                            err: null,
                        };
                    }
                    else {
                        if (skeleton.length === 0) {
                            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
                        }
                        var style = {
                            type: _types__WEBPACK_IMPORTED_MODULE_1__.SKELETON_TYPE.dateTime,
                            pattern: skeleton,
                            location: styleAndLocation.styleLocation,
                            parsedOptions: this.shouldParseSkeletons
                                ? (0,_formatjs_icu_skeleton_parser__WEBPACK_IMPORTED_MODULE_3__.parseDateTimeSkeleton)(skeleton)
                                : {},
                        };
                        var type = argType === 'date' ? _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.date : _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.time;
                        return {
                            val: { type: type, value: value, location: location_1, style: style },
                            err: null,
                        };
                    }
                }
                // Regular style or no style.
                return {
                    val: {
                        type: argType === 'number'
                            ? _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.number
                            : argType === 'date'
                                ? _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.date
                                : _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.time,
                        value: value,
                        location: location_1,
                        style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null,
                    },
                    err: null,
                };
            }
            case 'plural':
            case 'selectordinal':
            case 'select': {
                // Parse this range:
                // {name, plural, options}
                //              ^---------^
                var typeEndPosition_1 = this.clonePosition();
                this.bumpSpace();
                if (!this.bumpIf(',')) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, typeEndPosition_1)));
                }
                this.bumpSpace();
                // Parse offset:
                // {name, plural, offset:1, options}
                //                ^-----^
                //
                // or the first option:
                //
                // {name, plural, one {...} other {...}}
                //                ^--^
                var identifierAndLocation = this.parseIdentifierIfPossible();
                var pluralOffset = 0;
                if (argType !== 'select' && identifierAndLocation.value === 'offset') {
                    if (!this.bumpIf(':')) {
                        return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
                    }
                    this.bumpSpace();
                    var result = this.tryParseDecimalInteger(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
                    if (result.err) {
                        return result;
                    }
                    // Parse another identifier for option parsing
                    this.bumpSpace();
                    identifierAndLocation = this.parseIdentifierIfPossible();
                    pluralOffset = result.val;
                }
                var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
                if (optionsResult.err) {
                    return optionsResult;
                }
                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
                if (argCloseResult.err) {
                    return argCloseResult;
                }
                var location_2 = createLocation(openingBracePosition, this.clonePosition());
                if (argType === 'select') {
                    return {
                        val: {
                            type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.select,
                            value: value,
                            options: fromEntries(optionsResult.val),
                            location: location_2,
                        },
                        err: null,
                    };
                }
                else {
                    return {
                        val: {
                            type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.plural,
                            value: value,
                            options: fromEntries(optionsResult.val),
                            offset: pluralOffset,
                            pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',
                            location: location_2,
                        },
                        err: null,
                    };
                }
            }
            default:
                return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        }
    };
    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {
        // Parse: {value, number, ::currency/GBP }
        //
        if (this.isEOF() || this.char() !== 125 /* `}` */) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        this.bump(); // `}`
        return { val: true, err: null };
    };
    /**
     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659
     */
    Parser.prototype.parseSimpleArgStyleIfPossible = function () {
        var nestedBraces = 0;
        var startPosition = this.clonePosition();
        while (!this.isEOF()) {
            var ch = this.char();
            switch (ch) {
                case 39 /* `'` */: {
                    // Treat apostrophe as quoting but include it in the style part.
                    // Find the end of the quoted literal text.
                    this.bump();
                    var apostrophePosition = this.clonePosition();
                    if (!this.bumpUntil("'")) {
                        return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
                    }
                    this.bump();
                    break;
                }
                case 123 /* `{` */: {
                    nestedBraces += 1;
                    this.bump();
                    break;
                }
                case 125 /* `}` */: {
                    if (nestedBraces > 0) {
                        nestedBraces -= 1;
                    }
                    else {
                        return {
                            val: this.message.slice(startPosition.offset, this.offset()),
                            err: null,
                        };
                    }
                    break;
                }
                default:
                    this.bump();
                    break;
            }
        }
        return {
            val: this.message.slice(startPosition.offset, this.offset()),
            err: null,
        };
    };
    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {
        var tokens = [];
        try {
            tokens = (0,_formatjs_icu_skeleton_parser__WEBPACK_IMPORTED_MODULE_3__.parseNumberSkeletonFromString)(skeleton);
        }
        catch (e) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_NUMBER_SKELETON, location);
        }
        return {
            val: {
                type: _types__WEBPACK_IMPORTED_MODULE_1__.SKELETON_TYPE.number,
                tokens: tokens,
                location: location,
                parsedOptions: this.shouldParseSkeletons
                    ? (0,_formatjs_icu_skeleton_parser__WEBPACK_IMPORTED_MODULE_3__.parseNumberSkeleton)(tokens)
                    : {},
            },
            err: null,
        };
    };
    /**
     * @param nesting_level The current nesting level of messages.
     *     This can be positive when parsing message fragment in select or plural argument options.
     * @param parent_arg_type The parent argument's type.
     * @param parsed_first_identifier If provided, this is the first identifier-like selector of
     *     the argument. It is a by-product of a previous parsing attempt.
     * @param expecting_close_tag If true, this message is directly or indirectly nested inside
     *     between a pair of opening and closing tags. The nested message will not parse beyond
     *     the closing tag boundary.
     */
    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
        var _a;
        var hasOtherClause = false;
        var options = [];
        var parsedSelectors = new Set();
        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
        // Parse:
        // one {one apple}
        // ^--^
        while (true) {
            if (selector.length === 0) {
                var startPosition = this.clonePosition();
                if (parentArgType !== 'select' && this.bumpIf('=')) {
                    // Try parse `={number}` selector
                    var result = this.tryParseDecimalInteger(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
                    if (result.err) {
                        return result;
                    }
                    selectorLocation = createLocation(startPosition, this.clonePosition());
                    selector = this.message.slice(startPosition.offset, this.offset());
                }
                else {
                    break;
                }
            }
            // Duplicate selector clauses
            if (parsedSelectors.has(selector)) {
                return this.error(parentArgType === 'select'
                    ? _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR
                    : _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
            }
            if (selector === 'other') {
                hasOtherClause = true;
            }
            // Parse:
            // one {one apple}
            //     ^----------^
            this.bumpSpace();
            var openingBracePosition = this.clonePosition();
            if (!this.bumpIf('{')) {
                return this.error(parentArgType === 'select'
                    ? _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT
                    : _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
            if (fragmentResult.err) {
                return fragmentResult;
            }
            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
            if (argCloseResult.err) {
                return argCloseResult;
            }
            options.push([
                selector,
                {
                    value: fragmentResult.val,
                    location: createLocation(openingBracePosition, this.clonePosition()),
                },
            ]);
            // Keep track of the existing selectors
            parsedSelectors.add(selector);
            // Prep next selector clause.
            this.bumpSpace();
            (_a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location);
        }
        if (options.length === 0) {
            return this.error(parentArgType === 'select'
                ? _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR
                : _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
        }
        if (this.requiresOtherClause && !hasOtherClause) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
        }
        return { val: options, err: null };
    };
    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {
        var sign = 1;
        var startingPosition = this.clonePosition();
        if (this.bumpIf('+')) {
        }
        else if (this.bumpIf('-')) {
            sign = -1;
        }
        var hasDigits = false;
        var decimal = 0;
        while (!this.isEOF()) {
            var ch = this.char();
            if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {
                hasDigits = true;
                decimal = decimal * 10 + (ch - 48);
                this.bump();
            }
            else {
                break;
            }
        }
        var location = createLocation(startingPosition, this.clonePosition());
        if (!hasDigits) {
            return this.error(expectNumberError, location);
        }
        decimal *= sign;
        if (!isSafeInteger(decimal)) {
            return this.error(invalidNumberError, location);
        }
        return { val: decimal, err: null };
    };
    Parser.prototype.offset = function () {
        return this.position.offset;
    };
    Parser.prototype.isEOF = function () {
        return this.offset() === this.message.length;
    };
    Parser.prototype.clonePosition = function () {
        // This is much faster than `Object.assign` or spread.
        return {
            offset: this.position.offset,
            line: this.position.line,
            column: this.position.column,
        };
    };
    /**
     * Return the code point at the current position of the parser.
     * Throws if the index is out of bound.
     */
    Parser.prototype.char = function () {
        var offset = this.position.offset;
        if (offset >= this.message.length) {
            throw Error('out of bound');
        }
        var code = codePointAt(this.message, offset);
        if (code === undefined) {
            throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
        }
        return code;
    };
    Parser.prototype.error = function (kind, location) {
        return {
            val: null,
            err: {
                kind: kind,
                message: this.message,
                location: location,
            },
        };
    };
    /** Bump the parser to the next UTF-16 code unit. */
    Parser.prototype.bump = function () {
        if (this.isEOF()) {
            return;
        }
        var code = this.char();
        if (code === 10 /* '\n' */) {
            this.position.line += 1;
            this.position.column = 1;
            this.position.offset += 1;
        }
        else {
            this.position.column += 1;
            // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.
            this.position.offset += code < 0x10000 ? 1 : 2;
        }
    };
    /**
     * If the substring starting at the current position of the parser has
     * the given prefix, then bump the parser to the character immediately
     * following the prefix and return true. Otherwise, don't bump the parser
     * and return false.
     */
    Parser.prototype.bumpIf = function (prefix) {
        if (startsWith(this.message, prefix, this.offset())) {
            for (var i = 0; i < prefix.length; i++) {
                this.bump();
            }
            return true;
        }
        return false;
    };
    /**
     * Bump the parser until the pattern character is found and return `true`.
     * Otherwise bump to the end of the file and return `false`.
     */
    Parser.prototype.bumpUntil = function (pattern) {
        var currentOffset = this.offset();
        var index = this.message.indexOf(pattern, currentOffset);
        if (index >= 0) {
            this.bumpTo(index);
            return true;
        }
        else {
            this.bumpTo(this.message.length);
            return false;
        }
    };
    /**
     * Bump the parser to the target offset.
     * If target offset is beyond the end of the input, bump the parser to the end of the input.
     */
    Parser.prototype.bumpTo = function (targetOffset) {
        if (this.offset() > targetOffset) {
            throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
        }
        targetOffset = Math.min(targetOffset, this.message.length);
        while (true) {
            var offset = this.offset();
            if (offset === targetOffset) {
                break;
            }
            if (offset > targetOffset) {
                throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
            }
            this.bump();
            if (this.isEOF()) {
                break;
            }
        }
    };
    /** advance the parser through all whitespace to the next non-whitespace code unit. */
    Parser.prototype.bumpSpace = function () {
        while (!this.isEOF() && _isWhiteSpace(this.char())) {
            this.bump();
        }
    };
    /**
     * Peek at the *next* Unicode codepoint in the input without advancing the parser.
     * If the input has been exhausted, then this returns null.
     */
    Parser.prototype.peek = function () {
        if (this.isEOF()) {
            return null;
        }
        var code = this.char();
        var offset = this.offset();
        var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));
        return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser;
}());

/**
 * This check if codepoint is alphabet (lower & uppercase)
 * @param codepoint
 * @returns
 */
function _isAlpha(codepoint) {
    return ((codepoint >= 97 && codepoint <= 122) ||
        (codepoint >= 65 && codepoint <= 90));
}
function _isAlphaOrSlash(codepoint) {
    return _isAlpha(codepoint) || codepoint === 47; /* '/' */
}
/** See `parseTag` function docs. */
function _isPotentialElementNameChar(c) {
    return (c === 45 /* '-' */ ||
        c === 46 /* '.' */ ||
        (c >= 48 && c <= 57) /* 0..9 */ ||
        c === 95 /* '_' */ ||
        (c >= 97 && c <= 122) /** a..z */ ||
        (c >= 65 && c <= 90) /* A..Z */ ||
        c == 0xb7 ||
        (c >= 0xc0 && c <= 0xd6) ||
        (c >= 0xd8 && c <= 0xf6) ||
        (c >= 0xf8 && c <= 0x37d) ||
        (c >= 0x37f && c <= 0x1fff) ||
        (c >= 0x200c && c <= 0x200d) ||
        (c >= 0x203f && c <= 0x2040) ||
        (c >= 0x2070 && c <= 0x218f) ||
        (c >= 0x2c00 && c <= 0x2fef) ||
        (c >= 0x3001 && c <= 0xd7ff) ||
        (c >= 0xf900 && c <= 0xfdcf) ||
        (c >= 0xfdf0 && c <= 0xfffd) ||
        (c >= 0x10000 && c <= 0xeffff));
}
/**
 * Code point equivalent of regex `\p{White_Space}`.
 * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt
 */
function _isWhiteSpace(c) {
    return ((c >= 0x0009 && c <= 0x000d) ||
        c === 0x0020 ||
        c === 0x0085 ||
        (c >= 0x200e && c <= 0x200f) ||
        c === 0x2028 ||
        c === 0x2029);
}
/**
 * Code point equivalent of regex `\p{Pattern_Syntax}`.
 * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt
 */
function _isPatternSyntax(c) {
    return ((c >= 0x0021 && c <= 0x0023) ||
        c === 0x0024 ||
        (c >= 0x0025 && c <= 0x0027) ||
        c === 0x0028 ||
        c === 0x0029 ||
        c === 0x002a ||
        c === 0x002b ||
        c === 0x002c ||
        c === 0x002d ||
        (c >= 0x002e && c <= 0x002f) ||
        (c >= 0x003a && c <= 0x003b) ||
        (c >= 0x003c && c <= 0x003e) ||
        (c >= 0x003f && c <= 0x0040) ||
        c === 0x005b ||
        c === 0x005c ||
        c === 0x005d ||
        c === 0x005e ||
        c === 0x0060 ||
        c === 0x007b ||
        c === 0x007c ||
        c === 0x007d ||
        c === 0x007e ||
        c === 0x00a1 ||
        (c >= 0x00a2 && c <= 0x00a5) ||
        c === 0x00a6 ||
        c === 0x00a7 ||
        c === 0x00a9 ||
        c === 0x00ab ||
        c === 0x00ac ||
        c === 0x00ae ||
        c === 0x00b0 ||
        c === 0x00b1 ||
        c === 0x00b6 ||
        c === 0x00bb ||
        c === 0x00bf ||
        c === 0x00d7 ||
        c === 0x00f7 ||
        (c >= 0x2010 && c <= 0x2015) ||
        (c >= 0x2016 && c <= 0x2017) ||
        c === 0x2018 ||
        c === 0x2019 ||
        c === 0x201a ||
        (c >= 0x201b && c <= 0x201c) ||
        c === 0x201d ||
        c === 0x201e ||
        c === 0x201f ||
        (c >= 0x2020 && c <= 0x2027) ||
        (c >= 0x2030 && c <= 0x2038) ||
        c === 0x2039 ||
        c === 0x203a ||
        (c >= 0x203b && c <= 0x203e) ||
        (c >= 0x2041 && c <= 0x2043) ||
        c === 0x2044 ||
        c === 0x2045 ||
        c === 0x2046 ||
        (c >= 0x2047 && c <= 0x2051) ||
        c === 0x2052 ||
        c === 0x2053 ||
        (c >= 0x2055 && c <= 0x205e) ||
        (c >= 0x2190 && c <= 0x2194) ||
        (c >= 0x2195 && c <= 0x2199) ||
        (c >= 0x219a && c <= 0x219b) ||
        (c >= 0x219c && c <= 0x219f) ||
        c === 0x21a0 ||
        (c >= 0x21a1 && c <= 0x21a2) ||
        c === 0x21a3 ||
        (c >= 0x21a4 && c <= 0x21a5) ||
        c === 0x21a6 ||
        (c >= 0x21a7 && c <= 0x21ad) ||
        c === 0x21ae ||
        (c >= 0x21af && c <= 0x21cd) ||
        (c >= 0x21ce && c <= 0x21cf) ||
        (c >= 0x21d0 && c <= 0x21d1) ||
        c === 0x21d2 ||
        c === 0x21d3 ||
        c === 0x21d4 ||
        (c >= 0x21d5 && c <= 0x21f3) ||
        (c >= 0x21f4 && c <= 0x22ff) ||
        (c >= 0x2300 && c <= 0x2307) ||
        c === 0x2308 ||
        c === 0x2309 ||
        c === 0x230a ||
        c === 0x230b ||
        (c >= 0x230c && c <= 0x231f) ||
        (c >= 0x2320 && c <= 0x2321) ||
        (c >= 0x2322 && c <= 0x2328) ||
        c === 0x2329 ||
        c === 0x232a ||
        (c >= 0x232b && c <= 0x237b) ||
        c === 0x237c ||
        (c >= 0x237d && c <= 0x239a) ||
        (c >= 0x239b && c <= 0x23b3) ||
        (c >= 0x23b4 && c <= 0x23db) ||
        (c >= 0x23dc && c <= 0x23e1) ||
        (c >= 0x23e2 && c <= 0x2426) ||
        (c >= 0x2427 && c <= 0x243f) ||
        (c >= 0x2440 && c <= 0x244a) ||
        (c >= 0x244b && c <= 0x245f) ||
        (c >= 0x2500 && c <= 0x25b6) ||
        c === 0x25b7 ||
        (c >= 0x25b8 && c <= 0x25c0) ||
        c === 0x25c1 ||
        (c >= 0x25c2 && c <= 0x25f7) ||
        (c >= 0x25f8 && c <= 0x25ff) ||
        (c >= 0x2600 && c <= 0x266e) ||
        c === 0x266f ||
        (c >= 0x2670 && c <= 0x2767) ||
        c === 0x2768 ||
        c === 0x2769 ||
        c === 0x276a ||
        c === 0x276b ||
        c === 0x276c ||
        c === 0x276d ||
        c === 0x276e ||
        c === 0x276f ||
        c === 0x2770 ||
        c === 0x2771 ||
        c === 0x2772 ||
        c === 0x2773 ||
        c === 0x2774 ||
        c === 0x2775 ||
        (c >= 0x2794 && c <= 0x27bf) ||
        (c >= 0x27c0 && c <= 0x27c4) ||
        c === 0x27c5 ||
        c === 0x27c6 ||
        (c >= 0x27c7 && c <= 0x27e5) ||
        c === 0x27e6 ||
        c === 0x27e7 ||
        c === 0x27e8 ||
        c === 0x27e9 ||
        c === 0x27ea ||
        c === 0x27eb ||
        c === 0x27ec ||
        c === 0x27ed ||
        c === 0x27ee ||
        c === 0x27ef ||
        (c >= 0x27f0 && c <= 0x27ff) ||
        (c >= 0x2800 && c <= 0x28ff) ||
        (c >= 0x2900 && c <= 0x2982) ||
        c === 0x2983 ||
        c === 0x2984 ||
        c === 0x2985 ||
        c === 0x2986 ||
        c === 0x2987 ||
        c === 0x2988 ||
        c === 0x2989 ||
        c === 0x298a ||
        c === 0x298b ||
        c === 0x298c ||
        c === 0x298d ||
        c === 0x298e ||
        c === 0x298f ||
        c === 0x2990 ||
        c === 0x2991 ||
        c === 0x2992 ||
        c === 0x2993 ||
        c === 0x2994 ||
        c === 0x2995 ||
        c === 0x2996 ||
        c === 0x2997 ||
        c === 0x2998 ||
        (c >= 0x2999 && c <= 0x29d7) ||
        c === 0x29d8 ||
        c === 0x29d9 ||
        c === 0x29da ||
        c === 0x29db ||
        (c >= 0x29dc && c <= 0x29fb) ||
        c === 0x29fc ||
        c === 0x29fd ||
        (c >= 0x29fe && c <= 0x2aff) ||
        (c >= 0x2b00 && c <= 0x2b2f) ||
        (c >= 0x2b30 && c <= 0x2b44) ||
        (c >= 0x2b45 && c <= 0x2b46) ||
        (c >= 0x2b47 && c <= 0x2b4c) ||
        (c >= 0x2b4d && c <= 0x2b73) ||
        (c >= 0x2b74 && c <= 0x2b75) ||
        (c >= 0x2b76 && c <= 0x2b95) ||
        c === 0x2b96 ||
        (c >= 0x2b97 && c <= 0x2bff) ||
        (c >= 0x2e00 && c <= 0x2e01) ||
        c === 0x2e02 ||
        c === 0x2e03 ||
        c === 0x2e04 ||
        c === 0x2e05 ||
        (c >= 0x2e06 && c <= 0x2e08) ||
        c === 0x2e09 ||
        c === 0x2e0a ||
        c === 0x2e0b ||
        c === 0x2e0c ||
        c === 0x2e0d ||
        (c >= 0x2e0e && c <= 0x2e16) ||
        c === 0x2e17 ||
        (c >= 0x2e18 && c <= 0x2e19) ||
        c === 0x2e1a ||
        c === 0x2e1b ||
        c === 0x2e1c ||
        c === 0x2e1d ||
        (c >= 0x2e1e && c <= 0x2e1f) ||
        c === 0x2e20 ||
        c === 0x2e21 ||
        c === 0x2e22 ||
        c === 0x2e23 ||
        c === 0x2e24 ||
        c === 0x2e25 ||
        c === 0x2e26 ||
        c === 0x2e27 ||
        c === 0x2e28 ||
        c === 0x2e29 ||
        (c >= 0x2e2a && c <= 0x2e2e) ||
        c === 0x2e2f ||
        (c >= 0x2e30 && c <= 0x2e39) ||
        (c >= 0x2e3a && c <= 0x2e3b) ||
        (c >= 0x2e3c && c <= 0x2e3f) ||
        c === 0x2e40 ||
        c === 0x2e41 ||
        c === 0x2e42 ||
        (c >= 0x2e43 && c <= 0x2e4f) ||
        (c >= 0x2e50 && c <= 0x2e51) ||
        c === 0x2e52 ||
        (c >= 0x2e53 && c <= 0x2e7f) ||
        (c >= 0x3001 && c <= 0x3003) ||
        c === 0x3008 ||
        c === 0x3009 ||
        c === 0x300a ||
        c === 0x300b ||
        c === 0x300c ||
        c === 0x300d ||
        c === 0x300e ||
        c === 0x300f ||
        c === 0x3010 ||
        c === 0x3011 ||
        (c >= 0x3012 && c <= 0x3013) ||
        c === 0x3014 ||
        c === 0x3015 ||
        c === 0x3016 ||
        c === 0x3017 ||
        c === 0x3018 ||
        c === 0x3019 ||
        c === 0x301a ||
        c === 0x301b ||
        c === 0x301c ||
        c === 0x301d ||
        (c >= 0x301e && c <= 0x301f) ||
        c === 0x3020 ||
        c === 0x3030 ||
        c === 0xfd3e ||
        c === 0xfd3f ||
        (c >= 0xfe45 && c <= 0xfe46));
}


/***/ }),

/***/ "../node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SPACE_SEPARATOR_REGEX": () => (/* binding */ SPACE_SEPARATOR_REGEX),
/* harmony export */   "WHITE_SPACE_REGEX": () => (/* binding */ WHITE_SPACE_REGEX)
/* harmony export */ });
// @generated from regex-gen.ts
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/;


/***/ }),

/***/ "../node_modules/@formatjs/icu-messageformat-parser/lib/types.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@formatjs/icu-messageformat-parser/lib/types.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SKELETON_TYPE": () => (/* binding */ SKELETON_TYPE),
/* harmony export */   "TYPE": () => (/* binding */ TYPE),
/* harmony export */   "createLiteralElement": () => (/* binding */ createLiteralElement),
/* harmony export */   "createNumberElement": () => (/* binding */ createNumberElement),
/* harmony export */   "isArgumentElement": () => (/* binding */ isArgumentElement),
/* harmony export */   "isDateElement": () => (/* binding */ isDateElement),
/* harmony export */   "isDateTimeSkeleton": () => (/* binding */ isDateTimeSkeleton),
/* harmony export */   "isLiteralElement": () => (/* binding */ isLiteralElement),
/* harmony export */   "isNumberElement": () => (/* binding */ isNumberElement),
/* harmony export */   "isNumberSkeleton": () => (/* binding */ isNumberSkeleton),
/* harmony export */   "isPluralElement": () => (/* binding */ isPluralElement),
/* harmony export */   "isPoundElement": () => (/* binding */ isPoundElement),
/* harmony export */   "isSelectElement": () => (/* binding */ isSelectElement),
/* harmony export */   "isTagElement": () => (/* binding */ isTagElement),
/* harmony export */   "isTimeElement": () => (/* binding */ isTimeElement)
/* harmony export */ });
var TYPE;
(function (TYPE) {
    /**
     * Raw text
     */
    TYPE[TYPE["literal"] = 0] = "literal";
    /**
     * Variable w/o any format, e.g `var` in `this is a {var}`
     */
    TYPE[TYPE["argument"] = 1] = "argument";
    /**
     * Variable w/ number format
     */
    TYPE[TYPE["number"] = 2] = "number";
    /**
     * Variable w/ date format
     */
    TYPE[TYPE["date"] = 3] = "date";
    /**
     * Variable w/ time format
     */
    TYPE[TYPE["time"] = 4] = "time";
    /**
     * Variable w/ select format
     */
    TYPE[TYPE["select"] = 5] = "select";
    /**
     * Variable w/ plural format
     */
    TYPE[TYPE["plural"] = 6] = "plural";
    /**
     * Only possible within plural argument.
     * This is the `#` symbol that will be substituted with the count.
     */
    TYPE[TYPE["pound"] = 7] = "pound";
    /**
     * XML-like tag
     */
    TYPE[TYPE["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function (SKELETON_TYPE) {
    SKELETON_TYPE[SKELETON_TYPE["number"] = 0] = "number";
    SKELETON_TYPE[SKELETON_TYPE["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
/**
 * Type Guards
 */
function isLiteralElement(el) {
    return el.type === TYPE.literal;
}
function isArgumentElement(el) {
    return el.type === TYPE.argument;
}
function isNumberElement(el) {
    return el.type === TYPE.number;
}
function isDateElement(el) {
    return el.type === TYPE.date;
}
function isTimeElement(el) {
    return el.type === TYPE.time;
}
function isSelectElement(el) {
    return el.type === TYPE.select;
}
function isPluralElement(el) {
    return el.type === TYPE.plural;
}
function isPoundElement(el) {
    return el.type === TYPE.pound;
}
function isTagElement(el) {
    return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);
}
function createLiteralElement(value) {
    return {
        type: TYPE.literal,
        value: value,
    };
}
function createNumberElement(value, style) {
    return {
        type: TYPE.number,
        value: value,
        style: style,
    };
}


/***/ }),

/***/ "../node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseDateTimeSkeleton": () => (/* binding */ parseDateTimeSkeleton)
/* harmony export */ });
/**
 * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js
 * with some tweaks
 */
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
/**
 * Parse Date time skeleton into Intl.DateTimeFormatOptions
 * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * @public
 * @param skeleton skeleton string
 */
function parseDateTimeSkeleton(skeleton) {
    var result = {};
    skeleton.replace(DATE_TIME_REGEX, function (match) {
        var len = match.length;
        switch (match[0]) {
            // Era
            case 'G':
                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';
                break;
            // Year
            case 'y':
                result.year = len === 2 ? '2-digit' : 'numeric';
                break;
            case 'Y':
            case 'u':
            case 'U':
            case 'r':
                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');
            // Quarter
            case 'q':
            case 'Q':
                throw new RangeError('`q/Q` (quarter) patterns are not supported');
            // Month
            case 'M':
            case 'L':
                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];
                break;
            // Week
            case 'w':
            case 'W':
                throw new RangeError('`w/W` (week) patterns are not supported');
            case 'd':
                result.day = ['numeric', '2-digit'][len - 1];
                break;
            case 'D':
            case 'F':
            case 'g':
                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');
            // Weekday
            case 'E':
                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';
                break;
            case 'e':
                if (len < 4) {
                    throw new RangeError('`e..eee` (weekday) patterns are not supported');
                }
                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];
                break;
            case 'c':
                if (len < 4) {
                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');
                }
                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];
                break;
            // Period
            case 'a': // AM, PM
                result.hour12 = true;
                break;
            case 'b': // am, pm, noon, midnight
            case 'B': // flexible day periods
                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');
            // Hour
            case 'h':
                result.hourCycle = 'h12';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'H':
                result.hourCycle = 'h23';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'K':
                result.hourCycle = 'h11';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'k':
                result.hourCycle = 'h24';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'j':
            case 'J':
            case 'C':
                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');
            // Minute
            case 'm':
                result.minute = ['numeric', '2-digit'][len - 1];
                break;
            // Second
            case 's':
                result.second = ['numeric', '2-digit'][len - 1];
                break;
            case 'S':
            case 'A':
                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');
            // Zone
            case 'z': // 1..3, 4: specific non-location format
                result.timeZoneName = len < 4 ? 'short' : 'long';
                break;
            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats
            case 'O': // 1, 4: miliseconds in day short, long
            case 'v': // 1, 4: generic non-location format
            case 'V': // 1, 2, 3, 4: time zone ID or city
            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats
            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats
                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');
        }
        return '';
    });
    return result;
}


/***/ }),

/***/ "../node_modules/@formatjs/icu-skeleton-parser/lib/index.js":
/*!******************************************************************!*\
  !*** ../node_modules/@formatjs/icu-skeleton-parser/lib/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseDateTimeSkeleton": () => (/* reexport safe */ _date_time__WEBPACK_IMPORTED_MODULE_0__.parseDateTimeSkeleton),
/* harmony export */   "parseNumberSkeleton": () => (/* reexport safe */ _number__WEBPACK_IMPORTED_MODULE_1__.parseNumberSkeleton),
/* harmony export */   "parseNumberSkeletonFromString": () => (/* reexport safe */ _number__WEBPACK_IMPORTED_MODULE_1__.parseNumberSkeletonFromString)
/* harmony export */ });
/* harmony import */ var _date_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date-time */ "../node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number */ "../node_modules/@formatjs/icu-skeleton-parser/lib/number.js");




/***/ }),

/***/ "../node_modules/@formatjs/icu-skeleton-parser/lib/number.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@formatjs/icu-skeleton-parser/lib/number.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseNumberSkeleton": () => (/* binding */ parseNumberSkeleton),
/* harmony export */   "parseNumberSkeletonFromString": () => (/* binding */ parseNumberSkeletonFromString)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _regex_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.generated */ "../node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js");


function parseNumberSkeletonFromString(skeleton) {
    if (skeleton.length === 0) {
        throw new Error('Number skeleton cannot be empty');
    }
    // Parse the skeleton
    var stringTokens = skeleton
        .split(_regex_generated__WEBPACK_IMPORTED_MODULE_0__.WHITE_SPACE_REGEX)
        .filter(function (x) { return x.length > 0; });
    var tokens = [];
    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
        var stringToken = stringTokens_1[_i];
        var stemAndOptions = stringToken.split('/');
        if (stemAndOptions.length === 0) {
            throw new Error('Invalid number skeleton');
        }
        var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {
            var option = options_1[_a];
            if (option.length === 0) {
                throw new Error('Invalid number skeleton');
            }
        }
        tokens.push({ stem: stem, options: options });
    }
    return tokens;
}
function icuUnitToEcma(unit) {
    return unit.replace(/^(.*?)-/, '');
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
    var result = {};
    if (str[str.length - 1] === 'r') {
        result.roundingPriority = 'morePrecision';
    }
    else if (str[str.length - 1] === 's') {
        result.roundingPriority = 'lessPrecision';
    }
    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {
        // @@@ case
        if (typeof g2 !== 'string') {
            result.minimumSignificantDigits = g1.length;
            result.maximumSignificantDigits = g1.length;
        }
        // @@@+ case
        else if (g2 === '+') {
            result.minimumSignificantDigits = g1.length;
        }
        // .### case
        else if (g1[0] === '#') {
            result.maximumSignificantDigits = g1.length;
        }
        // .@@## or .@@@ case
        else {
            result.minimumSignificantDigits = g1.length;
            result.maximumSignificantDigits =
                g1.length + (typeof g2 === 'string' ? g2.length : 0);
        }
        return '';
    });
    return result;
}
function parseSign(str) {
    switch (str) {
        case 'sign-auto':
            return {
                signDisplay: 'auto',
            };
        case 'sign-accounting':
        case '()':
            return {
                currencySign: 'accounting',
            };
        case 'sign-always':
        case '+!':
            return {
                signDisplay: 'always',
            };
        case 'sign-accounting-always':
        case '()!':
            return {
                signDisplay: 'always',
                currencySign: 'accounting',
            };
        case 'sign-except-zero':
        case '+?':
            return {
                signDisplay: 'exceptZero',
            };
        case 'sign-accounting-except-zero':
        case '()?':
            return {
                signDisplay: 'exceptZero',
                currencySign: 'accounting',
            };
        case 'sign-never':
        case '+_':
            return {
                signDisplay: 'never',
            };
    }
}
function parseConciseScientificAndEngineeringStem(stem) {
    // Engineering
    var result;
    if (stem[0] === 'E' && stem[1] === 'E') {
        result = {
            notation: 'engineering',
        };
        stem = stem.slice(2);
    }
    else if (stem[0] === 'E') {
        result = {
            notation: 'scientific',
        };
        stem = stem.slice(1);
    }
    if (result) {
        var signDisplay = stem.slice(0, 2);
        if (signDisplay === '+!') {
            result.signDisplay = 'always';
            stem = stem.slice(2);
        }
        else if (signDisplay === '+?') {
            result.signDisplay = 'exceptZero';
            stem = stem.slice(2);
        }
        if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
            throw new Error('Malformed concise eng/scientific notation');
        }
        result.minimumIntegerDigits = stem.length;
    }
    return result;
}
function parseNotationOptions(opt) {
    var result = {};
    var signOpts = parseSign(opt);
    if (signOpts) {
        return signOpts;
    }
    return result;
}
/**
 * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options
 */
function parseNumberSkeleton(tokens) {
    var result = {};
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        switch (token.stem) {
            case 'percent':
            case '%':
                result.style = 'percent';
                continue;
            case '%x100':
                result.style = 'percent';
                result.scale = 100;
                continue;
            case 'currency':
                result.style = 'currency';
                result.currency = token.options[0];
                continue;
            case 'group-off':
            case ',_':
                result.useGrouping = false;
                continue;
            case 'precision-integer':
            case '.':
                result.maximumFractionDigits = 0;
                continue;
            case 'measure-unit':
            case 'unit':
                result.style = 'unit';
                result.unit = icuUnitToEcma(token.options[0]);
                continue;
            case 'compact-short':
            case 'K':
                result.notation = 'compact';
                result.compactDisplay = 'short';
                continue;
            case 'compact-long':
            case 'KK':
                result.notation = 'compact';
                result.compactDisplay = 'long';
                continue;
            case 'scientific':
                result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, all), parseNotationOptions(opt))); }, {}));
                continue;
            case 'engineering':
                result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, all), parseNotationOptions(opt))); }, {}));
                continue;
            case 'notation-simple':
                result.notation = 'standard';
                continue;
            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h
            case 'unit-width-narrow':
                result.currencyDisplay = 'narrowSymbol';
                result.unitDisplay = 'narrow';
                continue;
            case 'unit-width-short':
                result.currencyDisplay = 'code';
                result.unitDisplay = 'short';
                continue;
            case 'unit-width-full-name':
                result.currencyDisplay = 'name';
                result.unitDisplay = 'long';
                continue;
            case 'unit-width-iso-code':
                result.currencyDisplay = 'symbol';
                continue;
            case 'scale':
                result.scale = parseFloat(token.options[0]);
                continue;
            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width
            case 'integer-width':
                if (token.options.length > 1) {
                    throw new RangeError('integer-width stems only accept a single optional option');
                }
                token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {
                    if (g1) {
                        result.minimumIntegerDigits = g2.length;
                    }
                    else if (g3 && g4) {
                        throw new Error('We currently do not support maximum integer digits');
                    }
                    else if (g5) {
                        throw new Error('We currently do not support exact integer digits');
                    }
                    return '';
                });
                continue;
        }
        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width
        if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
            result.minimumIntegerDigits = token.stem.length;
            continue;
        }
        if (FRACTION_PRECISION_REGEX.test(token.stem)) {
            // Precision
            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision
            // precision-integer case
            if (token.options.length > 1) {
                throw new RangeError('Fraction-precision stems only accept a single optional option');
            }
            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {
                // .000* case (before ICU67 it was .000+)
                if (g2 === '*') {
                    result.minimumFractionDigits = g1.length;
                }
                // .### case
                else if (g3 && g3[0] === '#') {
                    result.maximumFractionDigits = g3.length;
                }
                // .00## case
                else if (g4 && g5) {
                    result.minimumFractionDigits = g4.length;
                    result.maximumFractionDigits = g4.length + g5.length;
                }
                else {
                    result.minimumFractionDigits = g1.length;
                    result.maximumFractionDigits = g1.length;
                }
                return '';
            });
            var opt = token.options[0];
            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#trailing-zero-display
            if (opt === 'w') {
                result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), { trailingZeroDisplay: 'stripIfInteger' });
            }
            else if (opt) {
                result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), parseSignificantPrecision(opt));
            }
            continue;
        }
        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision
        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
            result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), parseSignificantPrecision(token.stem));
            continue;
        }
        var signOpts = parseSign(token.stem);
        if (signOpts) {
            result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), signOpts);
        }
        var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
        if (conciseScientificAndEngineeringOpts) {
            result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), conciseScientificAndEngineeringOpts);
        }
    }
    return result;
}


/***/ }),

/***/ "../node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WHITE_SPACE_REGEX": () => (/* binding */ WHITE_SPACE_REGEX)
/* harmony export */ });
// @generated from regex-gen.ts
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;


/***/ }),

/***/ "../node_modules/@internationalized/date/dist/module.js":
/*!**************************************************************!*\
  !*** ../node_modules/@internationalized/date/dist/module.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BuddhistCalendar": () => (/* binding */ BuddhistCalendar),
/* harmony export */   "CalendarDate": () => (/* binding */ CalendarDate),
/* harmony export */   "CalendarDateTime": () => (/* binding */ CalendarDateTime),
/* harmony export */   "CopticCalendar": () => (/* binding */ CopticCalendar),
/* harmony export */   "DateFormatter": () => (/* binding */ DateFormatter),
/* harmony export */   "EthiopicAmeteAlemCalendar": () => (/* binding */ EthiopicAmeteAlemCalendar),
/* harmony export */   "EthiopicCalendar": () => (/* binding */ EthiopicCalendar),
/* harmony export */   "GregorianCalendar": () => (/* binding */ GregorianCalendar),
/* harmony export */   "HebrewCalendar": () => (/* binding */ HebrewCalendar),
/* harmony export */   "IndianCalendar": () => (/* binding */ IndianCalendar),
/* harmony export */   "IslamicCivilCalendar": () => (/* binding */ IslamicCivilCalendar),
/* harmony export */   "IslamicTabularCalendar": () => (/* binding */ IslamicTabularCalendar),
/* harmony export */   "IslamicUmalquraCalendar": () => (/* binding */ IslamicUmalquraCalendar),
/* harmony export */   "JapaneseCalendar": () => (/* binding */ JapaneseCalendar),
/* harmony export */   "PersianCalendar": () => (/* binding */ PersianCalendar),
/* harmony export */   "TaiwanCalendar": () => (/* binding */ TaiwanCalendar),
/* harmony export */   "Time": () => (/* binding */ Time),
/* harmony export */   "ZonedDateTime": () => (/* binding */ ZonedDateTime),
/* harmony export */   "compareDate": () => (/* binding */ compareDate),
/* harmony export */   "compareTime": () => (/* binding */ compareTime),
/* harmony export */   "createCalendar": () => (/* binding */ createCalendar),
/* harmony export */   "dateTimeToString": () => (/* binding */ dateTimeToString),
/* harmony export */   "dateToString": () => (/* binding */ dateToString),
/* harmony export */   "endOfMonth": () => (/* binding */ endOfMonth),
/* harmony export */   "endOfWeek": () => (/* binding */ endOfWeek),
/* harmony export */   "endOfYear": () => (/* binding */ endOfYear),
/* harmony export */   "epochFromDate": () => (/* binding */ epochFromDate),
/* harmony export */   "fromAbsolute": () => (/* binding */ fromAbsolute),
/* harmony export */   "fromDate": () => (/* binding */ fromDate),
/* harmony export */   "fromDateToLocal": () => (/* binding */ fromDateToLocal),
/* harmony export */   "getDayOfWeek": () => (/* binding */ getDayOfWeek),
/* harmony export */   "getHoursInDay": () => (/* binding */ getHoursInDay),
/* harmony export */   "getLocalTimeZone": () => (/* binding */ getLocalTimeZone),
/* harmony export */   "getMinimumDayInMonth": () => (/* binding */ getMinimumDayInMonth),
/* harmony export */   "getMinimumMonthInYear": () => (/* binding */ getMinimumMonthInYear),
/* harmony export */   "getTimeZoneOffset": () => (/* binding */ getTimeZoneOffset),
/* harmony export */   "getWeeksInMonth": () => (/* binding */ getWeeksInMonth),
/* harmony export */   "isEqualDay": () => (/* binding */ isEqualDay),
/* harmony export */   "isEqualMonth": () => (/* binding */ isEqualMonth),
/* harmony export */   "isEqualYear": () => (/* binding */ isEqualYear),
/* harmony export */   "isSameDay": () => (/* binding */ isSameDay),
/* harmony export */   "isSameMonth": () => (/* binding */ isSameMonth),
/* harmony export */   "isSameYear": () => (/* binding */ isSameYear),
/* harmony export */   "isToday": () => (/* binding */ isToday),
/* harmony export */   "maxDate": () => (/* binding */ maxDate),
/* harmony export */   "minDate": () => (/* binding */ minDate),
/* harmony export */   "now": () => (/* binding */ now),
/* harmony export */   "parseAbsolute": () => (/* binding */ parseAbsolute),
/* harmony export */   "parseAbsoluteToLocal": () => (/* binding */ parseAbsoluteToLocal),
/* harmony export */   "parseDate": () => (/* binding */ parseDate),
/* harmony export */   "parseDateTime": () => (/* binding */ parseDateTime),
/* harmony export */   "parseTime": () => (/* binding */ parseTime),
/* harmony export */   "parseZonedDateTime": () => (/* binding */ parseZonedDateTime),
/* harmony export */   "possibleAbsolutes": () => (/* binding */ possibleAbsolutes),
/* harmony export */   "startOfMonth": () => (/* binding */ startOfMonth),
/* harmony export */   "startOfWeek": () => (/* binding */ startOfWeek),
/* harmony export */   "startOfYear": () => (/* binding */ startOfYear),
/* harmony export */   "timeToString": () => (/* binding */ timeToString),
/* harmony export */   "toAbsolute": () => (/* binding */ toAbsolute),
/* harmony export */   "toCalendar": () => (/* binding */ toCalendar),
/* harmony export */   "toCalendarDate": () => (/* binding */ toCalendarDate),
/* harmony export */   "toCalendarDateTime": () => (/* binding */ toCalendarDateTime),
/* harmony export */   "toDate": () => (/* binding */ toDate),
/* harmony export */   "toDateFields": () => (/* binding */ toDateFields),
/* harmony export */   "toLocalTimeZone": () => (/* binding */ toLocalTimeZone),
/* harmony export */   "toTime": () => (/* binding */ toTime),
/* harmony export */   "toTimeFields": () => (/* binding */ toTimeFields),
/* harmony export */   "toTimeZone": () => (/* binding */ toTimeZone),
/* harmony export */   "toZoned": () => (/* binding */ toZoned),
/* harmony export */   "today": () => (/* binding */ today),
/* harmony export */   "zonedDateTimeToString": () => (/* binding */ zonedDateTimeToString),
/* harmony export */   "zonedToDate": () => (/* binding */ zonedToDate)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classPrivateFieldLooseKey */ "../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js");



/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
// Data from https://github.com/unicode-cldr/cldr-core/blob/master/supplemental/weekData.json
// Locales starting on Sunday have been removed for compression.
const $a895780b391a18bdc653c6a504739e8$export$weekStartData = {
  '001': 1,
  AD: 1,
  AE: 6,
  AF: 6,
  AI: 1,
  AL: 1,
  AM: 1,
  AN: 1,
  AT: 1,
  AX: 1,
  AZ: 1,
  BA: 1,
  BE: 1,
  BG: 1,
  BH: 6,
  BM: 1,
  BN: 1,
  BY: 1,
  CH: 1,
  CL: 1,
  CM: 1,
  CR: 1,
  CY: 1,
  CZ: 1,
  DE: 1,
  DJ: 6,
  DK: 1,
  DZ: 6,
  EC: 1,
  EE: 1,
  EG: 6,
  ES: 1,
  FI: 1,
  FJ: 1,
  FO: 1,
  FR: 1,
  GB: 1,
  GE: 1,
  GF: 1,
  GP: 1,
  GR: 1,
  HR: 1,
  HU: 1,
  IE: 1,
  IQ: 6,
  IR: 6,
  IS: 1,
  IT: 1,
  JO: 6,
  KG: 1,
  KW: 6,
  KZ: 1,
  LB: 1,
  LI: 1,
  LK: 1,
  LT: 1,
  LU: 1,
  LV: 1,
  LY: 6,
  MC: 1,
  MD: 1,
  ME: 1,
  MK: 1,
  MN: 1,
  MQ: 1,
  MV: 5,
  MY: 1,
  NL: 1,
  NO: 1,
  NZ: 1,
  OM: 6,
  PL: 1,
  QA: 6,
  RE: 1,
  RO: 1,
  RS: 1,
  RU: 1,
  SD: 6,
  SE: 1,
  SI: 1,
  SK: 1,
  SM: 1,
  SY: 6,
  TJ: 1,
  TM: 1,
  TR: 1,
  UA: 1,
  UY: 1,
  UZ: 1,
  VA: 1,
  VN: 1,
  XK: 1
};
function isSameDay(a, b) {
  b = toCalendar(b, a.calendar);
  return a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;
}
function isSameMonth(a, b) {
  b = toCalendar(b, a.calendar); // In the Japanese calendar, months can span multiple eras/years, so only compare the first of the month.

  a = startOfMonth(a);
  b = startOfMonth(b);
  return a.era === b.era && a.year === b.year && a.month === b.month;
}
function isSameYear(a, b) {
  b = toCalendar(b, a.calendar);
  a = startOfYear(a);
  b = startOfYear(b);
  return a.era === b.era && a.year === b.year;
}
function isEqualDay(a, b) {
  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;
}
function isEqualMonth(a, b) {
  a = startOfMonth(a);
  b = startOfMonth(b);
  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month;
}
function isEqualYear(a, b) {
  a = startOfYear(a);
  b = startOfYear(b);
  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year;
}
function isToday(date, timeZone) {
  return isSameDay(date, today(timeZone));
}
function getDayOfWeek(date, locale) {
  let julian = date.calendar.toJulianDay(date); // If julian is negative, then julian % 7 will be negative, so we adjust
  // accordingly.  Julian day 0 is Monday.

  let dayOfWeek = Math.ceil(julian + 1 - $e027b4c65f8a8a64bf868330c10585e$var$getWeekStart(locale)) % 7;

  if (dayOfWeek < 0) {
    dayOfWeek += 7;
  }

  return dayOfWeek;
}
function now(timeZone) {
  return fromAbsolute(Date.now(), timeZone);
}
function today(timeZone) {
  return toCalendarDate(now(timeZone));
}
function compareDate(a, b) {
  return a.calendar.toJulianDay(a) - b.calendar.toJulianDay(b);
}
function compareTime(a, b) {
  return $e027b4c65f8a8a64bf868330c10585e$var$timeToMs(a) - $e027b4c65f8a8a64bf868330c10585e$var$timeToMs(b);
}

function $e027b4c65f8a8a64bf868330c10585e$var$timeToMs(a) {
  return a.hour * 60 * 60 * 1000 + a.minute * 60 * 1000 + a.second * 1000 + a.millisecond;
}

function getHoursInDay(a, timeZone) {
  let ms = toAbsolute(a, timeZone);
  let tomorrow = a.add({
    days: 1
  });
  let tomorrowMs = toAbsolute(tomorrow, timeZone);
  return (tomorrowMs - ms) / 3600000;
}
let $e027b4c65f8a8a64bf868330c10585e$var$localTimeZone = null;
function getLocalTimeZone() {
  // TODO: invalidate this somehow?
  if ($e027b4c65f8a8a64bf868330c10585e$var$localTimeZone == null) {
    $e027b4c65f8a8a64bf868330c10585e$var$localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;
  }

  return $e027b4c65f8a8a64bf868330c10585e$var$localTimeZone;
}
function startOfMonth(date) {
  // Use `subtract` instead of `set` so we don't get constrained in an era.
  return date.subtract({
    days: date.day - 1
  });
}
function endOfMonth(date) {
  return date.add({
    days: date.calendar.getDaysInMonth(date) - date.day
  });
}
function startOfYear(date) {
  return startOfMonth(date.subtract({
    months: date.month - 1
  }));
}
function endOfYear(date) {
  return endOfMonth(date.add({
    months: date.calendar.getMonthsInYear(date) - date.month
  }));
}
function getMinimumMonthInYear(date) {
  if (date.calendar.getMinimumMonthInYear) {
    return date.calendar.getMinimumMonthInYear(date);
  }

  return 1;
}
function getMinimumDayInMonth(date) {
  if (date.calendar.getMinimumDayInMonth) {
    return date.calendar.getMinimumDayInMonth(date);
  }

  return 1;
}
function startOfWeek(date, locale) {
  let dayOfWeek = getDayOfWeek(date, locale);
  return date.subtract({
    days: dayOfWeek
  });
}
function endOfWeek(date, locale) {
  return startOfWeek(date, locale).add({
    days: 6
  });
}
const $e027b4c65f8a8a64bf868330c10585e$var$cachedRegions = new Map();

function $e027b4c65f8a8a64bf868330c10585e$var$getRegion(locale) {
  // If the Intl.Locale API is available, use it to get the region for the locale.
  // @ts-ignore
  if (Intl.Locale) {
    // Constructing an Intl.Locale is expensive, so cache the result.
    let region = $e027b4c65f8a8a64bf868330c10585e$var$cachedRegions.get(locale);

    if (!region) {
      // @ts-ignore
      region = new Intl.Locale(locale).maximize().region;
      $e027b4c65f8a8a64bf868330c10585e$var$cachedRegions.set(locale, region);
    }

    return region;
  } // If not, just try splitting the string.
  // If the second part of the locale string is 'u',
  // then this is a unicode extension, so ignore it.
  // Otherwise, it should be the region.


  let part = locale.split('-')[1];
  return part === 'u' ? null : part;
}

function $e027b4c65f8a8a64bf868330c10585e$var$getWeekStart(locale) {
  // TODO: use Intl.Locale for this once browsers support the weekInfo property
  // https://github.com/tc39/proposal-intl-locale-info
  let region = $e027b4c65f8a8a64bf868330c10585e$var$getRegion(locale);
  return $a895780b391a18bdc653c6a504739e8$export$weekStartData[region] || 0;
}

function getWeeksInMonth(date, locale) {
  let days = date.calendar.getDaysInMonth(date);
  return Math.ceil((getDayOfWeek(startOfMonth(date), locale) + days) / 7);
}
function minDate(a, b) {
  return a.compare(b) <= 0 ? a : b;
}
function maxDate(a, b) {
  return a.compare(b) >= 0 ? a : b;
}

function $e69ae7432d03ee6ff5aa642daa3d5d3$export$mod(amount, numerator) {
  return amount - numerator * Math.floor(amount / numerator);
}

const $d9ab185420a4ffb38f7504d41a330b3a$var$EPOCH = 1721426; // 001/01/03 Julian C.E.

function $d9ab185420a4ffb38f7504d41a330b3a$export$gregorianToJulianDay(year, month, day) {
  let y1 = year - 1;
  let monthOffset = -2;

  if (month <= 2) {
    monthOffset = 0;
  } else if ($d9ab185420a4ffb38f7504d41a330b3a$export$isLeapYear(year)) {
    monthOffset = -1;
  }

  return $d9ab185420a4ffb38f7504d41a330b3a$var$EPOCH - 1 + 365 * y1 + Math.floor(y1 / 4) - Math.floor(y1 / 100) + Math.floor(y1 / 400) + Math.floor((367 * month - 362) / 12 + monthOffset + day);
}

function $d9ab185420a4ffb38f7504d41a330b3a$export$isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}

const $d9ab185420a4ffb38f7504d41a330b3a$var$daysInMonth = {
  standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
  leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
};
class GregorianCalendar {
  constructor() {
    this.identifier = 'gregory';
  }

  fromJulianDay(jd) {
    let jd0 = jd;
    let depoch = jd0 - $d9ab185420a4ffb38f7504d41a330b3a$var$EPOCH;
    let quadricent = Math.floor(depoch / 146097);
    let dqc = $e69ae7432d03ee6ff5aa642daa3d5d3$export$mod(depoch, 146097);
    let cent = Math.floor(dqc / 36524);
    let dcent = $e69ae7432d03ee6ff5aa642daa3d5d3$export$mod(dqc, 36524);
    let quad = Math.floor(dcent / 1461);
    let dquad = $e69ae7432d03ee6ff5aa642daa3d5d3$export$mod(dcent, 1461);
    let yindex = Math.floor(dquad / 365);
    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);
    let yearDay = jd0 - $d9ab185420a4ffb38f7504d41a330b3a$export$gregorianToJulianDay(year, 1, 1);
    let leapAdj = 2;

    if (jd0 < $d9ab185420a4ffb38f7504d41a330b3a$export$gregorianToJulianDay(year, 3, 1)) {
      leapAdj = 0;
    } else if ($d9ab185420a4ffb38f7504d41a330b3a$export$isLeapYear(year)) {
      leapAdj = 1;
    }

    let month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);
    let day = jd0 - $d9ab185420a4ffb38f7504d41a330b3a$export$gregorianToJulianDay(year, month, 1) + 1;
    return new CalendarDate(this, year, month, day);
  }

  toJulianDay(date) {
    return $d9ab185420a4ffb38f7504d41a330b3a$export$gregorianToJulianDay(date.year, date.month, date.day);
  }

  getDaysInMonth(date) {
    return $d9ab185420a4ffb38f7504d41a330b3a$var$daysInMonth[$d9ab185420a4ffb38f7504d41a330b3a$export$isLeapYear(date.year) ? 'leapyear' : 'standard'][date.month - 1];
  } // eslint-disable-next-line @typescript-eslint/no-unused-vars


  getMonthsInYear(date) {
    return 12;
  }

  getDaysInYear(date) {
    return $d9ab185420a4ffb38f7504d41a330b3a$export$isLeapYear(date.year) ? 366 : 365;
  } // eslint-disable-next-line @typescript-eslint/no-unused-vars


  getYearsInEra(date) {
    return 9999;
  }

  getEras() {
    return ['BC', 'AD'];
  }

  getYearsToAdd(date, years) {
    return date.era === 'BC' ? -years : years;
  }

  balanceDate(date) {
    if (date.year <= 0) {
      date.era = date.era === 'BC' ? 'AD' : 'BC';
      date.year = 1 - date.year;
    }
  }

}
function epochFromDate(date) {
  date = toCalendar(date, new GregorianCalendar());
  return $a44339c76f31b4f380c2753cbb9f3$var$epochFromParts(date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);
}

function $a44339c76f31b4f380c2753cbb9f3$var$epochFromParts(year, month, day, hour, minute, second, millisecond) {
  // Note: Date.UTC() interprets one and two-digit years as being in the
  // 20th century, so don't use it
  let date = new Date();
  date.setUTCHours(hour, minute, second, millisecond);
  date.setUTCFullYear(year, month - 1, day);
  return date.getTime();
}

function getTimeZoneOffset(ms, timeZone) {
  // Fast path: for local timezone, use native Date.
  if (timeZone === getLocalTimeZone()) {
    return new Date(ms).getTimezoneOffset() * -60 * 1000;
  }

  let {
    year,
    month,
    day,
    hour,
    minute,
    second
  } = $a44339c76f31b4f380c2753cbb9f3$var$getTimeZoneParts(ms, timeZone);
  let utc = $a44339c76f31b4f380c2753cbb9f3$var$epochFromParts(year, month, day, hour, minute, second, 0);
  return utc - Math.floor(ms / 1000) * 1000;
}
const $a44339c76f31b4f380c2753cbb9f3$var$formattersByTimeZone = new Map();

function $a44339c76f31b4f380c2753cbb9f3$var$getTimeZoneParts(ms, timeZone) {
  let formatter = $a44339c76f31b4f380c2753cbb9f3$var$formattersByTimeZone.get(timeZone);

  if (!formatter) {
    formatter = new Intl.DateTimeFormat('en-US', {
      timeZone,
      hour12: false,
      era: 'short',
      year: 'numeric',
      month: 'numeric',
      day: 'numeric',
      hour: 'numeric',
      minute: 'numeric',
      second: 'numeric'
    });
    $a44339c76f31b4f380c2753cbb9f3$var$formattersByTimeZone.set(timeZone, formatter);
  }

  let parts = formatter.formatToParts(new Date(ms));
  let namedParts = {};

  for (let part of parts) {
    if (part.type !== 'literal') {
      namedParts[part.type] = part.value;
    }
  }

  return {
    year: namedParts.era === 'BC' ? -namedParts.year + 1 : +namedParts.year,
    month: +namedParts.month,
    day: +namedParts.day,
    hour: namedParts.hour === '24' ? 0 : +namedParts.hour,
    // bugs.chromium.org/p/chromium/issues/detail?id=1045791
    minute: +namedParts.minute,
    second: +namedParts.second
  };
}

const $a44339c76f31b4f380c2753cbb9f3$var$DAYMILLIS = 86400000;
function possibleAbsolutes(date, timeZone) {
  let ms = epochFromDate(date);
  let earlier = ms - getTimeZoneOffset(ms - $a44339c76f31b4f380c2753cbb9f3$var$DAYMILLIS, timeZone);
  let later = ms - getTimeZoneOffset(ms + $a44339c76f31b4f380c2753cbb9f3$var$DAYMILLIS, timeZone);
  return $a44339c76f31b4f380c2753cbb9f3$var$getValidWallTimes(date, timeZone, earlier, later);
}

function $a44339c76f31b4f380c2753cbb9f3$var$getValidWallTimes(date, timeZone, earlier, later) {
  let found = earlier === later ? [earlier] : [earlier, later];
  return found.filter(absolute => $a44339c76f31b4f380c2753cbb9f3$var$isValidWallTime(date, timeZone, absolute));
}

function $a44339c76f31b4f380c2753cbb9f3$var$isValidWallTime(date, timeZone, absolute) {
  let parts = $a44339c76f31b4f380c2753cbb9f3$var$getTimeZoneParts(absolute, timeZone);
  return date.year === parts.year && date.month === parts.month && date.day === parts.day && date.hour === parts.hour && date.minute === parts.minute && date.second === parts.second;
}

function toAbsolute(date, timeZone, disambiguation) {
  if (disambiguation === void 0) {
    disambiguation = 'compatible';
  }

  let dateTime = toCalendarDateTime(date); // Fast path: if the time zone is the local timezone and disambiguation is compatible, use native Date.

  if (timeZone === getLocalTimeZone() && disambiguation === 'compatible') {
    dateTime = toCalendar(dateTime, new GregorianCalendar()); // Don't use Date constructor here because two-digit years are interpreted in the 20th century.

    let date = new Date();
    date.setFullYear(dateTime.year, dateTime.month - 1, dateTime.day);
    date.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);
    return date.getTime();
  }

  let ms = epochFromDate(dateTime);
  let offsetBefore = getTimeZoneOffset(ms - $a44339c76f31b4f380c2753cbb9f3$var$DAYMILLIS, timeZone);
  let offsetAfter = getTimeZoneOffset(ms + $a44339c76f31b4f380c2753cbb9f3$var$DAYMILLIS, timeZone);
  let valid = $a44339c76f31b4f380c2753cbb9f3$var$getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);

  if (valid.length === 1) {
    return valid[0];
  }

  if (valid.length > 1) {
    switch (disambiguation) {
      // 'compatible' means 'earlier' for "fall back" transitions
      case 'compatible':
      case 'earlier':
        return valid[0];

      case 'later':
        return valid[valid.length - 1];

      case 'reject':
        throw new RangeError('Multiple possible absolute times found');
    }
  }

  switch (disambiguation) {
    case 'earlier':
      return Math.min(ms - offsetBefore, ms - offsetAfter);
    // 'compatible' means 'later' for "spring forward" transitions

    case 'compatible':
    case 'later':
      return Math.max(ms - offsetBefore, ms - offsetAfter);

    case 'reject':
      throw new RangeError('No such absolute time found');
  }
}
function toDate(dateTime, timeZone, disambiguation) {
  if (disambiguation === void 0) {
    disambiguation = 'compatible';
  }

  return new Date(toAbsolute(dateTime, timeZone, disambiguation));
}
function fromAbsolute(ms, timeZone) {
  let offset = getTimeZoneOffset(ms, timeZone);
  let date = new Date(ms + offset);
  let year = date.getUTCFullYear();
  let month = date.getUTCMonth() + 1;
  let day = date.getUTCDate();
  let hour = date.getUTCHours();
  let minute = date.getUTCMinutes();
  let second = date.getUTCSeconds();
  let millisecond = date.getUTCMilliseconds();
  return new ZonedDateTime(year, month, day, timeZone, offset, hour, minute, second, millisecond);
}
function fromDate(date, timeZone) {
  return fromAbsolute(date.getTime(), timeZone);
}
function fromDateToLocal(date) {
  return fromDate(date, getLocalTimeZone());
}
function toCalendarDate(dateTime) {
  return new CalendarDate(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);
}
function toDateFields(date) {
  return {
    era: date.era,
    year: date.year,
    month: date.month,
    day: date.day
  };
}
function toTimeFields(date) {
  return {
    hour: date.hour,
    minute: date.minute,
    second: date.second,
    millisecond: date.millisecond
  };
}
function toCalendarDateTime(date, time) {
  let hour = 0,
      minute = 0,
      second = 0,
      millisecond = 0;

  if ('timeZone' in date) {
    ({
      hour,
      minute,
      second,
      millisecond
    } = date);
  } else if ('hour' in date && !time) {
    return date;
  }

  if (time) {
    ({
      hour,
      minute,
      second,
      millisecond
    } = time);
  }

  return new CalendarDateTime(date.calendar, date.era, date.year, date.month, date.day, hour, minute, second, millisecond);
}
function toTime(dateTime) {
  return new Time(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);
}
function toCalendar(date, calendar) {
  if (date.calendar.identifier === calendar.identifier) {
    return date;
  }

  let calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));
  let copy = date.copy();
  copy.calendar = calendar;
  copy.era = calendarDate.era;
  copy.year = calendarDate.year;
  copy.month = calendarDate.month;
  copy.day = calendarDate.day;
  return copy;
}
function toZoned(date, timeZone, disambiguation) {
  if (date instanceof ZonedDateTime) {
    if (date.timeZone === timeZone) {
      return date;
    }

    return toTimeZone(date, timeZone);
  }

  let ms = toAbsolute(date, timeZone, disambiguation);
  return fromAbsolute(ms, timeZone);
}
function zonedToDate(date) {
  let ms = epochFromDate(date) - date.offset;
  return new Date(ms);
}
function toTimeZone(date, timeZone) {
  let ms = epochFromDate(date) - date.offset;
  return toCalendar(fromAbsolute(ms, timeZone), date.calendar);
}
function toLocalTimeZone(date) {
  return toTimeZone(date, getLocalTimeZone());
}
const $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$ONE_HOUR = 3600000;

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$add(date, duration) {
  let mutableDate = date.copy();
  let days = 'hour' in date ? $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$addTimeFields(date, duration) : 0;
  $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$addYears(mutableDate, duration.years || 0);

  if (mutableDate.calendar.balanceYearMonth) {
    mutableDate.calendar.balanceYearMonth(mutableDate, date);
  }

  mutableDate.month += duration.months || 0;
  $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$balanceYearMonth(mutableDate);
  $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$constrainMonthDay(mutableDate);
  mutableDate.day += (duration.weeks || 0) * 7;
  mutableDate.day += duration.days || 0;
  mutableDate.day += days;
  $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$balanceDay(mutableDate);

  if (mutableDate.calendar.balanceDate) {
    mutableDate.calendar.balanceDate(mutableDate);
  }

  return mutableDate;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$addYears(date, years) {
  if (date.calendar.getYearsToAdd) {
    years = date.calendar.getYearsToAdd(date, years);
  }

  date.year += years;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$balanceYearMonth(date) {
  while (date.month < 1) {
    $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$addYears(date, -1);
    date.month += date.calendar.getMonthsInYear(date);
  }

  let monthsInYear = 0;

  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {
    date.month -= monthsInYear;
    $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$addYears(date, 1);
  }
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$balanceDay(date) {
  while (date.day < 1) {
    date.month--;
    $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$balanceYearMonth(date);
    date.day += date.calendar.getDaysInMonth(date);
  }

  while (date.day > date.calendar.getDaysInMonth(date)) {
    date.day -= date.calendar.getDaysInMonth(date);
    date.month++;
    $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$balanceYearMonth(date);
  }
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$constrainMonthDay(date) {
  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));
  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrain(date) {
  if (date.calendar.constrainDate) {
    date.calendar.constrainDate(date);
  }

  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));
  $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$constrainMonthDay(date);
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$invertDuration(duration) {
  let inverseDuration = {};

  for (let key in duration) {
    if (typeof duration[key] === 'number') {
      inverseDuration[key] = -duration[key];
    }
  }

  return inverseDuration;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$subtract(date, duration) {
  return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$add(date, $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$invertDuration(duration));
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$set(date, fields) {
  let mutableDate = date.copy();

  if (fields.era != null) {
    mutableDate.era = fields.era;
  }

  if (fields.year != null) {
    mutableDate.year = fields.year;
  }

  if (fields.month != null) {
    mutableDate.month = fields.month;
  }

  if (fields.day != null) {
    mutableDate.day = fields.day;
  }

  $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrain(mutableDate);
  return mutableDate;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$setTime(value, fields) {
  let mutableValue = value.copy();

  if (fields.hour != null) {
    mutableValue.hour = fields.hour;
  }

  if (fields.minute != null) {
    mutableValue.minute = fields.minute;
  }

  if (fields.second != null) {
    mutableValue.second = fields.second;
  }

  if (fields.millisecond != null) {
    mutableValue.millisecond = fields.millisecond;
  }

  $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrainTime(mutableValue);
  return mutableValue;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$balanceTime(time) {
  time.second += Math.floor(time.millisecond / 1000);
  time.millisecond = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$nonNegativeMod(time.millisecond, 1000);
  time.minute += Math.floor(time.second / 60);
  time.second = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$nonNegativeMod(time.second, 60);
  time.hour += Math.floor(time.minute / 60);
  time.minute = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$nonNegativeMod(time.minute, 60);
  let days = Math.floor(time.hour / 24);
  time.hour = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$nonNegativeMod(time.hour, 24);
  return days;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrainTime(time) {
  time.millisecond = Math.max(0, Math.min(time.millisecond, 1000));
  time.second = Math.max(0, Math.min(time.second, 59));
  time.minute = Math.max(0, Math.min(time.minute, 59));
  time.hour = Math.max(0, Math.min(time.hour, 23));
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$nonNegativeMod(a, b) {
  let result = a % b;

  if (result < 0) {
    result += b;
  }

  return result;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$addTimeFields(time, duration) {
  time.hour += duration.hours || 0;
  time.minute += duration.minutes || 0;
  time.second += duration.seconds || 0;
  time.millisecond += duration.milliseconds || 0;
  return $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$balanceTime(time);
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$addTime(time, duration) {
  let res = time.copy();
  $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$addTimeFields(res, duration);
  return res;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$subtractTime(time, duration) {
  return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$addTime(time, $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$invertDuration(duration));
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleDate(value, field, amount, options) {
  let mutable = value.copy();

  switch (field) {
    case 'era':
      {
        let eras = value.calendar.getEras();
        let eraIndex = eras.indexOf(value.era);

        if (eraIndex < 0) {
          throw new Error('Invalid era: ' + value.era);
        }

        eraIndex = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(eraIndex, amount, 0, eras.length - 1, options == null ? void 0 : options.round);
        mutable.era = eras[eraIndex]; // Constrain the year and other fields within the era, so the era doesn't change when we balance below.

        $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrain(mutable);
        break;
      }

    case 'year':
      {
        if (mutable.calendar.getYearsToAdd) {
          amount = mutable.calendar.getYearsToAdd(mutable, amount);
        } // The year field should not cycle within the era as that can cause weird behavior affecting other fields.
        // We need to also allow values < 1 so that decrementing goes to the previous era. If we get -Infinity back
        // we know we wrapped around after reaching 9999 (the maximum), so set the year back to 1.


        mutable.year = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(value.year, amount, -Infinity, 9999, options == null ? void 0 : options.round);

        if (mutable.year === -Infinity) {
          mutable.year = 1;
        }

        if (mutable.calendar.balanceYearMonth) {
          mutable.calendar.balanceYearMonth(mutable, value);
        }

        break;
      }

    case 'month':
      mutable.month = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options == null ? void 0 : options.round);
      break;

    case 'day':
      mutable.day = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options == null ? void 0 : options.round);
      break;

    default:
      throw new Error('Unsupported field ' + field);
  }

  if (value.calendar.balanceDate) {
    value.calendar.balanceDate(mutable);
  }

  $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrain(mutable);
  return mutable;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleTime(value, field, amount, options) {
  let mutable = value.copy();

  switch (field) {
    case 'hour':
      {
        let hours = value.hour;
        let min = 0;
        let max = 23;

        if ((options == null ? void 0 : options.hourCycle) === 12) {
          let isPM = hours >= 12;
          min = isPM ? 12 : 0;
          max = isPM ? 23 : 11;
        }

        mutable.hour = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(hours, amount, min, max, options == null ? void 0 : options.round);
        break;
      }

    case 'minute':
      mutable.minute = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(value.minute, amount, 0, 59, options == null ? void 0 : options.round);
      break;

    case 'second':
      mutable.second = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(value.second, amount, 0, 59, options == null ? void 0 : options.round);
      break;

    case 'millisecond':
      mutable.millisecond = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(value.millisecond, amount, 0, 999, options == null ? void 0 : options.round);
      break;

    default:
      throw new Error('Unsupported field ' + field);
  }

  return mutable;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(value, amount, min, max, round) {
  if (round === void 0) {
    round = false;
  }

  if (round) {
    value += Math.sign(amount);

    if (value < min) {
      value = max;
    }

    let div = Math.abs(amount);

    if (amount > 0) {
      value = Math.ceil(value / div) * div;
    } else {
      value = Math.floor(value / div) * div;
    }

    if (value > max) {
      value = min;
    }
  } else {
    value += amount;

    if (value < min) {
      value = max - (min - value - 1);
    } else if (value > max) {
      value = min + (value - max - 1);
    }
  }

  return value;
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$addZoned(dateTime, duration) {
  let ms;

  if (duration.years != null && duration.years !== 0 || duration.months != null && duration.months !== 0 || duration.days != null && duration.days !== 0) {
    let res = $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$add(toCalendarDateTime(dateTime), {
      years: duration.years,
      months: duration.months,
      days: duration.days
    }); // Changing the date may change the timezone offset, so we need to recompute
    // using the 'compatible' disambiguation.

    ms = toAbsolute(res, dateTime.timeZone);
  } else {
    // Otherwise, preserve the offset of the original date.
    ms = epochFromDate(dateTime) - dateTime.offset;
  } // Perform time manipulation in milliseconds rather than on the original time fields to account for DST.
  // For example, adding one hour during a DST transition may result in the hour field staying the same or
  // skipping an hour. This results in the offset field changing value instead of the specified field.


  ms += duration.milliseconds || 0;
  ms += (duration.seconds || 0) * 1000;
  ms += (duration.minutes || 0) * 60 * 1000;
  ms += (duration.hours || 0) * 60 * 60 * 1000;
  let res = fromAbsolute(ms, dateTime.timeZone);
  return toCalendar(res, dateTime.calendar);
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$subtractZoned(dateTime, duration) {
  return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$addZoned(dateTime, $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$invertDuration(duration));
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleZoned(dateTime, field, amount, options) {
  // For date fields, we want the time to remain consistent and the UTC offset to potentially change to account for DST changes.
  // For time fields, we want the time to change by the amount given. This may result in the hour field staying the same, but the UTC
  // offset changing in the case of a backward DST transition, or skipping an hour in the case of a forward DST transition.
  switch (field) {
    case 'hour':
      {
        let min = 0;
        let max = 23;

        if ((options == null ? void 0 : options.hourCycle) === 12) {
          let isPM = dateTime.hour >= 12;
          min = isPM ? 12 : 0;
          max = isPM ? 23 : 11;
        } // The minimum and maximum hour may be affected by daylight saving time.
        // For example, it might jump forward at midnight, and skip 1am.
        // Or it might end at midnight and repeat the 11pm hour. To handle this, we get
        // the possible absolute times for the min and max, and find the maximum range
        // that is within the current day.


        let plainDateTime = toCalendarDateTime(dateTime);
        let minDate = toCalendar($bacf9a69bf9753afe9f94cd9dd8aa2ad$export$setTime(plainDateTime, {
          hour: min
        }), new GregorianCalendar());
        let minAbsolute = [toAbsolute(minDate, dateTime.timeZone, 'earlier'), toAbsolute(minDate, dateTime.timeZone, 'later')].filter(ms => fromAbsolute(ms, dateTime.timeZone).day === minDate.day)[0];
        let maxDate = toCalendar($bacf9a69bf9753afe9f94cd9dd8aa2ad$export$setTime(plainDateTime, {
          hour: max
        }), new GregorianCalendar());
        let maxAbsolute = [toAbsolute(maxDate, dateTime.timeZone, 'earlier'), toAbsolute(maxDate, dateTime.timeZone, 'later')].filter(ms => fromAbsolute(ms, dateTime.timeZone).day === maxDate.day).pop(); // Since hours may repeat, we need to operate on the absolute time in milliseconds.
        // This is done in hours from the Unix epoch so that cycleValue works correctly,
        // and then converted back to milliseconds.

        let ms = epochFromDate(dateTime) - dateTime.offset;
        let hours = Math.floor(ms / $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$ONE_HOUR);
        let remainder = ms % $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$ONE_HOUR;
        ms = $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$cycleValue(hours, amount, Math.floor(minAbsolute / $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$ONE_HOUR), Math.floor(maxAbsolute / $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$ONE_HOUR), options == null ? void 0 : options.round) * $bacf9a69bf9753afe9f94cd9dd8aa2ad$var$ONE_HOUR + remainder; // Now compute the new timezone offset, and convert the absolute time back to local time.

        return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);
      }

    case 'minute':
    case 'second':
    case 'millisecond':
      // @ts-ignore
      return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleTime(dateTime, field, amount, options);

    case 'era':
    case 'year':
    case 'month':
    case 'day':
      {
        let res = $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleDate(toCalendarDateTime(dateTime), field, amount, options);
        let ms = toAbsolute(res, dateTime.timeZone);
        return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);
      }

    default:
      throw new Error('Unsupported field ' + field);
  }
}

function $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$setZoned(dateTime, fields, disambiguation) {
  // Set the date/time fields, and recompute the UTC offset to account for DST changes.
  // We also need to validate by converting back to a local time in case hours are skipped during forward DST transitions.
  let plainDateTime = toCalendarDateTime(dateTime);
  let res = $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$setTime($bacf9a69bf9753afe9f94cd9dd8aa2ad$export$set(plainDateTime, fields), fields); // If the resulting plain date time values are equal, return the original time.
  // We don't want to change the offset when setting the time to the same value.

  if (res.compare(plainDateTime) === 0) {
    return dateTime;
  }

  let ms = toAbsolute(res, dateTime.timeZone, disambiguation);
  return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);
}

const $c02c03a25b07d7f5b716aff41996250f$var$TIME_RE = /^(\d{2})(?::(\d{2}))?(?::(\d{2}))?(\.\d+)?$/;
const $c02c03a25b07d7f5b716aff41996250f$var$DATE_RE = /^(\d{4})-(\d{2})-(\d{2})$/;
const $c02c03a25b07d7f5b716aff41996250f$var$DATE_TIME_RE = /^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}))?(?::(\d{2}))?(?::(\d{2}))?(\.\d+)?$/;
const $c02c03a25b07d7f5b716aff41996250f$var$ZONED_DATE_TIME_RE = /^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}))?(?::(\d{2}))?(?::(\d{2}))?(\.\d+)?(?:([+-]\d{2})(?::(\d{2}))?)?\[(.*?)\]$/;
const $c02c03a25b07d7f5b716aff41996250f$var$ABSOLUTE_RE = /^(\d{4})-(\d{2})-(\d{2})(?:T(\d{2}))?(?::(\d{2}))?(?::(\d{2}))?(\.\d+)?(?:(?:([+-]\d{2})(?::(\d{2}))?)|Z)$/;
function parseTime(value) {
  let m = value.match($c02c03a25b07d7f5b716aff41996250f$var$TIME_RE);

  if (!m) {
    throw new Error('Invalid ISO 8601 time string: ' + value);
  }

  return new Time($c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[1], 0, 23), m[2] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[2], 0, 59) : 0, m[3] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[3], 0, 59) : 0, m[4] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[4], 0, Infinity) * 1000 : 0);
}
function parseDate(value) {
  let m = value.match($c02c03a25b07d7f5b716aff41996250f$var$DATE_RE);

  if (!m) {
    throw new Error('Invalid ISO 8601 date string: ' + value);
  }

  let date = new CalendarDate($c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[1], 0, 9999), $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[2], 1, 12), 1);
  date.day = $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));
  return date;
}
function parseDateTime(value) {
  let m = value.match($c02c03a25b07d7f5b716aff41996250f$var$DATE_TIME_RE);

  if (!m) {
    throw new Error('Invalid ISO 8601 date time string: ' + value);
  }

  let date = new CalendarDateTime($c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[1], 1, 9999), $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[2], 1, 12), 1, m[4] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[4], 0, 23) : 0, m[5] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[5], 0, 59) : 0, m[6] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[6], 0, 59) : 0, m[7] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[7], 0, Infinity) * 1000 : 0);
  date.day = $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));
  return date;
}
function parseZonedDateTime(value, disambiguation) {
  let m = value.match($c02c03a25b07d7f5b716aff41996250f$var$ZONED_DATE_TIME_RE);

  if (!m) {
    throw new Error('Invalid ISO 8601 date time string: ' + value);
  }

  let date = new ZonedDateTime($c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[1], 1, 9999), $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[2], 1, 12), 1, m[10], 0, m[4] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[4], 0, 23) : 0, m[5] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[5], 0, 59) : 0, m[6] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[6], 0, 59) : 0, m[7] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[7], 0, Infinity) * 1000 : 0);
  date.day = $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));
  let plainDateTime = toCalendarDateTime(date);
  let ms;

  if (m[8]) {
    var _m$;

    date.offset = $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[8], -23, 23) * 60 * 60 * 1000 + $c02c03a25b07d7f5b716aff41996250f$var$parseNumber((_m$ = m[9]) != null ? _m$ : '0', 0, 59) * 60 * 1000;
    ms = epochFromDate(date) - date.offset; // Validate offset against parsed date.

    let absolutes = possibleAbsolutes(plainDateTime, date.timeZone);

    if (!absolutes.includes(ms)) {
      throw new Error("Offset " + $c02c03a25b07d7f5b716aff41996250f$var$offsetToString(date.offset) + " is invalid for " + dateTimeToString(date) + " in " + date.timeZone);
    }
  } else {
    // Convert to absolute and back to fix invalid times due to DST.
    ms = toAbsolute(toCalendarDateTime(plainDateTime), date.timeZone, disambiguation);
  }

  return fromAbsolute(ms, date.timeZone);
}
function parseAbsolute(value, timeZone) {
  let m = value.match($c02c03a25b07d7f5b716aff41996250f$var$ABSOLUTE_RE);

  if (!m) {
    throw new Error('Invalid ISO 8601 date time string: ' + value);
  }

  let date = new ZonedDateTime($c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[1], 1, 9999), $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[2], 1, 12), 1, timeZone, 0, m[4] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[4], 0, 23) : 0, m[5] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[5], 0, 59) : 0, m[6] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[6], 0, 59) : 0, m[7] ? $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[7], 0, Infinity) * 1000 : 0);
  date.day = $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));

  if (m[8]) {
    var _m$2;

    date.offset = $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(m[8], -23, 23) * 60 * 60 * 1000 + $c02c03a25b07d7f5b716aff41996250f$var$parseNumber((_m$2 = m[9]) != null ? _m$2 : '0', 0, 59) * 60 * 1000;
  }

  return toTimeZone(date, timeZone);
}
function parseAbsoluteToLocal(value) {
  return parseAbsolute(value, getLocalTimeZone());
}

function $c02c03a25b07d7f5b716aff41996250f$var$parseNumber(value, min, max) {
  let val = Number(value);

  if (val < min || val > max) {
    throw new RangeError("Value out of range: " + min + " <= " + val + " <= " + max);
  }

  return val;
}

function timeToString(time) {
  return String(time.hour).padStart(2, '0') + ":" + String(time.minute).padStart(2, '0') + ":" + String(time.second).padStart(2, '0') + (time.millisecond ? String(time.millisecond / 1000).slice(1) : '');
}
function dateToString(date) {
  let gregorianDate = toCalendar(date, new GregorianCalendar());
  return String(gregorianDate.year).padStart(4, '0') + "-" + String(gregorianDate.month).padStart(2, '0') + "-" + String(gregorianDate.day).padStart(2, '0');
}
function dateTimeToString(date) {
  // @ts-ignore
  return dateToString(date) + "T" + timeToString(date);
}

function $c02c03a25b07d7f5b716aff41996250f$var$offsetToString(offset) {
  let sign = Math.sign(offset) < 0 ? '-' : '+';
  offset = Math.abs(offset);
  let offsetHours = Math.floor(offset / (60 * 60 * 1000));
  let offsetMinutes = offset % (60 * 60 * 1000) / (60 * 1000);
  return "" + sign + String(offsetHours).padStart(2, '0') + ":" + String(offsetMinutes).padStart(2, '0');
}

function zonedDateTimeToString(date) {
  return "" + dateTimeToString(date) + $c02c03a25b07d7f5b716aff41996250f$var$offsetToString(date.offset) + "[" + date.timeZone + "]";
}

function $a390250d74cf918aad5b3b22927402a$var$shiftArgs(args) {
  let calendar = typeof args[0] === 'object' ? args.shift() : new GregorianCalendar();
  let era;

  if (typeof args[0] === 'string') {
    era = args.shift();
  } else {
    let eras = calendar.getEras();
    era = eras[eras.length - 1];
  }

  let year = args.shift();
  let month = args.shift();
  let day = args.shift();
  return [calendar, era, year, month, day];
}

var $a390250d74cf918aad5b3b22927402a$var$_type = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("type");

class CalendarDate {
  // This prevents TypeScript from allowing other types with the same fields to match.
  // i.e. a ZonedDateTime should not be be passable to a parameter that expects CalendarDate.
  // If that behavior is desired, use the AnyCalendarDate interface instead.
  constructor() {
    Object.defineProperty(this, $a390250d74cf918aad5b3b22927402a$var$_type, {
      writable: true,
      value: void 0
    });
    this.calendar = void 0;
    this.era = void 0;
    this.year = void 0;
    this.month = void 0;
    this.day = void 0;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    let [calendar, era, year, month, day] = $a390250d74cf918aad5b3b22927402a$var$shiftArgs(args);
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrain(this);
  }

  copy() {
    if (this.era) {
      return new CalendarDate(this.calendar, this.era, this.year, this.month, this.day);
    } else {
      return new CalendarDate(this.calendar, this.year, this.month, this.day);
    }
  }

  add(duration) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$add(this, duration);
  }

  subtract(duration) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$subtract(this, duration);
  }

  set(fields) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$set(this, fields);
  }

  cycle(field, amount, options) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleDate(this, field, amount, options);
  }

  toDate(timeZone) {
    return toDate(this, timeZone);
  }

  toString() {
    return dateToString(this);
  }

  compare(b) {
    return compareDate(this, b);
  }

}

var $a390250d74cf918aad5b3b22927402a$var$_type2 = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("type");

class Time {
  // This prevents TypeScript from allowing other types with the same fields to match.
  constructor(hour = 0, minute = 0, second = 0, millisecond = 0) {
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.millisecond = millisecond;
    Object.defineProperty(this, $a390250d74cf918aad5b3b22927402a$var$_type2, {
      writable: true,
      value: void 0
    });
    $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrainTime(this);
  }

  copy() {
    return new Time(this.hour, this.minute, this.second, this.millisecond);
  }

  add(duration) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$addTime(this, duration);
  }

  subtract(duration) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$subtractTime(this, duration);
  }

  set(fields) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$setTime(this, fields);
  }

  cycle(field, amount, options) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleTime(this, field, amount, options);
  }

  toString() {
    return timeToString(this);
  }

  compare(b) {
    return compareTime(this, b);
  }

}

var $a390250d74cf918aad5b3b22927402a$var$_type3 = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("type");

class CalendarDateTime {
  // This prevents TypeScript from allowing other types with the same fields to match.
  constructor() {
    Object.defineProperty(this, $a390250d74cf918aad5b3b22927402a$var$_type3, {
      writable: true,
      value: void 0
    });
    this.calendar = void 0;
    this.era = void 0;
    this.year = void 0;
    this.month = void 0;
    this.day = void 0;
    this.hour = void 0;
    this.minute = void 0;
    this.second = void 0;
    this.millisecond = void 0;

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    let [calendar, era, year, month, day] = $a390250d74cf918aad5b3b22927402a$var$shiftArgs(args);
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = args.shift() || 0;
    this.minute = args.shift() || 0;
    this.second = args.shift() || 0;
    this.millisecond = args.shift() || 0;
    $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrain(this);
  }

  copy() {
    if (this.era) {
      return new CalendarDateTime(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
    } else {
      return new CalendarDateTime(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
    }
  }

  add(duration) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$add(this, duration);
  }

  subtract(duration) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$subtract(this, duration);
  }

  set(fields) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$set($bacf9a69bf9753afe9f94cd9dd8aa2ad$export$setTime(this, fields), fields);
  }

  cycle(field, amount, options) {
    switch (field) {
      case 'era':
      case 'year':
      case 'month':
      case 'day':
        return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleDate(this, field, amount, options);

      default:
        return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleTime(this, field, amount, options);
    }
  }

  toDate(timeZone) {
    return toDate(this, timeZone);
  }

  toString() {
    return dateTimeToString(this);
  }

  compare(b) {
    let res = compareDate(this, b);

    if (res === 0) {
      return compareTime(this, toCalendarDateTime(b));
    }

    return res;
  }

}

var $a390250d74cf918aad5b3b22927402a$var$_type4 = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("type");

class ZonedDateTime {
  // This prevents TypeScript from allowing other types with the same fields to match.
  constructor() {
    Object.defineProperty(this, $a390250d74cf918aad5b3b22927402a$var$_type4, {
      writable: true,
      value: void 0
    });
    this.calendar = void 0;
    this.era = void 0;
    this.year = void 0;
    this.month = void 0;
    this.day = void 0;
    this.hour = void 0;
    this.minute = void 0;
    this.second = void 0;
    this.millisecond = void 0;
    this.timeZone = void 0;
    this.offset = void 0;

    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    let [calendar, era, year, month, day] = $a390250d74cf918aad5b3b22927402a$var$shiftArgs(args);
    let timeZone = args.shift();
    let offset = args.shift();
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    this.timeZone = timeZone;
    this.offset = offset;
    this.hour = args.shift() || 0;
    this.minute = args.shift() || 0;
    this.second = args.shift() || 0;
    this.millisecond = args.shift() || 0;
    $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$constrain(this);
  }

  copy() {
    if (this.era) {
      return new ZonedDateTime(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
    } else {
      return new ZonedDateTime(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
    }
  }

  add(duration) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$addZoned(this, duration);
  }

  subtract(duration) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$subtractZoned(this, duration);
  }

  set(fields, disambiguation) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$setZoned(this, fields, disambiguation);
  }

  cycle(field, amount, options) {
    return $bacf9a69bf9753afe9f94cd9dd8aa2ad$export$cycleZoned(this, field, amount, options);
  }

  toDate() {
    return zonedToDate(this);
  }

  toString() {
    return zonedDateTimeToString(this);
  }

  toAbsoluteString() {
    return this.toDate().toISOString();
  }

  compare(b) {
    // TODO: Is this a bad idea??
    return this.toDate().getTime() - toZoned(b, this.timeZone).toDate().getTime();
  }

}
const $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_START_DATES = [[1868, 9, 8], [1912, 7, 30], [1926, 12, 25], [1989, 1, 8], [2019, 5, 1]];
const $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_END_DATES = [[1912, 7, 29], [1926, 12, 24], [1989, 1, 7], [2019, 4, 30]];
const $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_ADDENDS = [1867, 1911, 1925, 1988, 2018];
const $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_NAMES = ['meiji', 'taisho', 'showa', 'heisei', 'reiwa'];

function $f8ec25d0a093dcb9c8555fe0814edf2c$var$findEraFromGregorianDate(date) {
  const idx = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_START_DATES.findIndex((_ref) => {
    let [year, month, day] = _ref;

    if (date.year < year) {
      return true;
    }

    if (date.year === year && date.month < month) {
      return true;
    }

    if (date.year === year && date.month === month && date.day < day) {
      return true;
    }

    return false;
  });

  if (idx === -1) {
    return $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_START_DATES.length - 1;
  }

  if (idx === 0) {
    return 0;
  }

  return idx - 1;
}

function $f8ec25d0a093dcb9c8555fe0814edf2c$var$toGregorian(date) {
  let eraAddend = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_ADDENDS[$f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_NAMES.indexOf(date.era)];

  if (!eraAddend) {
    throw new Error('Unknown era: ' + date.era);
  }

  return new CalendarDate(date.year + eraAddend, date.month, date.day);
}

class JapaneseCalendar extends GregorianCalendar {
  constructor() {
    super(...arguments);
    this.identifier = 'japanese';
  }

  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let era = $f8ec25d0a093dcb9c8555fe0814edf2c$var$findEraFromGregorianDate(date);
    date.era = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_NAMES[era];
    date.year -= $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_ADDENDS[era];
    return date;
  }

  toJulianDay(date) {
    return super.toJulianDay($f8ec25d0a093dcb9c8555fe0814edf2c$var$toGregorian(date));
  }

  balanceDate(date) {
    let gregorianDate = $f8ec25d0a093dcb9c8555fe0814edf2c$var$toGregorian(date);
    let era = $f8ec25d0a093dcb9c8555fe0814edf2c$var$findEraFromGregorianDate(gregorianDate);

    if ($f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_NAMES[era] !== date.era) {
      date.era = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_NAMES[era];
      date.year = gregorianDate.year - $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_ADDENDS[era];
    }
  }

  constrainDate(date) {
    let idx = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_NAMES.indexOf(date.era);
    let end = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_END_DATES[idx];

    if (end != null) {
      let [endYear, endMonth, endDay] = end; // Constrain the year to the maximum possible value in the era.
      // Then constrain the month and day fields within that.

      let maxYear = endYear - $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_ADDENDS[idx];
      date.year = Math.min(maxYear, date.year);

      if (date.year === maxYear) {
        date.month = Math.min(endMonth, date.month);

        if (date.month === endMonth) {
          date.day = Math.min(endDay, date.day);
        }
      }

      if (date.year === 1) {
        let [, startMonth, startDay] = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_START_DATES[idx];
        date.month = Math.max(startMonth, date.month);

        if (date.month === startMonth) {
          date.day = Math.max(startDay, date.day);
        }
      }
    }
  }

  getEras() {
    return $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_NAMES;
  }

  getYearsInEra(date) {
    // Get the number of years in the era, taking into account the date's month and day fields.
    let era = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_NAMES.indexOf(date.era);
    let next = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_START_DATES[era + 1];

    if (next == null) {
      return 9999;
    }

    let cur = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_START_DATES[era];
    let years = next[0] - cur[0];

    if (date.month < next[1] || date.month === next[1] && date.day < next[2]) {
      years++;
    }

    return years;
  }

  getMinimumMonthInYear(date) {
    let start = $f8ec25d0a093dcb9c8555fe0814edf2c$var$getMinimums(date);
    return start ? start[1] : 1;
  }

  getMinimumDayInMonth(date) {
    let start = $f8ec25d0a093dcb9c8555fe0814edf2c$var$getMinimums(date);
    return start && date.month === start[1] ? start[2] : 1;
  }

}

function $f8ec25d0a093dcb9c8555fe0814edf2c$var$getMinimums(date) {
  if (date.year === 1) {
    let idx = $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_NAMES.indexOf(date.era);
    return $f8ec25d0a093dcb9c8555fe0814edf2c$var$ERA_START_DATES[idx];
  }
}

const $c3ac3d7d08bcbe41bf4ee53f1885ac37$var$BUDDHIST_ERA_START = -543;
class BuddhistCalendar extends GregorianCalendar {
  constructor() {
    super(...arguments);
    this.identifier = 'buddhist';
  }

  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    date.year -= $c3ac3d7d08bcbe41bf4ee53f1885ac37$var$BUDDHIST_ERA_START;
    return date;
  }

  toJulianDay(date) {
    return super.toJulianDay(new CalendarDate(date.year + $c3ac3d7d08bcbe41bf4ee53f1885ac37$var$BUDDHIST_ERA_START, date.month, date.day));
  }

  getEras() {
    return ['BE'];
  }

}
const $a1f87b3cef47dd44f95e400d2f520895$var$TAIWAN_ERA_START = 1911;

function $a1f87b3cef47dd44f95e400d2f520895$var$gregorianYear(date) {
  return date.era === 'minguo' ? date.year + $a1f87b3cef47dd44f95e400d2f520895$var$TAIWAN_ERA_START : 1 - date.year + $a1f87b3cef47dd44f95e400d2f520895$var$TAIWAN_ERA_START;
}

function $a1f87b3cef47dd44f95e400d2f520895$var$gregorianToTaiwan(year, date) {
  let y = year - $a1f87b3cef47dd44f95e400d2f520895$var$TAIWAN_ERA_START;

  if (y > 0) {
    date.era = 'minguo';
    date.year = y;
  } else {
    date.era = 'before_minguo';
    date.year = 1 - y;
  }
}

class TaiwanCalendar extends GregorianCalendar {
  constructor() {
    super(...arguments);
    this.identifier = 'roc';
  }

  // Republic of China
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    $a1f87b3cef47dd44f95e400d2f520895$var$gregorianToTaiwan(date.year, date);
    return date;
  }

  toJulianDay(date) {
    return super.toJulianDay(new CalendarDate($a1f87b3cef47dd44f95e400d2f520895$var$gregorianYear(date), date.month, date.day));
  }

  getEras() {
    return ['before_minguo', 'minguo'];
  }

  balanceDate(date) {
    $a1f87b3cef47dd44f95e400d2f520895$var$gregorianToTaiwan($a1f87b3cef47dd44f95e400d2f520895$var$gregorianYear(date), date);
  }

  getYearsToAdd(date, years) {
    return date.era === 'before_minguo' ? -years : years;
  }

}
const $aa128395b22a5a8486d031f5e52cc5$var$PERSIAN_EPOCH = 1948321; // 622/03/19 Julian C.E.

function $aa128395b22a5a8486d031f5e52cc5$var$isLeapYear(year) {
  let y0 = year > 0 ? year - 474 : year - 473;
  let y1 = $e69ae7432d03ee6ff5aa642daa3d5d3$export$mod(y0, 2820) + 474;
  return $e69ae7432d03ee6ff5aa642daa3d5d3$export$mod((y1 + 38) * 31, 128) < 31;
}

function $aa128395b22a5a8486d031f5e52cc5$var$persianToJulianDay(year, month, day) {
  let y0 = year > 0 ? year - 474 : year - 473;
  let y1 = $e69ae7432d03ee6ff5aa642daa3d5d3$export$mod(y0, 2820) + 474;
  let offset = month <= 7 ? 31 * (month - 1) : 30 * (month - 1) + 6;
  return $aa128395b22a5a8486d031f5e52cc5$var$PERSIAN_EPOCH - 1 + 1029983 * Math.floor(y0 / 2820) + 365 * (y1 - 1) + Math.floor((31 * y1 - 5) / 128) + offset + day;
}

class PersianCalendar {
  constructor() {
    this.identifier = 'persian';
  }

  fromJulianDay(jd) {
    let d0 = jd - $aa128395b22a5a8486d031f5e52cc5$var$persianToJulianDay(475, 1, 1);
    let n2820 = Math.floor(d0 / 1029983);
    let d1 = $e69ae7432d03ee6ff5aa642daa3d5d3$export$mod(d0, 1029983);
    let y2820 = d1 === 1029982 ? 2820 : Math.floor((128 * d1 + 46878) / 46751);
    let year = 474 + 2820 * n2820 + y2820;

    if (year <= 0) {
      year--;
    }

    let yDay = jd - $aa128395b22a5a8486d031f5e52cc5$var$persianToJulianDay(year, 1, 1) + 1;
    let month = yDay <= 186 ? Math.ceil(yDay / 31) : Math.ceil((yDay - 6) / 31);
    let day = jd - $aa128395b22a5a8486d031f5e52cc5$var$persianToJulianDay(year, month, 1) + 1;
    return new CalendarDate(this, year, month, day);
  }

  toJulianDay(date) {
    return $aa128395b22a5a8486d031f5e52cc5$var$persianToJulianDay(date.year, date.month, date.day);
  }

  getMonthsInYear() {
    return 12;
  }

  getDaysInMonth(date) {
    if (date.month <= 6) {
      return 31;
    }

    if (date.month <= 11) {
      return 30;
    }

    return $aa128395b22a5a8486d031f5e52cc5$var$isLeapYear(date.year) ? 30 : 29;
  }

  getEras() {
    return ['AP'];
  }

  getYearsInEra() {
    return 9999;
  }

}
// Starts in 78 AD,
const $a42213da061f74ad7729814d491de388$var$INDIAN_ERA_START = 78; // The Indian year starts 80 days later than the Gregorian year.

const $a42213da061f74ad7729814d491de388$var$INDIAN_YEAR_START = 80;
class IndianCalendar extends GregorianCalendar {
  constructor() {
    super(...arguments);
    this.identifier = 'indian';
  }

  fromJulianDay(jd) {
    // Gregorian date for Julian day
    let date = super.fromJulianDay(jd); // Year in Saka era

    let indianYear = date.year - $a42213da061f74ad7729814d491de388$var$INDIAN_ERA_START; // Day number in Gregorian year (starting from 0)

    let yDay = jd - $d9ab185420a4ffb38f7504d41a330b3a$export$gregorianToJulianDay(date.year, 1, 1);
    let leapMonth;

    if (yDay < $a42213da061f74ad7729814d491de388$var$INDIAN_YEAR_START) {
      //  Day is at the end of the preceding Saka year
      indianYear--; // Days in leapMonth this year, previous Gregorian year

      leapMonth = $d9ab185420a4ffb38f7504d41a330b3a$export$isLeapYear(date.year - 1) ? 31 : 30;
      yDay += leapMonth + 31 * 5 + 30 * 3 + 10;
    } else {
      // Days in leapMonth this year
      leapMonth = $d9ab185420a4ffb38f7504d41a330b3a$export$isLeapYear(date.year) ? 31 : 30;
      yDay -= $a42213da061f74ad7729814d491de388$var$INDIAN_YEAR_START;
    }

    let indianMonth;
    let indianDay;

    if (yDay < leapMonth) {
      indianMonth = 1;
      indianDay = yDay + 1;
    } else {
      let mDay = yDay - leapMonth;

      if (mDay < 31 * 5) {
        indianMonth = Math.floor(mDay / 31) + 2;
        indianDay = mDay % 31 + 1;
      } else {
        mDay -= 31 * 5;
        indianMonth = Math.floor(mDay / 30) + 7;
        indianDay = mDay % 30 + 1;
      }
    }

    return new CalendarDate(this, indianYear, indianMonth, indianDay);
  }

  toJulianDay(date) {
    let year = date.year + $a42213da061f74ad7729814d491de388$var$INDIAN_ERA_START;
    let leapMonth;
    let jd;

    if ($d9ab185420a4ffb38f7504d41a330b3a$export$isLeapYear(year)) {
      leapMonth = 31;
      jd = $d9ab185420a4ffb38f7504d41a330b3a$export$gregorianToJulianDay(year, 3, 21);
    } else {
      leapMonth = 30;
      jd = $d9ab185420a4ffb38f7504d41a330b3a$export$gregorianToJulianDay(year, 3, 22);
    }

    if (date.month === 1) {
      return jd + date.day - 1;
    }

    jd += leapMonth + Math.min(date.month - 2, 5) * 31;

    if (date.month >= 8) {
      jd += (date.month - 7) * 30;
    }

    jd += date.day - 1;
    return jd;
  }

  getDaysInMonth(date) {
    if (date.month === 1 && $d9ab185420a4ffb38f7504d41a330b3a$export$isLeapYear(date.year + $a42213da061f74ad7729814d491de388$var$INDIAN_ERA_START)) {
      return 31;
    }

    if (date.month >= 2 && date.month <= 6) {
      return 31;
    }

    return 30;
  }

  getYearsInEra() {
    return 9999;
  }

  getEras() {
    return ['saka'];
  }

}
const $ab59ff19176390aebd417f116829f2f$var$CIVIL_EPOC = 1948440; // CE 622 July 16 Friday (Julian calendar) / CE 622 July 19 (Gregorian calendar)

const $ab59ff19176390aebd417f116829f2f$var$ASTRONOMICAL_EPOC = 1948439; // CE 622 July 15 Thursday (Julian calendar)

const $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START = 1300;
const $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_END = 1600;
const $ab59ff19176390aebd417f116829f2f$var$UMALQURA_START_DAYS = 460322;

function $ab59ff19176390aebd417f116829f2f$var$islamicToJulianDay(epoch, year, month, day) {
  return day + Math.ceil(29.5 * (month - 1)) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30) + epoch - 1;
}

function $ab59ff19176390aebd417f116829f2f$var$julianDayToIslamic(calendar, epoch, jd) {
  let year = Math.floor((30 * (jd - epoch) + 10646) / 10631);
  let month = Math.min(12, Math.ceil((jd - (29 + $ab59ff19176390aebd417f116829f2f$var$islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);
  let day = jd - $ab59ff19176390aebd417f116829f2f$var$islamicToJulianDay(epoch, year, month, 1) + 1;
  return new CalendarDate(calendar, year, month, day);
}

function $ab59ff19176390aebd417f116829f2f$var$isLeapYear(year) {
  return (14 + 11 * year) % 30 < 11;
}

class IslamicCivilCalendar {
  constructor() {
    this.identifier = 'islamic-civil';
  }

  fromJulianDay(jd) {
    return $ab59ff19176390aebd417f116829f2f$var$julianDayToIslamic(this, $ab59ff19176390aebd417f116829f2f$var$CIVIL_EPOC, jd);
  }

  toJulianDay(date) {
    return $ab59ff19176390aebd417f116829f2f$var$islamicToJulianDay($ab59ff19176390aebd417f116829f2f$var$CIVIL_EPOC, date.year, date.month, date.day);
  }

  getDaysInMonth(date) {
    let length = 29 + date.month % 2;

    if (date.month === 12 && $ab59ff19176390aebd417f116829f2f$var$isLeapYear(date.year)) {
      length++;
    }

    return length;
  }

  getMonthsInYear() {
    return 12;
  }

  getDaysInYear(date) {
    return $ab59ff19176390aebd417f116829f2f$var$isLeapYear(date.year) ? 355 : 354;
  }

  getYearsInEra() {
    return 9999;
  }

  getEras() {
    return ['AH'];
  }

}
class IslamicTabularCalendar extends IslamicCivilCalendar {
  constructor() {
    super(...arguments);
    this.identifier = 'islamic-tbla';
  }

  fromJulianDay(jd) {
    return $ab59ff19176390aebd417f116829f2f$var$julianDayToIslamic(this, $ab59ff19176390aebd417f116829f2f$var$ASTRONOMICAL_EPOC, jd);
  }

  toJulianDay(date) {
    return $ab59ff19176390aebd417f116829f2f$var$islamicToJulianDay($ab59ff19176390aebd417f116829f2f$var$ASTRONOMICAL_EPOC, date.year, date.month, date.day);
  }

} // Generated by scripts/generate-umalqura.js

const $ab59ff19176390aebd417f116829f2f$var$UMALQURA_DATA = 'qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=';
let $ab59ff19176390aebd417f116829f2f$var$UMALQURA_MONTHLENGTH;
let $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START_TABLE;

function $ab59ff19176390aebd417f116829f2f$var$umalquraYearStart(year) {
  return $ab59ff19176390aebd417f116829f2f$var$UMALQURA_START_DAYS + $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START_TABLE[year - $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START];
}

function $ab59ff19176390aebd417f116829f2f$var$umalquraMonthLength(year, month) {
  let idx = year - $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START;
  let mask = 0x01 << 11 - (month - 1);

  if (($ab59ff19176390aebd417f116829f2f$var$UMALQURA_MONTHLENGTH[idx] & mask) === 0) {
    return 29;
  } else {
    return 30;
  }
}

function $ab59ff19176390aebd417f116829f2f$var$umalquraMonthStart(year, month) {
  let day = $ab59ff19176390aebd417f116829f2f$var$umalquraYearStart(year);

  for (let i = 1; i < month; i++) {
    day += $ab59ff19176390aebd417f116829f2f$var$umalquraMonthLength(year, i);
  }

  return day;
}

function $ab59ff19176390aebd417f116829f2f$var$umalquraYearLength(year) {
  return $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START_TABLE[year + 1 - $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START] - $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START_TABLE[year - $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START];
}

class IslamicUmalquraCalendar extends IslamicCivilCalendar {
  constructor() {
    super();
    this.identifier = 'islamic-umalqura';

    if (!$ab59ff19176390aebd417f116829f2f$var$UMALQURA_MONTHLENGTH) {
      $ab59ff19176390aebd417f116829f2f$var$UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob($ab59ff19176390aebd417f116829f2f$var$UMALQURA_DATA), c => c.charCodeAt(0)).buffer);
    }

    if (!$ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START_TABLE) {
      $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START_TABLE = new Uint32Array($ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_END - $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START + 1);
      let yearStart = 0;

      for (let year = $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START; year <= $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_END; year++) {
        $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START_TABLE[year - $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START] = yearStart;

        for (let i = 1; i <= 12; i++) {
          yearStart += $ab59ff19176390aebd417f116829f2f$var$umalquraMonthLength(year, i);
        }
      }
    }
  }

  fromJulianDay(jd) {
    let days = jd - $ab59ff19176390aebd417f116829f2f$var$CIVIL_EPOC;
    let startDays = $ab59ff19176390aebd417f116829f2f$var$umalquraYearStart($ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START);
    let endDays = $ab59ff19176390aebd417f116829f2f$var$umalquraYearStart($ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_END);

    if (days < startDays || days > endDays) {
      return super.fromJulianDay(jd);
    } else {
      let y = $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START - 1;
      let m = 1;
      let d = 1;

      while (d > 0) {
        y++;
        d = days - $ab59ff19176390aebd417f116829f2f$var$umalquraYearStart(y) + 1;
        let yearLength = $ab59ff19176390aebd417f116829f2f$var$umalquraYearLength(y);

        if (d === yearLength) {
          m = 12;
          break;
        } else if (d < yearLength) {
          let monthLength = $ab59ff19176390aebd417f116829f2f$var$umalquraMonthLength(y, m);
          m = 1;

          while (d > monthLength) {
            d -= monthLength;
            m++;
            monthLength = $ab59ff19176390aebd417f116829f2f$var$umalquraMonthLength(y, m);
          }

          break;
        }
      }

      return new CalendarDate(this, y, m, days - $ab59ff19176390aebd417f116829f2f$var$umalquraMonthStart(y, m) + 1);
    }
  }

  toJulianDay(date) {
    if (date.year < $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START || date.year > $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_END) {
      return super.toJulianDay(date);
    }

    return $ab59ff19176390aebd417f116829f2f$var$CIVIL_EPOC + $ab59ff19176390aebd417f116829f2f$var$umalquraMonthStart(date.year, date.month) + (date.day - 1);
  }

  getDaysInMonth(date) {
    if (date.year < $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START || date.year > $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_END) {
      return super.getDaysInMonth(date);
    }

    return $ab59ff19176390aebd417f116829f2f$var$umalquraMonthLength(date.year, date.month);
  }

  getDaysInYear(date) {
    if (date.year < $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_START || date.year > $ab59ff19176390aebd417f116829f2f$var$UMALQURA_YEAR_END) {
      return super.getDaysInYear(date);
    }

    return $ab59ff19176390aebd417f116829f2f$var$umalquraYearLength(date.year);
  }

}
const $e017065a6c5d591a525e617a0d3748f$var$HEBREW_EPOCH = 347997; // Hebrew date calculations are performed in terms of days, hours, and
// "parts" (or halakim), which are 1/1080 of an hour, or 3 1/3 seconds.

const $e017065a6c5d591a525e617a0d3748f$var$HOUR_PARTS = 1080;
const $e017065a6c5d591a525e617a0d3748f$var$DAY_PARTS = 24 * $e017065a6c5d591a525e617a0d3748f$var$HOUR_PARTS; // An approximate value for the length of a lunar month.
// It is used to calculate the approximate year and month of a given
// absolute date.

const $e017065a6c5d591a525e617a0d3748f$var$MONTH_DAYS = 29;
const $e017065a6c5d591a525e617a0d3748f$var$MONTH_FRACT = 12 * $e017065a6c5d591a525e617a0d3748f$var$HOUR_PARTS + 793;
const $e017065a6c5d591a525e617a0d3748f$var$MONTH_PARTS = $e017065a6c5d591a525e617a0d3748f$var$MONTH_DAYS * $e017065a6c5d591a525e617a0d3748f$var$DAY_PARTS + $e017065a6c5d591a525e617a0d3748f$var$MONTH_FRACT;

function $e017065a6c5d591a525e617a0d3748f$var$isLeapYear(year) {
  return $e69ae7432d03ee6ff5aa642daa3d5d3$export$mod(year * 7 + 1, 19) < 7;
} // Test for delay of start of new year and to avoid
// Sunday, Wednesday, and Friday as start of the new year.


function $e017065a6c5d591a525e617a0d3748f$var$hebrewDelay1(year) {
  let months = Math.floor((235 * year - 234) / 19);
  let parts = 12084 + 13753 * months;
  let day = months * 29 + Math.floor(parts / 25920);

  if ($e69ae7432d03ee6ff5aa642daa3d5d3$export$mod(3 * (day + 1), 7) < 3) {
    day += 1;
  }

  return day;
} // Check for delay in start of new year due to length of adjacent years


function $e017065a6c5d591a525e617a0d3748f$var$hebrewDelay2(year) {
  let last = $e017065a6c5d591a525e617a0d3748f$var$hebrewDelay1(year - 1);
  let present = $e017065a6c5d591a525e617a0d3748f$var$hebrewDelay1(year);
  let next = $e017065a6c5d591a525e617a0d3748f$var$hebrewDelay1(year + 1);

  if (next - present === 356) {
    return 2;
  }

  if (present - last === 382) {
    return 1;
  }

  return 0;
}

function $e017065a6c5d591a525e617a0d3748f$var$startOfYear(year) {
  return $e017065a6c5d591a525e617a0d3748f$var$hebrewDelay1(year) + $e017065a6c5d591a525e617a0d3748f$var$hebrewDelay2(year);
}

function $e017065a6c5d591a525e617a0d3748f$var$getDaysInYear(year) {
  return $e017065a6c5d591a525e617a0d3748f$var$startOfYear(year + 1) - $e017065a6c5d591a525e617a0d3748f$var$startOfYear(year);
}

function $e017065a6c5d591a525e617a0d3748f$var$getYearType(year) {
  let yearLength = $e017065a6c5d591a525e617a0d3748f$var$getDaysInYear(year);

  if (yearLength > 380) {
    yearLength -= 30; // Subtract length of leap month.
  }

  switch (yearLength) {
    case 353:
      return 0;
    // deficient

    case 354:
      return 1;
    // normal

    case 355:
      return 2;
    // complete
  }
}

function $e017065a6c5d591a525e617a0d3748f$var$getDaysInMonth(year, month) {
  // Normalize month numbers from 1 - 13, even on non-leap years
  if (month >= 6 && !$e017065a6c5d591a525e617a0d3748f$var$isLeapYear(year)) {
    month++;
  } // First of all, dispose of fixed-length 29 day months


  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13) {
    return 29;
  }

  let yearType = $e017065a6c5d591a525e617a0d3748f$var$getYearType(year); // If it's Heshvan, days depend on length of year

  if (month === 2) {
    return yearType === 2 ? 30 : 29;
  } // Similarly, Kislev varies with the length of year


  if (month === 3) {
    return yearType === 0 ? 29 : 30;
  } // Adar I only exists in leap years


  if (month === 6) {
    return $e017065a6c5d591a525e617a0d3748f$var$isLeapYear(year) ? 30 : 0;
  }

  return 30;
}

class HebrewCalendar {
  constructor() {
    this.identifier = 'hebrew';
  }

  fromJulianDay(jd) {
    let d = jd - $e017065a6c5d591a525e617a0d3748f$var$HEBREW_EPOCH;
    let m = d * $e017065a6c5d591a525e617a0d3748f$var$DAY_PARTS / $e017065a6c5d591a525e617a0d3748f$var$MONTH_PARTS; // Months (approx)

    let year = Math.floor((19 * m + 234) / 235) + 1; // Years (approx)

    let ys = $e017065a6c5d591a525e617a0d3748f$var$startOfYear(year); // 1st day of year

    let dayOfYear = Math.floor(d - ys); // Because of the postponement rules, it's possible to guess wrong.  Fix it.

    while (dayOfYear < 1) {
      year--;
      ys = $e017065a6c5d591a525e617a0d3748f$var$startOfYear(year);
      dayOfYear = Math.floor(d - ys);
    } // Now figure out which month we're in, and the date within that month


    let month = 1;
    let monthStart = 0;

    while (monthStart < dayOfYear) {
      monthStart += $e017065a6c5d591a525e617a0d3748f$var$getDaysInMonth(year, month);
      month++;
    }

    month--;
    monthStart -= $e017065a6c5d591a525e617a0d3748f$var$getDaysInMonth(year, month);
    let day = dayOfYear - monthStart;
    return new CalendarDate(this, year, month, day);
  }

  toJulianDay(date) {
    let jd = $e017065a6c5d591a525e617a0d3748f$var$startOfYear(date.year);

    for (let month = 1; month < date.month; month++) {
      jd += $e017065a6c5d591a525e617a0d3748f$var$getDaysInMonth(date.year, month);
    }

    return jd + date.day + $e017065a6c5d591a525e617a0d3748f$var$HEBREW_EPOCH;
  }

  getDaysInMonth(date) {
    return $e017065a6c5d591a525e617a0d3748f$var$getDaysInMonth(date.year, date.month);
  }

  getMonthsInYear(date) {
    return $e017065a6c5d591a525e617a0d3748f$var$isLeapYear(date.year) ? 13 : 12;
  }

  getDaysInYear(date) {
    return $e017065a6c5d591a525e617a0d3748f$var$getDaysInYear(date.year);
  }

  getYearsInEra() {
    return 9999;
  }

  getEras() {
    return ['AM'];
  }

  balanceYearMonth(date, previousDate) {
    // Keep date in the same month when switching between leap years and non leap years
    if (previousDate.year !== date.year) {
      if ($e017065a6c5d591a525e617a0d3748f$var$isLeapYear(previousDate.year) && !$e017065a6c5d591a525e617a0d3748f$var$isLeapYear(date.year) && previousDate.month > 6) {
        date.month--;
      } else if (!$e017065a6c5d591a525e617a0d3748f$var$isLeapYear(previousDate.year) && $e017065a6c5d591a525e617a0d3748f$var$isLeapYear(date.year) && previousDate.month > 6) {
        date.month++;
      }
    }
  }

}
const $c1dd3545d4e7040e53a01795c65c0c3$var$ETHIOPIC_EPOCH = 1723856;
const $c1dd3545d4e7040e53a01795c65c0c3$var$COPTIC_EPOCH = 1824665; // The delta between Amete Alem 1 and Amete Mihret 1
// AA 5501 = AM 1

const $c1dd3545d4e7040e53a01795c65c0c3$var$AMETE_MIHRET_DELTA = 5500;

function $c1dd3545d4e7040e53a01795c65c0c3$var$ceToJulianDay(epoch, year, month, day) {
  return epoch + 365 * year + Math.floor(year / 4) // extra day of leap year
  + 30 * (month - 1) // number of days from months (1 based)
  + day - 1 // number of days for present month (1 based)
  ;
}

function $c1dd3545d4e7040e53a01795c65c0c3$var$julianDayToCE(calendar, epoch, jd) {
  let year = Math.floor(4 * (jd - epoch) / 1461);
  let month = 1 + Math.floor((jd - $c1dd3545d4e7040e53a01795c65c0c3$var$ceToJulianDay(epoch, year, 1, 1)) / 30);
  let day = jd + 1 - $c1dd3545d4e7040e53a01795c65c0c3$var$ceToJulianDay(epoch, year, month, 1);
  return new CalendarDate(calendar, year, month, day);
}

function $c1dd3545d4e7040e53a01795c65c0c3$var$getLeapDay(year) {
  return Math.floor(year % 4 / 3);
}

function $c1dd3545d4e7040e53a01795c65c0c3$var$getDaysInMonth(year, month) {
  // The Ethiopian and Coptic calendars have 13 months, 12 of 30 days each and
  // an intercalary month at the end of the year of 5 or 6 days, depending whether
  // the year is a leap year or not. The Leap Year follows the same rules as the
  // Julian Calendar so that the extra month always has six days in the year before
  // a Julian Leap Year.
  if (month % 13 !== 0) {
    // not intercalary month
    return 30;
  } else {
    // intercalary month 5 days + possible leap day
    return $c1dd3545d4e7040e53a01795c65c0c3$var$getLeapDay(year) + 5;
  }
}

class EthiopicCalendar {
  constructor() {
    this.identifier = 'ethiopic';
  }

  fromJulianDay(jd) {
    let date = $c1dd3545d4e7040e53a01795c65c0c3$var$julianDayToCE(this, $c1dd3545d4e7040e53a01795c65c0c3$var$ETHIOPIC_EPOCH, jd);

    if (date.year > 0) {
      date.era = 'AM';
    } else {
      date.era = 'AA';
      date.year += $c1dd3545d4e7040e53a01795c65c0c3$var$AMETE_MIHRET_DELTA;
    }

    return date;
  }

  toJulianDay(date) {
    let year = date.year;

    if (date.era === 'AA') {
      year -= $c1dd3545d4e7040e53a01795c65c0c3$var$AMETE_MIHRET_DELTA;
    }

    return $c1dd3545d4e7040e53a01795c65c0c3$var$ceToJulianDay($c1dd3545d4e7040e53a01795c65c0c3$var$ETHIOPIC_EPOCH, year, date.month, date.day);
  }

  getDaysInMonth(date) {
    let year = date.year;

    if (date.era === 'AA') {
      year -= $c1dd3545d4e7040e53a01795c65c0c3$var$AMETE_MIHRET_DELTA;
    }

    return $c1dd3545d4e7040e53a01795c65c0c3$var$getDaysInMonth(year, date.month);
  }

  getMonthsInYear() {
    return 13;
  }

  getDaysInYear(date) {
    return 365 + $c1dd3545d4e7040e53a01795c65c0c3$var$getLeapDay(date.year);
  }

  getYearsInEra() {
    return 9999;
  }

  getEras() {
    return ['AA', 'AM'];
  }

}
class EthiopicAmeteAlemCalendar extends EthiopicCalendar {
  constructor() {
    super(...arguments);
    this.identifier = 'ethioaa';
  }

  // also known as 'ethiopic-amete-alem' in ICU
  fromJulianDay(jd) {
    let date = $c1dd3545d4e7040e53a01795c65c0c3$var$julianDayToCE(this, $c1dd3545d4e7040e53a01795c65c0c3$var$ETHIOPIC_EPOCH, jd);
    date.era = 'AA';
    date.year += $c1dd3545d4e7040e53a01795c65c0c3$var$AMETE_MIHRET_DELTA;
    return date;
  }

  getEras() {
    return ['AA'];
  }

}
class CopticCalendar extends EthiopicCalendar {
  constructor() {
    super(...arguments);
    this.identifier = 'coptic';
  }

  fromJulianDay(jd) {
    let date = $c1dd3545d4e7040e53a01795c65c0c3$var$julianDayToCE(this, $c1dd3545d4e7040e53a01795c65c0c3$var$COPTIC_EPOCH, jd);

    if (date.year <= 0) {
      date.era = 'BCE';
      date.year = 1 - date.year;
    } else {
      date.era = 'CE';
    }

    return date;
  }

  toJulianDay(date) {
    let year = date.year;

    if (date.era === 'BCE') {
      year = 1 - year;
    }

    return $c1dd3545d4e7040e53a01795c65c0c3$var$ceToJulianDay($c1dd3545d4e7040e53a01795c65c0c3$var$COPTIC_EPOCH, year, date.month, date.day);
  }

  getDaysInMonth(date) {
    let year = date.year;

    if (date.era === 'BCE') {
      year = 1 - year;
    }

    return $c1dd3545d4e7040e53a01795c65c0c3$var$getDaysInMonth(year, date.month);
  }

  getYearsToAdd(date, years) {
    return date.era === 'BCE' ? -years : years;
  }

  getEras() {
    return ['BCE', 'CE'];
  }

}
function createCalendar(name) {
  switch (name) {
    case 'buddhist':
      return new BuddhistCalendar();

    case 'ethiopic':
      return new EthiopicCalendar();

    case 'ethioaa':
      return new EthiopicAmeteAlemCalendar();

    case 'coptic':
      return new CopticCalendar();

    case 'hebrew':
      return new HebrewCalendar();

    case 'indian':
      return new IndianCalendar();

    case 'islamic-civil':
      return new IslamicCivilCalendar();

    case 'islamic-tbla':
      return new IslamicTabularCalendar();

    case 'islamic-umalqura':
      return new IslamicUmalquraCalendar();

    case 'japanese':
      return new JapaneseCalendar();

    case 'persian':
      return new PersianCalendar();

    case 'roc':
      return new TaiwanCalendar();

    case 'gregory':
    default:
      return new GregorianCalendar();
  }
}
let $b2616a3826de9be957a1356a9a0$var$formatterCache = new Map();
class DateFormatter {
  constructor(locale, options) {
    if (options === void 0) {
      options = {};
    }

    this.formatter = void 0;
    this.options = void 0;
    this.resolvedHourCycle = void 0;
    this.formatter = $b2616a3826de9be957a1356a9a0$var$getCachedDateFormatter(locale, options);
    this.options = options;
  }

  format(value) {
    return this.formatter.format(value);
  }

  formatToParts(value) {
    return this.formatter.formatToParts(value);
  }

  formatRange(start, end) {
    // @ts-ignore
    if (typeof this.formatter.formatRange === 'function') {
      // @ts-ignore
      return this.formatter.formatRange(start, end);
    }

    if (end < start) {
      throw new RangeError('End date must be >= start date');
    } // Very basic fallback for old browsers.


    return this.formatter.format(start) + " \u2013 " + this.formatter.format(end);
  }

  formatRangeToParts(start, end) {
    // @ts-ignore
    if (typeof this.formatter.formatRangeToParts === 'function') {
      // @ts-ignore
      return this.formatter.formatRangeToParts(start, end);
    }

    if (end < start) {
      throw new RangeError('End date must be >= start date');
    }

    let startParts = this.formatter.formatToParts(start);
    let endParts = this.formatter.formatToParts(end);
    return [...startParts.map(p => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, p, {
      source: 'startRange'
    })), {
      type: 'literal',
      value: ' – ',
      source: 'shared'
    }, ...endParts.map(p => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, p, {
      source: 'endRange'
    }))];
  }

  resolvedOptions() {
    let resolvedOptions = this.formatter.resolvedOptions();

    if ($b2616a3826de9be957a1356a9a0$var$hasBuggyResolvedHourCycle()) {
      if (!this.resolvedHourCycle) {
        this.resolvedHourCycle = $b2616a3826de9be957a1356a9a0$var$getResolvedHourCycle(resolvedOptions.locale, this.options);
      }

      resolvedOptions.hourCycle = this.resolvedHourCycle;
      resolvedOptions.hour12 = this.resolvedHourCycle === 'h11' || this.resolvedHourCycle === 'h12';
    }

    return resolvedOptions;
  }

} // There are multiple bugs involving the hour12 and hourCycle options in various browser engines.
//   - Chrome [1] (and the ECMA 402 spec [2]) resolve hour12: false in English and other locales to h24 (24:00 - 23:59)
//     rather than h23 (00:00 - 23:59). Same can happen with hour12: true in French, which Chrome resolves to h11 (00:00 - 11:59)
//     rather than h12 (12:00 - 11:59).
//   - WebKit returns an incorrect hourCycle resolved option in the French locale due to incorrect parsing of 'h' literal
//     in the resolved pattern. It also formats incorrectly when specifying the hourCycle option for the same reason. [3]
// [1] https://bugs.chromium.org/p/chromium/issues/detail?id=1045791
// [2] https://github.com/tc39/ecma402/issues/402
// [3] https://bugs.webkit.org/show_bug.cgi?id=229313
// https://github.com/unicode-org/cldr/blob/018b55eff7ceb389c7e3fc44e2f657eae3b10b38/common/supplemental/supplementalData.xml#L4774-L4802

const $b2616a3826de9be957a1356a9a0$var$hour12Preferences = {
  true: {
    // Only Japanese uses the h11 style for 12 hour time. All others use h12.
    ja: 'h11'
  },
  false: {// All locales use h23 for 24 hour time. None use h24.
  }
};

function $b2616a3826de9be957a1356a9a0$var$getCachedDateFormatter(locale, options) {
  if (options === void 0) {
    options = {};
  }

  // Work around buggy hour12 behavior in Chrome / ECMA 402 spec by using hourCycle instead.
  // Only apply the workaround if the issue is detected, because the hourCycle option is buggy in Safari.
  if (typeof options.hour12 === 'boolean' && $b2616a3826de9be957a1356a9a0$var$hasBuggyHour12Behavior()) {
    options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options);
    let pref = $b2616a3826de9be957a1356a9a0$var$hour12Preferences[String(options.hour12)][locale.split('-')[0]];
    let defaultHourCycle = options.hour12 ? 'h12' : 'h23';
    options.hourCycle = pref != null ? pref : defaultHourCycle;
    delete options.hour12;
  }

  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');

  if ($b2616a3826de9be957a1356a9a0$var$formatterCache.has(cacheKey)) {
    return $b2616a3826de9be957a1356a9a0$var$formatterCache.get(cacheKey);
  }

  let numberFormatter = new Intl.DateTimeFormat(locale, options);
  $b2616a3826de9be957a1356a9a0$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}

let $b2616a3826de9be957a1356a9a0$var$_hasBuggyHour12Behavior = null;

function $b2616a3826de9be957a1356a9a0$var$hasBuggyHour12Behavior() {
  if ($b2616a3826de9be957a1356a9a0$var$_hasBuggyHour12Behavior == null) {
    $b2616a3826de9be957a1356a9a0$var$_hasBuggyHour12Behavior = new Intl.DateTimeFormat('en-US', {
      hour: 'numeric',
      hour12: false
    }).format(new Date(2020, 2, 3, 0)) === '24';
  }

  return $b2616a3826de9be957a1356a9a0$var$_hasBuggyHour12Behavior;
}

let $b2616a3826de9be957a1356a9a0$var$_hasBuggyResolvedHourCycle = null;

function $b2616a3826de9be957a1356a9a0$var$hasBuggyResolvedHourCycle() {
  if ($b2616a3826de9be957a1356a9a0$var$_hasBuggyResolvedHourCycle == null) {
    $b2616a3826de9be957a1356a9a0$var$_hasBuggyResolvedHourCycle = new Intl.DateTimeFormat('fr', {
      hour: 'numeric',
      hour12: false
    }).resolvedOptions().hourCycle === 'h12';
  }

  return $b2616a3826de9be957a1356a9a0$var$_hasBuggyResolvedHourCycle;
}

function $b2616a3826de9be957a1356a9a0$var$getResolvedHourCycle(locale, options) {
  if (!options.timeStyle && !options.hour) {
    return undefined;
  } // Work around buggy results in resolved hourCycle and hour12 options in WebKit.
  // Format the minimum possible hour and maximum possible hour in a day and parse the results.


  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, '');
  locale += (locale.includes('-u-') ? '' : '-u') + '-nu-latn';
  let formatter = $b2616a3826de9be957a1356a9a0$var$getCachedDateFormatter(locale, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
    timeZone: undefined // use local timezone

  }));
  let min = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find(p => p.type === 'hour').value, 10);
  let max = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find(p => p.type === 'hour').value, 10);

  if (min === 0 && max === 23) {
    return 'h23';
  }

  if (min === 24 && max === 23) {
    return 'h24';
  }

  if (min === 0 && max === 11) {
    return 'h11';
  }

  if (min === 12 && max === 11) {
    return 'h12';
  }

  throw new Error('Unexpected hour cycle result');
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@internationalized/message/dist/module.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@internationalized/message/dist/module.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MessageDictionary": () => (/* binding */ MessageDictionary),
/* harmony export */   "MessageFormatter": () => (/* binding */ MessageFormatter)
/* harmony export */ });
/* harmony import */ var intl_messageformat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! intl-messageformat */ "../node_modules/intl-messageformat/lib/index.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");



/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/**
 * Stores a mapping of localized strings. Can be used to find the
 * closest available string for a given locale.
 */
class MessageDictionary {
  constructor(messages, defaultLocale) {
    if (defaultLocale === void 0) {
      defaultLocale = 'en-US';
    }

    this.messages = void 0;
    this.defaultLocale = void 0;
    // Clone messages so we don't modify the original object.
    this.messages = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, messages);
    this.defaultLocale = defaultLocale;
  }

  getStringForLocale(key, locale) {
    let strings = this.messages[locale];

    if (!strings) {
      strings = $e73469445899f72bd9d935bbafe76d4$var$getStringsForLocale(locale, this.messages, this.defaultLocale);
      this.messages[locale] = strings;
    }

    let string = strings[key];

    if (!string) {
      throw new Error("Could not find intl message " + key + " in " + locale + " locale");
    }

    return string;
  }

}

function $e73469445899f72bd9d935bbafe76d4$var$getStringsForLocale(locale, strings, defaultLocale) {
  if (defaultLocale === void 0) {
    defaultLocale = 'en-US';
  }

  // If there is an exact match, use it.
  if (strings[locale]) {
    return strings[locale];
  } // Attempt to find the closest match by language.
  // For example, if the locale is fr-CA (French Canadian), but there is only
  // an fr-FR (France) set of strings, use that.
  // This could be replaced with Intl.LocaleMatcher once it is supported.
  // https://github.com/tc39/proposal-intl-localematcher


  let language = $e73469445899f72bd9d935bbafe76d4$var$getLanguage(locale);

  for (let key in strings) {
    if (key.startsWith(language + '-')) {
      return strings[key];
    }
  } // Nothing close, use english.


  return strings[defaultLocale];
}

function $e73469445899f72bd9d935bbafe76d4$var$getLanguage(locale) {
  // @ts-ignore
  if (Intl.Locale) {
    // @ts-ignore
    return new Intl.Locale(locale).language;
  }

  return locale.split('-')[0];
}

/**
 * Formats ICU Message strings to create localized strings from a MessageDictionary.
 */
class MessageFormatter {
  constructor(locale, messages) {
    this.locale = void 0;
    this.messages = void 0;
    this.cache = void 0;
    this.locale = locale;
    this.messages = messages;
    this.cache = {};
  }

  format(key, variables) {
    let message = this.cache[key];

    if (!message) {
      let msg = this.messages.getStringForLocale(key, this.locale);

      if (!msg) {
        throw new Error("Could not find intl message " + key + " in " + this.locale + " locale");
      }

      message = new intl_messageformat__WEBPACK_IMPORTED_MODULE_1__["default"](msg, this.locale);
      this.cache[key] = message;
    }

    let varCopy;

    if (variables) {
      varCopy = Object.keys(variables).reduce((acc, key) => {
        acc[key] = variables[key] == null ? false : variables[key];
        return acc;
      }, {});
    }

    return message.format(varCopy);
  }

}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@internationalized/number/dist/module.js":
/*!****************************************************************!*\
  !*** ../node_modules/@internationalized/number/dist/module.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NumberFormatter": () => (/* binding */ NumberFormatter),
/* harmony export */   "NumberParser": () => (/* binding */ NumberParser)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");


/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
let $fe87f22deac4debf3eab2ca6a89602ab$var$formatterCache = new Map();
let $fe87f22deac4debf3eab2ca6a89602ab$var$supportsSignDisplay = false;

try {
  // @ts-ignore
  $fe87f22deac4debf3eab2ca6a89602ab$var$supportsSignDisplay = new Intl.NumberFormat('de-DE', {
    signDisplay: 'exceptZero'
  }).resolvedOptions().signDisplay === 'exceptZero'; // eslint-disable-next-line no-empty
} catch (e) {}

let $fe87f22deac4debf3eab2ca6a89602ab$var$supportsUnit = false;

try {
  // @ts-ignore
  $fe87f22deac4debf3eab2ca6a89602ab$var$supportsUnit = new Intl.NumberFormat('de-DE', {
    style: 'unit',
    unit: 'degree'
  }).resolvedOptions().style === 'unit'; // eslint-disable-next-line no-empty
} catch (e) {} // Polyfill for units since Safari doesn't support them yet. See https://bugs.webkit.org/show_bug.cgi?id=215438.
// Currently only polyfilling the unit degree in narrow format for ColorSlider in our supported locales.
// Values were determined by switching to each locale manually in Chrome.


const $fe87f22deac4debf3eab2ca6a89602ab$var$UNITS = {
  degree: {
    narrow: {
      default: '°',
      'ja-JP': ' 度',
      'zh-TW': '度',
      'sl-SI': ' °' // Arabic?? But Safari already doesn't use Arabic digits so might be ok...
      // https://bugs.webkit.org/show_bug.cgi?id=218139

    }
  }
};

/**
 * A wrapper around Intl.NumberFormat providing additional options, polyfills, and caching for performance.
 */
class NumberFormatter {
  constructor(locale, options) {
    if (options === void 0) {
      options = {};
    }

    this.numberFormatter = void 0;
    this.options = void 0;
    this.numberFormatter = $fe87f22deac4debf3eab2ca6a89602ab$var$getCachedNumberFormatter(locale, options);
    this.options = options;
  }

  format(value) {
    let res = '';

    if (!$fe87f22deac4debf3eab2ca6a89602ab$var$supportsSignDisplay && this.options.signDisplay != null) {
      res = $fe87f22deac4debf3eab2ca6a89602ab$export$numberFormatSignDisplayPolyfill(this.numberFormatter, this.options.signDisplay, value);
    } else {
      res = this.numberFormatter.format(value);
    }

    if (this.options.style === 'unit' && !$fe87f22deac4debf3eab2ca6a89602ab$var$supportsUnit) {
      var _UNITS$unit;

      let {
        unit,
        unitDisplay = 'short',
        locale
      } = this.resolvedOptions();
      let values = (_UNITS$unit = $fe87f22deac4debf3eab2ca6a89602ab$var$UNITS[unit]) == null ? void 0 : _UNITS$unit[unitDisplay];
      res += values[locale] || values.default;
    }

    return res;
  }

  formatToParts(value) {
    // TODO: implement signDisplay for formatToParts
    // @ts-ignore
    return this.numberFormatter.formatToParts(value);
  }

  resolvedOptions() {
    let options = this.numberFormatter.resolvedOptions();

    if (!$fe87f22deac4debf3eab2ca6a89602ab$var$supportsSignDisplay && this.options.signDisplay != null) {
      options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
        signDisplay: this.options.signDisplay
      });
    }

    if (!$fe87f22deac4debf3eab2ca6a89602ab$var$supportsUnit && this.options.style === 'unit') {
      options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
        style: 'unit',
        unit: this.options.unit,
        unitDisplay: this.options.unitDisplay
      });
    }

    return options;
  }

}

function $fe87f22deac4debf3eab2ca6a89602ab$var$getCachedNumberFormatter(locale, options) {
  if (options === void 0) {
    options = {};
  }

  let {
    numberingSystem
  } = options;

  if (numberingSystem && locale.indexOf('-u-nu-') === -1) {
    locale = locale + "-u-nu-" + numberingSystem;
  }

  if (options.style === 'unit' && !$fe87f22deac4debf3eab2ca6a89602ab$var$supportsUnit) {
    var _UNITS$unit2;

    let {
      unit,
      unitDisplay = 'short'
    } = options;

    if (!unit) {
      throw new Error('unit option must be provided with style: "unit"');
    }

    if (!((_UNITS$unit2 = $fe87f22deac4debf3eab2ca6a89602ab$var$UNITS[unit]) != null && _UNITS$unit2[unitDisplay])) {
      throw new Error("Unsupported unit " + unit + " with unitDisplay = " + unitDisplay);
    }

    options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      style: 'decimal'
    });
  }

  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');

  if ($fe87f22deac4debf3eab2ca6a89602ab$var$formatterCache.has(cacheKey)) {
    return $fe87f22deac4debf3eab2ca6a89602ab$var$formatterCache.get(cacheKey);
  }

  let numberFormatter = new Intl.NumberFormat(locale, options);
  $fe87f22deac4debf3eab2ca6a89602ab$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
/** @private - exported for tests */


function $fe87f22deac4debf3eab2ca6a89602ab$export$numberFormatSignDisplayPolyfill(numberFormat, signDisplay, num) {
  if (signDisplay === 'auto') {
    return numberFormat.format(num);
  } else if (signDisplay === 'never') {
    return numberFormat.format(Math.abs(num));
  } else {
    let needsPositiveSign = false;

    if (signDisplay === 'always') {
      needsPositiveSign = num > 0 || Object.is(num, 0);
    } else if (signDisplay === 'exceptZero') {
      if (Object.is(num, -0) || Object.is(num, 0)) {
        num = Math.abs(num);
      } else {
        needsPositiveSign = num > 0;
      }
    }

    if (needsPositiveSign) {
      let negative = numberFormat.format(-num);
      let noSign = numberFormat.format(num); // ignore RTL/LTR marker character

      let minus = negative.replace(noSign, '').replace(/\u200e|\u061C/, '');

      if ([...minus].length !== 1) {
        console.warn('@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case');
      }

      let positive = negative.replace(noSign, '!!!').replace(minus, '+').replace('!!!', noSign);
      return positive;
    } else {
      return numberFormat.format(num);
    }
  }
}

const $e1a22841ad5113a054c8ebe55b24e1a$var$CURRENCY_SIGN_REGEX = new RegExp('^.*\\(.*\\).*$');
const $e1a22841ad5113a054c8ebe55b24e1a$var$NUMBERING_SYSTEMS = ['latn', 'arab', 'hanidec'];
/**
 * A NumberParser can be used perform locale aware parsing of numbers from Unicode strings,
 * as well as validation of partial user input. Automatically detects the numbering system
 * used in the input, and supports parsing decimals, percentages, currency values, and units
 * according to the locale.
 */

class NumberParser {
  constructor(locale, options) {
    if (options === void 0) {
      options = {};
    }

    this.locale = void 0;
    this.options = void 0;
    this.locale = locale;
    this.options = options;
  }
  /**
   * Parses the given string to a number. Returns NaN if a valid number could not be parsed.
   */


  parse(value) {
    return $e1a22841ad5113a054c8ebe55b24e1a$var$getNumberParserImpl(this.locale, this.options, value).parse(value);
  }
  /**
   * Returns whether the given string could potentially be a valid number. This should be used to
   * validate user input as the user types. If a `minValue` or `maxValue` is provided, the validity
   * of the minus/plus sign characters can be checked.
   */


  isValidPartialNumber(value, minValue, maxValue) {
    return $e1a22841ad5113a054c8ebe55b24e1a$var$getNumberParserImpl(this.locale, this.options, value).isValidPartialNumber(value, minValue, maxValue);
  }
  /**
   * Returns a numbering system for which the given string is valid in the current locale.
   * If no numbering system could be detected, the default numbering system for the current
   * locale is returned.
   */


  getNumberingSystem(value) {
    return $e1a22841ad5113a054c8ebe55b24e1a$var$getNumberParserImpl(this.locale, this.options, value).options.numberingSystem;
  }

}
const $e1a22841ad5113a054c8ebe55b24e1a$var$numberParserCache = new Map();

function $e1a22841ad5113a054c8ebe55b24e1a$var$getNumberParserImpl(locale, options, value) {
  // First try the default numbering system for the provided locale
  let defaultParser = $e1a22841ad5113a054c8ebe55b24e1a$var$getCachedNumberParser(locale, options); // If that doesn't match, and the locale doesn't include a hard coded numbering system,
  // try each of the other supported numbering systems until we find one that matches.

  if (!locale.includes('-nu-') && !defaultParser.isValidPartialNumber(value)) {
    for (let numberingSystem of $e1a22841ad5113a054c8ebe55b24e1a$var$NUMBERING_SYSTEMS) {
      if (numberingSystem !== defaultParser.options.numberingSystem) {
        let parser = $e1a22841ad5113a054c8ebe55b24e1a$var$getCachedNumberParser(locale + (locale.includes('-u-') ? '-nu-' : '-u-nu-') + numberingSystem, options);

        if (parser.isValidPartialNumber(value)) {
          return parser;
        }
      }
    }
  }

  return defaultParser;
}

function $e1a22841ad5113a054c8ebe55b24e1a$var$getCachedNumberParser(locale, options) {
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');
  let parser = $e1a22841ad5113a054c8ebe55b24e1a$var$numberParserCache.get(cacheKey);

  if (!parser) {
    parser = new $e1a22841ad5113a054c8ebe55b24e1a$var$NumberParserImpl(locale, options);
    $e1a22841ad5113a054c8ebe55b24e1a$var$numberParserCache.set(cacheKey, parser);
  }

  return parser;
} // The actual number parser implementation. Instances of this class are cached
// based on the locale, options, and detected numbering system.


class $e1a22841ad5113a054c8ebe55b24e1a$var$NumberParserImpl {
  constructor(locale, options) {
    if (options === void 0) {
      options = {};
    }

    this.formatter = void 0;
    this.options = void 0;
    this.symbols = void 0;
    this.formatter = new Intl.NumberFormat(locale, options);
    this.options = this.formatter.resolvedOptions();
    this.symbols = $e1a22841ad5113a054c8ebe55b24e1a$var$getSymbols(this.formatter, this.options, options);
  }

  parse(value) {
    // to parse the number, we need to remove anything that isn't actually part of the number, for example we want '-10.40' not '-10.40 USD'
    let fullySanitizedValue = this.sanitize(value); // Remove group characters, and replace decimal points and numerals with ASCII values.

    fullySanitizedValue = $e1a22841ad5113a054c8ebe55b24e1a$var$replaceAll(fullySanitizedValue, this.symbols.group, '').replace(this.symbols.decimal, '.').replace(this.symbols.minusSign, '-').replace(this.symbols.numeral, this.symbols.index);
    let newValue = fullySanitizedValue ? +fullySanitizedValue : NaN;

    if (isNaN(newValue)) {
      return NaN;
    } // accounting will always be stripped to a positive number, so if it's accounting and has a () around everything, then we need to make it negative again


    if (this.options.currencySign === 'accounting' && $e1a22841ad5113a054c8ebe55b24e1a$var$CURRENCY_SIGN_REGEX.test(value)) {
      newValue = -1 * newValue;
    } // when reading the number, if it's a percent, then it should be interpreted as being divided by 100


    if (this.options.style === 'percent') {
      var _this$options$maximum;

      newValue /= 100; // after dividing to get the percent value, javascript may get .0210999999 instead of .0211, so fix the number of fraction digits

      newValue = +newValue.toFixed(((_this$options$maximum = this.options.maximumFractionDigits) != null ? _this$options$maximum : 0) + 2);
    }

    return newValue;
  }

  sanitize(value) {
    // Remove literals and whitespace, which are allowed anywhere in the string
    value = value.replace(this.symbols.literals, ''); // Replace the ASCII minus sign with the minus sign used in the current locale
    // so that both are allowed in case the user's keyboard doesn't have the locale's minus sign.

    value = value.replace('-', this.symbols.minusSign); // In arab numeral system, their decimal character is 1643, but most keyboards don't type that
    // instead they use the , (44) character or apparently the (1548) character.

    if (this.options.numberingSystem === 'arab') {
      value = value.replace(',', this.symbols.decimal);
      value = value.replace(String.fromCharCode(1548), this.symbols.decimal);
      value = $e1a22841ad5113a054c8ebe55b24e1a$var$replaceAll(value, '.', this.symbols.group);
    } // fr-FR group character is char code 8239, but that's not a key on the french keyboard,
    // so allow 'period' as a group char and replace it with a space


    if (this.options.locale === 'fr-FR') {
      value = $e1a22841ad5113a054c8ebe55b24e1a$var$replaceAll(value, '.', String.fromCharCode(8239));
    }

    return value;
  }

  isValidPartialNumber(value, minValue, maxValue) {
    if (minValue === void 0) {
      minValue = -Infinity;
    }

    if (maxValue === void 0) {
      maxValue = Infinity;
    }

    value = this.sanitize(value); // Remove minus or plus sign, which must be at the start of the string.

    if (value.startsWith(this.symbols.minusSign) && minValue < 0) {
      value = value.slice(this.symbols.minusSign.length);
    } else if (this.symbols.plusSign && value.startsWith(this.symbols.plusSign) && maxValue > 0) {
      value = value.slice(this.symbols.plusSign.length);
    } // Numbers cannot start with a group separator


    if (value.startsWith(this.symbols.group)) {
      return false;
    } // Remove numerals, groups, and decimals


    value = $e1a22841ad5113a054c8ebe55b24e1a$var$replaceAll(value, this.symbols.group, '').replace(this.symbols.numeral, '').replace(this.symbols.decimal, ''); // The number is valid if there are no remaining characters

    return value.length === 0;
  }

}

const $e1a22841ad5113a054c8ebe55b24e1a$var$nonLiteralParts = new Set(['decimal', 'fraction', 'integer', 'minusSign', 'plusSign', 'group']);

function $e1a22841ad5113a054c8ebe55b24e1a$var$getSymbols(formatter, intlOptions, originalOptions) {
  var _allParts$find$value, _allParts$find, _posAllParts$find, _allParts$find2, _allParts$find3;

  // Note: some locale's don't add a group symbol until there is a ten thousands place
  let allParts = formatter.formatToParts(-10000.111);
  let posAllParts = formatter.formatToParts(10000.111);
  let singularParts = formatter.formatToParts(1);
  let minusSign = (_allParts$find$value = (_allParts$find = allParts.find(p => p.type === 'minusSign')) == null ? void 0 : _allParts$find.value) != null ? _allParts$find$value : '-';
  let plusSign = (_posAllParts$find = posAllParts.find(p => p.type === 'plusSign')) == null ? void 0 : _posAllParts$find.value; // Safari does not support the signDisplay option, but our number parser polyfills it.
  // If no plus sign was returned, but the original options contained signDisplay, default to the '+' character.
  // @ts-ignore

  if (!plusSign && ((originalOptions == null ? void 0 : originalOptions.signDisplay) === 'exceptZero' || (originalOptions == null ? void 0 : originalOptions.signDisplay) === 'always')) {
    plusSign = '+';
  }

  let decimal = (_allParts$find2 = allParts.find(p => p.type === 'decimal')) == null ? void 0 : _allParts$find2.value;
  let group = (_allParts$find3 = allParts.find(p => p.type === 'group')) == null ? void 0 : _allParts$find3.value; // this set is also for a regex, it's all literals that might be in the string we want to eventually parse that
  // don't contribute to the numerical value

  let pluralLiterals = allParts.filter(p => !$e1a22841ad5113a054c8ebe55b24e1a$var$nonLiteralParts.has(p.type)).map(p => $e1a22841ad5113a054c8ebe55b24e1a$var$escapeRegex(p.value));
  let singularLiterals = singularParts.filter(p => !$e1a22841ad5113a054c8ebe55b24e1a$var$nonLiteralParts.has(p.type)).map(p => $e1a22841ad5113a054c8ebe55b24e1a$var$escapeRegex(p.value));
  let sortedLiterals = [...new Set([...singularLiterals, ...pluralLiterals])].sort((a, b) => b.length - a.length);
  let literals = new RegExp(sortedLiterals.join('|') + "|[\\p{White_Space}]", 'gu'); // These are for replacing non-latn characters with the latn equivalent

  let numerals = [...new Intl.NumberFormat(intlOptions.locale, {
    useGrouping: false
  }).format(9876543210)].reverse();
  let indexes = new Map(numerals.map((d, i) => [d, i]));
  let numeral = new RegExp("[" + numerals.join('') + "]", 'g');

  let index = d => String(indexes.get(d));

  return {
    minusSign,
    plusSign,
    decimal,
    group,
    literals,
    numeral,
    index
  };
}

function $e1a22841ad5113a054c8ebe55b24e1a$var$replaceAll(str, find, replace) {
  // @ts-ignore
  if (str.replaceAll) {
    // @ts-ignore
    return str.replaceAll(find, replace);
  }

  return str.split(find).join(replace);
}

function $e1a22841ad5113a054c8ebe55b24e1a$var$escapeRegex(string) {
  return string.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-aria/button/dist/module.js":
/*!*********************************************************!*\
  !*** ../node_modules/@react-aria/button/dist/module.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useButton": () => (/* binding */ useButton),
/* harmony export */   "useToggleButton": () => (/* binding */ useToggleButton)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-aria/interactions */ "../node_modules/@react-aria/interactions/dist/module.js");
/* harmony import */ var _react_aria_focus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/focus */ "../node_modules/@react-aria/focus/dist/module.js");
/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-aria/utils */ "../node_modules/@react-aria/utils/dist/module.js");





/**
 * Provides the behavior and accessibility implementation for a button component. Handles mouse, keyboard, and touch interactions,
 * focus behavior, and ARIA props for both native button elements and custom element types.
 * @param props - Props to be applied to the button.
 * @param ref - A ref to a DOM element for the button.
 */
function useButton(props, ref) {
  let {
    elementType = 'button',
    isDisabled,
    onPress,
    onPressStart,
    onPressEnd,
    onPressChange,
    // @ts-ignore - undocumented
    preventFocusOnPress,
    // @ts-ignore
    onClick: deprecatedOnClick,
    href,
    target,
    rel,
    type = 'button'
  } = props;
  let additionalProps;

  if (elementType === 'button') {
    additionalProps = {
      type,
      disabled: isDisabled
    };
  } else {
    additionalProps = {
      role: 'button',
      tabIndex: isDisabled ? undefined : 0,
      href: elementType === 'a' && isDisabled ? undefined : href,
      target: elementType === 'a' ? target : undefined,
      type: elementType === 'input' ? type : undefined,
      disabled: elementType === 'input' ? isDisabled : undefined,
      'aria-disabled': !isDisabled || elementType === 'input' ? undefined : isDisabled,
      rel: elementType === 'a' ? rel : undefined
    };
  }

  let {
    pressProps,
    isPressed
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_1__.usePress)({
    onPressStart,
    onPressEnd,
    onPressChange,
    onPress,
    isDisabled,
    preventFocusOnPress,
    ref
  });
  let {
    focusableProps
  } = (0,_react_aria_focus__WEBPACK_IMPORTED_MODULE_2__.useFocusable)(props, ref);
  let buttonProps = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.mergeProps)(focusableProps, pressProps);
  buttonProps = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.mergeProps)(buttonProps, (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.filterDOMProps)(props, {
    labelable: true
  }));
  return {
    isPressed,
    // Used to indicate press state for visual
    buttonProps: (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.mergeProps)(additionalProps, buttonProps, {
      'aria-haspopup': props['aria-haspopup'],
      'aria-expanded': props['aria-expanded'],
      'aria-controls': props['aria-controls'],
      'aria-pressed': props['aria-pressed'],
      onClick: e => {
        if (deprecatedOnClick) {
          deprecatedOnClick(e);
          console.warn('onClick is deprecated, please use onPress');
        }
      }
    })
  };
}

/**
 * Provides the behavior and accessibility implementation for a toggle button component.
 * ToggleButtons allow users to toggle a selection on or off, for example switching between two states or modes.
 */
function useToggleButton(props, state, ref) {
  const {
    isSelected
  } = state;
  const {
    isPressed,
    buttonProps
  } = useButton((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, props, {
    onPress: (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.chain)(state.toggle, props.onPress)
  }), ref);
  return {
    isPressed,
    buttonProps: (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_3__.mergeProps)(buttonProps, {
      'aria-pressed': isSelected
    })
  };
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-aria/focus/dist/module.js":
/*!********************************************************!*\
  !*** ../node_modules/@react-aria/focus/dist/module.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FocusRing": () => (/* binding */ FocusRing),
/* harmony export */   "FocusScope": () => (/* binding */ FocusScope),
/* harmony export */   "FocusableProvider": () => (/* binding */ FocusableProvider),
/* harmony export */   "createFocusManager": () => (/* binding */ createFocusManager),
/* harmony export */   "focusSafely": () => (/* binding */ focusSafely),
/* harmony export */   "getFocusableTreeWalker": () => (/* binding */ getFocusableTreeWalker),
/* harmony export */   "useFocusManager": () => (/* binding */ useFocusManager),
/* harmony export */   "useFocusRing": () => (/* binding */ useFocusRing),
/* harmony export */   "useFocusable": () => (/* binding */ useFocusable)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ "../node_modules/clsx/dist/clsx.m.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-aria/interactions */ "../node_modules/@react-aria/interactions/dist/module.js");
/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-aria/utils */ "../node_modules/@react-aria/utils/dist/module.js");







/**
 * A utility function that focuses an element while avoiding undesired side effects such
 * as page scrolling and screen reader issues with CSS transitions.
 */
function focusSafely(element) {
  // If the user is interacting with a virtual cursor, e.g. screen reader, then
  // wait until after any animated transitions that are currently occurring on
  // the page before shifting focus. This avoids issues with VoiceOver on iOS
  // causing the page to scroll when moving focus if the element is transitioning
  // from off the screen.
  if ((0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.getInteractionModality)() === 'virtual') {
    let lastFocusedElement = document.activeElement;
    (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.runAfterTransition)(() => {
      // If focus did not move and the element is still in the document, focus it.
      if (document.activeElement === lastFocusedElement && document.contains(element)) {
        (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.focusWithoutScrolling)(element);
      }
    });
  } else {
    (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.focusWithoutScrolling)(element);
  }
}

/*
 * Copyright 2021 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
function $ee5e90cbb4a22466973155c14222fa1$var$isStyleVisible(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {
    return false;
  }

  let {
    display,
    visibility
  } = element.style;
  let isVisible = display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse';

  if (isVisible) {
    const {
      getComputedStyle
    } = element.ownerDocument.defaultView;
    let {
      display: computedDisplay,
      visibility: computedVisibility
    } = getComputedStyle(element);
    isVisible = computedDisplay !== 'none' && computedVisibility !== 'hidden' && computedVisibility !== 'collapse';
  }

  return isVisible;
}

function $ee5e90cbb4a22466973155c14222fa1$var$isAttributeVisible(element, childElement) {
  return !element.hasAttribute('hidden') && (element.nodeName === 'DETAILS' && childElement && childElement.nodeName !== 'SUMMARY' ? element.hasAttribute('open') : true);
}
/**
 * Adapted from https://github.com/testing-library/jest-dom and 
 * https://github.com/vuejs/vue-test-utils-next/.
 * Licensed under the MIT License.
 * @param element - Element to evaluate for display or visibility.
 */


function $ee5e90cbb4a22466973155c14222fa1$export$isElementVisible(element, childElement) {
  return element.nodeName !== '#comment' && $ee5e90cbb4a22466973155c14222fa1$var$isStyleVisible(element) && $ee5e90cbb4a22466973155c14222fa1$var$isAttributeVisible(element, childElement) && (!element.parentElement || $ee5e90cbb4a22466973155c14222fa1$export$isElementVisible(element.parentElement, element));
}

const $c9e8f80f5bb1841844f54e4ad30b$var$FocusContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createContext(null);

let $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = null;
let $c9e8f80f5bb1841844f54e4ad30b$var$scopes = new Map(); // This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:
// https://github.com/reactjs/rfcs/pull/109
// For now, it relies on the DOM tree order rather than the React tree order, and is probably
// less optimized for performance.

/**
 * A FocusScope manages focus for its descendants. It supports containing focus inside
 * the scope, restoring focus to the previously focused element on unmount, and auto
 * focusing children on mount. It also acts as a container for a programmatic focus
 * management interface that can be used to move focus forward and back in response
 * to user events.
 */

function FocusScope(props) {
  let {
    children,
    contain,
    restoreFocus,
    autoFocus
  } = props;
  let startRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();
  let endRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();
  let scopeRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)([]);
  let ctx = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)($c9e8f80f5bb1841844f54e4ad30b$var$FocusContext);
  let parentScope = ctx == null ? void 0 : ctx.scopeRef;
  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.useLayoutEffect)(() => {
    // Find all rendered nodes between the sentinels and add them to the scope.
    let node = startRef.current.nextSibling;
    let nodes = [];

    while (node && node !== endRef.current) {
      nodes.push(node);
      node = node.nextSibling;
    }

    scopeRef.current = nodes;
  }, [children, parentScope]);
  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.useLayoutEffect)(() => {
    $c9e8f80f5bb1841844f54e4ad30b$var$scopes.set(scopeRef, parentScope);
    return () => {
      // Restore the active scope on unmount if this scope or a descendant scope is active.
      // Parent effect cleanups run before children, so we need to check if the
      // parent scope actually still exists before restoring the active scope to it.
      if ((scopeRef === $c9e8f80f5bb1841844f54e4ad30b$var$activeScope || $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope(scopeRef, $c9e8f80f5bb1841844f54e4ad30b$var$activeScope)) && (!parentScope || $c9e8f80f5bb1841844f54e4ad30b$var$scopes.has(parentScope))) {
        $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = parentScope;
      }

      $c9e8f80f5bb1841844f54e4ad30b$var$scopes.delete(scopeRef);
    };
  }, [scopeRef, parentScope]);
  $c9e8f80f5bb1841844f54e4ad30b$var$useFocusContainment(scopeRef, contain);
  $c9e8f80f5bb1841844f54e4ad30b$var$useRestoreFocus(scopeRef, restoreFocus, contain);
  $c9e8f80f5bb1841844f54e4ad30b$var$useAutoFocus(scopeRef, autoFocus);
  let focusManager = $c9e8f80f5bb1841844f54e4ad30b$var$createFocusManagerForScope(scopeRef);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement($c9e8f80f5bb1841844f54e4ad30b$var$FocusContext.Provider, {
    value: {
      scopeRef,
      focusManager
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("span", {
    "data-focus-scope-start": true,
    hidden: true,
    ref: startRef
  }), children, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("span", {
    "data-focus-scope-end": true,
    hidden: true,
    ref: endRef
  }));
}
/**
 * Returns a FocusManager interface for the parent FocusScope.
 * A FocusManager can be used to programmatically move focus within
 * a FocusScope, e.g. in response to user events like keyboard navigation.
 */

function useFocusManager() {
  var _useContext;

  return (_useContext = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)($c9e8f80f5bb1841844f54e4ad30b$var$FocusContext)) == null ? void 0 : _useContext.focusManager;
}

function $c9e8f80f5bb1841844f54e4ad30b$var$createFocusManagerForScope(scopeRef) {
  return {
    focusNext(opts) {
      if (opts === void 0) {
        opts = {};
      }

      let scope = scopeRef.current;
      let {
        from,
        tabbable,
        wrap
      } = opts;
      let node = from || document.activeElement;
      let sentinel = scope[0].previousElementSibling;
      let walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {
        tabbable
      }, scope);
      walker.currentNode = $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(node, scope) ? node : sentinel;
      let nextNode = walker.nextNode();

      if (!nextNode && wrap) {
        walker.currentNode = sentinel;
        nextNode = walker.nextNode();
      }

      if (nextNode) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);
      }

      return nextNode;
    },

    focusPrevious(opts) {
      if (opts === void 0) {
        opts = {};
      }

      let scope = scopeRef.current;
      let {
        from,
        tabbable,
        wrap
      } = opts;
      let node = from || document.activeElement;
      let sentinel = scope[scope.length - 1].nextElementSibling;
      let walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {
        tabbable
      }, scope);
      walker.currentNode = $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(node, scope) ? node : sentinel;
      let previousNode = walker.previousNode();

      if (!previousNode && wrap) {
        walker.currentNode = sentinel;
        previousNode = walker.previousNode();
      }

      if (previousNode) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(previousNode, true);
      }

      return previousNode;
    },

    focusFirst(opts) {
      if (opts === void 0) {
        opts = {};
      }

      let scope = scopeRef.current;
      let {
        tabbable
      } = opts;
      let walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {
        tabbable
      }, scope);
      walker.currentNode = scope[0].previousElementSibling;
      let nextNode = walker.nextNode();

      if (nextNode) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);
      }

      return nextNode;
    },

    focusLast(opts) {
      if (opts === void 0) {
        opts = {};
      }

      let scope = scopeRef.current;
      let {
        tabbable
      } = opts;
      let walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {
        tabbable
      }, scope);
      walker.currentNode = scope[scope.length - 1].nextElementSibling;
      let previousNode = walker.previousNode();

      if (previousNode) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(previousNode, true);
      }

      return previousNode;
    }

  };
}

const $c9e8f80f5bb1841844f54e4ad30b$var$focusableElements = ['input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'a[href]', 'area[href]', 'summary', 'iframe', 'object', 'embed', 'audio[controls]', 'video[controls]', '[contenteditable]'];
const $c9e8f80f5bb1841844f54e4ad30b$var$FOCUSABLE_ELEMENT_SELECTOR = $c9e8f80f5bb1841844f54e4ad30b$var$focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';
$c9e8f80f5bb1841844f54e4ad30b$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
const $c9e8f80f5bb1841844f54e4ad30b$var$TABBABLE_ELEMENT_SELECTOR = $c9e8f80f5bb1841844f54e4ad30b$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');

function $c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope) {
  return scope[0].parentElement;
}

function $c9e8f80f5bb1841844f54e4ad30b$var$useFocusContainment(scopeRef, contain) {
  let focusedNode = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();
  let raf = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);
  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.useLayoutEffect)(() => {
    let scope = scopeRef.current;

    if (!contain) {
      return;
    } // Handle the Tab key to contain focus within the scope


    let onKeyDown = e => {
      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || scopeRef !== $c9e8f80f5bb1841844f54e4ad30b$var$activeScope) {
        return;
      }

      let focusedElement = document.activeElement;
      let scope = scopeRef.current;

      if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(focusedElement, scope)) {
        return;
      }

      let walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {
        tabbable: true
      }, scope);
      walker.currentNode = focusedElement;
      let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();

      if (!nextElement) {
        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;
        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      }

      e.preventDefault();

      if (nextElement) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextElement, true);
      }
    };

    let onFocus = e => {
      // If focusing an element in a child scope of the currently active scope, the child becomes active.
      // Moving out of the active scope to an ancestor is not allowed.
      if (!$c9e8f80f5bb1841844f54e4ad30b$var$activeScope || $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope($c9e8f80f5bb1841844f54e4ad30b$var$activeScope, scopeRef)) {
        $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = scopeRef;
        focusedNode.current = e.target;
      } else if (scopeRef === $c9e8f80f5bb1841844f54e4ad30b$var$activeScope && !$c9e8f80f5bb1841844f54e4ad30b$var$isElementInChildScope(e.target, scopeRef)) {
        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),
        // restore focus to the previously focused node or the first tabbable element in the active scope.
        if (focusedNode.current) {
          focusedNode.current.focus();
        } else if ($c9e8f80f5bb1841844f54e4ad30b$var$activeScope) {
          $c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope($c9e8f80f5bb1841844f54e4ad30b$var$activeScope.current);
        }
      } else if (scopeRef === $c9e8f80f5bb1841844f54e4ad30b$var$activeScope) {
        focusedNode.current = e.target;
      }
    };

    let onBlur = e => {
      // Firefox doesn't shift focus back to the Dialog properly without this
      raf.current = requestAnimationFrame(() => {
        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe
        if (scopeRef === $c9e8f80f5bb1841844f54e4ad30b$var$activeScope && !$c9e8f80f5bb1841844f54e4ad30b$var$isElementInChildScope(document.activeElement, scopeRef)) {
          $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = scopeRef;
          focusedNode.current = e.target;
          focusedNode.current.focus();
        }
      });
    };

    document.addEventListener('keydown', onKeyDown, false);
    document.addEventListener('focusin', onFocus, false);
    scope.forEach(element => element.addEventListener('focusin', onFocus, false));
    scope.forEach(element => element.addEventListener('focusout', onBlur, false));
    return () => {
      document.removeEventListener('keydown', onKeyDown, false);
      document.removeEventListener('focusin', onFocus, false);
      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));
      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));
    };
  }, [scopeRef, contain]); // eslint-disable-next-line arrow-body-style

  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {
    return () => cancelAnimationFrame(raf.current);
  }, [raf]);
}

function $c9e8f80f5bb1841844f54e4ad30b$var$isElementInAnyScope(element) {
  for (let scope of $c9e8f80f5bb1841844f54e4ad30b$var$scopes.keys()) {
    if ($c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(element, scope.current)) {
      return true;
    }
  }

  return false;
}

function $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(element, scope) {
  return scope.some(node => node.contains(element));
}

function $c9e8f80f5bb1841844f54e4ad30b$var$isElementInChildScope(element, scope) {
  // node.contains in isElementInScope covers child scopes that are also DOM children,
  // but does not cover child scopes in portals.
  for (let s of $c9e8f80f5bb1841844f54e4ad30b$var$scopes.keys()) {
    if ((s === scope || $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope(scope, s)) && $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(element, s.current)) {
      return true;
    }
  }

  return false;
}

function $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope(ancestor, scope) {
  let parent = $c9e8f80f5bb1841844f54e4ad30b$var$scopes.get(scope);

  if (!parent) {
    return false;
  }

  if (parent === ancestor) {
    return true;
  }

  return $c9e8f80f5bb1841844f54e4ad30b$var$isAncestorScope(ancestor, parent);
}

function $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(element, scroll) {
  if (scroll === void 0) {
    scroll = false;
  }

  if (element != null && !scroll) {
    try {
      focusSafely(element);
    } catch (err) {// ignore
    }
  } else if (element != null) {
    try {
      element.focus();
    } catch (err) {// ignore
    }
  }
}

function $c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope(scope) {
  let sentinel = scope[0].previousElementSibling;
  let walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {
    tabbable: true
  }, scope);
  walker.currentNode = sentinel;
  $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(walker.nextNode());
}

function $c9e8f80f5bb1841844f54e4ad30b$var$useAutoFocus(scopeRef, autoFocus) {
  const autoFocusRef = react__WEBPACK_IMPORTED_MODULE_3__.useRef(autoFocus);

  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {
    if (autoFocusRef.current) {
      $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = scopeRef;

      if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(document.activeElement, $c9e8f80f5bb1841844f54e4ad30b$var$activeScope.current)) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope(scopeRef.current);
      }
    }

    autoFocusRef.current = false;
  }, []);
}

function $c9e8f80f5bb1841844f54e4ad30b$var$useRestoreFocus(scopeRef, restoreFocus, contain) {
  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.
  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.useLayoutEffect)(() => {
    if (!restoreFocus) {
      return;
    }

    let scope = scopeRef.current;
    let nodeToRestore = document.activeElement; // Handle the Tab key so that tabbing out of the scope goes to the next element
    // after the node that had focus when the scope mounted. This is important when
    // using portals for overlays, so that focus goes to the expected element when
    // tabbing out of the overlay.

    let onKeyDown = e => {
      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {
        return;
      }

      let focusedElement = document.activeElement;

      if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(focusedElement, scope)) {
        return;
      } // Create a DOM tree walker that matches all tabbable elements


      let walker = getFocusableTreeWalker(document.body, {
        tabbable: true
      }); // Find the next tabbable element after the currently focused element

      walker.currentNode = focusedElement;
      let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();

      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {
        nodeToRestore = null;
      } // If there is no next element, or it is outside the current scope, move focus to the
      // next element after the node to restore to instead.


      if ((!nextElement || !$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(nextElement, scope)) && nodeToRestore) {
        walker.currentNode = nodeToRestore; // Skip over elements within the scope, in case the scope immediately follows the node to restore.

        do {
          nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
        } while ($c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(nextElement, scope));

        e.preventDefault();
        e.stopPropagation();

        if (nextElement) {
          $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextElement, true);
        } else {
          // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)
          // then move focus to the body.
          // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)
          if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInAnyScope(nodeToRestore)) {
            focusedElement.blur();
          } else {
            $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nodeToRestore, true);
          }
        }
      }
    };

    if (!contain) {
      document.addEventListener('keydown', onKeyDown, true);
    }

    return () => {
      if (!contain) {
        document.removeEventListener('keydown', onKeyDown, true);
      }

      if (restoreFocus && nodeToRestore && $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(document.activeElement, scope)) {
        requestAnimationFrame(() => {
          if (document.body.contains(nodeToRestore)) {
            $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nodeToRestore);
          }
        });
      }
    };
  }, [scopeRef, restoreFocus, contain]);
}
/**
 * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}
 * that matches all focusable/tabbable elements.
 */


function getFocusableTreeWalker(root, opts, scope) {
  let selector = opts != null && opts.tabbable ? $c9e8f80f5bb1841844f54e4ad30b$var$TABBABLE_ELEMENT_SELECTOR : $c9e8f80f5bb1841844f54e4ad30b$var$FOCUSABLE_ELEMENT_SELECTOR;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var _opts$from;

      // Skip nodes inside the starting node.
      if (opts != null && (_opts$from = opts.from) != null && _opts$from.contains(node)) {
        return NodeFilter.FILTER_REJECT;
      }

      if (node.matches(selector) && $ee5e90cbb4a22466973155c14222fa1$export$isElementVisible(node) && (!scope || $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(node, scope))) {
        return NodeFilter.FILTER_ACCEPT;
      }

      return NodeFilter.FILTER_SKIP;
    }

  });

  if (opts != null && opts.from) {
    walker.currentNode = opts.from;
  }

  return walker;
}
/**
 * Creates a FocusManager object that can be used to move focus within an element.
 */

function createFocusManager(ref) {
  return {
    focusNext(opts) {
      if (opts === void 0) {
        opts = {};
      }

      let root = ref.current;
      let {
        from,
        tabbable,
        wrap
      } = opts;
      let node = from || document.activeElement;
      let walker = getFocusableTreeWalker(root, {
        tabbable
      });

      if (root.contains(node)) {
        walker.currentNode = node;
      }

      let nextNode = walker.nextNode();

      if (!nextNode && wrap) {
        walker.currentNode = root;
        nextNode = walker.nextNode();
      }

      if (nextNode) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);
      }

      return nextNode;
    },

    focusPrevious(opts) {
      if (opts === void 0) {
        opts = {};
      }

      let root = ref.current;
      let {
        from,
        tabbable,
        wrap
      } = opts;
      let node = from || document.activeElement;
      let walker = getFocusableTreeWalker(root, {
        tabbable
      });

      if (root.contains(node)) {
        walker.currentNode = node;
      } else {
        let next = $c9e8f80f5bb1841844f54e4ad30b$var$last(walker);

        if (next) {
          $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(next, true);
        }

        return next;
      }

      let previousNode = walker.previousNode();

      if (!previousNode && wrap) {
        walker.currentNode = root;
        previousNode = $c9e8f80f5bb1841844f54e4ad30b$var$last(walker);
      }

      if (previousNode) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(previousNode, true);
      }

      return previousNode;
    },

    focusFirst(opts) {
      if (opts === void 0) {
        opts = {};
      }

      let root = ref.current;
      let {
        tabbable
      } = opts;
      let walker = getFocusableTreeWalker(root, {
        tabbable
      });
      let nextNode = walker.nextNode();

      if (nextNode) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);
      }

      return nextNode;
    },

    focusLast(opts) {
      if (opts === void 0) {
        opts = {};
      }

      let root = ref.current;
      let {
        tabbable
      } = opts;
      let walker = getFocusableTreeWalker(root, {
        tabbable
      });
      let next = $c9e8f80f5bb1841844f54e4ad30b$var$last(walker);

      if (next) {
        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(next, true);
      }

      return next;
    }

  };
}

function $c9e8f80f5bb1841844f54e4ad30b$var$last(walker) {
  let next;
  let last;

  do {
    last = walker.lastChild();

    if (last) {
      next = last;
    }
  } while (last);

  return next;
}

/**
 * Determines whether a focus ring should be shown to indicate keyboard focus.
 * Focus rings are visible only when the user is interacting with a keyboard,
 * not with a mouse, touch, or other input methods.
 */
function useFocusRing(props) {
  if (props === void 0) {
    props = {};
  }

  let {
    autoFocus = false,
    isTextInput,
    within
  } = props;
  let state = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)({
    isFocused: false,
    isFocusVisible: autoFocus || (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.isFocusVisible)()
  }).current;
  let [isFocused, setFocused] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);
  let [isFocusVisibleState, setFocusVisible] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(() => state.isFocused && state.isFocusVisible);

  let updateState = () => setFocusVisible(state.isFocused && state.isFocusVisible);

  let onFocusChange = isFocused => {
    state.isFocused = isFocused;
    setFocused(isFocused);
    updateState();
  };

  (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.useFocusVisibleListener)(isFocusVisible => {
    state.isFocusVisible = isFocusVisible;
    updateState();
  }, [], {
    isTextInput
  });
  let {
    focusProps
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.useFocus)({
    isDisabled: within,
    onFocusChange
  });
  let {
    focusWithinProps
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.useFocusWithin)({
    isDisabled: !within,
    onFocusWithinChange: onFocusChange
  });
  return {
    isFocused,
    isFocusVisible: state.isFocused && isFocusVisibleState,
    focusProps: within ? focusWithinProps : focusProps
  };
}

/**
 * A utility component that applies a CSS class when an element has keyboard focus.
 * Focus rings are visible only when the user is interacting with a keyboard,
 * not with a mouse, touch, or other input methods.
 */
function FocusRing(props) {
  let {
    children,
    focusClass,
    focusRingClass
  } = props;
  let {
    isFocused,
    isFocusVisible,
    focusProps
  } = useFocusRing(props);

  let child = react__WEBPACK_IMPORTED_MODULE_3__.Children.only(children);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.cloneElement(child, (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.mergeProps)(child.props, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__["default"])({}, focusProps, {
    className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__["default"])({
      [focusClass || '']: isFocused,
      [focusRingClass || '']: isFocusVisible
    })
  })));
}

let $e11539c8317b2d21639df611cb5658f$var$FocusableContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createContext(null);

function $e11539c8317b2d21639df611cb5658f$var$useFocusableContext(ref) {
  let context = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)($e11539c8317b2d21639df611cb5658f$var$FocusableContext) || {};
  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.useSyncRef)(context, ref); // eslint-disable-next-line

  let otherProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(context, ["ref"]);

  return otherProps;
}
/**
 * Provides DOM props to the nearest focusable child.
 */


function $e11539c8317b2d21639df611cb5658f$var$FocusableProvider(props, ref) {
  let {
    children
  } = props,
      otherProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(props, ["children"]);

  let context = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__["default"])({}, otherProps, {
    ref
  });

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement($e11539c8317b2d21639df611cb5658f$var$FocusableContext.Provider, {
    value: context
  }, children);
}

let FocusableProvider = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.forwardRef($e11539c8317b2d21639df611cb5658f$var$FocusableProvider);

/**
 * Used to make an element focusable and capable of auto focus.
 */
function useFocusable(props, domRef) {
  let {
    focusProps
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.useFocus)(props);
  let {
    keyboardProps
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_4__.useKeyboard)(props);
  let interactions = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.mergeProps)(focusProps, keyboardProps);
  let domProps = $e11539c8317b2d21639df611cb5658f$var$useFocusableContext(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(props.autoFocus);
  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {
    if (autoFocusRef.current && domRef.current) {
      domRef.current.focus();
    }

    autoFocusRef.current = false;
  }, []);
  return {
    focusableProps: (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_5__.mergeProps)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__["default"])({}, interactions, {
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined
    }), interactionProps)
  };
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-aria/i18n/dist/module.js":
/*!*******************************************************!*\
  !*** ../node_modules/@react-aria/i18n/dist/module.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "I18nProvider": () => (/* binding */ I18nProvider),
/* harmony export */   "useCollator": () => (/* binding */ useCollator),
/* harmony export */   "useDateFormatter": () => (/* binding */ useDateFormatter),
/* harmony export */   "useFilter": () => (/* binding */ useFilter),
/* harmony export */   "useLocale": () => (/* binding */ useLocale),
/* harmony export */   "useMessageFormatter": () => (/* binding */ useMessageFormatter),
/* harmony export */   "useNumberFormatter": () => (/* binding */ useNumberFormatter)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _internationalized_number__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @internationalized/number */ "../node_modules/@internationalized/number/dist/module.js");
/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @internationalized/date */ "../node_modules/@internationalized/date/dist/module.js");
/* harmony import */ var _internationalized_message__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @internationalized/message */ "../node_modules/@internationalized/message/dist/module.js");
/* harmony import */ var _react_aria_ssr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/ssr */ "../node_modules/@react-aria/ssr/dist/module.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");







/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
// https://en.wikipedia.org/wiki/Right-to-left
const $d26e725ad56fbcb2c25f52b7de27$var$RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);
const $d26e725ad56fbcb2c25f52b7de27$var$RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);
/**
 * Determines if a locale is read right to left using [Intl.Locale]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale}.
 */

function $d26e725ad56fbcb2c25f52b7de27$export$isRTL(locale) {
  // If the Intl.Locale API is available, use it to get the script for the locale.
  // This is more accurate than guessing by language, since languages can be written in multiple scripts.
  // @ts-ignore
  if (Intl.Locale) {
    // @ts-ignore
    let script = new Intl.Locale(locale).maximize().script;
    return $d26e725ad56fbcb2c25f52b7de27$var$RTL_SCRIPTS.has(script);
  } // If not, just guess by the language (first part of the locale)


  let lang = locale.split('-')[0];
  return $d26e725ad56fbcb2c25f52b7de27$var$RTL_LANGS.has(lang);
}

/**
 * Gets the locale setting of the browser.
 */
function $e851d0b81d46abd5f971c8e95c27f1$export$getDefaultLocale() {
  // @ts-ignore
  let locale = typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage) || 'en-US';
  return {
    locale,
    direction: $d26e725ad56fbcb2c25f52b7de27$export$isRTL(locale) ? 'rtl' : 'ltr'
  };
}

let $e851d0b81d46abd5f971c8e95c27f1$var$currentLocale = $e851d0b81d46abd5f971c8e95c27f1$export$getDefaultLocale();
let $e851d0b81d46abd5f971c8e95c27f1$var$listeners = new Set();

function $e851d0b81d46abd5f971c8e95c27f1$var$updateLocale() {
  $e851d0b81d46abd5f971c8e95c27f1$var$currentLocale = $e851d0b81d46abd5f971c8e95c27f1$export$getDefaultLocale();

  for (let listener of $e851d0b81d46abd5f971c8e95c27f1$var$listeners) {
    listener($e851d0b81d46abd5f971c8e95c27f1$var$currentLocale);
  }
}
/**
 * Returns the current browser/system language, and updates when it changes.
 */


function $e851d0b81d46abd5f971c8e95c27f1$export$useDefaultLocale() {
  let isSSR = (0,_react_aria_ssr__WEBPACK_IMPORTED_MODULE_2__.useIsSSR)();
  let [defaultLocale, setDefaultLocale] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)($e851d0b81d46abd5f971c8e95c27f1$var$currentLocale);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if ($e851d0b81d46abd5f971c8e95c27f1$var$listeners.size === 0) {
      window.addEventListener('languagechange', $e851d0b81d46abd5f971c8e95c27f1$var$updateLocale);
    }

    $e851d0b81d46abd5f971c8e95c27f1$var$listeners.add(setDefaultLocale);
    return () => {
      $e851d0b81d46abd5f971c8e95c27f1$var$listeners.delete(setDefaultLocale);

      if ($e851d0b81d46abd5f971c8e95c27f1$var$listeners.size === 0) {
        window.removeEventListener('languagechange', $e851d0b81d46abd5f971c8e95c27f1$var$updateLocale);
      }
    };
  }, []); // We cannot determine the browser's language on the server, so default to
  // en-US. This will be updated after hydration on the client to the correct value.

  if (isSSR) {
    return {
      locale: 'en-US',
      direction: 'ltr'
    };
  }

  return defaultLocale;
}

const $cff8541df3b5c83067b2ab3ee0d20$var$I18nContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);

function I18nProvider(props) {
  let {
    locale,
    children
  } = props;
  let defaultLocale = $e851d0b81d46abd5f971c8e95c27f1$export$useDefaultLocale();
  let value = locale ? {
    locale,
    direction: $d26e725ad56fbcb2c25f52b7de27$export$isRTL(locale) ? 'rtl' : 'ltr'
  } : defaultLocale;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement($cff8541df3b5c83067b2ab3ee0d20$var$I18nContext.Provider, {
    value: value
  }, children);
}
/**
 * Returns the current locale and layout direction.
 */

function useLocale() {
  let defaultLocale = $e851d0b81d46abd5f971c8e95c27f1$export$useDefaultLocale();
  let context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)($cff8541df3b5c83067b2ab3ee0d20$var$I18nContext);
  return context || defaultLocale;
}
const $f58d206cee90f9c2bf3c03e4522c35$var$cache = new WeakMap();

function $f58d206cee90f9c2bf3c03e4522c35$var$getCachedDictionary(strings) {
  let dictionary = $f58d206cee90f9c2bf3c03e4522c35$var$cache.get(strings);

  if (!dictionary) {
    dictionary = new _internationalized_message__WEBPACK_IMPORTED_MODULE_3__.MessageDictionary(strings);
    $f58d206cee90f9c2bf3c03e4522c35$var$cache.set(strings, dictionary);
  }

  return dictionary;
}
/**
 * Handles formatting ICU Message strings to create localized strings for the current locale.
 * Automatically updates when the locale changes, and handles caching of messages for performance.
 * @param strings - A mapping of languages to strings by key.
 */


function useMessageFormatter(strings) {
  let {
    locale
  } = useLocale();
  let dictionary = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => $f58d206cee90f9c2bf3c03e4522c35$var$getCachedDictionary(strings), [strings]);
  let formatter = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new _internationalized_message__WEBPACK_IMPORTED_MODULE_3__.MessageFormatter(locale, dictionary), [locale, dictionary]);
  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((key, variables) => formatter.format(key, variables), [formatter]);
}

/**
 * Provides localized date formatting for the current locale. Automatically updates when the locale changes,
 * and handles caching of the date formatter for performance.
 * @param options - Formatting options.
 */
function useDateFormatter(options) {
  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.
  let lastOptions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);

  if (options && lastOptions.current && $b0007c63a64054c318efb8b6cd0053f$var$isEqual(options, lastOptions.current)) {
    options = lastOptions.current;
  }

  lastOptions.current = options;
  let {
    locale
  } = useLocale();
  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new _internationalized_date__WEBPACK_IMPORTED_MODULE_4__.DateFormatter(locale, options), [locale, options]);
}

function $b0007c63a64054c318efb8b6cd0053f$var$isEqual(a, b) {
  if (a === b) {
    return true;
  }

  let aKeys = Object.keys(a);
  let bKeys = Object.keys(b);

  if (aKeys.length !== bKeys.length) {
    return false;
  }

  for (let key of aKeys) {
    if (b[key] !== a[key]) {
      return false;
    }
  }

  return true;
}

/**
 * Provides localized number formatting for the current locale. Automatically updates when the locale changes,
 * and handles caching of the number formatter for performance.
 * @param options - Formatting options.
 */
function useNumberFormatter(options) {
  if (options === void 0) {
    options = {};
  }

  let {
    locale
  } = useLocale();
  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new _internationalized_number__WEBPACK_IMPORTED_MODULE_5__.NumberFormatter(locale, options), [locale, options]);
}
let $a4045a18d7252bf6de9312e613c4e$var$cache = new Map();
/**
 * Provides localized string collation for the current locale. Automatically updates when the locale changes,
 * and handles caching of the collator for performance.
 * @param options - Collator options.
 */

function useCollator(options) {
  let {
    locale
  } = useLocale();
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');

  if ($a4045a18d7252bf6de9312e613c4e$var$cache.has(cacheKey)) {
    return $a4045a18d7252bf6de9312e613c4e$var$cache.get(cacheKey);
  }

  let formatter = new Intl.Collator(locale, options);
  $a4045a18d7252bf6de9312e613c4e$var$cache.set(cacheKey, formatter);
  return formatter;
}

/**
 * Provides localized string search functionality that is useful for filtering or matching items
 * in a list. Options can be provided to adjust the sensitivity to case, diacritics, and other parameters.
 */
function useFilter(options) {
  let collator = useCollator((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
    usage: 'search'
  }, options)); // TODO(later): these methods don't currently support the ignorePunctuation option.

  return {
    startsWith(string, substring) {
      if (substring.length === 0) {
        return true;
      } // Normalize both strings so we can slice safely
      // TODO: take into account the ignorePunctuation option as well...


      string = string.normalize('NFC');
      substring = substring.normalize('NFC');
      return collator.compare(string.slice(0, substring.length), substring) === 0;
    },

    endsWith(string, substring) {
      if (substring.length === 0) {
        return true;
      }

      string = string.normalize('NFC');
      substring = substring.normalize('NFC');
      return collator.compare(string.slice(-substring.length), substring) === 0;
    },

    contains(string, substring) {
      if (substring.length === 0) {
        return true;
      }

      string = string.normalize('NFC');
      substring = substring.normalize('NFC');
      let scan = 0;
      let sliceLen = substring.length;

      for (; scan + sliceLen <= string.length; scan++) {
        let slice = string.slice(scan, scan + sliceLen);

        if (collator.compare(substring, slice) === 0) {
          return true;
        }
      }

      return false;
    }

  };
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-aria/menu/dist/module.js":
/*!*******************************************************!*\
  !*** ../node_modules/@react-aria/menu/dist/module.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useMenu": () => (/* binding */ useMenu),
/* harmony export */   "useMenuItem": () => (/* binding */ useMenuItem),
/* harmony export */   "useMenuSection": () => (/* binding */ useMenuSection),
/* harmony export */   "useMenuTrigger": () => (/* binding */ useMenuTrigger)
/* harmony export */ });
/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-aria/interactions */ "../node_modules/@react-aria/interactions/dist/module.js");
/* harmony import */ var _react_stately_collections__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-stately/collections */ "../node_modules/@react-stately/collections/dist/module.js");
/* harmony import */ var _react_aria_selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-aria/selection */ "../node_modules/@react-aria/selection/dist/module.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _react_aria_overlays__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-aria/overlays */ "../node_modules/@react-aria/overlays/dist/module.js");
/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/utils */ "../node_modules/@react-aria/utils/dist/module.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");








/**
 * Provides the behavior and accessibility implementation for a menu trigger.
 * @param props - Props for the menu trigger.
 * @param state - State for the menu trigger.
 */
function useMenuTrigger(props, state, ref) {
  let {
    type = 'menu',
    isDisabled
  } = props;
  let menuTriggerId = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.useId)();
  let {
    triggerProps,
    overlayProps
  } = (0,_react_aria_overlays__WEBPACK_IMPORTED_MODULE_3__.useOverlayTrigger)({
    type
  }, state, ref);

  let onKeyDown = e => {
    if (isDisabled) {
      return;
    }

    if (ref && ref.current) {
      switch (e.key) {
        case 'ArrowDown':
        case 'Enter':
        case ' ':
          // Stop propagation, unless it would already be handled by useKeyboard.
          if (!('continuePropagation' in e)) {
            e.stopPropagation();
          }

          e.preventDefault();
          state.toggle('first');
          break;

        case 'ArrowUp':
          if (!('continuePropagation' in e)) {
            e.stopPropagation();
          }

          e.preventDefault();
          state.toggle('last');
          break;
      }
    }
  };

  return {
    menuTriggerProps: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, triggerProps, {
      id: menuTriggerId,

      onPressStart(e) {
        // For consistency with native, open the menu on mouse/key down, but touch up.
        if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) {
          // If opened with a screen reader, auto focus the first item.
          // Otherwise, the menu itself will be focused.
          state.toggle(e.pointerType === 'virtual' ? 'first' : null);
        }
      },

      onPress(e) {
        if (e.pointerType === 'touch' && !isDisabled) {
          state.toggle();
        }
      },

      onKeyDown
    }),
    menuProps: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, overlayProps, {
      'aria-labelledby': menuTriggerId
    })
  };
}

/**
 * Provides the behavior and accessibility implementation for a menu component.
 * A menu displays a list of actions or options that a user can choose.
 * @param props - Props for the menu.
 * @param state - State for the menu, as returned by `useListState`.
 */
function useMenu(props, state, ref) {
  let {
    shouldFocusWrap = true
  } = props,
      otherProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(props, ["shouldFocusWrap"]);

  if (!props['aria-label'] && !props['aria-labelledby']) {
    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');
  }

  let domProps = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.filterDOMProps)(props, {
    labelable: true
  });
  let {
    listProps
  } = (0,_react_aria_selection__WEBPACK_IMPORTED_MODULE_4__.useSelectableList)((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, otherProps, {
    ref,
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    shouldFocusWrap
  }));
  return {
    menuProps: (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.mergeProps)(domProps, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
      role: 'menu'
    }, listProps))
  };
}

/**
 * Provides the behavior and accessibility implementation for an item in a menu.
 * See `useMenu` for more details about menus.
 * @param props - Props for the item.
 * @param state - State for the menu, as returned by `useTreeState`.
 */
function useMenuItem(props, state, ref) {
  let {
    isSelected,
    isDisabled,
    key,
    onClose,
    closeOnSelect,
    isVirtualized,
    onAction
  } = props;
  let role = 'menuitem';

  if (state.selectionManager.selectionMode === 'single') {
    role = 'menuitemradio';
  } else if (state.selectionManager.selectionMode === 'multiple') {
    role = 'menuitemcheckbox';
  }

  let labelId = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.useSlotId)();
  let descriptionId = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.useSlotId)();
  let keyboardId = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.useSlotId)();
  let ariaProps = {
    'aria-disabled': isDisabled,
    role,
    'aria-label': props['aria-label'],
    'aria-labelledby': labelId,
    'aria-describedby': [descriptionId, keyboardId].filter(Boolean).join(' ') || undefined
  };

  if (state.selectionManager.selectionMode !== 'none') {
    ariaProps['aria-checked'] = isSelected;
  }

  if (isVirtualized) {
    ariaProps['aria-posinset'] = state.collection.getItem(key).index;
    ariaProps['aria-setsize'] = (0,_react_stately_collections__WEBPACK_IMPORTED_MODULE_5__.getItemCount)(state.collection);
  }

  let onKeyDown = e => {
    // Ignore repeating events, which may have started on the menu trigger before moving
    // focus to the menu item. We want to wait for a second complete key press sequence.
    if (e.repeat) {
      return;
    }

    switch (e.key) {
      case ' ':
        if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) {
          onClose();
        }

        break;

      case 'Enter':
        // The Enter key should always close on select, except if overridden.
        if (!isDisabled && closeOnSelect !== false && onClose) {
          onClose();
        }

        break;
    }
  };

  let onPressStart = e => {
    if (e.pointerType === 'keyboard' && onAction) {
      onAction(key);
    }
  };

  let onPressUp = e => {
    if (e.pointerType !== 'keyboard') {
      if (onAction) {
        onAction(key);
      } // Pressing a menu item should close by default in single selection mode but not multiple
      // selection mode, except if overridden by the closeOnSelect prop.


      if (onClose && (closeOnSelect != null ? closeOnSelect : state.selectionManager.selectionMode !== 'multiple')) {
        onClose();
      }
    }
  };

  let {
    itemProps
  } = (0,_react_aria_selection__WEBPACK_IMPORTED_MODULE_4__.useSelectableItem)({
    selectionManager: state.selectionManager,
    key,
    ref,
    shouldSelectOnPressUp: true
  });
  let {
    pressProps
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_6__.usePress)({
    onPressStart,
    onPressUp,
    isDisabled
  });
  let {
    hoverProps
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_6__.useHover)({
    isDisabled,

    onHoverStart() {
      if (!(0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_6__.isFocusVisible)()) {
        state.selectionManager.setFocused(true);
        state.selectionManager.setFocusedKey(key);
      }
    }

  });
  return {
    menuItemProps: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, ariaProps, (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.mergeProps)(itemProps, pressProps, hoverProps, {
      onKeyDown
    })),
    labelProps: {
      id: labelId
    },
    descriptionProps: {
      id: descriptionId
    },
    keyboardShortcutProps: {
      id: keyboardId
    }
  };
}

/**
 * Provides the behavior and accessibility implementation for a section in a menu.
 * See `useMenu` for more details about menus.
 * @param props - Props for the section.
 */
function useMenuSection(props) {
  let {
    heading,
    'aria-label': ariaLabel
  } = props;
  let headingId = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.useId)();
  return {
    itemProps: {
      role: 'presentation'
    },
    headingProps: heading ? {
      // Techincally, menus cannot contain headings according to ARIA.
      // We hide the heading from assistive technology, and only use it
      // as a label for the nested group.
      id: headingId,
      'aria-hidden': true
    } : {},
    groupProps: {
      role: 'group',
      'aria-label': ariaLabel,
      'aria-labelledby': heading ? headingId : undefined
    }
  };
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-aria/overlays/dist/module.js":
/*!***********************************************************!*\
  !*** ../node_modules/@react-aria/overlays/dist/module.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DismissButton": () => (/* binding */ DismissButton),
/* harmony export */   "ModalProvider": () => (/* binding */ ModalProvider),
/* harmony export */   "OverlayContainer": () => (/* binding */ OverlayContainer),
/* harmony export */   "OverlayProvider": () => (/* binding */ OverlayProvider),
/* harmony export */   "ariaHideOutside": () => (/* binding */ ariaHideOutside),
/* harmony export */   "useModal": () => (/* binding */ useModal),
/* harmony export */   "useModalProvider": () => (/* binding */ useModalProvider),
/* harmony export */   "useOverlay": () => (/* binding */ useOverlay),
/* harmony export */   "useOverlayPosition": () => (/* binding */ useOverlayPosition),
/* harmony export */   "useOverlayTrigger": () => (/* binding */ useOverlayTrigger),
/* harmony export */   "usePreventScroll": () => (/* binding */ usePreventScroll)
/* harmony export */ });
/* harmony import */ var _react_aria_visually_hidden__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @react-aria/visually-hidden */ "../node_modules/@react-aria/visually-hidden/dist/module.js");
/* harmony import */ var _babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/esm/interopRequireDefault.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "../node_modules/react-dom/profiling.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @react-aria/interactions */ "../node_modules/@react-aria/interactions/dist/module.js");
/* harmony import */ var _react_aria_i18n__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @react-aria/i18n */ "../node_modules/@react-aria/i18n/dist/module.js");
/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @react-aria/utils */ "../node_modules/@react-aria/utils/dist/module.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var dom_helpers_ownerDocument__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dom-helpers/ownerDocument */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/ownerDocument.js");
/* harmony import */ var dom_helpers_ownerDocument__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dom_helpers_ownerDocument__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var dom_helpers_query_scrollTop__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! dom-helpers/query/scrollTop */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/scrollTop.js");
/* harmony import */ var dom_helpers_query_scrollTop__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(dom_helpers_query_scrollTop__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var dom_helpers_query_scrollLeft__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! dom-helpers/query/scrollLeft */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/scrollLeft.js");
/* harmony import */ var dom_helpers_query_scrollLeft__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(dom_helpers_query_scrollLeft__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var dom_helpers_query_position__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! dom-helpers/query/position */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/position.js");
/* harmony import */ var dom_helpers_query_position__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(dom_helpers_query_position__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var dom_helpers_query_offset__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! dom-helpers/query/offset */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/offset.js");
/* harmony import */ var dom_helpers_query_offset__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(dom_helpers_query_offset__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var dom_helpers_style__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! dom-helpers/style */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/index.js");
/* harmony import */ var dom_helpers_style__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(dom_helpers_style__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");















const $d45e305fb90d49e7c81f49bb4afe323b$var$AXIS = {
  top: 'top',
  bottom: 'top',
  left: 'left',
  right: 'left'
};
const $d45e305fb90d49e7c81f49bb4afe323b$var$FLIPPED_DIRECTION = {
  top: 'bottom',
  bottom: 'top',
  left: 'right',
  right: 'left'
};
const $d45e305fb90d49e7c81f49bb4afe323b$var$CROSS_AXIS = {
  top: 'left',
  left: 'top'
};
const $d45e305fb90d49e7c81f49bb4afe323b$var$AXIS_SIZE = {
  top: 'height',
  left: 'width'
};
const $d45e305fb90d49e7c81f49bb4afe323b$var$PARSED_PLACEMENT_CACHE = {}; // @ts-ignore

let $d45e305fb90d49e7c81f49bb4afe323b$var$visualViewport = typeof window !== 'undefined' && window.visualViewport;

function $d45e305fb90d49e7c81f49bb4afe323b$var$getContainerDimensions(containerNode) {
  let width = 0,
      height = 0,
      top = 0,
      left = 0;
  let scroll = {};

  if (containerNode.tagName === 'BODY') {
    var _visualViewport$width, _visualViewport$heigh;

    width = (_visualViewport$width = $d45e305fb90d49e7c81f49bb4afe323b$var$visualViewport == null ? void 0 : $d45e305fb90d49e7c81f49bb4afe323b$var$visualViewport.width) != null ? _visualViewport$width : document.documentElement.clientWidth;
    height = (_visualViewport$heigh = $d45e305fb90d49e7c81f49bb4afe323b$var$visualViewport == null ? void 0 : $d45e305fb90d49e7c81f49bb4afe323b$var$visualViewport.height) != null ? _visualViewport$heigh : document.documentElement.clientHeight;
    scroll.top = dom_helpers_query_scrollTop__WEBPACK_IMPORTED_MODULE_5___default()(dom_helpers_ownerDocument__WEBPACK_IMPORTED_MODULE_4___default()(containerNode).documentElement) || dom_helpers_query_scrollTop__WEBPACK_IMPORTED_MODULE_5___default()(containerNode);
    scroll.left = dom_helpers_query_scrollLeft__WEBPACK_IMPORTED_MODULE_6___default()(dom_helpers_ownerDocument__WEBPACK_IMPORTED_MODULE_4___default()(containerNode).documentElement) || dom_helpers_query_scrollLeft__WEBPACK_IMPORTED_MODULE_6___default()(containerNode);
  } else {
    ({
      width,
      height,
      top,
      left
    } = dom_helpers_query_offset__WEBPACK_IMPORTED_MODULE_8___default()(containerNode));
    scroll.top = dom_helpers_query_scrollTop__WEBPACK_IMPORTED_MODULE_5___default()(containerNode);
    scroll.left = dom_helpers_query_scrollLeft__WEBPACK_IMPORTED_MODULE_6___default()(containerNode);
  }

  return {
    width,
    height,
    scroll,
    top,
    left
  };
}

function $d45e305fb90d49e7c81f49bb4afe323b$var$getScroll(node) {
  return {
    top: node.scrollTop,
    left: node.scrollLeft,
    width: node.scrollWidth,
    height: node.scrollHeight
  };
}

function $d45e305fb90d49e7c81f49bb4afe323b$var$getDelta(axis, offset, size, containerDimensions, padding) {
  let containerScroll = containerDimensions.scroll[axis];
  let containerHeight = containerDimensions[$d45e305fb90d49e7c81f49bb4afe323b$var$AXIS_SIZE[axis]];
  let startEdgeOffset = offset - padding - containerScroll;
  let endEdgeOffset = offset + padding - containerScroll + size;

  if (startEdgeOffset < 0) {
    return -startEdgeOffset;
  } else if (endEdgeOffset > containerHeight) {
    return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);
  } else {
    return 0;
  }
}

function $d45e305fb90d49e7c81f49bb4afe323b$var$getMargins(node) {
  let style = window.getComputedStyle(node);
  return {
    top: parseInt(style.marginTop, 10) || 0,
    bottom: parseInt(style.marginBottom, 10) || 0,
    left: parseInt(style.marginLeft, 10) || 0,
    right: parseInt(style.marginRight, 10) || 0
  };
}

function $d45e305fb90d49e7c81f49bb4afe323b$var$parsePlacement(input) {
  if ($d45e305fb90d49e7c81f49bb4afe323b$var$PARSED_PLACEMENT_CACHE[input]) {
    return $d45e305fb90d49e7c81f49bb4afe323b$var$PARSED_PLACEMENT_CACHE[input];
  }

  let [placement, crossPlacement] = input.split(' ');
  let axis = $d45e305fb90d49e7c81f49bb4afe323b$var$AXIS[placement] || 'right';
  let crossAxis = $d45e305fb90d49e7c81f49bb4afe323b$var$CROSS_AXIS[axis];

  if (!$d45e305fb90d49e7c81f49bb4afe323b$var$AXIS[crossPlacement]) {
    crossPlacement = 'center';
  }

  let size = $d45e305fb90d49e7c81f49bb4afe323b$var$AXIS_SIZE[axis];
  let crossSize = $d45e305fb90d49e7c81f49bb4afe323b$var$AXIS_SIZE[crossAxis];
  $d45e305fb90d49e7c81f49bb4afe323b$var$PARSED_PLACEMENT_CACHE[input] = {
    placement,
    crossPlacement,
    axis,
    crossAxis,
    size,
    crossSize
  };
  return $d45e305fb90d49e7c81f49bb4afe323b$var$PARSED_PLACEMENT_CACHE[input];
}

function $d45e305fb90d49e7c81f49bb4afe323b$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned) {
  let {
    placement,
    crossPlacement,
    axis,
    crossAxis,
    size,
    crossSize
  } = placementInfo;
  let position = {}; // button position

  position[crossAxis] = childOffset[crossAxis];

  if (crossPlacement === 'center') {
    //  + (button size / 2) - (overlay size / 2)
    // at this point the overlay center should match the button center
    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;
  } else if (crossPlacement !== crossAxis) {
    //  + (button size) - (overlay size)
    // at this point the overlay bottom should match the button bottom
    position[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];
  }
  /* else {
   the overlay top should match the button top
  } */
  // add the crossOffset from props


  position[crossAxis] += crossOffset; // this is button center position - the overlay size + half of the button to align bottom of overlay with button center

  let minViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2 - overlaySize[crossSize]; // this is button position of center, aligns top of overlay with button center

  let maxViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2; // clamp it into the range of the min/max positions

  position[crossAxis] = Math.min(Math.max(minViablePosition, position[crossAxis]), maxViablePosition); // Floor these so the position isn't placed on a partial pixel, only whole pixels. Shouldn't matter if it was floored or ceiled, so chose one.

  if (placement === axis) {
    // If the container is positioned (non-static), then we use the container's actual
    // height, as `bottom` will be relative to this height.  But if the container is static,
    // then it can only be the `document.body`, and `bottom` will be relative to _its_
    // container, which should be as large as boundaryDimensions.
    const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size];
    position[$d45e305fb90d49e7c81f49bb4afe323b$var$FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);
  } else {
    position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);
  }

  return position;
}

function $d45e305fb90d49e7c81f49bb4afe323b$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding) {
  return position.top != null // We want the distance between the top of the overlay to the bottom of the boundary
  ? Math.max(0, boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top - ( // this is the bottom of the boundary
  containerOffsetWithBoundary.top + position.top) // this is the top of the overlay
  - (margins.top + margins.bottom + padding) // save additional space for margin and padding
  ) // We want the distance between the top of the trigger to the top of the boundary
  : Math.max(0, childOffset.top + containerOffsetWithBoundary.top - ( // this is the top of the trigger
  boundaryDimensions.top + boundaryDimensions.scroll.top) // this is the top of the boundary
  - (margins.top + margins.bottom + padding) // save additional space for margin and padding
  );
}

function $d45e305fb90d49e7c81f49bb4afe323b$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding, placementInfo) {
  let {
    placement,
    axis,
    size
  } = placementInfo;

  if (placement === axis) {
    return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[$d45e305fb90d49e7c81f49bb4afe323b$var$FLIPPED_DIRECTION[axis]] - padding);
  }

  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[$d45e305fb90d49e7c81f49bb4afe323b$var$FLIPPED_DIRECTION[axis]] - padding);
}

function $d45e305fb90d49e7c81f49bb4afe323b$export$calculatePositionInternal(placementInput, childOffset, overlaySize, scrollSize, margins, padding, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned) {
  let placementInfo = $d45e305fb90d49e7c81f49bb4afe323b$var$parsePlacement(placementInput);
  let {
    size,
    crossAxis,
    crossSize,
    placement,
    crossPlacement
  } = placementInfo;
  let position = $d45e305fb90d49e7c81f49bb4afe323b$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);
  let normalizedOffset = offset;
  let space = $d45e305fb90d49e7c81f49bb4afe323b$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, placementInfo); // Check if the scroll size of the overlay is greater than the available space to determine if we need to flip

  if (flip && scrollSize[size] > space) {
    let flippedPlacementInfo = $d45e305fb90d49e7c81f49bb4afe323b$var$parsePlacement($d45e305fb90d49e7c81f49bb4afe323b$var$FLIPPED_DIRECTION[placement] + " " + crossPlacement);
    let flippedPosition = $d45e305fb90d49e7c81f49bb4afe323b$var$computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);
    let flippedSpace = $d45e305fb90d49e7c81f49bb4afe323b$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, flippedPlacementInfo); // If the available space for the flipped position is greater than the original available space, flip.

    if (flippedSpace > space) {
      placementInfo = flippedPlacementInfo;
      position = flippedPosition;
      normalizedOffset = offset;
    }
  }

  let delta = $d45e305fb90d49e7c81f49bb4afe323b$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);
  position[crossAxis] += delta;
  let maxHeight = $d45e305fb90d49e7c81f49bb4afe323b$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding);
  overlaySize.height = Math.min(overlaySize.height, maxHeight);
  position = $d45e305fb90d49e7c81f49bb4afe323b$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);
  delta = $d45e305fb90d49e7c81f49bb4afe323b$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);
  position[crossAxis] += delta;
  let arrowPosition = {};
  arrowPosition[crossAxis] = childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2;
  return {
    position,
    maxHeight: maxHeight,
    arrowOffsetLeft: arrowPosition.left,
    arrowOffsetTop: arrowPosition.top,
    placement: placementInfo.placement
  };
}
/**
 * Determines where to place the overlay with regards to the target and the position of an optional indicator.
 */


function $d45e305fb90d49e7c81f49bb4afe323b$export$calculatePosition(opts) {
  let {
    placement,
    targetNode,
    overlayNode,
    scrollNode,
    padding,
    shouldFlip,
    boundaryElement,
    offset,
    crossOffset
  } = opts;
  let container = overlayNode.offsetParent || document.body;
  let isBodyContainer = container.tagName === 'BODY';
  const containerPositionStyle = window.getComputedStyle(container).position;
  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== 'static';
  let childOffset = isBodyContainer ? dom_helpers_query_offset__WEBPACK_IMPORTED_MODULE_8___default()(targetNode) : dom_helpers_query_position__WEBPACK_IMPORTED_MODULE_7___default()(targetNode, container);

  if (!isBodyContainer) {
    childOffset.top += parseInt(dom_helpers_style__WEBPACK_IMPORTED_MODULE_9___default()(targetNode, 'marginTop'), 10) || 0;
    childOffset.left += parseInt(dom_helpers_style__WEBPACK_IMPORTED_MODULE_9___default()(targetNode, 'marginLeft'), 10) || 0;
  }

  let overlaySize = dom_helpers_query_offset__WEBPACK_IMPORTED_MODULE_8___default()(overlayNode);

  let margins = $d45e305fb90d49e7c81f49bb4afe323b$var$getMargins(overlayNode);
  overlaySize.width += margins.left + margins.right;
  overlaySize.height += margins.top + margins.bottom;
  let scrollSize = $d45e305fb90d49e7c81f49bb4afe323b$var$getScroll(scrollNode);
  let boundaryDimensions = $d45e305fb90d49e7c81f49bb4afe323b$var$getContainerDimensions(boundaryElement);
  let containerOffsetWithBoundary = boundaryElement.tagName === 'BODY' ? dom_helpers_query_offset__WEBPACK_IMPORTED_MODULE_8___default()(container) : dom_helpers_query_position__WEBPACK_IMPORTED_MODULE_7___default()(container, boundaryElement);
  return $d45e305fb90d49e7c81f49bb4afe323b$export$calculatePositionInternal(placement, childOffset, overlaySize, scrollSize, margins, padding, shouldFlip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned);
}

// This behavior moved from useOverlayTrigger to useOverlayPosition.
// For backward compatibility, where useOverlayTrigger handled hiding the popover on close,
// it sets a close function here mapped from the trigger element. This way we can avoid
// forcing users to pass an onClose function to useOverlayPosition which could be considered
// a breaking change.
const $df1b2f080f58bf9e74aeb666b8c96ba$export$onCloseMap = new WeakMap();

/** @private */
function $df1b2f080f58bf9e74aeb666b8c96ba$export$useCloseOnScroll(opts) {
  let {
    triggerRef,
    isOpen,
    onClose
  } = opts;
  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {
    if (!isOpen) {
      return;
    }

    let onScroll = e => {
      // Ignore if scrolling an scrollable region outside the trigger's tree.
      let target = e.target; // window is not a Node and doesn't have contain, but window contains everything

      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current)) {
        return;
      }

      let onCloseHandler = onClose || $df1b2f080f58bf9e74aeb666b8c96ba$export$onCloseMap.get(triggerRef.current);

      if (onCloseHandler) {
        onCloseHandler();
      }
    };

    window.addEventListener('scroll', onScroll, true);
    return () => {
      window.removeEventListener('scroll', onScroll, true);
    };
  }, [isOpen, onClose, triggerRef]);
}

// @ts-ignore
let $ae841ee9d3f76b31663cf0594adb0fc$var$visualViewport = typeof window !== 'undefined' && window.visualViewport;
/**
 * Handles positioning overlays like popovers and menus relative to a trigger
 * element, and updating the position when the window resizes.
 */

function useOverlayPosition(props) {
  let {
    direction
  } = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_11__.useLocale)();
  let {
    targetRef,
    overlayRef,
    scrollRef = overlayRef,
    placement = 'bottom',
    containerPadding = 12,
    shouldFlip = true,
    boundaryElement = typeof document !== 'undefined' ? document.body : null,
    offset = 0,
    crossOffset = 0,
    shouldUpdatePosition = true,
    isOpen = true,
    onClose
  } = props;
  let [position, setPosition] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)({
    position: {},
    arrowOffsetLeft: undefined,
    arrowOffsetTop: undefined,
    maxHeight: undefined,
    placement: undefined
  });
  let deps = [shouldUpdatePosition, placement, overlayRef.current, targetRef.current, scrollRef.current, containerPadding, shouldFlip, boundaryElement, offset, crossOffset, isOpen, direction];
  let updatePosition = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {
    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement) {
      return;
    }

    setPosition($d45e305fb90d49e7c81f49bb4afe323b$export$calculatePosition({
      placement: $ae841ee9d3f76b31663cf0594adb0fc$var$translateRTL(placement, direction),
      overlayNode: overlayRef.current,
      targetNode: targetRef.current,
      scrollNode: scrollRef.current,
      padding: containerPadding,
      shouldFlip,
      boundaryElement,
      offset,
      crossOffset
    }));
  }, deps); // Update position when anything changes

  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.useLayoutEffect)(updatePosition, deps); // Update position on window resize

  $ae841ee9d3f76b31663cf0594adb0fc$var$useResize(updatePosition); // Reposition the overlay and do not close on scroll while the visual viewport is resizing.
  // This will ensure that overlays adjust their positioning when the iOS virtual keyboard appears.

  let isResizing = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(false);
  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.useLayoutEffect)(() => {
    let timeout;

    let onResize = () => {
      isResizing.current = true;
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        isResizing.current = false;
      }, 500);
      updatePosition();
    };

    $ae841ee9d3f76b31663cf0594adb0fc$var$visualViewport == null ? void 0 : $ae841ee9d3f76b31663cf0594adb0fc$var$visualViewport.addEventListener('resize', onResize);
    return () => {
      $ae841ee9d3f76b31663cf0594adb0fc$var$visualViewport == null ? void 0 : $ae841ee9d3f76b31663cf0594adb0fc$var$visualViewport.removeEventListener('resize', onResize);
    };
  }, [updatePosition]);
  let close = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {
    if (!isResizing.current) {
      onClose();
    }
  }, [onClose, isResizing]); // When scrolling a parent scrollable region of the trigger (other than the body),
  // we hide the popover. Otherwise, its position would be incorrect.

  $df1b2f080f58bf9e74aeb666b8c96ba$export$useCloseOnScroll({
    triggerRef: targetRef,
    isOpen,
    onClose: onClose ? close : undefined
  });
  return {
    overlayProps: {
      style: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_10__["default"])({
        position: 'absolute',
        zIndex: 100000
      }, position.position, {
        maxHeight: position.maxHeight
      })
    },
    placement: position.placement,
    arrowProps: {
      style: {
        left: position.arrowOffsetLeft,
        top: position.arrowOffsetTop
      }
    },
    updatePosition
  };
}

function $ae841ee9d3f76b31663cf0594adb0fc$var$useResize(onResize) {
  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.useLayoutEffect)(() => {
    window.addEventListener('resize', onResize, false);
    return () => {
      window.removeEventListener('resize', onResize, false);
    };
  }, [onResize]);
}

function $ae841ee9d3f76b31663cf0594adb0fc$var$translateRTL(position, direction) {
  if (direction === 'rtl') {
    return position.replace('start', 'right').replace('end', 'left');
  }

  return position.replace('start', 'left').replace('end', 'right');
}

const $e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays = [];
/**
 * Provides the behavior for overlays such as dialogs, popovers, and menus.
 * Hides the overlay when the user interacts outside it, when the Escape key is pressed,
 * or optionally, on blur. Only the top-most overlay will close at once.
 */

function useOverlay(props, ref) {
  let {
    onClose,
    shouldCloseOnBlur,
    isOpen,
    isDismissable = false,
    isKeyboardDismissDisabled = false,
    shouldCloseOnInteractOutside
  } = props; // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.

  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {
    if (isOpen) {
      $e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.push(ref);
    }

    return () => {
      let index = $e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.indexOf(ref);

      if (index >= 0) {
        $e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.splice(index, 1);
      }
    };
  }, [isOpen, ref]); // Only hide the overlay when it is the topmost visible overlay in the stack.

  let onHide = () => {
    if ($e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays[$e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.length - 1] === ref && onClose) {
      onClose();
    }
  };

  let onInteractOutsideStart = e => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {
      if ($e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays[$e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.length - 1] === ref) {
        e.stopPropagation();
        e.preventDefault();
      }
    }
  };

  let onInteractOutside = e => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {
      if ($e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays[$e4d5b842fe0e1058e95712442330b88c$var$visibleOverlays.length - 1] === ref) {
        e.stopPropagation();
        e.preventDefault();
      }

      onHide();
    }
  }; // Handle the escape key


  let onKeyDown = e => {
    if (e.key === 'Escape' && !isKeyboardDismissDisabled) {
      e.preventDefault();
      onHide();
    }
  }; // Handle clicking outside the overlay to close it


  (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_13__.useInteractOutside)({
    ref,
    onInteractOutside: isDismissable ? onInteractOutside : null,
    onInteractOutsideStart
  });
  let {
    focusWithinProps
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_13__.useFocusWithin)({
    isDisabled: !shouldCloseOnBlur,
    onBlurWithin: e => {
      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget)) {
        onClose();
      }
    }
  });

  let onPointerDownUnderlay = e => {
    // fixes a firefox issue that starts text selection https://bugzilla.mozilla.org/show_bug.cgi?id=1675846
    if (e.target === e.currentTarget) {
      e.preventDefault();
    }
  };

  return {
    overlayProps: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_10__["default"])({
      onKeyDown
    }, focusWithinProps),
    underlayProps: {
      onPointerDown: onPointerDownUnderlay
    }
  };
}

/**
 * Handles the behavior and accessibility for an overlay trigger, e.g. a button
 * that opens a popover, menu, or other overlay that is positioned relative to the trigger.
 */
function useOverlayTrigger(props, state, ref) {
  let {
    type
  } = props;
  let {
    isOpen
  } = state; // Backward compatibility. Share state close function with useOverlayPosition so it can close on scroll
  // without forcing users to pass onClose.

  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {
    if (ref && ref.current) {
      $df1b2f080f58bf9e74aeb666b8c96ba$export$onCloseMap.set(ref.current, state.close);
    }
  }); // Aria 1.1 supports multiple values for aria-haspopup other than just menus.
  // https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup
  // However, we only add it for menus for now because screen readers often
  // announce it as a menu even for other values.

  let ariaHasPopup = undefined;

  if (type === 'menu') {
    ariaHasPopup = true;
  } else if (type === 'listbox') {
    ariaHasPopup = 'listbox';
  }

  let overlayId = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.useId)();
  return {
    triggerProps: {
      'aria-haspopup': ariaHasPopup,
      'aria-expanded': isOpen,
      'aria-controls': isOpen ? overlayId : null
    },
    overlayProps: {
      id: overlayId
    }
  };
}
// @ts-ignore
const $ece0076f06e8a828c60ba0c94f22f89$var$visualViewport = typeof window !== 'undefined' && window.visualViewport; // HTML input types that do not cause the software keyboard to appear.

const $ece0076f06e8a828c60ba0c94f22f89$var$nonTextInputTypes = new Set(['checkbox', 'radio', 'range', 'color', 'file', 'image', 'button', 'submit', 'reset']);
/**
 * Prevents scrolling on the document body on mount, and
 * restores it on unmount. Also ensures that content does not
 * shift due to the scrollbars disappearing.
 */

function usePreventScroll(options) {
  if (options === void 0) {
    options = {};
  }

  let {
    isDisabled
  } = options;
  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.useLayoutEffect)(() => {
    if (isDisabled) {
      return;
    }

    if ((0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.isIOS)()) {
      return $ece0076f06e8a828c60ba0c94f22f89$var$preventScrollMobileSafari();
    } else {
      return $ece0076f06e8a828c60ba0c94f22f89$var$preventScrollStandard();
    }
  }, [isDisabled]);
} // For most browsers, all we need to do is set `overflow: hidden` on the root element, and
// add some padding to prevent the page from shifting when the scrollbar is hidden.

function $ece0076f06e8a828c60ba0c94f22f89$var$preventScrollStandard() {
  return (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.chain)($ece0076f06e8a828c60ba0c94f22f89$var$setStyle(document.documentElement, 'paddingRight', window.innerWidth - document.documentElement.clientWidth + "px"), $ece0076f06e8a828c60ba0c94f22f89$var$setStyle(document.documentElement, 'overflow', 'hidden'));
} // Mobile Safari is a whole different beast. Even with overflow: hidden,
// it still scrolls the page in many situations:
//
// 1. When the bottom toolbar and address bar are collapsed, page scrolling is always allowed.
// 2. When the keyboard is visible, the viewport does not resize. Instead, the keyboard covers part of
//    it, so it becomes scrollable.
// 3. When tapping on an input, the page always scrolls so that the input is centered in the visual viewport.
//    This may cause even fixed position elements to scroll off the screen.
// 4. When using the next/previous buttons in the keyboard to navigate between inputs, the whole page always
//    scrolls, even if the input is inside a nested scrollable element that could be scrolled instead.
//
// In order to work around these cases, and prevent scrolling without jankiness, we do a few things:
//
// 1. Prevent default on `touchmove` events that are not in a scrollable element. This prevents touch scrolling
//    on the window.
// 2. Prevent default on `touchmove` events inside a scrollable element when the scroll position is at the
//    top or bottom. This avoids the whole page scrolling instead, but does prevent overscrolling.
// 3. Prevent default on `touchend` events on input elements and handle focusing the element ourselves.
// 4. When focusing an input, apply a transform to trick Safari into thinking the input is at the top
//    of the page, which prevents it from scrolling the page. After the input is focused, scroll the element
//    into view ourselves, without scrolling the whole page.
// 5. Offset the body by the scroll position using a negative margin and scroll to the top. This should appear the
//    same visually, but makes the actual scroll position always zero. This is required to make all of the
//    above work or Safari will still try to scroll the page when focusing an input.
// 6. As a last resort, handle window scroll events, and scroll back to the top. This can happen when attempting
//    to navigate to an input with the next/previous buttons that's outside a modal.


function $ece0076f06e8a828c60ba0c94f22f89$var$preventScrollMobileSafari() {
  let scrollable;
  let lastY = 0;

  let onTouchStart = e => {
    // Store the nearest scrollable parent element from the element that the user touched.
    scrollable = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.getScrollParent)(e.target);

    if (scrollable === document.documentElement && scrollable === document.body) {
      return;
    }

    lastY = e.changedTouches[0].pageY;
  };

  let onTouchMove = e => {
    // Prevent scrolling the window.
    if (scrollable === document.documentElement || scrollable === document.body) {
      e.preventDefault();
      return;
    } // Prevent scrolling up when at the top and scrolling down when at the bottom
    // of a nested scrollable area, otherwise mobile Safari will start scrolling
    // the window instead. Unfortunately, this disables bounce scrolling when at
    // the top but it's the best we can do.


    let y = e.changedTouches[0].pageY;
    let scrollTop = scrollable.scrollTop;
    let bottom = scrollable.scrollHeight - scrollable.clientHeight;

    if (scrollTop <= 0 && y > lastY || scrollTop >= bottom && y < lastY) {
      e.preventDefault();
    }

    lastY = y;
  };

  let onTouchEnd = e => {
    let target = e.target;

    if (target instanceof HTMLInputElement && !$ece0076f06e8a828c60ba0c94f22f89$var$nonTextInputTypes.has(target.type)) {
      e.preventDefault(); // Apply a transform to trick Safari into thinking the input is at the top of the page
      // so it doesn't try to scroll it into view. When tapping on an input, this needs to
      // be done before the "focus" event, so we have to focus the element ourselves.

      target.style.transform = 'translateY(-2000px)';
      target.focus();
      requestAnimationFrame(() => {
        target.style.transform = '';
      });
    }
  };

  let onFocus = e => {
    let target = e.target;

    if (target instanceof HTMLInputElement && !$ece0076f06e8a828c60ba0c94f22f89$var$nonTextInputTypes.has(target.type)) {
      // Transform also needs to be applied in the focus event in cases where focus moves
      // software keyboard. In these cases, it seems applying the transform in the focus event
      // is good enough, whereas when tapping an input, it must be done before the focus event. 🤷‍♂️
      target.style.transform = 'translateY(-2000px)';
      requestAnimationFrame(() => {
        target.style.transform = ''; // This will have prevented the browser from scrolling the focused element into view,
        // so we need to do this ourselves in a way that doesn't cause the whole page to scroll.

        if ($ece0076f06e8a828c60ba0c94f22f89$var$visualViewport) {
          if ($ece0076f06e8a828c60ba0c94f22f89$var$visualViewport.height < window.innerHeight) {
            // If the keyboard is already visible, do this after one additional frame
            // to wait for the transform to be removed.
            requestAnimationFrame(() => {
              $ece0076f06e8a828c60ba0c94f22f89$var$scrollIntoView(target);
            });
          } else {
            // Otherwise, wait for the visual viewport to resize before scrolling so we can
            // measure the correct position to scroll to.
            $ece0076f06e8a828c60ba0c94f22f89$var$visualViewport.addEventListener('resize', () => $ece0076f06e8a828c60ba0c94f22f89$var$scrollIntoView(target), {
              once: true
            });
          }
        }
      });
    }
  };

  let onWindowScroll = () => {
    // Last resort. If the window scrolled, scroll it back to the top.
    // It should always be at the top because the body will have a negative margin (see below).
    window.scrollTo(0, 0);
  }; // Record the original scroll position so we can restore it.
  // Then apply a negative margin to the body to offset it by the scroll position. This will
  // enable us to scroll the window to the top, which is required for the rest of this to work.


  let scrollX = window.pageXOffset;
  let scrollY = window.pageYOffset;
  let restoreStyles = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.chain)($ece0076f06e8a828c60ba0c94f22f89$var$setStyle(document.documentElement, 'paddingRight', window.innerWidth - document.documentElement.clientWidth + "px"), $ece0076f06e8a828c60ba0c94f22f89$var$setStyle(document.documentElement, 'overflow', 'hidden'), $ece0076f06e8a828c60ba0c94f22f89$var$setStyle(document.body, 'marginTop', "-" + scrollY + "px")); // Scroll to the top. The negative margin on the body will make this appear the same.

  window.scrollTo(0, 0);
  let removeEvents = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.chain)($ece0076f06e8a828c60ba0c94f22f89$var$addEvent(document, 'touchstart', onTouchStart, {
    passive: false,
    capture: true
  }), $ece0076f06e8a828c60ba0c94f22f89$var$addEvent(document, 'touchmove', onTouchMove, {
    passive: false,
    capture: true
  }), $ece0076f06e8a828c60ba0c94f22f89$var$addEvent(document, 'touchend', onTouchEnd, {
    passive: false,
    capture: true
  }), $ece0076f06e8a828c60ba0c94f22f89$var$addEvent(document, 'focus', onFocus, true), $ece0076f06e8a828c60ba0c94f22f89$var$addEvent(window, 'scroll', onWindowScroll));
  return () => {
    // Restore styles and scroll the page back to where it was.
    restoreStyles();
    removeEvents();
    window.scrollTo(scrollX, scrollY);
  };
} // Sets a CSS property on an element, and returns a function to revert it to the previous value.


function $ece0076f06e8a828c60ba0c94f22f89$var$setStyle(element, style, value) {
  let cur = element.style[style];
  element.style[style] = value;
  return () => {
    element.style[style] = cur;
  };
} // Adds an event listener to an element, and returns a function to remove it.


function $ece0076f06e8a828c60ba0c94f22f89$var$addEvent(target, event, handler, options) {
  target.addEventListener(event, handler, options);
  return () => {
    target.removeEventListener(event, handler, options);
  };
}

function $ece0076f06e8a828c60ba0c94f22f89$var$scrollIntoView(target) {
  // Find the parent scrollable element and adjust the scroll position if the target is not already in view.
  let scrollable = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_12__.getScrollParent)(target);

  if (scrollable !== document.documentElement && scrollable !== document.body) {
    let scrollableTop = scrollable.getBoundingClientRect().top;
    let targetTop = target.getBoundingClientRect().top;

    if (targetTop > scrollableTop + target.clientHeight) {
      scrollable.scrollTop += targetTop - scrollableTop;
    }
  }
}

const $b876e5ac9c98db373bf726bce3d604e$var$Context = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createContext(null);
/**
 * Each ModalProvider tracks how many modals are open in its subtree. On mount, the modals
 * trigger `addModal` to increment the count, and trigger `removeModal` on unmount to decrement it.
 * This is done recursively so that all parent providers are incremented and decremented.
 * If the modal count is greater than zero, we add `aria-hidden` to this provider to hide its
 * subtree from screen readers. This is done using React context in order to account for things
 * like portals, which can cause the React tree and the DOM tree to differ significantly in structure.
 */


function ModalProvider(props) {
  let {
    children
  } = props;
  let parent = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)($b876e5ac9c98db373bf726bce3d604e$var$Context);
  let [modalCount, setModalCount] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(0);
  let context = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => ({
    parent,
    modalCount,

    addModal() {
      setModalCount(count => count + 1);

      if (parent) {
        parent.addModal();
      }
    },

    removeModal() {
      setModalCount(count => count - 1);

      if (parent) {
        parent.removeModal();
      }
    }

  }), [parent, modalCount]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement($b876e5ac9c98db373bf726bce3d604e$var$Context.Provider, {
    value: context
  }, children);
}

/**
 * Used to determine if the tree should be aria-hidden based on how many
 * modals are open.
 */
function useModalProvider() {
  let context = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)($b876e5ac9c98db373bf726bce3d604e$var$Context);
  return {
    modalProviderProps: {
      'aria-hidden': context && context.modalCount > 0 ? true : null
    }
  };
}
/**
 * Creates a root node that will be aria-hidden if there are other modals open.
 */

function $b876e5ac9c98db373bf726bce3d604e$var$OverlayContainerDOM(props) {
  let {
    modalProviderProps
  } = useModalProvider();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("div", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_10__["default"])({
    "data-overlay-container": true
  }, props, modalProviderProps));
}
/**
 * An OverlayProvider acts as a container for the top-level application.
 * Any application that uses modal dialogs or other overlays should
 * be wrapped in a `<OverlayProvider>`. This is used to ensure that
 * the main content of the application is hidden from screen readers
 * if a modal or other overlay is opened. Only the top-most modal or
 * overlay should be accessible at once.
 */


function OverlayProvider(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement(ModalProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement($b876e5ac9c98db373bf726bce3d604e$var$OverlayContainerDOM, props));
}

/**
 * A container for overlays like modals and popovers. Renders the overlay
 * into a Portal which is placed at the end of the document body.
 * Also ensures that the overlay is hidden from screen readers if a
 * nested modal is opened. Only the top-most modal or overlay should
 * be accessible at once.
 */
function OverlayContainer(props) {
  let {
    portalContainer = document.body
  } = props,
      rest = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2__["default"])(props, ["portalContainer"]);

  react__WEBPACK_IMPORTED_MODULE_3__.useEffect(() => {
    if (portalContainer.closest('[data-overlay-container]')) {
      throw new Error('An OverlayContainer must not be inside another container. Please change the portalContainer prop.');
    }
  }, [portalContainer]);

  let contents = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement(OverlayProvider, rest);

  return /*#__PURE__*/react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(contents, portalContainer);
}

/**
 * Hides content outside the current `<OverlayContainer>` from screen readers
 * on mount and restores it on unmount. Typically used by modal dialogs and
 * other types of overlays to ensure that only the top-most modal is
 * accessible at once.
 */
function useModal(options) {
  // Add aria-hidden to all parent providers on mount, and restore on unmount.
  let context = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)($b876e5ac9c98db373bf726bce3d604e$var$Context);

  if (!context) {
    throw new Error('Modal is not contained within a provider');
  }

  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {
    if (options != null && options.isDisabled || !context || !context.parent) {
      return;
    } // The immediate context is from the provider containing this modal, so we only
    // want to trigger aria-hidden on its parents not on the modal provider itself.


    context.parent.addModal();
    return () => {
      if (context && context.parent) {
        context.parent.removeModal();
      }
    };
  }, [context, context.parent, options == null ? void 0 : options.isDisabled]);
  return {
    modalProps: {
      'data-ismodal': !(options != null && options.isDisabled)
    }
  };
}
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/ar-AE.json
var $e325a364098e05bf51160d06dcffdbe$exports = {};
$e325a364098e05bf51160d06dcffdbe$exports = JSON.parse("{\"dismiss\":\"تجاهل\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/bg-BG.json
var $ab088cc547d59c1be83369f8351a064$exports = {};
$ab088cc547d59c1be83369f8351a064$exports = JSON.parse("{\"dismiss\":\"Отхвърляне\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/cs-CZ.json
var $cec67ea16ca47059e10ca5e77187d8c2$exports = {};
$cec67ea16ca47059e10ca5e77187d8c2$exports = JSON.parse("{\"dismiss\":\"Odstranit\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/da-DK.json
var $d962fe1ed718c5ca37da1414136036f8$exports = {};
$d962fe1ed718c5ca37da1414136036f8$exports = JSON.parse("{\"dismiss\":\"Luk\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/de-DE.json
var $c5167dda40dde69038848f007e5$exports = {};
$c5167dda40dde69038848f007e5$exports = JSON.parse("{\"dismiss\":\"Schließen\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/el-GR.json
var $ecdd1ac0020e47f58a9ed51b5fb$exports = {};
$ecdd1ac0020e47f58a9ed51b5fb$exports = JSON.parse("{\"dismiss\":\"Απόρριψη\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/en-US.json
var $f33e30a89f4dff807f90ebe8c$exports = {};
$f33e30a89f4dff807f90ebe8c$exports = JSON.parse("{\"dismiss\":\"Dismiss\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/es-ES.json
var $ba353e2c61dcc5141af4537eeb3ef85c$exports = {};
$ba353e2c61dcc5141af4537eeb3ef85c$exports = JSON.parse("{\"dismiss\":\"Descartar\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/et-EE.json
var $dd3e8aaecbf1f2c2c0f9d51aacfd$exports = {};
$dd3e8aaecbf1f2c2c0f9d51aacfd$exports = JSON.parse("{\"dismiss\":\"Lõpeta\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/fi-FI.json
var $f730aaed9f4652842b2a8f94a4a$exports = {};
$f730aaed9f4652842b2a8f94a4a$exports = JSON.parse("{\"dismiss\":\"Hylkää\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/fr-FR.json
var $e76b22aab4e46b7806205b4af9ca3$exports = {};
$e76b22aab4e46b7806205b4af9ca3$exports = JSON.parse("{\"dismiss\":\"Rejeter\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/he-IL.json
var $c33ffdd5a9931bfc82c1c9b55e98de2f$exports = {};
$c33ffdd5a9931bfc82c1c9b55e98de2f$exports = JSON.parse("{\"dismiss\":\"התעלם\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/hr-HR.json
var $d64cb70d4ce170f599f4df5adf4e9898$exports = {};
$d64cb70d4ce170f599f4df5adf4e9898$exports = JSON.parse("{\"dismiss\":\"Odbaci\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/hu-HU.json
var $c05270a6513a8b6d8a6552a35a162$exports = {};
$c05270a6513a8b6d8a6552a35a162$exports = JSON.parse("{\"dismiss\":\"Elutasítás\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/it-IT.json
var $df915df637af1f3c14c8376c69dfd$exports = {};
$df915df637af1f3c14c8376c69dfd$exports = JSON.parse("{\"dismiss\":\"Ignora\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/ja-JP.json
var $e8bf1e6480d2c65d558c3537ec0d59ce$exports = {};
$e8bf1e6480d2c65d558c3537ec0d59ce$exports = JSON.parse("{\"dismiss\":\"閉じる\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/ko-KR.json
var $e06e93e1c9472a7e2fc5b26a87ea7$exports = {};
$e06e93e1c9472a7e2fc5b26a87ea7$exports = JSON.parse("{\"dismiss\":\"무시\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/lt-LT.json
var $fef82498418eab30c69349263b64e050$exports = {};
$fef82498418eab30c69349263b64e050$exports = JSON.parse("{\"dismiss\":\"Atmesti\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/lv-LV.json
var $c4df2502cb7b65c6578bcb8a165f6fc$exports = {};
$c4df2502cb7b65c6578bcb8a165f6fc$exports = JSON.parse("{\"dismiss\":\"Nerādīt\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/nb-NO.json
var $b50f4e499c19f4d55113139bba$exports = {};
$b50f4e499c19f4d55113139bba$exports = JSON.parse("{\"dismiss\":\"Lukk\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/nl-NL.json
var $e45d2f0079f29e4f5c6469cca7c$exports = {};
$e45d2f0079f29e4f5c6469cca7c$exports = JSON.parse("{\"dismiss\":\"Negeren\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/pl-PL.json
var $fcb5bfa87b2378a249bd7fb591ec22c2$exports = {};
$fcb5bfa87b2378a249bd7fb591ec22c2$exports = JSON.parse("{\"dismiss\":\"Zignoruj\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/pt-BR.json
var $edae5c6f18c937cf0015f2aa266d9fea$exports = {};
$edae5c6f18c937cf0015f2aa266d9fea$exports = JSON.parse("{\"dismiss\":\"Descartar\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/pt-PT.json
var $c016edcd88f37a017208da7518133d$exports = {};
$c016edcd88f37a017208da7518133d$exports = JSON.parse("{\"dismiss\":\"Dispensar\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/ro-RO.json
var $df1162b231d383d942e0fdb2bbf$exports = {};
$df1162b231d383d942e0fdb2bbf$exports = JSON.parse("{\"dismiss\":\"Revocare\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/ru-RU.json
var $fa17537bfd201c57fa41fd31dbd9f074$exports = {};
$fa17537bfd201c57fa41fd31dbd9f074$exports = JSON.parse("{\"dismiss\":\"Пропустить\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/sk-SK.json
var $c30db5bcff54a9e266ee7379a6cb8$exports = {};
$c30db5bcff54a9e266ee7379a6cb8$exports = JSON.parse("{\"dismiss\":\"Zrušiť\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/sl-SI.json
var $c86d8cad7c0045ad51a1fea185411a61$exports = {};
$c86d8cad7c0045ad51a1fea185411a61$exports = JSON.parse("{\"dismiss\":\"Opusti\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/sr-SP.json
var $c610b0b50ebc0061e6c42c420a2e1be$exports = {};
$c610b0b50ebc0061e6c42c420a2e1be$exports = JSON.parse("{\"dismiss\":\"Odbaci\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/sv-SE.json
var $c298c5c92c55ce8d8289d8cc18ea512$exports = {};
$c298c5c92c55ce8d8289d8cc18ea512$exports = JSON.parse("{\"dismiss\":\"Avvisa\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/tr-TR.json
var $f438196d9674b9d180ea6e74d7$exports = {};
$f438196d9674b9d180ea6e74d7$exports = JSON.parse("{\"dismiss\":\"Kapat\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/uk-UA.json
var $fa842ebaf07187d5bc74e0fa6c4679b$exports = {};
$fa842ebaf07187d5bc74e0fa6c4679b$exports = JSON.parse("{\"dismiss\":\"Скасувати\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/zh-CN.json
var $cdcbe39f22ae1814551e7f30dcfc8$exports = {};
$cdcbe39f22ae1814551e7f30dcfc8$exports = JSON.parse("{\"dismiss\":\"取消\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/overlays/intl/zh-TW.json
var $a8c729d90cde82a4eb34bebfb46a6$exports = {};
$a8c729d90cde82a4eb34bebfb46a6$exports = JSON.parse("{\"dismiss\":\"關閉\"}");

/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
// @ts-ignore
const $c94f95b3263b356bb2e58a3832a84$var$intlMessages = {
  "ar-AE": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($e325a364098e05bf51160d06dcffdbe$exports).default,
  "bg-BG": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($ab088cc547d59c1be83369f8351a064$exports).default,
  "cs-CZ": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($cec67ea16ca47059e10ca5e77187d8c2$exports).default,
  "da-DK": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($d962fe1ed718c5ca37da1414136036f8$exports).default,
  "de-DE": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($c5167dda40dde69038848f007e5$exports).default,
  "el-GR": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($ecdd1ac0020e47f58a9ed51b5fb$exports).default,
  "en-US": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($f33e30a89f4dff807f90ebe8c$exports).default,
  "es-ES": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($ba353e2c61dcc5141af4537eeb3ef85c$exports).default,
  "et-EE": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($dd3e8aaecbf1f2c2c0f9d51aacfd$exports).default,
  "fi-FI": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($f730aaed9f4652842b2a8f94a4a$exports).default,
  "fr-FR": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($e76b22aab4e46b7806205b4af9ca3$exports).default,
  "he-IL": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($c33ffdd5a9931bfc82c1c9b55e98de2f$exports).default,
  "hr-HR": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($d64cb70d4ce170f599f4df5adf4e9898$exports).default,
  "hu-HU": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($c05270a6513a8b6d8a6552a35a162$exports).default,
  "it-IT": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($df915df637af1f3c14c8376c69dfd$exports).default,
  "ja-JP": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($e8bf1e6480d2c65d558c3537ec0d59ce$exports).default,
  "ko-KR": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($e06e93e1c9472a7e2fc5b26a87ea7$exports).default,
  "lt-LT": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($fef82498418eab30c69349263b64e050$exports).default,
  "lv-LV": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($c4df2502cb7b65c6578bcb8a165f6fc$exports).default,
  "nb-NO": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($b50f4e499c19f4d55113139bba$exports).default,
  "nl-NL": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($e45d2f0079f29e4f5c6469cca7c$exports).default,
  "pl-PL": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($fcb5bfa87b2378a249bd7fb591ec22c2$exports).default,
  "pt-BR": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($edae5c6f18c937cf0015f2aa266d9fea$exports).default,
  "pt-PT": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($c016edcd88f37a017208da7518133d$exports).default,
  "ro-RO": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($df1162b231d383d942e0fdb2bbf$exports).default,
  "ru-RU": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($fa17537bfd201c57fa41fd31dbd9f074$exports).default,
  "sk-SK": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($c30db5bcff54a9e266ee7379a6cb8$exports).default,
  "sl-SI": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($c86d8cad7c0045ad51a1fea185411a61$exports).default,
  "sr-SP": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($c610b0b50ebc0061e6c42c420a2e1be$exports).default,
  "sv-SE": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($c298c5c92c55ce8d8289d8cc18ea512$exports).default,
  "tr-TR": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($f438196d9674b9d180ea6e74d7$exports).default,
  "uk-UA": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($fa842ebaf07187d5bc74e0fa6c4679b$exports).default,
  "zh-CN": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($cdcbe39f22ae1814551e7f30dcfc8$exports).default,
  "zh-TW": (0,_babel_runtime_helpers_esm_interopRequireDefault__WEBPACK_IMPORTED_MODULE_0__["default"])($a8c729d90cde82a4eb34bebfb46a6$exports).default
};

/**
 * A visually hidden button that can be used to allow screen reader
 * users to dismiss a modal or popup when there is no visual
 * affordance to do so.
 */
function DismissButton(props) {
  let {
    onDismiss
  } = props;
  let formatMessage = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_11__.useMessageFormatter)($c94f95b3263b356bb2e58a3832a84$var$intlMessages);

  let onClick = () => {
    if (onDismiss) {
      onDismiss();
    }
  };

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement(_react_aria_visually_hidden__WEBPACK_IMPORTED_MODULE_14__.VisuallyHidden, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("button", {
    tabIndex: -1,
    "aria-label": formatMessage('dismiss'),
    onClick: onClick
  }));
}
// subtracted from when showing it again. When it reaches zero, aria-hidden is removed.
let $d006cf2ec48f5151923b9435b3d$var$refCountMap = new WeakMap();
/**
 * Hides all elements in the DOM outside the given targets from screen readers using aria-hidden,
 * and returns a function to revert these changes. In addition, changes to the DOM are watched
 * and new elements outside the targets are automatically hidden.
 * @param targets - The elements that should remain visible.
 * @param root - Nothing will be hidden above this element.
 * @returns - A function to restore all hidden elements.
 */

function ariaHideOutside(targets, root) {
  if (root === void 0) {
    root = document.body;
  }

  let visibleNodes = new Set(targets);
  let hiddenNodes = new Set();
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      // If this node is a live announcer, add it to the set of nodes to keep visible.
      if (node instanceof HTMLElement && node.dataset.liveAnnouncer === 'true') {
        visibleNodes.add(node);
      } // Skip this node and its children if it is one of the target nodes, or a live announcer.
      // Also skip children of already hidden nodes, as aria-hidden is recursive.


      if (visibleNodes.has(node) || hiddenNodes.has(node.parentElement)) {
        return NodeFilter.FILTER_REJECT;
      } // VoiceOver on iOS has issues hiding elements with role="row". Hide the cells inside instead.
      // https://bugs.webkit.org/show_bug.cgi?id=222623


      if (node instanceof HTMLElement && node.getAttribute('role') === 'row') {
        return NodeFilter.FILTER_SKIP;
      } // Skip this node but continue to children if one of the targets is inside the node.


      if (targets.some(target => node.contains(target))) {
        return NodeFilter.FILTER_SKIP;
      }

      return NodeFilter.FILTER_ACCEPT;
    }

  });

  let hide = node => {
    var _refCountMap$get;

    let refCount = (_refCountMap$get = $d006cf2ec48f5151923b9435b3d$var$refCountMap.get(node)) != null ? _refCountMap$get : 0; // If already aria-hidden, and the ref count is zero, then this element
    // was already hidden and there's nothing for us to do.

    if (node.getAttribute('aria-hidden') === 'true' && refCount === 0) {
      return;
    }

    if (refCount === 0) {
      node.setAttribute('aria-hidden', 'true');
    }

    hiddenNodes.add(node);
    $d006cf2ec48f5151923b9435b3d$var$refCountMap.set(node, refCount + 1);
  };

  let node = walker.nextNode();

  while (node != null) {
    hide(node);
    node = walker.nextNode();
  }

  let observer = new MutationObserver(changes => {
    for (let change of changes) {
      if (change.type !== 'childList' || change.addedNodes.length === 0) {
        continue;
      } // If the parent element of the added nodes is not within one of the targets,
      // and not already inside a hidden node, hide all of the new children.


      if (![...visibleNodes, ...hiddenNodes].some(node => node.contains(change.target))) {
        for (let node of change.addedNodes) {
          if (node instanceof HTMLElement && node.dataset.liveAnnouncer === 'true') {
            visibleNodes.add(node);
          } else if (node instanceof Element) {
            hide(node);
          }
        }
      }
    }
  });
  observer.observe(root, {
    childList: true,
    subtree: true
  });
  return () => {
    observer.disconnect();

    for (let node of hiddenNodes) {
      let count = $d006cf2ec48f5151923b9435b3d$var$refCountMap.get(node);

      if (count === 1) {
        node.removeAttribute('aria-hidden');
        $d006cf2ec48f5151923b9435b3d$var$refCountMap.delete(node);
      } else {
        $d006cf2ec48f5151923b9435b3d$var$refCountMap.set(node, count - 1);
      }
    }
  };
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/ownerDocument.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/ownerDocument.js ***!
  \**************************************************************************************/
/***/ ((module, exports) => {

"use strict";


exports.__esModule = true;
exports["default"] = ownerDocument;

function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/contains.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/contains.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = void 0;

var _inDOM = _interopRequireDefault(__webpack_require__(/*! ../util/inDOM */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/inDOM.js"));

var _default = function () {
  // HTML DOM and SVG DOM may have different support levels,
  // so we need to check on context instead of a document root element.
  return _inDOM.default ? function (context, node) {
    if (context.contains) {
      return context.contains(node);
    } else if (context.compareDocumentPosition) {
      return context === node || !!(context.compareDocumentPosition(node) & 16);
    } else {
      return fallback(context, node);
    }
  } : fallback;
}();

exports["default"] = _default;

function fallback(context, node) {
  if (node) do {
    if (node === context) return true;
  } while (node = node.parentNode);
  return false;
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/isWindow.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/isWindow.js ***!
  \***************************************************************************************/
/***/ ((module, exports) => {

"use strict";


exports.__esModule = true;
exports["default"] = getWindow;

function getWindow(node) {
  return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/offset.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/offset.js ***!
  \*************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = offset;

var _contains = _interopRequireDefault(__webpack_require__(/*! ./contains */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/contains.js"));

var _isWindow = _interopRequireDefault(__webpack_require__(/*! ./isWindow */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/isWindow.js"));

var _ownerDocument = _interopRequireDefault(__webpack_require__(/*! ../ownerDocument */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/ownerDocument.js"));

function offset(node) {
  var doc = (0, _ownerDocument.default)(node),
      win = (0, _isWindow.default)(doc),
      docElem = doc && doc.documentElement,
      box = {
    top: 0,
    left: 0,
    height: 0,
    width: 0
  };
  if (!doc) return; // Make sure it's not a disconnected DOM node

  if (!(0, _contains.default)(docElem, node)) return box;
  if (node.getBoundingClientRect !== undefined) box = node.getBoundingClientRect(); // IE8 getBoundingClientRect doesn't support width & height

  box = {
    top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
    left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0),
    width: (box.width == null ? node.offsetWidth : box.width) || 0,
    height: (box.height == null ? node.offsetHeight : box.height) || 0
  };
  return box;
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/offsetParent.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/offsetParent.js ***!
  \*******************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = offsetParent;

var _ownerDocument = _interopRequireDefault(__webpack_require__(/*! ../ownerDocument */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/ownerDocument.js"));

var _style = _interopRequireDefault(__webpack_require__(/*! ../style */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/index.js"));

function nodeName(node) {
  return node.nodeName && node.nodeName.toLowerCase();
}

function offsetParent(node) {
  var doc = (0, _ownerDocument.default)(node),
      offsetParent = node && node.offsetParent;

  while (offsetParent && nodeName(node) !== 'html' && (0, _style.default)(offsetParent, 'position') === 'static') {
    offsetParent = offsetParent.offsetParent;
  }

  return offsetParent || doc.documentElement;
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/position.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/position.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = position;

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "../node_modules/@babel/runtime/helpers/extends.js"));

var _offset = _interopRequireDefault(__webpack_require__(/*! ./offset */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/offset.js"));

var _offsetParent = _interopRequireDefault(__webpack_require__(/*! ./offsetParent */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/offsetParent.js"));

var _scrollTop = _interopRequireDefault(__webpack_require__(/*! ./scrollTop */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/scrollTop.js"));

var _scrollLeft = _interopRequireDefault(__webpack_require__(/*! ./scrollLeft */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/scrollLeft.js"));

var _style = _interopRequireDefault(__webpack_require__(/*! ../style */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/index.js"));

function nodeName(node) {
  return node.nodeName && node.nodeName.toLowerCase();
}

function position(node, offsetParent) {
  var parentOffset = {
    top: 0,
    left: 0
  },
      offset; // Fixed elements are offset from window (parentOffset = {top:0, left: 0},
  // because it is its only offset parent

  if ((0, _style.default)(node, 'position') === 'fixed') {
    offset = node.getBoundingClientRect();
  } else {
    offsetParent = offsetParent || (0, _offsetParent.default)(node);
    offset = (0, _offset.default)(node);
    if (nodeName(offsetParent) !== 'html') parentOffset = (0, _offset.default)(offsetParent);
    parentOffset.top += parseInt((0, _style.default)(offsetParent, 'borderTopWidth'), 10) - (0, _scrollTop.default)(offsetParent) || 0;
    parentOffset.left += parseInt((0, _style.default)(offsetParent, 'borderLeftWidth'), 10) - (0, _scrollLeft.default)(offsetParent) || 0;
  } // Subtract parent offsets and node margins


  return (0, _extends2.default)({}, offset, {
    top: offset.top - parentOffset.top - (parseInt((0, _style.default)(node, 'marginTop'), 10) || 0),
    left: offset.left - parentOffset.left - (parseInt((0, _style.default)(node, 'marginLeft'), 10) || 0)
  });
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/scrollLeft.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/scrollLeft.js ***!
  \*****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = scrollTop;

var _isWindow = _interopRequireDefault(__webpack_require__(/*! ./isWindow */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/isWindow.js"));

function scrollTop(node, val) {
  var win = (0, _isWindow.default)(node);
  if (val === undefined) return win ? 'pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft : node.scrollLeft;
  if (win) win.scrollTo(val, 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop);else node.scrollLeft = val;
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/scrollTop.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/scrollTop.js ***!
  \****************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = scrollTop;

var _isWindow = _interopRequireDefault(__webpack_require__(/*! ./isWindow */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/query/isWindow.js"));

function scrollTop(node, val) {
  var win = (0, _isWindow.default)(node);
  if (val === undefined) return win ? 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop : node.scrollTop;
  if (win) win.scrollTo('pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft, val);else node.scrollTop = val;
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/getComputedStyle.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/getComputedStyle.js ***!
  \***********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = _getComputedStyle;

var _camelizeStyle = _interopRequireDefault(__webpack_require__(/*! ../util/camelizeStyle */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/camelizeStyle.js"));

var rposition = /^(top|right|bottom|left)$/;
var rnumnonpx = /^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;

function _getComputedStyle(node) {
  if (!node) throw new TypeError('No Element passed to `getComputedStyle()`');
  var doc = node.ownerDocument;
  return 'defaultView' in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : {
    //ie 8 "magic" from: https://github.com/jquery/jquery/blob/1.11-stable/src/css/curCSS.js#L72
    getPropertyValue: function getPropertyValue(prop) {
      var style = node.style;
      prop = (0, _camelizeStyle.default)(prop);
      if (prop == 'float') prop = 'styleFloat';
      var current = node.currentStyle[prop] || null;
      if (current == null && style && style[prop]) current = style[prop];

      if (rnumnonpx.test(current) && !rposition.test(prop)) {
        // Remember the original values
        var left = style.left;
        var runStyle = node.runtimeStyle;
        var rsLeft = runStyle && runStyle.left; // Put in the new values to get a computed value out

        if (rsLeft) runStyle.left = node.currentStyle.left;
        style.left = prop === 'fontSize' ? '1em' : current;
        current = style.pixelLeft + 'px'; // Revert the changed values

        style.left = left;
        if (rsLeft) runStyle.left = rsLeft;
      }

      return current;
    }
  };
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/index.js":
/*!************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/index.js ***!
  \************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = style;

var _camelizeStyle = _interopRequireDefault(__webpack_require__(/*! ../util/camelizeStyle */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/camelizeStyle.js"));

var _hyphenateStyle = _interopRequireDefault(__webpack_require__(/*! ../util/hyphenateStyle */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/hyphenateStyle.js"));

var _getComputedStyle2 = _interopRequireDefault(__webpack_require__(/*! ./getComputedStyle */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/getComputedStyle.js"));

var _removeStyle = _interopRequireDefault(__webpack_require__(/*! ./removeStyle */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/removeStyle.js"));

var _properties = __webpack_require__(/*! ../transition/properties */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/transition/properties.js");

var _isTransform = _interopRequireDefault(__webpack_require__(/*! ../transition/isTransform */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/transition/isTransform.js"));

function style(node, property, value) {
  var css = '';
  var transforms = '';
  var props = property;

  if (typeof property === 'string') {
    if (value === undefined) {
      return node.style[(0, _camelizeStyle.default)(property)] || (0, _getComputedStyle2.default)(node).getPropertyValue((0, _hyphenateStyle.default)(property));
    } else {
      (props = {})[property] = value;
    }
  }

  Object.keys(props).forEach(function (key) {
    var value = props[key];

    if (!value && value !== 0) {
      (0, _removeStyle.default)(node, (0, _hyphenateStyle.default)(key));
    } else if ((0, _isTransform.default)(key)) {
      transforms += key + "(" + value + ") ";
    } else {
      css += (0, _hyphenateStyle.default)(key) + ": " + value + ";";
    }
  });

  if (transforms) {
    css += _properties.transform + ": " + transforms + ";";
  }

  node.style.cssText += ';' + css;
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/removeStyle.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/style/removeStyle.js ***!
  \******************************************************************************************/
/***/ ((module, exports) => {

"use strict";


exports.__esModule = true;
exports["default"] = removeStyle;

function removeStyle(node, key) {
  return 'removeProperty' in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/transition/isTransform.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/transition/isTransform.js ***!
  \***********************************************************************************************/
/***/ ((module, exports) => {

"use strict";


exports.__esModule = true;
exports["default"] = isTransform;
var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;

function isTransform(property) {
  return !!(property && supportedTransforms.test(property));
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/transition/properties.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/transition/properties.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = void 0;

var _inDOM = _interopRequireDefault(__webpack_require__(/*! ../util/inDOM */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/inDOM.js"));

var transform = 'transform';
exports.transform = transform;
var prefix, transitionEnd, animationEnd;
exports.animationEnd = animationEnd;
exports.transitionEnd = transitionEnd;
var transitionProperty, transitionDuration, transitionTiming, transitionDelay;
exports.transitionDelay = transitionDelay;
exports.transitionTiming = transitionTiming;
exports.transitionDuration = transitionDuration;
exports.transitionProperty = transitionProperty;
var animationName, animationDuration, animationTiming, animationDelay;
exports.animationDelay = animationDelay;
exports.animationTiming = animationTiming;
exports.animationDuration = animationDuration;
exports.animationName = animationName;

if (_inDOM.default) {
  var _getTransitionPropert = getTransitionProperties();

  prefix = _getTransitionPropert.prefix;
  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;
  exports.transform = transform = prefix + "-" + transform;
  exports.transitionProperty = transitionProperty = prefix + "-transition-property";
  exports.transitionDuration = transitionDuration = prefix + "-transition-duration";
  exports.transitionDelay = transitionDelay = prefix + "-transition-delay";
  exports.transitionTiming = transitionTiming = prefix + "-transition-timing-function";
  exports.animationName = animationName = prefix + "-animation-name";
  exports.animationDuration = animationDuration = prefix + "-animation-duration";
  exports.animationTiming = animationTiming = prefix + "-animation-delay";
  exports.animationDelay = animationDelay = prefix + "-animation-timing-function";
}

var _default = {
  transform: transform,
  end: transitionEnd,
  property: transitionProperty,
  timing: transitionTiming,
  delay: transitionDelay,
  duration: transitionDuration
};
exports["default"] = _default;

function getTransitionProperties() {
  var style = document.createElement('div').style;
  var vendorMap = {
    O: function O(e) {
      return "o" + e.toLowerCase();
    },
    Moz: function Moz(e) {
      return e.toLowerCase();
    },
    Webkit: function Webkit(e) {
      return "webkit" + e;
    },
    ms: function ms(e) {
      return "MS" + e;
    }
  };
  var vendors = Object.keys(vendorMap);
  var transitionEnd, animationEnd;
  var prefix = '';

  for (var i = 0; i < vendors.length; i++) {
    var vendor = vendors[i];

    if (vendor + "TransitionProperty" in style) {
      prefix = "-" + vendor.toLowerCase();
      transitionEnd = vendorMap[vendor]('TransitionEnd');
      animationEnd = vendorMap[vendor]('AnimationEnd');
      break;
    }
  }

  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';
  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';
  style = null;
  return {
    animationEnd: animationEnd,
    transitionEnd: transitionEnd,
    prefix: prefix
  };
}

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/camelize.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/camelize.js ***!
  \**************************************************************************************/
/***/ ((module, exports) => {

"use strict";


exports.__esModule = true;
exports["default"] = camelize;
var rHyphen = /-(.)/g;

function camelize(string) {
  return string.replace(rHyphen, function (_, chr) {
    return chr.toUpperCase();
  });
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/camelizeStyle.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/camelizeStyle.js ***!
  \*******************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = camelizeStyleName;

var _camelize = _interopRequireDefault(__webpack_require__(/*! ./camelize */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/camelize.js"));

/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/camelizeStyleName.js
 */
var msPattern = /^-ms-/;

function camelizeStyleName(string) {
  return (0, _camelize.default)(string.replace(msPattern, 'ms-'));
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/hyphenate.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/hyphenate.js ***!
  \***************************************************************************************/
/***/ ((module, exports) => {

"use strict";


exports.__esModule = true;
exports["default"] = hyphenate;
var rUpper = /([A-Z])/g;

function hyphenate(string) {
  return string.replace(rUpper, '-$1').toLowerCase();
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/hyphenateStyle.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/hyphenateStyle.js ***!
  \********************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = hyphenateStyleName;

var _hyphenate = _interopRequireDefault(__webpack_require__(/*! ./hyphenate */ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/hyphenate.js"));

/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js
 */
var msPattern = /^ms-/;

function hyphenateStyleName(string) {
  return (0, _hyphenate.default)(string).replace(msPattern, '-ms-');
}

module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/inDOM.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@react-aria/overlays/node_modules/dom-helpers/util/inDOM.js ***!
  \***********************************************************************************/
/***/ ((module, exports) => {

"use strict";


exports.__esModule = true;
exports["default"] = void 0;

var _default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

exports["default"] = _default;
module.exports = exports["default"];

/***/ }),

/***/ "../node_modules/@react-aria/selection/dist/module.js":
/*!************************************************************!*\
  !*** ../node_modules/@react-aria/selection/dist/module.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListKeyboardDelegate": () => (/* binding */ ListKeyboardDelegate),
/* harmony export */   "useSelectableCollection": () => (/* binding */ useSelectableCollection),
/* harmony export */   "useSelectableItem": () => (/* binding */ useSelectableItem),
/* harmony export */   "useSelectableList": () => (/* binding */ useSelectableList),
/* harmony export */   "useTypeSelect": () => (/* binding */ useTypeSelect)
/* harmony export */ });
/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-aria/interactions */ "../node_modules/@react-aria/interactions/dist/module.js");
/* harmony import */ var _react_aria_i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-aria/i18n */ "../node_modules/@react-aria/i18n/dist/module.js");
/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/utils */ "../node_modules/@react-aria/utils/dist/module.js");
/* harmony import */ var _react_aria_focus__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-aria/focus */ "../node_modules/@react-aria/focus/dist/module.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");







function $d9657c365c2f735bcaf048eee8599a4a$export$isNonContiguousSelectionModifier(e) {
  // Ctrl + Arrow Up/Arrow Down has a system wide meaning on macOS, so use Alt instead.
  // On Windows and Ubuntu, Alt + Space has a system wide meaning.
  return (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.isAppleDevice)() ? e.altKey : e.ctrlKey;
}

function $d9657c365c2f735bcaf048eee8599a4a$export$isCtrlKeyPressed(e) {
  if ((0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.isMac)()) {
    return e.metaKey;
  }

  return e.ctrlKey;
}

/**
 * Handles typeahead interactions with collections.
 */
function useTypeSelect(options) {
  let {
    keyboardDelegate,
    selectionManager,
    onTypeSelect
  } = options;
  let state = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({
    search: '',
    timeout: null
  }).current;

  let onKeyDown = e => {
    let character = $c78d7fa5f7d5832f9b4f97b33a679865$var$getStringForKey(e.key);

    if (!character || e.ctrlKey || e.metaKey) {
      return;
    } // Do not propagate the Spacebar event if it's meant to be part of the search.
    // When we time out, the search term becomes empty, hence the check on length.
    // Trimming is to account for the case of pressing the Spacebar more than once,
    // which should cycle through the selection/deselection of the focused item.


    if (character === ' ' && state.search.trim().length > 0) {
      e.preventDefault();

      if (!('continuePropagation' in e)) {
        e.stopPropagation();
      }
    }

    state.search += character; // Use the delegate to find a key to focus.
    // Prioritize items after the currently focused item, falling back to searching the whole list.

    let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey); // If no key found, search from the top.

    if (key == null) {
      key = keyboardDelegate.getKeyForSearch(state.search);
    }

    if (key != null) {
      selectionManager.setFocusedKey(key);

      if (onTypeSelect) {
        onTypeSelect(key);
      }
    }

    clearTimeout(state.timeout);
    state.timeout = setTimeout(() => {
      state.search = '';
    }, 500);
  };

  return {
    typeSelectProps: {
      // Using a capturing listener to catch the keydown event before
      // other hooks in order to handle the Spacebar event.
      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null
    }
  };
}

function $c78d7fa5f7d5832f9b4f97b33a679865$var$getStringForKey(key) {
  // If the key is of length 1, it is an ASCII value.
  // Otherwise, if there are no ASCII characters in the key name,
  // it is a Unicode character.
  // See https://www.w3.org/TR/uievents-key/
  if (key.length === 1 || !/^[A-Z]/i.test(key)) {
    return key;
  }

  return '';
}

/**
 * Handles interactions with selectable collections.
 */
function useSelectableCollection(options) {
  let {
    selectionManager: manager,
    keyboardDelegate: delegate,
    ref,
    autoFocus = false,
    shouldFocusWrap = false,
    disallowEmptySelection = false,
    disallowSelectAll = false,
    selectOnFocus = manager.selectionBehavior === 'replace',
    disallowTypeAhead = false,
    shouldUseVirtualFocus,
    allowsTabNavigation = false,
    isVirtualized,
    // If no scrollRef is provided, assume the collection ref is the scrollable region
    scrollRef = ref
  } = options;
  let {
    direction
  } = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_3__.useLocale)();

  let onKeyDown = e => {
    // Prevent option + tab from doing anything since it doesn't move focus to the cells, only buttons/checkboxes
    if (e.altKey && e.key === 'Tab') {
      e.preventDefault();
    } // Keyboard events bubble through portals. Don't handle keyboard events
    // for elements outside the collection (e.g. menus).


    if (!ref.current.contains(e.target)) {
      return;
    }

    const navigateToKey = (key, childFocus) => {
      if (key != null) {
        manager.setFocusedKey(key, childFocus);

        if (e.shiftKey && manager.selectionMode === 'multiple') {
          manager.extendSelection(key);
        } else if (selectOnFocus && !$d9657c365c2f735bcaf048eee8599a4a$export$isNonContiguousSelectionModifier(e)) {
          manager.replaceSelection(key);
        }
      }
    };

    switch (e.key) {
      case 'ArrowDown':
        {
          if (delegate.getKeyBelow) {
            e.preventDefault();
            let nextKey = manager.focusedKey != null ? delegate.getKeyBelow(manager.focusedKey) : delegate.getFirstKey == null ? void 0 : delegate.getFirstKey();

            if (nextKey == null && shouldFocusWrap) {
              nextKey = delegate.getFirstKey == null ? void 0 : delegate.getFirstKey(manager.focusedKey);
            }

            navigateToKey(nextKey);
          }

          break;
        }

      case 'ArrowUp':
        {
          if (delegate.getKeyAbove) {
            e.preventDefault();
            let nextKey = manager.focusedKey != null ? delegate.getKeyAbove(manager.focusedKey) : delegate.getLastKey == null ? void 0 : delegate.getLastKey();

            if (nextKey == null && shouldFocusWrap) {
              nextKey = delegate.getLastKey == null ? void 0 : delegate.getLastKey(manager.focusedKey);
            }

            navigateToKey(nextKey);
          }

          break;
        }

      case 'ArrowLeft':
        {
          if (delegate.getKeyLeftOf) {
            e.preventDefault();
            let nextKey = delegate.getKeyLeftOf(manager.focusedKey);
            navigateToKey(nextKey, direction === 'rtl' ? 'first' : 'last');
          }

          break;
        }

      case 'ArrowRight':
        {
          if (delegate.getKeyRightOf) {
            e.preventDefault();
            let nextKey = delegate.getKeyRightOf(manager.focusedKey);
            navigateToKey(nextKey, direction === 'rtl' ? 'last' : 'first');
          }

          break;
        }

      case 'Home':
        if (delegate.getFirstKey) {
          e.preventDefault();
          let firstKey = delegate.getFirstKey(manager.focusedKey, $d9657c365c2f735bcaf048eee8599a4a$export$isCtrlKeyPressed(e));
          manager.setFocusedKey(firstKey);

          if ($d9657c365c2f735bcaf048eee8599a4a$export$isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {
            manager.extendSelection(firstKey);
          } else if (selectOnFocus) {
            manager.replaceSelection(firstKey);
          }
        }

        break;

      case 'End':
        if (delegate.getLastKey) {
          e.preventDefault();
          let lastKey = delegate.getLastKey(manager.focusedKey, $d9657c365c2f735bcaf048eee8599a4a$export$isCtrlKeyPressed(e));
          manager.setFocusedKey(lastKey);

          if ($d9657c365c2f735bcaf048eee8599a4a$export$isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {
            manager.extendSelection(lastKey);
          } else if (selectOnFocus) {
            manager.replaceSelection(lastKey);
          }
        }

        break;

      case 'PageDown':
        if (delegate.getKeyPageBelow) {
          e.preventDefault();
          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);
          navigateToKey(nextKey);
        }

        break;

      case 'PageUp':
        if (delegate.getKeyPageAbove) {
          e.preventDefault();
          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);
          navigateToKey(nextKey);
        }

        break;

      case 'a':
        if ($d9657c365c2f735bcaf048eee8599a4a$export$isCtrlKeyPressed(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {
          e.preventDefault();
          manager.selectAll();
        }

        break;

      case 'Escape':
        e.preventDefault();

        if (!disallowEmptySelection) {
          manager.clearSelection();
        }

        break;

      case 'Tab':
        {
          if (!allowsTabNavigation) {
            // There may be elements that are "tabbable" inside a collection (e.g. in a grid cell).
            // However, collections should be treated as a single tab stop, with arrow key navigation internally.
            // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.
            // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element
            // in the collection, so that the browser default behavior will apply starting from that element
            // rather than the currently focused one.
            if (e.shiftKey) {
              ref.current.focus();
            } else {
              let walker = (0,_react_aria_focus__WEBPACK_IMPORTED_MODULE_4__.getFocusableTreeWalker)(ref.current, {
                tabbable: true
              });
              let next;
              let last;

              do {
                last = walker.lastChild();

                if (last) {
                  next = last;
                }
              } while (last);

              if (next && !next.contains(document.activeElement)) {
                (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.focusWithoutScrolling)(next);
              }
            }

            break;
          }
        }
    }
  }; // Store the scroll position so we can restore it later.


  let scrollPos = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({
    top: 0,
    left: 0
  });
  (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.useEvent)(scrollRef, 'scroll', isVirtualized ? null : () => {
    scrollPos.current = {
      top: scrollRef.current.scrollTop,
      left: scrollRef.current.scrollLeft
    };
  });

  let onFocus = e => {
    if (manager.isFocused) {
      // If a focus event bubbled through a portal, reset focus state.
      if (!e.currentTarget.contains(e.target)) {
        manager.setFocused(false);
      }

      return;
    } // Focus events can bubble through portals. Ignore these events.


    if (!e.currentTarget.contains(e.target)) {
      return;
    }

    manager.setFocused(true);

    if (manager.focusedKey == null) {
      let navigateToFirstKey = key => {
        if (key != null) {
          manager.setFocusedKey(key);

          if (selectOnFocus) {
            manager.replaceSelection(key);
          }
        }
      }; // If the user hasn't yet interacted with the collection, there will be no focusedKey set.
      // Attempt to detect whether the user is tabbing forward or backward into the collection
      // and either focus the first or last item accordingly.


      let relatedTarget = e.relatedTarget;

      if (relatedTarget && e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) {
        var _manager$lastSelected;

        navigateToFirstKey((_manager$lastSelected = manager.lastSelectedKey) != null ? _manager$lastSelected : delegate.getLastKey());
      } else {
        var _manager$firstSelecte;

        navigateToFirstKey((_manager$firstSelecte = manager.firstSelectedKey) != null ? _manager$firstSelecte : delegate.getFirstKey());
      }
    } else if (!isVirtualized) {
      // Restore the scroll position to what it was before.
      scrollRef.current.scrollTop = scrollPos.current.top;
      scrollRef.current.scrollLeft = scrollPos.current.left; // Refocus and scroll the focused item into view if it exists within the scrollable region.

      let element = scrollRef.current.querySelector("[data-key=\"" + manager.focusedKey + "\"]");

      if (element) {
        // This prevents a flash of focus on the first/last element in the collection
        (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.focusWithoutScrolling)(element);
        (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.scrollIntoView)(scrollRef.current, element);
      }
    }
  };

  let onBlur = e => {
    // Don't set blurred and then focused again if moving focus within the collection.
    if (!e.currentTarget.contains(e.relatedTarget)) {
      manager.setFocused(false);
    }
  };

  const autoFocusRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(autoFocus);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (autoFocusRef.current) {
      let focusedKey = null; // Check focus strategy to determine which item to focus

      if (autoFocus === 'first') {
        focusedKey = delegate.getFirstKey();
      }

      if (autoFocus === 'last') {
        focusedKey = delegate.getLastKey();
      } // If there are any selected keys, make the first one the new focus target


      let selectedKeys = manager.selectedKeys;

      if (selectedKeys.size) {
        focusedKey = selectedKeys.values().next().value;
      }

      manager.setFocused(true);
      manager.setFocusedKey(focusedKey); // If no default focus key is selected, focus the collection itself.

      if (focusedKey == null && !shouldUseVirtualFocus) {
        (0,_react_aria_focus__WEBPACK_IMPORTED_MODULE_4__.focusSafely)(ref.current);
      }
    }

    autoFocusRef.current = false; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []); // If not virtualized, scroll the focused element into view when the focusedKey changes.
  // When virtualized, Virtualizer handles this internally.

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (!isVirtualized && manager.focusedKey && scrollRef != null && scrollRef.current) {
      let element = scrollRef.current.querySelector("[data-key=\"" + manager.focusedKey + "\"]");

      if (element) {
        (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.scrollIntoView)(scrollRef.current, element);
      }
    }
  }, [isVirtualized, scrollRef, manager.focusedKey]);
  let handlers = {
    onKeyDown,
    onFocus,
    onBlur,

    onMouseDown(e) {
      // Ignore events that bubbled through portals.
      if (e.currentTarget.contains(e.target)) {
        // Prevent focus going to the collection when clicking on the scrollbar.
        e.preventDefault();
      }
    }

  };
  let {
    typeSelectProps
  } = useTypeSelect({
    keyboardDelegate: delegate,
    selectionManager: manager
  });

  if (!disallowTypeAhead) {
    handlers = (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.mergeProps)(typeSelectProps, handlers);
  } // If nothing is focused within the collection, make the collection itself tabbable.
  // This will be marshalled to either the first or last item depending on where focus came from.
  // If using virtual focus, don't set a tabIndex at all so that VoiceOver on iOS 14 doesn't try
  // to move real DOM focus to the element anyway.


  let tabIndex;

  if (!shouldUseVirtualFocus) {
    tabIndex = manager.focusedKey == null ? 0 : -1;
  }

  return {
    collectionProps: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, handlers, {
      tabIndex
    })
  };
}

/**
 * Handles interactions with an item in a selectable collection.
 */
function useSelectableItem(options) {
  let {
    selectionManager: manager,
    key,
    ref,
    shouldSelectOnPressUp,
    isVirtualized,
    shouldUseVirtualFocus,
    focus,
    isDisabled,
    onAction
  } = options;

  let onSelect = e => {
    if (e.pointerType === 'keyboard' && $d9657c365c2f735bcaf048eee8599a4a$export$isNonContiguousSelectionModifier(e)) {
      manager.toggleSelection(key);
    } else {
      if (manager.selectionMode === 'none') {
        return;
      }

      if (manager.selectionMode === 'single') {
        if (manager.isSelected(key) && !manager.disallowEmptySelection) {
          manager.toggleSelection(key);
        } else {
          manager.replaceSelection(key);
        }
      } else if (e && e.shiftKey) {
        manager.extendSelection(key);
      } else if (manager.selectionBehavior === 'toggle' || e && ($d9657c365c2f735bcaf048eee8599a4a$export$isCtrlKeyPressed(e) || e.pointerType === 'touch' || e.pointerType === 'virtual')) {
        // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys
        manager.toggleSelection(key);
      } else {
        manager.replaceSelection(key);
      }
    }
  }; // Focus the associated DOM node when this item becomes the focusedKey


  let isFocused = key === manager.focusedKey;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isFocused && manager.isFocused && !shouldUseVirtualFocus && document.activeElement !== ref.current) {
      if (focus) {
        focus();
      } else {
        (0,_react_aria_focus__WEBPACK_IMPORTED_MODULE_4__.focusSafely)(ref.current);
      }
    }
  }, [ref, isFocused, manager.focusedKey, manager.childFocusStrategy, manager.isFocused, shouldUseVirtualFocus]); // Set tabIndex to 0 if the element is focused, or -1 otherwise so that only the last focused
  // item is tabbable.  If using virtual focus, don't set a tabIndex at all so that VoiceOver
  // on iOS 14 doesn't try to move real DOM focus to the item anyway.

  let itemProps = {};

  if (!shouldUseVirtualFocus) {
    itemProps = {
      tabIndex: isFocused ? 0 : -1,

      onFocus(e) {
        if (e.target === ref.current) {
          manager.setFocusedKey(key);
        }
      }

    };
  }

  let modality = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  let hasPrimaryAction = onAction && manager.selectionMode === 'none';
  let hasSecondaryAction = onAction && manager.selectionMode !== 'none' && manager.selectionBehavior === 'replace';
  let allowsSelection = !isDisabled && manager.canSelectItem(key); // By default, selection occurs on pointer down. This can be strange if selecting an
  // item causes the UI to disappear immediately (e.g. menus).
  // If shouldSelectOnPressUp is true, we use onPressUp instead of onPressStart.
  // onPress requires a pointer down event on the same element as pointer up. For menus,
  // we want to be able to have the pointer down on the trigger that opens the menu and
  // the pointer up on the menu item rather than requiring a separate press.
  // For keyboard events, selection still occurs on key down.

  let itemPressProps = {};

  if (shouldSelectOnPressUp) {
    itemPressProps.onPressStart = e => {
      modality.current = e.pointerType;

      if (e.pointerType === 'keyboard') {
        onSelect(e);
      }
    };

    itemPressProps.onPressUp = e => {
      if (e.pointerType !== 'keyboard') {
        onSelect(e);
      }
    };

    itemPressProps.onPress = hasPrimaryAction ? () => onAction() : null;
  } else {
    // On touch, it feels strange to select on touch down, so we special case this.
    itemPressProps.onPressStart = e => {
      modality.current = e.pointerType;

      if (e.pointerType !== 'touch' && e.pointerType !== 'virtual') {
        onSelect(e);
      }
    };

    itemPressProps.onPress = e => {
      if (e.pointerType === 'touch' || e.pointerType === 'virtual' || hasPrimaryAction) {
        // Single tap on touch with selectionBehavior = 'replace' performs an action, i.e. navigation.
        // Also perform action on press up when selectionMode = 'none'.
        if (hasPrimaryAction || hasSecondaryAction) {
          onAction();
        } else {
          onSelect(e);
        }
      }
    };
  }

  if (!isVirtualized) {
    itemProps['data-key'] = key;
  }

  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;
  let {
    pressProps,
    isPressed
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_5__.usePress)(itemPressProps); // Double clicking with a mouse with selectionBehavior = 'replace' performs an action.

  let onDoubleClick = hasSecondaryAction ? e => {
    if (modality.current === 'mouse') {
      e.stopPropagation();
      e.preventDefault();
      onAction();
    }
  } : undefined; // Long pressing an item with touch when selectionBehavior = 'replace' switches the selection behavior
  // to 'toggle'. This changes the single tap behavior from performing an action (i.e. navigating) to
  // selecting, and may toggle the appearance of a UI affordance like checkboxes on each item.
  // TODO: what about when drag and drop is also enabled??

  let {
    longPressProps
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_5__.useLongPress)({
    isDisabled: !hasSecondaryAction,

    onLongPress(e) {
      if (e.pointerType === 'touch') {
        onSelect(e);
        manager.setSelectionBehavior('toggle');
      }
    }

  }); // Pressing the Enter key with selectionBehavior = 'replace' performs an action (i.e. navigation).

  let onKeyUp = hasSecondaryAction ? e => {
    if (e.key === 'Enter') {
      onAction();
    }
  } : undefined;
  return {
    itemProps: (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_2__.mergeProps)(itemProps, allowsSelection || hasPrimaryAction ? pressProps : {}, hasSecondaryAction ? longPressProps : {}, {
      onKeyUp,
      onDoubleClick
    }),
    isPressed
  };
}

/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
class ListKeyboardDelegate {
  constructor(collection, disabledKeys, ref, collator) {
    this.collection = void 0;
    this.disabledKeys = void 0;
    this.ref = void 0;
    this.collator = void 0;
    this.collection = collection;
    this.disabledKeys = disabledKeys;
    this.ref = ref;
    this.collator = collator;
  }

  getKeyBelow(key) {
    key = this.collection.getKeyAfter(key);

    while (key != null) {
      let item = this.collection.getItem(key);

      if (item.type === 'item' && !this.disabledKeys.has(key)) {
        return key;
      }

      key = this.collection.getKeyAfter(key);
    }
  }

  getKeyAbove(key) {
    key = this.collection.getKeyBefore(key);

    while (key != null) {
      let item = this.collection.getItem(key);

      if (item.type === 'item' && !this.disabledKeys.has(key)) {
        return key;
      }

      key = this.collection.getKeyBefore(key);
    }
  }

  getFirstKey() {
    let key = this.collection.getFirstKey();

    while (key != null) {
      let item = this.collection.getItem(key);

      if (item.type === 'item' && !this.disabledKeys.has(key)) {
        return key;
      }

      key = this.collection.getKeyAfter(key);
    }
  }

  getLastKey() {
    let key = this.collection.getLastKey();

    while (key != null) {
      let item = this.collection.getItem(key);

      if (item.type === 'item' && !this.disabledKeys.has(key)) {
        return key;
      }

      key = this.collection.getKeyBefore(key);
    }
  }

  getItem(key) {
    return this.ref.current.querySelector("[data-key=\"" + key + "\"]");
  }

  getKeyPageAbove(key) {
    let menu = this.ref.current;
    let item = this.getItem(key);

    if (!item) {
      return null;
    }

    let pageY = Math.max(0, item.offsetTop + item.offsetHeight - menu.offsetHeight);

    while (item && item.offsetTop > pageY) {
      key = this.getKeyAbove(key);
      item = this.getItem(key);
    }

    return key;
  }

  getKeyPageBelow(key) {
    let menu = this.ref.current;
    let item = this.getItem(key);

    if (!item) {
      return null;
    }

    let pageY = Math.min(menu.scrollHeight, item.offsetTop - item.offsetHeight + menu.offsetHeight);

    while (item && item.offsetTop < pageY) {
      key = this.getKeyBelow(key);
      item = this.getItem(key);
    }

    return key;
  }

  getKeyForSearch(search, fromKey) {
    if (!this.collator) {
      return null;
    }

    let collection = this.collection;
    let key = fromKey || this.getFirstKey();

    while (key != null) {
      let item = collection.getItem(key);
      let substring = item.textValue.slice(0, search.length);

      if (item.textValue && this.collator.compare(substring, search) === 0) {
        return key;
      }

      key = this.getKeyBelow(key);
    }

    return null;
  }

}

/**
 * Handles interactions with a selectable list.
 */
function useSelectableList(props) {
  let {
    selectionManager,
    collection,
    disabledKeys,
    ref,
    keyboardDelegate,
    autoFocus,
    shouldFocusWrap,
    isVirtualized,
    disallowEmptySelection,
    selectOnFocus = false,
    disallowTypeAhead,
    shouldUseVirtualFocus,
    allowsTabNavigation
  } = props; // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).
  // When virtualized, the layout object will be passed in as a prop and override this.

  let collator = (0,_react_aria_i18n__WEBPACK_IMPORTED_MODULE_3__.useCollator)({
    usage: 'search',
    sensitivity: 'base'
  });
  let delegate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => keyboardDelegate || new ListKeyboardDelegate(collection, disabledKeys, ref, collator), [keyboardDelegate, collection, disabledKeys, ref, collator]);
  let {
    collectionProps
  } = useSelectableCollection({
    ref,
    selectionManager,
    keyboardDelegate: delegate,
    autoFocus,
    shouldFocusWrap,
    disallowEmptySelection,
    selectOnFocus,
    disallowTypeAhead,
    shouldUseVirtualFocus,
    allowsTabNavigation,
    isVirtualized,
    scrollRef: ref
  });
  return {
    listProps: collectionProps
  };
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-aria/visually-hidden/dist/module.js":
/*!******************************************************************!*\
  !*** ../node_modules/@react-aria/visually-hidden/dist/module.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VisuallyHidden": () => (/* binding */ VisuallyHidden),
/* harmony export */   "useVisuallyHidden": () => (/* binding */ useVisuallyHidden)
/* harmony export */ });
/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-aria/interactions */ "../node_modules/@react-aria/interactions/dist/module.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-aria/utils */ "../node_modules/@react-aria/utils/dist/module.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");





const $f431c2c11cc559fa3c5864caafbcfd19$var$styles = {
  border: 0,
  clip: 'rect(0 0 0 0)',
  clipPath: 'inset(50%)',
  height: 1,
  margin: '0 -1px -1px 0',
  overflow: 'hidden',
  padding: 0,
  position: 'absolute',
  width: 1,
  whiteSpace: 'nowrap'
};

/**
 * Provides props for an element that hides its children visually
 * but keeps content visible to assistive technology.
 */
function useVisuallyHidden(props) {
  if (props === void 0) {
    props = {};
  }

  let {
    style,
    isFocusable
  } = props;
  let [isFocused, setFocused] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  let {
    focusProps
  } = (0,_react_aria_interactions__WEBPACK_IMPORTED_MODULE_3__.useFocus)({
    isDisabled: !isFocusable,
    onFocusChange: setFocused
  }); // If focused, don't hide the element.

  let combinedStyles = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (isFocused) {
      return style;
    } else if (style) {
      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, $f431c2c11cc559fa3c5864caafbcfd19$var$styles, style);
    } else {
      return $f431c2c11cc559fa3c5864caafbcfd19$var$styles;
    }
  }, [isFocused]);
  return {
    visuallyHiddenProps: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, focusProps, {
      style: combinedStyles
    })
  };
}
/**
 * VisuallyHidden hides its children visually, while keeping content visible
 * to screen readers.
 */

function VisuallyHidden(props) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  let {
    children,
    elementType: Element = 'div'
  } = props,
      otherProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2__["default"])(props, ["children", "elementType", "isFocusable", "style"]);

  let {
    visuallyHiddenProps
  } = useVisuallyHidden(props);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Element, (0,_react_aria_utils__WEBPACK_IMPORTED_MODULE_4__.mergeProps)(otherProps, visuallyHiddenProps), children);
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-stately/collections/dist/module.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@react-stately/collections/dist/module.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Item": () => (/* binding */ Item),
/* harmony export */   "Section": () => (/* binding */ Section),
/* harmony export */   "getItemCount": () => (/* binding */ getItemCount),
/* harmony export */   "useCollection": () => (/* binding */ useCollection)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");



function $e92117d6e5313ef8e7c10fac1de193ce$var$Item(props) {
  // eslint-disable-line @typescript-eslint/no-unused-vars
  return null;
}

$e92117d6e5313ef8e7c10fac1de193ce$var$Item.getCollectionNode = function* getCollectionNode(props, context) {
  let {
    childItems,
    title,
    children
  } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || ''; // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.

  if (!textValue && !(context != null && context.suppressTextValueWarning)) {
    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');
  }

  yield {
    type: 'item',
    props: props,
    rendered,
    textValue,
    'aria-label': props['aria-label'],
    hasChildNodes: $e92117d6e5313ef8e7c10fac1de193ce$var$hasChildItems(props),

    *childNodes() {
      if (childItems) {
        for (let child of childItems) {
          yield {
            type: 'item',
            value: child
          };
        }
      } else if (title) {
        let items = [];

        react__WEBPACK_IMPORTED_MODULE_1__.Children.forEach(children, child => {
          items.push({
            type: 'item',
            element: child
          });
        });

        yield* items;
      }
    }

  };
};

function $e92117d6e5313ef8e7c10fac1de193ce$var$hasChildItems(props) {
  if (props.hasChildItems != null) {
    return props.hasChildItems;
  }

  if (props.childItems) {
    return true;
  }

  if (props.title && react__WEBPACK_IMPORTED_MODULE_1__.Children.count(props.children) > 0) {
    return true;
  }

  return false;
} // We don't want getCollectionNode to show up in the type definition


let Item = $e92117d6e5313ef8e7c10fac1de193ce$var$Item;

function $b2e76f05d3356a2e1df6ac80570fcd9$var$Section(props) {
  // eslint-disable-line @typescript-eslint/no-unused-vars
  return null;
}

$b2e76f05d3356a2e1df6ac80570fcd9$var$Section.getCollectionNode = function* getCollectionNode(props) {
  let {
    children,
    title,
    items
  } = props;
  yield {
    type: 'section',
    hasChildNodes: true,
    rendered: title,
    'aria-label': props['aria-label'],

    *childNodes() {
      if (typeof children === 'function') {
        if (!items) {
          throw new Error('props.children was a function but props.items is missing');
        }

        for (let item of items) {
          yield {
            type: 'item',
            value: item,
            renderer: children
          };
        }
      } else {
        let items = [];

        react__WEBPACK_IMPORTED_MODULE_1__.Children.forEach(children, child => {
          items.push({
            type: 'item',
            element: child
          });
        });

        yield* items;
      }
    }

  };
}; // We don't want getCollectionNode to show up in the type definition


let Section = $b2e76f05d3356a2e1df6ac80570fcd9$var$Section;

class $f8429209754fda4b9142d514065f4$export$CollectionBuilder {
  constructor() {
    this.context = void 0;
    this.cache = new WeakMap();
  }

  build(props, context) {
    this.context = context;
    return $f8429209754fda4b9142d514065f4$var$iterable(() => this.iterateCollection(props));
  }

  *iterateCollection(props) {
    let {
      children,
      items
    } = props;

    if (typeof children === 'function') {
      if (!items) {
        throw new Error('props.children was a function but props.items is missing');
      }

      for (let item of props.items) {
        yield* this.getFullNode({
          value: item
        }, {
          renderer: children
        });
      }
    } else {
      let items = [];

      react__WEBPACK_IMPORTED_MODULE_1__.Children.forEach(children, child => {
        items.push(child);
      });

      let index = 0;

      for (let item of items) {
        let nodes = this.getFullNode({
          element: item,
          index: index
        }, {});

        for (let node of nodes) {
          index++;
          yield node;
        }
      }
    }
  }

  getKey(item, partialNode, state, parentKey) {
    if (item.key != null) {
      return item.key;
    }

    if (partialNode.type === 'cell' && partialNode.key != null) {
      return "" + parentKey + partialNode.key;
    }

    let v = partialNode.value;

    if (v != null) {
      var _v$key;

      let key = (_v$key = v.key) != null ? _v$key : v.id;

      if (key == null) {
        throw new Error('No key found for item');
      }

      return key;
    }

    return parentKey ? parentKey + "." + partialNode.index : "$." + partialNode.index;
  }

  getChildState(state, partialNode) {
    return {
      renderer: partialNode.renderer || state.renderer
    };
  }

  *getFullNode(partialNode, state, parentKey, parentNode) {
    // If there's a value instead of an element on the node, and a parent renderer function is available,
    // use it to render an element for the value.
    let element = partialNode.element;

    if (!element && partialNode.value && state && state.renderer) {
      let cached = this.cache.get(partialNode.value);

      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {
        cached.index = partialNode.index;
        cached.parentKey = parentNode ? parentNode.key : null;
        yield cached;
        return;
      }

      element = state.renderer(partialNode.value);
    } // If there's an element with a getCollectionNode function on its type, then it's a supported component.
    // Call this function to get a partial node, and recursively build a full node from there.


    if ( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(element)) {
      let type = element.type;

      if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {
        let name = typeof element.type === 'function' ? element.type.name : element.type;
        throw new Error("Unknown element <" + name + "> in collection.");
      }

      let childNodes = type.getCollectionNode(element.props, this.context);
      let index = partialNode.index;
      let result = childNodes.next();

      while (!result.done && result.value) {
        let childNode = result.value;
        partialNode.index = index;
        let nodeKey = childNode.key;

        if (!nodeKey) {
          nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);
        }

        let nodes = this.getFullNode((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, childNode, {
          key: nodeKey,
          index,
          wrapper: $f8429209754fda4b9142d514065f4$var$compose(partialNode.wrapper, childNode.wrapper)
        }), this.getChildState(state, childNode), parentKey ? "" + parentKey + element.key : element.key, parentNode);
        let children = [...nodes];

        for (let node of children) {
          // Cache the node based on its value
          node.value = childNode.value || partialNode.value;

          if (node.value) {
            this.cache.set(node.value, node);
          } // The partial node may have specified a type for the child in order to specify a constraint.
          // Verify that the full node that was built recursively matches this type.


          if (partialNode.type && node.type !== partialNode.type) {
            throw new Error("Unsupported type <" + $f8429209754fda4b9142d514065f4$var$capitalize(node.type) + "> in <" + $f8429209754fda4b9142d514065f4$var$capitalize(parentNode.type) + ">. Only <" + $f8429209754fda4b9142d514065f4$var$capitalize(partialNode.type) + "> is supported.");
          }

          index++;
          yield node;
        }

        result = childNodes.next(children);
      }

      return;
    } // Ignore invalid elements


    if (partialNode.key == null) {
      return;
    } // Create full node


    let builder = this;
    let node = {
      type: partialNode.type,
      props: partialNode.props,
      key: partialNode.key,
      parentKey: parentNode ? parentNode.key : null,
      value: partialNode.value,
      level: parentNode ? parentNode.level + 1 : 0,
      index: partialNode.index,
      rendered: partialNode.rendered,
      textValue: partialNode.textValue,
      'aria-label': partialNode['aria-label'],
      wrapper: partialNode.wrapper,
      shouldInvalidate: partialNode.shouldInvalidate,
      hasChildNodes: partialNode.hasChildNodes,
      childNodes: $f8429209754fda4b9142d514065f4$var$iterable(function* () {
        if (!partialNode.hasChildNodes) {
          return;
        }

        let index = 0;

        for (let child of partialNode.childNodes()) {
          // Ensure child keys are globally unique by prepending the parent node's key
          if (child.key != null) {
            child.key = "" + node.key + child.key;
          }

          child.index = index;
          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);

          for (let node of nodes) {
            index++;
            yield node;
          }
        }
      })
    };
    yield node;
  }

} // Wraps an iterator function as an iterable object, and caches the results.


function $f8429209754fda4b9142d514065f4$var$iterable(iterator) {
  let cache = [];
  let iterable = null;
  return {
    *[Symbol.iterator]() {
      for (let item of cache) {
        yield item;
      }

      if (!iterable) {
        iterable = iterator();
      }

      for (let item of iterable) {
        cache.push(item);
        yield item;
      }
    }

  };
}

function $f8429209754fda4b9142d514065f4$var$compose(outer, inner) {
  if (outer && inner) {
    return element => outer(inner(element));
  }

  if (outer) {
    return outer;
  }

  if (inner) {
    return inner;
  }
}

function $f8429209754fda4b9142d514065f4$var$capitalize(str) {
  return str[0].toUpperCase() + str.slice(1);
}

function useCollection(props, factory, context, invalidators) {
  if (invalidators === void 0) {
    invalidators = [];
  }

  let builder = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new $f8429209754fda4b9142d514065f4$export$CollectionBuilder(), []);
  let prev = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    let nodes = builder.build(props, context);
    prev.current = factory(nodes, prev.current);
    return prev.current; // Don't invalidate when any prop changes, just the two we care about.
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [builder, props.children, props.items, context, ...invalidators]);
}

/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
const $c10674539d06c96e1a2fbb6a54340$var$cache = new WeakMap();
function getItemCount(collection) {
  let count = $c10674539d06c96e1a2fbb6a54340$var$cache.get(collection);

  if (count != null) {
    return count;
  }

  count = 0;

  for (let item of collection) {
    if (item.type === 'section') {
      count += getItemCount(item.childNodes);
    } else {
      count++;
    }
  }

  $c10674539d06c96e1a2fbb6a54340$var$cache.set(collection, count);
  return count;
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-stately/menu/dist/module.js":
/*!**********************************************************!*\
  !*** ../node_modules/@react-stately/menu/dist/module.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useMenuTriggerState": () => (/* binding */ useMenuTriggerState)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var _react_stately_overlays__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-stately/overlays */ "../node_modules/@react-stately/overlays/dist/module.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "../node_modules/@babel/runtime/helpers/esm/extends.js");




/**
 * Manages state for a menu trigger. Tracks whether the menu is currently open,
 * and controls which item will receive focus when it opens.
 */
function useMenuTriggerState(props) {
  let overlayTriggerState = (0,_react_stately_overlays__WEBPACK_IMPORTED_MODULE_2__.useOverlayTriggerState)(props);
  let [focusStrategy, setFocusStrategy] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
    focusStrategy
  }, overlayTriggerState, {
    open(focusStrategy) {
      if (focusStrategy === void 0) {
        focusStrategy = null;
      }

      setFocusStrategy(focusStrategy);
      overlayTriggerState.open();
    },

    toggle(focusStrategy) {
      if (focusStrategy === void 0) {
        focusStrategy = null;
      }

      setFocusStrategy(focusStrategy);
      overlayTriggerState.toggle();
    }

  });
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/@react-stately/overlays/dist/module.js":
/*!**************************************************************!*\
  !*** ../node_modules/@react-stately/overlays/dist/module.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useOverlayTriggerState": () => (/* binding */ useOverlayTriggerState)
/* harmony export */ });
/* harmony import */ var _react_stately_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-stately/utils */ "../node_modules/@react-stately/utils/dist/module.js");


/**
 * Manages state for an overlay trigger. Tracks whether the overlay is open, and provides
 * methods to toggle this state.
 */
function useOverlayTriggerState(props) {
  let [isOpen, setOpen] = (0,_react_stately_utils__WEBPACK_IMPORTED_MODULE_0__.useControlledState)(props.isOpen, props.defaultOpen || false, props.onOpenChange);
  return {
    isOpen,

    open() {
      setOpen(true);
    },

    close() {
      setOpen(false);
    },

    toggle() {
      setOpen(!isOpen);
    }

  };
}
//# sourceMappingURL=module.js.map


/***/ }),

/***/ "../node_modules/intl-messageformat/lib/index.js":
/*!*******************************************************!*\
  !*** ../node_modules/intl-messageformat/lib/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ErrorCode": () => (/* reexport safe */ _src_error__WEBPACK_IMPORTED_MODULE_2__.ErrorCode),
/* harmony export */   "FormatError": () => (/* reexport safe */ _src_error__WEBPACK_IMPORTED_MODULE_2__.FormatError),
/* harmony export */   "IntlMessageFormat": () => (/* reexport safe */ _src_core__WEBPACK_IMPORTED_MODULE_1__.IntlMessageFormat),
/* harmony export */   "InvalidValueError": () => (/* reexport safe */ _src_error__WEBPACK_IMPORTED_MODULE_2__.InvalidValueError),
/* harmony export */   "InvalidValueTypeError": () => (/* reexport safe */ _src_error__WEBPACK_IMPORTED_MODULE_2__.InvalidValueTypeError),
/* harmony export */   "MissingValueError": () => (/* reexport safe */ _src_error__WEBPACK_IMPORTED_MODULE_2__.MissingValueError),
/* harmony export */   "PART_TYPE": () => (/* reexport safe */ _src_formatters__WEBPACK_IMPORTED_MODULE_0__.PART_TYPE),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "formatToParts": () => (/* reexport safe */ _src_formatters__WEBPACK_IMPORTED_MODULE_0__.formatToParts),
/* harmony export */   "isFormatXMLElementFn": () => (/* reexport safe */ _src_formatters__WEBPACK_IMPORTED_MODULE_0__.isFormatXMLElementFn)
/* harmony export */ });
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/core */ "../node_modules/intl-messageformat/lib/src/core.js");
/* harmony import */ var _src_formatters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/formatters */ "../node_modules/intl-messageformat/lib/src/formatters.js");
/* harmony import */ var _src_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/error */ "../node_modules/intl-messageformat/lib/src/error.js");
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/




/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_src_core__WEBPACK_IMPORTED_MODULE_1__.IntlMessageFormat);


/***/ }),

/***/ "../node_modules/intl-messageformat/lib/src/core.js":
/*!**********************************************************!*\
  !*** ../node_modules/intl-messageformat/lib/src/core.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IntlMessageFormat": () => (/* binding */ IntlMessageFormat)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @formatjs/icu-messageformat-parser */ "../node_modules/@formatjs/icu-messageformat-parser/lib/index.js");
/* harmony import */ var _formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @formatjs/fast-memoize */ "../node_modules/@formatjs/fast-memoize/lib/index.js");
/* harmony import */ var _formatters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatters */ "../node_modules/intl-messageformat/lib/src/formatters.js");
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/




// -- MessageFormat --------------------------------------------------------
function mergeConfig(c1, c2) {
    if (!c2) {
        return c1;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {
        all[k] = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, c1[k]), (c2[k] || {}));
        return all;
    }, {}));
}
function mergeConfigs(defaultConfig, configs) {
    if (!configs) {
        return defaultConfig;
    }
    return Object.keys(defaultConfig).reduce(function (all, k) {
        all[k] = mergeConfig(defaultConfig[k], configs[k]);
        return all;
    }, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, defaultConfig));
}
function createFastMemoizeCache(store) {
    return {
        create: function () {
            return {
                get: function (key) {
                    return store[key];
                },
                set: function (key, value) {
                    store[key] = value;
                },
            };
        },
    };
}
function createDefaultFormatters(cache) {
    if (cache === void 0) { cache = {
        number: {},
        dateTime: {},
        pluralRules: {},
    }; }
    return {
        getNumberFormat: (0,_formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__["default"])(function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.NumberFormat).bind.apply(_a, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([void 0], args, false)))();
        }, {
            cache: createFastMemoizeCache(cache.number),
            strategy: _formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__.strategies.variadic,
        }),
        getDateTimeFormat: (0,_formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__["default"])(function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([void 0], args, false)))();
        }, {
            cache: createFastMemoizeCache(cache.dateTime),
            strategy: _formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__.strategies.variadic,
        }),
        getPluralRules: (0,_formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__["default"])(function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.PluralRules).bind.apply(_a, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([void 0], args, false)))();
        }, {
            cache: createFastMemoizeCache(cache.pluralRules),
            strategy: _formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__.strategies.variadic,
        }),
    };
}
var IntlMessageFormat = /** @class */ (function () {
    function IntlMessageFormat(message, locales, overrideFormats, opts) {
        var _this = this;
        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }
        this.formatterCache = {
            number: {},
            dateTime: {},
            pluralRules: {},
        };
        this.format = function (values) {
            var parts = _this.formatToParts(values);
            // Hot path for straight simple msg translations
            if (parts.length === 1) {
                return parts[0].value;
            }
            var result = parts.reduce(function (all, part) {
                if (!all.length ||
                    part.type !== _formatters__WEBPACK_IMPORTED_MODULE_3__.PART_TYPE.literal ||
                    typeof all[all.length - 1] !== 'string') {
                    all.push(part.value);
                }
                else {
                    all[all.length - 1] += part.value;
                }
                return all;
            }, []);
            if (result.length <= 1) {
                return result[0] || '';
            }
            return result;
        };
        this.formatToParts = function (values) {
            return (0,_formatters__WEBPACK_IMPORTED_MODULE_3__.formatToParts)(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);
        };
        this.resolvedOptions = function () { return ({
            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],
        }); };
        this.getAst = function () { return _this.ast; };
        if (typeof message === 'string') {
            this.message = message;
            if (!IntlMessageFormat.__parse) {
                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');
            }
            // Parse string messages into an AST.
            this.ast = IntlMessageFormat.__parse(message, {
                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,
            });
        }
        else {
            this.ast = message;
        }
        if (!Array.isArray(this.ast)) {
            throw new TypeError('A message must be provided as a String or AST.');
        }
        // Creates a new object with the specified `formats` merged with the default
        // formats.
        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);
        // Defined first because it's used to build the format pattern.
        this.locales = locales;
        this.formatters =
            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat, "defaultLocale", {
        get: function () {
            if (!IntlMessageFormat.memoizedDefaultLocale) {
                IntlMessageFormat.memoizedDefaultLocale =
                    new Intl.NumberFormat().resolvedOptions().locale;
            }
            return IntlMessageFormat.memoizedDefaultLocale;
        },
        enumerable: false,
        configurable: true
    });
    IntlMessageFormat.memoizedDefaultLocale = null;
    IntlMessageFormat.__parse = _formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.parse;
    // Default format options used as the prototype of the `formats` provided to the
    // constructor. These are used when constructing the internal Intl.NumberFormat
    // and Intl.DateTimeFormat instances.
    IntlMessageFormat.formats = {
        number: {
            integer: {
                maximumFractionDigits: 0,
            },
            currency: {
                style: 'currency',
            },
            percent: {
                style: 'percent',
            },
        },
        date: {
            short: {
                month: 'numeric',
                day: 'numeric',
                year: '2-digit',
            },
            medium: {
                month: 'short',
                day: 'numeric',
                year: 'numeric',
            },
            long: {
                month: 'long',
                day: 'numeric',
                year: 'numeric',
            },
            full: {
                weekday: 'long',
                month: 'long',
                day: 'numeric',
                year: 'numeric',
            },
        },
        time: {
            short: {
                hour: 'numeric',
                minute: 'numeric',
            },
            medium: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
            },
            long: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
                timeZoneName: 'short',
            },
            full: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
                timeZoneName: 'short',
            },
        },
    };
    return IntlMessageFormat;
}());



/***/ }),

/***/ "../node_modules/intl-messageformat/lib/src/error.js":
/*!***********************************************************!*\
  !*** ../node_modules/intl-messageformat/lib/src/error.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ErrorCode": () => (/* binding */ ErrorCode),
/* harmony export */   "FormatError": () => (/* binding */ FormatError),
/* harmony export */   "InvalidValueError": () => (/* binding */ InvalidValueError),
/* harmony export */   "InvalidValueTypeError": () => (/* binding */ InvalidValueTypeError),
/* harmony export */   "MissingValueError": () => (/* binding */ MissingValueError)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../node_modules/tslib/tslib.es6.js");

var ErrorCode;
(function (ErrorCode) {
    // When we have a placeholder but no value to format
    ErrorCode["MISSING_VALUE"] = "MISSING_VALUE";
    // When value supplied is invalid
    ErrorCode["INVALID_VALUE"] = "INVALID_VALUE";
    // When we need specific Intl API but it's not available
    ErrorCode["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(FormatError, _super);
    function FormatError(msg, code, originalMessage) {
        var _this = _super.call(this, msg) || this;
        _this.code = code;
        _this.originalMessage = originalMessage;
        return _this;
    }
    FormatError.prototype.toString = function () {
        return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    };
    return FormatError;
}(Error));

var InvalidValueError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(InvalidValueError, _super);
    function InvalidValueError(variableId, value, options, originalMessage) {
        return _super.call(this, "Invalid values for \"".concat(variableId, "\": \"").concat(value, "\". Options are \"").concat(Object.keys(options).join('", "'), "\""), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError;
}(FormatError));

var InvalidValueTypeError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(InvalidValueTypeError, _super);
    function InvalidValueTypeError(value, type, originalMessage) {
        return _super.call(this, "Value for \"".concat(value, "\" must be of type ").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError;
}(FormatError));

var MissingValueError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(MissingValueError, _super);
    function MissingValueError(variableId, originalMessage) {
        return _super.call(this, "The intl string context variable \"".concat(variableId, "\" was not provided to the string \"").concat(originalMessage, "\""), ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError;
}(FormatError));



/***/ }),

/***/ "../node_modules/intl-messageformat/lib/src/formatters.js":
/*!****************************************************************!*\
  !*** ../node_modules/intl-messageformat/lib/src/formatters.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PART_TYPE": () => (/* binding */ PART_TYPE),
/* harmony export */   "formatToParts": () => (/* binding */ formatToParts),
/* harmony export */   "isFormatXMLElementFn": () => (/* binding */ isFormatXMLElementFn)
/* harmony export */ });
/* harmony import */ var _formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @formatjs/icu-messageformat-parser */ "../node_modules/@formatjs/icu-messageformat-parser/lib/index.js");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ "../node_modules/intl-messageformat/lib/src/error.js");


var PART_TYPE;
(function (PART_TYPE) {
    PART_TYPE[PART_TYPE["literal"] = 0] = "literal";
    PART_TYPE[PART_TYPE["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
    if (parts.length < 2) {
        return parts;
    }
    return parts.reduce(function (all, part) {
        var lastPart = all[all.length - 1];
        if (!lastPart ||
            lastPart.type !== PART_TYPE.literal ||
            part.type !== PART_TYPE.literal) {
            all.push(part);
        }
        else {
            lastPart.value += part.value;
        }
        return all;
    }, []);
}
function isFormatXMLElementFn(el) {
    return typeof el === 'function';
}
// TODO(skeleton): add skeleton support
function formatToParts(els, locales, formatters, formats, values, currentPluralValue, 
// For debugging
originalMessage) {
    // Hot path for straight simple msg translations
    if (els.length === 1 && (0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isLiteralElement)(els[0])) {
        return [
            {
                type: PART_TYPE.literal,
                value: els[0].value,
            },
        ];
    }
    var result = [];
    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
        var el = els_1[_i];
        // Exit early for string parts.
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isLiteralElement)(el)) {
            result.push({
                type: PART_TYPE.literal,
                value: el.value,
            });
            continue;
        }
        // TODO: should this part be literal type?
        // Replace `#` in plural rules with the actual numeric value.
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isPoundElement)(el)) {
            if (typeof currentPluralValue === 'number') {
                result.push({
                    type: PART_TYPE.literal,
                    value: formatters.getNumberFormat(locales).format(currentPluralValue),
                });
            }
            continue;
        }
        var varName = el.value;
        // Enforce that all required values are provided by the caller.
        if (!(values && varName in values)) {
            throw new _error__WEBPACK_IMPORTED_MODULE_1__.MissingValueError(varName, originalMessage);
        }
        var value = values[varName];
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isArgumentElement)(el)) {
            if (!value || typeof value === 'string' || typeof value === 'number') {
                value =
                    typeof value === 'string' || typeof value === 'number'
                        ? String(value)
                        : '';
            }
            result.push({
                type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,
                value: value,
            });
            continue;
        }
        // Recursively format plural and select parts' option — which can be a
        // nested pattern structure. The choosing of the option to use is
        // abstracted-by and delegated-to the part helper object.
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isDateElement)(el)) {
            var style = typeof el.style === 'string'
                ? formats.date[el.style]
                : (0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isDateTimeSkeleton)(el.style)
                    ? el.style.parsedOptions
                    : undefined;
            result.push({
                type: PART_TYPE.literal,
                value: formatters
                    .getDateTimeFormat(locales, style)
                    .format(value),
            });
            continue;
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isTimeElement)(el)) {
            var style = typeof el.style === 'string'
                ? formats.time[el.style]
                : (0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isDateTimeSkeleton)(el.style)
                    ? el.style.parsedOptions
                    : undefined;
            result.push({
                type: PART_TYPE.literal,
                value: formatters
                    .getDateTimeFormat(locales, style)
                    .format(value),
            });
            continue;
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isNumberElement)(el)) {
            var style = typeof el.style === 'string'
                ? formats.number[el.style]
                : (0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isNumberSkeleton)(el.style)
                    ? el.style.parsedOptions
                    : undefined;
            if (style && style.scale) {
                value =
                    value *
                        (style.scale || 1);
            }
            result.push({
                type: PART_TYPE.literal,
                value: formatters
                    .getNumberFormat(locales, style)
                    .format(value),
            });
            continue;
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isTagElement)(el)) {
            var children = el.children, value_1 = el.value;
            var formatFn = values[value_1];
            if (!isFormatXMLElementFn(formatFn)) {
                throw new _error__WEBPACK_IMPORTED_MODULE_1__.InvalidValueTypeError(value_1, 'function', originalMessage);
            }
            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
            var chunks = formatFn(parts.map(function (p) { return p.value; }));
            if (!Array.isArray(chunks)) {
                chunks = [chunks];
            }
            result.push.apply(result, chunks.map(function (c) {
                return {
                    type: typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,
                    value: c,
                };
            }));
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isSelectElement)(el)) {
            var opt = el.options[value] || el.options.other;
            if (!opt) {
                throw new _error__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
            }
            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
            continue;
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isPluralElement)(el)) {
            var opt = el.options["=".concat(value)];
            if (!opt) {
                if (!Intl.PluralRules) {
                    throw new _error__WEBPACK_IMPORTED_MODULE_1__.FormatError("Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n", _error__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.MISSING_INTL_API, originalMessage);
                }
                var rule = formatters
                    .getPluralRules(locales, { type: el.pluralType })
                    .select(value - (el.offset || 0));
                opt = el.options[rule] || el.options.other;
            }
            if (!opt) {
                throw new _error__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
            }
            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));
            continue;
        }
    }
    return mergeLiteral(result);
}


/***/ }),

/***/ "../node_modules/lodash/_arrayAggregator.js":
/*!**************************************************!*\
  !*** ../node_modules/lodash/_arrayAggregator.js ***!
  \**************************************************/
/***/ ((module) => {

/**
 * A specialized version of `baseAggregator` for arrays.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function arrayAggregator(array, setter, iteratee, accumulator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee(value), array);
  }
  return accumulator;
}

module.exports = arrayAggregator;


/***/ }),

/***/ "../node_modules/lodash/_arrayIncludes.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_arrayIncludes.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var baseIndexOf = __webpack_require__(/*! ./_baseIndexOf */ "../node_modules/lodash/_baseIndexOf.js");

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;


/***/ }),

/***/ "../node_modules/lodash/_arrayIncludesWith.js":
/*!****************************************************!*\
  !*** ../node_modules/lodash/_arrayIncludesWith.js ***!
  \****************************************************/
/***/ ((module) => {

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;


/***/ }),

/***/ "../node_modules/lodash/_baseAggregator.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_baseAggregator.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var baseEach = __webpack_require__(/*! ./_baseEach */ "../node_modules/lodash/_baseEach.js");

/**
 * Aggregates elements of `collection` on `accumulator` with keys transformed
 * by `iteratee` and values set by `setter`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function baseAggregator(collection, setter, iteratee, accumulator) {
  baseEach(collection, function(value, key, collection) {
    setter(accumulator, value, iteratee(value), collection);
  });
  return accumulator;
}

module.exports = baseAggregator;


/***/ }),

/***/ "../node_modules/lodash/_baseIndexOf.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_baseIndexOf.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var baseFindIndex = __webpack_require__(/*! ./_baseFindIndex */ "../node_modules/lodash/_baseFindIndex.js"),
    baseIsNaN = __webpack_require__(/*! ./_baseIsNaN */ "../node_modules/lodash/_baseIsNaN.js"),
    strictIndexOf = __webpack_require__(/*! ./_strictIndexOf */ "../node_modules/lodash/_strictIndexOf.js");

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;


/***/ }),

/***/ "../node_modules/lodash/_baseIsNaN.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_baseIsNaN.js ***!
  \********************************************/
/***/ ((module) => {

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;


/***/ }),

/***/ "../node_modules/lodash/_basePick.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_basePick.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var basePickBy = __webpack_require__(/*! ./_basePickBy */ "../node_modules/lodash/_basePickBy.js"),
    hasIn = __webpack_require__(/*! ./hasIn */ "../node_modules/lodash/hasIn.js");

/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return basePickBy(object, paths, function(value, path) {
    return hasIn(object, path);
  });
}

module.exports = basePick;


/***/ }),

/***/ "../node_modules/lodash/_basePickBy.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_basePickBy.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var baseGet = __webpack_require__(/*! ./_baseGet */ "../node_modules/lodash/_baseGet.js"),
    baseSet = __webpack_require__(/*! ./_baseSet */ "../node_modules/lodash/_baseSet.js"),
    castPath = __webpack_require__(/*! ./_castPath */ "../node_modules/lodash/_castPath.js");

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = baseGet(object, path);

    if (predicate(value, path)) {
      baseSet(result, castPath(path, object), value);
    }
  }
  return result;
}

module.exports = basePickBy;


/***/ }),

/***/ "../node_modules/lodash/_baseSet.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_baseSet.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var assignValue = __webpack_require__(/*! ./_assignValue */ "../node_modules/lodash/_assignValue.js"),
    castPath = __webpack_require__(/*! ./_castPath */ "../node_modules/lodash/_castPath.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "../node_modules/lodash/_isIndex.js"),
    isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "../node_modules/lodash/_toKey.js");

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
      return object;
    }

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue)
          ? objValue
          : (isIndex(path[index + 1]) ? [] : {});
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;


/***/ }),

/***/ "../node_modules/lodash/_baseUniq.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_baseUniq.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var SetCache = __webpack_require__(/*! ./_SetCache */ "../node_modules/lodash/_SetCache.js"),
    arrayIncludes = __webpack_require__(/*! ./_arrayIncludes */ "../node_modules/lodash/_arrayIncludes.js"),
    arrayIncludesWith = __webpack_require__(/*! ./_arrayIncludesWith */ "../node_modules/lodash/_arrayIncludesWith.js"),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ "../node_modules/lodash/_cacheHas.js"),
    createSet = __webpack_require__(/*! ./_createSet */ "../node_modules/lodash/_createSet.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "../node_modules/lodash/_setToArray.js");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;


/***/ }),

/***/ "../node_modules/lodash/_createAggregator.js":
/*!***************************************************!*\
  !*** ../node_modules/lodash/_createAggregator.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayAggregator = __webpack_require__(/*! ./_arrayAggregator */ "../node_modules/lodash/_arrayAggregator.js"),
    baseAggregator = __webpack_require__(/*! ./_baseAggregator */ "../node_modules/lodash/_baseAggregator.js"),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "../node_modules/lodash/_baseIteratee.js"),
    isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js");

/**
 * Creates a function like `_.groupBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} [initializer] The accumulator object initializer.
 * @returns {Function} Returns the new aggregator function.
 */
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = isArray(collection) ? arrayAggregator : baseAggregator,
        accumulator = initializer ? initializer() : {};

    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);
  };
}

module.exports = createAggregator;


/***/ }),

/***/ "../node_modules/lodash/_createSet.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_createSet.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var Set = __webpack_require__(/*! ./_Set */ "../node_modules/lodash/_Set.js"),
    noop = __webpack_require__(/*! ./noop */ "../node_modules/lodash/noop.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "../node_modules/lodash/_setToArray.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

module.exports = createSet;


/***/ }),

/***/ "../node_modules/lodash/_strictIndexOf.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_strictIndexOf.js ***!
  \************************************************/
/***/ ((module) => {

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;


/***/ }),

/***/ "../node_modules/lodash/noop.js":
/*!**************************************!*\
  !*** ../node_modules/lodash/noop.js ***!
  \**************************************/
/***/ ((module) => {

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;


/***/ }),

/***/ "../node_modules/lodash/partition.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/partition.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var createAggregator = __webpack_require__(/*! ./_createAggregator */ "../node_modules/lodash/_createAggregator.js");

/**
 * Creates an array of elements split into two groups, the first of which
 * contains elements `predicate` returns truthy for, the second of which
 * contains elements `predicate` returns falsey for. The predicate is
 * invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of grouped elements.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': false },
 *   { 'user': 'fred',    'age': 40, 'active': true },
 *   { 'user': 'pebbles', 'age': 1,  'active': false }
 * ];
 *
 * _.partition(users, function(o) { return o.active; });
 * // => objects for [['fred'], ['barney', 'pebbles']]
 *
 * // The `_.matches` iteratee shorthand.
 * _.partition(users, { 'age': 1, 'active': false });
 * // => objects for [['pebbles'], ['barney', 'fred']]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.partition(users, ['active', false]);
 * // => objects for [['barney', 'pebbles'], ['fred']]
 *
 * // The `_.property` iteratee shorthand.
 * _.partition(users, 'active');
 * // => objects for [['fred'], ['barney', 'pebbles']]
 */
var partition = createAggregator(function(result, value, key) {
  result[key ? 0 : 1].push(value);
}, function() { return [[], []]; });

module.exports = partition;


/***/ }),

/***/ "../node_modules/lodash/pick.js":
/*!**************************************!*\
  !*** ../node_modules/lodash/pick.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var basePick = __webpack_require__(/*! ./_basePick */ "../node_modules/lodash/_basePick.js"),
    flatRest = __webpack_require__(/*! ./_flatRest */ "../node_modules/lodash/_flatRest.js");

/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = flatRest(function(object, paths) {
  return object == null ? {} : basePick(object, paths);
});

module.exports = pick;


/***/ }),

/***/ "../node_modules/lodash/pickBy.js":
/*!****************************************!*\
  !*** ../node_modules/lodash/pickBy.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayMap = __webpack_require__(/*! ./_arrayMap */ "../node_modules/lodash/_arrayMap.js"),
    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "../node_modules/lodash/_baseIteratee.js"),
    basePickBy = __webpack_require__(/*! ./_basePickBy */ "../node_modules/lodash/_basePickBy.js"),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ "../node_modules/lodash/_getAllKeysIn.js");

/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap(getAllKeysIn(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee(predicate);
  return basePickBy(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}

module.exports = pickBy;


/***/ }),

/***/ "../node_modules/lodash/uniqBy.js":
/*!****************************************!*\
  !*** ../node_modules/lodash/uniqBy.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "../node_modules/lodash/_baseIteratee.js"),
    baseUniq = __webpack_require__(/*! ./_baseUniq */ "../node_modules/lodash/_baseUniq.js");

/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
function uniqBy(array, iteratee) {
  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
}

module.exports = uniqBy;


/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/extends.js":
/*!*********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/extends.js ***!
  \*********************************************************/
/***/ ((module) => {

function _extends() {
  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _extends.apply(this, arguments);
}

module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \***********************************************************************/
/***/ ((module) => {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _classPrivateFieldKey)
/* harmony export */ });
var id = 0;
function _classPrivateFieldKey(name) {
  return "__private_" + id++ + "_" + name;
}

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/esm/interopRequireDefault.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/esm/interopRequireDefault.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _interopRequireDefault)
/* harmony export */ });
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

/***/ }),

/***/ "../node_modules/copy-text-to-clipboard/index.js":
/*!*******************************************************!*\
  !*** ../node_modules/copy-text-to-clipboard/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ copyTextToClipboard)
/* harmony export */ });
function copyTextToClipboard(input, {target = document.body} = {}) {
	const element = document.createElement('textarea');
	const previouslyFocusedElement = document.activeElement;

	element.value = input;

	// Prevent keyboard from showing on mobile
	element.setAttribute('readonly', '');

	element.style.contain = 'strict';
	element.style.position = 'absolute';
	element.style.left = '-9999px';
	element.style.fontSize = '12pt'; // Prevent zooming on iOS

	const selection = document.getSelection();
	let originalRange = false;
	if (selection.rangeCount > 0) {
		originalRange = selection.getRangeAt(0);
	}

	target.append(element);
	element.select();

	// Explicit selection workaround for iOS
	element.selectionStart = 0;
	element.selectionEnd = input.length;

	let isSuccess = false;
	try {
		isSuccess = document.execCommand('copy');
	} catch {}

	element.remove();

	if (originalRange) {
		selection.removeAllRanges();
		selection.addRange(originalRange);
	}

	// Get the focus back on the previously focused element, if any
	if (previouslyFocusedElement) {
		previouslyFocusedElement.focus();
	}

	return isSuccess;
}


/***/ })

}]);
//# sourceMappingURL=../sourcemaps/vendors-node_modules_react-aria_button_dist_module_js-node_modules_react-aria_menu_dist_modul-af0898.c0b90ed4f7c8d447458ddf723285359d.js.map