{"version":3,"file":"chunks/app_views_settings_account_accountClose_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountClose.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {addErrorMessage, addLoadingMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps, openModal} from 'sentry/actionCreators/modal';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst BYE_URL = '/';\nconst leaveRedirect = () => (window.location.href = BYE_URL);\n\nconst Important = styled('div')`\n  font-weight: bold;\n  font-size: 1.2em;\n`;\n\nconst GoodbyeModalContent = ({Header, Body, Footer}: ModalRenderProps) => (\n  <div>\n    <Header>{t('Closing Account')}</Header>\n    <Body>\n      <TextBlock>\n        {t('Your account has been deactivated and scheduled for removal.')}\n      </TextBlock>\n      <TextBlock>\n        {t('Thanks for using Sentry! We hope to see you again soon!')}\n      </TextBlock>\n    </Body>\n    <Footer>\n      <Button href={BYE_URL}>{t('Goodbye')}</Button>\n    </Footer>\n  </div>\n);\n\ntype OwnedOrg = {\n  organization: Organization;\n  singleOwner: boolean;\n};\n\ntype Props = AsyncView['props'];\n\ntype State = AsyncView['state'] & {\n  organizations: OwnedOrg[] | null;\n  /**\n   * Org slugs that will be removed\n   */\n  orgsToRemove: Set<string> | null;\n};\n\nclass AccountClose extends AsyncView<Props, State> {\n  leaveRedirectTimeout: number | undefined = undefined;\n\n  componentWillUnmount() {\n    window.clearTimeout(this.leaveRedirectTimeout);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['organizations', '/organizations/?owner=1']];\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      orgsToRemove: null,\n    };\n  }\n\n  get singleOwnerOrgs() {\n    return this.state.organizations\n      ?.filter(({singleOwner}) => singleOwner)\n      ?.map(({organization}) => organization.slug);\n  }\n\n  handleChange = (\n    {slug}: Organization,\n    isSingle: boolean,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const checked = event.target.checked;\n\n    // Can't unselect an org where you are the single owner\n    if (isSingle) {\n      return;\n    }\n\n    this.setState(state => {\n      const set = state.orgsToRemove || new Set(this.singleOwnerOrgs);\n      if (checked) {\n        set.add(slug);\n      } else {\n        set.delete(slug);\n      }\n\n      return {orgsToRemove: set};\n    });\n  };\n\n  handleRemoveAccount = async () => {\n    const {orgsToRemove} = this.state;\n    const orgs = orgsToRemove === null ? this.singleOwnerOrgs : Array.from(orgsToRemove);\n\n    addLoadingMessage('Closing account\\u2026');\n\n    try {\n      await this.api.requestPromise('/users/me/', {\n        method: 'DELETE',\n        data: {organizations: orgs},\n      });\n\n      openModal(GoodbyeModalContent, {\n        onClose: leaveRedirect,\n      });\n\n      // Redirect after 10 seconds\n      window.clearTimeout(this.leaveRedirectTimeout);\n      this.leaveRedirectTimeout = window.setTimeout(leaveRedirect, 10000);\n    } catch {\n      addErrorMessage('Error closing account');\n    }\n  };\n\n  renderBody() {\n    const {organizations, orgsToRemove} = this.state;\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Close Account\" />\n\n        <TextBlock>\n          {t('This will permanently remove all associated data for your user')}.\n        </TextBlock>\n\n        <Alert type=\"error\" showIcon>\n          <Important>\n            {t('Closing your account is permanent and cannot be undone')}!\n          </Important>\n        </Alert>\n\n        <Panel>\n          <PanelHeader>{t('Remove the following organizations')}</PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\">\n              {t(\n                'Ownership will remain with other organization owners if an organization is not deleted.'\n              )}\n              <br />\n              {tct(\n                \"Boxes which can't be unchecked mean that you are the only organization owner and the organization [strong:will be deleted].\",\n                {strong: <strong />}\n              )}\n            </PanelAlert>\n\n            {organizations?.map(({organization, singleOwner}) => (\n              <PanelItem key={organization.slug}>\n                <label>\n                  <input\n                    style={{marginRight: 6}}\n                    type=\"checkbox\"\n                    value={organization.slug}\n                    onChange={this.handleChange.bind(this, organization, singleOwner)}\n                    name=\"organizations\"\n                    checked={\n                      orgsToRemove === null\n                        ? singleOwner\n                        : orgsToRemove.has(organization.slug)\n                    }\n                    disabled={singleOwner}\n                  />\n                  {organization.slug}\n                </label>\n              </PanelItem>\n            ))}\n          </PanelBody>\n        </Panel>\n\n        <Confirm\n          priority=\"danger\"\n          message={t(\n            'This is permanent and cannot be undone, are you really sure you want to do this?'\n          )}\n          onConfirm={this.handleRemoveAccount}\n        >\n          <Button priority=\"danger\">{t('Close Account')}</Button>\n        </Confirm>\n      </div>\n    );\n  }\n}\n\nexport default AccountClose;\n"],"names":["AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","addErrorMessage","addLoadingMessage","openModal","Alert","Button","Confirm","Panel","PanelAlert","PanelBody","PanelHeader","PanelItem","t","tct","SettingsPageHeader","TextBlock","BYE_URL","leaveRedirect","window","location","href","Important","GoodbyeModalContent","Header","Body","Footer","AccountClose","undefined","isSingle","event","slug","checked","target","setState","state","set","orgsToRemove","Set","singleOwnerOrgs","add","delete","orgs","Array","from","api","requestPromise","method","data","organizations","onClose","clearTimeout","leaveRedirectTimeout","setTimeout","componentWillUnmount","getEndpoints","getDefaultState","filter","singleOwner","map","organization","renderBody","strong","marginRight","handleChange","bind","has","handleRemoveAccount"],"sourceRoot":""}