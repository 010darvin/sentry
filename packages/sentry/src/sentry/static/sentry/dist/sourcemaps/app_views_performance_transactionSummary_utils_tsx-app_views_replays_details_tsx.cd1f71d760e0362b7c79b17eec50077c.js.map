{"version":3,"file":"chunks/app_views_performance_transactionSummary_utils_tsx-app_views_replays_details_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/areaChart.tsx","webpack:///./app/components/charts/series/areaSeries.tsx","webpack:///./app/components/events/meta/metaProxy.tsx","webpack:///./app/components/featureFeedback/index.tsx","webpack:///./app/components/htmlCode.tsx","webpack:///./app/components/keyValueTable.tsx","webpack:///./app/components/replays/breadcrumbs/gridlines.tsx","webpack:///./app/components/replays/breadcrumbs/replayTimeline.tsx","webpack:///./app/components/replays/breadcrumbs/replayTimelineEvents.tsx","webpack:///./app/components/replays/breadcrumbs/replayTimelineSpans.tsx","webpack:///./app/components/replays/breadcrumbs/stacked.tsx","webpack:///./app/components/replays/breadcrumbs/timeline.tsx","webpack:///./app/components/replays/header/detailsPageBreadcrumbs.tsx","webpack:///./app/components/replays/replaysFeatureBadge.tsx","webpack:///./app/components/replays/resizeable.tsx","webpack:///./app/components/tagsTableRow.tsx","webpack:///./app/utils/performance/urls.ts","webpack:///./app/utils/replays/hooks/useActiveReplayTab.tsx","webpack:///./app/utils/replays/hooks/useCrumbHandlers.tsx","webpack:///./app/utils/replays/hooks/useCurrentItemScroller.tsx","webpack:///./app/utils/replays/hooks/useExtractedCrumbHtml.tsx","webpack:///./app/utils/replays/hooks/useReplayLayout.tsx","webpack:///./app/utils/replays/hooks/useUrlParams.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/views/replays/detail/breadcrumbs/index.tsx","webpack:///./app/views/replays/detail/console/consoleMessage.tsx","webpack:///./app/views/replays/detail/console/index.tsx","webpack:///./app/views/replays/detail/console/utils.tsx","webpack:///./app/views/replays/detail/domMutations/index.tsx","webpack:///./app/views/replays/detail/focusArea.tsx","webpack:///./app/views/replays/detail/focusTabs.tsx","webpack:///./app/views/replays/detail/issueList.tsx","webpack:///./app/views/replays/detail/layout/chooseLayout.tsx","webpack:///./app/views/replays/detail/layout/fluidPanel.tsx","webpack:///./app/views/replays/detail/layout/index.tsx","webpack:///./app/views/replays/detail/layout/splitPanel.tsx","webpack:///./app/views/replays/detail/layout/utils.tsx","webpack:///./app/views/replays/detail/memoryChart.tsx","webpack:///./app/views/replays/detail/network/index.tsx","webpack:///./app/views/replays/detail/network/utils.tsx","webpack:///./app/views/replays/detail/page.tsx","webpack:///./app/views/replays/detail/replayMetaData.tsx","webpack:///./app/views/replays/detail/sideTabs.tsx","webpack:///./app/views/replays/detail/tagPanel.tsx","webpack:///./app/views/replays/detail/trace.tsx","webpack:///./app/views/replays/details.tsx"],"sourcesContent":["import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport AreaSeries from './series/areaSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type AreaChartSeries = Series & Omit<LineSeriesOption, 'data' | 'name'>;\n\nexport interface AreaChartProps extends Omit<ChartProps, 'series'> {\n  series: AreaChartSeries[];\n  stacked?: boolean;\n}\n\nexport function AreaChart({series, stacked, colors, ...props}: AreaChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      data-test-id=\"area-chart\"\n      colors={colors}\n      series={series.map(({seriesName, data, ...otherSeriesProps}, i) =>\n        AreaSeries({\n          stack: stacked ? 'area' : undefined,\n          name: seriesName,\n          data: data.map(({name, value}) => [name, value]),\n          lineStyle: {\n            color: colors?.[i],\n            opacity: 1,\n            width: 0.4,\n          },\n          areaStyle: {\n            color: colors?.[i],\n            opacity: 1.0,\n          },\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n          ...otherSeriesProps,\n        })\n      )}\n    />\n  );\n}\n","import type {LineSeriesOption} from 'echarts';\n\nimport LineSeries from 'sentry/components/charts/series/lineSeries';\n\nexport default function AreaSeries(props: LineSeriesOption = {}): LineSeriesOption {\n  return LineSeries({\n    ...props,\n  });\n}\n","import isEmpty from 'lodash/isEmpty';\nimport isNull from 'lodash/isNull';\nimport memoize from 'lodash/memoize';\n\nimport {Meta} from 'sentry/types';\n\nconst GET_META = Symbol('GET_META');\nconst IS_PROXY = Symbol('IS_PROXY');\n\ntype SymbolProp = typeof GET_META | typeof IS_PROXY;\n\nfunction isAnnotated(meta) {\n  if (isEmpty(meta)) {\n    return false;\n  }\n  return !isEmpty(meta.rem) || !isEmpty(meta.err);\n}\n\ntype Local = Record<string, any> | undefined;\n\nexport class MetaProxy {\n  private local: Local;\n\n  constructor(local: Local) {\n    this.local = local;\n  }\n\n  get<T extends {}>(\n    obj: T | Array<T>,\n    prop: Extract<keyof T, string> | SymbolProp,\n    receiver: T\n  ) {\n    // trap calls to `getMeta` to return meta object\n    if (prop === GET_META) {\n      return key => {\n        if (this.local && this.local[key] && this.local[key]['']) {\n          // TODO: Error checks\n          const meta = this.local[key][''];\n\n          return isAnnotated(meta) ? meta : undefined;\n        }\n        return undefined;\n      };\n    }\n\n    // this is how  we can determine if current `obj` is a proxy\n    if (prop === IS_PROXY) {\n      return true;\n    }\n\n    const value = Reflect.get(obj, prop, receiver);\n    if (!Reflect.has(obj, prop) || typeof value !== 'object' || isNull(value)) {\n      return value;\n    }\n\n    // This is so we don't create a new Proxy from an object that is\n    // already a proxy. Otherwise we can get into very deep recursive calls\n    if (Reflect.get(obj, IS_PROXY, receiver)) {\n      return value;\n    }\n\n    // Make sure we apply proxy to all children (objects and arrays)\n    // Do we need to check for annotated inside of objects?\n    return new Proxy(value, new MetaProxy(this.local && this.local[prop]));\n  }\n}\n\nexport const withMeta = memoize(function withMeta<T>(event: T): T {\n  if (!event) {\n    return event;\n  }\n\n  // Return unproxied `event` if browser does not support `Proxy`\n  if (typeof window.Proxy === 'undefined' || typeof window.Reflect === 'undefined') {\n    return event;\n  }\n\n  // withMeta returns a type that is supposed to be 100% compatible with its\n  // input type. Proxy typing on typescript is not really functional enough to\n  // make this work without casting.\n  //\n  // https://github.com/microsoft/TypeScript/issues/20846\n  return new Proxy(event, new MetaProxy((event as any)._meta)) as T;\n});\n\nexport function getMeta<T extends {}>(\n  obj: T | undefined,\n  prop: Extract<keyof T, string>\n): Meta | undefined {\n  if (!obj || typeof obj[GET_META] !== 'function') {\n    return undefined;\n  }\n\n  return obj[GET_META](prop);\n}\n","import {openModal} from 'sentry/actionCreators/modal';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport {IconMegaphone} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\nimport {FeedBackModalProps} from './feedbackModal';\n\nexport interface FeatureFeedbackProps extends FeedBackModalProps {\n  buttonProps?: Partial<ButtonProps>;\n}\n\n// Provides a button that, when clicked, opens a modal with a form that,\n// when filled and submitted, will send feedback to Sentry (feedbacks project).\nexport function FeatureFeedback({\n  feedbackTypes,\n  featureName,\n  buttonProps = {},\n}: FeatureFeedbackProps) {\n  async function handleClick() {\n    const mod = await import('sentry/components/featureFeedback/feedbackModal');\n\n    const {FeedbackModal, modalCss} = mod;\n\n    openModal(\n      deps => (\n        <FeedbackModal\n          {...deps}\n          featureName={featureName}\n          feedbackTypes={feedbackTypes}\n        />\n      ),\n      {\n        modalCss,\n      }\n    );\n  }\n\n  return (\n    <Button icon={<IconMegaphone />} onClick={handleClick} {...buttonProps}>\n      {t('Give Feedback')}\n    </Button>\n  );\n}\n","import 'prism-sentry/index.css';\n\nimport {useEffect, useRef} from 'react';\nimport styled from '@emotion/styled';\nimport beautify from 'js-beautify';\nimport Prism from 'prismjs';\n\ntype Props = {\n  code: string;\n};\n\nfunction HTMLCode({code}: Props) {\n  const codeRef = useRef<HTMLModElement | null>(null);\n  const formattedCode = beautify.html(code, {indent_size: 2});\n\n  useEffect(() => {\n    Prism.highlightElement(codeRef.current, false);\n  }, []);\n\n  return (\n    <CodeWrapper>\n      <pre>\n        <code ref={codeRef} className=\"language-html\">\n          {formattedCode}\n        </code>\n      </pre>\n    </CodeWrapper>\n  );\n}\n\nconst CodeWrapper = styled('div')`\n  line-height: 1.5;\n\n  pre {\n    word-break: break-all;\n    white-space: pre-wrap;\n  }\n`;\n\nexport default HTMLCode;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = {\n  keyName: React.ReactNode;\n  value: React.ReactNode;\n};\n\nexport const KeyValueTable = styled('dl')`\n  display: grid;\n  grid-template-columns: 50% 50%;\n`;\n\nexport const KeyValueTableRow = ({keyName, value}: Props) => {\n  return (\n    <Fragment>\n      <Key>{keyName}</Key>\n      <Value>{value}</Value>\n    </Fragment>\n  );\n};\n\nconst commonStyles = ({theme}: {theme: Theme}) => `\nfont-size: ${theme.fontSizeMedium};\npadding: ${space(0.5)} ${space(1)};\nfont-weight: normal;\nline-height: inherit;\n${p => p.theme.overflowEllipsis};\n&:nth-of-type(2n-1) {\n  background-color: ${theme.backgroundSecondary};\n}\n`;\n\nconst Key = styled('dt')`\n  ${commonStyles};\n  color: ${p => p.theme.textColor};\n`;\n\nconst Value = styled('dd')`\n  ${commonStyles};\n  color: ${p => p.theme.subText};\n  text-align: right;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport * as Timeline from 'sentry/components/replays/breadcrumbs/timeline';\nimport {countColumns, formatTime} from 'sentry/components/replays/utils';\n\ntype LineStyle = 'dotted' | 'solid' | 'none';\n\nconst Line = styled(Timeline.Col)<{lineStyle: LineStyle}>`\n  border-right: 1px ${p => p.lineStyle} ${p => p.theme.gray100};\n  text-align: right;\n  line-height: 14px;\n`;\n\nfunction Gridlines({\n  children,\n  cols,\n  lineStyle,\n  remaining,\n}: {\n  cols: number;\n  lineStyle: LineStyle;\n  remaining: number;\n  children?: (i: number) => React.ReactNode;\n}) {\n  return (\n    <Timeline.Columns totalColumns={cols} remainder={remaining}>\n      {[...Array(cols)].map((_, i) => (\n        <Line key={i} lineStyle={lineStyle}>\n          {children ? children(i) : null}\n        </Line>\n      ))}\n    </Timeline.Columns>\n  );\n}\n\ntype Props = {\n  durationMs: number;\n  width: number;\n  minWidth?: number;\n};\n\nexport function MajorGridlines({durationMs, minWidth = 50, width}: Props) {\n  const {timespan, cols, remaining} = countColumns(durationMs, width, minWidth);\n\n  return (\n    <Gridlines cols={cols} lineStyle=\"solid\" remaining={remaining}>\n      {i => <Label>{formatTime((i + 1) * timespan)}</Label>}\n    </Gridlines>\n  );\n}\n\nexport function MinorGridlines({durationMs, minWidth = 20, width}: Props) {\n  const {cols, remaining} = countColumns(durationMs, width, minWidth);\n\n  return <Gridlines cols={cols} lineStyle=\"dotted\" remaining={remaining} />;\n}\n\nconst Label = styled('small')`\n  font-variant-numeric: tabular-nums;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n","import styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {\n  MajorGridlines,\n  MinorGridlines,\n} from 'sentry/components/replays/breadcrumbs/gridlines';\nimport ReplayTimelineEvents from 'sentry/components/replays/breadcrumbs/replayTimelineEvents';\nimport ReplayTimelineSpans from 'sentry/components/replays/breadcrumbs/replayTimelineSpans';\nimport Stacked from 'sentry/components/replays/breadcrumbs/stacked';\nimport {TimelineScrubber} from 'sentry/components/replays/player/scrubber';\nimport ScrubberMouseTracking from 'sentry/components/replays/player/scrubberMouseTracking';\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport {Resizeable} from 'sentry/components/replays/resizeable';\nimport {BreadcrumbType} from 'sentry/types/breadcrumbs';\n\ntype Props = {};\n\nconst USER_ACTIONS = [\n  BreadcrumbType.ERROR,\n  BreadcrumbType.NAVIGATION,\n  BreadcrumbType.UI,\n  BreadcrumbType.USER,\n];\n\nfunction ReplayTimeline({}: Props) {\n  const {replay} = useReplayContext();\n\n  if (!replay) {\n    return <Placeholder height=\"48px\" bottomGutter={2} />;\n  }\n\n  const durationMs = replay.getDurationMs();\n  const startTimestampMs = replay.getReplay().startedAt.getTime();\n  const crumbs = replay.getRawCrumbs() || [];\n  const spans = replay.getRawSpans() || [];\n  const userCrumbs = crumbs.filter(crumb => USER_ACTIONS.includes(crumb.type));\n\n  const networkSpans = spans.filter(replay.isNetworkSpan);\n\n  return (\n    <Panel>\n      <ScrubberMouseTracking>\n        <Resizeable>\n          {({width}) => (\n            <Stacked>\n              <MinorGridlines durationMs={durationMs} width={width} />\n              <MajorGridlines durationMs={durationMs} width={width} />\n              <TimelineScrubber />\n              <UnderTimestamp paddingTop=\"36px\">\n                <ReplayTimelineSpans\n                  durationMs={durationMs}\n                  spans={networkSpans}\n                  startTimestampMs={startTimestampMs}\n                />\n              </UnderTimestamp>\n              <UnderTimestamp paddingTop=\"0\">\n                <ReplayTimelineEvents\n                  crumbs={userCrumbs}\n                  durationMs={durationMs}\n                  startTimestampMs={startTimestampMs}\n                  width={width}\n                />\n              </UnderTimestamp>\n            </Stacked>\n          )}\n        </Resizeable>\n      </ScrubberMouseTracking>\n    </Panel>\n  );\n}\n\nconst UnderTimestamp = styled('div')<{paddingTop: string}>`\n  /* Weird size to put equal space above/below a <small> node that MajorGridlines emits */\n  padding-top: ${p => p.paddingTop};\n`;\n\nexport default ReplayTimeline;\n","import {useCallback} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport * as Timeline from 'sentry/components/replays/breadcrumbs/timeline';\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport {getCrumbsByColumn, relativeTimeInMs} from 'sentry/components/replays/utils';\nimport Tooltip from 'sentry/components/tooltip';\nimport space from 'sentry/styles/space';\nimport {Crumb} from 'sentry/types/breadcrumbs';\nimport type {Color} from 'sentry/utils/theme';\nimport theme from 'sentry/utils/theme';\nimport BreadcrumbItem from 'sentry/views/replays/detail/breadcrumbs/breadcrumbItem';\n\nconst EVENT_STICK_MARKER_WIDTH = 4;\n\ntype Props = {\n  crumbs: Crumb[];\n  durationMs: number;\n  startTimestampMs: number;\n  width: number;\n  className?: string;\n};\n\nfunction ReplayTimelineEvents({\n  className,\n  crumbs,\n  durationMs,\n  startTimestampMs,\n  width,\n}: Props) {\n  const totalColumns = Math.floor(width / EVENT_STICK_MARKER_WIDTH);\n  const eventsByCol = getCrumbsByColumn(\n    startTimestampMs,\n    durationMs,\n    crumbs,\n    totalColumns\n  );\n\n  return (\n    <Timeline.Columns className={className} totalColumns={totalColumns} remainder={0}>\n      {Array.from(eventsByCol.entries()).map(([column, breadcrumbs]) => (\n        <EventColumn key={column} column={column}>\n          <Event crumbs={breadcrumbs} startTimestampMs={startTimestampMs} />\n        </EventColumn>\n      ))}\n    </Timeline.Columns>\n  );\n}\n\nconst EventColumn = styled(Timeline.Col)<{column: number}>`\n  grid-column: ${p => Math.floor(p.column)};\n  place-items: stretch;\n  display: grid;\n\n  &:hover {\n    z-index: ${p => p.theme.zIndex.initial};\n  }\n`;\n\nfunction Event({\n  crumbs,\n  startTimestampMs,\n}: {\n  crumbs: Crumb[];\n  startTimestampMs: number;\n  className?: string;\n}) {\n  const {setCurrentTime} = useReplayContext();\n\n  const handleClick = useCallback(\n    (crumb: Crumb) => {\n      crumb.timestamp !== undefined\n        ? setCurrentTime(relativeTimeInMs(crumb.timestamp, startTimestampMs))\n        : null;\n    },\n    [setCurrentTime, startTimestampMs]\n  );\n\n  const title = crumbs.map(crumb => (\n    <BreadcrumbItem\n      key={crumb.id}\n      crumb={crumb}\n      startTimestampMs={startTimestampMs}\n      isHovered={false}\n      isSelected={false}\n      onClick={handleClick}\n    />\n  ));\n\n  const overlayStyle = css`\n    /* We make sure to override existing styles */\n    padding: ${space(0.5)} !important;\n    max-width: 291px !important;\n    width: 291px;\n\n    @media screen and (max-width: ${theme.breakpoints.small}) {\n      max-width: 220px !important;\n    }\n  `;\n\n  // If we have more than 3 events we want to make sure of showing all the different colors that we have\n  const colors = [...new Set(crumbs.map(crumb => crumb.color))];\n\n  // We just need to stack up to 3 times\n  const totalStackNumber = Math.min(crumbs.length, 3);\n\n  return (\n    <IconPosition>\n      <IconNodeTooltip title={title} overlayStyle={overlayStyle} isHoverable>\n        {crumbs.slice(0, totalStackNumber).map((crumb, index) => (\n          <IconNode\n            color={colors[index] || crumb.color}\n            key={crumb.id}\n            stack={{totalStackNumber, index}}\n          />\n        ))}\n      </IconNodeTooltip>\n    </IconPosition>\n  );\n}\n\nconst getNodeDimensions = ({\n  stack,\n}: {\n  stack: {\n    index: number;\n    totalStackNumber: number;\n  };\n}) => {\n  const {totalStackNumber, index} = stack;\n  const multiplier = totalStackNumber - index;\n  const size = (multiplier + 1) * 4;\n  return `\n    width: ${size}px;\n    height: ${size}px;\n  `;\n};\n\nconst IconNodeTooltip = styled(Tooltip)`\n  display: grid;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst IconPosition = styled('div')`\n  position: absolute;\n  transform: translate(-50%);\n  margin-left: ${EVENT_STICK_MARKER_WIDTH / 2}px;\n  align-self: center;\n  display: grid;\n`;\n\nconst IconNode = styled('div')<{\n  color: Color;\n  stack: {\n    index: number;\n    totalStackNumber: number;\n  };\n}>`\n  grid-column: 1;\n  grid-row: 1;\n  ${getNodeDimensions}\n  border-radius: 50%;\n  color: ${p => p.theme.white};\n  background: ${p => p.theme[p.color] ?? p.color};\n  box-shadow: ${p => p.theme.dropShadowLightest};\n  user-select: none;\n`;\n\nexport default ReplayTimelineEvents;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {divide, flattenSpans} from 'sentry/components/replays/utils';\nimport Tooltip from 'sentry/components/tooltip';\nimport {tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport useActiveReplayTab from 'sentry/utils/replays/hooks/useActiveReplayTab';\nimport type {ReplaySpan} from 'sentry/views/replays/types';\n\ntype Props = {\n  /**\n   * Duration, in milliseconds, of the timeline\n   */\n  durationMs: number;\n\n  /**\n   * The spans to render into the timeline\n   */\n  spans: ReplaySpan[];\n\n  /**\n   * Timestamp when the timeline begins, in milliseconds\n   */\n  startTimestampMs: number;\n\n  /**\n   * Extra classNames\n   */\n  className?: string;\n};\n\nfunction ReplayTimelineEvents({className, durationMs, spans, startTimestampMs}: Props) {\n  const flattenedSpans = flattenSpans(spans);\n  const {setActiveTab} = useActiveReplayTab();\n\n  return (\n    <Spans className={className}>\n      {flattenedSpans.map((span, i) => {\n        const sinceStart = span.startTimestamp - startTimestampMs;\n        const startPct = divide(sinceStart, durationMs);\n        const widthPct = divide(span.duration, durationMs);\n\n        const requestsCount = tn(\n          '%s network request',\n          '%s network requests',\n          span.spanCount\n        );\n        return (\n          <Tooltip\n            key={i}\n            title={\n              <React.Fragment>\n                {requestsCount}\n                <br />\n                {span.duration.toFixed(2)}ms\n              </React.Fragment>\n            }\n            skipWrapper\n            disableForVisualTest\n            position=\"bottom\"\n          >\n            <Span\n              startPct={startPct}\n              widthPct={widthPct}\n              onClick={() => setActiveTab('network')}\n            />\n          </Tooltip>\n        );\n      })}\n    </Spans>\n  );\n}\n\nconst Spans = styled('ul')`\n  /* Reset defaults for <ul> */\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  height: ${space(1.5)};\n  margin-bottom: ${space(0.5)};\n  position: relative;\n  pointer-events: none;\n`;\n\nconst Span = styled('li')<{startPct: number; widthPct: number}>`\n  cursor: pointer;\n  display: block;\n  position: absolute;\n  left: ${p => p.startPct * 100}%;\n  min-width: 1px;\n  width: ${p => p.widthPct * 100}%;\n  height: 100%;\n  background: ${p => p.theme.charts.colors[0]};\n  border-radius: 2px;\n  pointer-events: auto;\n`;\n\nexport default React.memo(ReplayTimelineEvents);\n","import styled from '@emotion/styled';\n\n/**\n * Render all child elements directly on top of each other.\n *\n * This implementation does not remove the stack of elements from the document\n * flow, so width/height is reserved.\n *\n * An alternative would be to use `position:absolute;` in which case the size\n * would not be part of document flow and other elements could render behind.\n */\nconst Stacked = styled('div')`\n  display: grid;\n  grid-template: 1fr / 1fr;\n  > * {\n    grid-area: 1 / 1;\n  }\n`;\n\nexport default Stacked;\n","import styled from '@emotion/styled';\n\n/**\n * Use grid to create columns that we can place child nodes into.\n * Leveraging grid for alignment means we don't need to calculate percent offset\n * nor use position:absolute to lay out items.\n *\n * <Columns>\n *   <Col>...</Col>\n *   <Col>...</Col>\n * </Columns>\n */\nexport const Columns = styled('ul')<{remainder: number; totalColumns: number}>`\n  /* Reset defaults for <ul> */\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  height: 100%;\n  width: 100%;\n\n  /* Layout of the lines */\n  display: grid;\n  grid-template-columns: repeat(${p => p.totalColumns}, 1fr) ${p => p.remainder}fr;\n  place-items: stretch;\n`;\n\n// Export an empty component which so that callsites can correctly nest nodes:\nexport const Col = styled('li')``;\n","import {ComponentProps, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport Placeholder from 'sentry/components/placeholder';\nimport ReplaysFeatureBadge from 'sentry/components/replays/replaysFeatureBadge';\nimport {t} from 'sentry/locale';\nimport type {ReplayRecord} from 'sentry/views/replays/types';\n\ntype Props = {\n  orgSlug: string;\n  replayRecord: ReplayRecord | undefined;\n};\n\nfunction DetailsPageBreadcrumbs({orgSlug, replayRecord}: Props) {\n  const labelTitle =\n    replayRecord?.user.name ||\n    replayRecord?.user.email ||\n    replayRecord?.user.ip_address ||\n    replayRecord?.user.id;\n\n  return (\n    <Breadcrumbs\n      crumbs={[\n        {\n          to: `/organizations/${orgSlug}/replays/`,\n          label: t('Replays'),\n        },\n        {\n          label: labelTitle ? (\n            <Fragment>\n              {labelTitle} <ReplaysFeatureBadge />\n            </Fragment>\n          ) : (\n            <HeaderPlaceholder width=\"500px\" height=\"24px\" />\n          ),\n        },\n      ]}\n    />\n  );\n}\n\nconst HeaderPlaceholder = styled((props: ComponentProps<typeof Placeholder>) => (\n  <Placeholder width=\"100%\" height=\"19px\" {...props} />\n))`\n  background-color: ${p => p.theme.background};\n`;\n\nexport default DetailsPageBreadcrumbs;\n","import FeatureBadge from 'sentry/components/featureBadge';\n\nfunction ReplaysFeatureBadge(\n  props: Omit<React.ComponentProps<typeof FeatureBadge>, 'type'>\n) {\n  return <FeatureBadge {...props} type=\"alpha\" />;\n}\n\nexport default ReplaysFeatureBadge;\n","import React, {useCallback, useRef, useState} from 'react';\nimport {useResizeObserver} from '@react-aria/utils';\n\ntype Dimensions = {height: number; width: number};\n\ntype Props = {\n  children: (props: Dimensions) => React.ReactElement | null;\n  className?: string;\n};\n\n/**\n * Watch and pass element dimensions into child render function.\n *\n * WARNING: be careful not to update the dimensions of child elements based on\n * this parent size as that could cause infinite render loops\n */\nexport function Resizeable({children, className}: Props) {\n  const el = useRef<HTMLDivElement>(null);\n\n  const [dimensions, setDimensions] = useState({height: 0, width: 0});\n\n  const onResize = useCallback(() => {\n    setDimensions({\n      height: el.current?.clientHeight || 0,\n      width: el.current?.clientWidth || 0,\n    });\n  }, [setDimensions]);\n\n  useResizeObserver({ref: el, onResize});\n\n  return (\n    <div className={className} ref={el}>\n      {children(dimensions)}\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport {KeyValueTableRow} from 'sentry/components/keyValueTable';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {t} from 'sentry/locale';\nimport {EventTag} from 'sentry/types/event';\n\nimport AnnotatedText from './events/meta/annotatedText';\n\ninterface Props {\n  generateUrl: (tag: EventTag) => LocationDescriptor;\n  query: string;\n  tag: EventTag;\n  meta?: Record<any, any>;\n}\n\nfunction TagsTableRow({tag, query, generateUrl, meta}: Props) {\n  const tagInQuery = query.includes(`${tag.key}:`);\n  const target = tagInQuery ? undefined : generateUrl(tag);\n  const keyMetaData = meta?.key?.[''];\n  const valueMetaData = meta?.value?.[''];\n\n  const renderTagValue = () => {\n    switch (tag.key) {\n      case 'release':\n        return <Version version={tag.value} anchor={false} withPackage />;\n      default:\n        return tag.value;\n    }\n  };\n  return (\n    <KeyValueTableRow\n      keyName={\n        !!keyMetaData && !tag.key ? (\n          <AnnotatedText value={tag.key} meta={keyMetaData} />\n        ) : (\n          <StyledTooltip title={tag.key}>{tag.key}</StyledTooltip>\n        )\n      }\n      value={\n        !!valueMetaData && !tag.value ? (\n          <AnnotatedText value={tag.value} meta={valueMetaData} />\n        ) : keyMetaData?.err?.length ? (\n          <ValueContainer>{renderTagValue()}</ValueContainer>\n        ) : tagInQuery ? (\n          <StyledTooltip title={t('This tag is in the current filter conditions')}>\n            <ValueContainer>{renderTagValue()}</ValueContainer>\n          </StyledTooltip>\n        ) : (\n          <StyledTooltip title={renderTagValue()}>\n            <Link to={target || ''}>{renderTagValue()}</Link>\n          </StyledTooltip>\n        )\n      }\n    />\n  );\n}\n\nexport default TagsTableRow;\n\nconst StyledTooltip = styled(Tooltip)`\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst ValueContainer = styled('span')`\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: normal;\n`;\n","import {LocationDescriptor, Query} from 'history';\n\nimport {spanTargetHash} from 'sentry/components/events/interfaces/spans/utils';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport function getTransactionDetailsUrl(\n  orgSlug: Organization['slug'],\n  eventSlug: string,\n  transaction?: string,\n  query?: Query,\n  spanId?: string\n): LocationDescriptor {\n  const locationQuery = {\n    ...(query || {}),\n    transaction,\n  };\n  if (!defined(locationQuery.transaction)) {\n    delete locationQuery.transaction;\n  }\n\n  const target = {\n    pathname: `/organizations/${orgSlug}/performance/${eventSlug}/`,\n    query: locationQuery,\n    hash: defined(spanId) ? spanTargetHash(spanId) : undefined,\n  };\n  if (!defined(target.hash)) {\n    delete target.hash;\n  }\n\n  return target;\n}\n","import {useCallback} from 'react';\n\nimport useUrlParams from 'sentry/utils/replays/hooks/useUrlParams';\n\nexport enum TabKey {\n  console = 'console',\n  dom = 'dom',\n  network = 'network',\n  trace = 'trace',\n  issues = 'issues',\n  memory = 'memory',\n}\n\nfunction isReplayTab(tab: string): tab is TabKey {\n  return tab in TabKey;\n}\n\nconst DEFAULT_TAB = TabKey.console;\n\nfunction useActiveReplayTab() {\n  const {getParamValue, setParamValue} = useUrlParams('t_main', DEFAULT_TAB);\n\n  const paramValue = getParamValue();\n\n  return {\n    getActiveTab: useCallback(\n      () => (isReplayTab(paramValue || '') ? (paramValue as TabKey) : DEFAULT_TAB),\n      [paramValue]\n    ),\n    setActiveTab: useCallback(\n      (value: string) =>\n        isReplayTab(value) ? setParamValue(value) : setParamValue(DEFAULT_TAB),\n      [setParamValue]\n    ),\n  };\n}\n\nexport default useActiveReplayTab;\n","import {useCallback} from 'react';\n\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport {relativeTimeInMs} from 'sentry/components/replays/utils';\nimport {Crumb} from 'sentry/types/breadcrumbs';\n\nfunction useCrumbHandlers(startTimestampMs: number = 0) {\n  const {\n    clearAllHighlights,\n    highlight,\n    removeHighlight,\n    setCurrentHoverTime,\n    setCurrentTime,\n  } = useReplayContext();\n\n  const handleMouseEnter = useCallback(\n    (item: Crumb) => {\n      if (startTimestampMs) {\n        setCurrentHoverTime(relativeTimeInMs(item.timestamp ?? '', startTimestampMs));\n      }\n\n      if (item.data && 'nodeId' in item.data) {\n        // XXX: Kind of hacky, but mouseLeave does not fire if you move from a\n        // crumb to a tooltip\n        clearAllHighlights();\n        highlight({nodeId: item.data.nodeId, annotation: item.data.label});\n      }\n    },\n    [setCurrentHoverTime, startTimestampMs, highlight, clearAllHighlights]\n  );\n\n  const handleMouseLeave = useCallback(\n    (item: Crumb) => {\n      setCurrentHoverTime(undefined);\n\n      if (item.data && 'nodeId' in item.data) {\n        removeHighlight({nodeId: item.data.nodeId});\n      }\n    },\n    [setCurrentHoverTime, removeHighlight]\n  );\n\n  const handleClick = useCallback(\n    (crumb: Crumb) => {\n      crumb.timestamp !== undefined && startTimestampMs !== undefined\n        ? setCurrentTime(relativeTimeInMs(crumb.timestamp, startTimestampMs))\n        : null;\n    },\n    [setCurrentTime, startTimestampMs]\n  );\n\n  return {\n    handleMouseEnter,\n    handleMouseLeave,\n    handleClick,\n  };\n}\n\nexport default useCrumbHandlers;\n","import type {RefObject} from 'react';\nimport {useEffect, useState} from 'react';\n\nconst defer = (fn: () => void) => setTimeout(fn, 0);\n\nexport function useCurrentItemScroller(containerRef: RefObject<HTMLElement>) {\n  const [isAutoScrollDisabled, setIsAutoScrollDisabled] = useState(false);\n\n  useEffect(() => {\n    const containerEl = containerRef.current;\n    let observer: MutationObserver | undefined;\n\n    if (containerEl) {\n      const isContainerScrollable = () =>\n        containerEl.scrollHeight > containerEl.offsetHeight;\n\n      observer = new MutationObserver(mutationList => {\n        for (const mutation of mutationList) {\n          if (\n            mutation.type === 'attributes' &&\n            mutation.attributeName === 'aria-current' &&\n            mutation.target.nodeType === 1 // Element nodeType\n          ) {\n            const element = mutation.target as HTMLElement;\n            const isCurrent = element?.ariaCurrent === 'true';\n            if (isCurrent && isContainerScrollable() && !isAutoScrollDisabled) {\n              // Deferring the scroll helps prevent it from not being executed\n              // in certain situations. (jumping to a time with the scrubber)\n              defer(() => {\n                element?.scrollIntoView({\n                  behavior: 'smooth',\n                  block: 'center',\n                  inline: 'start',\n                });\n              });\n            }\n          }\n        }\n      });\n\n      observer.observe(containerRef.current, {\n        attributes: true,\n        childList: false,\n        subtree: true,\n      });\n    }\n\n    const handleMouseEnter = () => {\n      setIsAutoScrollDisabled(true);\n    };\n\n    const handleMouseLeave = () => {\n      setIsAutoScrollDisabled(false);\n    };\n\n    containerEl?.addEventListener('mouseenter', handleMouseEnter);\n    containerEl?.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      observer?.disconnect();\n      containerEl?.removeEventListener('mouseenter', handleMouseEnter);\n      containerEl?.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [containerRef, isAutoScrollDisabled]);\n}\n","import {useEffect, useState} from 'react';\nimport * as Sentry from '@sentry/react';\nimport first from 'lodash/first';\nimport {Replayer} from 'rrweb';\nimport {eventWithTime} from 'rrweb/typings/types';\n\nimport type {Crumb} from 'sentry/types/breadcrumbs';\nimport type ReplayReader from 'sentry/utils/replays/replayReader';\n\n// Copied from `node_modules/rrweb/typings/types.d.ts`\nenum EventType {\n  DomContentLoaded = 0,\n  Load = 1,\n  FullSnapshot = 2,\n  IncrementalSnapshot = 3,\n  Meta = 4,\n  Custom = 5,\n  Plugin = 6,\n}\n\ntype Extraction = {\n  crumb: Crumb;\n  html: string;\n  timestamp: number;\n};\n\ntype HookOpts = {\n  replay: ReplayReader;\n};\n\nfunction useExtractedCrumbHtml({replay}: HookOpts) {\n  const [breadcrumbRefs, setBreadcrumbReferences] = useState<Extraction[]>([]);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const domRoot = document.createElement('div');\n    domRoot.className = 'sr-block';\n    const {style} = domRoot;\n    style.position = 'fixed';\n    style.inset = '0';\n    style.width = '0';\n    style.height = '0';\n    style.overflow = 'hidden';\n\n    document.body.appendChild(domRoot);\n\n    // Get a list of the breadcrumbs that relate directly to the DOM, for each\n    // crumb we will extract the referenced HTML.\n    const crumbs = replay\n      .getRawCrumbs()\n      .filter(crumb => crumb.data && 'nodeId' in crumb.data);\n\n    const rrwebEvents = replay.getRRWebEvents();\n\n    // Grab the last event, but skip the synthetic `replay-end` event that the\n    // ReplayerReader added. RRWeb will skip that event when it comes time to render\n    const lastEvent = rrwebEvents[rrwebEvents.length - 2];\n\n    const isLastRRWebEvent = (event: eventWithTime) => lastEvent === event;\n\n    const replayerRef = new Replayer(rrwebEvents, {\n      root: domRoot,\n      loadTimeout: 1,\n      showWarning: false,\n      blockClass: 'sr-block',\n      speed: 99999,\n      skipInactive: true,\n      triggerFocus: false,\n      plugins: [\n        new BreadcrumbReferencesPlugin({\n          crumbs,\n          isFinished: isLastRRWebEvent,\n          onFinish: rows => {\n            if (isMounted) {\n              setBreadcrumbReferences(rows);\n            }\n            setTimeout(() => {\n              if (document.body.contains(domRoot)) {\n                document.body.removeChild(domRoot);\n              }\n            }, 0);\n          },\n        }),\n      ],\n      mouseTail: false,\n    });\n\n    try {\n      // Run the replay to the end, we will capture data as it streams into the plugin\n      replayerRef.pause(replay.getReplay().finishedAt.getTime());\n    } catch (error) {\n      Sentry.captureException(error);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [replay]);\n\n  return {\n    isLoading: false,\n    actions: breadcrumbRefs,\n  };\n}\n\ntype PluginOpts = {\n  crumbs: Crumb[];\n  isFinished: (event: eventWithTime) => boolean;\n  onFinish: (mutations: Extraction[]) => void;\n};\n\nclass BreadcrumbReferencesPlugin {\n  crumbs: Crumb[];\n  isFinished: (event: eventWithTime) => boolean;\n  onFinish: (mutations: Extraction[]) => void;\n\n  activities: Extraction[] = [];\n\n  constructor({crumbs, isFinished, onFinish}: PluginOpts) {\n    this.crumbs = crumbs;\n    this.isFinished = isFinished;\n    this.onFinish = onFinish;\n  }\n\n  handler(event: eventWithTime, _isSync: boolean, {replayer}: {replayer: Replayer}) {\n    if (event.type === EventType.IncrementalSnapshot) {\n      const crumb = first(this.crumbs);\n      const nextTimestamp = +new Date(crumb?.timestamp || '');\n\n      if (crumb && nextTimestamp && nextTimestamp <= event.timestamp) {\n        // we passed the next one, grab the dom, and pop the timestamp off\n        const mirror = replayer.getMirror();\n        // @ts-expect-error\n        const node = mirror.getNode(crumb.data?.nodeId || '');\n        // @ts-expect-error\n        const html = node?.outerHTML || node?.textContent || '';\n\n        // Limit document node depth to 2\n        let truncated = removeNodesAtLevel(html, 2);\n        // If still very long and/or removeNodesAtLevel failed, truncate\n        if (truncated.length > 1500) {\n          truncated = truncated.substring(0, 1500);\n        }\n\n        if (truncated) {\n          this.activities.push({\n            crumb,\n            html: truncated,\n            timestamp: nextTimestamp,\n          });\n        }\n\n        this.crumbs.shift();\n      }\n    }\n\n    if (this.isFinished(event)) {\n      this.onFinish(this.activities);\n    }\n  }\n}\n\nfunction removeNodesAtLevel(html: string, level: number) {\n  const parser = new DOMParser();\n  try {\n    const doc = parser.parseFromString(html, 'text/html');\n\n    const removeChildLevel = (\n      max: number,\n      collection: HTMLCollection,\n      current: number = 0\n    ) => {\n      for (let i = 0; i < collection.length; i++) {\n        const child = collection[i];\n\n        if (child.nodeName === 'STYLE') {\n          child.textContent = '/* Inline CSS */';\n        }\n\n        if (child.nodeName === 'svg') {\n          child.innerHTML = '<!-- SVG -->';\n        }\n\n        if (max <= current) {\n          if (child.childElementCount > 0) {\n            child.innerHTML = `<!-- ${child.childElementCount} descendents -->`;\n          }\n        } else {\n          removeChildLevel(max, child.children, current + 1);\n        }\n      }\n    };\n\n    removeChildLevel(level, doc.body.children);\n    return doc.body.innerHTML;\n  } catch (err) {\n    // If we can't parse the HTML, just return the original\n    return html;\n  }\n}\n\nexport default useExtractedCrumbHtml;\n","import {useCallback} from 'react';\n\nimport PreferencesStore from 'sentry/stores/preferencesStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport useUrlParams from 'sentry/utils/replays/hooks/useUrlParams';\nimport {getDefaultLayout} from 'sentry/views/replays/detail/layout/utils';\n\nexport enum LayoutKey {\n  /**\n   * ### Topbar\n   *┌────────────────────┐\n   *│ Timeline           │\n   *├───────────┬────────┤\n   *│ Video     │ Crumbs │\n   *│           │        │\n   *├^^^^^^^^^^^^^^^^^^^^┤\n   *│ Details            │\n   *│                    │\n   *└────────────────────┘\n   */\n  topbar = 'topbar',\n  /**\n   * ### Sidebar Left\n   * ┌───────────────────┐\n   * │ Timeline          │\n   * ├────────┬──────────┤\n   * │ Video  > Details  │\n   * │        >          │\n   * │^^^^^^^ >          |\n   * │ Crumbs >          │\n   * │        >          │\n   * └────────┴──────────┘\n   */\n  sidebar_left = 'sidebar_left',\n  /**\n   * ### Sidebar Right\n   * ┌───────────────────┐\n   * │ Timeline          │\n   * ├──────────┬────────┤\n   * │ Details  > Video  │\n   * │          >        │\n   * │          >^^^^^^^^┤\n   * │          > Crumbs │\n   * │          >        │\n   * └──────────┴────────┘\n   */\n  sidebar_right = 'sidebar_right',\n}\n\nfunction isLayout(val: string): val is LayoutKey {\n  return val in LayoutKey;\n}\n\nfunction useActiveReplayTab() {\n  const collapsed = !!useLegacyStore(PreferencesStore).collapsed;\n  const defaultLayout = getDefaultLayout(collapsed);\n\n  const {getParamValue, setParamValue} = useUrlParams('l_page', defaultLayout);\n\n  const paramValue = getParamValue();\n\n  return {\n    getLayout: useCallback(\n      (): LayoutKey =>\n        isLayout(paramValue || '') ? (paramValue as LayoutKey) : defaultLayout,\n      [defaultLayout, paramValue]\n    ),\n    setLayout: useCallback(\n      (value: string) =>\n        isLayout(value) ? setParamValue(value) : setParamValue(defaultLayout),\n      [defaultLayout, setParamValue]\n    ),\n  };\n}\n\nexport default useActiveReplayTab;\n","import {useCallback} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\n\nfunction useUrlParams(\n  defaultKey: string,\n  defaultValue: string\n): {\n  getParamValue: () => string;\n  setParamValue: (value: string) => void;\n};\nfunction useUrlParams(defaultKey: string): {\n  getParamValue: () => string;\n  setParamValue: (value: string) => void;\n};\nfunction useUrlParams(): {\n  getParamValue: (key: string) => string;\n  setParamValue: (key: string, value: string) => void;\n};\nfunction useUrlParams(defaultKey?: string, defaultValue?: string) {\n  const {location} = useRouteContext();\n\n  const getParamValue = useCallback(\n    (key: string) => {\n      return location.query[key] || defaultValue;\n    },\n    [location, defaultValue]\n  );\n\n  const setParamValue = useCallback(\n    (key: string, value: string) => {\n      browserHistory.push({\n        ...location,\n        query: {\n          ...location.query,\n          [key]: value,\n        },\n      });\n    },\n    [location]\n  );\n\n  const getWithDefault = useCallback(\n    () => getParamValue(defaultKey || ''),\n    [getParamValue, defaultKey]\n  );\n  const setWithDefault = useCallback(\n    (value: string) => setParamValue(defaultKey || '', value),\n    [setParamValue, defaultKey]\n  );\n\n  if (defaultKey !== undefined) {\n    return {\n      getParamValue: getWithDefault,\n      setParamValue: setWithDefault,\n    };\n  }\n\n  return {\n    getParamValue,\n    setParamValue,\n  };\n}\n\nexport default useUrlParams;\n","import styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","import {useRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  Panel as BasePanel,\n  PanelHeader as BasePanelHeader,\n} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {getPrevBreadcrumb} from 'sentry/utils/replays/getBreadcrumb';\nimport useCrumbHandlers from 'sentry/utils/replays/hooks/useCrumbHandlers';\nimport {useCurrentItemScroller} from 'sentry/utils/replays/hooks/useCurrentItemScroller';\nimport BreadcrumbItem from 'sentry/views/replays/detail/breadcrumbs/breadcrumbItem';\nimport FluidPanel from 'sentry/views/replays/detail/layout/fluidPanel';\n\nfunction CrumbPlaceholder({number}: {number: number}) {\n  return (\n    <BreadcrumbContainer>\n      {[...Array(number)].map((_, i) => (\n        <PlaceholderMargin key={i} height=\"53px\" />\n      ))}\n    </BreadcrumbContainer>\n  );\n}\n\ntype Props = {};\n\nfunction Breadcrumbs({}: Props) {\n  const {currentHoverTime, currentTime, replay} = useReplayContext();\n\n  const replayRecord = replay?.getReplay();\n  const allCrumbs = replay?.getRawCrumbs();\n\n  const crumbListContainerRef = useRef<HTMLDivElement>(null);\n  useCurrentItemScroller(crumbListContainerRef);\n\n  const startTimestampMs = replayRecord?.startedAt.getTime() || 0;\n  const {handleMouseEnter, handleMouseLeave, handleClick} =\n    useCrumbHandlers(startTimestampMs);\n\n  const isLoaded = Boolean(replayRecord);\n\n  const crumbs =\n    allCrumbs?.filter(crumb => !['console'].includes(crumb.category || '')) || [];\n\n  const currentUserAction = getPrevBreadcrumb({\n    crumbs,\n    targetTimestampMs: startTimestampMs + currentTime,\n    allowExact: true,\n  });\n\n  const closestUserAction =\n    currentHoverTime !== undefined\n      ? getPrevBreadcrumb({\n          crumbs,\n          targetTimestampMs: startTimestampMs + (currentHoverTime ?? 0),\n          allowExact: true,\n        })\n      : undefined;\n\n  const content = isLoaded ? (\n    <BreadcrumbContainer>\n      {crumbs.map(crumb => (\n        <BreadcrumbItem\n          key={crumb.id}\n          crumb={crumb}\n          startTimestampMs={startTimestampMs}\n          isHovered={closestUserAction?.id === crumb.id}\n          isSelected={currentUserAction?.id === crumb.id}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          onClick={handleClick}\n        />\n      ))}\n    </BreadcrumbContainer>\n  ) : (\n    <CrumbPlaceholder number={4} />\n  );\n\n  return (\n    <Panel>\n      <FluidPanel\n        bodyRef={crumbListContainerRef}\n        title={<PanelHeader>{t('Breadcrumbs')}</PanelHeader>}\n      >\n        {content}\n      </FluidPanel>\n    </Panel>\n  );\n}\n\nconst BreadcrumbContainer = styled('div')`\n  padding: ${space(0.5)};\n`;\n\nconst Panel = styled(BasePanel)`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  margin-bottom: 0;\n`;\n\nconst PanelHeader = styled(BasePanelHeader)`\n  background-color: ${p => p.theme.background};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray500};\n  text-transform: capitalize;\n  padding: ${space(1)} ${space(1.5)} ${space(1)};\n  font-weight: 600;\n`;\n\nconst PlaceholderMargin = styled(Placeholder)`\n  margin-bottom: ${space(1)};\n  width: auto;\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nexport default Breadcrumbs;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport isObject from 'lodash/isObject';\nimport {sprintf, vsprintf} from 'sprintf-js';\n\nimport DateTime from 'sentry/components/dateTime';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport {relativeTimeInMs, showPlayerTime} from 'sentry/components/replays/utils';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconClose, IconWarning} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {BreadcrumbTypeDefault, Crumb} from 'sentry/types/breadcrumbs';\nimport {objectIsEmpty} from 'sentry/utils';\n\ninterface MessageFormatterProps {\n  breadcrumb: Extract<Crumb, BreadcrumbTypeDefault>;\n}\n\n/**\n * Attempt to stringify\n */\nfunction renderString(arg: string | number | boolean | Object) {\n  if (typeof arg !== 'object') {\n    return arg;\n  }\n\n  try {\n    return JSON.stringify(arg);\n  } catch {\n    return arg.toString();\n  }\n}\n\n/**\n * Attempt to emulate the browser console as much as possible\n */\nexport function MessageFormatter({breadcrumb}: MessageFormatterProps) {\n  let logMessage = '';\n\n  if (!breadcrumb.data?.arguments) {\n    // There is a possibility that we don't have arguments as we could be receiving an exception type breadcrumb.\n    // In these cases we just need the message prop.\n\n    // There are cases in which our prop message is an array, we want to force it to become a string\n    logMessage = breadcrumb.message?.toString() || '';\n    return <AnnotatedText meta={getMeta(breadcrumb, 'message')} value={logMessage} />;\n  }\n\n  // Browser's console formatter only works on the first arg\n  const [message, ...args] = breadcrumb.data?.arguments;\n\n  const isMessageString = typeof message === 'string';\n\n  const placeholders = isMessageString\n    ? sprintf.parse(message).filter(parsed => Array.isArray(parsed))\n    : [];\n\n  // Placeholders can only occur in the first argument and only if it is a string.\n  // We can skip the below code and avoid using `sprintf` if there are no placeholders.\n  if (placeholders.length) {\n    // TODO `%c` is console specific, it applies colors to messages\n    // for now we are stripping it as this is potentially risky to implement due to xss\n    const consoleColorPlaceholderIndexes = placeholders\n      .filter(([placeholder]) => placeholder === '%c')\n      .map((_, i) => i);\n\n    // Retrieve message formatting args\n    const messageArgs = args.slice(0, placeholders.length);\n\n    // Filter out args that were for %c\n    for (const colorIndex of consoleColorPlaceholderIndexes) {\n      messageArgs.splice(colorIndex, 1);\n    }\n\n    // Attempt to stringify the rest of the args\n    const restArgs = args.slice(placeholders.length).map(renderString);\n\n    const formattedMessage = isMessageString\n      ? vsprintf(message.replaceAll('%c', ''), messageArgs)\n      : renderString(message);\n\n    logMessage = [formattedMessage, ...restArgs].join(' ').trim();\n  } else if (\n    breadcrumb.data?.arguments.length === 1 &&\n    isObject(message) &&\n    objectIsEmpty(message)\n  ) {\n    // There is a special case where `console.error()` is called with an Error object.\n    // The SDK uses the Error's `message` property as the breadcrumb message, but we lose the Error type,\n    // resulting in an empty object in the breadcrumb arguments. In this case, we\n    // only want to use `breadcrumb.message`.\n    logMessage = breadcrumb.message || JSON.stringify(message);\n  } else {\n    // If the string `[object Object]` is found in message, it means the SDK attempted to stringify an object,\n    // but the actual object should be captured in the arguments.\n    //\n    // Likewise if arrays are found e.g. [test,test] the SDK will serialize it to 'test, test'.\n    //\n    // In those cases, we'll want to use our pretty print in every argument that was passed to the logger instead of using\n    // the SDK's serialization.\n    const argValues = breadcrumb.data?.arguments.map(renderString);\n\n    logMessage = argValues.join(' ').trim();\n  }\n\n  // TODO(replays): Add better support for AnnotatedText (e.g. we use message\n  // args from breadcrumb.data.arguments and not breadcrumb.message directly)\n  return <AnnotatedText meta={getMeta(breadcrumb, 'message')} value={logMessage} />;\n}\n\ninterface ConsoleMessageProps extends MessageFormatterProps {\n  hasOccurred: boolean;\n  isActive: boolean;\n  isLast: boolean;\n  startTimestampMs: number;\n}\nfunction ConsoleMessage({\n  breadcrumb,\n  isActive = false,\n  hasOccurred,\n  isLast,\n  startTimestampMs = 0,\n}: ConsoleMessageProps) {\n  const ICONS = {\n    error: <IconClose isCircled size=\"xs\" />,\n    warning: <IconWarning size=\"xs\" />,\n  };\n\n  const {setCurrentTime, setCurrentHoverTime} = useReplayContext();\n\n  const diff = relativeTimeInMs(breadcrumb.timestamp || '', startTimestampMs);\n  const handleOnClick = () => setCurrentTime(diff);\n  const handleOnMouseOver = () => setCurrentHoverTime(diff);\n  const handleOnMouseOut = () => setCurrentHoverTime(undefined);\n\n  return (\n    <Fragment>\n      <Icon\n        isLast={isLast}\n        level={breadcrumb.level}\n        isActive={isActive}\n        hasOccurred={hasOccurred}\n        onMouseOver={handleOnMouseOver}\n        onMouseOut={handleOnMouseOut}\n      >\n        {ICONS[breadcrumb.level]}\n      </Icon>\n      <Message\n        isLast={isLast}\n        level={breadcrumb.level}\n        hasOccurred={hasOccurred}\n        onMouseOver={handleOnMouseOver}\n        onMouseOut={handleOnMouseOut}\n      >\n        <ErrorBoundary mini>\n          <MessageFormatter breadcrumb={breadcrumb} />\n        </ErrorBoundary>\n      </Message>\n      <ConsoleTimestamp\n        isLast={isLast}\n        level={breadcrumb.level}\n        hasOccurred={hasOccurred}\n      >\n        <Tooltip title={<DateTime date={breadcrumb.timestamp} seconds />}>\n          <ConsoleTimestampButton\n            onClick={handleOnClick}\n            onMouseOver={handleOnMouseOver}\n            onMouseOut={handleOnMouseOut}\n          >\n            {showPlayerTime(breadcrumb.timestamp || '', startTimestampMs)}\n          </ConsoleTimestampButton>\n        </Tooltip>\n      </ConsoleTimestamp>\n    </Fragment>\n  );\n}\n\nconst Common = styled('div')<{\n  isLast: boolean;\n  level: string;\n  hasOccurred?: boolean;\n}>`\n  background-color: ${p =>\n    ['warning', 'error'].includes(p.level)\n      ? p.theme.alert[p.level].backgroundLight\n      : 'inherit'};\n  color: ${({hasOccurred = true, ...p}) => {\n    if (!hasOccurred) {\n      return p.theme.gray300;\n    }\n\n    if (['warning', 'error'].includes(p.level)) {\n      return p.theme.alert[p.level].iconHoverColor;\n    }\n\n    return 'inherit';\n  }};\n  ${p => (!p.isLast ? `border-bottom: 1px solid ${p.theme.innerBorder}` : '')};\n\n  transition: color 0.5s ease;\n\n  /*\n  Using radius of 3px instead of p.theme.borderRadius (4px) because this is an\n  inner radius to the border, and needs to be smaller to avoid gaps in the turn.\n  */\n  &:nth-child(1) {\n    border-top-left-radius: 3px;\n  }\n  &:nth-child(3) {\n    border-top-right-radius: 3px;\n  }\n  &:nth-last-child(1) {\n    border-bottom-right-radius: 3px;\n  }\n  &:nth-last-child(3) {\n    border-bottom-left-radius: 3px;\n  }\n`;\n\nconst ConsoleTimestamp = styled(Common)`\n  padding: ${space(0.25)} ${space(1)};\n`;\n\nconst ConsoleTimestampButton = styled('button')`\n  background: none;\n  border: none;\n`;\n\nconst Icon = styled(Common)<{isActive: boolean}>`\n  padding: ${space(0.5)} ${space(1)};\n  position: relative;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    height: 100%;\n    width: ${space(0.5)};\n    background-color: ${p => (p.isActive ? p.theme.focus : 'transparent')};\n  }\n  &:nth-child(1):after {\n    border-top-left-radius: 3px;\n  }\n  &:nth-last-child(3):after {\n    border-bottom-left-radius: 3px;\n  }\n`;\nconst Message = styled(Common)`\n  padding: ${space(0.25)} 0;\n  white-space: pre-wrap;\n  word-break: break-word;\n`;\n\nexport default ConsoleMessage;\n","import {Fragment, useMemo, useState} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {Panel} from 'sentry/components/panels';\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport {relativeTimeInMs} from 'sentry/components/replays/utils';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport type {\n  BreadcrumbLevelType,\n  BreadcrumbTypeDefault,\n  Crumb,\n} from 'sentry/types/breadcrumbs';\nimport {getPrevBreadcrumb} from 'sentry/utils/replays/getBreadcrumb';\nimport ConsoleMessage from 'sentry/views/replays/detail/console/consoleMessage';\nimport {filterBreadcrumbs} from 'sentry/views/replays/detail/console/utils';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\ninterface Props {\n  breadcrumbs: Extract<Crumb, BreadcrumbTypeDefault>[];\n  startTimestampMs: number;\n}\n\nconst getDistinctLogLevels = (breadcrumbs: Crumb[]) =>\n  Array.from(new Set<string>(breadcrumbs.map(breadcrumb => breadcrumb.level)));\n\nfunction Console({breadcrumbs, startTimestampMs = 0}: Props) {\n  const {currentHoverTime, currentTime} = useReplayContext();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [logLevel, setLogLevel] = useState<BreadcrumbLevelType[]>([]);\n  const handleSearch = debounce(query => setSearchTerm(query), 150);\n\n  const filteredBreadcrumbs = useMemo(\n    () => filterBreadcrumbs(breadcrumbs, searchTerm, logLevel),\n    [logLevel, searchTerm, breadcrumbs]\n  );\n\n  const closestUserAction =\n    currentHoverTime !== undefined\n      ? getPrevBreadcrumb({\n          crumbs: breadcrumbs,\n          targetTimestampMs: startTimestampMs + (currentHoverTime ?? 0),\n          allowExact: true,\n        })\n      : undefined;\n\n  return (\n    <Fragment>\n      <ConsoleFilters>\n        <CompactSelect\n          triggerProps={{\n            prefix: t('Log Level'),\n          }}\n          multiple\n          options={getDistinctLogLevels(breadcrumbs).map(breadcrumbLogLevel => ({\n            value: breadcrumbLogLevel,\n            label: breadcrumbLogLevel,\n          }))}\n          onChange={selections =>\n            setLogLevel(selections.map(selection => selection.value))\n          }\n        />\n        <SearchBar onChange={handleSearch} placeholder={t('Search console logs...')} />\n      </ConsoleFilters>\n\n      {filteredBreadcrumbs.length > 0 ? (\n        <ConsoleTable>\n          {filteredBreadcrumbs.map((breadcrumb, i) => {\n            return (\n              <ConsoleMessage\n                isActive={closestUserAction?.id === breadcrumb.id}\n                startTimestampMs={startTimestampMs}\n                key={breadcrumb.id}\n                isLast={i === breadcrumbs.length - 1}\n                breadcrumb={breadcrumb}\n                hasOccurred={\n                  currentTime >=\n                  relativeTimeInMs(breadcrumb?.timestamp || '', startTimestampMs)\n                }\n              />\n            );\n          })}\n        </ConsoleTable>\n      ) : (\n        <StyledEmptyMessage title={t('No results found.')} />\n      )}\n    </Fragment>\n  );\n}\n\nconst ConsoleFilters = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: max-content 1fr;\n  margin-bottom: ${space(1)};\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    margin-top: ${space(1)};\n  }\n`;\n\nconst StyledEmptyMessage = styled(EmptyMessage)`\n  align-items: center;\n`;\n\nconst ConsoleTable = styled(Panel)`\n  display: grid;\n  grid-template-columns: max-content auto max-content;\n  width: 100%;\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: 0.8em;\n`;\n\nexport default Console;\n","import {BreadcrumbTypeDefault, Crumb} from 'sentry/types/breadcrumbs';\n\nexport const filterBreadcrumbs = (\n  breadcrumbs: Extract<Crumb, BreadcrumbTypeDefault>[],\n  searchTerm: string,\n  logLevel: Array<string>\n) => {\n  if (!searchTerm && logLevel.length === 0) {\n    return breadcrumbs;\n  }\n  return breadcrumbs.filter(breadcrumb => {\n    const normalizedSearchTerm = searchTerm.toLowerCase();\n    const doesMatch = JSON.stringify(breadcrumb.data)\n      .toLowerCase()\n      .includes(normalizedSearchTerm);\n    if (logLevel.length > 0) {\n      return doesMatch && logLevel.includes(breadcrumb.level);\n    }\n    return doesMatch;\n  });\n};\n","import styled from '@emotion/styled';\n\nimport BreadcrumbIcon from 'sentry/components/events/interfaces/breadcrumbs/breadcrumb/type/icon';\nimport HTMLCode from 'sentry/components/htmlCode';\nimport {getDetails} from 'sentry/components/replays/breadcrumbs/utils';\nimport PlayerRelativeTime from 'sentry/components/replays/playerRelativeTime';\nimport Truncate from 'sentry/components/truncate';\nimport {SVGIconProps} from 'sentry/icons/svgIcon';\nimport space from 'sentry/styles/space';\nimport useCrumbHandlers from 'sentry/utils/replays/hooks/useCrumbHandlers';\nimport useExtractedCrumbHtml from 'sentry/utils/replays/hooks/useExtractedCrumbHtml';\nimport type ReplayReader from 'sentry/utils/replays/replayReader';\n\ntype Props = {\n  replay: ReplayReader;\n};\n\nfunction DomMutations({replay}: Props) {\n  const {isLoading, actions} = useExtractedCrumbHtml({replay});\n  const startTimestampMs = replay.getReplay().startedAt.getTime();\n\n  const {handleMouseEnter, handleMouseLeave, handleClick} =\n    useCrumbHandlers(startTimestampMs);\n\n  if (isLoading) {\n    return null;\n  }\n\n  return (\n    <MutationList>\n      {actions.map((mutation, i) => (\n        <MutationListItem\n          key={i}\n          onMouseEnter={() => handleMouseEnter(mutation.crumb)}\n          onMouseLeave={() => handleMouseLeave(mutation.crumb)}\n        >\n          <StepConnector />\n          <MutationItemContainer>\n            <div>\n              <MutationMetadata>\n                <IconWrapper color={mutation.crumb.color}>\n                  <BreadcrumbIcon type={mutation.crumb.type} />\n                </IconWrapper>\n                <UnstyledButton onClick={() => handleClick(mutation.crumb)}>\n                  <PlayerRelativeTime\n                    relativeTimeMs={startTimestampMs}\n                    timestamp={mutation.crumb.timestamp}\n                  />\n                </UnstyledButton>\n              </MutationMetadata>\n              <MutationDetails>\n                <TitleContainer>\n                  <Title>{getDetails(mutation.crumb).title}</Title>\n                </TitleContainer>\n                <Truncate\n                  maxLength={30}\n                  leftTrim={(mutation.crumb.message || '').includes('>')}\n                  value={mutation.crumb.message || ''}\n                />\n              </MutationDetails>\n            </div>\n            <CodeContainer>\n              <HTMLCode code={mutation.html} />\n            </CodeContainer>\n          </MutationItemContainer>\n        </MutationListItem>\n      ))}\n    </MutationList>\n  );\n}\n\nconst MutationList = styled('ul')`\n  list-style: none;\n  position: relative;\n  height: 100%;\n  overflow-y: auto;\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  padding-left: 0;\n  margin-bottom: 0;\n`;\n\nconst MutationListItem = styled('li')`\n  display: flex;\n  align-items: start;\n  padding: ${space(2)};\n  &:hover {\n    background-color: ${p => p.theme.backgroundSecondary};\n  }\n`;\n\nconst MutationItemContainer = styled('div')`\n  display: grid;\n  grid-template-columns: 280px 1fr;\n`;\n\nconst MutationMetadata = styled('div')`\n  display: flex;\n  align-items: start;\n  column-gap: ${space(1)};\n`;\n\n/**\n * Taken `from events/interfaces/.../breadcrumbs/types`\n */\nconst IconWrapper = styled('div')<Required<Pick<SVGIconProps, 'color'>>>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  color: ${p => p.theme.white};\n  background: ${p => p.theme[p.color] ?? p.color};\n  box-shadow: ${p => p.theme.dropShadowLightest};\n  z-index: 1;\n`;\n\nconst UnstyledButton = styled('button')`\n  background: none;\n  border: none;\n  padding: 0;\n`;\n\nconst MutationDetails = styled('div')`\n  margin-left: 30px;\n  margin-top: ${space(0.5)};\n  margin-bottom: ${space(3)};\n`;\n\nconst TitleContainer = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  gap: ${space(1)};\n`;\n\nconst Title = styled('span')`\n  ${p => p.theme.overflowEllipsis};\n  text-transform: capitalize;\n  color: ${p => p.theme.gray400};\n  font-weight: bold;\n  line-height: ${p => p.theme.text.lineHeightBody};\n  margin-bottom: ${space(0.5)};\n`;\n\nconst CodeContainer = styled('div')`\n  overflow: auto;\n  max-height: 400px;\n  max-width: 100%;\n`;\n\nconst StepConnector = styled('div')`\n  position: absolute;\n  height: 100%;\n  top: 28px;\n  left: 31px;\n  border-right: 1px ${p => p.theme.border} dashed;\n`;\n\nexport default DomMutations;\n","import {useMemo} from 'react';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport Placeholder from 'sentry/components/placeholder';\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport {t} from 'sentry/locale';\nimport type {Crumb} from 'sentry/types/breadcrumbs';\nimport {isBreadcrumbTypeDefault} from 'sentry/types/breadcrumbs';\nimport useActiveReplayTab from 'sentry/utils/replays/hooks/useActiveReplayTab';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport Console from 'sentry/views/replays/detail/console';\nimport DomMutations from 'sentry/views/replays/detail/domMutations';\nimport IssueList from 'sentry/views/replays/detail/issueList';\nimport MemoryChart from 'sentry/views/replays/detail/memoryChart';\nimport NetworkList from 'sentry/views/replays/detail/network';\nimport Trace from 'sentry/views/replays/detail/trace';\n\ntype Props = {};\n\nfunction getBreadcrumbsByCategory(breadcrumbs: Crumb[], categories: string[]) {\n  return breadcrumbs\n    .filter(isBreadcrumbTypeDefault)\n    .filter(breadcrumb => categories.includes(breadcrumb.category || ''));\n}\n\nfunction FocusArea({}: Props) {\n  const {getActiveTab} = useActiveReplayTab();\n  const {currentTime, currentHoverTime, replay, setCurrentTime, setCurrentHoverTime} =\n    useReplayContext();\n  const organization = useOrganization();\n\n  // Memoize this because re-renders will interfere with the mouse state of the\n  // chart (e.g. on mouse over and out)\n  const memorySpans = useMemo(() => {\n    return replay?.getRawSpans().filter(replay.isMemorySpan);\n  }, [replay]);\n\n  if (!replay || !memorySpans) {\n    return <Placeholder height=\"150px\" />;\n  }\n\n  const replayRecord = replay.getReplay();\n  const startTimestampMs = replayRecord.startedAt.getTime();\n\n  const getNetworkSpans = () => {\n    return replay.getRawSpans().filter(replay.isNetworkSpan);\n  };\n\n  switch (getActiveTab()) {\n    case 'console':\n      const consoleMessages = getBreadcrumbsByCategory(replay?.getRawCrumbs(), [\n        'console',\n        'exception',\n      ]);\n      return (\n        <Console\n          breadcrumbs={consoleMessages ?? []}\n          startTimestampMs={replayRecord.startedAt.getTime()}\n        />\n      );\n    case 'network':\n      return <NetworkList replayRecord={replayRecord} networkSpans={getNetworkSpans()} />;\n    case 'trace':\n      const features = ['organizations:performance-view'];\n\n      const renderDisabled = () => (\n        <FeatureDisabled\n          featureName={t('Performance Monitoring')}\n          features={features}\n          message={t('Requires performance monitoring.')}\n          hideHelpToggle\n        />\n      );\n      return (\n        <Feature\n          organization={organization}\n          hookName=\"feature-disabled:configure-distributed-tracing\"\n          features={features}\n          renderDisabled={renderDisabled}\n        >\n          <Trace organization={organization} replayRecord={replayRecord} />\n        </Feature>\n      );\n    case 'issues':\n      return <IssueList replayId={replayRecord.id} projectId={replayRecord.projectId} />;\n    case 'dom':\n      return <DomMutations replay={replay} />;\n    case 'memory':\n      return (\n        <MemoryChart\n          currentTime={currentTime}\n          currentHoverTime={currentHoverTime}\n          memorySpans={memorySpans}\n          setCurrentTime={setCurrentTime}\n          setCurrentHoverTime={setCurrentHoverTime}\n          startTimestampMs={startTimestampMs}\n        />\n      );\n    default:\n      return null;\n  }\n}\n\nexport default FocusArea;\n","import {MouseEvent} from 'react';\nimport queryString from 'query-string';\n\nimport NavTabs from 'sentry/components/navTabs';\nimport {t} from 'sentry/locale';\nimport useActiveReplayTab, {TabKey} from 'sentry/utils/replays/hooks/useActiveReplayTab';\nimport {useLocation} from 'sentry/utils/useLocation';\n\nconst ReplayTabs: Record<TabKey, string> = {\n  console: t('Console'),\n  dom: t('DOM Events'),\n  network: t('Network'),\n  trace: t('Trace'),\n  issues: t('Issues'),\n  memory: t('Memory'),\n};\n\ntype Props = {};\n\nfunction FocusTabs({}: Props) {\n  const {pathname, query} = useLocation();\n  const {getActiveTab, setActiveTab} = useActiveReplayTab();\n  const activeTab = getActiveTab();\n\n  return (\n    <NavTabs underlined>\n      {Object.entries(ReplayTabs).map(([tab, label]) => (\n        <li key={tab} className={activeTab === tab ? 'active' : ''}>\n          <a\n            href={`${pathname}?${queryString.stringify({...query, t_main: tab})}`}\n            onClick={(e: MouseEvent) => {\n              setActiveTab(tab);\n              e.preventDefault();\n            }}\n          >\n            <span>{label}</span>\n          </a>\n        </li>\n      ))}\n    </NavTabs>\n  );\n}\n\nexport default FocusTabs;\n","import {Fragment, useCallback, useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport keyBy from 'lodash/keyBy';\n\nimport EventOrGroupExtraDetails from 'sentry/components/eventOrGroupExtraDetails';\nimport EventOrGroupHeader from 'sentry/components/eventOrGroupHeader';\nimport {PanelTable} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {DEFAULT_STREAM_GROUP_STATS_PERIOD} from 'sentry/components/stream/group';\nimport GroupChart from 'sentry/components/stream/groupChart';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, NewQuery} from 'sentry/types';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport theme from 'sentry/utils/theme';\nimport useApi from 'sentry/utils/useApi';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useMedia from 'sentry/utils/useMedia';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\n\ntype Props = {\n  projectId: string;\n  replayId: string;\n};\nconst columns = [t('Issue'), t('Graph'), t('Events'), t('Users')];\n\nfunction IssueList(props: Props) {\n  const organization = useOrganization();\n  const location = useLocation();\n  const api = useApi();\n  const {selection} = usePageFilters();\n  const isScreenLarge = useMedia(`(min-width: ${theme.breakpoints.large})`);\n\n  const [loadingIssueData, setLoadingIssueData] = useState(false);\n  const [issuesById, setIssuesById] = useState<Record<string, Group>>({});\n  const [issueStatsById, setIssuesStatsById] = useState<Record<string, Group>>({});\n\n  const getEventView = () => {\n    const eventQueryParams: NewQuery = {\n      id: '',\n      name: '',\n      version: 2,\n      fields: ['count(issue)', 'issue'],\n      environment: selection.environments,\n      projects: selection.projects,\n      query: `replayId:${props.replayId} AND event.type:error`,\n    };\n    const result = EventView.fromNewQueryWithLocation(eventQueryParams, location);\n    return result;\n  };\n\n  const fetchIssueData = useCallback(async () => {\n    let issues;\n    setLoadingIssueData(true);\n    try {\n      issues = await api.requestPromise(`/organizations/${organization.slug}/issues/`, {\n        includeAllArgs: true,\n        query: {\n          project: props.projectId,\n          query: `replayId:${props.replayId}`,\n        },\n      });\n\n      setIssuesById(keyBy(issues[0], 'id'));\n    } catch (error) {\n      setIssuesById({});\n      setLoadingIssueData(false);\n      return;\n    }\n\n    try {\n      const issuesResults = await api.requestPromise(\n        `/organizations/${organization.slug}/issues-stats/`,\n        {\n          includeAllArgs: true,\n          query: {\n            project: props.projectId,\n            groups: issues[0]?.map(issue => issue.id),\n            query: `replayId:${props.replayId}`,\n          },\n        }\n      );\n      setIssuesStatsById(keyBy(issuesResults[0], 'id'));\n    } catch (error) {\n      setIssuesStatsById({});\n    } finally {\n      setLoadingIssueData(false);\n    }\n  }, [api, organization.slug, props.replayId, props.projectId]);\n\n  useEffect(() => {\n    fetchIssueData();\n  }, [fetchIssueData]);\n\n  const renderTableRow = error => {\n    const matchedIssue = issuesById[error['issue.id']];\n    const matchedIssueStats = issueStatsById[error['issue.id']];\n\n    if (!matchedIssue) {\n      return null;\n    }\n    return (\n      <Fragment key={matchedIssue.id}>\n        <IssueDetailsWrapper>\n          <EventOrGroupHeader\n            includeLink\n            data={matchedIssue}\n            organization={organization}\n            size=\"normal\"\n          />\n          <EventOrGroupExtraDetails\n            data={{\n              ...matchedIssue,\n              firstSeen: matchedIssueStats?.firstSeen || '',\n              lastSeen: matchedIssueStats?.lastSeen || '',\n            }}\n          />\n        </IssueDetailsWrapper>\n        {isScreenLarge && (\n          <ChartWrapper>\n            {matchedIssueStats?.stats ? (\n              <GroupChart\n                statsPeriod={DEFAULT_STREAM_GROUP_STATS_PERIOD}\n                data={matchedIssueStats}\n                showSecondaryPoints\n                showMarkLine\n              />\n            ) : (\n              <Placeholder height=\"44px\" />\n            )}\n          </ChartWrapper>\n        )}\n\n        <Item>\n          {matchedIssueStats?.count ? (\n            matchedIssueStats?.count\n          ) : (\n            <Placeholder height=\"24px\" />\n          )}\n        </Item>\n\n        <Item>\n          {matchedIssueStats?.userCount ? (\n            matchedIssueStats?.userCount\n          ) : (\n            <Placeholder height=\"24px\" />\n          )}\n        </Item>\n      </Fragment>\n    );\n  };\n\n  return (\n    <DiscoverQuery\n      eventView={getEventView()}\n      location={location}\n      orgSlug={organization.slug}\n      limit={15}\n    >\n      {data => {\n        return (\n          <StyledPanelTable\n            isEmpty={data.tableData?.data.length === 0}\n            emptyMessage={t('No related Issues found.')}\n            isLoading={data.isLoading || loadingIssueData}\n            headers={\n              isScreenLarge ? columns : columns.filter(column => column !== t('Graph'))\n            }\n          >\n            {data.tableData?.data.map(renderTableRow) || null}\n          </StyledPanelTable>\n        );\n      }}\n    </DiscoverQuery>\n  );\n}\n\nconst ChartWrapper = styled('div')`\n  width: 200px;\n  margin-left: -${space(2)};\n  padding-left: ${space(0)};\n`;\n\nconst Item = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst IssueDetailsWrapper = styled('div')`\n  overflow: hidden;\n  line-height: normal;\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  /* overflow: visible allows the tooltip to be completely shown */\n  overflow: visible;\n  grid-template-columns: minmax(1fr, max-content) repeat(3, max-content);\n\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    grid-template-columns: minmax(0, 1fr) repeat(2, max-content);\n  }\n`;\n\nexport default IssueList;\n","import CompactSelect from 'sentry/components/forms/compactSelect';\nimport {IconPanel} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useReplayLayout, {LayoutKey} from 'sentry/utils/replays/hooks/useReplayLayout';\n\nconst layoutToLabel: Record<LayoutKey, string> = {\n  topbar: t('Player Top'),\n  sidebar_left: t('Player Left'),\n  sidebar_right: t('Player Right'),\n};\n\nconst layoutToDir: Record<LayoutKey, string> = {\n  topbar: 'up',\n  sidebar_left: 'left',\n  sidebar_right: 'right',\n};\n\nfunction getLayoutIcon(layout: string) {\n  const dir = layout in layoutToDir ? layoutToDir[layout] : 'up';\n  return <IconPanel size=\"sm\" direction={dir} />;\n}\n\ntype Props = {};\n\nfunction ChooseLayout({}: Props) {\n  const {getLayout, setLayout} = useReplayLayout();\n\n  return (\n    <CompactSelect\n      triggerProps={{\n        size: 'xs',\n        icon: getLayoutIcon(getLayout()),\n      }}\n      triggerLabel=\"\"\n      value={getLayout()}\n      placement=\"bottom right\"\n      onChange={opt => setLayout(opt?.value)}\n      options={Object.entries(layoutToLabel).map(([value, label]) => ({\n        value,\n        label,\n        leadingItems: getLayoutIcon(value),\n      }))}\n    />\n  );\n}\n\nexport default ChooseLayout;\n","import {LegacyRef, ReactChild} from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  children: ReactChild;\n  bodyRef?: LegacyRef<HTMLDivElement> | undefined;\n  bottom?: ReactChild;\n  className?: string;\n  title?: ReactChild;\n};\n\nfunction FluidPanel({className, children, bottom, title, bodyRef}: Props) {\n  return (\n    <FluidContainer className={className}>\n      {title}\n      <OverflowBody ref={bodyRef}>{children}</OverflowBody>\n      {bottom}\n    </FluidContainer>\n  );\n}\n\nconst FluidContainer = styled('section')`\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  height: 100%;\n`;\n\nconst OverflowBody = styled('div')`\n  height: 100%;\n  overflow: auto;\n`;\n\nexport default FluidPanel;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport ReplayTimeline from 'sentry/components/replays/breadcrumbs/replayTimeline';\nimport ReplayView from 'sentry/components/replays/replayView';\nimport space from 'sentry/styles/space';\nimport useFullscreen from 'sentry/utils/replays/hooks/useFullscreen';\nimport {LayoutKey} from 'sentry/utils/replays/hooks/useReplayLayout';\nimport useUrlParams from 'sentry/utils/replays/hooks/useUrlParams';\nimport Breadcrumbs from 'sentry/views/replays/detail/breadcrumbs';\nimport FocusArea from 'sentry/views/replays/detail/focusArea';\nimport FocusTabs from 'sentry/views/replays/detail/focusTabs';\nimport FluidHeight from 'sentry/views/replays/detail/layout/fluidHeight';\nimport FluidPanel from 'sentry/views/replays/detail/layout/fluidPanel';\nimport SplitPanel from 'sentry/views/replays/detail/layout/splitPanel';\nimport SideTabs from 'sentry/views/replays/detail/sideTabs';\nimport TagPanel from 'sentry/views/replays/detail/tagPanel';\n\nconst MIN_VIDEO_WIDTH = {px: 325};\nconst MIN_CONTENT_WIDTH = {px: 325};\nconst MIN_VIDEO_HEIGHT = {px: 200};\nconst MIN_CONTENT_HEIGHT = {px: 200};\nconst MIN_CRUMBS_HEIGHT = {px: 200};\n\ntype Props = {\n  layout?: LayoutKey;\n  showCrumbs?: boolean;\n  showTimeline?: boolean;\n  showVideo?: boolean;\n};\n\nfunction ReplayLayout({\n  layout = LayoutKey.topbar,\n  showCrumbs = true,\n  showTimeline = true,\n  showVideo = true,\n}: Props) {\n  const {ref: fullscreenRef, toggle: toggleFullscreen} = useFullscreen();\n\n  const timeline = showTimeline ? (\n    <ErrorBoundary mini>\n      <ReplayTimeline />\n    </ErrorBoundary>\n  ) : null;\n\n  const video = showVideo ? (\n    <VideoSection ref={fullscreenRef}>\n      <ErrorBoundary mini>\n        <ReplayView toggleFullscreen={toggleFullscreen} />\n      </ErrorBoundary>\n    </VideoSection>\n  ) : null;\n\n  const crumbs = showCrumbs ? (\n    <ErrorBoundary mini>\n      <Breadcrumbs />\n    </ErrorBoundary>\n  ) : null;\n\n  const content = (\n    <ErrorBoundary mini>\n      <FluidPanel title={<FocusTabs />}>\n        <FocusArea />\n      </FluidPanel>\n    </ErrorBoundary>\n  );\n\n  if (layout === 'sidebar_right') {\n    return (\n      <BodyContent>\n        {timeline}\n        <SplitPanel\n          key={layout}\n          left={{\n            content,\n            default: '60%',\n            min: MIN_CONTENT_WIDTH,\n          }}\n          right={{\n            content: <SidebarContent video={video} crumbs={crumbs} />,\n            min: MIN_VIDEO_WIDTH,\n          }}\n        />\n      </BodyContent>\n    );\n  }\n\n  if (layout === 'sidebar_left') {\n    return (\n      <BodyContent>\n        {timeline}\n        <SplitPanel\n          key={layout}\n          left={{\n            content: <SidebarContent video={video} crumbs={crumbs} />,\n            min: MIN_VIDEO_WIDTH,\n          }}\n          right={{\n            content,\n            default: '60%',\n            min: MIN_CONTENT_WIDTH,\n          }}\n        />\n      </BodyContent>\n    );\n  }\n\n  // layout === 'topbar' or default\n  return (\n    <BodyContent>\n      {timeline}\n      <SplitPanel\n        key={layout}\n        top={{\n          content: (\n            <SplitPanel\n              left={{\n                content: video,\n                default: '70%',\n                min: MIN_VIDEO_WIDTH,\n              }}\n              right={{\n                content: crumbs,\n              }}\n            />\n          ),\n\n          min: MIN_VIDEO_HEIGHT,\n        }}\n        bottom={{\n          content,\n          default: '60%',\n          min: MIN_CONTENT_HEIGHT,\n        }}\n      />\n    </BodyContent>\n  );\n}\n\nfunction SidebarContent({video, crumbs}) {\n  const {getParamValue} = useUrlParams('t_side', 'video');\n  if (getParamValue() === 'tags') {\n    return (\n      <FluidPanel title={<SideTabs />}>\n        <TagPanel />\n      </FluidPanel>\n    );\n  }\n  if (video && crumbs) {\n    return (\n      <FluidPanel title={<SideTabs />}>\n        <SplitPanel\n          top={{\n            content: video,\n            default: '55%',\n            min: MIN_VIDEO_HEIGHT,\n          }}\n          bottom={{\n            content: crumbs,\n            min: MIN_CRUMBS_HEIGHT,\n          }}\n        />\n      </FluidPanel>\n    );\n  }\n  return (\n    <Fragment>\n      {video}\n      {crumbs}\n    </Fragment>\n  );\n}\n\nconst BodyContent = styled('main')`\n  background: ${p => p.theme.background};\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-rows: auto 1fr;\n  overflow: hidden;\n  padding: ${space(2)};\n`;\n\nconst VideoSection = styled(FluidHeight)`\n  height: 100%;\n\n  background: ${p => p.theme.background};\n  gap: ${space(1)};\n`;\n\nexport default ReplayLayout;\n","import {DOMAttributes, ReactNode, useCallback, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {IconGrabbable} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport useMouseTracking from 'sentry/utils/replays/hooks/useMouseTracking';\n\nconst BAR_THICKNESS = 16;\nconst HALF_BAR = BAR_THICKNESS / 2;\n\nconst MOUSE_RELEASE_TIMEOUT_MS = 200;\n\ntype CSSValue = `${number}px` | `${number}%`;\ntype LimitValue =\n  | {\n      /**\n       * Percent, as a value from `0` to `1.0`\n       */\n      pct: number;\n    }\n  | {\n      /**\n       * CSS pixels\n       */\n      px: number;\n    };\n\ntype Side =\n  | ReactNode\n  | {\n      content: ReactNode;\n      default?: CSSValue;\n      max?: LimitValue;\n      min?: LimitValue;\n    };\n\ntype Props =\n  | {\n      /**\n       * Content on the right side of the split\n       */\n      left: Side;\n      /**\n       * Content on the left side of the split\n       */\n      right: Side;\n    }\n  | {\n      /**\n       * Content below the split\n       */\n      bottom: Side;\n      /**\n       * Content above of the split\n       */\n      top: Side;\n    };\n\nconst getValFromSide = (side: Side, field: string) =>\n  side && typeof side === 'object' && field in side ? side[field] : undefined;\n\nfunction getSplitDefault(props: Props) {\n  if ('left' in props) {\n    const a = getValFromSide(props.left, 'default');\n    if (a) {\n      return {a};\n    }\n    const b = getValFromSide(props.right, 'default');\n    if (b) {\n      return {b};\n    }\n    return {a: '50%'};\n  }\n  const a = getValFromSide(props.top, 'default');\n  if (a) {\n    return {a};\n  }\n  const b = getValFromSide(props.bottom, 'default');\n  if (b) {\n    return {b};\n  }\n  return {a: '50%'};\n}\n\nfunction getMinMax(side: Side): {\n  max: {pct: number; px: number};\n  min: {pct: number; px: number};\n} {\n  const ONE = {px: Number.MAX_SAFE_INTEGER, pct: 1.0};\n  const ZERO = {px: 0, pct: 0};\n  if (!side || typeof side !== 'object') {\n    return {\n      max: ONE,\n      min: ZERO,\n    };\n  }\n  return {\n    max: 'max' in side ? {...ONE, ...side.max} : ONE,\n    min: 'min' in side ? {...ZERO, ...side.min} : ZERO,\n  };\n}\n\nfunction useTimeout({timeMs, callback}: {callback: () => void; timeMs: number}) {\n  const timeoutRef = useRef<number>(null);\n\n  const saveTimeout = useCallback((timeout: ReturnType<typeof setTimeout> | null) => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    // See: https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables\n    // @ts-expect-error\n    timeoutRef.current = timeout;\n  }, []);\n\n  return {\n    start: () => saveTimeout(setTimeout(callback, timeMs)),\n    stop: () => saveTimeout(null),\n  };\n}\n\nfunction SplitPanel(props: Props) {\n  const [mousedown, setMousedown] = useState(false);\n  const [sizeCSS, setSizeCSS] = useState(getSplitDefault(props));\n  const {start: startMouseIdleTimer, stop: stopMouseIdleTimer} = useTimeout({\n    timeMs: MOUSE_RELEASE_TIMEOUT_MS,\n    callback: () => setMousedown(false),\n  });\n\n  const handleMouseDown = useCallback(() => {\n    setMousedown(true);\n\n    document.addEventListener(\n      'mouseup',\n      () => {\n        setMousedown(false);\n        stopMouseIdleTimer();\n      },\n      {once: true}\n    );\n\n    startMouseIdleTimer();\n  }, [startMouseIdleTimer, stopMouseIdleTimer]);\n\n  const handlePositionChange = useCallback(\n    params => {\n      if (mousedown && params) {\n        startMouseIdleTimer();\n        const {left, top, width, height} = params;\n\n        if ('left' in props) {\n          const priPx = left - HALF_BAR;\n          const priPct = priPx / width;\n          const secPx = width - priPx;\n          const secPct = 1 - priPct;\n          const priLim = getMinMax(props.left);\n          const secLim = getMinMax(props.right);\n          if (\n            priPx < priLim.min.px ||\n            priPx > priLim.max.px ||\n            priPct < priLim.min.pct ||\n            priPct > priLim.max.pct ||\n            secPx < secLim.min.px ||\n            secPx > secLim.max.px ||\n            secPct < secLim.min.pct ||\n            secPct > secLim.max.pct\n          ) {\n            return;\n          }\n          setSizeCSS({a: `${priPct * 100}%`});\n        } else {\n          const priPx = top - HALF_BAR;\n          const priPct = priPx / height;\n          const secPx = height - priPx;\n          const secPct = 1 - priPct;\n          const priLim = getMinMax(props.top);\n          const secLim = getMinMax(props.bottom);\n          if (\n            priPx < priLim.min.px ||\n            priPx > priLim.max.px ||\n            priPct < priLim.min.pct ||\n            priPct > priLim.max.pct ||\n            secPx < secLim.min.px ||\n            secPx > secLim.max.px ||\n            secPct < secLim.min.pct ||\n            secPct > secLim.max.pct\n          ) {\n            return;\n          }\n          setSizeCSS({a: `${priPct * 100}%`});\n        }\n      }\n    },\n    [mousedown, props, startMouseIdleTimer]\n  );\n\n  const mouseTrackingProps = useMouseTracking<HTMLDivElement>({\n    onPositionChange: handlePositionChange,\n  });\n\n  const activeTrackingProps = mousedown ? mouseTrackingProps : {};\n\n  if ('left' in props) {\n    const {left: a, right: b} = props;\n\n    return (\n      <SplitPanelContainer orientation=\"columns\" size={sizeCSS} {...activeTrackingProps}>\n        <Panel>{getValFromSide(a, 'content') || a}</Panel>\n        <Divider\n          slideDirection=\"leftright\"\n          mousedown={mousedown}\n          onMouseDown={handleMouseDown}\n        />\n        <Panel>{getValFromSide(b, 'content') || b}</Panel>\n      </SplitPanelContainer>\n    );\n  }\n  const {top: a, bottom: b} = props;\n  return (\n    <SplitPanelContainer orientation=\"rows\" size={sizeCSS} {...activeTrackingProps}>\n      <Panel>{getValFromSide(a, 'content') || a}</Panel>\n      <Divider\n        slideDirection=\"updown\"\n        onMouseDown={() => setMousedown(true)}\n        onMouseUp={() => setMousedown(false)}\n        mousedown={mousedown}\n      />\n      <Panel>{getValFromSide(b, 'content') || b}</Panel>\n    </SplitPanelContainer>\n  );\n}\n\nconst SplitPanelContainer = styled('div')<{\n  orientation: 'rows' | 'columns';\n  size: {a: CSSValue} | {b: CSSValue};\n}>`\n  width: 100%;\n  height: 100%;\n\n  display: grid;\n  overflow: auto;\n  grid-template-${p => p.orientation}:\n    ${p => ('a' in p.size ? p.size.a : '1fr')}\n    auto\n    ${p => ('a' in p.size ? '1fr' : p.size.b)};\n`;\n\nconst Panel = styled('div')`\n  overflow: hidden;\n`;\n\ntype DividerProps = {mousedown: boolean; slideDirection: 'leftright' | 'updown'};\nconst Divider = styled(\n  ({\n    mousedown: _a,\n    slideDirection: _b,\n    ...props\n  }: DividerProps & DOMAttributes<HTMLDivElement>) => (\n    <div {...props}>\n      <IconGrabbable size=\"sm\" />\n    </div>\n  )\n)<DividerProps>`\n  display: grid;\n  place-items: center;\n  height: 100%;\n  width: 100%;\n\n  ${p => (p.mousedown ? 'user-select: none;' : '')}\n\n  :hover {\n    background: ${p => p.theme.hover};\n  }\n\n  ${p =>\n    p.slideDirection === 'leftright'\n      ? `\n        cursor: ew-resize;\n        height: 100%;\n        width: ${space(2)};\n      `\n      : `\n        cursor: ns-resize;\n        width: 100%;\n        height: ${space(2)};\n\n        & > svg {\n          transform: rotate(90deg);\n        }\n      `}\n`;\n\nexport default SplitPanel;\n","import {LayoutKey} from 'sentry/utils/replays/hooks/useReplayLayout';\nimport theme from 'sentry/utils/theme';\n\nexport const getDefaultLayout = (collapsed: boolean): LayoutKey => {\n  const {innerWidth, innerHeight} = window;\n\n  const sidebarWidth = parseInt(\n    collapsed ? theme.sidebar.collapsedWidth : theme.sidebar.expandedWidth,\n    10\n  );\n\n  const mediumScreenWidth = parseInt(theme.breakpoints.medium, 10);\n\n  const windowsWidth =\n    innerWidth <= mediumScreenWidth ? innerWidth : innerWidth - sidebarWidth;\n\n  if (windowsWidth < innerHeight) {\n    return LayoutKey.topbar;\n  }\n\n  return LayoutKey.sidebar_left;\n};\n","import {forwardRef, memo, useEffect, useRef} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport {AreaChart, AreaChartProps} from 'sentry/components/charts/areaChart';\nimport Grid from 'sentry/components/charts/components/grid';\nimport Tooltip from 'sentry/components/charts/components/tooltip';\nimport XAxis from 'sentry/components/charts/components/xAxis';\nimport YAxis from 'sentry/components/charts/components/yAxis';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport {showPlayerTime} from 'sentry/components/replays/utils';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {ReactEchartsRef, Series} from 'sentry/types/echarts';\nimport {formatBytesBase2} from 'sentry/utils';\nimport {getFormattedDate} from 'sentry/utils/dates';\nimport type {MemorySpanType} from 'sentry/views/replays/types';\n\ninterface Props {\n  memorySpans: MemorySpanType[];\n  setCurrentHoverTime: (time: undefined | number) => void;\n  setCurrentTime: (time: number) => void;\n  startTimestampMs: number | undefined;\n}\n\ninterface MemoryChartProps extends Props {\n  forwardedRef: React.Ref<ReactEchartsRef>;\n}\n\nconst formatTimestamp = timestamp =>\n  getFormattedDate(timestamp * 1000, 'MMM D, YYYY hh:mm:ss A z', {local: false});\n\nfunction MemoryChart({\n  forwardedRef,\n  memorySpans,\n  startTimestampMs = 0,\n  setCurrentTime,\n  setCurrentHoverTime,\n}: MemoryChartProps) {\n  const theme = useTheme();\n\n  if (memorySpans.length <= 0) {\n    return (\n      <EmptyStateWarning withIcon={false} small>\n        {t('No memory metrics found')}\n      </EmptyStateWarning>\n    );\n  }\n\n  const chartOptions: Omit<AreaChartProps, 'series'> = {\n    grid: Grid({\n      // makes space for the title\n      top: '40px',\n      left: space(1),\n      right: space(1),\n    }),\n    tooltip: Tooltip({\n      trigger: 'axis',\n      formatter: values => {\n        const seriesTooltips = values.map(\n          value => `\n            <div>\n              <span className=\"tooltip-label\">${value.marker}<strong>${\n            value.seriesName\n          }</strong></span>\n          ${formatBytesBase2(value.data[1])}\n            </div>\n          `\n        );\n        // showPlayerTime expects a timestamp so we take the captured time in seconds and convert it to a UTC timestamp\n        const template = [\n          '<div class=\"tooltip-series\">',\n          ...seriesTooltips,\n          '</div>',\n          `<div class=\"tooltip-date\" style=\"display: inline-block; width: max-content;\">${t(\n            'Span Time'\n          )}:\n            ${formatTimestamp(values[0].axisValue)}\n          </div>`,\n          `<div class=\"tooltip-date\" style=\"border: none;\">${'Relative Time'}:\n            ${showPlayerTime(\n              moment(values[0].axisValue * 1000)\n                .toDate()\n                .toUTCString(),\n              startTimestampMs\n            )}\n          </div>`,\n          '<div class=\"tooltip-arrow\"></div>',\n        ].join('');\n        return template;\n      },\n    }),\n    xAxis: XAxis({\n      type: 'time',\n      axisLabel: {\n        formatter: formatTimestamp,\n      },\n      theme,\n    }),\n    yAxis: YAxis({\n      type: 'value',\n      name: t('Heap Size'),\n      theme,\n      nameTextStyle: {\n        padding: 8,\n        fontSize: theme.fontSizeLarge,\n        fontWeight: 600,\n        lineHeight: 1.2,\n        color: theme.gray300,\n      },\n      // input is in bytes, minInterval is a megabyte\n      minInterval: 1024 * 1024,\n      // maxInterval is a terabyte\n      maxInterval: Math.pow(1024, 4),\n      // format the axis labels to be whole number values\n      axisLabel: {\n        formatter: value => formatBytesBase2(value, 0),\n      },\n    }),\n\n    // XXX: For area charts, mouse events *only* occurs when interacting with\n    // the \"line\" of the area chart. Mouse events do not fire when interacting\n    // with the \"area\" under the line.\n    onMouseOver: ({data}) => {\n      if (data[0]) {\n        setCurrentHoverTime(data[0] * 1000 - startTimestampMs);\n      }\n    },\n    onMouseOut: () => {\n      setCurrentHoverTime(undefined);\n    },\n    onClick: ({data}) => {\n      if (data.value) {\n        setCurrentTime(data.value * 1000 - startTimestampMs);\n      }\n    },\n  };\n\n  const series: Series[] = [\n    {\n      seriesName: t('Used Heap Memory'),\n      data: memorySpans.map(span => ({\n        value: span.data.memory.usedJSHeapSize,\n        name: span.endTimestamp,\n      })),\n      stack: 'heap-memory',\n      lineStyle: {\n        opacity: 0.75,\n        width: 1,\n      },\n    },\n    {\n      seriesName: t('Free Heap Memory'),\n      data: memorySpans.map(span => ({\n        value: span.data.memory.totalJSHeapSize - span.data.memory.usedJSHeapSize,\n        name: span.endTimestamp,\n      })),\n      stack: 'heap-memory',\n      lineStyle: {\n        opacity: 0.75,\n        width: 1,\n      },\n    },\n\n    // Inserting this here so we can update in Container\n    {\n      id: 'currentTime',\n      seriesName: t('Current player time'),\n      data: [],\n      markLine: {\n        symbol: ['', ''],\n        data: [],\n        label: {\n          show: false,\n        },\n        lineStyle: {\n          type: 'solid' as const,\n          color: theme.purple300,\n          width: 2,\n        },\n      },\n    },\n    {\n      id: 'hoverTime',\n      seriesName: t('Hover player time'),\n      data: [],\n      markLine: {\n        symbol: ['', ''],\n        data: [],\n        label: {\n          show: false,\n        },\n        lineStyle: {\n          type: 'solid' as const,\n          color: theme.purple200,\n          width: 2,\n        },\n      },\n    },\n  ];\n\n  return (\n    <MemoryChartWrapper>\n      <AreaChart forwardedRef={forwardedRef} series={series} {...chartOptions} />\n    </MemoryChartWrapper>\n  );\n}\n\nconst MemoryChartWrapper = styled('div')`\n  margin-top: ${space(2)};\n  margin-bottom: ${space(3)};\n  border-radius: ${space(0.5)};\n  border: 1px solid ${p => p.theme.border};\n`;\n\nconst MemoizedMemoryChart = memo(\n  forwardRef<ReactEchartsRef, Props>((props, ref) => (\n    <MemoryChart forwardedRef={ref} {...props} />\n  ))\n);\n\ninterface MemoryChartContainerProps extends Props {\n  currentHoverTime: number | undefined;\n  currentTime: number;\n}\n\n/**\n * This container is used to update echarts outside of React. `currentTime` is\n * the current time of the player -- if replay is currently playing, this will be\n * updated quite frequently causing the chart to constantly re-render. The\n * re-renders will conflict with mouse interactions (e.g. hovers and\n * tooltips).\n *\n * We need `MemoryChart` (which wraps an `<AreaChart>`) to re-render as\n * infrequently as possible, so we use React.memo and only pass in props that\n * are not frequently updated.\n * */\nfunction MemoryChartContainer({\n  currentTime,\n  currentHoverTime,\n  startTimestampMs = 0,\n  ...props\n}: MemoryChartContainerProps) {\n  const chart = useRef<ReactEchartsRef>(null);\n  const theme = useTheme();\n\n  useEffect(() => {\n    if (!chart.current) {\n      return;\n    }\n    const echarts = chart.current.getEchartsInstance();\n\n    echarts.setOption({\n      series: [\n        {\n          id: 'currentTime',\n          markLine: {\n            data: [\n              {\n                xAxis: currentTime + startTimestampMs,\n              },\n            ],\n          },\n        },\n      ],\n    });\n  }, [currentTime, startTimestampMs, theme]);\n\n  useEffect(() => {\n    if (!chart.current) {\n      return;\n    }\n    const echarts = chart.current.getEchartsInstance();\n\n    echarts.setOption({\n      series: [\n        {\n          id: 'hoverTime',\n          markLine: {\n            data: [\n              ...(currentHoverTime\n                ? [\n                    {\n                      xAxis: currentHoverTime + startTimestampMs,\n                    },\n                  ]\n                : []),\n            ],\n          },\n        },\n      ],\n    });\n  }, [currentHoverTime, startTimestampMs, theme]);\n\n  return (\n    <MemoizedMemoryChart ref={chart} startTimestampMs={startTimestampMs} {...props} />\n  );\n}\n\nexport default MemoryChartContainer;\n","import {Fragment, useCallback, useMemo, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FileSize from 'sentry/components/fileSize';\nimport {PanelTable, PanelTableHeader} from 'sentry/components/panels';\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport {relativeTimeInMs, showPlayerTime} from 'sentry/components/replays/utils';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconArrow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {ColorOrAlias} from 'sentry/utils/theme';\nimport {\n  ISortConfig,\n  NetworkSpan,\n  sortNetwork,\n} from 'sentry/views/replays/detail/network/utils';\nimport type {ReplayRecord} from 'sentry/views/replays/types';\n\ntype Props = {\n  networkSpans: NetworkSpan[];\n  replayRecord: ReplayRecord;\n};\n\nfunction NetworkList({replayRecord, networkSpans}: Props) {\n  const startTimestampMs = replayRecord.startedAt.getTime();\n  const {setCurrentHoverTime, setCurrentTime} = useReplayContext();\n  const [sortConfig, setSortConfig] = useState<ISortConfig>({\n    by: 'startTimestamp',\n    asc: true,\n    getValue: row => row[sortConfig.by],\n  });\n\n  const handleMouseEnter = useCallback(\n    (timestamp: number) => {\n      if (startTimestampMs) {\n        setCurrentHoverTime(relativeTimeInMs(timestamp, startTimestampMs));\n      }\n    },\n    [setCurrentHoverTime, startTimestampMs]\n  );\n\n  const handleMouseLeave = useCallback(() => {\n    setCurrentHoverTime(undefined);\n  }, [setCurrentHoverTime]);\n\n  const handleClick = useCallback(\n    (timestamp: number) => {\n      setCurrentTime(relativeTimeInMs(timestamp, startTimestampMs));\n    },\n    [setCurrentTime, startTimestampMs]\n  );\n\n  const getColumnHandlers = useCallback(\n    (startTime: number) => ({\n      onMouseEnter: () => handleMouseEnter(startTime),\n      onMouseLeave: handleMouseLeave,\n    }),\n    [handleMouseEnter, handleMouseLeave]\n  );\n\n  function handleSort(fieldName: keyof NetworkSpan): void;\n  function handleSort(key: string, getValue: (row: NetworkSpan) => any): void;\n\n  function handleSort(\n    fieldName: string | keyof NetworkSpan,\n    getValue?: (row: NetworkSpan) => any\n  ) {\n    const getValueFunction = getValue ? getValue : (row: NetworkSpan) => row[fieldName];\n\n    setSortConfig(prevSort => {\n      if (prevSort.by === fieldName) {\n        return {by: fieldName, asc: !prevSort.asc, getValue: getValueFunction};\n      }\n\n      return {by: fieldName, asc: true, getValue: getValueFunction};\n    });\n  }\n\n  const networkData = useMemo(\n    () => sortNetwork(networkSpans, sortConfig),\n    [networkSpans, sortConfig]\n  );\n\n  const sortArrow = (sortedBy: string) => {\n    return sortConfig.by === sortedBy ? (\n      <IconArrow\n        color=\"gray300\"\n        size=\"xs\"\n        direction={sortConfig.by === sortedBy && !sortConfig.asc ? 'up' : 'down'}\n      />\n    ) : null;\n  };\n\n  const columns = [\n    <SortItem key=\"status\">\n      <UnstyledHeaderButton\n        onClick={() => handleSort('status', row => row.data.statusCode)}\n      >\n        {t('Status')} {sortArrow('status')}\n      </UnstyledHeaderButton>\n    </SortItem>,\n    <SortItem key=\"path\">\n      <UnstyledHeaderButton onClick={() => handleSort('description')}>\n        {t('Path')} {sortArrow('description')}\n      </UnstyledHeaderButton>\n    </SortItem>,\n    <SortItem key=\"type\">\n      <UnstyledHeaderButton onClick={() => handleSort('op')}>\n        {t('Type')} {sortArrow('op')}\n      </UnstyledHeaderButton>\n    </SortItem>,\n    <SortItem key=\"size\">\n      <UnstyledHeaderButton onClick={() => handleSort('size', row => row.data.size)}>\n        {t('Size')} {sortArrow('size')}\n      </UnstyledHeaderButton>\n    </SortItem>,\n    <SortItem key=\"duration\">\n      <UnstyledHeaderButton\n        onClick={() =>\n          handleSort('duration', row => {\n            return row.endTimestamp - row.startTimestamp;\n          })\n        }\n      >\n        {t('Duration')} {sortArrow('duration')}\n      </UnstyledHeaderButton>\n    </SortItem>,\n    <SortItem key=\"timestamp\">\n      <UnstyledHeaderButton onClick={() => handleSort('startTimestamp')}>\n        {t('Timestamp')} {sortArrow('startTimestamp')}\n      </UnstyledHeaderButton>\n    </SortItem>,\n  ];\n\n  const renderTableRow = (network: NetworkSpan, index: number) => {\n    const networkStartTimestamp = network.startTimestamp * 1000;\n    const networkEndTimestamp = network.endTimestamp * 1000;\n\n    const columnHandlers = getColumnHandlers(networkStartTimestamp);\n\n    return (\n      <Fragment key={index}>\n        <Item {...columnHandlers}>\n          {network.data.statusCode ? network.data.statusCode : <EmptyText>---</EmptyText>}\n        </Item>\n        <Item {...columnHandlers}>\n          {network.description ? (\n            <Tooltip\n              title={network.description}\n              isHoverable\n              overlayStyle={{\n                maxWidth: '500px !important',\n              }}\n              showOnlyOnOverflow\n            >\n              <Text>{network.description}</Text>\n            </Tooltip>\n          ) : (\n            <EmptyText>({t('Missing path')})</EmptyText>\n          )}\n        </Item>\n        <Item {...columnHandlers}>\n          <Text>{network.op.replace('resource.', '')}</Text>\n        </Item>\n        <Item {...columnHandlers} numeric>\n          {defined(network.data.size) ? (\n            <FileSize bytes={network.data.size} />\n          ) : (\n            <EmptyText>({t('Missing size')})</EmptyText>\n          )}\n        </Item>\n\n        <Item {...columnHandlers} numeric>\n          {`${(networkEndTimestamp - networkStartTimestamp).toFixed(2)}ms`}\n        </Item>\n        <Item {...columnHandlers} numeric>\n          <UnstyledButton onClick={() => handleClick(networkStartTimestamp)}>\n            {showPlayerTime(networkStartTimestamp, startTimestampMs, true)}\n          </UnstyledButton>\n        </Item>\n      </Fragment>\n    );\n  };\n\n  return (\n    <StyledPanelTable\n      columns={columns.length}\n      isEmpty={networkData.length === 0}\n      emptyMessage={t('No related network requests found.')}\n      headers={columns}\n      disablePadding\n      stickyHeaders\n    >\n      {networkData.map(renderTableRow) || null}\n    </StyledPanelTable>\n  );\n}\n\nconst Item = styled('div')<{center?: boolean; color?: ColorOrAlias; numeric?: boolean}>`\n  display: flex;\n  align-items: center;\n  ${p => p.center && 'justify-content: center;'}\n  max-height: 28px;\n  color: ${p => p.theme[p.color || 'subText']};\n  padding: ${space(0.75)} ${space(1.5)};\n  background-color: ${p => p.theme.background};\n\n  ${p => p.numeric && 'font-variant-numeric: tabular-nums;'}\n`;\n\nconst UnstyledButton = styled('button')`\n  border: 0;\n  background: none;\n  padding: 0;\n  text-transform: inherit;\n  width: 100%;\n  text-align: unset;\n`;\n\nconst UnstyledHeaderButton = styled(UnstyledButton)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StyledPanelTable = styled(PanelTable)<{columns: number}>`\n  grid-template-columns: max-content minmax(200px, 1fr) repeat(\n      4,\n      minmax(max-content, 160px)\n    );\n  grid-template-rows: 24px repeat(auto-fit, 28px);\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-bottom: 0;\n  height: 100%;\n  overflow: auto;\n\n  > * {\n    border-right: 1px solid ${p => p.theme.innerBorder};\n    border-bottom: 1px solid ${p => p.theme.innerBorder};\n\n    /* Last column */\n    &:nth-child(${p => p.columns}n) {\n      border-right: 0;\n      text-align: right;\n      justify-content: end;\n    }\n\n    /* 3rd and 2nd last column */\n    &:nth-child(${p => p.columns}n - 1),\n    &:nth-child(${p => p.columns}n - 2) {\n      text-align: right;\n      justify-content: end;\n    }\n  }\n\n  ${/* sc-selector */ PanelTableHeader} {\n    min-height: 24px;\n    border-radius: 0;\n    color: ${p => p.theme.subText};\n    line-height: 16px;\n    text-transform: none;\n\n    /* Last, 2nd and 3rd last header columns. As these are flex direction columns we have to treat them separately */\n    &:nth-child(${p => p.columns}n),\n    &:nth-child(${p => p.columns}n - 1),\n    &:nth-child(${p => p.columns}n - 2) {\n      justify-content: center;\n      align-items: flex-start;\n      text-align: start;\n    }\n  }\n`;\n\nconst Text = styled('p')`\n  padding: 0;\n  margin: 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst EmptyText = styled(Text)`\n  font-style: italic;\n  color: ${p => p.theme.subText};\n`;\n\nconst SortItem = styled('span')`\n  padding: ${space(0.5)} ${space(1.5)};\n  width: 100%;\n\n  svg {\n    margin-left: ${space(0.25)};\n  }\n`;\n\nexport default NetworkList;\n","export type NetworkSpan = {\n  data: Record<string, any>;\n  endTimestamp: number;\n  op: string;\n  startTimestamp: number;\n  description?: string;\n};\n\nexport interface ISortConfig {\n  asc: boolean;\n  by: keyof NetworkSpan | string;\n  getValue: (row: NetworkSpan) => any;\n}\n\nexport function sortNetwork(\n  network: NetworkSpan[],\n  sortConfig: ISortConfig\n): NetworkSpan[] {\n  return [...network].sort((a, b) => {\n    let valueA = sortConfig.getValue(a);\n    let valueB = sortConfig.getValue(b);\n\n    valueA = typeof valueA === 'string' ? valueA.toUpperCase() : valueA;\n    valueB = typeof valueB === 'string' ? valueB.toUpperCase() : valueB;\n\n    if (valueA === valueB) {\n      return 0;\n    }\n\n    if (sortConfig.asc) {\n      return valueA > valueB ? 1 : -1;\n    }\n\n    return valueB > valueA ? 1 : -1;\n  });\n}\n","import {ReactNode} from 'react';\nimport styled from '@emotion/styled';\n\nimport {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport DetailsPageBreadcrumbs from 'sentry/components/replays/header/detailsPageBreadcrumbs';\nimport {CrumbWalker} from 'sentry/components/replays/walker/urlWalker';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport space from 'sentry/styles/space';\nimport type {Crumb} from 'sentry/types/breadcrumbs';\nimport ChooseLayout from 'sentry/views/replays/detail/layout/chooseLayout';\nimport ReplayMetaData, {\n  HeaderPlaceholder,\n} from 'sentry/views/replays/detail/replayMetaData';\nimport type {ReplayRecord} from 'sentry/views/replays/types';\n\ntype Props = {\n  children: ReactNode;\n  orgSlug: string;\n  crumbs?: Crumb[];\n  replayRecord?: ReplayRecord;\n};\n\nfunction Page({children, crumbs, orgSlug, replayRecord}: Props) {\n  const title = replayRecord\n    ? `${replayRecord.id} - Replays - ${orgSlug}`\n    : `Replays - ${orgSlug}`;\n\n  const header = (\n    <Header>\n      <HeaderContent>\n        <DetailsPageBreadcrumbs orgSlug={orgSlug} replayRecord={replayRecord} />\n      </HeaderContent>\n      <ButtonActionsWrapper>\n        <FeatureFeedback featureName=\"replay\" buttonProps={{size: 'xs'}} />\n        <ChooseLayout />\n      </ButtonActionsWrapper>\n\n      {replayRecord && crumbs ? (\n        <CrumbWalker replayRecord={replayRecord} crumbs={crumbs} />\n      ) : (\n        <HeaderPlaceholder />\n      )}\n\n      <MetaDataColumn>\n        <ReplayMetaData replayRecord={replayRecord} />\n      </MetaDataColumn>\n    </Header>\n  );\n\n  return (\n    <SentryDocumentTitle title={title}>\n      <FullViewport>\n        {header}\n        {children}\n      </FullViewport>\n    </SentryDocumentTitle>\n  );\n}\n\nconst Header = styled(Layout.Header)`\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${space(2)} ${space(2)} ${space(1.5)} ${space(2)};\n  }\n`;\n\nconst HeaderContent = styled(Layout.HeaderContent)`\n  margin-bottom: 0;\n`;\n\n// TODO(replay); This could make a lot of sense to put inside HeaderActions by default\nconst ButtonActionsWrapper = styled(Layout.HeaderActions)`\n  display: grid;\n  grid-template-columns: repeat(2, max-content);\n  justify-content: flex-end;\n  gap: ${space(1)};\n`;\n\nconst MetaDataColumn = styled(Layout.HeaderActions)`\n  padding-left: ${space(3)};\n  align-self: end;\n`;\n\nconst FullViewport = styled('div')`\n  height: 100vh;\n  width: 100%;\n\n  display: grid;\n  grid-template-rows: auto 1fr;\n  overflow: hidden;\n\n  /*\n   * The footer component is a sibling of this div.\n   * Remove it so the replay can take up the\n   * entire screen.\n   */\n  ~ footer {\n    display: none;\n  }\n\n  /*\n  TODO: Set \\`body { overflow: hidden; }\\` so that the body doesn't wiggle\n  when you try to scroll something that is non-scrollable.\n  */\n`;\n\nexport default Page;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Duration from 'sentry/components/duration';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Placeholder from 'sentry/components/placeholder';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconCalendar, IconClock, IconFire} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport useProjects from 'sentry/utils/useProjects';\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\nimport type {ReplayRecord} from 'sentry/views/replays/types';\n\ntype Props = {\n  replayRecord: ReplayRecord | undefined;\n};\n\nfunction ReplayMetaData({replayRecord}: Props) {\n  const {\n    params: {replaySlug},\n  } = useRouteContext();\n  const {projects} = useProjects();\n  const [slug] = replaySlug.split(':');\n\n  return (\n    <KeyMetrics>\n      {replayRecord ? (\n        <ProjectBadge\n          project={\n            projects.find(p => p.id === replayRecord.projectId) || {\n              slug,\n            }\n          }\n          avatarSize={16}\n        />\n      ) : (\n        <HeaderPlaceholder />\n      )}\n\n      <KeyMetricData>\n        {replayRecord ? (\n          <React.Fragment>\n            <IconCalendar color=\"gray300\" />\n            <TimeSince date={replayRecord.startedAt} shorten />\n          </React.Fragment>\n        ) : (\n          <HeaderPlaceholder />\n        )}\n      </KeyMetricData>\n      <KeyMetricData>\n        {replayRecord ? (\n          <React.Fragment>\n            <IconClock color=\"gray300\" />\n            <Duration\n              seconds={Math.floor(msToSec(replayRecord?.duration || 0)) || 1}\n              abbreviation\n              exact\n            />\n          </React.Fragment>\n        ) : (\n          <HeaderPlaceholder />\n        )}\n      </KeyMetricData>\n      <KeyMetricData>\n        {replayRecord ? (\n          <React.Fragment>\n            <IconFire color=\"red300\" />\n            {replayRecord?.countErrors}\n          </React.Fragment>\n        ) : (\n          <HeaderPlaceholder />\n        )}\n      </KeyMetricData>\n    </KeyMetrics>\n  );\n}\n\nfunction msToSec(ms: number) {\n  return ms / 1000;\n}\n\nexport const HeaderPlaceholder = styled(function HeaderPlaceholder(\n  props: React.ComponentProps<typeof Placeholder>\n) {\n  return <Placeholder width=\"80px\" height=\"19px\" {...props} />;\n})`\n  background-color: ${p => p.theme.background};\n`;\n\nconst KeyMetrics = styled('div')`\n  display: grid;\n  gap: ${space(3)};\n  grid-template-columns: repeat(4, max-content);\n  align-items: center;\n  justify-content: end;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst KeyMetricData = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-weight: normal;\n  display: grid;\n  grid-template-columns: repeat(2, max-content);\n  align-items: center;\n  gap: ${space(1)};\n  line-height: ${p => p.theme.text.lineHeightBody};\n`;\n\nexport default ReplayMetaData;\n","import NavTabs from 'sentry/components/navTabs';\nimport {t} from 'sentry/locale';\nimport useUrlParams from 'sentry/utils/replays/hooks/useUrlParams';\n\ntype Props = {};\n\nconst TABS = {\n  video: t('Replay'),\n  tags: t('Tags'),\n};\n\nfunction SideTabs({}: Props) {\n  const {getParamValue, setParamValue} = useUrlParams('t_side', 'video');\n  const active = getParamValue();\n\n  return (\n    <NavTabs underlined>\n      {Object.entries(TABS).map(([tab, label]) => {\n        return (\n          <li key={tab} className={active === tab ? 'active' : ''}>\n            <a onClick={() => setParamValue(tab)}>{label}</a>\n          </li>\n        );\n      })}\n    </NavTabs>\n  );\n}\n\nexport default SideTabs;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {KeyValueTable} from 'sentry/components/keyValueTable';\nimport {Panel as BasePanel} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport TagsTableRow from 'sentry/components/tagsTableRow';\nimport FluidPanel from 'sentry/views/replays/detail/layout/fluidPanel';\n\nfunction TagPanel() {\n  const {replay} = useReplayContext();\n  const replayRecord = replay?.getReplay();\n\n  if (!replayRecord) {\n    return <Placeholder height=\"100%\" />;\n  }\n\n  const query = '';\n  const generateUrl = () => '';\n\n  return (\n    <Panel>\n      <FluidPanel>\n        <KeyValueTable>\n          {Object.entries(replayRecord.tags).map(([key, value]) => (\n            <TagsTableRow\n              key={key}\n              tag={{key, value}}\n              query={query}\n              generateUrl={generateUrl}\n            />\n          ))}\n        </KeyValueTable>\n      </FluidPanel>\n    </Panel>\n  );\n}\n\nconst Panel = styled(BasePanel)`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  margin-bottom: 0;\n`;\n\nexport default TagPanel;\n","import {useEffect, useState} from 'react';\n\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport {TableData} from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {doDiscoverQuery} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {TraceFullDetailed} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\nimport useApi from 'sentry/utils/useApi';\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\nimport TraceView from 'sentry/views/performance/traceDetails/traceView';\nimport type {ReplayRecord} from 'sentry/views/replays/types';\n\ntype State = {\n  /**\n   * Error, if not null.\n   */\n  // error: QueryError | null;\n  error: any | null;\n  /**\n   * Loading state of this query.\n   */\n  isLoading: boolean;\n  /**\n   * Pagelinks, if applicable. Can be provided to the Pagination component.\n   */\n  pageLinks: string | null;\n  /**\n   * EventView that generates API payload\n   */\n  traceEventView: EventView | null;\n  /**\n   * Data / result.\n   */\n  traces: TraceFullDetailed[] | null;\n};\n\ninterface Props {\n  organization: Organization;\n  replayRecord: ReplayRecord;\n}\n\nconst INITIAL_STATE = Object.freeze({\n  error: null,\n  isLoading: true,\n  pageLinks: null,\n  traceEventView: null,\n  traces: null,\n});\n\nexport default function Trace({replayRecord, organization}: Props) {\n  const [state, setState] = useState<State>(INITIAL_STATE);\n  const api = useApi();\n\n  const {\n    location,\n    params: {replaySlug, orgSlug},\n  } = useRouteContext();\n  const [, eventId] = replaySlug.split(':');\n\n  const start = getUtcDateString(replayRecord.startedAt.getTime());\n  const end = getUtcDateString(replayRecord.finishedAt.getTime());\n\n  useEffect(() => {\n    async function loadTraces() {\n      const eventView = EventView.fromSavedQuery({\n        id: undefined,\n        name: `Traces in replay ${eventId}`,\n        fields: ['trace', 'count(trace)', 'min(timestamp)'],\n        orderby: 'min_timestamp',\n        query: `replayId:${eventId} !title:\"sentry-replay-event*\"`,\n        projects: [ALL_ACCESS_PROJECTS],\n        version: 2,\n\n        start,\n        end,\n      });\n\n      try {\n        const [data, , resp] = await doDiscoverQuery<TableData>(\n          api,\n          `/organizations/${orgSlug}/events/`,\n          eventView.getEventsAPIPayload(location)\n        );\n\n        const traceIds = data.data.map(({trace}) => trace).filter(trace => trace);\n\n        // TODO(replays): Potential performance concerns here if number of traceIds is large\n        const traceDetails = await Promise.all(\n          traceIds.map(traceId =>\n            doDiscoverQuery(\n              api,\n              `/organizations/${orgSlug}/events-trace/${traceId}/`,\n              getTraceRequestPayload({\n                eventView: makeEventView({start, end}),\n                location,\n              })\n            )\n          )\n        );\n\n        setState(prevState => ({\n          isLoading: false,\n          error: null,\n          traceEventView: eventView,\n          pageLinks: resp?.getResponseHeader('Link') ?? prevState.pageLinks,\n          traces: traceDetails.flatMap(([trace]) => trace as TraceFullDetailed[]) || [],\n        }));\n      } catch (err) {\n        setState({\n          isLoading: false,\n          error: err,\n          pageLinks: null,\n          traceEventView: null,\n          traces: null,\n        });\n      }\n    }\n\n    loadTraces();\n\n    return () => {};\n  }, [api, eventId, orgSlug, location, start, end]);\n\n  if (state.isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (state.error || !state.traceEventView) {\n    return <LoadingError />;\n  }\n\n  if (!state.traces?.length) {\n    return (\n      <EmptyStateWarning withIcon={false} small>\n        {t('No traces found')}\n      </EmptyStateWarning>\n    );\n  }\n\n  return (\n    <TraceView\n      meta={null}\n      traces={state.traces}\n      location={location}\n      organization={organization}\n      traceEventView={state.traceEventView}\n      traceSlug=\"Replay\"\n    />\n  );\n  // TODO(replays): pagination\n}\n","import {Fragment} from 'react';\nimport type {RouteComponentProps} from 'react-router';\n\nimport DetailedError from 'sentry/components/errors/detailedError';\nimport NotFound from 'sentry/components/errors/notFound';\nimport {\n  Provider as ReplayContextProvider,\n  useReplayContext,\n} from 'sentry/components/replays/replayContext';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport useReplayData from 'sentry/utils/replays/hooks/useReplayData';\nimport useReplayLayout from 'sentry/utils/replays/hooks/useReplayLayout';\nimport Layout from 'sentry/views/replays/detail/layout';\nimport Page from 'sentry/views/replays/detail/page';\n\ntype Props = RouteComponentProps<\n  {orgSlug: string; replaySlug: string},\n  {},\n  any,\n  {t: number}\n>;\n\nfunction ReplayDetails({\n  location: {\n    query: {\n      t: initialTimeOffset, // Time, in seconds, where the video should start\n    },\n  },\n  params: {orgSlug, replaySlug},\n}: Props) {\n  const {fetching, onRetry, replay} = useReplayData({\n    replaySlug,\n    orgSlug,\n  });\n\n  if (!fetching && !replay) {\n    return (\n      <Page orgSlug={orgSlug}>\n        <PageContent>\n          <NotFound />\n        </PageContent>\n      </Page>\n    );\n  }\n\n  if (!fetching && replay && replay.getRRWebEvents().length < 2) {\n    return (\n      <Page orgSlug={orgSlug} replayRecord={replay.getReplay()}>\n        <DetailedError\n          onRetry={onRetry}\n          hideSupportLinks\n          heading={t('Expected two or more replay events')}\n          message={\n            <Fragment>\n              <p>{t('This Replay may not have captured any user actions.')}</p>\n              <p>\n                {t(\n                  'Or there may be an issue loading the actions from the server, click to try loading the Replay again.'\n                )}\n              </p>\n            </Fragment>\n          }\n        />\n      </Page>\n    );\n  }\n\n  return (\n    <ReplayContextProvider replay={replay} initialTimeOffset={initialTimeOffset}>\n      <LoadedDetails orgSlug={orgSlug} />\n    </ReplayContextProvider>\n  );\n}\n\nfunction LoadedDetails({orgSlug}: {orgSlug: string}) {\n  const {getLayout} = useReplayLayout();\n  const {replay} = useReplayContext();\n\n  return (\n    <Page\n      orgSlug={orgSlug}\n      crumbs={replay?.getRawCrumbs()}\n      replayRecord={replay?.getReplay()}\n    >\n      <Layout layout={getLayout()} />\n    </Page>\n  );\n}\n\nexport default ReplayDetails;\n"],"names":["AreaSeries","BaseChart","AreaChart","series","stacked","colors","props","map","i","seriesName","data","otherSeriesProps","stack","undefined","name","value","lineStyle","color","opacity","width","areaStyle","animation","animationThreshold","animationDuration","LineSeries","isEmpty","isNull","memoize","GET_META","Symbol","IS_PROXY","isAnnotated","meta","rem","err","MetaProxy","constructor","local","get","obj","prop","receiver","key","Reflect","has","Proxy","withMeta","event","window","_meta","getMeta","openModal","Button","IconMegaphone","t","FeatureFeedback","feedbackTypes","featureName","buttonProps","handleClick","mod","FeedbackModal","modalCss","deps","useEffect","useRef","beautify","Prism","HTMLCode","code","codeRef","formattedCode","html","indent_size","highlightElement","current","CodeWrapper","Fragment","space","KeyValueTable","KeyValueTableRow","keyName","commonStyles","theme","fontSizeMedium","p","overflowEllipsis","backgroundSecondary","Key","textColor","Value","subText","React","Timeline","countColumns","formatTime","Line","Col","gray100","Gridlines","children","cols","remaining","Array","_","MajorGridlines","durationMs","minWidth","timespan","MinorGridlines","Label","fontSizeSmall","Panel","Placeholder","ReplayTimelineEvents","ReplayTimelineSpans","Stacked","TimelineScrubber","ScrubberMouseTracking","useReplayContext","Resizeable","BreadcrumbType","USER_ACTIONS","ERROR","NAVIGATION","UI","USER","ReplayTimeline","replay","getDurationMs","startTimestampMs","getReplay","startedAt","getTime","crumbs","getRawCrumbs","spans","getRawSpans","userCrumbs","filter","crumb","includes","type","networkSpans","isNetworkSpan","UnderTimestamp","paddingTop","useCallback","css","getCrumbsByColumn","relativeTimeInMs","Tooltip","BreadcrumbItem","EVENT_STICK_MARKER_WIDTH","className","totalColumns","Math","floor","eventsByCol","from","entries","column","breadcrumbs","EventColumn","zIndex","initial","Event","setCurrentTime","timestamp","title","id","overlayStyle","breakpoints","small","Set","totalStackNumber","min","length","slice","index","getNodeDimensions","multiplier","size","IconNodeTooltip","IconPosition","IconNode","white","dropShadowLightest","divide","flattenSpans","tn","useActiveReplayTab","flattenedSpans","setActiveTab","span","sinceStart","startTimestamp","startPct","widthPct","duration","requestsCount","spanCount","toFixed","Spans","Span","charts","memo","Columns","remainder","Breadcrumbs","ReplaysFeatureBadge","DetailsPageBreadcrumbs","orgSlug","replayRecord","labelTitle","user","email","ip_address","to","label","HeaderPlaceholder","background","FeatureBadge","useState","useResizeObserver","el","dimensions","setDimensions","height","onResize","clientHeight","clientWidth","ref","Link","Version","AnnotatedText","TagsTableRow","tag","query","generateUrl","tagInQuery","target","keyMetaData","valueMetaData","renderTagValue","StyledTooltip","ValueContainer","spanTargetHash","defined","getTransactionDetailsUrl","eventSlug","transaction","spanId","locationQuery","pathname","hash","useUrlParams","TabKey","isReplayTab","tab","DEFAULT_TAB","console","getParamValue","setParamValue","paramValue","getActiveTab","useCrumbHandlers","clearAllHighlights","highlight","removeHighlight","setCurrentHoverTime","handleMouseEnter","item","nodeId","annotation","handleMouseLeave","defer","fn","setTimeout","useCurrentItemScroller","containerRef","isAutoScrollDisabled","setIsAutoScrollDisabled","containerEl","observer","isContainerScrollable","scrollHeight","offsetHeight","MutationObserver","mutationList","mutation","attributeName","nodeType","element","isCurrent","ariaCurrent","scrollIntoView","behavior","block","inline","observe","attributes","childList","subtree","addEventListener","disconnect","removeEventListener","Sentry","first","Replayer","EventType","useExtractedCrumbHtml","breadcrumbRefs","setBreadcrumbReferences","isMounted","domRoot","document","createElement","style","position","inset","overflow","body","appendChild","rrwebEvents","getRRWebEvents","lastEvent","isLastRRWebEvent","replayerRef","root","loadTimeout","showWarning","blockClass","speed","skipInactive","triggerFocus","plugins","BreadcrumbReferencesPlugin","isFinished","onFinish","rows","contains","removeChild","mouseTail","pause","finishedAt","error","captureException","isLoading","actions","handler","_isSync","replayer","IncrementalSnapshot","nextTimestamp","Date","mirror","getMirror","node","getNode","outerHTML","textContent","truncated","removeNodesAtLevel","substring","activities","push","shift","level","parser","DOMParser","doc","parseFromString","removeChildLevel","max","collection","child","nodeName","innerHTML","childElementCount","PreferencesStore","useLegacyStore","getDefaultLayout","LayoutKey","isLayout","val","collapsed","defaultLayout","getLayout","setLayout","browserHistory","useRouteContext","defaultKey","defaultValue","location","getWithDefault","setWithDefault","generateEventSlug","MutableSearch","getTraceDetailsUrl","TransactionFilterOptions","generateTransactionSummaryRoute","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","transactionSummaryRouteWithQuery","projectID","unselectedSeries","display","trendFunction","trendColumn","showTransactions","additionalQuery","searchFilter","formatString","project","environment","statsPeriod","start","end","generateTraceLink","dateSelection","organization","tableRow","_query","traceId","trace","generateTransactionLink","transactionName","slug","SidebarSpacer","BasePanel","PanelHeader","BasePanelHeader","getPrevBreadcrumb","FluidPanel","CrumbPlaceholder","number","currentHoverTime","currentTime","allCrumbs","crumbListContainerRef","isLoaded","Boolean","category","currentUserAction","targetTimestampMs","allowExact","closestUserAction","content","BreadcrumbContainer","innerBorder","gray500","PlaceholderMargin","borderRadius","isObject","sprintf","vsprintf","DateTime","ErrorBoundary","showPlayerTime","IconClose","IconWarning","objectIsEmpty","renderString","arg","JSON","stringify","toString","MessageFormatter","breadcrumb","logMessage","arguments","message","args","isMessageString","placeholders","parse","parsed","isArray","consoleColorPlaceholderIndexes","placeholder","messageArgs","colorIndex","splice","restArgs","formattedMessage","replaceAll","join","trim","argValues","ConsoleMessage","isActive","hasOccurred","isLast","ICONS","warning","diff","handleOnClick","handleOnMouseOver","handleOnMouseOut","Common","alert","backgroundLight","gray300","iconHoverColor","ConsoleTimestamp","ConsoleTimestampButton","Icon","focus","Message","useMemo","debounce","CompactSelect","SearchBar","filterBreadcrumbs","EmptyMessage","getDistinctLogLevels","Console","searchTerm","setSearchTerm","logLevel","setLogLevel","handleSearch","filteredBreadcrumbs","prefix","breadcrumbLogLevel","selections","selection","ConsoleFilters","StyledEmptyMessage","ConsoleTable","text","familyMono","normalizedSearchTerm","toLowerCase","doesMatch","BreadcrumbIcon","getDetails","PlayerRelativeTime","Truncate","DomMutations","MutationList","border","MutationListItem","MutationItemContainer","MutationMetadata","IconWrapper","UnstyledButton","MutationDetails","TitleContainer","Title","gray400","lineHeightBody","CodeContainer","StepConnector","Feature","FeatureDisabled","isBreadcrumbTypeDefault","useOrganization","IssueList","MemoryChart","NetworkList","Trace","getBreadcrumbsByCategory","categories","FocusArea","memorySpans","isMemorySpan","getNetworkSpans","consoleMessages","features","renderDisabled","projectId","queryString","NavTabs","useLocation","ReplayTabs","dom","network","issues","memory","FocusTabs","activeTab","Object","t_main","e","preventDefault","keyBy","EventOrGroupExtraDetails","EventOrGroupHeader","PanelTable","DEFAULT_STREAM_GROUP_STATS_PERIOD","GroupChart","DiscoverQuery","EventView","useApi","useMedia","usePageFilters","columns","api","isScreenLarge","large","loadingIssueData","setLoadingIssueData","issuesById","setIssuesById","issueStatsById","setIssuesStatsById","getEventView","eventQueryParams","version","fields","environments","projects","replayId","result","fromNewQueryWithLocation","fetchIssueData","requestPromise","includeAllArgs","issuesResults","groups","issue","renderTableRow","matchedIssue","matchedIssueStats","firstSeen","lastSeen","stats","count","userCount","tableData","ChartWrapper","Item","IssueDetailsWrapper","StyledPanelTable","IconPanel","useReplayLayout","layoutToLabel","topbar","sidebar_left","sidebar_right","layoutToDir","getLayoutIcon","layout","dir","ChooseLayout","icon","opt","leadingItems","bottom","bodyRef","FluidContainer","OverflowBody","ReplayView","useFullscreen","FluidHeight","SplitPanel","SideTabs","TagPanel","MIN_VIDEO_WIDTH","px","MIN_CONTENT_WIDTH","MIN_VIDEO_HEIGHT","MIN_CONTENT_HEIGHT","MIN_CRUMBS_HEIGHT","ReplayLayout","showCrumbs","showTimeline","showVideo","fullscreenRef","toggle","toggleFullscreen","timeline","video","default","SidebarContent","BodyContent","VideoSection","IconGrabbable","useMouseTracking","BAR_THICKNESS","HALF_BAR","MOUSE_RELEASE_TIMEOUT_MS","getValFromSide","side","field","getSplitDefault","a","left","b","right","top","getMinMax","ONE","Number","MAX_SAFE_INTEGER","pct","ZERO","useTimeout","timeMs","callback","timeoutRef","saveTimeout","timeout","clearTimeout","stop","mousedown","setMousedown","sizeCSS","setSizeCSS","startMouseIdleTimer","stopMouseIdleTimer","handleMouseDown","once","handlePositionChange","params","priPx","priPct","secPx","secPct","priLim","secLim","mouseTrackingProps","onPositionChange","activeTrackingProps","SplitPanelContainer","orientation","Divider","_a","slideDirection","_b","hover","innerWidth","innerHeight","sidebarWidth","parseInt","sidebar","collapsedWidth","expandedWidth","mediumScreenWidth","medium","windowsWidth","forwardRef","useTheme","moment","Grid","XAxis","YAxis","EmptyStateWarning","formatBytesBase2","getFormattedDate","formatTimestamp","forwardedRef","chartOptions","grid","tooltip","trigger","formatter","values","seriesTooltips","marker","template","axisValue","toDate","toUTCString","xAxis","axisLabel","yAxis","nameTextStyle","padding","fontSize","fontSizeLarge","fontWeight","lineHeight","minInterval","maxInterval","pow","onMouseOver","onMouseOut","onClick","usedJSHeapSize","endTimestamp","totalJSHeapSize","markLine","symbol","show","purple300","purple200","MemoryChartWrapper","MemoizedMemoryChart","MemoryChartContainer","chart","echarts","getEchartsInstance","setOption","FileSize","PanelTableHeader","IconArrow","sortNetwork","sortConfig","setSortConfig","by","asc","getValue","row","getColumnHandlers","startTime","onMouseEnter","onMouseLeave","handleSort","fieldName","getValueFunction","prevSort","networkData","sortArrow","sortedBy","statusCode","networkStartTimestamp","networkEndTimestamp","columnHandlers","description","maxWidth","op","replace","center","numeric","UnstyledHeaderButton","Text","EmptyText","SortItem","sort","valueA","valueB","toUpperCase","Layout","CrumbWalker","SentryDocumentTitle","ReplayMetaData","Page","header","Header","HeaderContent","ButtonActionsWrapper","HeaderActions","MetaDataColumn","FullViewport","Duration","ProjectBadge","TimeSince","IconCalendar","IconClock","IconFire","useProjects","replaySlug","split","find","msToSec","countErrors","ms","KeyMetrics","KeyMetricData","TABS","tags","active","LoadingError","LoadingIndicator","ALL_ACCESS_PROJECTS","getUtcDateString","doDiscoverQuery","getTraceRequestPayload","makeEventView","TraceView","INITIAL_STATE","freeze","pageLinks","traceEventView","traces","state","setState","eventId","loadTraces","eventView","fromSavedQuery","orderby","resp","getEventsAPIPayload","traceIds","traceDetails","Promise","all","prevState","getResponseHeader","flatMap","DetailedError","NotFound","Provider","ReplayContextProvider","PageContent","useReplayData","ReplayDetails","initialTimeOffset","fetching","onRetry","LoadedDetails"],"sourceRoot":""}