{"version":3,"file":"chunks/app_views_alerts_list_rules_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/alertBadge.tsx","webpack:///./app/utils/performance/vitals/constants.tsx","webpack:///./app/views/alerts/list/rules/index.tsx","webpack:///./app/views/alerts/list/rules/row.tsx","webpack:///./app/views/alerts/rules/metric/constants.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {\n  IconCheckmark,\n  IconDiamond,\n  IconExclamation,\n  IconFire,\n  IconIssues,\n} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Color} from 'sentry/utils/theme';\nimport {IncidentStatus} from 'sentry/views/alerts/types';\n\ntype Props = {\n  hideText?: boolean;\n  isIssue?: boolean;\n  status?: IncidentStatus;\n};\n\nfunction AlertBadge({status, hideText = false, isIssue}: Props) {\n  let statusText = t('Resolved');\n  let Icon = IconCheckmark;\n  let color: Color = 'green300';\n  if (isIssue) {\n    statusText = t('Issue');\n    Icon = IconIssues;\n    color = 'gray300';\n  } else if (status === IncidentStatus.CRITICAL) {\n    statusText = t('Critical');\n    Icon = IconFire;\n    color = 'red300';\n  } else if (status === IncidentStatus.WARNING) {\n    statusText = t('Warning');\n    Icon = IconExclamation;\n    color = 'yellow300';\n  }\n\n  return (\n    <Wrapper data-test-id=\"alert-badge\">\n      <AlertIconWrapper color={color} icon={Icon}>\n        <AlertIconBackground color={color} />\n        <Icon color=\"white\" />\n      </AlertIconWrapper>\n\n      {!hideText && <IncidentStatusValue color={color}>{statusText}</IncidentStatusValue>}\n    </Wrapper>\n  );\n}\n\nexport default AlertBadge;\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst AlertIconWrapper = styled('div')<{color: Color; icon: React.ReactNode}>`\n  width: 36px;\n  height: 36px;\n  position: relative;\n\n  svg:last-child {\n    width: ${p => (p.icon === IconIssues ? '13px' : '16px')};\n    z-index: 2;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n  }\n`;\n\nconst AlertIconBackground = styled(IconDiamond)<{color: Color}>`\n  width: 36px;\n  height: 36px;\n`;\n\nconst IncidentStatusValue = styled('div')`\n  margin-left: ${space(1)};\n`;\n","import {t} from 'sentry/locale';\nimport {measurementType} from 'sentry/utils/discover/fields';\nimport {MobileVital, WebVital} from 'sentry/utils/fields';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    poorThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    poorThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\nexport const MOBILE_VITAL_DETAILS: Record<MobileVital, Vital> = {\n  [MobileVital.AppStartCold]: {\n    slug: 'app_start_cold',\n    name: t('App Start Cold'),\n    description: t(\n      'Cold start is a measure of the application start up time from scratch.'\n    ),\n    type: measurementType(MobileVital.AppStartCold),\n  },\n  [MobileVital.AppStartWarm]: {\n    slug: 'app_start_warm',\n    name: t('App Start Warm'),\n    description: t(\n      'Warm start is a measure of the application start up time while still in memory.'\n    ),\n    type: measurementType(MobileVital.AppStartWarm),\n  },\n  [MobileVital.FramesTotal]: {\n    slug: 'frames_total',\n    name: t('Total Frames'),\n    description: t(\n      'Total frames is a count of the number of frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesTotal),\n  },\n  [MobileVital.FramesSlow]: {\n    slug: 'frames_slow',\n    name: t('Slow Frames'),\n    description: t(\n      'Slow frames is a count of the number of slow frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesSlow),\n  },\n  [MobileVital.FramesFrozen]: {\n    slug: 'frames_frozen',\n    name: t('Frozen Frames'),\n    description: t(\n      'Frozen frames is a count of the number of frozen frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesFrozen),\n  },\n  [MobileVital.FramesSlowRate]: {\n    slug: 'frames_slow_rate',\n    name: t('Slow Frames Rate'),\n    description: t(\n      'Slow Frames Rate is the percentage of frames recorded within a transaction that is considered slow.'\n    ),\n    type: measurementType(MobileVital.FramesSlowRate),\n  },\n  [MobileVital.FramesFrozenRate]: {\n    slug: 'frames_frozen_rate',\n    name: t('Frozen Frames Rate'),\n    description: t(\n      'Frozen Frames Rate is the percentage of frames recorded within a transaction that is considered frozen.'\n    ),\n    type: measurementType(MobileVital.FramesFrozenRate),\n  },\n  [MobileVital.StallCount]: {\n    slug: 'stall_count',\n    name: t('Stalls'),\n    description: t(\n      'Stalls is the number of times the application stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallCount),\n  },\n  [MobileVital.StallTotalTime]: {\n    slug: 'stall_total_time',\n    name: t('Total Stall Time'),\n    description: t(\n      'Stall Total Time is the total amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallTotalTime),\n  },\n  [MobileVital.StallLongestTime]: {\n    slug: 'stall_longest_time',\n    name: t('Longest Stall Time'),\n    description: t(\n      'Stall Longest Time is the longest amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallLongestTime),\n  },\n  [MobileVital.StallPercentage]: {\n    slug: 'stall_percentage',\n    name: t('Stall Percentage'),\n    description: t(\n      'Stall Percentage is the percentage of the transaction duration the application was stalled.'\n    ),\n    type: measurementType(MobileVital.StallPercentage),\n  },\n};\n\nexport enum Browser {\n  CHROME = 'Chrome',\n  EDGE = 'Edge',\n  OPERA = 'Opera',\n  FIREFOX = 'Firefox',\n  SAFARI = 'Safari',\n  IE = 'IE',\n}\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addMessage} from 'sentry/actionCreators/indicator';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport Link from 'sentry/components/links/link';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {IconArrow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport Projects from 'sentry/utils/projects';\nimport Teams from 'sentry/utils/teams';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport FilterBar from '../../filterBar';\nimport {AlertRuleType, CombinedMetricIssueAlerts} from '../../types';\nimport {getTeamParams, isIssueAlert} from '../../utils';\nimport AlertHeader from '../header';\n\nimport RuleListRow from './row';\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  organization: Organization;\n  selection: PageFilters;\n};\n\ntype State = {\n  alertRuleCount?: number;\n  issueRuleCount?: number;\n  ruleList?: CombinedMetricIssueAlerts[];\n  teamFilterSearch?: string;\n};\n\nconst HookHeader = HookOrDefault({hookName: 'component:alerts-header'});\n\nclass AlertRulesList extends AsyncComponent<Props, State & AsyncComponent['state']> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {params, location} = this.props;\n    const {query} = location;\n\n    query.expand = ['latestIncident', 'lastTriggered'];\n    query.team = getTeamParams(query.team);\n\n    if (!query.sort) {\n      query.sort = ['incident_status', 'date_triggered'];\n    }\n\n    return [\n      [\n        'ruleList',\n        `/organizations/${params && params.orgId}/combined-rules/`,\n        {\n          query,\n        },\n      ],\n    ];\n  }\n\n  onRequestSuccess({stateKey, resp}) {\n    if (stateKey === 'ruleList') {\n      const issueRuleCount = resp.getResponseHeader('X-Sentry-Issue-Rule-Hits');\n      const alertRuleCount = resp.getResponseHeader('X-Sentry-Alert-Rule-Hits');\n      this.setState({\n        issueRuleCount: parseInt(issueRuleCount, 10),\n        alertRuleCount: parseInt(alertRuleCount, 10),\n      });\n    }\n  }\n\n  get projectsFromIncidents() {\n    const {ruleList = []} = this.state;\n\n    return [...new Set(ruleList?.map(({projects}) => projects).flat())];\n  }\n\n  handleChangeFilter = (activeFilters: string[]) => {\n    const {router, location} = this.props;\n    const {cursor: _cursor, page: _page, ...currentQuery} = location.query;\n    router.push({\n      pathname: location.pathname,\n      query: {\n        ...currentQuery,\n        team: activeFilters.length > 0 ? activeFilters : '',\n      },\n    });\n  };\n\n  handleChangeSearch = (name: string) => {\n    const {router, location} = this.props;\n    const {cursor: _cursor, page: _page, ...currentQuery} = location.query;\n    router.push({\n      pathname: location.pathname,\n      query: {\n        ...currentQuery,\n        name,\n      },\n    });\n  };\n\n  handleOwnerChange = (\n    projectId: string,\n    rule: CombinedMetricIssueAlerts,\n    ownerValue: string\n  ) => {\n    const {orgId} = this.props.params;\n    const alertPath = rule.type === 'alert_rule' ? 'alert-rules' : 'rules';\n    const endpoint = `/projects/${orgId}/${projectId}/${alertPath}/${rule.id}/`;\n    const updatedRule = {...rule, owner: ownerValue};\n\n    this.api.request(endpoint, {\n      method: 'PUT',\n      data: updatedRule,\n      success: () => {\n        addMessage(t('Updated alert rule'), 'success');\n      },\n      error: () => {\n        addMessage(t('Unable to save change'), 'error');\n      },\n    });\n  };\n\n  handleDeleteRule = async (projectId: string, rule: CombinedMetricIssueAlerts) => {\n    const {orgId} = this.props.params;\n    const alertPath = isIssueAlert(rule) ? 'rules' : 'alert-rules';\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/${alertPath}/${rule.id}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n      this.reloadData();\n    } catch (_err) {\n      addErrorMessage(t('Error deleting rule'));\n    }\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderList() {\n    const {\n      params: {orgId},\n      location,\n      organization,\n      router,\n    } = this.props;\n    const {\n      loading,\n      ruleList = [],\n      ruleListPageLinks,\n      issueRuleCount,\n      alertRuleCount,\n    } = this.state;\n    const {query} = location;\n    const hasEditAccess = organization.access.includes('alerts:write');\n\n    const sort: {\n      asc: boolean;\n      field: 'date_added' | 'name' | ['incident_status', 'date_triggered'];\n    } = {\n      asc: query.asc === '1',\n      field: query.sort || 'date_added',\n    };\n    const {cursor: _cursor, page: _page, ...currentQuery} = query;\n    const isAlertRuleSort =\n      sort.field.includes('incident_status') || sort.field.includes('date_triggered');\n    const sortArrow = (\n      <IconArrow color=\"gray300\" size=\"xs\" direction={sort.asc ? 'up' : 'down'} />\n    );\n\n    return (\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          {issueRuleCount !== undefined &&\n            issueRuleCount > 0 &&\n            alertRuleCount === 0 &&\n            !query.name && <HookHeader organization={organization} />}\n          <FilterBar\n            location={location}\n            onChangeFilter={this.handleChangeFilter}\n            onChangeSearch={this.handleChangeSearch}\n          />\n          <Teams provideUserTeams>\n            {({initiallyLoaded: loadedTeams, teams}) => (\n              <StyledPanelTable\n                headers={[\n                  <StyledSortLink\n                    key=\"name\"\n                    role=\"columnheader\"\n                    aria-sort={\n                      sort.field !== 'name'\n                        ? 'none'\n                        : sort.asc\n                        ? 'ascending'\n                        : 'descending'\n                    }\n                    to={{\n                      pathname: location.pathname,\n                      query: {\n                        ...currentQuery,\n                        // sort by name should start by ascending on first click\n                        asc: sort.field === 'name' && sort.asc ? undefined : '1',\n                        sort: 'name',\n                      },\n                    }}\n                  >\n                    {t('Alert Rule')} {sort.field === 'name' && sortArrow}\n                  </StyledSortLink>,\n\n                  <StyledSortLink\n                    key=\"status\"\n                    role=\"columnheader\"\n                    aria-sort={\n                      !isAlertRuleSort ? 'none' : sort.asc ? 'ascending' : 'descending'\n                    }\n                    to={{\n                      pathname: location.pathname,\n                      query: {\n                        ...currentQuery,\n                        asc: isAlertRuleSort && !sort.asc ? '1' : undefined,\n                        sort: ['incident_status', 'date_triggered'],\n                      },\n                    }}\n                  >\n                    {t('Status')} {isAlertRuleSort && sortArrow}\n                  </StyledSortLink>,\n\n                  t('Project'),\n                  t('Team'),\n                  t('Actions'),\n                ]}\n                isLoading={loading || !loadedTeams}\n                isEmpty={ruleList?.length === 0}\n                emptyMessage={t('No alert rules found for the current query.')}\n              >\n                <Projects orgId={orgId} slugs={this.projectsFromIncidents}>\n                  {({initiallyLoaded, projects}) =>\n                    ruleList.map(rule => (\n                      <RuleListRow\n                        // Metric and issue alerts can have the same id\n                        key={`${\n                          isIssueAlert(rule) ? AlertRuleType.METRIC : AlertRuleType.ISSUE\n                        }-${rule.id}`}\n                        projectsLoaded={initiallyLoaded}\n                        projects={projects as Project[]}\n                        rule={rule}\n                        orgId={orgId}\n                        onOwnerChange={this.handleOwnerChange}\n                        onDelete={this.handleDeleteRule}\n                        userTeams={new Set(teams.map(team => team.id))}\n                        hasEditAccess={hasEditAccess}\n                      />\n                    ))\n                  }\n                </Projects>\n              </StyledPanelTable>\n            )}\n          </Teams>\n          <Pagination\n            pageLinks={ruleListPageLinks}\n            onCursor={(cursor, path, _direction) => {\n              let team = currentQuery.team;\n              // Keep team parameter, but empty to remove parameters\n              if (!team || team.length === 0) {\n                team = '';\n              }\n\n              router.push({\n                pathname: path,\n                query: {...currentQuery, team, cursor},\n              });\n            }}\n          />\n        </Layout.Main>\n      </Layout.Body>\n    );\n  }\n\n  renderBody() {\n    const {params, organization, router} = this.props;\n    const {orgId} = params;\n\n    return (\n      <SentryDocumentTitle title={t('Alerts')} orgSlug={orgId}>\n        <PageFiltersContainer>\n          <AlertHeader\n            organization={organization}\n            router={router}\n            activeTab=\"rules\"\n            projectSlugs={this.projectsFromIncidents}\n          />\n          {this.renderList()}\n        </PageFiltersContainer>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nclass AlertRulesListContainer extends Component<Props> {\n  componentDidMount() {\n    this.trackView();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {location} = this.props;\n    if (prevProps.location.query?.sort !== location.query?.sort) {\n      this.trackView();\n    }\n  }\n\n  trackView() {\n    const {organization, location} = this.props;\n\n    trackAdvancedAnalyticsEvent('alert_rules.viewed', {\n      organization,\n      sort: Array.isArray(location.query.sort)\n        ? location.query.sort.join(',')\n        : location.query.sort,\n    });\n  }\n\n  render() {\n    return <AlertRulesList {...this.props} />;\n  }\n}\n\nexport default withPageFilters(AlertRulesListContainer);\n\nconst StyledSortLink = styled(Link)`\n  color: inherit;\n\n  :hover {\n    color: inherit;\n  }\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  position: static;\n  overflow: auto;\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    overflow: initial;\n  }\n\n  grid-template-columns: 4fr auto 140px 60px auto;\n  white-space: nowrap;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n","import {useState} from 'react';\nimport styled from '@emotion/styled';\nimport memoize from 'lodash/memoize';\n\nimport Access from 'sentry/components/acl/access';\nimport AlertBadge from 'sentry/components/alertBadge';\nimport ActorAvatar from 'sentry/components/avatar/actorAvatar';\nimport TeamAvatar from 'sentry/components/avatar/teamAvatar';\nimport {openConfirmModal} from 'sentry/components/confirm';\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport DropdownBubble from 'sentry/components/dropdownBubble';\nimport DropdownMenuControl from 'sentry/components/dropdownMenuControl';\nimport {MenuItemProps} from 'sentry/components/dropdownMenuItem';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport Highlight from 'sentry/components/highlight';\nimport IdBadge from 'sentry/components/idBadge';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport TimeSince from 'sentry/components/timeSince';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconArrow, IconChevron, IconEllipsis, IconUser} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Actor, Project} from 'sentry/types';\nimport type {Color} from 'sentry/utils/theme';\nimport {getThresholdUnits} from 'sentry/views/alerts/rules/metric/constants';\nimport {\n  AlertRuleComparisonType,\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n} from 'sentry/views/alerts/rules/metric/types';\n\nimport {CombinedAlertType, CombinedMetricIssueAlerts, IncidentStatus} from '../../types';\nimport {isIssueAlert} from '../../utils';\n\ntype Props = {\n  hasEditAccess: boolean;\n  onDelete: (projectId: string, rule: CombinedMetricIssueAlerts) => void;\n  onOwnerChange: (\n    projectId: string,\n    rule: CombinedMetricIssueAlerts,\n    ownerValue: string\n  ) => void;\n  orgId: string;\n  projects: Project[];\n  projectsLoaded: boolean;\n  rule: CombinedMetricIssueAlerts;\n  // Set of team ids that the user belongs to\n  userTeams: Set<string>;\n};\n\n/**\n * Memoized function to find a project from a list of projects\n */\nconst getProject = memoize((slug: string, projects: Project[]) =>\n  projects.find(project => project.slug === slug)\n);\n\nfunction RuleListRow({\n  rule,\n  projectsLoaded,\n  projects,\n  orgId,\n  onDelete,\n  onOwnerChange,\n  userTeams,\n  hasEditAccess,\n}: Props) {\n  const [assignee, setAssignee] = useState<string>('');\n  const activeIncident =\n    rule.latestIncident?.status !== undefined &&\n    [IncidentStatus.CRITICAL, IncidentStatus.WARNING].includes(\n      rule.latestIncident.status\n    );\n\n  function renderLastIncidentDate(): React.ReactNode {\n    if (isIssueAlert(rule)) {\n      if (!rule.lastTriggered) {\n        return t('Alerts not triggered yet');\n      }\n      return (\n        <div>\n          {t('Triggered ')}\n          <TimeSince date={rule.lastTriggered} />\n        </div>\n      );\n    }\n\n    if (!rule.latestIncident) {\n      return t('Alerts not triggered yet');\n    }\n\n    if (activeIncident) {\n      return (\n        <div>\n          {t('Triggered ')}\n          <TimeSince date={rule.latestIncident.dateCreated} />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {t('Resolved ')}\n        <TimeSince date={rule.latestIncident.dateClosed!} />\n      </div>\n    );\n  }\n\n  function renderAlertRuleStatus(): React.ReactNode {\n    if (isIssueAlert(rule)) {\n      return null;\n    }\n\n    const criticalTrigger = rule.triggers.find(\n      ({label}) => label === AlertRuleTriggerType.CRITICAL\n    );\n    const warningTrigger = rule.triggers.find(\n      ({label}) => label === AlertRuleTriggerType.WARNING\n    );\n    const resolvedTrigger = rule.resolveThreshold;\n    const trigger =\n      activeIncident && rule.latestIncident?.status === IncidentStatus.CRITICAL\n        ? criticalTrigger\n        : warningTrigger ?? criticalTrigger;\n\n    let iconColor: Color = 'green300';\n    let iconDirection: 'up' | 'down' | undefined;\n    let thresholdTypeText =\n      activeIncident && rule.thresholdType === AlertRuleThresholdType.ABOVE\n        ? t('Above')\n        : t('Below');\n\n    if (activeIncident) {\n      iconColor =\n        trigger?.label === AlertRuleTriggerType.CRITICAL\n          ? 'red300'\n          : trigger?.label === AlertRuleTriggerType.WARNING\n          ? 'yellow300'\n          : 'green300';\n      iconDirection = rule.thresholdType === AlertRuleThresholdType.ABOVE ? 'up' : 'down';\n    } else {\n      // Use the Resolved threshold type, which is opposite of Critical\n      iconDirection = rule.thresholdType === AlertRuleThresholdType.ABOVE ? 'down' : 'up';\n      thresholdTypeText =\n        rule.thresholdType === AlertRuleThresholdType.ABOVE ? t('Below') : t('Above');\n    }\n\n    return (\n      <FlexCenter>\n        <IconArrow color={iconColor} direction={iconDirection} />\n        <TriggerText>\n          {`${thresholdTypeText} ${\n            rule.latestIncident || (!rule.latestIncident && !resolvedTrigger)\n              ? trigger?.alertThreshold?.toLocaleString()\n              : resolvedTrigger?.toLocaleString()\n          }`}\n          {getThresholdUnits(\n            rule.aggregate,\n            rule.comparisonDelta\n              ? AlertRuleComparisonType.CHANGE\n              : AlertRuleComparisonType.COUNT\n          )}\n        </TriggerText>\n      </FlexCenter>\n    );\n  }\n\n  const slug = rule.projects[0];\n  const editLink = `/organizations/${orgId}/alerts/${\n    isIssueAlert(rule) ? 'rules' : 'metric-rules'\n  }/${slug}/${rule.id}/`;\n\n  const duplicateLink = {\n    pathname: `/organizations/${orgId}/alerts/new/${\n      rule.type === CombinedAlertType.METRIC ? 'metric' : 'issue'\n    }/`,\n    query: {\n      project: slug,\n      duplicateRuleId: rule.id,\n      createFromDuplicate: true,\n      referrer: 'alert_stream',\n    },\n  };\n\n  const detailsLink = `/organizations/${orgId}/alerts/rules/details/${rule.id}/`;\n\n  const ownerId = rule.owner?.split(':')[1];\n  const teamActor = ownerId\n    ? {type: 'team' as Actor['type'], id: ownerId, name: ''}\n    : null;\n\n  const canEdit = ownerId ? userTeams.has(ownerId) : true;\n  const alertLink = isIssueAlert(rule) ? (\n    <Link\n      to={`/organizations/${orgId}/alerts/rules/${rule.projects[0]}/${rule.id}/details/`}\n    >\n      {rule.name}\n    </Link>\n  ) : (\n    <TitleLink to={isIssueAlert(rule) ? editLink : detailsLink}>{rule.name}</TitleLink>\n  );\n\n  const IssueStatusText: Record<IncidentStatus, string> = {\n    [IncidentStatus.CRITICAL]: t('Critical'),\n    [IncidentStatus.WARNING]: t('Warning'),\n    [IncidentStatus.CLOSED]: t('Resolved'),\n    [IncidentStatus.OPENED]: t('Resolved'),\n  };\n\n  const actions: MenuItemProps[] = [\n    {\n      key: 'edit',\n      label: t('Edit'),\n      to: editLink,\n    },\n    {\n      key: 'duplicate',\n      label: t('Duplicate'),\n      to: duplicateLink,\n    },\n    {\n      key: 'delete',\n      label: t('Delete'),\n      priority: 'danger',\n      onAction: () => {\n        openConfirmModal({\n          onConfirm: () => onDelete(slug, rule),\n          header: t('Delete Alert Rule?'),\n          message: tct(\n            \"Are you sure you want to delete [name]? You won't be able to view the history of this alert once it's deleted.\",\n            {name: rule.name}\n          ),\n          confirmText: t('Delete Rule'),\n          priority: 'danger',\n        });\n      },\n    },\n  ];\n\n  function handleOwnerChange({value}: {value: string}) {\n    const ownerValue = value && `team:${value}`;\n    setAssignee(ownerValue);\n    onOwnerChange(slug, rule, ownerValue);\n  }\n\n  const unassignedOption = {\n    value: '',\n    label: () => (\n      <MenuItemWrapper>\n        <StyledIconUser size=\"20px\" />\n        {t('Unassigned')}\n      </MenuItemWrapper>\n    ),\n    searchKey: 'unassigned',\n    actor: '',\n    disabled: false,\n  };\n\n  const projectRow = projects.filter(project => project.slug === slug);\n  const projectRowTeams = projectRow[0].teams;\n  const filteredProjectTeams = projectRowTeams?.filter(projTeam => {\n    return userTeams.has(projTeam.id);\n  });\n  const dropdownTeams = filteredProjectTeams\n    ?.map((team, idx) => ({\n      value: team.id,\n      searchKey: team.slug,\n      label: ({inputValue}) => (\n        <MenuItemWrapper data-test-id=\"assignee-option\" key={idx}>\n          <IconContainer>\n            <TeamAvatar team={team} size={24} />\n          </IconContainer>\n          <Label>\n            <Highlight text={inputValue}>{`#${team.slug}`}</Highlight>\n          </Label>\n        </MenuItemWrapper>\n      ),\n    }))\n    .concat(unassignedOption);\n\n  const teamId = assignee?.split(':')[1];\n  const teamName = filteredProjectTeams?.find(team => team.id === teamId);\n\n  const assigneeTeamActor = assignee && {\n    type: 'team' as Actor['type'],\n    id: teamId,\n    name: '',\n  };\n\n  const avatarElement = assigneeTeamActor ? (\n    <ActorAvatar\n      actor={assigneeTeamActor}\n      className=\"avatar\"\n      size={24}\n      tooltip={\n        <TooltipWrapper>\n          {tct('Assigned to [name]', {\n            name: teamName && `#${teamName.name}`,\n          })}\n        </TooltipWrapper>\n      }\n    />\n  ) : (\n    <Tooltip isHoverable skipWrapper title={t('Unassigned')}>\n      <StyledIconUser size=\"20px\" color=\"gray400\" />\n    </Tooltip>\n  );\n\n  return (\n    <ErrorBoundary>\n      <AlertNameWrapper isIssueAlert={isIssueAlert(rule)}>\n        <FlexCenter>\n          <Tooltip\n            title={\n              isIssueAlert(rule)\n                ? t('Issue Alert')\n                : tct('Metric Alert Status: [status]', {\n                    status:\n                      IssueStatusText[\n                        rule?.latestIncident?.status ?? IncidentStatus.CLOSED\n                      ],\n                  })\n            }\n          >\n            <AlertBadge\n              status={rule?.latestIncident?.status}\n              isIssue={isIssueAlert(rule)}\n              hideText\n            />\n          </Tooltip>\n        </FlexCenter>\n        <AlertNameAndStatus>\n          <AlertName>{alertLink}</AlertName>\n          <AlertIncidentDate>{renderLastIncidentDate()}</AlertIncidentDate>\n        </AlertNameAndStatus>\n      </AlertNameWrapper>\n      <FlexCenter>{renderAlertRuleStatus()}</FlexCenter>\n      <FlexCenter>\n        <ProjectBadgeContainer>\n          <ProjectBadge\n            avatarSize={18}\n            project={!projectsLoaded ? {slug} : getProject(slug, projects)}\n          />\n        </ProjectBadgeContainer>\n      </FlexCenter>\n\n      <FlexCenter>\n        {teamActor ? (\n          <ActorAvatar actor={teamActor} size={24} />\n        ) : (\n          <AssigneeWrapper>\n            {!projectsLoaded && (\n              <LoadingIndicator\n                mini\n                style={{height: '24px', margin: 0, marginRight: 11}}\n              />\n            )}\n            {projectsLoaded && (\n              <DropdownAutoComplete\n                data-test-id=\"alert-row-assignee\"\n                maxHeight={400}\n                onOpen={e => {\n                  e?.stopPropagation();\n                }}\n                items={dropdownTeams}\n                alignMenu=\"right\"\n                onSelect={handleOwnerChange}\n                itemSize=\"small\"\n                searchPlaceholder={t('Filter teams')}\n                disableLabelPadding\n                emptyHidesInput\n                disabled={!hasEditAccess}\n              >\n                {({getActorProps, isOpen}) => (\n                  <DropdownButton {...getActorProps({})}>\n                    {avatarElement}\n                    {hasEditAccess && (\n                      <StyledChevron direction={isOpen ? 'up' : 'down'} size=\"xs\" />\n                    )}\n                  </DropdownButton>\n                )}\n              </DropdownAutoComplete>\n            )}\n          </AssigneeWrapper>\n        )}\n      </FlexCenter>\n      <ActionsRow>\n        <Access access={['alerts:write']}>\n          {({hasAccess}) => (\n            <DropdownMenuControl\n              items={actions}\n              placement=\"bottom right\"\n              triggerProps={{\n                'aria-label': t('Show more'),\n                'data-test-id': 'alert-row-actions',\n                size: 'xs',\n                icon: <IconEllipsis size=\"xs\" />,\n                showChevron: false,\n              }}\n              disabledKeys={hasAccess && canEdit ? [] : ['delete']}\n            />\n          )}\n        </Access>\n      </ActionsRow>\n    </ErrorBoundary>\n  );\n}\n\nconst TitleLink = styled(Link)`\n  ${p => p.theme.overflowEllipsis}\n`;\n\nconst FlexCenter = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst AlertNameWrapper = styled(FlexCenter)<{isIssueAlert?: boolean}>`\n  position: relative;\n  ${p => p.isIssueAlert && `padding: ${space(3)} ${space(2)}; line-height: 2.4;`}\n`;\n\nconst AlertNameAndStatus = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n  margin-left: ${space(2)};\n  line-height: 1.35;\n`;\n\nconst AlertName = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n  font-size: ${p => p.theme.fontSizeLarge};\n\n  @media (max-width: ${p => p.theme.breakpoints.xlarge}) {\n    max-width: 300px;\n  }\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    max-width: 165px;\n  }\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    max-width: 100px;\n  }\n`;\n\nconst AlertIncidentDate = styled('div')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst ProjectBadgeContainer = styled('div')`\n  width: 100%;\n`;\n\nconst ProjectBadge = styled(IdBadge)`\n  flex-shrink: 0;\n`;\n\nconst TriggerText = styled('div')`\n  margin-left: ${space(1)};\n  white-space: nowrap;\n  font-variant-numeric: tabular-nums;\n`;\n\nconst ActionsRow = styled(FlexCenter)`\n  justify-content: center;\n  padding: ${space(1)};\n`;\n\nconst AssigneeWrapper = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n\n  /* manually align menu underneath dropdown caret */\n  ${DropdownBubble} {\n    right: -14px;\n  }\n`;\n\nconst DropdownButton = styled('div')`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n`;\n\nconst StyledChevron = styled(IconChevron)`\n  margin-left: ${space(1)};\n`;\n\nconst TooltipWrapper = styled('div')`\n  text-align: left;\n`;\n\nconst StyledIconUser = styled(IconUser)`\n  /* We need this to center with Avatar */\n  margin-right: 2px;\n`;\n\nconst IconContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  flex-shrink: 0;\n`;\n\nconst MenuItemWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  font-size: 13px;\n`;\n\nconst Label = styled(TextOverflow)`\n  margin-left: 6px;\n`;\n\nexport default RuleListRow;\n","import {t} from 'sentry/locale';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {AggregationKeyWithAlias, LooseFieldKey} from 'sentry/utils/discover/fields';\nimport {AggregationKey} from 'sentry/utils/fields';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {\n  AlertRuleComparisonType,\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  Dataset,\n  Datasource,\n  EventTypes,\n  TimeWindow,\n  Trigger,\n  UnsavedMetricRule,\n} from 'sentry/views/alerts/rules/metric/types';\nimport {\n  DATA_SOURCE_TO_SET_AND_EVENT_TYPES,\n  getQueryDatasource,\n  isSessionAggregate,\n} from 'sentry/views/alerts/utils';\nimport {AlertType, WizardRuleTemplate} from 'sentry/views/alerts/wizard/options';\n\nexport const DEFAULT_COUNT_TIME_WINDOW = 1; // 1min\nexport const DEFAULT_CHANGE_TIME_WINDOW = 60; // 1h\nexport const DEFAULT_CHANGE_COMP_DELTA = 10080; // 1w\n\nexport const DEFAULT_AGGREGATE = 'count()';\nexport const DEFAULT_TRANSACTION_AGGREGATE = 'p95(transaction.duration)';\n\nexport const DATASET_EVENT_TYPE_FILTERS = {\n  [Dataset.ERRORS]: 'event.type:error',\n  [Dataset.TRANSACTIONS]: 'event.type:transaction',\n  [Dataset.GENERIC_METRICS]: 'event.type:transaction',\n} as const;\n\nexport const DATASOURCE_EVENT_TYPE_FILTERS = {\n  [Datasource.ERROR_DEFAULT]: 'event.type:[error, default]',\n  [Datasource.ERROR]: 'event.type:error',\n  [Datasource.DEFAULT]: 'event.type:default',\n  [Datasource.TRANSACTION]: 'event.type:transaction',\n} as const;\n\nexport type OptionConfig = {\n  aggregations: AggregationKeyWithAlias[];\n  fields: LooseFieldKey[];\n  measurementKeys?: string[];\n};\n\n/**\n * Allowed error aggregations for alerts\n */\nexport const errorFieldConfig: OptionConfig = {\n  aggregations: [AggregationKey.Count, AggregationKey.CountUnique],\n  fields: ['user'],\n};\n\nconst commonAggregations = [\n  AggregationKey.Avg,\n  AggregationKey.Percentile,\n  AggregationKey.P50,\n  AggregationKey.P75,\n  AggregationKey.P95,\n  AggregationKey.P99,\n  AggregationKey.P100,\n];\n\nconst allAggregations = [\n  ...commonAggregations,\n  AggregationKey.FailureRate,\n  AggregationKey.Apdex,\n  AggregationKey.Count,\n];\n\nexport const DuplicateMetricFields: string[] = [\n  'dataset',\n  'eventTypes',\n  'aggregate',\n  'query',\n  'timeWindow',\n  'thresholdPeriod',\n  'projects',\n  'environment',\n  'resolveThreshold',\n  'thresholdType',\n  'owner',\n  'name',\n  'projectId',\n  'comparisonDelta',\n];\n\nexport const DuplicateTriggerFields: string[] = ['alertThreshold', 'label'];\n\nexport const DuplicateActionFields: string[] = [\n  'type',\n  'targetType',\n  'targetIdentifier',\n  'inputChannelId',\n  'options',\n];\n\nexport const COMPARISON_DELTA_OPTIONS = [\n  {value: 5, label: t('same time 5 minutes ago')}, // 5 minutes\n  {value: 15, label: t('same time 15 minutes ago')}, // 15 minutes\n  {value: 60, label: t('same time one hour ago')}, // one hour\n  {value: 1440, label: t('same time one day ago')}, // one day\n  {value: 10080, label: t('same time one week ago')}, // one week\n  {value: 43200, label: t('same time one month ago')}, // 30 days\n];\n\nexport function getWizardAlertFieldConfig(\n  alertType: AlertType,\n  dataset: Dataset\n): OptionConfig {\n  if (alertType === 'custom' && dataset === Dataset.ERRORS) {\n    return errorFieldConfig;\n  }\n  // If user selected apdex we must include that in the OptionConfig as it has a user specified column\n  const aggregations =\n    alertType === 'apdex' || alertType === 'custom'\n      ? allAggregations\n      : commonAggregations;\n  return {\n    aggregations,\n    fields: ['transaction.duration'],\n    measurementKeys: Object.keys(WEB_VITAL_DETAILS),\n  };\n}\n\n/**\n * Allowed transaction aggregations for alerts\n */\nexport const transactionFieldConfig: OptionConfig = {\n  aggregations: allAggregations,\n  fields: ['transaction.duration'],\n  measurementKeys: Object.keys(WEB_VITAL_DETAILS),\n};\n\nexport function createDefaultTrigger(label: AlertRuleTriggerType): Trigger {\n  return {\n    label,\n    alertThreshold: '',\n    actions: [],\n  };\n}\n\nexport function createDefaultRule(\n  defaultRuleOptions: Partial<UnsavedMetricRule> = {}\n): UnsavedMetricRule {\n  return {\n    dataset: Dataset.ERRORS,\n    eventTypes: [EventTypes.ERROR],\n    aggregate: DEFAULT_AGGREGATE,\n    query: '',\n    timeWindow: 60,\n    thresholdPeriod: 1,\n    triggers: [\n      createDefaultTrigger(AlertRuleTriggerType.CRITICAL),\n      createDefaultTrigger(AlertRuleTriggerType.WARNING),\n    ],\n    projects: [],\n    environment: null,\n    resolveThreshold: '',\n    thresholdType: AlertRuleThresholdType.ABOVE,\n    ...defaultRuleOptions,\n  };\n}\n\n/**\n * Create an unsaved alert from a discover EventView object\n */\nexport function createRuleFromEventView(eventView: EventView): UnsavedMetricRule {\n  const parsedQuery = getQueryDatasource(eventView.query);\n  const datasetAndEventtypes = parsedQuery\n    ? DATA_SOURCE_TO_SET_AND_EVENT_TYPES[parsedQuery.source]\n    : DATA_SOURCE_TO_SET_AND_EVENT_TYPES.error;\n\n  let aggregate = eventView.getYAxis();\n  if (\n    datasetAndEventtypes.dataset === 'transactions' &&\n    /^p\\d{2,3}\\(\\)/.test(eventView.getYAxis())\n  ) {\n    // p95() -> p95(transaction.duration)\n    aggregate = eventView.getYAxis().slice(0, 3) + '(transaction.duration)';\n  }\n\n  return {\n    ...createDefaultRule(),\n    ...datasetAndEventtypes,\n    query: parsedQuery?.query ?? eventView.query,\n    aggregate,\n    environment: eventView.environment.length ? eventView.environment[0] : null,\n  };\n}\n\nexport function createRuleFromWizardTemplate(\n  wizardTemplate: WizardRuleTemplate\n): UnsavedMetricRule {\n  const {eventTypes, aggregate, dataset} = wizardTemplate;\n  const defaultRuleOptions: Partial<UnsavedMetricRule> = {};\n\n  if (isSessionAggregate(aggregate)) {\n    defaultRuleOptions.thresholdType = AlertRuleThresholdType.BELOW;\n    defaultRuleOptions.timeWindow = TimeWindow.ONE_HOUR;\n  }\n\n  if (aggregate.includes('apdex')) {\n    defaultRuleOptions.thresholdType = AlertRuleThresholdType.BELOW;\n  }\n\n  return {\n    ...createDefaultRule(defaultRuleOptions),\n    eventTypes: [eventTypes],\n    aggregate,\n    dataset,\n  };\n}\n\nexport function getThresholdUnits(\n  aggregate: string,\n  comparisonType: AlertRuleComparisonType\n): string {\n  // cls is a number not a measurement of time\n  if (\n    isSessionAggregate(aggregate) ||\n    comparisonType === AlertRuleComparisonType.CHANGE\n  ) {\n    return '%';\n  }\n\n  if (aggregate.includes('measurements.cls')) {\n    return '';\n  }\n\n  if (aggregate.includes('duration') || aggregate.includes('measurements')) {\n    return 'ms';\n  }\n\n  return '';\n}\n"],"names":["IconCheckmark","IconDiamond","IconExclamation","IconFire","IconIssues","t","space","IncidentStatus","AlertBadge","status","hideText","isIssue","statusText","Icon","color","CRITICAL","WARNING","Wrapper","AlertIconWrapper","p","icon","AlertIconBackground","IncidentStatusValue","measurementType","MobileVital","WebVital","WEB_VITAL_DETAILS","FP","slug","name","acronym","description","poorThreshold","type","FCP","LCP","FID","CLS","TTFB","RequestTime","MOBILE_VITAL_DETAILS","AppStartCold","AppStartWarm","FramesTotal","FramesSlow","FramesFrozen","FramesSlowRate","FramesFrozenRate","StallCount","StallTotalTime","StallLongestTime","StallPercentage","Browser","Component","addErrorMessage","addMessage","AsyncComponent","HookOrDefault","Layout","Link","PageFiltersContainer","Pagination","PanelTable","SentryDocumentTitle","IconArrow","trackAdvancedAnalyticsEvent","Projects","Teams","withPageFilters","FilterBar","AlertRuleType","getTeamParams","isIssueAlert","AlertHeader","RuleListRow","HookHeader","hookName","AlertRulesList","activeFilters","router","location","props","cursor","_cursor","page","_page","currentQuery","query","push","pathname","team","length","projectId","rule","ownerValue","orgId","params","alertPath","endpoint","id","updatedRule","owner","api","request","method","data","success","error","requestPromise","reloadData","_err","getEndpoints","expand","sort","onRequestSuccess","stateKey","resp","issueRuleCount","getResponseHeader","alertRuleCount","setState","parseInt","projectsFromIncidents","ruleList","state","Set","map","projects","flat","renderLoading","renderBody","renderList","organization","loading","ruleListPageLinks","hasEditAccess","access","includes","asc","field","isAlertRuleSort","sortArrow","undefined","handleChangeFilter","handleChangeSearch","initiallyLoaded","loadedTeams","teams","handleOwnerChange","handleDeleteRule","METRIC","ISSUE","path","_direction","AlertRulesListContainer","componentDidMount","trackView","componentDidUpdate","prevProps","Array","isArray","join","render","StyledSortLink","StyledPanelTable","theme","breakpoints","small","fontSizeMedium","useState","memoize","Access","ActorAvatar","TeamAvatar","openConfirmModal","DropdownAutoComplete","DropdownBubble","DropdownMenuControl","ErrorBoundary","Highlight","IdBadge","LoadingIndicator","TextOverflow","TimeSince","Tooltip","IconChevron","IconEllipsis","IconUser","tct","getThresholdUnits","AlertRuleComparisonType","AlertRuleThresholdType","AlertRuleTriggerType","CombinedAlertType","getProject","find","project","projectsLoaded","onDelete","onOwnerChange","userTeams","assignee","setAssignee","activeIncident","latestIncident","renderLastIncidentDate","lastTriggered","dateCreated","dateClosed","renderAlertRuleStatus","criticalTrigger","triggers","label","warningTrigger","resolvedTrigger","resolveThreshold","trigger","iconColor","iconDirection","thresholdTypeText","thresholdType","ABOVE","alertThreshold","toLocaleString","aggregate","comparisonDelta","CHANGE","COUNT","editLink","duplicateLink","duplicateRuleId","createFromDuplicate","referrer","detailsLink","ownerId","split","teamActor","canEdit","has","alertLink","IssueStatusText","CLOSED","OPENED","actions","key","to","priority","onAction","onConfirm","header","message","confirmText","value","unassignedOption","searchKey","actor","disabled","projectRow","filter","projectRowTeams","filteredProjectTeams","projTeam","dropdownTeams","idx","inputValue","concat","teamId","teamName","assigneeTeamActor","avatarElement","height","margin","marginRight","e","stopPropagation","getActorProps","isOpen","hasAccess","size","showChevron","TitleLink","overflowEllipsis","FlexCenter","AlertNameWrapper","AlertNameAndStatus","AlertName","fontSizeLarge","xlarge","large","medium","AlertIncidentDate","gray300","ProjectBadgeContainer","ProjectBadge","TriggerText","ActionsRow","AssigneeWrapper","DropdownButton","StyledChevron","TooltipWrapper","StyledIconUser","IconContainer","MenuItemWrapper","Label","AggregationKey","Dataset","Datasource","EventTypes","TimeWindow","DATA_SOURCE_TO_SET_AND_EVENT_TYPES","getQueryDatasource","isSessionAggregate","DEFAULT_COUNT_TIME_WINDOW","DEFAULT_CHANGE_TIME_WINDOW","DEFAULT_CHANGE_COMP_DELTA","DEFAULT_AGGREGATE","DEFAULT_TRANSACTION_AGGREGATE","DATASET_EVENT_TYPE_FILTERS","ERRORS","TRANSACTIONS","GENERIC_METRICS","DATASOURCE_EVENT_TYPE_FILTERS","ERROR_DEFAULT","ERROR","DEFAULT","TRANSACTION","errorFieldConfig","aggregations","Count","CountUnique","fields","commonAggregations","Avg","Percentile","P50","P75","P95","P99","P100","allAggregations","FailureRate","Apdex","DuplicateMetricFields","DuplicateTriggerFields","DuplicateActionFields","COMPARISON_DELTA_OPTIONS","getWizardAlertFieldConfig","alertType","dataset","measurementKeys","Object","keys","transactionFieldConfig","createDefaultTrigger","createDefaultRule","defaultRuleOptions","eventTypes","timeWindow","thresholdPeriod","environment","createRuleFromEventView","eventView","parsedQuery","datasetAndEventtypes","source","getYAxis","test","slice","createRuleFromWizardTemplate","wizardTemplate","BELOW","ONE_HOUR","comparisonType"],"sourceRoot":""}