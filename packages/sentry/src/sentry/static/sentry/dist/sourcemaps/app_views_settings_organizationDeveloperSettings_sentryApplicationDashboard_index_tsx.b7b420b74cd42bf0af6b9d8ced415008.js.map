{"version":3,"file":"chunks/app_views_settings_organizationDeveloperSettings_sentryApplicationDashboard_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard/index.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryApplicationDashboard/requestLog.tsx"],"sourcesContent":["import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type LineChartSeries = Series &\n  Omit<LineSeriesOption, 'data' | 'name'> & {\n    dataArray?: LineSeriesOption['data'];\n  };\n\nexport interface LineChartProps extends Omit<ChartProps, 'series'> {\n  series: LineChartSeries[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {BarChart} from 'sentry/components/charts/barChart';\nimport {LineChart, LineChartSeries} from 'sentry/components/charts/lineChart';\nimport DateTime from 'sentry/components/dateTime';\nimport Link from 'sentry/components/links/link';\nimport {Panel, PanelBody, PanelFooter, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {SentryApp} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport RequestLog from './requestLog';\n\ntype Props = RouteComponentProps<{appSlug: string; orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  app: SentryApp;\n  interactions: {\n    componentInteractions: {\n      [key: string]: [number, number][];\n    };\n    views: [number, number][];\n  };\n  stats: {\n    installStats: [number, number][];\n    totalInstalls: number;\n    totalUninstalls: number;\n    uninstallStats: [number, number][];\n  };\n};\n\nexport default class SentryApplicationDashboard extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {appSlug} = this.props.params;\n\n    // Default time range for now: 90 days ago to now\n    const now = Math.floor(new Date().getTime() / 1000);\n    const ninety_days_ago = 3600 * 24 * 90;\n\n    return [\n      [\n        'stats',\n        `/sentry-apps/${appSlug}/stats/`,\n        {query: {since: now - ninety_days_ago, until: now}},\n      ],\n\n      [\n        'interactions',\n        `/sentry-apps/${appSlug}/interaction/`,\n        {query: {since: now - ninety_days_ago, until: now}},\n      ],\n      ['app', `/sentry-apps/${appSlug}/`],\n    ];\n  }\n\n  getTitle() {\n    return t('Integration Dashboard');\n  }\n\n  renderInstallData() {\n    const {app, stats} = this.state;\n    const {totalUninstalls, totalInstalls} = stats;\n    return (\n      <Fragment>\n        <h5>{t('Installation & Interaction Data')}</h5>\n        <Row>\n          {app.datePublished ? (\n            <StatsSection>\n              <StatsHeader>{t('Date published')}</StatsHeader>\n              <DateTime dateOnly date={app.datePublished} />\n            </StatsSection>\n          ) : null}\n          <StatsSection>\n            <StatsHeader>{t('Total installs')}</StatsHeader>\n            <p>{totalInstalls}</p>\n          </StatsSection>\n          <StatsSection>\n            <StatsHeader>{t('Total uninstalls')}</StatsHeader>\n            <p>{totalUninstalls}</p>\n          </StatsSection>\n        </Row>\n        {this.renderInstallCharts()}\n      </Fragment>\n    );\n  }\n\n  renderInstallCharts() {\n    const {installStats, uninstallStats} = this.state.stats;\n\n    const installSeries = {\n      data: installStats.map(point => ({\n        name: point[0] * 1000,\n        value: point[1],\n      })),\n      seriesName: t('installed'),\n    };\n    const uninstallSeries = {\n      data: uninstallStats.map(point => ({\n        name: point[0] * 1000,\n        value: point[1],\n      })),\n      seriesName: t('uninstalled'),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Installations/Uninstallations over Last 90 Days')}</PanelHeader>\n        <ChartWrapper>\n          <BarChart\n            series={[installSeries, uninstallSeries]}\n            height={150}\n            stacked\n            isGroupedByDate\n            legend={{\n              show: true,\n              orient: 'horizontal',\n              data: ['installed', 'uninstalled'],\n              itemWidth: 15,\n            }}\n            yAxis={{type: 'value', minInterval: 1, max: 'dataMax'}}\n            xAxis={{type: 'time'}}\n            grid={{left: space(4), right: space(4)}}\n          />\n        </ChartWrapper>\n      </Panel>\n    );\n  }\n\n  renderIntegrationViews() {\n    const {views} = this.state.interactions;\n    const {appSlug, orgId} = this.props.params;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Integration Views')}</PanelHeader>\n        <PanelBody>\n          <InteractionsChart data={{Views: views}} />\n        </PanelBody>\n\n        <PanelFooter>\n          <StyledFooter>\n            {t('Integration views are measured through views on the ')}\n            <Link to={`/sentry-apps/${appSlug}/external-install/`}>\n              {t('external installation page')}\n            </Link>\n            {t(' and views on the Learn More/Install modal on the ')}\n            <Link to={`/settings/${orgId}/integrations/`}>{t('integrations page')}</Link>\n          </StyledFooter>\n        </PanelFooter>\n      </Panel>\n    );\n  }\n\n  renderComponentInteractions() {\n    const {componentInteractions} = this.state.interactions;\n    const componentInteractionsDetails = {\n      'stacktrace-link': t(\n        'Each link click or context menu open counts as one interaction'\n      ),\n      'issue-link': t('Each open of the issue link modal counts as one interaction'),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Component Interactions')}</PanelHeader>\n\n        <PanelBody>\n          <InteractionsChart data={componentInteractions} />\n        </PanelBody>\n\n        <PanelFooter>\n          <StyledFooter>\n            {Object.keys(componentInteractions).map(\n              (component, idx) =>\n                componentInteractionsDetails[component] && (\n                  <Fragment key={idx}>\n                    <strong>{`${component}: `}</strong>\n                    {componentInteractionsDetails[component]}\n                    <br />\n                  </Fragment>\n                )\n            )}\n          </StyledFooter>\n        </PanelFooter>\n      </Panel>\n    );\n  }\n\n  renderBody() {\n    const {app} = this.state;\n\n    return (\n      <div>\n        <SettingsPageHeader title={`${t('Integration Dashboard')} - ${app.name}`} />\n        {app.status === 'published' && this.renderInstallData()}\n        {app.status === 'published' && this.renderIntegrationViews()}\n        {app.schema.elements && this.renderComponentInteractions()}\n        <RequestLog app={app} />\n      </div>\n    );\n  }\n}\n\ntype InteractionsChartProps = {\n  data: {\n    [key: string]: [number, number][];\n  };\n};\nconst InteractionsChart = ({data}: InteractionsChartProps) => {\n  const elementInteractionsSeries: LineChartSeries[] = Object.keys(data).map(\n    (key: string) => {\n      const seriesData = data[key].map(point => ({\n        value: point[1],\n        name: point[0] * 1000,\n      }));\n      return {\n        seriesName: key,\n        data: seriesData,\n      };\n    }\n  );\n\n  return (\n    <ChartWrapper>\n      <LineChart\n        isGroupedByDate\n        series={elementInteractionsSeries}\n        grid={{left: space(4), right: space(4)}}\n        legend={{\n          show: true,\n          orient: 'horizontal',\n          data: Object.keys(data),\n        }}\n      />\n    </ChartWrapper>\n  );\n};\n\nconst Row = styled('div')`\n  display: flex;\n`;\n\nconst StatsSection = styled('div')`\n  margin-right: ${space(4)};\n`;\nconst StatsHeader = styled('h6')`\n  margin-bottom: ${space(1)};\n  font-size: 12px;\n  text-transform: uppercase;\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledFooter = styled('div')`\n  padding: ${space(1.5)};\n`;\n\nconst ChartWrapper = styled('div')`\n  padding-top: ${space(3)};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport memoize from 'lodash/memoize';\nimport moment from 'moment-timezone';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button, {StyledButton} from 'sentry/components/button';\nimport Checkbox from 'sentry/components/checkbox';\nimport DateTime from 'sentry/components/dateTime';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Tag from 'sentry/components/tag';\nimport {IconChevron, IconFlag, IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {SentryApp, SentryAppSchemaIssueLink, SentryAppWebhookRequest} from 'sentry/types';\nimport {shouldUse24Hours} from 'sentry/utils/dates';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nconst ALL_EVENTS = t('All Events');\nconst MAX_PER_PAGE = 10;\nconst is24Hours = shouldUse24Hours();\n\nconst componentHasSelectUri = (issueLinkComponent: SentryAppSchemaIssueLink): boolean => {\n  const hasSelectUri = (fields: any[]): boolean =>\n    fields.some(field => field.type === 'select' && 'uri' in field);\n\n  const createHasSelectUri =\n    hasSelectUri(issueLinkComponent.create.required_fields) ||\n    hasSelectUri(issueLinkComponent.create.optional_fields || []);\n\n  const linkHasSelectUri =\n    hasSelectUri(issueLinkComponent.link.required_fields) ||\n    hasSelectUri(issueLinkComponent.link.optional_fields || []);\n\n  return createHasSelectUri || linkHasSelectUri;\n};\n\nconst getEventTypes = memoize((app: SentryApp) => {\n  // TODO(nola): ideally this would be kept in sync with EXTENDED_VALID_EVENTS on the backend\n\n  let issueLinkEvents: string[] = [];\n  const issueLinkComponent = (app.schema.elements || []).find(\n    element => element.type === 'issue-link'\n  );\n  if (issueLinkComponent) {\n    issueLinkEvents = ['external_issue.created', 'external_issue.linked'];\n    if (componentHasSelectUri(issueLinkComponent as SentryAppSchemaIssueLink)) {\n      issueLinkEvents.push('select_options.requested');\n    }\n  }\n\n  const events = [\n    ALL_EVENTS,\n    // Internal apps don't have installation webhooks\n    ...(app.status !== 'internal'\n      ? ['installation.created', 'installation.deleted']\n      : []),\n    ...(app.events.includes('error') ? ['error.created'] : []),\n    ...(app.events.includes('issue')\n      ? ['issue.created', 'issue.resolved', 'issue.ignored', 'issue.assigned']\n      : []),\n    ...(app.isAlertable\n      ? [\n          'event_alert.triggered',\n          'metric_alert.open',\n          'metric_alert.resolved',\n          'metric_alert.critical',\n          'metric_alert.warning',\n        ]\n      : []),\n    ...issueLinkEvents,\n  ];\n\n  return events;\n});\n\nconst ResponseCode = ({code}: {code: number}) => {\n  let type: React.ComponentProps<typeof Tag>['type'] = 'error';\n  if (code <= 399 && code >= 300) {\n    type = 'warning';\n  } else if (code <= 299 && code >= 100) {\n    type = 'success';\n  }\n\n  return (\n    <Tags>\n      <StyledTag type={type}>{code === 0 ? 'timeout' : code}</StyledTag>\n    </Tags>\n  );\n};\n\nconst TimestampLink = ({date, link}: {date: moment.MomentInput; link?: string}) =>\n  link ? (\n    <ExternalLink href={link}>\n      <DateTime date={date} />\n      <StyledIconOpen size=\"12px\" />\n    </ExternalLink>\n  ) : (\n    <DateTime date={date} format={is24Hours ? 'MMM D, YYYY HH:mm:ss z' : 'll LTS z'} />\n  );\n\ntype Props = AsyncComponent['props'] & {\n  app: SentryApp;\n};\n\ntype State = AsyncComponent['state'] & {\n  currentPage: number;\n  errorsOnly: boolean;\n  eventType: string;\n  requests: SentryAppWebhookRequest[];\n};\n\nexport default class RequestLog extends AsyncComponent<Props, State> {\n  shouldReload = true;\n\n  get hasNextPage() {\n    return (this.state.currentPage + 1) * MAX_PER_PAGE < this.state.requests.length;\n  }\n\n  get hasPrevPage() {\n    return this.state.currentPage > 0;\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {slug} = this.props.app;\n\n    const query: any = {};\n    if (this.state) {\n      if (this.state.eventType !== ALL_EVENTS) {\n        query.eventType = this.state.eventType;\n      }\n      if (this.state.errorsOnly) {\n        query.errorsOnly = true;\n      }\n    }\n\n    return [['requests', `/sentry-apps/${slug}/requests/`, {query}]];\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      requests: [],\n      eventType: ALL_EVENTS,\n      errorsOnly: false,\n      currentPage: 0,\n    };\n  }\n\n  handleChangeEventType = (eventType: string) => {\n    this.setState(\n      {\n        eventType,\n        currentPage: 0,\n      },\n      this.remountComponent\n    );\n  };\n\n  handleChangeErrorsOnly = () => {\n    this.setState(\n      {\n        errorsOnly: !this.state.errorsOnly,\n        currentPage: 0,\n      },\n      this.remountComponent\n    );\n  };\n\n  handleNextPage = () => {\n    this.setState({\n      currentPage: this.state.currentPage + 1,\n    });\n  };\n\n  handlePrevPage = () => {\n    this.setState({\n      currentPage: this.state.currentPage - 1,\n    });\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {requests, eventType, errorsOnly, currentPage} = this.state;\n    const {app} = this.props;\n\n    const currentRequests = requests.slice(\n      currentPage * MAX_PER_PAGE,\n      (currentPage + 1) * MAX_PER_PAGE\n    );\n\n    return (\n      <Fragment>\n        <h5>{t('Request Log')}</h5>\n\n        <div>\n          <p>\n            {t(\n              'This log shows the status of any outgoing webhook requests from Sentry to your integration.'\n            )}\n          </p>\n\n          <RequestLogFilters>\n            <CompactSelect\n              triggerLabel={eventType}\n              value={eventType}\n              options={getEventTypes(app).map(type => ({\n                value: type,\n                label: type,\n              }))}\n              onChange={opt => this.handleChangeEventType(opt?.value)}\n            />\n\n            <StyledErrorsOnlyButton onClick={this.handleChangeErrorsOnly}>\n              <ErrorsOnlyCheckbox>\n                <Checkbox checked={errorsOnly} onChange={() => {}} />\n                {t('Errors Only')}\n              </ErrorsOnlyCheckbox>\n            </StyledErrorsOnlyButton>\n          </RequestLogFilters>\n        </div>\n\n        <Panel>\n          <PanelHeader>\n            <TableLayout hasOrganization={app.status !== 'internal'}>\n              <div>{t('Time')}</div>\n              <div>{t('Status Code')}</div>\n              {app.status !== 'internal' && <div>{t('Organization')}</div>}\n              <div>{t('Event Type')}</div>\n              <div>{t('Webhook URL')}</div>\n            </TableLayout>\n          </PanelHeader>\n\n          {!this.state.loading ? (\n            <PanelBody>\n              {currentRequests.length > 0 ? (\n                currentRequests.map((request, idx) => (\n                  <PanelItem key={idx}>\n                    <TableLayout hasOrganization={app.status !== 'internal'}>\n                      <TimestampLink date={request.date} link={request.errorUrl} />\n                      <ResponseCode code={request.responseCode} />\n                      {app.status !== 'internal' && (\n                        <div>\n                          {request.organization ? request.organization.name : null}\n                        </div>\n                      )}\n                      <div>{request.eventType}</div>\n                      <OverflowBox>{request.webhookUrl}</OverflowBox>\n                    </TableLayout>\n                  </PanelItem>\n                ))\n              ) : (\n                <EmptyMessage icon={<IconFlag size=\"xl\" />}>\n                  {t('No requests found in the last 30 days.')}\n                </EmptyMessage>\n              )}\n            </PanelBody>\n          ) : (\n            <LoadingIndicator />\n          )}\n        </Panel>\n\n        <PaginationButtons>\n          <Button\n            icon={<IconChevron direction=\"left\" size=\"sm\" />}\n            onClick={this.handlePrevPage}\n            disabled={!this.hasPrevPage}\n            aria-label={t('Previous page')}\n          />\n          <Button\n            icon={<IconChevron direction=\"right\" size=\"sm\" />}\n            onClick={this.handleNextPage}\n            disabled={!this.hasNextPage}\n            aria-label={t('Next page')}\n          />\n        </PaginationButtons>\n      </Fragment>\n    );\n  }\n}\n\nconst TableLayout = styled('div')<{hasOrganization: boolean}>`\n  display: grid;\n  grid-template-columns: 1fr 0.5fr ${p => (p.hasOrganization ? '1fr' : '')} 1fr 1fr;\n  grid-column-gap: ${space(1.5)};\n  width: 100%;\n  align-items: center;\n`;\n\nconst OverflowBox = styled('div')`\n  word-break: break-word;\n`;\n\nconst PaginationButtons = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n\n  > :first-child {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  > :nth-child(2) {\n    margin-left: -1px;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n\nconst RequestLogFilters = styled('div')`\n  display: flex;\n  align-items: center;\n  padding-bottom: ${space(1)};\n\n  > :first-child ${StyledButton} {\n    border-radius: ${p => p.theme.borderRadiusLeft};\n  }\n`;\n\nconst ErrorsOnlyCheckbox = styled('div')`\n  input {\n    margin: 0 ${space(1)} 0 0;\n  }\n\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorsOnlyButton = styled(Button)`\n  margin-left: -1px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n\nconst StyledIconOpen = styled(IconOpen)`\n  margin-left: 6px;\n  color: ${p => p.theme.subText};\n`;\n\nconst Tags = styled('div')`\n  margin: -${space(0.5)};\n`;\n\nconst StyledTag = styled(Tag)`\n  padding: ${space(0.5)};\n  display: inline-flex;\n`;\n"],"names":["LineSeries","BaseChart","LineChart","series","seriesOptions","props","map","seriesName","data","dataArray","options","name","value","animation","animationThreshold","animationDuration","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Fragment","BarChart","DateTime","Link","Panel","PanelBody","PanelFooter","PanelHeader","t","space","SettingsPageHeader","RequestLog","SentryApplicationDashboard","getEndpoints","appSlug","params","now","Math","floor","Date","getTime","ninety_days_ago","query","since","until","renderInstallData","app","stats","state","totalUninstalls","totalInstalls","datePublished","renderInstallCharts","installStats","uninstallStats","installSeries","point","uninstallSeries","show","orient","itemWidth","type","minInterval","max","left","right","renderIntegrationViews","views","interactions","orgId","Views","renderComponentInteractions","componentInteractions","componentInteractionsDetails","Object","keys","component","idx","renderBody","status","schema","elements","InteractionsChart","elementInteractionsSeries","key","seriesData","Row","StatsSection","StatsHeader","p","theme","subText","StyledFooter","ChartWrapper","memoize","Button","StyledButton","Checkbox","CompactSelect","ExternalLink","LoadingIndicator","PanelItem","Tag","IconChevron","IconFlag","IconOpen","shouldUse24Hours","EmptyMessage","ALL_EVENTS","MAX_PER_PAGE","is24Hours","componentHasSelectUri","issueLinkComponent","hasSelectUri","fields","some","field","createHasSelectUri","create","required_fields","optional_fields","linkHasSelectUri","link","getEventTypes","issueLinkEvents","find","element","push","events","includes","isAlertable","ResponseCode","code","TimestampLink","date","eventType","setState","currentPage","remountComponent","errorsOnly","hasNextPage","requests","length","hasPrevPage","slug","getDefaultState","renderLoading","currentRequests","slice","label","opt","handleChangeEventType","handleChangeErrorsOnly","loading","request","errorUrl","responseCode","organization","webhookUrl","handlePrevPage","handleNextPage","TableLayout","hasOrganization","OverflowBox","PaginationButtons","RequestLogFilters","borderRadiusLeft","ErrorsOnlyCheckbox","StyledErrorsOnlyButton","StyledIconOpen","Tags","StyledTag"],"sourceRoot":""}