{"version":3,"file":"chunks/app_utils_crashReports_tsx-app_views_settings_components_dataScrubbing_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/confirmDelete.tsx","webpack:///./app/utils/crashReports.tsx","webpack:///./app/views/settings/components/dataScrubbing/content.tsx","webpack:///./app/views/settings/components/dataScrubbing/convertRelayPiiConfig.tsx","webpack:///./app/views/settings/components/dataScrubbing/index.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/add.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/edit.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/form/eventIdField.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/form/eventIdFieldStatusIcon.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/form/index.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/form/selectField.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/form/sourceField.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/form/sourceSuggestionExamples.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/handleError.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/localStorage.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/modal.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/modalManager.tsx","webpack:///./app/views/settings/components/dataScrubbing/modals/utils.tsx","webpack:///./app/views/settings/components/dataScrubbing/organizationRules.tsx","webpack:///./app/views/settings/components/dataScrubbing/rules.tsx","webpack:///./app/views/settings/components/dataScrubbing/submitRules.tsx","webpack:///./app/views/settings/components/dataScrubbing/types.tsx","webpack:///./app/views/settings/components/dataScrubbing/utils.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport Confirm from 'sentry/components/confirm';\nimport Field from 'sentry/components/forms/field';\nimport Input from 'sentry/components/input';\nimport {t} from 'sentry/locale';\n\ninterface Props\n  extends Omit<React.ComponentProps<typeof Confirm>, 'renderConfirmMessage'> {\n  /**\n   * The string that the user must enter to confirm the deletion\n   */\n  confirmInput: string;\n}\n\nconst ConfirmDelete = ({message, confirmInput, ...props}: Props) => (\n  <Confirm\n    {...props}\n    bypass={false}\n    disableConfirmButton\n    renderMessage={({disableConfirmButton}) => (\n      <Fragment>\n        <Alert type=\"error\">{message}</Alert>\n        <Field\n          flexibleControlStateSize\n          inline={false}\n          label={t(\n            'Please enter %s to confirm the deletion',\n            <code>{confirmInput}</code>\n          )}\n        >\n          <Input\n            type=\"text\"\n            placeholder={confirmInput}\n            onChange={e => disableConfirmButton(e.target.value !== confirmInput)}\n          />\n        </Field>\n      </Fragment>\n    )}\n  />\n);\n\nexport default ConfirmDelete;\n","import {t, tct} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\n\nexport function formatStoreCrashReports(\n  value: number | null | '',\n  organizationValue?: number\n): React.ReactNode {\n  if (value === null && defined(organizationValue)) {\n    return tct('Inherit organization settings ([organizationValue])', {\n      organizationValue: formatStoreCrashReports(organizationValue),\n    });\n  }\n\n  if (value === -1) {\n    return t('Unlimited');\n  }\n\n  if (value === 0) {\n    return t('Disabled');\n  }\n\n  return tct('[value] per issue', {value});\n}\n\nexport enum SettingScope {\n  Organization,\n  Project,\n}\nexport function getStoreCrashReportsValues(settingScope: SettingScope) {\n  const values: Array<number | null> = [\n    0, // disabled\n    1, // limited per issue\n    5,\n    10,\n    20,\n    50,\n    100,\n    -1, // unlimited\n  ];\n\n  if (settingScope === SettingScope.Project) {\n    values.unshift(null); // inherit option\n  }\n\n  return values;\n}\n","import {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nimport Rules from './rules';\nimport {Rule} from './types';\n\ntype Props = {\n  onDeleteRule: (rule: Rule['id']) => () => void;\n  onEditRule: (rule: Rule['id']) => () => void;\n  rules: Array<Rule>;\n  disabled?: boolean;\n};\n\nconst Content = ({rules, disabled, onDeleteRule, onEditRule}: Props) => {\n  if (rules.length === 0) {\n    return (\n      <EmptyMessage\n        icon={<IconWarning size=\"xl\" />}\n        description={t('You have no data scrubbing rules')}\n      />\n    );\n  }\n\n  return (\n    <Rules\n      rules={rules}\n      onDeleteRule={onDeleteRule}\n      onEditRule={onEditRule}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default Content;\n","import {Applications, MethodType, PiiConfig, Rule, RuleDefault, RuleType} from './types';\n\n// Remap PII config format to something that is more usable in React. Ideally\n// we would stop doing this at some point and make some updates to how we\n// store this configuration on the server.\n//\n// For the time being the PII config format is documented at\n// https://getsentry.github.io/relay/pii-config/\n\nfunction convertRelayPiiConfig(relayPiiConfig?: string) {\n  const piiConfig = relayPiiConfig ? JSON.parse(relayPiiConfig) : {};\n  const rules: PiiConfig = piiConfig.rules || {};\n  const applications: Applications = piiConfig.applications || {};\n  const convertedRules: Array<Rule> = [];\n\n  for (const application in applications) {\n    for (const rule of applications[application]) {\n      const resolvedRule = rules[rule];\n      const id = convertedRules.length;\n      const source = application;\n\n      if (!resolvedRule) {\n        // Convert a \"built-in\" rule like \"@anything:remove\" to an object {\n        //   type: \"anything\",\n        //   method: \"remove\"\n        // }\n        if (rule[0] === '@') {\n          const typeAndMethod = rule.slice(1).split(':');\n          let [type] = typeAndMethod;\n          const [, method] = typeAndMethod;\n          if (type === 'urlauth') {\n            type = 'url_auth';\n          }\n          if (type === 'usssn') {\n            type = 'us_ssn';\n          }\n\n          convertedRules.push({\n            id,\n            method: method as RuleDefault['method'],\n            type: type as RuleDefault['type'],\n            source,\n          });\n        }\n        continue;\n      }\n\n      const {type, redaction} = resolvedRule;\n      const method = redaction.method as MethodType;\n\n      if (method === MethodType.REPLACE && resolvedRule.type === RuleType.PATTERN) {\n        convertedRules.push({\n          id,\n          method: MethodType.REPLACE,\n          type: RuleType.PATTERN,\n          source,\n          placeholder: redaction?.text,\n          pattern: resolvedRule.pattern,\n        });\n        continue;\n      }\n\n      if (method === MethodType.REPLACE) {\n        convertedRules.push({\n          id,\n          method: MethodType.REPLACE,\n          type,\n          source,\n          placeholder: redaction?.text,\n        });\n        continue;\n      }\n\n      if (resolvedRule.type === RuleType.PATTERN) {\n        convertedRules.push({\n          id,\n          method,\n          type: RuleType.PATTERN,\n          source,\n          pattern: resolvedRule.pattern,\n        });\n        continue;\n      }\n\n      convertedRules.push({id, method, type, source});\n    }\n  }\n\n  return convertedRules;\n}\n\nexport default convertRelayPiiConfig;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\n\nimport Add from './modals/add';\nimport Edit from './modals/edit';\nimport Content from './content';\nimport convertRelayPiiConfig from './convertRelayPiiConfig';\nimport OrganizationRules from './organizationRules';\nimport submitRules from './submitRules';\nimport {ProjectId, Rule} from './types';\n\nconst ADVANCED_DATASCRUBBING_LINK =\n  'https://docs.sentry.io/product/data-management-settings/scrubbing/advanced-datascrubbing/';\n\ntype Props<T extends ProjectId> = {\n  endpoint: string;\n  organization: Organization;\n  additionalContext?: React.ReactNode;\n  disabled?: boolean;\n  onSubmitSuccess?: (data: T extends undefined ? Organization : Project) => void;\n  projectId?: T;\n  relayPiiConfig?: string;\n};\n\ntype State = {\n  orgRules: Array<Rule>;\n  rules: Array<Rule>;\n  savedRules: Array<Rule>;\n  relayPiiConfig?: string;\n};\n\nclass DataScrubbing<T extends ProjectId = undefined> extends Component<Props<T>, State> {\n  state: State = {\n    rules: [],\n    savedRules: [],\n    relayPiiConfig: this.props.relayPiiConfig,\n    orgRules: [],\n  };\n\n  componentDidMount() {\n    this.loadRules();\n    this.loadOrganizationRules();\n  }\n\n  componentDidUpdate(_prevProps: Props<T>, prevState: State) {\n    if (prevState.relayPiiConfig !== this.state.relayPiiConfig) {\n      this.loadRules();\n    }\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api = new Client();\n\n  loadOrganizationRules() {\n    const {organization, projectId} = this.props;\n\n    if (projectId) {\n      try {\n        this.setState({\n          orgRules: convertRelayPiiConfig(organization.relayPiiConfig),\n        });\n      } catch {\n        addErrorMessage(t('Unable to load organization rules'));\n      }\n    }\n  }\n\n  loadRules() {\n    try {\n      const convertedRules = convertRelayPiiConfig(this.state.relayPiiConfig);\n      this.setState({\n        rules: convertedRules,\n        savedRules: convertedRules,\n      });\n    } catch {\n      addErrorMessage(t('Unable to load project rules'));\n    }\n  }\n\n  successfullySaved(\n    response: T extends undefined ? Organization : Project,\n    successMessage: string\n  ) {\n    const {onSubmitSuccess} = this.props;\n    this.setState({rules: convertRelayPiiConfig(response.relayPiiConfig)});\n    addSuccessMessage(successMessage);\n    onSubmitSuccess?.(response);\n  }\n\n  handleOpenAddModal = () => {\n    const {rules} = this.state;\n    openModal(modalProps => (\n      <Add\n        {...modalProps}\n        projectId={this.props.projectId}\n        savedRules={rules}\n        api={this.api}\n        endpoint={this.props.endpoint}\n        orgSlug={this.props.organization.slug}\n        onSubmitSuccess={response => {\n          this.successfullySaved(response, t('Successfully added data scrubbing rule'));\n        }}\n      />\n    ));\n  };\n\n  handleOpenEditModal = (id: Rule['id']) => () => {\n    const {rules} = this.state;\n    openModal(modalProps => (\n      <Edit\n        {...modalProps}\n        rule={rules[id]}\n        projectId={this.props.projectId}\n        savedRules={rules}\n        api={this.api}\n        endpoint={this.props.endpoint}\n        orgSlug={this.props.organization.slug}\n        onSubmitSuccess={response => {\n          this.successfullySaved(response, t('Successfully updated data scrubbing rule'));\n        }}\n      />\n    ));\n  };\n\n  handleDelete = (id: Rule['id']) => async () => {\n    const {rules} = this.state;\n    const filteredRules = rules.filter(rule => rule.id !== id);\n\n    try {\n      const data = await submitRules(this.api, this.props.endpoint, filteredRules);\n      if (data?.relayPiiConfig) {\n        const convertedRules = convertRelayPiiConfig(data.relayPiiConfig);\n\n        this.setState({rules: convertedRules});\n        addSuccessMessage(t('Successfully deleted data scrubbing rule'));\n      }\n    } catch {\n      addErrorMessage(t('An unknown error occurred while deleting data scrubbing rule'));\n    }\n  };\n\n  render() {\n    const {additionalContext, disabled, projectId} = this.props;\n    const {orgRules, rules} = this.state;\n\n    return (\n      <Panel data-test-id=\"advanced-data-scrubbing\" id=\"advanced-data-scrubbing\">\n        <PanelHeader>\n          <div>{t('Advanced Data Scrubbing')}</div>\n        </PanelHeader>\n        <PanelAlert type=\"info\">\n          {additionalContext}{' '}\n          {`${t('The new rules will only apply to upcoming events. ')}`}{' '}\n          {tct('For more details, see [linkToDocs].', {\n            linkToDocs: (\n              <ExternalLink href={ADVANCED_DATASCRUBBING_LINK}>\n                {t('full documentation on data scrubbing')}\n              </ExternalLink>\n            ),\n          })}\n        </PanelAlert>\n        <PanelBody>\n          {projectId && <OrganizationRules rules={orgRules} />}\n          <Content\n            rules={rules}\n            onDeleteRule={this.handleDelete}\n            onEditRule={this.handleOpenEditModal}\n            disabled={disabled}\n          />\n          <PanelAction>\n            <Button href={ADVANCED_DATASCRUBBING_LINK} external>\n              {t('Read Docs')}\n            </Button>\n            <Button\n              disabled={disabled}\n              onClick={this.handleOpenAddModal}\n              priority=\"primary\"\n            >\n              {t('Add Rule')}\n            </Button>\n          </PanelAction>\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default DataScrubbing;\n\nconst PanelAction = styled('div')`\n  padding: ${space(1)} ${space(2)};\n  position: relative;\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: auto auto;\n  justify-content: flex-end;\n  border-top: 1px solid ${p => p.theme.border};\n`;\n","import {t} from 'sentry/locale';\n\nimport {ProjectId, Rule} from '../types';\n\nimport ModalManager from './modalManager';\n\ntype ModalManagerProps<T extends ProjectId> = ModalManager<T>['props'];\ntype Props<T extends ProjectId> = Omit<\n  ModalManagerProps<T>,\n  'title' | 'initialValues' | 'onGetNewRules'\n>;\n\nconst Add = <T extends ProjectId = undefined>({savedRules, ...props}: Props<T>) => {\n  const handleGetNewRules = (\n    values: Parameters<ModalManagerProps<T>['onGetNewRules']>[0]\n  ) => {\n    return [...savedRules, {...values, id: savedRules.length}] as Array<Rule>;\n  };\n\n  return (\n    <ModalManager\n      {...props}\n      savedRules={savedRules}\n      title={t('Add an advanced data scrubbing rule')}\n      onGetNewRules={handleGetNewRules}\n    />\n  );\n};\n\nexport default Add;\n","import {t} from 'sentry/locale';\n\nimport {ProjectId, Rule} from '../types';\n\nimport ModalManager from './modalManager';\n\ntype ModalManagerProps<T extends ProjectId> = ModalManager<T>['props'];\ntype Props<T extends ProjectId> = Omit<\n  ModalManagerProps<T>,\n  'title' | 'initialValues' | 'onGetNewRules'\n> & {\n  rule: Rule;\n};\n\nconst Edit = <T extends ProjectId>({savedRules, rule, ...props}: Props<T>) => {\n  const handleGetNewRules = (\n    values: Parameters<ModalManagerProps<T>['onGetNewRules']>[0]\n  ) => {\n    const updatedRule = {...values, id: rule.id};\n\n    const newRules = savedRules.map(savedRule => {\n      if (savedRule.id === updatedRule.id) {\n        return updatedRule;\n      }\n      return savedRule;\n    }) as Array<Rule>;\n\n    return newRules;\n  };\n\n  return (\n    <ModalManager\n      {...props}\n      savedRules={savedRules}\n      title={t('Edit an advanced data scrubbing rule')}\n      initialState={rule}\n      onGetNewRules={handleGetNewRules}\n    />\n  );\n};\n\nexport default Edit;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport Field from 'sentry/components/forms/field';\nimport Input from 'sentry/components/input';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport {EventId, EventIdStatus} from '../../types';\nimport {saveToSourceGroupData} from '../utils';\n\nimport EventIdFieldStatusIcon from './eventIdFieldStatusIcon';\n\ntype Props = {\n  eventId: EventId;\n  onUpdateEventId: (eventId: string) => void;\n  disabled?: boolean;\n};\n\ntype State = {\n  status: EventIdStatus;\n  value: string;\n};\n\nclass EventIdField extends Component<Props, State> {\n  state: State = {...this.props.eventId};\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isEqual(prevProps.eventId, this.props.eventId)) {\n      this.loadState();\n    }\n  }\n\n  loadState() {\n    this.setState({\n      ...this.props.eventId,\n    });\n  }\n\n  getErrorMessage(): string | undefined {\n    const {status} = this.state;\n\n    switch (status) {\n      case EventIdStatus.INVALID:\n        return t('This event ID is invalid');\n      case EventIdStatus.ERROR:\n        return t(\n          'An error occurred while fetching the suggestions based on this event ID'\n        );\n      case EventIdStatus.NOT_FOUND:\n        return t('The chosen event ID was not found in projects you have access to');\n      default:\n        return undefined;\n    }\n  }\n\n  isEventIdValid(): boolean {\n    const {value, status} = this.state;\n\n    if (value && value.length !== 32) {\n      if (status !== EventIdStatus.INVALID) {\n        saveToSourceGroupData({value, status});\n        this.setState({status: EventIdStatus.INVALID});\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const eventId = event.target.value.replace(/-/g, '').trim();\n\n    if (eventId !== this.state.value) {\n      this.setState({\n        value: eventId,\n        status: EventIdStatus.UNDEFINED,\n      });\n    }\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    if (this.isEventIdValid()) {\n      this.props.onUpdateEventId(this.state.value);\n    }\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const {keyCode} = event;\n\n    if (keyCode === 13 && this.isEventIdValid()) {\n      this.props.onUpdateEventId(this.state.value);\n    }\n  };\n\n  handleClickIconClose = () => {\n    this.setState({\n      value: '',\n      status: EventIdStatus.UNDEFINED,\n    });\n  };\n\n  render() {\n    const {disabled} = this.props;\n    const {value, status} = this.state;\n\n    return (\n      <Field\n        data-test-id=\"event-id-field\"\n        label={t('Event ID (Optional)')}\n        help={t(\n          'Providing an event ID will automatically provide you a list of suggested sources'\n        )}\n        inline={false}\n        error={this.getErrorMessage()}\n        flexibleControlStateSize\n        stacked\n        showHelpInTooltip\n      >\n        <FieldWrapper>\n          <StyledInput\n            type=\"text\"\n            name=\"eventId\"\n            disabled={disabled}\n            value={value}\n            placeholder={t('XXXXXXXXXXXXXX')}\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleBlur}\n          />\n          <Status>\n            <EventIdFieldStatusIcon\n              onClickIconClose={this.handleClickIconClose}\n              status={status}\n            />\n          </Status>\n        </FieldWrapper>\n      </Field>\n    );\n  }\n}\nexport default EventIdField;\n\nconst StyledInput = styled(Input)`\n  flex: 1;\n  font-weight: 400;\n  input {\n    padding-right: ${space(1.5)};\n  }\n  margin-bottom: 0;\n`;\n\nconst Status = styled('div')`\n  height: 40px;\n  position: absolute;\n  right: ${space(1.5)};\n  top: 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst FieldWrapper = styled('div')`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n","import styled from '@emotion/styled';\n\nimport ControlState from 'sentry/components/forms/field/controlState';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\nimport {EventIdStatus} from '../../types';\n\ntype Props = {\n  onClickIconClose: () => void;\n  status?: EventIdStatus;\n};\n\nconst EventIdFieldStatusIcon = ({status, onClickIconClose}: Props) => {\n  switch (status) {\n    case EventIdStatus.ERROR:\n    case EventIdStatus.INVALID:\n    case EventIdStatus.NOT_FOUND:\n      return (\n        <CloseIcon onClick={onClickIconClose}>\n          <Tooltip title={t('Clear event ID')}>\n            <StyledIconClose size=\"xs\" />\n          </Tooltip>\n        </CloseIcon>\n      );\n    case EventIdStatus.LOADING:\n      return <ControlState isSaving />;\n    case EventIdStatus.LOADED:\n      return <IconCheckmark color=\"green300\" />;\n    default:\n      return null;\n  }\n};\n\nexport default EventIdFieldStatusIcon;\n\nconst CloseIcon = styled('div')`\n  :first-child {\n    line-height: 0;\n  }\n`;\n\nconst StyledIconClose = styled(IconClose)`\n  color: ${p => p.theme.gray200};\n  :hover {\n    color: ${p => p.theme.gray300};\n  }\n  cursor: pointer;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport sortBy from 'lodash/sortBy';\n\nimport Button from 'sentry/components/button';\nimport Field from 'sentry/components/forms/field';\nimport Input from 'sentry/components/input';\nimport {IconChevron} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport {\n  EventId,\n  KeysOfUnion,\n  MethodType,\n  Rule,\n  RuleType,\n  SourceSuggestion,\n} from '../../types';\nimport {getMethodLabel, getRuleLabel} from '../../utils';\n\nimport EventIdField from './eventIdField';\nimport SelectField from './selectField';\nimport SourceField from './sourceField';\n\ntype Values = Omit<Record<KeysOfUnion<Rule>, string>, 'id'>;\n\ntype Props<V extends Values, K extends keyof V> = {\n  errors: Partial<V>;\n  eventId: EventId;\n  onChange: (field: K, value: string) => void;\n  onUpdateEventId: (eventId: string) => void;\n  onValidate: (field: K) => () => void;\n  sourceSuggestions: Array<SourceSuggestion>;\n  values: V;\n};\n\ntype State = {\n  displayEventId: boolean;\n};\n\nclass Form extends Component<Props<Values, KeysOfUnion<Values>>, State> {\n  state: State = {displayEventId: !!this.props.eventId?.value};\n\n  handleChange =\n    <K extends keyof Values>(field: K) =>\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.props.onChange(field, event.target.value);\n    };\n\n  handleToggleEventId = () => {\n    this.setState(prevState => ({displayEventId: !prevState.displayEventId}));\n  };\n\n  render() {\n    const {\n      values,\n      onChange,\n      errors,\n      onValidate,\n      sourceSuggestions,\n      onUpdateEventId,\n      eventId,\n    } = this.props;\n    const {method, type, source} = values;\n    const {displayEventId} = this.state;\n\n    return (\n      <Fragment>\n        <FieldGroup hasTwoColumns={values.method === MethodType.REPLACE}>\n          <Field\n            data-test-id=\"method-field\"\n            label={t('Method')}\n            help={t('What to do')}\n            inline={false}\n            flexibleControlStateSize\n            stacked\n            showHelpInTooltip\n          >\n            <SelectField\n              placeholder={t('Select method')}\n              name=\"method\"\n              options={sortBy(Object.values(MethodType)).map(value => ({\n                ...getMethodLabel(value),\n                value,\n              }))}\n              value={method}\n              onChange={value => onChange('method', value?.value)}\n            />\n          </Field>\n          {values.method === MethodType.REPLACE && (\n            <Field\n              data-test-id=\"placeholder-field\"\n              label={t('Custom Placeholder (Optional)')}\n              help={t('It will replace the default placeholder [Filtered]')}\n              inline={false}\n              flexibleControlStateSize\n              stacked\n              showHelpInTooltip\n            >\n              <Input\n                type=\"text\"\n                name=\"placeholder\"\n                placeholder={`[${t('Filtered')}]`}\n                onChange={this.handleChange('placeholder')}\n                value={values.placeholder}\n              />\n            </Field>\n          )}\n        </FieldGroup>\n        <FieldGroup hasTwoColumns={values.type === RuleType.PATTERN}>\n          <Field\n            data-test-id=\"type-field\"\n            label={t('Data Type')}\n            help={t(\n              'What to look for. Use an existing pattern or define your own using regular expressions.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n            stacked\n            showHelpInTooltip\n          >\n            <SelectField\n              placeholder={t('Select type')}\n              name=\"type\"\n              options={sortBy(Object.values(RuleType)).map(value => ({\n                label: getRuleLabel(value),\n                value,\n              }))}\n              value={type}\n              onChange={value => onChange('type', value?.value)}\n            />\n          </Field>\n          {values.type === RuleType.PATTERN && (\n            <Field\n              data-test-id=\"regex-field\"\n              label={t('Regex matches')}\n              help={t('Custom regular expression (see documentation)')}\n              inline={false}\n              error={errors?.pattern}\n              flexibleControlStateSize\n              stacked\n              required\n              showHelpInTooltip\n            >\n              <RegularExpression\n                type=\"text\"\n                name=\"pattern\"\n                placeholder={t('[a-zA-Z0-9]+')}\n                onChange={this.handleChange('pattern')}\n                value={values.pattern}\n                onBlur={onValidate('pattern')}\n              />\n            </Field>\n          )}\n        </FieldGroup>\n        <ToggleWrapper>\n          {displayEventId ? (\n            <Toggle priority=\"link\" onClick={this.handleToggleEventId}>\n              {t('Hide event ID field')}\n              <IconChevron direction=\"up\" size=\"xs\" />\n            </Toggle>\n          ) : (\n            <Toggle priority=\"link\" onClick={this.handleToggleEventId}>\n              {t('Use event ID for auto-completion')}\n              <IconChevron direction=\"down\" size=\"xs\" />\n            </Toggle>\n          )}\n        </ToggleWrapper>\n        <SourceGroup isExpanded={displayEventId}>\n          {displayEventId && (\n            <EventIdField onUpdateEventId={onUpdateEventId} eventId={eventId} />\n          )}\n          <SourceField\n            onChange={value => onChange('source', value)}\n            value={source}\n            error={errors?.source}\n            onBlur={onValidate('source')}\n            isRegExMatchesSelected={type === RuleType.PATTERN}\n            suggestions={sourceSuggestions}\n          />\n        </SourceGroup>\n      </Fragment>\n    );\n  }\n}\n\nexport default Form;\n\nconst FieldGroup = styled('div')<{hasTwoColumns: boolean}>`\n  display: grid;\n  margin-bottom: ${space(2)};\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    gap: ${space(2)};\n    ${p => p.hasTwoColumns && `grid-template-columns: 1fr 1fr;`}\n    margin-bottom: ${p => (p.hasTwoColumns ? 0 : space(2))};\n  }\n`;\n\nconst SourceGroup = styled('div')<{isExpanded: boolean}>`\n  height: 65px;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  transition-property: height;\n  ${p =>\n    p.isExpanded &&\n    `\n    border-radius: ${p.theme.borderRadius};\n    border: 1px solid ${p.theme.border};\n    box-shadow: ${p.theme.dropShadowLight};\n    margin: ${space(2)} 0 ${space(3)} 0;\n    padding: ${space(2)};\n    height: 180px;\n  `}\n`;\n\nconst RegularExpression = styled(Input)`\n  font-family: ${p => p.theme.text.familyMono};\n`;\n\nconst ToggleWrapper = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst Toggle = styled(Button)`\n  font-weight: 700;\n  color: ${p => p.theme.subText};\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.textColor};\n  }\n  > *:first-child {\n    display: grid;\n    gap: ${space(0.5)};\n    grid-template-columns: repeat(2, max-content);\n    align-items: center;\n  }\n`;\n","import {Component, createRef} from 'react';\n\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\n\ntype Props = Pick<\n  ControlProps,\n  'value' | 'placeholder' | 'name' | 'onChange' | 'options'\n>;\n\nclass SelectField extends Component<Props> {\n  componentDidMount() {\n    if (!this.selectRef.current) {\n      return;\n    }\n\n    if (this.selectRef.current?.select?.inputRef) {\n      this.selectRef.current.select.inputRef.autocomplete = 'off';\n    }\n  }\n\n  // TODO(ts) The generics in react-select make getting a good type here hard.\n  selectRef = createRef<any>();\n\n  render() {\n    return (\n      <SelectControl\n        {...this.props}\n        isSearchable={false}\n        options={this.props.options.map(opt => ({\n          ...opt,\n          details: opt.description ? `(${opt.description})` : undefined,\n        }))}\n        styles={{\n          control: (provided: {[x: string]: string | number | boolean}) => ({\n            ...provided,\n            minHeight: '41px',\n            height: '41px',\n          }),\n        }}\n        ref={this.selectRef}\n        openOnFocus\n      />\n    );\n  }\n}\n\nexport default SelectField;\n","import {Component, createRef, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport InputField from 'sentry/components/forms/inputField';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\n\nimport {SourceSuggestion, SourceSuggestionType} from '../../types';\nimport {binarySuggestions, unarySuggestions} from '../../utils';\n\nimport SourceSuggestionExamples from './sourceSuggestionExamples';\n\nconst defaultHelp = t(\n  'Where to look. In the simplest case this can be an attribute name.'\n);\n\ntype Props = {\n  isRegExMatchesSelected: boolean;\n  onChange: (value: string) => void;\n  suggestions: Array<SourceSuggestion>;\n  value: string;\n  error?: string;\n  onBlur?: (value: string, event: React.FocusEvent<HTMLInputElement>) => void;\n};\n\ntype State = {\n  activeSuggestion: number;\n  fieldValues: Array<SourceSuggestion | Array<SourceSuggestion>>;\n  help: string;\n  hideCaret: boolean;\n  showSuggestions: boolean;\n  suggestions: Array<SourceSuggestion>;\n};\n\nclass SourceField extends Component<Props, State> {\n  state: State = {\n    suggestions: [],\n    fieldValues: [],\n    activeSuggestion: 0,\n    showSuggestions: false,\n    hideCaret: false,\n    help: defaultHelp,\n  };\n\n  componentDidMount() {\n    this.loadFieldValues(this.props.value);\n    this.toggleSuggestions(false);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.loadFieldValues(this.props.value);\n      this.toggleSuggestions(false);\n    }\n\n    if (\n      prevProps.isRegExMatchesSelected !== this.props.isRegExMatchesSelected ||\n      prevProps.value !== this.props.value\n    ) {\n      this.checkPossiblyRegExMatchExpression(this.props.value);\n    }\n  }\n\n  selectorField = createRef<HTMLDivElement>();\n  suggestionList = createRef<HTMLUListElement>();\n\n  getAllSuggestions() {\n    return [...this.getValueSuggestions(), ...unarySuggestions, ...binarySuggestions];\n  }\n\n  getValueSuggestions() {\n    return this.props.suggestions || [];\n  }\n\n  getFilteredSuggestions(value: string, type: SourceSuggestionType) {\n    let valuesToBeFiltered: Array<SourceSuggestion> = [];\n\n    switch (type) {\n      case SourceSuggestionType.BINARY: {\n        valuesToBeFiltered = binarySuggestions;\n        break;\n      }\n      case SourceSuggestionType.VALUE: {\n        valuesToBeFiltered = this.getValueSuggestions();\n        break;\n      }\n      case SourceSuggestionType.UNARY: {\n        valuesToBeFiltered = unarySuggestions;\n        break;\n      }\n      default: {\n        valuesToBeFiltered = [...this.getValueSuggestions(), ...unarySuggestions];\n      }\n    }\n\n    const filteredSuggestions = valuesToBeFiltered.filter(\n      s => s.value.toLowerCase().indexOf(value.toLowerCase()) > -1\n    );\n\n    return filteredSuggestions;\n  }\n\n  getNewSuggestions(fieldValues: Array<SourceSuggestion | Array<SourceSuggestion>>) {\n    const lastFieldValue = fieldValues[fieldValues.length - 1];\n    const penultimateFieldValue = fieldValues[fieldValues.length - 2];\n\n    if (Array.isArray(lastFieldValue)) {\n      // recursion\n      return this.getNewSuggestions(lastFieldValue);\n    }\n\n    if (Array.isArray(penultimateFieldValue)) {\n      if (lastFieldValue?.type === 'binary') {\n        // returns filtered values\n        return this.getFilteredSuggestions(\n          lastFieldValue?.value,\n          SourceSuggestionType.VALUE\n        );\n      }\n      // returns all binaries without any filter\n      return this.getFilteredSuggestions('', SourceSuggestionType.BINARY);\n    }\n\n    if (lastFieldValue?.type === 'value' && penultimateFieldValue?.type === 'unary') {\n      // returns filtered values\n      return this.getFilteredSuggestions(\n        lastFieldValue?.value,\n        SourceSuggestionType.VALUE\n      );\n    }\n\n    if (lastFieldValue?.type === 'unary') {\n      // returns all values without any filter\n      return this.getFilteredSuggestions('', SourceSuggestionType.VALUE);\n    }\n\n    if (lastFieldValue?.type === 'string' && penultimateFieldValue?.type === 'value') {\n      // returns all binaries without any filter\n      return this.getFilteredSuggestions('', SourceSuggestionType.BINARY);\n    }\n\n    if (\n      lastFieldValue?.type === 'string' &&\n      penultimateFieldValue?.type === 'string' &&\n      !penultimateFieldValue?.value\n    ) {\n      // returns all values without any filter\n      return this.getFilteredSuggestions('', SourceSuggestionType.STRING);\n    }\n\n    if (\n      (penultimateFieldValue?.type === 'string' && !lastFieldValue?.value) ||\n      (penultimateFieldValue?.type === 'value' && !lastFieldValue?.value) ||\n      lastFieldValue?.type === 'binary'\n    ) {\n      // returns filtered binaries\n      return this.getFilteredSuggestions(\n        lastFieldValue?.value,\n        SourceSuggestionType.BINARY\n      );\n    }\n\n    return this.getFilteredSuggestions(lastFieldValue?.value, lastFieldValue?.type);\n  }\n\n  loadFieldValues(newValue: string) {\n    const fieldValues: Array<SourceSuggestion | Array<SourceSuggestion>> = [];\n\n    const splittedValue = newValue.split(' ');\n\n    for (const splittedValueIndex in splittedValue) {\n      const value = splittedValue[splittedValueIndex];\n      const lastFieldValue = fieldValues[fieldValues.length - 1];\n\n      if (\n        lastFieldValue &&\n        !Array.isArray(lastFieldValue) &&\n        !lastFieldValue.value &&\n        !value\n      ) {\n        continue;\n      }\n\n      if (value.includes('!') && !!value.split('!')[1]) {\n        const valueAfterUnaryOperator = value.split('!')[1];\n        const selector = this.getAllSuggestions().find(\n          s => s.value === valueAfterUnaryOperator\n        );\n        if (!selector) {\n          fieldValues.push([\n            unarySuggestions[0],\n            {type: SourceSuggestionType.STRING, value: valueAfterUnaryOperator},\n          ]);\n          continue;\n        }\n        fieldValues.push([unarySuggestions[0], selector]);\n        continue;\n      }\n\n      const selector = this.getAllSuggestions().find(s => s.value === value);\n      if (selector) {\n        fieldValues.push(selector);\n        continue;\n      }\n\n      fieldValues.push({type: SourceSuggestionType.STRING, value});\n    }\n\n    const filteredSuggestions = this.getNewSuggestions(fieldValues);\n\n    this.setState({\n      fieldValues,\n      activeSuggestion: 0,\n      suggestions: filteredSuggestions,\n    });\n  }\n\n  scrollToSuggestion() {\n    const {activeSuggestion, hideCaret} = this.state;\n\n    this.suggestionList?.current?.children[activeSuggestion].scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest',\n      inline: 'start',\n    });\n\n    if (!hideCaret) {\n      this.setState({\n        hideCaret: true,\n      });\n    }\n  }\n\n  changeParentValue() {\n    const {onChange} = this.props;\n    const {fieldValues} = this.state;\n    const newValue: Array<string> = [];\n\n    for (const index in fieldValues) {\n      const fieldValue = fieldValues[index];\n      if (Array.isArray(fieldValue)) {\n        if (fieldValue[0]?.value || fieldValue[1]?.value) {\n          newValue.push(`${fieldValue[0]?.value ?? ''}${fieldValue[1]?.value ?? ''}`);\n        }\n        continue;\n      }\n      newValue.push(fieldValue.value);\n    }\n\n    onChange(newValue.join(' '));\n  }\n\n  getNewFieldValues(\n    suggestion: SourceSuggestion\n  ): Array<SourceSuggestion | Array<SourceSuggestion>> {\n    const fieldValues = [...this.state.fieldValues];\n    const lastFieldValue = fieldValues[fieldValues.length - 1];\n\n    if (!defined(lastFieldValue)) {\n      return [suggestion];\n    }\n\n    if (Array.isArray(lastFieldValue)) {\n      fieldValues[fieldValues.length - 1] = [lastFieldValue[0], suggestion];\n      return fieldValues;\n    }\n\n    if (lastFieldValue?.type === 'unary') {\n      fieldValues[fieldValues.length - 1] = [lastFieldValue, suggestion];\n    }\n\n    if (lastFieldValue?.type === 'string' && !lastFieldValue?.value) {\n      fieldValues[fieldValues.length - 1] = suggestion;\n      return fieldValues;\n    }\n\n    if (suggestion.type === 'value' && lastFieldValue?.value !== suggestion.value) {\n      return [suggestion];\n    }\n\n    return fieldValues;\n  }\n\n  checkPossiblyRegExMatchExpression(value: string) {\n    const {isRegExMatchesSelected} = this.props;\n    const {help} = this.state;\n\n    if (isRegExMatchesSelected) {\n      if (help) {\n        this.setState({help: ''});\n      }\n      return;\n    }\n\n    const isMaybeRegExp = RegExp('^/.*/g?$').test(value);\n\n    if (help) {\n      if (!isMaybeRegExp) {\n        this.setState({\n          help: defaultHelp,\n        });\n      }\n      return;\n    }\n\n    if (isMaybeRegExp) {\n      this.setState({\n        help: t(\"You might want to change Data Type's value to 'Regex matches'\"),\n      });\n    }\n  }\n\n  toggleSuggestions(showSuggestions: boolean) {\n    this.setState({showSuggestions});\n  }\n\n  handleChange = (value: string) => {\n    this.loadFieldValues(value);\n    this.props.onChange(value);\n  };\n\n  handleClickOutside = () => {\n    this.setState({\n      showSuggestions: false,\n      hideCaret: false,\n    });\n  };\n\n  handleClickSuggestionItem = (suggestion: SourceSuggestion) => {\n    const fieldValues = this.getNewFieldValues(suggestion);\n    this.setState(\n      {\n        fieldValues,\n        activeSuggestion: 0,\n        showSuggestions: false,\n        hideCaret: false,\n      },\n      this.changeParentValue\n    );\n  };\n\n  handleKeyDown = (_value: string, event: React.KeyboardEvent<HTMLInputElement>) => {\n    event.persist();\n\n    const {keyCode} = event;\n    const {activeSuggestion, suggestions} = this.state;\n\n    if (keyCode === 8 || keyCode === 32) {\n      this.toggleSuggestions(true);\n      return;\n    }\n\n    if (keyCode === 13) {\n      this.handleClickSuggestionItem(suggestions[activeSuggestion]);\n      return;\n    }\n\n    if (keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n      this.setState({activeSuggestion: activeSuggestion - 1}, () => {\n        this.scrollToSuggestion();\n      });\n      return;\n    }\n\n    if (keyCode === 40) {\n      if (activeSuggestion === suggestions.length - 1) {\n        return;\n      }\n      this.setState({activeSuggestion: activeSuggestion + 1}, () => {\n        this.scrollToSuggestion();\n      });\n      return;\n    }\n  };\n\n  handleFocus = () => {\n    this.toggleSuggestions(true);\n  };\n\n  render() {\n    const {error, value, onBlur} = this.props;\n    const {showSuggestions, suggestions, activeSuggestion, hideCaret, help} = this.state;\n\n    return (\n      <Wrapper ref={this.selectorField} hideCaret={hideCaret}>\n        <StyledInput\n          data-test-id=\"source-field\"\n          type=\"text\"\n          label={t('Source')}\n          name=\"source\"\n          placeholder={t('Enter a custom attribute, variable or header name')}\n          onChange={this.handleChange}\n          autoComplete=\"off\"\n          value={value}\n          error={error}\n          help={help}\n          onKeyDown={this.handleKeyDown}\n          onBlur={onBlur}\n          onFocus={this.handleFocus}\n          inline={false}\n          flexibleControlStateSize\n          stacked\n          required\n          showHelpInTooltip\n        />\n        {showSuggestions && suggestions.length > 0 && (\n          <Fragment>\n            <Suggestions\n              ref={this.suggestionList}\n              error={error}\n              data-test-id=\"source-suggestions\"\n            >\n              {suggestions.slice(0, 50).map((suggestion, index) => (\n                <Suggestion\n                  key={suggestion.value}\n                  onClick={event => {\n                    event.preventDefault();\n                    this.handleClickSuggestionItem(suggestion);\n                  }}\n                  active={index === activeSuggestion}\n                  tabIndex={-1}\n                >\n                  <TextOverflow>{suggestion.value}</TextOverflow>\n                  {suggestion.description && (\n                    <SuggestionDescription>\n                      (<TextOverflow>{suggestion.description}</TextOverflow>)\n                    </SuggestionDescription>\n                  )}\n                  {suggestion.examples && suggestion.examples.length > 0 && (\n                    <SourceSuggestionExamples\n                      examples={suggestion.examples}\n                      sourceName={suggestion.value}\n                    />\n                  )}\n                </Suggestion>\n              ))}\n            </Suggestions>\n            <SuggestionsOverlay onClick={this.handleClickOutside} />\n          </Fragment>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default SourceField;\n\nconst Wrapper = styled('div')<{hideCaret?: boolean}>`\n  position: relative;\n  width: 100%;\n  ${p => p.hideCaret && `caret-color: transparent;`}\n`;\n\nconst StyledInput = styled(InputField)`\n  z-index: 1002;\n  :focus {\n    outline: none;\n  }\n`;\n\nconst Suggestions = styled('ul')<{error?: string}>`\n  position: absolute;\n  width: ${p => (p.error ? 'calc(100% - 34px)' : '100%')};\n  padding-left: 0;\n  list-style: none;\n  margin-bottom: 0;\n  box-shadow: 0 2px 0 rgba(37, 11, 54, 0.04);\n  border: 1px solid ${p => p.theme.border};\n  border-radius: 0 0 ${space(0.5)} ${space(0.5)};\n  background: ${p => p.theme.background};\n  top: 63px;\n  left: 0;\n  z-index: 1002;\n  overflow: hidden;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n\nconst Suggestion = styled('li')<{active: boolean}>`\n  display: grid;\n  grid-template-columns: auto 1fr max-content;\n  gap: ${space(1)};\n  border-bottom: 1px solid ${p => p.theme.border};\n  padding: ${space(1)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  cursor: pointer;\n  background: ${p => (p.active ? p.theme.backgroundSecondary : p.theme.background)};\n  :hover {\n    background: ${p =>\n      p.active ? p.theme.backgroundSecondary : p.theme.backgroundSecondary};\n  }\n`;\n\nconst SuggestionDescription = styled('div')`\n  display: flex;\n  overflow: hidden;\n  color: ${p => p.theme.gray300};\n  line-height: 1.2;\n`;\n\nconst SuggestionsOverlay = styled('div')`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1001;\n`;\n","import styled from '@emotion/styled';\n\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {IconQuestion} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  examples: Array<string>;\n  sourceName: string;\n};\n\nconst SourceSuggestionExamples = ({examples, sourceName}: Props) => (\n  <Wrapper>\n    <ExampleCard\n      position=\"right\"\n      header={t('Examples for %s in current event', <code>{sourceName}</code>)}\n      body={examples.map(example => (\n        <pre key={example}>{example}</pre>\n      ))}\n    >\n      <Content>\n        {t('See Example')} <IconQuestion size=\"xs\" />\n      </Content>\n    </ExampleCard>\n  </Wrapper>\n);\n\nexport default SourceSuggestionExamples;\n\nconst ExampleCard = styled(Hovercard)`\n  width: 400px;\n\n  pre:last-child {\n    margin: 0;\n  }\n`;\n\nconst Content = styled('span')`\n  display: inline-grid;\n  grid-template-columns: repeat(2, max-content);\n  align-items: center;\n  gap: ${space(0.5)};\n  color: ${p => p.theme.gray400};\n  font-size: ${p => p.theme.fontSizeSmall};\n  text-decoration: underline;\n  text-decoration-style: dotted;\n`;\n\nconst Wrapper = styled('div')`\n  grid-column: 3/3;\n`;\n","import {t} from 'sentry/locale';\n\nexport enum ErrorType {\n  Unknown = 'unknown',\n  InvalidSelector = 'invalid-selector',\n  RegexParse = 'regex-parse',\n}\n\ntype Error = {\n  message: string;\n  type: ErrorType;\n};\n\ntype ResponseError = {\n  responseJSON?: Record<string, Array<string>>;\n};\n\nfunction handleError(error: ResponseError): Error {\n  const errorMessage = error.responseJSON?.relayPiiConfig[0];\n\n  if (!errorMessage) {\n    return {\n      type: ErrorType.Unknown,\n      message: t('Unknown error occurred while saving data scrubbing rule'),\n    };\n  }\n\n  if (errorMessage.startsWith('invalid selector: ')) {\n    for (const line of errorMessage.split('\\n')) {\n      if (line.startsWith('1 | ')) {\n        const selector = line.slice(3);\n        return {\n          type: ErrorType.InvalidSelector,\n          message: t('Invalid source value: %s', selector),\n        };\n      }\n    }\n  }\n\n  if (errorMessage.startsWith('regex parse error:')) {\n    for (const line of errorMessage.split('\\n')) {\n      if (line.startsWith('error:')) {\n        const regex = line.slice(6).replace(/at line \\d+ column \\d+/, '');\n        return {\n          type: ErrorType.RegexParse,\n          message: t('Invalid regex: %s', regex),\n        };\n      }\n    }\n  }\n\n  return {\n    type: ErrorType.Unknown,\n    message: t('An unknown error occurred while saving data scrubbing rule'),\n  };\n}\n\nexport default handleError;\n","import * as Sentry from '@sentry/react';\n\nimport localStorage from 'sentry/utils/localStorage';\n\nimport {SourceSuggestion} from '../types';\n\nconst ADVANCED_DATA_SCRUBBING_LOCALSTORAGE_KEY = 'advanced-data-scrubbing';\n\ntype StorageValue = {\n  eventId: string;\n  sourceSuggestions: Array<SourceSuggestion>;\n};\n\n// TODO(Priscila): add the method below in app/utils\nfunction fetchFromStorage(): StorageValue | undefined {\n  const storage = localStorage.getItem(ADVANCED_DATA_SCRUBBING_LOCALSTORAGE_KEY);\n  if (!storage) {\n    return undefined;\n  }\n\n  try {\n    return JSON.parse(storage);\n  } catch (err) {\n    Sentry.withScope(scope => {\n      scope.setExtra('storage', storage);\n      Sentry.captureException(err);\n    });\n    return undefined;\n  }\n}\n\nfunction saveToStorage(obj: StorageValue) {\n  try {\n    localStorage.setItem(ADVANCED_DATA_SCRUBBING_LOCALSTORAGE_KEY, JSON.stringify(obj));\n  } catch (err) {\n    Sentry.captureException(err);\n    Sentry.withScope(scope => {\n      scope.setExtra('storage', obj);\n\n      Sentry.captureException(err);\n    });\n  }\n}\n\nexport {fetchFromStorage, saveToStorage};\n","import {Fragment} from 'react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  content: React.ReactElement;\n  disabled: boolean;\n  onSave: () => void;\n  title: string;\n} & ModalRenderProps;\n\nconst Modal = ({\n  title,\n  onSave,\n  content,\n  disabled,\n  Header,\n  Body,\n  Footer,\n  closeModal,\n}: Props) => (\n  <Fragment>\n    <Header closeButton>{title}</Header>\n    <Body>{content}</Body>\n    <Footer>\n      <ButtonBar gap={1.5}>\n        <Button onClick={closeModal}>{t('Cancel')}</Button>\n        <Button onClick={onSave} disabled={disabled} priority=\"primary\">\n          {t('Save Rule')}\n        </Button>\n      </ButtonBar>\n    </Footer>\n  </Fragment>\n);\n\nexport default Modal;\n","import {Component} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\n\nimport submitRules from '../submitRules';\nimport {\n  EventIdStatus,\n  KeysOfUnion,\n  MethodType,\n  ProjectId,\n  Rule,\n  RuleType,\n} from '../types';\nimport {valueSuggestions} from '../utils';\n\nimport Form from './form';\nimport handleError, {ErrorType} from './handleError';\nimport Modal from './modal';\nimport {fetchSourceGroupData, saveToSourceGroupData} from './utils';\n\ntype FormProps = React.ComponentProps<typeof Form>;\ntype Values = FormProps['values'];\ntype EventId = NonNullable<FormProps['eventId']>;\ntype SourceSuggestions = FormProps['sourceSuggestions'];\n\ntype Props<T> = ModalRenderProps & {\n  api: Client;\n  endpoint: string;\n  onGetNewRules: (values: Values) => Array<Rule>;\n  onSubmitSuccess: (data: T extends undefined ? Organization : Project) => void;\n  orgSlug: Organization['slug'];\n  savedRules: Array<Rule>;\n  title: string;\n  initialState?: Partial<Values>;\n  projectId?: T;\n};\n\ntype State = {\n  errors: FormProps['errors'];\n  eventId: EventId;\n  isFormValid: boolean;\n  requiredValues: Array<keyof Values>;\n  sourceSuggestions: SourceSuggestions;\n  values: Values;\n};\n\nclass ModalManager<T extends ProjectId> extends Component<Props<T>, State> {\n  state = this.getDefaultState();\n\n  componentDidMount() {\n    this.handleValidateForm();\n  }\n\n  componentDidUpdate(_prevProps: Props<T>, prevState: State) {\n    if (!isEqual(prevState.values, this.state.values)) {\n      this.handleValidateForm();\n    }\n\n    if (prevState.eventId.value !== this.state.eventId.value) {\n      this.loadSourceSuggestions();\n    }\n    if (prevState.eventId.status !== this.state.eventId.status) {\n      saveToSourceGroupData(this.state.eventId, this.state.sourceSuggestions);\n    }\n  }\n\n  getDefaultState(): Readonly<State> {\n    const {eventId, sourceSuggestions} = fetchSourceGroupData();\n    const values = this.getInitialValues();\n    return {\n      values,\n      requiredValues: this.getRequiredValues(values),\n      errors: {},\n      isFormValid: false,\n      eventId: {\n        value: eventId,\n        status: !eventId ? EventIdStatus.UNDEFINED : EventIdStatus.LOADED,\n      },\n      sourceSuggestions,\n    } as Readonly<State>;\n  }\n\n  getInitialValues() {\n    const {initialState} = this.props;\n    return {\n      type: initialState?.type ?? RuleType.CREDITCARD,\n      method: initialState?.method ?? MethodType.MASK,\n      source: initialState?.source ?? '',\n      placeholder: initialState?.placeholder ?? '',\n      pattern: initialState?.pattern ?? '',\n    };\n  }\n\n  getRequiredValues(values: Values) {\n    const {type} = values;\n    const requiredValues: Array<KeysOfUnion<Values>> = ['type', 'method', 'source'];\n\n    if (type === RuleType.PATTERN) {\n      requiredValues.push('pattern');\n    }\n\n    return requiredValues;\n  }\n\n  clearError<F extends keyof Values>(field: F) {\n    this.setState(prevState => ({\n      errors: omit(prevState.errors, field),\n    }));\n  }\n\n  async loadSourceSuggestions() {\n    const {orgSlug, projectId, api} = this.props;\n    const {eventId} = this.state;\n\n    if (!eventId.value) {\n      this.setState(prevState => ({\n        sourceSuggestions: valueSuggestions,\n        eventId: {\n          ...prevState.eventId,\n          status: EventIdStatus.UNDEFINED,\n        },\n      }));\n      return;\n    }\n\n    this.setState(prevState => ({\n      sourceSuggestions: valueSuggestions,\n      eventId: {\n        ...prevState.eventId,\n        status: EventIdStatus.LOADING,\n      },\n    }));\n\n    try {\n      const query: {eventId: string; projectId?: string} = {eventId: eventId.value};\n      if (projectId) {\n        query.projectId = projectId;\n      }\n      const rawSuggestions = await api.requestPromise(\n        `/organizations/${orgSlug}/data-scrubbing-selector-suggestions/`,\n        {query}\n      );\n      const sourceSuggestions: SourceSuggestions = rawSuggestions.suggestions;\n\n      if (sourceSuggestions && sourceSuggestions.length > 0) {\n        this.setState(prevState => ({\n          sourceSuggestions,\n          eventId: {\n            ...prevState.eventId,\n            status: EventIdStatus.LOADED,\n          },\n        }));\n        return;\n      }\n\n      this.setState(prevState => ({\n        sourceSuggestions: valueSuggestions,\n        eventId: {\n          ...prevState.eventId,\n          status: EventIdStatus.NOT_FOUND,\n        },\n      }));\n    } catch {\n      this.setState(prevState => ({\n        eventId: {\n          ...prevState.eventId,\n          status: EventIdStatus.ERROR,\n        },\n      }));\n    }\n  }\n\n  convertRequestError(error: ReturnType<typeof handleError>) {\n    switch (error.type) {\n      case ErrorType.InvalidSelector:\n        this.setState(prevState => ({\n          errors: {\n            ...prevState.errors,\n            source: error.message,\n          },\n        }));\n        break;\n      case ErrorType.RegexParse:\n        this.setState(prevState => ({\n          errors: {\n            ...prevState.errors,\n            pattern: error.message,\n          },\n        }));\n        break;\n      default:\n        addErrorMessage(error.message);\n    }\n  }\n\n  handleChange = <R extends Rule, K extends KeysOfUnion<R>>(field: K, value: R[K]) => {\n    const values = {\n      ...this.state.values,\n      [field]: value,\n    };\n\n    if (values.type !== RuleType.PATTERN && values.pattern) {\n      values.pattern = '';\n    }\n\n    if (values.method !== MethodType.REPLACE && values.placeholder) {\n      values.placeholder = '';\n    }\n\n    this.setState(prevState => ({\n      values,\n      requiredValues: this.getRequiredValues(values),\n      errors: omit(prevState.errors, field),\n    }));\n  };\n\n  handleSave = async () => {\n    const {endpoint, api, onSubmitSuccess, closeModal, onGetNewRules} = this.props;\n    const newRules = onGetNewRules(this.state.values);\n\n    try {\n      const data = await submitRules(api, endpoint, newRules);\n      onSubmitSuccess(data);\n      closeModal();\n    } catch (error) {\n      this.convertRequestError(handleError(error));\n    }\n  };\n\n  handleValidateForm() {\n    const {values, requiredValues} = this.state;\n    const isFormValid = requiredValues.every(requiredValue => !!values[requiredValue]);\n    this.setState({isFormValid});\n  }\n\n  handleValidate =\n    <K extends keyof Values>(field: K) =>\n    () => {\n      const isFieldValueEmpty = !this.state.values[field].trim();\n\n      const fieldErrorAlreadyExist = this.state.errors[field];\n\n      if (isFieldValueEmpty && fieldErrorAlreadyExist) {\n        return;\n      }\n\n      if (isFieldValueEmpty && !fieldErrorAlreadyExist) {\n        this.setState(prevState => ({\n          errors: {\n            ...prevState.errors,\n            [field]: t('Field Required'),\n          },\n        }));\n        return;\n      }\n\n      if (!isFieldValueEmpty && fieldErrorAlreadyExist) {\n        this.clearError(field);\n      }\n    };\n\n  handleUpdateEventId = (eventId: string) => {\n    if (eventId === this.state.eventId.value) {\n      return;\n    }\n    this.setState({\n      eventId: {value: eventId, status: EventIdStatus.UNDEFINED},\n    });\n  };\n\n  render() {\n    const {values, errors, isFormValid, eventId, sourceSuggestions} = this.state;\n    const {title} = this.props;\n\n    return (\n      <Modal\n        {...this.props}\n        title={title}\n        onSave={this.handleSave}\n        disabled={!isFormValid}\n        content={\n          <Form\n            onChange={this.handleChange}\n            onValidate={this.handleValidate}\n            onUpdateEventId={this.handleUpdateEventId}\n            eventId={eventId}\n            errors={errors}\n            values={values}\n            sourceSuggestions={sourceSuggestions}\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default ModalManager;\n","import {EventId, EventIdStatus} from '../types';\nimport {valueSuggestions} from '../utils';\n\nimport {fetchFromStorage, saveToStorage} from './localStorage';\n\nfunction fetchSourceGroupData() {\n  const fetchedSourceGroupData = fetchFromStorage();\n  if (!fetchedSourceGroupData) {\n    const sourceGroupData: Parameters<typeof saveToStorage>[0] = {\n      eventId: '',\n      sourceSuggestions: valueSuggestions,\n    };\n    saveToStorage(sourceGroupData);\n    return sourceGroupData;\n  }\n  return fetchedSourceGroupData;\n}\n\nfunction saveToSourceGroupData(eventId: EventId, sourceSuggestions = valueSuggestions) {\n  switch (eventId.status) {\n    case EventIdStatus.LOADING:\n      break;\n    case EventIdStatus.LOADED:\n      saveToStorage({eventId: eventId.value, sourceSuggestions});\n      break;\n    default:\n      saveToStorage({eventId: '', sourceSuggestions});\n  }\n}\n\nexport {fetchSourceGroupData, saveToSourceGroupData};\n","import {Component, createRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {IconChevron} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport Rules from './rules';\nimport {Rule} from './types';\n\ntype Props = {\n  rules: Array<Rule>;\n};\n\ntype State = {\n  isCollapsed: boolean;\n  contentHeight?: string;\n};\n\nclass OrganizationRules extends Component<Props, State> {\n  state: State = {\n    isCollapsed: true,\n  };\n\n  componentDidUpdate() {\n    this.loadContentHeight();\n  }\n\n  rulesRef = createRef<HTMLUListElement>();\n\n  loadContentHeight() {\n    if (!this.state.contentHeight) {\n      const contentHeight = this.rulesRef.current?.offsetHeight;\n      if (contentHeight) {\n        this.setState({contentHeight: `${contentHeight}px`});\n      }\n    }\n  }\n\n  handleToggleCollapsed = () => {\n    this.setState(prevState => ({\n      isCollapsed: !prevState.isCollapsed,\n    }));\n  };\n\n  render() {\n    const {rules} = this.props;\n    const {isCollapsed, contentHeight} = this.state;\n\n    if (rules.length === 0) {\n      return (\n        <Wrapper>\n          {t('There are no data scrubbing rules at the organization level')}\n        </Wrapper>\n      );\n    }\n    return (\n      <Wrapper isCollapsed={isCollapsed} contentHeight={contentHeight}>\n        <Header onClick={this.handleToggleCollapsed}>\n          <div>{t('Organization Rules')}</div>\n          <Button\n            title={\n              isCollapsed\n                ? t('Expand Organization Rules')\n                : t('Collapse Organization Rules')\n            }\n            icon={<IconChevron size=\"xs\" direction={isCollapsed ? 'down' : 'up'} />}\n            size=\"xs\"\n            aria-label={t('Toggle Organization Rules')}\n          />\n        </Header>\n        <Content>\n          <Rules rules={rules} ref={this.rulesRef} disabled />\n        </Content>\n      </Wrapper>\n    );\n  }\n}\n\nexport default OrganizationRules;\n\nconst Content = styled('div')`\n  transition: height 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  height: 0;\n  overflow: hidden;\n`;\n\nconst Header = styled('div')`\n  cursor: pointer;\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n  border-bottom: 1px solid ${p => p.theme.border};\n  padding: ${space(1)} ${space(2)};\n`;\n\nconst Wrapper = styled('div')<{contentHeight?: string; isCollapsed?: boolean}>`\n  color: ${p => p.theme.gray200};\n  background: ${p => p.theme.backgroundSecondary};\n  ${p => !p.contentHeight && `padding: ${space(1)} ${space(2)}`};\n  ${p => !p.isCollapsed && ` border-bottom: 1px solid ${p.theme.border}`};\n  ${p =>\n    !p.isCollapsed &&\n    p.contentHeight &&\n    `\n      ${Content} {\n        height: ${p.contentHeight};\n      }\n    `}\n`;\n","import {forwardRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ConfirmDelete from 'sentry/components/confirmDelete';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {IconDelete, IconEdit} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport {MethodType, Rule, RuleType} from './types';\nimport {getMethodLabel, getRuleLabel} from './utils';\n\ntype Props = {\n  rules: Array<Rule>;\n  disabled?: boolean;\n  onDeleteRule?: (id: Rule['id']) => () => void;\n  onEditRule?: (id: Rule['id']) => () => void;\n};\n\nconst getListItemDescription = (rule: Rule) => {\n  const {method, type, source} = rule;\n  const methodLabel = getMethodLabel(method);\n  const typeLabel = getRuleLabel(type);\n\n  const descriptionDetails: Array<string> = [];\n\n  descriptionDetails.push(`[${methodLabel.label}]`);\n\n  descriptionDetails.push(\n    rule.type === RuleType.PATTERN ? `[${rule.pattern}]` : `[${typeLabel}]`\n  );\n\n  if (rule.method === MethodType.REPLACE && rule.placeholder) {\n    descriptionDetails.push(` with [${rule.placeholder}]`);\n  }\n\n  return `${descriptionDetails.join(' ')} ${t('from')} [${source}]`;\n};\n\nconst Rules = forwardRef(function RulesList(\n  {rules, onEditRule, onDeleteRule, disabled}: Props,\n  ref: React.Ref<HTMLUListElement>\n) {\n  return (\n    <List ref={ref} isDisabled={disabled} data-test-id=\"advanced-data-scrubbing-rules\">\n      {rules.map(rule => {\n        const {id} = rule;\n        const ruleDescription = getListItemDescription(rule);\n        return (\n          <ListItem key={id}>\n            <TextOverflow>{ruleDescription}</TextOverflow>\n            {onEditRule && (\n              <Button\n                aria-label={t('Edit Rule')}\n                size=\"sm\"\n                onClick={onEditRule(id)}\n                icon={<IconEdit />}\n                disabled={disabled}\n                title={\n                  disabled ? t('You do not have permission to edit rules') : undefined\n                }\n              />\n            )}\n            {onDeleteRule && (\n              <ConfirmDelete\n                message={t('Are you sure you wish to delete this rule?')}\n                priority=\"danger\"\n                onConfirm={() => {\n                  onDeleteRule(id)();\n                }}\n                confirmInput={ruleDescription}\n                disabled={disabled}\n                stopPropagation\n              >\n                <Button\n                  aria-label={t('Delete Rule')}\n                  size=\"sm\"\n                  icon={<IconDelete />}\n                  disabled={disabled}\n                  title={\n                    disabled ? t('You do not have permission to delete rules') : undefined\n                  }\n                />\n              </ConfirmDelete>\n            )}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n});\n\nexport default Rules;\n\nconst List = styled('ul')<{\n  isDisabled?: boolean;\n}>`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 0 !important;\n  ${p =>\n    p.isDisabled &&\n    `\n      color: ${p.theme.gray200};\n      background: ${p.theme.backgroundSecondary};\n  `}\n`;\n\nconst ListItem = styled('li')`\n  display: grid;\n  grid-template-columns: auto max-content max-content;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n  padding: ${space(1)} ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.border};\n  &:hover {\n    background-color: ${p => p.theme.backgroundSecondary};\n  }\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n","import {Client} from 'sentry/api';\n\nimport {Applications, MethodType, PiiConfig, Rule, RuleType} from './types';\n\nfunction getSubmitFormatRule(rule: Rule): PiiConfig {\n  if (rule.type === RuleType.PATTERN && rule.method === MethodType.REPLACE) {\n    return {\n      type: rule.type,\n      pattern: rule.pattern,\n      redaction: {\n        method: rule.method,\n        text: rule?.placeholder,\n      },\n    };\n  }\n\n  if (rule.type === RuleType.PATTERN) {\n    return {\n      type: rule.type,\n      pattern: rule.pattern,\n      redaction: {\n        method: rule.method,\n      },\n    };\n  }\n\n  if (rule.method === MethodType.REPLACE) {\n    return {\n      type: rule.type,\n      redaction: {\n        method: rule.method,\n        text: rule?.placeholder,\n      },\n    };\n  }\n\n  return {\n    type: rule.type,\n    redaction: {\n      method: rule.method,\n    },\n  };\n}\n\nfunction submitRules(api: Client, endpoint: string, rules: Array<Rule>) {\n  const applications: Applications = {};\n  const submitFormatRules: Record<string, PiiConfig> = {};\n\n  for (let i = 0; i < rules.length; i++) {\n    const rule = rules[i];\n    const ruleId = String(i);\n    submitFormatRules[ruleId] = getSubmitFormatRule(rule);\n\n    if (!applications[rule.source]) {\n      applications[rule.source] = [];\n    }\n\n    if (!applications[rule.source].includes(ruleId)) {\n      applications[rule.source].push(ruleId);\n    }\n  }\n\n  const piiConfig = {rules: submitFormatRules, applications};\n\n  return api.requestPromise(endpoint, {\n    method: 'PUT',\n    data: {relayPiiConfig: JSON.stringify(piiConfig)},\n  });\n}\n\nexport default submitRules;\n","import {Project} from 'sentry/types';\n\nexport enum RuleType {\n  PATTERN = 'pattern',\n  CREDITCARD = 'creditcard',\n  PASSWORD = 'password',\n  IP = 'ip',\n  IMEI = 'imei',\n  EMAIL = 'email',\n  UUID = 'uuid',\n  PEMKEY = 'pemkey',\n  URLAUTH = 'url_auth',\n  USSSN = 'us_ssn',\n  USER_PATH = 'userpath',\n  MAC = 'mac',\n  ANYTHING = 'anything',\n}\n\nexport enum MethodType {\n  MASK = 'mask',\n  REMOVE = 'remove',\n  HASH = 'hash',\n  REPLACE = 'replace',\n}\n\nexport enum EventIdStatus {\n  UNDEFINED = 'undefined',\n  LOADING = 'loading',\n  INVALID = 'invalid',\n  NOT_FOUND = 'not_found',\n  LOADED = 'loaded',\n  ERROR = 'error',\n}\n\nexport enum SourceSuggestionType {\n  VALUE = 'value',\n  UNARY = 'unary',\n  BINARY = 'binary',\n  STRING = 'string',\n}\n\nexport type SourceSuggestion = {\n  type: SourceSuggestionType;\n  value: string;\n  description?: string;\n  examples?: Array<string>;\n};\n\ntype RuleBase = {\n  id: number;\n  source: string;\n};\n\nexport type RuleDefault = RuleBase & {\n  method: MethodType.MASK | MethodType.REMOVE | MethodType.HASH;\n  type:\n    | RuleType.CREDITCARD\n    | RuleType.PASSWORD\n    | RuleType.IP\n    | RuleType.IMEI\n    | RuleType.EMAIL\n    | RuleType.UUID\n    | RuleType.PEMKEY\n    | RuleType.URLAUTH\n    | RuleType.USSSN\n    | RuleType.USER_PATH\n    | RuleType.MAC\n    | RuleType.ANYTHING;\n};\n\nexport type RulePattern = RuleBase & {\n  pattern: string;\n  type: RuleType.PATTERN;\n} & Pick<RuleDefault, 'method'>;\n\nexport type RuleReplace = RuleBase & {\n  method: MethodType.REPLACE;\n  placeholder?: string;\n} & Pick<RuleDefault, 'type'>;\n\nexport type KeysOfUnion<T> = T extends any ? keyof T : never;\n\nexport type RuleReplaceAndPattern = Omit<RulePattern, 'method'> &\n  Omit<RuleReplace, 'type'>;\n\nexport type Rule = RuleDefault | RuleReplace | RulePattern | RuleReplaceAndPattern;\n\nexport type EventId = {\n  status: EventIdStatus;\n  value: string;\n};\n\ntype PiiConfigDefault = {\n  redaction: {\n    method: RuleDefault['method'];\n  };\n  type: RuleDefault['type'];\n};\n\ntype PiiConfigReplace = {\n  redaction: {\n    method: RuleReplace['method'];\n    text?: string;\n  };\n  type: RuleReplace['type'];\n};\n\ntype PiiConfigPattern = {\n  pattern: string;\n  redaction: {\n    method: RulePattern['method'];\n  };\n  type: RulePattern['type'];\n};\n\ntype PiiConfigReplaceAndPattern = Omit<PiiConfigPattern, 'redaction'> &\n  Pick<PiiConfigReplace, 'redaction'>;\n\nexport type PiiConfig =\n  | PiiConfigDefault\n  | PiiConfigPattern\n  | PiiConfigReplace\n  | PiiConfigReplaceAndPattern;\n\nexport type Applications = Record<string, Array<string>>;\n\nexport type Errors = Partial<Record<KeysOfUnion<Rule>, string>>;\n\nexport type ProjectId = Project['id'] | undefined;\n","import {t} from 'sentry/locale';\n\nimport {MethodType, RuleType, SourceSuggestion, SourceSuggestionType} from './types';\n\nfunction getRuleLabel(type: RuleType) {\n  switch (type) {\n    case RuleType.ANYTHING:\n      return t('Anything');\n    case RuleType.IMEI:\n      return t('IMEI numbers');\n    case RuleType.MAC:\n      return t('MAC addresses');\n    case RuleType.EMAIL:\n      return t('Email addresses');\n    case RuleType.PEMKEY:\n      return t('PEM keys');\n    case RuleType.URLAUTH:\n      return t('Auth in URLs');\n    case RuleType.USSSN:\n      return t('US social security numbers');\n    case RuleType.USER_PATH:\n      return t('Usernames in filepaths');\n    case RuleType.UUID:\n      return t('UUIDs');\n    case RuleType.CREDITCARD:\n      return t('Credit card numbers');\n    case RuleType.PASSWORD:\n      return t('Password fields');\n    case RuleType.IP:\n      return t('IP addresses');\n    case RuleType.PATTERN:\n      return t('Regex matches');\n    default:\n      return '';\n  }\n}\n\nfunction getMethodLabel(type: MethodType) {\n  switch (type) {\n    case MethodType.MASK:\n      return {\n        label: t('Mask'),\n        description: t('Replace with ****'),\n      };\n    case MethodType.HASH:\n      return {\n        label: t('Hash'),\n        description: t('Replace with DEADBEEF'),\n      };\n    case MethodType.REMOVE:\n      return {\n        label: t('Remove'),\n        description: t('Replace with null'),\n      };\n    case MethodType.REPLACE:\n      return {\n        label: t('Replace'),\n        description: t('Replace with Placeholder'),\n      };\n    default:\n      return {\n        label: '',\n      };\n  }\n}\n\nconst binarySuggestions: Array<SourceSuggestion> = [\n  {\n    type: SourceSuggestionType.BINARY,\n    value: '&&',\n  },\n  {\n    type: SourceSuggestionType.BINARY,\n    value: '||',\n  },\n];\n\nconst unarySuggestions: Array<SourceSuggestion> = [\n  {\n    type: SourceSuggestionType.UNARY,\n    value: '!',\n  },\n];\n\nconst valueSuggestions: Array<SourceSuggestion> = [\n  {type: SourceSuggestionType.VALUE, value: '**', description: t('everywhere')},\n  {\n    type: SourceSuggestionType.VALUE,\n    value: 'password',\n    description: t('attributes named \"password\"'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: '$error.value',\n    description: t('the exception value'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: '$message',\n    description: t('the log message'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: 'extra.MyValue',\n    description: t('the key \"MyValue\" in \"Additional Data\"'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: 'extra.**',\n    description: t('everything in \"Additional Data\"'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: '$http.headers.x-custom-token',\n    description: t('the X-Custom-Token HTTP header'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: '$user.ip_address',\n    description: t('the user IP address'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: '$frame.vars.foo',\n    description: t('the local variable \"foo\"'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: 'contexts.device.timezone',\n    description: t('the timezone in the device context'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: 'tags.server_name',\n    description: t('the tag \"server_name\"'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: '$attachments.**',\n    description: t('all attachments'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: \"$attachments.'logfile.txt'\",\n    description: t('all attachments named \"logfile.txt\"'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: '$minidump',\n    description: t('the entire minidump of a native crash report'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: '$minidump.heap_memory',\n    description: t('the heap memory region in a native crash report'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: 'code_file',\n    description: t('the pathname of a code module in a native crash report'),\n  },\n  {\n    type: SourceSuggestionType.VALUE,\n    value: 'debug_file',\n    description: t('the pathname of a debug module in a native crash report'),\n  },\n];\n\nexport {\n  binarySuggestions,\n  getMethodLabel,\n  getRuleLabel,\n  unarySuggestions,\n  valueSuggestions,\n};\n"],"names":["Fragment","Alert","Confirm","Field","Input","t","ConfirmDelete","message","confirmInput","props","disableConfirmButton","e","target","value","tct","defined","formatStoreCrashReports","organizationValue","SettingScope","getStoreCrashReportsValues","settingScope","values","Project","unshift","IconWarning","EmptyMessage","Rules","Content","rules","disabled","onDeleteRule","onEditRule","length","MethodType","RuleType","convertRelayPiiConfig","relayPiiConfig","piiConfig","JSON","parse","applications","convertedRules","application","rule","resolvedRule","id","source","typeAndMethod","slice","split","type","method","push","redaction","REPLACE","PATTERN","placeholder","text","pattern","Component","addErrorMessage","addSuccessMessage","openModal","Client","Button","ExternalLink","Panel","PanelAlert","PanelBody","PanelHeader","space","Add","Edit","OrganizationRules","submitRules","ADVANCED_DATASCRUBBING_LINK","DataScrubbing","savedRules","orgRules","state","modalProps","projectId","api","endpoint","organization","slug","response","successfullySaved","filteredRules","filter","data","setState","componentDidMount","loadRules","loadOrganizationRules","componentDidUpdate","_prevProps","prevState","componentWillUnmount","clear","successMessage","onSubmitSuccess","render","additionalContext","linkToDocs","handleDelete","handleOpenEditModal","handleOpenAddModal","PanelAction","p","theme","border","ModalManager","handleGetNewRules","updatedRule","newRules","map","savedRule","isEqual","EventIdStatus","saveToSourceGroupData","EventIdFieldStatusIcon","EventIdField","eventId","event","replace","trim","status","UNDEFINED","preventDefault","isEventIdValid","onUpdateEventId","keyCode","prevProps","loadState","getErrorMessage","INVALID","ERROR","NOT_FOUND","undefined","handleChange","handleKeyDown","handleBlur","handleClickIconClose","StyledInput","Status","FieldWrapper","ControlState","Tooltip","IconCheckmark","IconClose","onClickIconClose","LOADING","LOADED","CloseIcon","StyledIconClose","gray200","gray300","sortBy","IconChevron","getMethodLabel","getRuleLabel","SelectField","SourceField","Form","displayEventId","field","onChange","errors","onValidate","sourceSuggestions","Object","label","handleToggleEventId","FieldGroup","breakpoints","small","hasTwoColumns","SourceGroup","isExpanded","borderRadius","dropShadowLight","RegularExpression","familyMono","ToggleWrapper","Toggle","subText","textColor","createRef","SelectControl","selectRef","current","select","inputRef","autocomplete","options","opt","details","description","control","provided","minHeight","height","InputField","TextOverflow","SourceSuggestionType","binarySuggestions","unarySuggestions","SourceSuggestionExamples","defaultHelp","suggestions","fieldValues","activeSuggestion","showSuggestions","hideCaret","help","loadFieldValues","suggestion","getNewFieldValues","changeParentValue","_value","persist","toggleSuggestions","handleClickSuggestionItem","scrollToSuggestion","isRegExMatchesSelected","checkPossiblyRegExMatchExpression","getAllSuggestions","getValueSuggestions","getFilteredSuggestions","valuesToBeFiltered","BINARY","VALUE","UNARY","filteredSuggestions","s","toLowerCase","indexOf","getNewSuggestions","lastFieldValue","penultimateFieldValue","Array","isArray","STRING","newValue","splittedValue","splittedValueIndex","includes","valueAfterUnaryOperator","selector","find","suggestionList","children","scrollIntoView","behavior","block","inline","index","fieldValue","join","isMaybeRegExp","RegExp","test","error","onBlur","selectorField","handleFocus","examples","handleClickOutside","Wrapper","Suggestions","background","Suggestion","fontSizeMedium","active","backgroundSecondary","SuggestionDescription","SuggestionsOverlay","Hovercard","IconQuestion","sourceName","example","ExampleCard","gray400","fontSizeSmall","ErrorType","handleError","errorMessage","responseJSON","Unknown","startsWith","line","InvalidSelector","regex","RegexParse","Sentry","localStorage","ADVANCED_DATA_SCRUBBING_LOCALSTORAGE_KEY","fetchFromStorage","storage","getItem","err","withScope","scope","setExtra","captureException","saveToStorage","obj","setItem","stringify","ButtonBar","Modal","title","onSave","content","Header","Body","Footer","closeModal","omit","valueSuggestions","fetchSourceGroupData","getDefaultState","requiredValues","getRequiredValues","onGetNewRules","convertRequestError","isFieldValueEmpty","fieldErrorAlreadyExist","clearError","handleValidateForm","loadSourceSuggestions","getInitialValues","isFormValid","initialState","CREDITCARD","MASK","orgSlug","query","rawSuggestions","requestPromise","every","requiredValue","handleSave","handleValidate","handleUpdateEventId","fetchedSourceGroupData","sourceGroupData","isCollapsed","loadContentHeight","contentHeight","rulesRef","offsetHeight","handleToggleCollapsed","forwardRef","IconDelete","IconEdit","getListItemDescription","methodLabel","typeLabel","descriptionDetails","RulesList","ref","ruleDescription","List","isDisabled","ListItem","getSubmitFormatRule","submitFormatRules","i","ruleId","String","ANYTHING","IMEI","MAC","EMAIL","PEMKEY","URLAUTH","USSSN","USER_PATH","UUID","PASSWORD","IP","HASH","REMOVE"],"sourceRoot":""}