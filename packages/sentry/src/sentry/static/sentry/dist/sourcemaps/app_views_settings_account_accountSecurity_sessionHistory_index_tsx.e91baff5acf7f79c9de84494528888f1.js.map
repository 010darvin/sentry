{"version":3,"file":"chunks/app_views_settings_account_accountSecurity_sessionHistory_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountSecurity/sessionHistory/index.tsx","webpack:///./app/views/settings/account/accountSecurity/sessionHistory/sessionRow.tsx","webpack:///./app/views/settings/account/accountSecurity/sessionHistory/utils.tsx"],"sourcesContent":["import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {InternetProtocol} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport SessionRow from './sessionRow';\nimport {tableLayout} from './utils';\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  ipList: Array<InternetProtocol> | null;\n} & AsyncView['state'];\n\nclass SessionHistory extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Session History');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['ipList', '/users/me/ips/']];\n  }\n\n  renderBody() {\n    const {ipList} = this.state;\n\n    if (!ipList) {\n      return null;\n    }\n\n    const {routes, params, location} = this.props;\n    const recreateRouteProps = {routes, params, location};\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Security')}\n          tabs={\n            <NavTabs underlined>\n              <ListLink\n                to={recreateRoute('', {...recreateRouteProps, stepBack: -1})}\n                index\n              >\n                {t('Settings')}\n              </ListLink>\n              <ListLink to={recreateRoute('', recreateRouteProps)}>\n                {t('Session History')}\n              </ListLink>\n            </NavTabs>\n          }\n        />\n\n        <Panel>\n          <SessionPanelHeader>\n            <div>{t('Sessions')}</div>\n            <div>{t('First Seen')}</div>\n            <div>{t('Last Seen')}</div>\n          </SessionPanelHeader>\n\n          <PanelBody>\n            {ipList.map(({id, ...ipObj}) => (\n              <SessionRow key={id} {...ipObj} />\n            ))}\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nexport default SessionHistory;\n\nconst SessionPanelHeader = styled(PanelHeader)`\n  ${tableLayout}\n  justify-content: initial;\n`;\n","import styled from '@emotion/styled';\n\nimport {PanelItem} from 'sentry/components/panels';\nimport TimeSince from 'sentry/components/timeSince';\nimport space from 'sentry/styles/space';\nimport {InternetProtocol} from 'sentry/types';\n\nimport {tableLayout} from './utils';\n\nfunction SessionRow({\n  ipAddress,\n  lastSeen,\n  firstSeen,\n  countryCode,\n  regionCode,\n}: Omit<InternetProtocol, 'id'>) {\n  return (\n    <SessionPanelItem>\n      <IpAndLocation>\n        <IpAddress>{ipAddress}</IpAddress>\n        {countryCode && regionCode && (\n          <CountryCode>{`${countryCode} (${regionCode})`}</CountryCode>\n        )}\n      </IpAndLocation>\n      <div>\n        <StyledTimeSince date={firstSeen} />\n      </div>\n      <div>\n        <StyledTimeSince date={lastSeen} />\n      </div>\n    </SessionPanelItem>\n  );\n}\n\nexport default SessionRow;\n\nconst IpAddress = styled('div')`\n  margin-bottom: ${space(0.5)};\n  font-weight: bold;\n`;\nconst CountryCode = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst IpAndLocation = styled('div')`\n  flex: 1;\n`;\n\nconst SessionPanelItem = styled(PanelItem)`\n  ${tableLayout};\n`;\n","import space from 'sentry/styles/space';\n\nexport const tableLayout = `\n  display: grid;\n  grid-template-columns: auto 140px 140px;\n  gap ${space(1)};\n  align-items: center;\n`;\n"],"names":["Component","Link","RouterLink","withRouter","classNames","omit","qs","ListLink","_classNames","className","activeClassName","props","isActive","to","query","index","router","queryData","parse","undefined","target","pathname","render","children","disabled","carriedProps","getClassName","StyledLi","shouldForwardProp","prop","p","theme","findLastIndex","replaceRouterParams","recreateRoute","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","slice","baseRoute","search","hash","fullRoute","join","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","renderComponent","Fragment","NavTabs","Panel","PanelBody","PanelHeader","t","SettingsPageHeader","SessionRow","tableLayout","SessionHistory","getEndpoints","renderBody","ipList","state","recreateRouteProps","id","ipObj","SessionPanelHeader","PanelItem","TimeSince","space","ipAddress","lastSeen","firstSeen","countryCode","regionCode","IpAddress","CountryCode","fontSizeRelativeSmall","StyledTimeSince","IpAndLocation","SessionPanelItem"],"sourceRoot":""}