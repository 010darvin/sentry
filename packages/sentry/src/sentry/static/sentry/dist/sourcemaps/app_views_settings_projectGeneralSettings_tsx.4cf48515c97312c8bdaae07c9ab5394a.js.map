{"version":3,"file":"chunks/app_views_settings_projectGeneralSettings_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/projectGeneralSettings.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/utils/slugify.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectGeneralSettings.tsx"],"sourcesContent":["import {createFilter} from 'react-select';\nimport styled from '@emotion/styled';\nimport {PlatformIcon} from 'platformicons';\n\nimport {Field} from 'sentry/components/forms/type';\nimport platforms from 'sentry/data/platforms';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {convertMultilineFieldValue, extractMultilineFields} from 'sentry/utils';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport slugify from 'sentry/utils/slugify';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/';\n\nconst getResolveAgeAllowedValues = () => {\n  let i = 0;\n  const values: number[] = [];\n  while (i <= 720) {\n    values.push(i);\n    if (i < 12) {\n      i += 1;\n    } else if (i < 24) {\n      i += 3;\n    } else if (i < 36) {\n      i += 6;\n    } else if (i < 48) {\n      i += 12;\n    } else {\n      i += 24;\n    }\n  }\n  return values;\n};\n\nconst RESOLVE_AGE_ALLOWED_VALUES = getResolveAgeAllowedValues();\n\nconst ORG_DISABLED_REASON = t(\n  \"This option is enforced by your organization's settings and cannot be customized per-project.\"\n);\n\nconst PlatformWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin-right: ${space(1)};\n`;\n\nexport const fields: Record<string, Field> = {\n  name: {\n    name: 'name',\n    type: 'string',\n    required: true,\n    label: t('Name'),\n    placeholder: t('my-awesome-project'),\n    help: t('A name for this project'),\n    transformInput: slugify,\n    getData: (data: {name?: string}) => {\n      return {\n        name: data.name,\n        slug: data.name,\n      };\n    },\n\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t('You will be redirected to the new project slug after saving'),\n  },\n\n  platform: {\n    name: 'platform',\n    type: 'select',\n    label: t('Platform'),\n    options: platforms.map(({id, name}) => ({\n      value: id,\n      label: (\n        <PlatformWrapper key={id}>\n          <StyledPlatformIcon platform={id} />\n          {name}\n        </PlatformWrapper>\n      ),\n    })),\n    help: t('The primary platform for this project'),\n    filterOption: createFilter({\n      stringify: option => {\n        const matchedPlatform = platforms.find(({id}) => id === option.value);\n        return `${matchedPlatform?.name} ${option.value}`;\n      },\n    }),\n  },\n\n  subjectPrefix: {\n    name: 'subjectPrefix',\n    type: 'string',\n    label: t('Subject Prefix'),\n    placeholder: t('e.g. [my-org]'),\n    help: t('Choose a custom prefix for emails from this project'),\n  },\n\n  resolveAge: {\n    name: 'resolveAge',\n    type: 'range',\n    allowedValues: RESOLVE_AGE_ALLOWED_VALUES,\n    label: t('Auto Resolve'),\n    help: t(\n      \"Automatically resolve an issue if it hasn't been seen for this amount of time\"\n    ),\n    formatLabel: val => {\n      val = Number(val);\n      if (val === 0) {\n        return t('Disabled');\n      }\n\n      if (val > 23 && val % 24 === 0) {\n        // Based on allowed values, val % 24 should always be true\n        val = val / 24;\n        return tn('%s day', '%s days', val);\n      }\n\n      return tn('%s hour', '%s hours', val);\n    },\n    saveOnBlur: false,\n    saveMessage: tct(\n      '[Caution]: Enabling auto resolve will immediately resolve anything that has ' +\n        'not been seen within this period of time. There is no undo!',\n      {\n        Caution: <strong>Caution</strong>,\n      }\n    ),\n    saveMessageAlertType: 'warning',\n  },\n  allowedDomains: {\n    name: 'allowedDomains',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    rows: 1,\n    placeholder: t('https://example.com or example.com'),\n    label: t('Allowed Domains'),\n    help: t('Separate multiple entries with a newline'),\n    getValue: val => extractMultilineFields(val),\n    setValue: val => convertMultilineFieldValue(val),\n  },\n  scrapeJavaScript: {\n    name: 'scrapeJavaScript',\n    type: 'boolean',\n    // if this is off for the organization, it cannot be enabled for the project\n    disabled: ({organization, name}) => !organization[name],\n    disabledReason: ORG_DISABLED_REASON,\n    // `props` are the props given to FormField\n    setValue: (val, props) => props.organization && props.organization[props.name] && val,\n    label: t('Enable JavaScript source fetching'),\n    help: t('Allow Sentry to scrape missing JavaScript source context when possible'),\n  },\n  securityToken: {\n    name: 'securityToken',\n    type: 'string',\n    label: t('Security Token'),\n    help: t(\n      'Outbound requests matching Allowed Domains will have the header \"{token_header}: {token}\" appended'\n    ),\n    setValue: value => getDynamicText({value, fixed: '__SECURITY_TOKEN__'}),\n  },\n  securityTokenHeader: {\n    name: 'securityTokenHeader',\n    type: 'string',\n    placeholder: t('X-Sentry-Token'),\n    label: t('Security Token Header'),\n    help: t(\n      'Outbound requests matching Allowed Domains will have the header \"{token_header}: {token}\" appended'\n    ),\n  },\n  verifySSL: {\n    name: 'verifySSL',\n    type: 'boolean',\n    label: t('Verify TLS/SSL'),\n    help: t('Outbound requests will verify TLS (sometimes known as SSL) connections'),\n  },\n};\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","// XXX: This is NOT an exhaustive slugify function\n// Only forces lowercase and replaces spaces with hyphens\nexport default function slugify(str: any): string {\n  return typeof str === 'string' ? str.toLowerCase().replace(' ', '-') : '';\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Component} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {\n  changeProjectSlug,\n  removeProject,\n  transferProject,\n} from 'sentry/actionCreators/projects';\nimport ProjectActions from 'sentry/actions/projectActions';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport Field from 'sentry/components/forms/field';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport {FieldValue} from 'sentry/components/forms/model';\nimport TextField from 'sentry/components/forms/textField';\nimport {removePageFiltersStorage} from 'sentry/components/organizations/pageFilters/persistence';\nimport {Panel, PanelAlert, PanelHeader} from 'sentry/components/panels';\nimport {fields} from 'sentry/data/forms/projectGeneralSettings';\nimport {t, tct} from 'sentry/locale';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport {Organization, Project} from 'sentry/types';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n    onChangeSlug: (slug: string) => void;\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'] & {\n  data: Project;\n};\n\nclass ProjectGeneralSettings extends AsyncView<Props, State> {\n  private _form: Record<string, FieldValue> = {};\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Project Settings'), projectId, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n\n    return [['data', `/projects/${orgId}/${projectId}/`]];\n  }\n\n  handleTransferFieldChange = (id: string, value: FieldValue) => {\n    this._form[id] = value;\n  };\n\n  handleRemoveProject = () => {\n    const {orgId} = this.props.params;\n    const project = this.state.data;\n\n    removePageFiltersStorage(orgId);\n\n    if (!project) {\n      return;\n    }\n\n    removeProject(this.api, orgId, project).then(() => {\n      // Need to hard reload because lots of components do not listen to Projects Store\n      window.location.assign('/');\n    }, handleXhrErrorResponse('Unable to remove project'));\n  };\n\n  handleTransferProject = async () => {\n    const {orgId} = this.props.params;\n    const project = this.state.data;\n    if (!project) {\n      return;\n    }\n    if (typeof this._form.email !== 'string' || this._form.email.length < 1) {\n      return;\n    }\n\n    try {\n      await transferProject(this.api, orgId, project, this._form.email);\n      // Need to hard reload because lots of components do not listen to Projects Store\n      window.location.assign('/');\n    } catch (err) {\n      if (err.status >= 500) {\n        handleXhrErrorResponse('Unable to transfer project')(err);\n      }\n    }\n  };\n\n  isProjectAdmin = () => new Set(this.props.organization.access).has('project:admin');\n\n  renderRemoveProject() {\n    const project = this.state.data;\n    const isProjectAdmin = this.isProjectAdmin();\n    const {isInternal} = project;\n\n    return (\n      <Field\n        label={t('Remove Project')}\n        help={tct(\n          'Remove the [project] project and all related data. [linebreak] Careful, this action cannot be undone.',\n          {\n            project: <strong>{project.slug}</strong>,\n            linebreak: <br />,\n          }\n        )}\n      >\n        {!isProjectAdmin &&\n          t('You do not have the required permission to remove this project.')}\n\n        {isInternal &&\n          t(\n            'This project cannot be removed. It is used internally by the Sentry server.'\n          )}\n\n        {isProjectAdmin && !isInternal && (\n          <Confirm\n            onConfirm={this.handleRemoveProject}\n            priority=\"danger\"\n            confirmText={t('Remove project')}\n            message={\n              <div>\n                <TextBlock>\n                  <strong>\n                    {t('Removing this project is permanent and cannot be undone!')}\n                  </strong>\n                </TextBlock>\n                <TextBlock>\n                  {t('This will also remove all associated event data.')}\n                </TextBlock>\n              </div>\n            }\n          >\n            <div>\n              <Button className=\"ref-remove-project\" type=\"button\" priority=\"danger\">\n                {t('Remove Project')}\n              </Button>\n            </div>\n          </Confirm>\n        )}\n      </Field>\n    );\n  }\n\n  renderTransferProject() {\n    const project = this.state.data;\n    const isProjectAdmin = this.isProjectAdmin();\n    const {isInternal} = project;\n\n    return (\n      <Field\n        label={t('Transfer Project')}\n        help={tct(\n          'Transfer the [project] project and all related data. [linebreak] Careful, this action cannot be undone.',\n          {\n            project: <strong>{project.slug}</strong>,\n            linebreak: <br />,\n          }\n        )}\n      >\n        {!isProjectAdmin &&\n          t('You do not have the required permission to transfer this project.')}\n\n        {isInternal &&\n          t(\n            'This project cannot be transferred. It is used internally by the Sentry server.'\n          )}\n\n        {isProjectAdmin && !isInternal && (\n          <Confirm\n            onConfirm={this.handleTransferProject}\n            priority=\"danger\"\n            confirmText={t('Transfer project')}\n            renderMessage={({confirm}) => (\n              <div>\n                <TextBlock>\n                  <strong>\n                    {t('Transferring this project is permanent and cannot be undone!')}\n                  </strong>\n                </TextBlock>\n                <TextBlock>\n                  {t(\n                    'Please enter the email of an organization owner to whom you would like to transfer this project.'\n                  )}\n                </TextBlock>\n                <Panel>\n                  <Form\n                    hideFooter\n                    onFieldChange={this.handleTransferFieldChange}\n                    onSubmit={(_data, _onSuccess, _onError, e) => {\n                      e.stopPropagation();\n                      confirm();\n                    }}\n                  >\n                    <TextField\n                      name=\"email\"\n                      label={t('Organization Owner')}\n                      placeholder=\"admin@example.com\"\n                      required\n                      help={t(\n                        'A request will be emailed to this address, asking the organization owner to accept the project transfer.'\n                      )}\n                    />\n                  </Form>\n                </Panel>\n              </div>\n            )}\n          >\n            <div>\n              <Button className=\"ref-transfer-project\" type=\"button\" priority=\"danger\">\n                {t('Transfer Project')}\n              </Button>\n            </div>\n          </Confirm>\n        )}\n      </Field>\n    );\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const project = this.state.data;\n    const {orgId, projectId} = this.props.params;\n    const endpoint = `/projects/${orgId}/${projectId}/`;\n    const access = new Set(organization.access);\n    const jsonFormProps = {\n      additionalFieldProps: {\n        organization,\n      },\n      features: new Set(organization.features),\n      access,\n      disabled: !access.has('project:write'),\n    };\n    const team = project.teams.length ? project.teams?.[0] : undefined;\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Project Settings')} />\n        <PermissionAlert />\n\n        <Form\n          saveOnBlur\n          allowUndo\n          initialData={{\n            ...project,\n            team,\n          }}\n          apiMethod=\"PUT\"\n          apiEndpoint={endpoint}\n          onSubmitSuccess={resp => {\n            this.setState({data: resp});\n            if (projectId !== resp.slug) {\n              changeProjectSlug(projectId, resp.slug);\n              // Container will redirect after stores get updated with new slug\n              this.props.onChangeSlug(resp.slug);\n            }\n            // This will update our project context\n            ProjectActions.updateSuccess(resp);\n          }}\n        >\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Project Details')}\n            fields={[fields.name, fields.platform]}\n          />\n\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Email')}\n            fields={[fields.subjectPrefix]}\n          />\n\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Event Settings')}\n            fields={[fields.resolveAge]}\n          />\n\n          <JsonForm\n            {...jsonFormProps}\n            title={t('Client Security')}\n            fields={[\n              fields.allowedDomains,\n              fields.scrapeJavaScript,\n              fields.securityToken,\n              fields.securityTokenHeader,\n              fields.verifySSL,\n            ]}\n            renderHeader={() => (\n              <PanelAlert type=\"info\">\n                <TextBlock noMargin>\n                  {tct(\n                    'Configure origin URLs which Sentry should accept events from. This is used for communication with clients like [link].',\n                    {\n                      link: (\n                        <a href=\"https://github.com/getsentry/sentry-javascript\">\n                          sentry-javascript\n                        </a>\n                      ),\n                    }\n                  )}{' '}\n                  {tct(\n                    'This will restrict requests based on the [Origin] and [Referer] headers.',\n                    {\n                      Origin: <code>Origin</code>,\n                      Referer: <code>Referer</code>,\n                    }\n                  )}\n                </TextBlock>\n              </PanelAlert>\n            )}\n          />\n        </Form>\n\n        <Panel>\n          <PanelHeader>{t('Project Administration')}</PanelHeader>\n          {this.renderRemoveProject()}\n          {this.renderTransferProject()}\n        </Panel>\n      </div>\n    );\n  }\n}\n\ntype ContainerProps = {\n  organization: Organization;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\nclass ProjectGeneralSettingsContainer extends Component<ContainerProps> {\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  changedSlug: string | undefined = undefined;\n  unsubscribe = ProjectsStore.listen(() => this.onProjectsUpdate(), undefined);\n\n  onProjectsUpdate() {\n    if (!this.changedSlug) {\n      return;\n    }\n    const project = ProjectsStore.getBySlug(this.changedSlug);\n\n    if (!project) {\n      return;\n    }\n\n    browserHistory.replace(\n      recreateRoute('', {\n        ...this.props,\n        params: {\n          ...this.props.params,\n          projectId: this.changedSlug,\n        },\n      })\n    );\n  }\n\n  render() {\n    return (\n      <ProjectGeneralSettings\n        onChangeSlug={(newSlug: string) => (this.changedSlug = newSlug)}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default withOrganization(ProjectGeneralSettingsContainer);\n"],"names":["createFilter","PlatformIcon","platforms","t","tct","tn","space","convertMultilineFieldValue","extractMultilineFields","getDynamicText","slugify","route","getResolveAgeAllowedValues","i","values","push","RESOLVE_AGE_ALLOWED_VALUES","ORG_DISABLED_REASON","PlatformWrapper","StyledPlatformIcon","fields","name","type","required","label","placeholder","help","transformInput","getData","data","slug","saveOnBlur","saveMessageAlertType","saveMessage","platform","options","map","id","value","filterOption","stringify","option","matchedPlatform","find","subjectPrefix","resolveAge","allowedValues","formatLabel","val","Number","Caution","allowedDomains","multiline","autosize","maxRows","rows","getValue","setValue","scrapeJavaScript","disabled","organization","disabledReason","props","securityToken","fixed","securityTokenHeader","verifySSL","findLastIndex","replaceRouterParams","recreateRoute","to","routes","params","location","stepBack","paths","path","lastRootIndex","routeIndex","indexOf","slice","baseRoute","search","hash","fullRoute","join","routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","str","toLowerCase","replace","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Access","Alert","PermissionAlert","access","hasAccess","Component","browserHistory","changeProjectSlug","removeProject","transferProject","ProjectActions","Button","Confirm","Field","Form","JsonForm","TextField","removePageFiltersStorage","Panel","PanelAlert","PanelHeader","ProjectsStore","handleXhrErrorResponse","withOrganization","SettingsPageHeader","TextBlock","ProjectGeneralSettings","_form","orgId","project","state","api","then","window","assign","email","length","err","status","Set","has","projectId","getEndpoints","renderRemoveProject","isProjectAdmin","isInternal","linebreak","handleRemoveProject","renderTransferProject","handleTransferProject","confirm","handleTransferFieldChange","_data","_onSuccess","_onError","e","stopPropagation","renderBody","endpoint","jsonFormProps","additionalFieldProps","features","team","teams","undefined","resp","setState","onChangeSlug","updateSuccess","link","Origin","Referer","ProjectGeneralSettingsContainer","listen","onProjectsUpdate","componentWillUnmount","unsubscribe","changedSlug","getBySlug","newSlug"],"sourceRoot":""}