{"version":3,"file":"chunks/app_views_settings_organizationTeams_teamMembers_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/roleSelectControl.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationTeams/roleOverwriteWarning.tsx","webpack:///./app/views/settings/organizationTeams/teamMembers.tsx","webpack:///./app/views/settings/organizationTeams/teamMembersRow.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\nimport {MemberRole} from 'sentry/types';\n\ntype OptionType = {\n  details: React.ReactNode;\n  disabled: boolean;\n  label: string;\n  value: string;\n};\n\ntype Props = Omit<ControlProps<OptionType>, 'onChange' | 'value'> & {\n  disableUnallowed: boolean;\n  roles: MemberRole[];\n  /**\n   * Narrower type than SelectControl because there is no empty value\n   */\n  onChange?: (value: OptionType) => void;\n  value?: string | null;\n};\n\nfunction RoleSelectControl({roles, disableUnallowed, ...props}: Props) {\n  return (\n    <SelectControl\n      options={roles?.map(\n        (r: MemberRole) =>\n          ({\n            value: r.id,\n            label: r.name,\n            disabled: disableUnallowed && !r.allowed,\n            details: <Details>{r.desc}</Details>,\n          } as OptionType)\n      )}\n      showDividers\n      {...props}\n    />\n  );\n}\n\nexport default RoleSelectControl;\n\nconst Details = styled('span')`\n  display: inline-block;\n  width: 20rem;\n`;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport {PanelAlert} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconInfo} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport {OrgRole, TeamRole} from 'sentry/types';\n\ntype Props = {\n  orgRole: OrgRole['id'] | undefined;\n  orgRoleList: OrgRole[];\n  teamRoleList: TeamRole[];\n  isSelf?: boolean;\n};\n\nexport const RoleOverwriteIcon: React.FC<Props> = props => {\n  const hasOverride = hasOrgRoleOverwrite(props);\n  if (!hasOverride) {\n    return null;\n  }\n\n  return (\n    <Tooltip title={getOverwriteString(props)}>\n      <IconInfo size=\"sm\" color=\"gray300\" />\n    </Tooltip>\n  );\n};\n\nexport const RoleOverwritePanelAlert: React.FC<Props> = props => {\n  const hasOverride = hasOrgRoleOverwrite(props);\n  if (!hasOverride) {\n    return null;\n  }\n\n  return <PanelAlert>{getOverwriteString(props)}</PanelAlert>;\n};\n\n/**\n * Check that the user's org role has a minimum team role that maps to the lowest\n * possible team role\n */\nexport function hasOrgRoleOverwrite(props: Props) {\n  const {orgRole, orgRoleList, teamRoleList} = props;\n\n  const orgRoleObj = orgRoleList.find(r => r.id === orgRole);\n  return teamRoleList.findIndex(r => r.id === orgRoleObj?.minimumTeamRole) > 0;\n}\n\n/**\n * Standardize string so situations where org-level vs team-level roles is easier to recognize\n */\nexport function getOverwriteString(props: Props) {\n  const {orgRole, orgRoleList, teamRoleList, isSelf} = props;\n  const orgRoleObj = orgRoleList.find(r => r.id === orgRole);\n  const teamRoleObj = teamRoleList.find(r => r.id === orgRoleObj?.minimumTeamRole);\n  if (!orgRoleObj || !teamRoleObj) {\n    return '';\n  }\n\n  return tct(\n    '[selfNoun] organization role as [article] [orgRole] has granted [selfPronoun] a minimum team-level role of [teamRole]',\n    {\n      selfNoun: isSelf ? 'Your' : \"This user's\",\n      selfPronoun: isSelf ? 'you' : 'them',\n      article: 'AEIOU'.includes(orgRoleObj.name[0]) ? 'an' : 'a',\n      orgRole: <strong>{orgRoleObj.name}</strong>,\n      teamRole: <strong>{teamRoleObj.name}</strong>,\n    }\n  );\n}\n\nexport default RoleOverwriteIcon;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {\n  openInviteMembersModal,\n  openTeamAccessRequestModal,\n} from 'sentry/actionCreators/modal';\nimport {joinTeam, leaveTeam} from 'sentry/actionCreators/teams';\nimport {Client} from 'sentry/api';\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport Link from 'sentry/components/links/link';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelHeader} from 'sentry/components/panels';\nimport {IconUser} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Config, Member, Organization, TeamMember} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nimport TeamMembersRow from './teamMembersRow';\n\ntype RouteParams = {\n  orgId: string;\n  teamId: string;\n};\n\ntype Props = {\n  api: Client;\n  config: Config;\n  organization: Organization;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  dropdownBusy: boolean;\n  error: boolean;\n  loading: boolean;\n  orgMembers: Member[];\n  teamMembers: TeamMember[];\n} & AsyncView['state'];\n\nclass TeamMembers extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      loading: true,\n      error: false,\n      dropdownBusy: false,\n      teamMembers: [],\n      orgMembers: [],\n    };\n  }\n\n  componentDidMount() {\n    // Initialize \"add member\" dropdown with data\n    this.fetchMembersRequest('');\n  }\n\n  debouncedFetchMembersRequest = debounce(\n    (query: string) =>\n      this.setState({dropdownBusy: true}, () => this.fetchMembersRequest(query)),\n    200\n  );\n\n  fetchMembersRequest = async (query: string) => {\n    const {params, api} = this.props;\n    const {orgId} = params;\n\n    try {\n      const data = await api.requestPromise(`/organizations/${orgId}/members/`, {\n        query: {query},\n      });\n      this.setState({\n        orgMembers: data,\n        dropdownBusy: false,\n      });\n    } catch (_err) {\n      addErrorMessage(t('Unable to load organization members.'), {\n        duration: 2000,\n      });\n\n      this.setState({\n        dropdownBusy: false,\n      });\n    }\n  };\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params} = this.props;\n\n    return [\n      [\n        'teamMembers',\n        `/teams/${params.orgId}/${params.teamId}/members/`,\n        {},\n        {paginate: true},\n      ],\n    ];\n  }\n\n  addTeamMember = (selection: Item) => {\n    const {params} = this.props;\n    const {orgMembers, teamMembers} = this.state;\n\n    this.setState({loading: true});\n\n    // Reset members list after adding member to team\n    this.debouncedFetchMembersRequest('');\n\n    joinTeam(\n      this.props.api,\n      {\n        orgId: params.orgId,\n        teamId: params.teamId,\n        memberId: selection.value,\n      },\n      {\n        success: () => {\n          const orgMember = orgMembers.find(member => member.id === selection.value);\n          if (orgMember === undefined) {\n            return;\n          }\n          this.setState({\n            loading: false,\n            error: false,\n            teamMembers: teamMembers.concat([orgMember as TeamMember]),\n          });\n          addSuccessMessage(t('Successfully added member to team.'));\n        },\n        error: () => {\n          this.setState({loading: false});\n          addErrorMessage(t('Unable to add team member.'));\n        },\n      }\n    );\n  };\n\n  removeTeamMember = (member: Member) => {\n    const {params} = this.props;\n    const {teamMembers} = this.state;\n    leaveTeam(\n      this.props.api,\n      {\n        orgId: params.orgId,\n        teamId: params.teamId,\n        memberId: member.id,\n      },\n      {\n        success: () => {\n          this.setState({\n            teamMembers: teamMembers.filter(m => m.id !== member.id),\n          });\n          addSuccessMessage(t('Successfully removed member from team.'));\n        },\n        error: () =>\n          addErrorMessage(\n            t('There was an error while trying to remove a member from the team.')\n          ),\n      }\n    );\n  };\n\n  updateTeamMemberRole = (member: Member, newRole: string) => {\n    const {orgId, teamId} = this.props.params;\n    const endpoint = `/organizations/${orgId}/members/${member.id}/teams/${teamId}/`;\n\n    this.props.api.request(endpoint, {\n      method: 'PUT',\n      data: {teamRole: newRole},\n      success: data => {\n        const teamMembers: any = [...this.state.teamMembers];\n        const i = teamMembers.findIndex(m => m.id === member.id);\n        teamMembers[i] = {\n          ...member,\n          teamRole: data.teamRole,\n        };\n        this.setState({teamMembers});\n        addSuccessMessage(t('Successfully changed role for team member.'));\n      },\n      error: () => {\n        addErrorMessage(\n          t('There was an error while trying to change the roles for a team member.')\n        );\n      },\n    });\n  };\n\n  /**\n   * We perform an API request to support orgs with > 100 members (since that's the max API returns)\n   *\n   * @param {Event} e React Event when member filter input changes\n   */\n  handleMemberFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({dropdownBusy: true});\n    this.debouncedFetchMembersRequest(e.target.value);\n  };\n\n  renderDropdown(hasWriteAccess: boolean) {\n    const {organization, params} = this.props;\n    const {orgMembers} = this.state;\n    const existingMembers = new Set(this.state.teamMembers.map(member => member.id));\n\n    // members can add other members to a team if the `Open Membership` setting is enabled\n    // otherwise, `org:write` or `team:admin` permissions are required\n    const hasOpenMembership = !!organization?.openMembership;\n    const canAddMembers = hasOpenMembership || hasWriteAccess;\n\n    const items = (orgMembers || [])\n      .filter(m => !existingMembers.has(m.id))\n      .map(m => ({\n        searchKey: `${m.name} ${m.email}`,\n        value: m.id,\n        label: (\n          <StyledUserListElement>\n            <StyledAvatar user={m} size={24} className=\"avatar\" />\n            <StyledNameOrEmail>{m.name || m.email}</StyledNameOrEmail>\n          </StyledUserListElement>\n        ),\n      }));\n\n    const menuHeader = (\n      <StyledMembersLabel>\n        {t('Members')}\n        <StyledCreateMemberLink\n          to=\"\"\n          onClick={() => openInviteMembersModal({source: 'teams'})}\n          data-test-id=\"invite-member\"\n        >\n          {t('Invite Member')}\n        </StyledCreateMemberLink>\n      </StyledMembersLabel>\n    );\n\n    return (\n      <DropdownAutoComplete\n        items={items}\n        alignMenu=\"right\"\n        onSelect={\n          canAddMembers\n            ? this.addTeamMember\n            : selection =>\n                openTeamAccessRequestModal({\n                  teamId: params.teamId,\n                  orgId: params.orgId,\n                  memberId: selection.value,\n                })\n        }\n        menuHeader={menuHeader}\n        emptyMessage={t('No members')}\n        onChange={this.handleMemberFilterChange}\n        busy={this.state.dropdownBusy}\n        onClose={() => this.debouncedFetchMembersRequest('')}\n      >\n        {({isOpen}) => (\n          <DropdownButton isOpen={isOpen} size=\"xs\" data-test-id=\"add-member\">\n            {t('Add Member')}\n          </DropdownButton>\n        )}\n      </DropdownAutoComplete>\n    );\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    const {organization, config} = this.props;\n    const {teamMembersPageLinks} = this.state;\n    const {access} = organization;\n    const hasWriteAccess = access.includes('org:write') || access.includes('team:admin');\n\n    return (\n      <Fragment>\n        <Panel>\n          <PanelHeader hasButtons>\n            <div>{t('Members')}</div>\n            <div style={{textTransform: 'none'}}>\n              {this.renderDropdown(hasWriteAccess)}\n            </div>\n          </PanelHeader>\n          {this.state.teamMembers.length ? (\n            this.state.teamMembers.map(member => {\n              return (\n                <TeamMembersRow\n                  key={member.id}\n                  hasWriteAccess={hasWriteAccess}\n                  member={member}\n                  organization={organization}\n                  removeMember={this.removeTeamMember}\n                  updateMemberRole={this.updateTeamMemberRole}\n                  user={config.user}\n                />\n              );\n            })\n          ) : (\n            <EmptyMessage icon={<IconUser size=\"xl\" />} size=\"large\">\n              {t('This team has no members')}\n            </EmptyMessage>\n          )}\n        </Panel>\n        <Pagination pageLinks={teamMembersPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledUserListElement = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(0.5)};\n  align-items: center;\n`;\n\nconst StyledNameOrEmail = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst StyledAvatar = styled(props => <UserAvatar {...props} />)`\n  min-width: 1.75em;\n  min-height: 1.75em;\n  width: 1.5em;\n  height: 1.5em;\n`;\n\nconst StyledMembersLabel = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  padding: ${space(1)} 0;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  text-transform: uppercase;\n`;\n\nconst StyledCreateMemberLink = styled(Link)`\n  text-transform: none;\n`;\n\nexport default withConfig(withApi(withOrganization(TeamMembers)));\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport IdBadge from 'sentry/components/idBadge';\nimport {PanelItem} from 'sentry/components/panels';\nimport RoleSelectControl from 'sentry/components/roleSelectControl';\nimport {IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Member, Organization, TeamMember, User} from 'sentry/types';\nimport {\n  hasOrgRoleOverwrite,\n  RoleOverwriteIcon,\n} from 'sentry/views/settings/organizationTeams/roleOverwriteWarning';\n\nconst TeamMembersRow = (props: {\n  hasWriteAccess: boolean;\n  member: TeamMember;\n  organization: Organization;\n  removeMember: (member: Member) => void;\n  updateMemberRole: (member: Member, newRole: string) => void;\n  user: User;\n}) => {\n  const {organization, member, user, hasWriteAccess, removeMember, updateMemberRole} =\n    props;\n\n  return (\n    <TeamRolesPanelItem key={member.id}>\n      <div>\n        <IdBadge avatarSize={36} member={member} useLink orgId={organization.slug} />\n      </div>\n      <div>\n        <TeamRoleSelect\n          hasWriteAccess={hasWriteAccess}\n          updateMemberRole={updateMemberRole}\n          organization={organization}\n          member={member}\n        />\n      </div>\n      <div>\n        <RemoveButton\n          hasWriteAccess={hasWriteAccess}\n          onClick={() => removeMember(member)}\n          member={member}\n          user={user}\n        />\n      </div>\n    </TeamRolesPanelItem>\n  );\n};\n\nconst TeamRoleSelect = (props: {\n  hasWriteAccess: boolean;\n  member: TeamMember;\n  organization: Organization;\n  updateMemberRole: (member: TeamMember, newRole: string) => void;\n}) => {\n  const {hasWriteAccess, organization, member, updateMemberRole} = props;\n  const {orgRoleList, teamRoleList, features} = organization;\n  if (!features.includes('team-roles')) {\n    return null;\n  }\n\n  const {orgRole: orgRoleId} = member;\n  const orgRole = orgRoleList.find(r => r.id === orgRoleId);\n\n  const teamRoleId = member.teamRole || orgRole?.minimumTeamRole;\n  const teamRole = teamRoleList.find(r => r.id === teamRoleId) || teamRoleList[0];\n\n  if (\n    !hasWriteAccess ||\n    hasOrgRoleOverwrite({orgRole: orgRoleId, orgRoleList, teamRoleList})\n  ) {\n    return (\n      <RoleName>\n        {teamRole.name}\n        <IconWrapper>\n          <RoleOverwriteIcon\n            orgRole={orgRoleId}\n            orgRoleList={orgRoleList}\n            teamRoleList={teamRoleList}\n          />\n        </IconWrapper>\n      </RoleName>\n    );\n  }\n\n  return (\n    <RoleSelectWrapper>\n      <RoleSelectControl\n        roles={teamRoleList}\n        value={teamRole.id}\n        onChange={option => updateMemberRole(member, option.value)}\n        disableUnallowed\n      />\n    </RoleSelectWrapper>\n  );\n};\n\nconst RemoveButton = (props: {\n  hasWriteAccess: boolean;\n  member: TeamMember;\n  onClick: () => void;\n  user: User;\n}) => {\n  const {member, user, hasWriteAccess, onClick} = props;\n\n  const isSelf = member.email === user.email;\n  const canRemoveMember = hasWriteAccess || isSelf;\n  if (!canRemoveMember) {\n    return null;\n  }\n\n  return (\n    <Button\n      size=\"xs\"\n      disabled={!canRemoveMember}\n      icon={<IconSubtract size=\"xs\" isCircled />}\n      onClick={onClick}\n      aria-label={t('Remove')}\n    >\n      {t('Remove')}\n    </Button>\n  );\n};\n\nconst RoleName = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst IconWrapper = styled('div')`\n  height: ${space(2)};\n  margin-left: ${space(1)};\n`;\n\nconst RoleSelectWrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  > div:first-child {\n    flex-grow: 1;\n  }\n`;\n\nconst TeamRolesPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: minmax(120px, 4fr) minmax(120px, 2fr) minmax(100px, 1fr);\n  gap: ${space(2)};\n  align-items: center;\n\n  > div:last-child {\n    margin-left: auto;\n  }\n`;\n\nexport default TeamMembersRow;\n"],"names":["SelectControl","RoleSelectControl","roles","disableUnallowed","props","map","r","value","id","label","name","disabled","allowed","details","desc","Details","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","React","PanelAlert","Tooltip","IconInfo","tct","RoleOverwriteIcon","hasOverride","hasOrgRoleOverwrite","getOverwriteString","RoleOverwritePanelAlert","orgRole","orgRoleList","teamRoleList","orgRoleObj","find","findIndex","minimumTeamRole","isSelf","teamRoleObj","selfNoun","selfPronoun","article","includes","teamRole","Fragment","debounce","addErrorMessage","addSuccessMessage","openInviteMembersModal","openTeamAccessRequestModal","joinTeam","leaveTeam","UserAvatar","DropdownAutoComplete","DropdownButton","Link","LoadingError","LoadingIndicator","Pagination","Panel","PanelHeader","IconUser","t","space","withApi","withConfig","withOrganization","EmptyMessage","TeamMembersRow","TeamMembers","query","setState","dropdownBusy","fetchMembersRequest","params","api","orgId","data","requestPromise","orgMembers","_err","duration","selection","teamMembers","state","loading","debouncedFetchMembersRequest","teamId","memberId","success","orgMember","member","undefined","error","concat","filter","m","newRole","endpoint","request","method","i","e","target","getDefaultState","componentDidMount","getEndpoints","paginate","renderDropdown","hasWriteAccess","organization","existingMembers","Set","hasOpenMembership","openMembership","canAddMembers","items","has","searchKey","email","menuHeader","source","addTeamMember","handleMemberFilterChange","isOpen","fetchData","config","teamMembersPageLinks","access","textTransform","length","removeTeamMember","updateTeamMemberRole","user","StyledUserListElement","StyledNameOrEmail","p","theme","fontSizeSmall","overflowEllipsis","StyledAvatar","StyledMembersLabel","fontSizeExtraSmall","StyledCreateMemberLink","Button","IdBadge","PanelItem","IconSubtract","removeMember","updateMemberRole","slug","TeamRoleSelect","features","orgRoleId","teamRoleId","option","RemoveButton","onClick","canRemoveMember","RoleName","IconWrapper","RoleSelectWrapper","TeamRolesPanelItem"],"sourceRoot":""}