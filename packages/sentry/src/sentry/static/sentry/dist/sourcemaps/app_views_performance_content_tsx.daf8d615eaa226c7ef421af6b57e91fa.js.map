{"version":3,"file":"chunks/app_views_performance_content_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/performance/layouts/index.tsx","webpack:///./app/components/performance/searchBar.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/performance/contexts/performanceDisplayContext.tsx","webpack:///./app/views/performance/content.tsx","webpack:///./app/views/performance/landing/chart/histogramChart.tsx","webpack:///./app/views/performance/landing/data.tsx","webpack:///./app/views/performance/landing/display/utils.tsx","webpack:///./app/views/performance/landing/index.tsx","webpack:///./app/views/performance/landing/metricsDataSwitcher.tsx","webpack:///./app/views/performance/landing/metricsDataSwitcherAlert.tsx","webpack:///./app/views/performance/landing/views/allTransactionsView.tsx","webpack:///./app/views/performance/landing/views/backendView.tsx","webpack:///./app/views/performance/landing/views/frontendOtherView.tsx","webpack:///./app/views/performance/landing/views/frontendPageloadView.tsx","webpack:///./app/views/performance/landing/views/mobileView.tsx","webpack:///./app/views/performance/landing/widgets/components/widgetChartRow.tsx","webpack:///./app/views/performance/landing/widgets/components/widgetContainer.tsx","webpack:///./app/views/performance/landing/widgets/transforms/transformDiscoverToList.tsx","webpack:///./app/views/performance/landing/widgets/transforms/transformEventsToVitals.tsx","webpack:///./app/views/performance/landing/widgets/transforms/transformHistogramQuery.tsx","webpack:///./app/views/performance/landing/widgets/transforms/transformTrendsDiscover.tsx","webpack:///./app/views/performance/landing/widgets/widgets/histogramWidget.tsx","webpack:///./app/views/performance/landing/widgets/widgets/lineChartListWidget.tsx","webpack:///./app/views/performance/landing/widgets/widgets/trendsWidget.tsx","webpack:///./app/views/performance/landing/widgets/widgets/vitalWidget.tsx","webpack:///./app/views/performance/table.tsx","webpack:///./app/views/performance/transactionSummary/transactionOverview/metricEvents/metricsEventsDropdown.tsx","webpack:///./app/views/performance/vitalDetail/vitalChart.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\n/**\n * Common performance layouts\n */\n\nexport const PerformanceLayoutBodyRow = styled('div')<{\n  minSize: number;\n  columns?: number;\n}>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-column-gap: ${space(2)};\n  grid-row-gap: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    ${p =>\n      p.columns\n        ? `\n    grid-template-columns: repeat(${p.columns}, 1fr);\n    `\n        : `\n    grid-template-columns: repeat(auto-fit, minmax(${p.minSize}px, 1fr));\n    `}\n  }\n`;\n","import {useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport BaseSearchBar from 'sentry/components/searchBar';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {doDiscoverQuery} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useApi from 'sentry/utils/useApi';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nimport SearchDropdown from '../smartSearchBar/searchDropdown';\nimport {ItemType, SearchGroup} from '../smartSearchBar/types';\n\ntype SearchBarProps = {\n  eventView: EventView;\n  location: Location;\n  onSearch: (query: string) => void;\n  organization: Organization;\n  query: string;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {organization, eventView: _eventView, onSearch, query: searchQuery} = props;\n  const [searchResults, setSearchResults] = useState<SearchGroup[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [searchString, setSearchString] = useState(searchQuery);\n\n  const api = useApi();\n  const eventView = _eventView.clone();\n\n  const prepareQuery = (query: string) => {\n    const prependedChar = query[0] === '*' ? '' : '*';\n    const appendedChar = query[query.length - 1] === '*' ? '' : '*';\n    return `${prependedChar}${query}${appendedChar}`;\n  };\n\n  const getSuggestedTransactions = debounce(\n    async query => {\n      if (query.length === 0) {\n        onSearch('');\n      }\n      if (query.length < 3) {\n        setSearchResults([]);\n        return;\n      }\n      setSearchString(query);\n      const projectIdStrings = (eventView.project as Readonly<number>[])?.map(String);\n      try {\n        setLoading(true);\n        const conditions = new MutableSearch('');\n        conditions.addFilterValues('transaction', [prepareQuery(query)], false);\n        conditions.addFilterValues('event.type', ['transaction']);\n\n        // clear any active requests\n        if (Object.keys(api.activeRequests).length) {\n          api.clear();\n        }\n\n        const useEvents = organization.features.includes(\n          'performance-frontend-use-events-endpoint'\n        );\n        const url = useEvents\n          ? `/organizations/${organization.slug}/events/`\n          : `/organizations/${organization.slug}/eventsv2/`;\n\n        const [results] = await doDiscoverQuery<{\n          data: Array<{'count()': number; project_id: number; transaction: string}>;\n        }>(api, url, {\n          field: ['transaction', 'project_id', 'count()'],\n          project: projectIdStrings,\n          sort: '-count()',\n          query: conditions.formatString(),\n          statsPeriod: eventView.statsPeriod,\n          referrer: 'api.performance.transaction-name-search-bar',\n        });\n\n        const parsedResults = results.data.reduce(\n          (searchGroup: SearchGroup, item) => {\n            searchGroup.children.push({\n              value: `${item.transaction}:${item.project_id}`,\n              title: item.transaction,\n              type: ItemType.LINK,\n              desc: '',\n            });\n            return searchGroup;\n          },\n          {\n            title: 'All Transactions',\n            children: [],\n            icon: null,\n            type: 'header',\n          }\n        );\n        setSearchResults([parsedResults]);\n      } catch (_) {\n        throw new Error('Unable to fetch event field values');\n      } finally {\n        setLoading(false);\n      }\n    },\n    DEFAULT_DEBOUNCE_DURATION,\n    {leading: true}\n  );\n\n  const handleSearch = (query: string) => {\n    const lastIndex = query.lastIndexOf(':');\n    const transactionName = query.slice(0, lastIndex);\n    setSearchResults([]);\n    setSearchString(transactionName);\n    onSearch(`transaction:${transactionName}`);\n  };\n\n  const navigateToTransactionSummary = (name: string) => {\n    const lastIndex = name.lastIndexOf(':');\n    const transactionName = name.slice(0, lastIndex);\n    const projectId = name.slice(lastIndex + 1);\n    const query = eventView.generateQueryStringObject();\n    setSearchResults([]);\n\n    const next = transactionSummaryRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: String(transactionName),\n      projectID: projectId,\n      query,\n    });\n    browserHistory.push(next);\n  };\n\n  return (\n    <Container data-test-id=\"transaction-search-bar\">\n      <BaseSearchBar\n        placeholder={t('Search Transactions')}\n        onChange={getSuggestedTransactions}\n        query={searchString}\n      />\n      <SearchDropdown\n        css={{\n          display: searchResults[0]?.children.length ? 'block' : 'none',\n          maxHeight: '300px',\n          overflowY: 'auto',\n        }}\n        searchSubstring={searchString}\n        loading={loading}\n        items={searchResults}\n        onClick={handleSearch}\n        onIconClick={navigateToTransactionSummary}\n      />\n    </Container>\n  );\n}\n\nconst Container = styled('div')`\n  position: relative;\n`;\n\nexport default SearchBar;\n","import {useCallback, useRef, useState} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Input, {InputProps} from 'sentry/components/input';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <StyledInput\n        {...inputProps}\n        ref={inputRef}\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        value={query}\n        onChange={onQueryChange}\n        width={width}\n        size={size}\n        showClearButton={!!query}\n      />\n      <StyledIconSearch\n        color=\"subText\"\n        size={size === 'xs' ? 'xs' : 'sm'}\n        inputSize={size}\n      />\n      {!!query && (\n        <SearchClearButton\n          type=\"button\"\n          priority=\"link\"\n          onClick={clearSearch}\n          size=\"xs\"\n          icon={<IconClose size=\"xs\" />}\n          aria-label={t('Clear')}\n          inputSize={size}\n        />\n      )}\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(Input)<{showClearButton: boolean}>`\n  width: ${p => (p.width ? p.width : undefined)};\n  padding-left: ${p => `calc(\n    ${p.theme.formPadding[p.size ?? 'md'].paddingLeft}px * 1.5 +\n    ${p.theme.iconSizes.sm}\n  )`};\n\n  ${p =>\n    p.showClearButton &&\n    `\n      padding-right: calc(\n        ${p.theme.formPadding[p.size ?? 'md'].paddingRight}px * 1.5 +\n        ${p.theme.iconSizes.xs}\n      );\n    `}\n`;\n\nconst StyledIconSearch = styled(IconSearch, {\n  shouldForwardProp: prop => typeof prop === 'string' && isPropValid(prop),\n})<{inputSize: InputProps['size']}>`\n  position: absolute;\n  top: 50%;\n  left: ${p => p.theme.formPadding[p.inputSize ?? 'md'].paddingLeft}px;\n  transform: translateY(-50%);\n  pointer-events: none;\n`;\n\nconst SearchClearButton = styled(Button)<{inputSize: InputProps['size']}>`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: ${p => p.theme.formPadding[p.inputSize ?? 'md'].paddingRight}px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.subText};\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default SearchBar;\n","import {PROJECT_PERFORMANCE_TYPE} from 'sentry/views/performance/utils';\n\nimport {createDefinedContext} from './utils';\n\ntype useCurrentPerformanceView = {\n  performanceType: PROJECT_PERFORMANCE_TYPE;\n};\n\nconst [PerformanceDisplayProvider, _usePerformanceDisplayType] =\n  createDefinedContext<useCurrentPerformanceView>({\n    name: 'CurrentPerformanceViewContext',\n  });\n\nexport {PerformanceDisplayProvider};\n\nexport function usePerformanceDisplayType(): PROJECT_PERFORMANCE_TYPE {\n  return _usePerformanceDisplayType().performanceType;\n}\n","import {useEffect, useRef, useState} from 'react';\nimport {browserHistory, InjectedRouter} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport {Location} from 'history';\nimport isEqual from 'lodash/isEqual';\n\nimport {loadOrganizationTags} from 'sentry/actionCreators/tags';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport {PageFilters, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {\n  canUseMetricsData,\n  MEPState,\n  METRIC_SEARCH_SETTING_PARAM,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {PerformanceEventViewProvider} from 'sentry/utils/performance/contexts/performanceEventViewContext';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePrevious from 'sentry/utils/usePrevious';\nimport useProjects from 'sentry/utils/useProjects';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport {DEFAULT_STATS_PERIOD, generatePerformanceEventView} from './data';\nimport {PerformanceLanding} from './landing';\nimport {\n  addRoutePerformanceContext,\n  getSelectedProjectPlatforms,\n  handleTrendsClick,\n} from './utils';\n\ntype Props = {\n  location: Location;\n  router: InjectedRouter;\n  selection: PageFilters;\n  demoMode?: boolean;\n};\n\ntype State = {\n  error?: string;\n};\n\nfunction PerformanceContent({selection, location, demoMode, router}: Props) {\n  const api = useApi();\n  const organization = useOrganization();\n  const {projects} = useProjects();\n  const mounted = useRef(false);\n  const previousDateTime = usePrevious(selection.datetime);\n\n  const [state, setState] = useState<State>({error: undefined});\n  const withStaticFilters = canUseMetricsData(organization);\n  const eventView = generatePerformanceEventView(location, projects, {\n    withStaticFilters,\n  });\n\n  function getOnboardingProject(): Project | undefined {\n    // XXX used by getsentry to bypass onboarding for the upsell demo state.\n    if (demoMode) {\n      return undefined;\n    }\n\n    if (projects.length === 0) {\n      return undefined;\n    }\n\n    // Current selection is 'my projects' or 'all projects'\n    if (eventView.project.length === 0 || eventView.project === [ALL_ACCESS_PROJECTS]) {\n      const filtered = projects.filter(p => p.firstTransactionEvent === false);\n      if (filtered.length === projects.length) {\n        return filtered[0];\n      }\n    }\n\n    // Any other subset of projects.\n    const filtered = projects.filter(\n      p =>\n        eventView.project.includes(parseInt(p.id, 10)) &&\n        p.firstTransactionEvent === false\n    );\n    if (filtered.length === eventView.project.length) {\n      return filtered[0];\n    }\n\n    return undefined;\n  }\n\n  const onboardingProject = getOnboardingProject();\n\n  useEffect(() => {\n    if (!mounted.current) {\n      const selectedProjects = getSelectedProjectPlatforms(location, projects);\n\n      trackAdvancedAnalyticsEvent('performance_views.overview.view', {\n        organization,\n        show_onboarding: onboardingProject !== undefined,\n        project_platforms: selectedProjects,\n      });\n\n      loadOrganizationTags(api, organization.slug, selection);\n      addRoutePerformanceContext(selection);\n      mounted.current = true;\n      return;\n    }\n    if (!isEqual(previousDateTime, selection.datetime)) {\n      loadOrganizationTags(api, organization.slug, selection);\n      addRoutePerformanceContext(selection);\n    }\n  }, [\n    selection.datetime,\n    previousDateTime,\n    selection,\n    api,\n    organization,\n    onboardingProject,\n    location,\n    projects,\n  ]);\n\n  function setError(newError?: string) {\n    if (\n      typeof newError === 'object' ||\n      (Array.isArray(newError) && typeof newError[0] === 'object')\n    ) {\n      Sentry.withScope(scope => {\n        scope.setExtra('error', newError);\n        Sentry.captureException(new Error('setError failed with error type.'));\n      });\n      return;\n    }\n    setState({...state, error: newError});\n  }\n\n  function handleSearch(searchQuery: string, currentMEPState?: MEPState) {\n    trackAdvancedAnalyticsEvent('performance_views.overview.search', {organization});\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        cursor: undefined,\n        query: String(searchQuery).trim() || undefined,\n        [METRIC_SEARCH_SETTING_PARAM]: currentMEPState,\n        isDefaultQuery: false,\n      },\n    });\n  }\n\n  return (\n    <SentryDocumentTitle title={t('Performance')} orgSlug={organization.slug}>\n      <PerformanceEventViewProvider value={{eventView}}>\n        <PageFiltersContainer\n          defaultSelection={{\n            datetime: {\n              start: null,\n              end: null,\n              utc: false,\n              period: DEFAULT_STATS_PERIOD,\n            },\n          }}\n        >\n          <PerformanceLanding\n            router={router}\n            eventView={eventView}\n            setError={setError}\n            handleSearch={handleSearch}\n            handleTrendsClick={() =>\n              handleTrendsClick({\n                location,\n                organization,\n                projectPlatforms: getSelectedProjectPlatforms(location, projects),\n              })\n            }\n            onboardingProject={onboardingProject}\n            organization={organization}\n            location={location}\n            projects={projects}\n            selection={selection}\n            withStaticFilters={withStaticFilters}\n          />\n        </PageFiltersContainer>\n      </PerformanceEventViewProvider>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withPageFilters(PerformanceContent);\n","import {Fragment} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {BarChart, BarChartProps} from 'sentry/components/charts/barChart';\nimport BarChartZoom from 'sentry/components/charts/barChartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons/iconWarning';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {formatAbbreviatedNumber} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport HistogramQuery from 'sentry/utils/performance/histogram/histogramQuery';\nimport {HistogramData} from 'sentry/utils/performance/histogram/types';\nimport {\n  computeBuckets,\n  formatHistogramData,\n} from 'sentry/utils/performance/histogram/utils';\n\nimport {DoubleHeaderContainer} from '../../styles';\nimport {getFieldOrBackup} from '../display/utils';\n\nconst NUM_BUCKETS = 50;\nconst PRECISION = 0;\n\ntype Props = {\n  eventView: EventView;\n  field: string;\n  location: Location;\n  onFilterChange: (minValue: number, maxValue: number) => void;\n  organization: Organization;\n  title: string;\n  titleTooltip: string;\n  usingBackupAxis: boolean;\n  backupField?: string;\n  didReceiveMultiAxis?: (axisCounts: Record<string, number>) => void;\n};\n\nexport function HistogramChart(props: Props) {\n  const {\n    location,\n    onFilterChange,\n    organization,\n    eventView,\n    field,\n    title,\n    titleTooltip,\n    didReceiveMultiAxis,\n    backupField,\n    usingBackupAxis,\n  } = props;\n\n  const _backupField = backupField ? [backupField] : [];\n\n  return (\n    <div>\n      <DoubleHeaderContainer>\n        <HeaderTitleLegend>\n          {title}\n          <QuestionTooltip position=\"top\" size=\"sm\" title={titleTooltip} />\n        </HeaderTitleLegend>\n      </DoubleHeaderContainer>\n      <HistogramQuery\n        location={location}\n        orgSlug={organization.slug}\n        eventView={eventView}\n        numBuckets={NUM_BUCKETS}\n        precision={PRECISION}\n        fields={[field, ..._backupField]}\n        dataFilter=\"exclude_outliers\"\n        didReceiveMultiAxis={didReceiveMultiAxis}\n      >\n        {results => {\n          const _field = usingBackupAxis ? getFieldOrBackup(field, backupField) : field;\n          const isLoading = results.isLoading;\n          const isErrored = results.error !== null;\n          const chartData = results.histograms?.[_field];\n\n          if (isErrored) {\n            return (\n              <ErrorPanel height=\"250px\">\n                <IconWarning color=\"gray300\" size=\"lg\" />\n              </ErrorPanel>\n            );\n          }\n\n          if (!chartData) {\n            return null;\n          }\n\n          return (\n            <Chart\n              isLoading={isLoading}\n              isErrored={isErrored}\n              chartData={chartData}\n              location={location}\n              onFilterChange={onFilterChange}\n              field={_field}\n            />\n          );\n        }}\n      </HistogramQuery>\n    </div>\n  );\n}\n\ntype ChartProps = {\n  field: string;\n  isErrored: boolean;\n  isLoading: boolean;\n  location: Location;\n  onFilterChange: Props['onFilterChange'];\n  chartData?: HistogramData;\n  colors?: string[];\n  disableChartPadding?: boolean;\n  disableXAxis?: boolean;\n  disableZoom?: boolean;\n  grid?: BarChartProps['grid'];\n  height?: number;\n};\n\nexport function Chart(props: ChartProps) {\n  const {\n    isLoading,\n    isErrored,\n    chartData,\n    location,\n    field,\n    onFilterChange,\n    height,\n    grid,\n    disableXAxis,\n    disableZoom,\n    disableChartPadding,\n    colors,\n  } = props;\n  const theme = useTheme();\n\n  if (!chartData) {\n    return null;\n  }\n\n  const series = {\n    seriesName: t('Count'),\n    data: formatHistogramData(chartData, {type: 'duration'}),\n  };\n\n  const xAxis = {\n    type: 'category' as const,\n    truncate: true,\n    axisTick: {\n      alignWithLabel: true,\n    },\n  };\n\n  const allSeries: Series[] = [];\n\n  if (!isLoading && !isErrored) {\n    allSeries.push(series);\n  }\n\n  const yAxis = {\n    type: 'value' as const,\n    axisLabel: {\n      color: theme.chartLabel,\n      formatter: formatAbbreviatedNumber,\n    },\n  };\n\n  return (\n    <Fragment>\n      <BarChartZoom\n        minZoomWidth={10 ** -PRECISION * NUM_BUCKETS}\n        location={location}\n        paramStart={`${field}:>=`}\n        paramEnd={`${field}:<=`}\n        xAxisIndex={[0]}\n        buckets={computeBuckets(chartData)}\n        onHistoryPush={onFilterChange}\n      >\n        {zoomRenderProps => {\n          return (\n            <BarChartContainer hasPadding={!disableChartPadding}>\n              <MaskContainer>\n                <TransparentLoadingMask visible={isLoading} />\n                {getDynamicText({\n                  value: (\n                    <BarChart\n                      height={height ?? 250}\n                      series={allSeries}\n                      xAxis={disableXAxis ? {show: false} : xAxis}\n                      yAxis={yAxis}\n                      colors={colors}\n                      grid={\n                        grid ?? {\n                          left: space(3),\n                          right: space(3),\n                          top: space(3),\n                          bottom: isLoading ? space(4) : space(1.5),\n                        }\n                      }\n                      stacked\n                      {...(disableZoom ? {} : zoomRenderProps)}\n                    />\n                  ),\n                  fixed: <Placeholder height=\"250px\" testId=\"skeleton-ui\" />,\n                })}\n              </MaskContainer>\n            </BarChartContainer>\n          );\n        }}\n      </BarChartZoom>\n    </Fragment>\n  );\n}\n\nconst BarChartContainer = styled('div')<{hasPadding?: boolean}>`\n  padding-top: ${p => (p.hasPadding ? space(1) : 0)};\n  position: relative;\n`;\n\nconst MaskContainer = styled('div')`\n  position: relative;\n`;\n\nexport default HistogramChart;\n","export const FRONTEND_PAGELOAD_COLUMN_TITLES = [\n  'transaction',\n  'project',\n  'tpm',\n  'FCP',\n  'LCP',\n  'FID',\n  'CLS',\n  'users',\n  'user misery',\n];\n\nexport const FRONTEND_OTHER_COLUMN_TITLES = [\n  'transaction',\n  'project',\n  'operation',\n  'tpm',\n  'p50()',\n  'p75()',\n  'p95()',\n  'users',\n  'user misery',\n];\n\nexport const BACKEND_COLUMN_TITLES = [\n  'transaction',\n  'project',\n  'operation',\n  'http method',\n  'tpm',\n  'p50',\n  'p95',\n  'failure rate',\n  'apdex',\n  'users',\n  'user misery',\n];\n\nexport const MOBILE_COLUMN_TITLES = [\n  'transaction',\n  'project',\n  'operation',\n  'tpm',\n  'slow frame %',\n  'frozen frame %',\n  'users',\n  'user misery',\n];\n\nexport const REACT_NATIVE_COLUMN_TITLES = [\n  'transaction',\n  'project',\n  'operation',\n  'tpm',\n  'slow frame %',\n  'frozen frame %',\n  'stall %',\n  'users',\n  'user misery',\n];\n","import {AxisOption} from '../../data';\n\nexport function getAxisOrBackupAxis(axis: AxisOption, usingBackupAxis: boolean) {\n  const displayedAxis = usingBackupAxis ? getBackupAxisOption(axis) ?? axis : axis;\n  return displayedAxis;\n}\n\nexport function getBackupAxisOption(axis: AxisOption) {\n  return axis.backupOption;\n}\n\nexport function getBackupAxes(axes: AxisOption[], usingBackupAxis: boolean) {\n  return usingBackupAxis ? axes.map(axis => getBackupAxisOption(axis) ?? axis) : axes;\n}\n\nexport function getBackupField(axis: AxisOption) {\n  const backupOption = getBackupAxisOption(axis);\n\n  if (!backupOption) {\n    return undefined;\n  }\n\n  return backupOption.field;\n}\n\nexport function getFieldOrBackup(field: string, backupField?: string) {\n  return backupField ?? field;\n}\n","import {FC, Fragment, useEffect, useRef} from 'react';\nimport {browserHistory, InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageHeading from 'sentry/components/pageHeading';\nimport TransactionNameSearchBar from 'sentry/components/performance/searchBar';\nimport * as TeamKeyTransactionManager from 'sentry/components/performance/teamKeyTransactionsManager';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {generateAggregateFields} from 'sentry/utils/discover/fields';\nimport {GenericQueryBatcher} from 'sentry/utils/performance/contexts/genericQueryBatcher';\nimport {MetricsCardinalityProvider} from 'sentry/utils/performance/contexts/metricsCardinality';\nimport {\n  canUseMetricsData,\n  MEPConsumer,\n  MEPSettingProvider,\n  MEPState,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {\n  PageErrorAlert,\n  PageErrorProvider,\n} from 'sentry/utils/performance/contexts/pageError';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useTeams from 'sentry/utils/useTeams';\n\nimport Onboarding from '../onboarding';\nimport {MetricsEventsDropdown} from '../transactionSummary/transactionOverview/metricEvents/metricsEventsDropdown';\nimport {getTransactionSearchQuery} from '../utils';\n\nimport {AllTransactionsView} from './views/allTransactionsView';\nimport {BackendView} from './views/backendView';\nimport {FrontendOtherView} from './views/frontendOtherView';\nimport {FrontendPageloadView} from './views/frontendPageloadView';\nimport {MobileView} from './views/mobileView';\nimport {MetricsDataSwitcher} from './metricsDataSwitcher';\nimport {MetricsDataSwitcherAlert} from './metricsDataSwitcherAlert';\nimport {\n  getDefaultDisplayForPlatform,\n  getLandingDisplayFromParam,\n  handleLandingDisplayChange,\n  LANDING_DISPLAYS,\n  LandingDisplayField,\n} from './utils';\n\ntype Props = {\n  eventView: EventView;\n  handleSearch: (searchQuery: string, currentMEPState?: MEPState) => void;\n  handleTrendsClick: () => void;\n  location: Location;\n  onboardingProject: Project | undefined;\n  organization: Organization;\n  projects: Project[];\n  router: InjectedRouter;\n  selection: PageFilters;\n  setError: (msg: string | undefined) => void;\n  withStaticFilters: boolean;\n};\n\nconst fieldToViewMap: Record<LandingDisplayField, FC<Props>> = {\n  [LandingDisplayField.ALL]: AllTransactionsView,\n  [LandingDisplayField.BACKEND]: BackendView,\n  [LandingDisplayField.FRONTEND_OTHER]: FrontendOtherView,\n  [LandingDisplayField.FRONTEND_PAGELOAD]: FrontendPageloadView,\n  [LandingDisplayField.MOBILE]: MobileView,\n};\n\nexport function PerformanceLanding(props: Props) {\n  const {\n    organization,\n    location,\n    eventView,\n    projects,\n    handleSearch,\n    handleTrendsClick,\n    onboardingProject,\n  } = props;\n\n  const {teams, initiallyLoaded} = useTeams({provideUserTeams: true});\n\n  const hasMounted = useRef(false);\n  const paramLandingDisplay = getLandingDisplayFromParam(location);\n  const defaultLandingDisplayForProjects = getDefaultDisplayForPlatform(\n    projects,\n    eventView\n  );\n  const landingDisplay = paramLandingDisplay ?? defaultLandingDisplayForProjects;\n  const showOnboarding = onboardingProject !== undefined;\n\n  useEffect(() => {\n    if (hasMounted.current) {\n      browserHistory.replace({\n        pathname: location.pathname,\n        query: {\n          ...location.query,\n          landingDisplay: undefined,\n        },\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [eventView.project.join('.')]);\n\n  useEffect(() => {\n    hasMounted.current = true;\n  }, []);\n\n  const getFreeTextFromQuery = (query: string) => {\n    const conditions = new MutableSearch(query);\n    const transactionValues = conditions.getFilterValues('transaction');\n    if (transactionValues.length) {\n      return transactionValues[0];\n    }\n    return '';\n  };\n\n  const derivedQuery = getTransactionSearchQuery(location, eventView.query);\n\n  const ViewComponent = fieldToViewMap[landingDisplay.field];\n\n  let pageFilters: React.ReactNode = (\n    <PageFilterBar condensed>\n      <ProjectPageFilter />\n      <EnvironmentPageFilter />\n      <DatePageFilter alignDropdown=\"left\" />\n    </PageFilterBar>\n  );\n\n  if (showOnboarding) {\n    pageFilters = <SearchContainerWithFilter>{pageFilters}</SearchContainerWithFilter>;\n  }\n\n  const SearchFilterContainer = organization.features.includes('performance-use-metrics')\n    ? SearchContainerWithFilterAndMetrics\n    : SearchContainerWithFilter;\n\n  const shouldShowTransactionNameOnlySearch = canUseMetricsData(organization);\n\n  return (\n    <StyledPageContent data-test-id=\"performance-landing-v3\">\n      <PageErrorProvider>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <StyledHeading>{t('Performance')}</StyledHeading>\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            {!showOnboarding && (\n              <ButtonBar gap={3}>\n                <Button\n                  priority=\"primary\"\n                  data-test-id=\"landing-header-trends\"\n                  onClick={() => handleTrendsClick()}\n                >\n                  {t('View Trends')}\n                </Button>\n              </ButtonBar>\n            )}\n          </Layout.HeaderActions>\n\n          <Layout.HeaderNavTabs>\n            {LANDING_DISPLAYS.map(({label, field}) => (\n              <li key={label} className={landingDisplay.field === field ? 'active' : ''}>\n                <a\n                  href=\"#\"\n                  data-test-id={`landing-tab-${field}`}\n                  onClick={() =>\n                    handleLandingDisplayChange(\n                      field,\n                      location,\n                      projects,\n                      organization,\n                      eventView\n                    )\n                  }\n                >\n                  {t(label)}\n                </a>\n              </li>\n            ))}\n          </Layout.HeaderNavTabs>\n        </Layout.Header>\n        <Layout.Body data-test-id=\"performance-landing-body\">\n          <Layout.Main fullWidth>\n            <MetricsCardinalityProvider organization={organization} location={location}>\n              <MetricsDataSwitcher\n                organization={organization}\n                eventView={eventView}\n                location={location}\n              >\n                {metricsDataSide => (\n                  <MEPSettingProvider\n                    location={location}\n                    forceTransactions={metricsDataSide.forceTransactionsOnly}\n                  >\n                    <MetricsDataSwitcherAlert\n                      organization={organization}\n                      eventView={eventView}\n                      projects={projects}\n                      location={location}\n                      router={props.router}\n                      {...metricsDataSide}\n                    />\n                    <PageErrorAlert />\n                    {showOnboarding ? (\n                      <Fragment>\n                        {pageFilters}\n                        <Onboarding\n                          organization={organization}\n                          project={onboardingProject}\n                        />\n                      </Fragment>\n                    ) : (\n                      <Fragment>\n                        <SearchFilterContainer>\n                          {pageFilters}\n                          <MEPConsumer>\n                            {({metricSettingState}) => {\n                              const searchQuery =\n                                metricSettingState === MEPState.metricsOnly\n                                  ? getFreeTextFromQuery(derivedQuery)\n                                  : derivedQuery;\n\n                              return metricSettingState === MEPState.metricsOnly &&\n                                shouldShowTransactionNameOnlySearch ? (\n                                // TODO replace `handleSearch prop` with transaction name search once\n                                // transaction name search becomes the default search bar\n                                <TransactionNameSearchBar\n                                  organization={organization}\n                                  location={location}\n                                  eventView={eventView}\n                                  onSearch={(query: string) =>\n                                    handleSearch(query, metricSettingState)\n                                  }\n                                  query={searchQuery}\n                                />\n                              ) : (\n                                <SearchBar\n                                  searchSource=\"performance_landing\"\n                                  organization={organization}\n                                  projectIds={eventView.project}\n                                  query={searchQuery}\n                                  fields={generateAggregateFields(\n                                    organization,\n                                    [...eventView.fields, {field: 'tps()'}],\n                                    ['epm()', 'eps()']\n                                  )}\n                                  onSearch={(query: string) =>\n                                    handleSearch(query, metricSettingState ?? undefined)\n                                  }\n                                  maxQueryLength={MAX_QUERY_LENGTH}\n                                />\n                              );\n                            }}\n                          </MEPConsumer>\n                          <MetricsEventsDropdown />\n                        </SearchFilterContainer>\n                        {initiallyLoaded ? (\n                          <TeamKeyTransactionManager.Provider\n                            organization={organization}\n                            teams={teams}\n                            selectedTeams={['myteams']}\n                            selectedProjects={eventView.project.map(String)}\n                          >\n                            <GenericQueryBatcher>\n                              <ViewComponent {...props} />\n                            </GenericQueryBatcher>\n                          </TeamKeyTransactionManager.Provider>\n                        ) : (\n                          <LoadingIndicator />\n                        )}\n                      </Fragment>\n                    )}\n                  </MEPSettingProvider>\n                )}\n              </MetricsDataSwitcher>\n            </MetricsCardinalityProvider>\n          </Layout.Main>\n        </Layout.Body>\n      </PageErrorProvider>\n    </StyledPageContent>\n  );\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nconst StyledHeading = styled(PageHeading)`\n  line-height: 40px;\n`;\n\nconst SearchContainerWithFilter = styled('div')`\n  display: grid;\n  grid-template-rows: auto auto;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-rows: auto;\n    grid-template-columns: auto 1fr;\n  }\n`;\n\nconst SearchContainerWithFilterAndMetrics = styled('div')`\n  display: grid;\n  grid-template-rows: auto auto auto;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-rows: auto;\n    grid-template-columns: auto 1fr auto;\n  }\n`;\n","import {Fragment, useEffect} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  MetricDataSwitcherOutcome,\n  useMetricsCardinalityContext,\n} from 'sentry/utils/performance/contexts/metricsCardinality';\nimport {\n  canUseMetricsData,\n  MEPState,\n  METRIC_SEARCH_SETTING_PARAM,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\ninterface MetricDataSwitchProps {\n  children: (props: MetricDataSwitcherOutcome) => React.ReactNode;\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  hideLoadingIndicator?: boolean;\n}\n\n/**\n * This component decides based on some stats about current projects whether to show certain views of the landing page.\n * It is primarily needed for the rollout during which time users, despite having the flag enabled,\n * may or may not have sampling rules, compatible sdk's etc. This can be simplified post rollout.\n */\nexport function MetricsDataSwitcher(props: MetricDataSwitchProps) {\n  const isUsingMetrics = canUseMetricsData(props.organization);\n  const metricsCardinality = useMetricsCardinalityContext();\n\n  if (!isUsingMetrics) {\n    return (\n      <Fragment>\n        {props.children({\n          forceTransactionsOnly: true,\n        })}\n      </Fragment>\n    );\n  }\n\n  if (metricsCardinality.isLoading && !props.hideLoadingIndicator) {\n    return (\n      <Fragment>\n        <LoadingContainer>\n          <LoadingIndicator />\n        </LoadingContainer>\n      </Fragment>\n    );\n  }\n\n  if (!metricsCardinality.outcome) {\n    return (\n      <Fragment>\n        {props.children({\n          forceTransactionsOnly: true,\n        })}\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <MetricsSwitchHandler\n        eventView={props.eventView}\n        location={props.location}\n        outcome={metricsCardinality.outcome}\n        switcherChildren={props.children}\n      />\n    </Fragment>\n  );\n}\n\ninterface SwitcherHandlerProps {\n  eventView: EventView;\n  location: Location;\n  outcome: MetricDataSwitcherOutcome;\n  switcherChildren: MetricDataSwitchProps['children'];\n}\n\nfunction MetricsSwitchHandler({\n  switcherChildren,\n  outcome,\n  location,\n  eventView,\n}: SwitcherHandlerProps) {\n  const {query} = location;\n  const mepSearchState = decodeScalar(query[METRIC_SEARCH_SETTING_PARAM], '');\n  const hasQuery = decodeScalar(query.query, '');\n  const queryIsTransactionsBased = mepSearchState === MEPState.transactionsOnly;\n\n  const shouldAdjustQuery =\n    hasQuery && queryIsTransactionsBased && !outcome.forceTransactionsOnly;\n\n  useEffect(() => {\n    if (shouldAdjustQuery) {\n      browserHistory.push({\n        pathname: location.pathname,\n        query: {\n          ...location.query,\n          cursor: undefined,\n          query: undefined,\n          [METRIC_SEARCH_SETTING_PARAM]: undefined,\n        },\n      });\n    }\n  }, [shouldAdjustQuery, location]);\n\n  if (hasQuery && queryIsTransactionsBased && !outcome.forceTransactionsOnly) {\n    eventView.query = ''; // TODO: Create switcher provider and move it to the route level to remove the need for this.\n  }\n\n  return <Fragment>{switcherChildren(outcome)}</Fragment>;\n}\n\nconst LoadingContainer = styled('div')`\n  display: flex;\n  justify-content: center;\n`;\n","import {useCallback, useMemo} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport {Location} from 'history';\n\nimport {updateProjects} from 'sentry/actionCreators/pageFilters';\nimport Alert from 'sentry/components/alert';\nimport {GlobalSdkUpdateAlert} from 'sentry/components/globalSdkUpdateAlert';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {SidebarPanelKey} from 'sentry/components/sidebar/types';\nimport {t, tct} from 'sentry/locale';\nimport SidebarPanelStore from 'sentry/stores/sidebarPanelStore';\nimport {Organization, Project} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {MetricDataSwitcherOutcome} from 'sentry/utils/performance/contexts/metricsCardinality';\n\nimport {\n  areMultipleProjectsSelected,\n  createUnnamedTransactionsDiscoverTarget,\n  getSelectedProjectPlatformsArray,\n} from '../utils';\n\ninterface MetricEnhancedDataAlertProps extends MetricDataSwitcherOutcome {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  router: WithRouterProps['router'];\n}\n\n/**\n * From\n * https://github.com/getsentry/sentry-docs/blob/master/src/platforms/common/enriching-events/transaction-name.mdx\n */\nconst SUPPORTED_TRANSACTION_NAME_DOCS = [\n  'javascript',\n  'node',\n  'python',\n  'ruby',\n  'native',\n  'react-native',\n  'dotnet',\n  'unity',\n  'flutter',\n  'dart',\n  'java',\n  'android',\n];\nconst UNSUPPORTED_TRANSACTION_NAME_DOCS = [\n  'javascript.cordova',\n  'javascript.nextjs',\n  'native.minidumps',\n];\n\nexport function MetricsDataSwitcherAlert(\n  props: MetricEnhancedDataAlertProps\n): React.ReactElement | null {\n  const handleReviewUpdatesClick = useCallback(() => {\n    SidebarPanelStore.activatePanel(SidebarPanelKey.Broadcasts);\n  }, []);\n\n  const docsLink = useMemo(() => {\n    const platforms = getSelectedProjectPlatformsArray(props.location, props.projects);\n    if (platforms.length < 1) {\n      return null;\n    }\n\n    const platform = platforms[0];\n    if (UNSUPPORTED_TRANSACTION_NAME_DOCS.includes(platform)) {\n      return null;\n    }\n\n    const supportedPlatform = SUPPORTED_TRANSACTION_NAME_DOCS.find(platformBase =>\n      platform.includes(platformBase)\n    );\n\n    if (!supportedPlatform) {\n      return null;\n    }\n\n    return `https://docs.sentry.io/platforms/${supportedPlatform}/enriching-events/transaction-name/`;\n  }, [props.location, props.projects]);\n\n  const handleSwitchToCompatibleProjects = useCallback(() => {\n    updateProjects(props.compatibleProjects || [], props.router);\n  }, [props.compatibleProjects, props.router]);\n\n  if (!props.shouldNotifyUnnamedTransactions && !props.shouldWarnIncompatibleSDK) {\n    // Control showing generic sdk-alert here since stacking alerts is noisy.\n    return <GlobalSdkUpdateAlert />;\n  }\n\n  const discoverTarget = createUnnamedTransactionsDiscoverTarget(props);\n\n  if (props.shouldWarnIncompatibleSDK) {\n    const updateSDK = (\n      <Link to=\"\" onClick={handleReviewUpdatesClick}>\n        {t('update your SDK version')}\n      </Link>\n    );\n    if (areMultipleProjectsSelected(props.eventView)) {\n      if ((props.compatibleProjects ?? []).length === 0) {\n        return (\n          <Alert\n            type=\"warning\"\n            showIcon\n            data-test-id=\"landing-mep-alert-multi-project-all-incompatible\"\n          >\n            {tct(\n              `A few projects are incompatible with server side sampling. To enable this feature [updateSDK].`,\n              {\n                updateSDK,\n              }\n            )}\n          </Alert>\n        );\n      }\n      return (\n        <Alert\n          type=\"warning\"\n          showIcon\n          data-test-id=\"landing-mep-alert-multi-project-incompatible\"\n        >\n          {tct(\n            `A few projects are incompatible with server side sampling. You can either [updateSDK] or [onlyViewCompatible]`,\n            {\n              updateSDK,\n              onlyViewCompatible: (\n                <Link to=\"\" onClick={handleSwitchToCompatibleProjects}>\n                  {t('only view compatible projects.')}\n                </Link>\n              ),\n            }\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert\n        type=\"warning\"\n        showIcon\n        data-test-id=\"landing-mep-alert-single-project-incompatible\"\n      >\n        {tct(\n          `Your project has an outdated SDK which is incompatible with server side sampling. To enable this feature [updateSDK].`,\n          {\n            updateSDK,\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  if (props.shouldNotifyUnnamedTransactions) {\n    const discover = <Link to={discoverTarget}>{t('open them in Discover.')}</Link>;\n    if (!docsLink) {\n      return (\n        <Alert type=\"warning\" showIcon data-test-id=\"landing-mep-alert-unnamed-discover\">\n          {tct(\n            `You have some unparameterized transactions which are incompatible with server side sampling. You can [discover]`,\n            {\n              discover,\n            }\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert\n        type=\"warning\"\n        showIcon\n        data-test-id=\"landing-mep-alert-unnamed-discover-or-set\"\n      >\n        {tct(\n          `You have some unparameterized transactions which are incompatible with server side sampling. You can either [setNames] or [discover]`,\n          {\n            setNames: (\n              <ExternalLink href={docsLink}>{t('set names manually')}</ExternalLink>\n            ),\n            discover,\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  return null;\n}\n","import {usePageError} from 'sentry/utils/performance/contexts/pageError';\nimport {PerformanceDisplayProvider} from 'sentry/utils/performance/contexts/performanceDisplayContext';\n\nimport Table from '../../table';\nimport {PROJECT_PERFORMANCE_TYPE} from '../../utils';\nimport {DoubleChartRow, TripleChartRow} from '../widgets/components/widgetChartRow';\nimport {PerformanceWidgetSetting} from '../widgets/widgetDefinitions';\n\nimport {BasePerformanceViewProps} from './types';\n\nexport function AllTransactionsView(props: BasePerformanceViewProps) {\n  return (\n    <PerformanceDisplayProvider value={{performanceType: PROJECT_PERFORMANCE_TYPE.ANY}}>\n      <div data-test-id=\"all-transactions-view\">\n        <TripleChartRow\n          {...props}\n          allowedCharts={[\n            PerformanceWidgetSetting.USER_MISERY_AREA,\n            PerformanceWidgetSetting.TPM_AREA,\n            PerformanceWidgetSetting.FAILURE_RATE_AREA,\n            PerformanceWidgetSetting.APDEX_AREA,\n            PerformanceWidgetSetting.P50_DURATION_AREA,\n            PerformanceWidgetSetting.P75_DURATION_AREA,\n            PerformanceWidgetSetting.P95_DURATION_AREA,\n            PerformanceWidgetSetting.P99_DURATION_AREA,\n          ]}\n        />\n        <DoubleChartRow\n          {...props}\n          allowedCharts={[\n            PerformanceWidgetSetting.MOST_RELATED_ISSUES,\n            PerformanceWidgetSetting.MOST_IMPROVED,\n            PerformanceWidgetSetting.MOST_REGRESSED,\n          ]}\n        />\n        <Table {...props} setError={usePageError().setPageError} />\n      </div>\n    </PerformanceDisplayProvider>\n  );\n}\n","import {\n  MetricsEnhancedSettingContext,\n  useMEPSettingContext,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {usePageError} from 'sentry/utils/performance/contexts/pageError';\nimport {PerformanceDisplayProvider} from 'sentry/utils/performance/contexts/performanceDisplayContext';\n\nimport Table from '../../table';\nimport {PROJECT_PERFORMANCE_TYPE} from '../../utils';\nimport {BACKEND_COLUMN_TITLES} from '../data';\nimport {DoubleChartRow, TripleChartRow} from '../widgets/components/widgetChartRow';\nimport {filterAllowedChartsMetrics} from '../widgets/utils';\nimport {PerformanceWidgetSetting} from '../widgets/widgetDefinitions';\n\nimport {BasePerformanceViewProps} from './types';\n\nfunction getAllowedChartsSmall(\n  props: BasePerformanceViewProps,\n  mepSetting: MetricsEnhancedSettingContext\n) {\n  const charts = [\n    PerformanceWidgetSetting.APDEX_AREA,\n    PerformanceWidgetSetting.TPM_AREA,\n    PerformanceWidgetSetting.FAILURE_RATE_AREA,\n    PerformanceWidgetSetting.USER_MISERY_AREA,\n    PerformanceWidgetSetting.P50_DURATION_AREA,\n    PerformanceWidgetSetting.P75_DURATION_AREA,\n    PerformanceWidgetSetting.P95_DURATION_AREA,\n    PerformanceWidgetSetting.P99_DURATION_AREA,\n    PerformanceWidgetSetting.DURATION_HISTOGRAM,\n  ];\n\n  return filterAllowedChartsMetrics(props.organization, charts, mepSetting);\n}\n\nexport function BackendView(props: BasePerformanceViewProps) {\n  const mepSetting = useMEPSettingContext();\n  return (\n    <PerformanceDisplayProvider value={{performanceType: PROJECT_PERFORMANCE_TYPE.ANY}}>\n      <div>\n        <TripleChartRow\n          {...props}\n          allowedCharts={getAllowedChartsSmall(props, mepSetting)}\n        />\n        <DoubleChartRow\n          {...props}\n          allowedCharts={[\n            PerformanceWidgetSetting.SLOW_HTTP_OPS,\n            PerformanceWidgetSetting.SLOW_DB_OPS,\n            PerformanceWidgetSetting.MOST_IMPROVED,\n            PerformanceWidgetSetting.MOST_REGRESSED,\n          ]}\n        />\n        <Table\n          {...props}\n          columnTitles={BACKEND_COLUMN_TITLES}\n          setError={usePageError().setPageError}\n        />\n      </div>\n    </PerformanceDisplayProvider>\n  );\n}\n","import {\n  MetricsEnhancedSettingContext,\n  useMEPSettingContext,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {usePageError} from 'sentry/utils/performance/contexts/pageError';\nimport {PerformanceDisplayProvider} from 'sentry/utils/performance/contexts/performanceDisplayContext';\n\nimport Table from '../../table';\nimport {PROJECT_PERFORMANCE_TYPE} from '../../utils';\nimport {FRONTEND_OTHER_COLUMN_TITLES} from '../data';\nimport {DoubleChartRow, TripleChartRow} from '../widgets/components/widgetChartRow';\nimport {filterAllowedChartsMetrics} from '../widgets/utils';\nimport {PerformanceWidgetSetting} from '../widgets/widgetDefinitions';\n\nimport {BasePerformanceViewProps} from './types';\n\nfunction getAllowedChartsSmall(\n  props: BasePerformanceViewProps,\n  mepSetting: MetricsEnhancedSettingContext\n) {\n  const charts = [\n    PerformanceWidgetSetting.TPM_AREA,\n    PerformanceWidgetSetting.DURATION_HISTOGRAM,\n    PerformanceWidgetSetting.P50_DURATION_AREA,\n    PerformanceWidgetSetting.P75_DURATION_AREA,\n    PerformanceWidgetSetting.P95_DURATION_AREA,\n    PerformanceWidgetSetting.P99_DURATION_AREA,\n  ];\n\n  return filterAllowedChartsMetrics(props.organization, charts, mepSetting);\n}\n\nexport function FrontendOtherView(props: BasePerformanceViewProps) {\n  const mepSetting = useMEPSettingContext();\n  return (\n    <PerformanceDisplayProvider\n      value={{performanceType: PROJECT_PERFORMANCE_TYPE.FRONTEND_OTHER}}\n    >\n      <div>\n        <TripleChartRow\n          {...props}\n          allowedCharts={getAllowedChartsSmall(props, mepSetting)}\n        />\n        <DoubleChartRow\n          {...props}\n          allowedCharts={[\n            PerformanceWidgetSetting.MOST_RELATED_ISSUES,\n            PerformanceWidgetSetting.SLOW_HTTP_OPS,\n            PerformanceWidgetSetting.SLOW_RESOURCE_OPS,\n          ]}\n        />\n        <Table\n          {...props}\n          columnTitles={FRONTEND_OTHER_COLUMN_TITLES}\n          setError={usePageError().setPageError}\n        />\n      </div>\n    </PerformanceDisplayProvider>\n  );\n}\n","import {\n  MetricsEnhancedSettingContext,\n  useMEPSettingContext,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {usePageError} from 'sentry/utils/performance/contexts/pageError';\nimport {PerformanceDisplayProvider} from 'sentry/utils/performance/contexts/performanceDisplayContext';\n\nimport Table from '../../table';\nimport {PROJECT_PERFORMANCE_TYPE} from '../../utils';\nimport {FRONTEND_PAGELOAD_COLUMN_TITLES} from '../data';\nimport {DoubleChartRow, TripleChartRow} from '../widgets/components/widgetChartRow';\nimport {filterAllowedChartsMetrics} from '../widgets/utils';\nimport {PerformanceWidgetSetting} from '../widgets/widgetDefinitions';\n\nimport {BasePerformanceViewProps} from './types';\n\nfunction getAllowedChartsSmall(\n  props: BasePerformanceViewProps,\n  mepSetting: MetricsEnhancedSettingContext\n) {\n  const charts = [\n    PerformanceWidgetSetting.P75_LCP_AREA,\n    PerformanceWidgetSetting.LCP_HISTOGRAM,\n    PerformanceWidgetSetting.FCP_HISTOGRAM,\n    PerformanceWidgetSetting.USER_MISERY_AREA,\n    PerformanceWidgetSetting.TPM_AREA,\n  ];\n\n  return filterAllowedChartsMetrics(props.organization, charts, mepSetting);\n}\n\nexport function FrontendPageloadView(props: BasePerformanceViewProps) {\n  const mepSetting = useMEPSettingContext();\n  return (\n    <PerformanceDisplayProvider\n      value={{performanceType: PROJECT_PERFORMANCE_TYPE.FRONTEND}}\n    >\n      <div data-test-id=\"frontend-pageload-view\">\n        <TripleChartRow\n          {...props}\n          allowedCharts={getAllowedChartsSmall(props, mepSetting)}\n        />\n        <DoubleChartRow\n          {...props}\n          allowedCharts={[\n            PerformanceWidgetSetting.WORST_LCP_VITALS,\n            PerformanceWidgetSetting.WORST_FCP_VITALS,\n            PerformanceWidgetSetting.WORST_FID_VITALS,\n            PerformanceWidgetSetting.MOST_RELATED_ISSUES,\n            PerformanceWidgetSetting.SLOW_HTTP_OPS,\n            PerformanceWidgetSetting.SLOW_BROWSER_OPS,\n            PerformanceWidgetSetting.SLOW_RESOURCE_OPS,\n          ]}\n        />\n        <Table\n          {...props}\n          columnTitles={FRONTEND_PAGELOAD_COLUMN_TITLES}\n          setError={usePageError().setPageError}\n        />\n      </div>\n    </PerformanceDisplayProvider>\n  );\n}\n","import {usePageError} from 'sentry/utils/performance/contexts/pageError';\nimport {PerformanceDisplayProvider} from 'sentry/utils/performance/contexts/performanceDisplayContext';\n\nimport Table from '../../table';\nimport {PROJECT_PERFORMANCE_TYPE} from '../../utils';\nimport {MOBILE_COLUMN_TITLES, REACT_NATIVE_COLUMN_TITLES} from '../data';\nimport {checkIsReactNative} from '../utils';\nimport {DoubleChartRow, TripleChartRow} from '../widgets/components/widgetChartRow';\nimport {PerformanceWidgetSetting} from '../widgets/widgetDefinitions';\n\nimport {BasePerformanceViewProps} from './types';\n\nexport function MobileView(props: BasePerformanceViewProps) {\n  const columnTitles = checkIsReactNative(props.eventView)\n    ? REACT_NATIVE_COLUMN_TITLES\n    : MOBILE_COLUMN_TITLES;\n  return (\n    <PerformanceDisplayProvider value={{performanceType: PROJECT_PERFORMANCE_TYPE.ANY}}>\n      <div>\n        <TripleChartRow\n          {...props}\n          allowedCharts={[\n            PerformanceWidgetSetting.TPM_AREA,\n            PerformanceWidgetSetting.COLD_STARTUP_AREA,\n            PerformanceWidgetSetting.WARM_STARTUP_AREA,\n            PerformanceWidgetSetting.SLOW_FRAMES_AREA,\n            PerformanceWidgetSetting.FROZEN_FRAMES_AREA,\n          ]}\n        />\n        <DoubleChartRow\n          {...props}\n          allowedCharts={[\n            PerformanceWidgetSetting.MOST_SLOW_FRAMES,\n            PerformanceWidgetSetting.MOST_FROZEN_FRAMES,\n            PerformanceWidgetSetting.MOST_IMPROVED,\n            PerformanceWidgetSetting.MOST_REGRESSED,\n          ]}\n        />\n        <Table\n          {...props}\n          columnTitles={columnTitles}\n          setError={usePageError().setPageError}\n        />\n      </div>\n    </PerformanceDisplayProvider>\n  );\n}\n","import {useState} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {PerformanceLayoutBodyRow} from 'sentry/components/performance/layouts';\nimport space from 'sentry/styles/space';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {usePerformanceDisplayType} from 'sentry/utils/performance/contexts/performanceDisplayContext';\nimport {PROJECT_PERFORMANCE_TYPE} from 'sentry/views/performance/utils';\n\nimport {getChartSetting} from '../utils';\nimport {PerformanceWidgetSetting} from '../widgetDefinitions';\n\nimport WidgetContainer from './widgetContainer';\n\nexport type ChartRowProps = {\n  allowedCharts: PerformanceWidgetSetting[];\n  chartCount: number;\n  chartHeight: number;\n  eventView: EventView;\n  location: Location;\n  withStaticFilters: boolean;\n};\n\nfunction getInitialChartSettings(\n  chartCount: number,\n  chartHeight: number,\n  performanceType: PROJECT_PERFORMANCE_TYPE,\n  allowedCharts: PerformanceWidgetSetting[]\n) {\n  return new Array(chartCount)\n    .fill(0)\n    .map((_, index) =>\n      getChartSetting(index, chartHeight, performanceType, allowedCharts[index])\n    );\n}\n\nconst ChartRow = (props: ChartRowProps) => {\n  const {chartCount, chartHeight, allowedCharts} = props;\n  const theme = useTheme();\n  const performanceType = usePerformanceDisplayType();\n  const palette = theme.charts.getColorPalette(chartCount);\n\n  const [chartSettings, setChartSettings] = useState(\n    getInitialChartSettings(chartCount, chartHeight, performanceType, allowedCharts)\n  );\n\n  if (props.allowedCharts.length < chartCount) {\n    throw new Error('Not enough allowed chart types to show row.');\n  }\n\n  return (\n    <StyledRow minSize={200}>\n      {new Array(chartCount).fill(0).map((_, index) => (\n        <WidgetContainer\n          {...props}\n          key={index}\n          index={index}\n          chartHeight={chartHeight}\n          chartColor={palette[index]}\n          defaultChartSetting={allowedCharts[index]}\n          rowChartSettings={chartSettings}\n          setRowChartSettings={setChartSettings}\n        />\n      ))}\n    </StyledRow>\n  );\n};\n\nexport const TripleChartRow = (props: ChartRowProps) => <ChartRow {...props} />;\n\nTripleChartRow.defaultProps = {\n  chartCount: 3,\n  chartHeight: 100,\n};\n\nexport const DoubleChartRow = (props: ChartRowProps) => <ChartRow {...props} />;\n\nDoubleChartRow.defaultProps = {\n  chartCount: 2,\n  chartHeight: 180,\n};\n\nconst StyledRow = styled(PerformanceLayoutBodyRow)`\n  margin-bottom: ${space(2)};\n`;\n","import {useEffect, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport * as qs from 'query-string';\n\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport CompositeSelect from 'sentry/components/forms/compositeSelect';\nimport {IconEllipsis} from 'sentry/icons/iconEllipsis';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {Field} from 'sentry/utils/discover/fields';\nimport {DisplayModes} from 'sentry/utils/discover/types';\nimport {useMEPSettingContext} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {usePerformanceDisplayType} from 'sentry/utils/performance/contexts/performanceDisplayContext';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport {GenericPerformanceWidgetDataType} from '../types';\nimport {_setChartSetting, filterAllowedChartsMetrics, getChartSetting} from '../utils';\nimport {\n  ChartDefinition,\n  PerformanceWidgetSetting,\n  WIDGET_DEFINITIONS,\n} from '../widgetDefinitions';\nimport {HistogramWidget} from '../widgets/histogramWidget';\nimport {LineChartListWidget} from '../widgets/lineChartListWidget';\nimport {SingleFieldAreaWidget} from '../widgets/singleFieldAreaWidget';\nimport {TrendsWidget} from '../widgets/trendsWidget';\nimport {VitalWidget} from '../widgets/vitalWidget';\n\nimport {ChartRowProps} from './widgetChartRow';\n\ntype Props = {\n  allowedCharts: PerformanceWidgetSetting[];\n  chartHeight: number;\n  defaultChartSetting: PerformanceWidgetSetting;\n  eventView: EventView;\n  index: number;\n  organization: Organization;\n  rowChartSettings: PerformanceWidgetSetting[];\n  setRowChartSettings: (settings: PerformanceWidgetSetting[]) => void;\n  withStaticFilters: boolean;\n  chartColor?: string;\n  forceDefaultChartSetting?: boolean;\n} & ChartRowProps;\n\nfunction trackChartSettingChange(\n  previousChartSetting: PerformanceWidgetSetting,\n  chartSetting: PerformanceWidgetSetting,\n  fromDefault: boolean,\n  organization: Organization\n) {\n  trackAdvancedAnalyticsEvent('performance_views.landingv3.widget.switch', {\n    organization,\n    from_widget: previousChartSetting,\n    to_widget: chartSetting,\n    from_default: fromDefault,\n  });\n}\n\nconst _WidgetContainer = (props: Props) => {\n  const {\n    organization,\n    index,\n    chartHeight,\n    rowChartSettings,\n    setRowChartSettings,\n    ...rest\n  } = props;\n  const performanceType = usePerformanceDisplayType();\n  let _chartSetting = getChartSetting(\n    index,\n    chartHeight,\n    performanceType,\n    rest.defaultChartSetting,\n    rest.forceDefaultChartSetting\n  );\n  const mepSetting = useMEPSettingContext();\n  const allowedCharts = filterAllowedChartsMetrics(\n    props.organization,\n    props.allowedCharts,\n    mepSetting\n  );\n\n  if (!allowedCharts.includes(_chartSetting)) {\n    _chartSetting = rest.defaultChartSetting;\n  }\n\n  const [chartSetting, setChartSettingState] = useState(_chartSetting);\n\n  const setChartSetting = (setting: PerformanceWidgetSetting) => {\n    if (!props.forceDefaultChartSetting) {\n      _setChartSetting(index, chartHeight, performanceType, setting);\n    }\n    setChartSettingState(setting);\n    const newSettings = [...rowChartSettings];\n    newSettings[index] = setting;\n    setRowChartSettings(newSettings);\n    trackChartSettingChange(\n      chartSetting,\n      setting,\n      rest.defaultChartSetting === chartSetting,\n      organization\n    );\n  };\n\n  useEffect(() => {\n    setChartSettingState(_chartSetting);\n  }, [rest.defaultChartSetting, _chartSetting]);\n\n  const chartDefinition = WIDGET_DEFINITIONS({organization})[chartSetting];\n\n  // Construct an EventView that matches this widget's definition. The\n  // `eventView` from the props is the _landing page_ EventView, which is different\n  const widgetEventView = makeEventViewForWidget(props.eventView, chartDefinition);\n\n  const widgetProps = {\n    ...chartDefinition,\n    chartSetting,\n    chartDefinition,\n    ContainerActions: containerProps => (\n      <WidgetContainerActions\n        {...containerProps}\n        eventView={widgetEventView}\n        allowedCharts={allowedCharts}\n        chartSetting={chartSetting}\n        setChartSetting={setChartSetting}\n        rowChartSettings={rowChartSettings}\n      />\n    ),\n  };\n\n  const passedProps = pick(props, [\n    'eventView',\n    'location',\n    'organization',\n    'chartHeight',\n    'withStaticFilters',\n  ]);\n\n  switch (widgetProps.dataType) {\n    case GenericPerformanceWidgetDataType.trends:\n      return <TrendsWidget {...passedProps} {...widgetProps} />;\n    case GenericPerformanceWidgetDataType.area:\n      return <SingleFieldAreaWidget {...passedProps} {...widgetProps} />;\n    case GenericPerformanceWidgetDataType.vitals:\n      return <VitalWidget {...passedProps} {...widgetProps} />;\n    case GenericPerformanceWidgetDataType.line_list:\n      return <LineChartListWidget {...passedProps} {...widgetProps} />;\n    case GenericPerformanceWidgetDataType.histogram:\n      return <HistogramWidget {...passedProps} {...widgetProps} />;\n    default:\n      throw new Error(`Widget type \"${widgetProps.dataType}\" has no implementation.`);\n  }\n};\n\nexport const WidgetContainerActions = ({\n  chartSetting,\n  eventView,\n  setChartSetting,\n  allowedCharts,\n  rowChartSettings,\n}: {\n  allowedCharts: PerformanceWidgetSetting[];\n  chartSetting: PerformanceWidgetSetting;\n  eventView: EventView;\n  rowChartSettings: PerformanceWidgetSetting[];\n  setChartSetting: (setting: PerformanceWidgetSetting) => void;\n}) => {\n  const organization = useOrganization();\n  const menuOptions: React.ComponentProps<\n    typeof CompositeSelect\n  >['sections'][number]['options'] = [];\n\n  const settingsMap = WIDGET_DEFINITIONS({organization});\n  for (const setting of allowedCharts) {\n    const options = settingsMap[setting];\n    menuOptions.push({\n      value: setting,\n      label: options.title,\n      disabled: setting !== chartSetting && rowChartSettings.includes(setting),\n    });\n  }\n\n  const chartDefinition = WIDGET_DEFINITIONS({organization})[chartSetting];\n\n  function trigger({props, ref}) {\n    return (\n      <DropdownButton\n        ref={ref}\n        {...props}\n        size=\"xs\"\n        borderless\n        showChevron={false}\n        icon={<IconEllipsis aria-label={t('More')} />}\n      />\n    );\n  }\n\n  function handleWidgetActionChange(value) {\n    if (value === 'open_in_discover') {\n      browserHistory.push(getEventViewDiscoverPath(organization, eventView));\n    }\n  }\n\n  return (\n    <CompositeSelect\n      sections={\n        [\n          {\n            label: t('Display'),\n            options: menuOptions,\n            value: chartSetting,\n            onChange: setChartSetting,\n          },\n          chartDefinition.allowsOpenInDiscover\n            ? {\n                label: t('Other'),\n                options: [{label: t('Open in Discover'), value: 'open_in_discover'}],\n                value: '',\n                onChange: handleWidgetActionChange,\n              }\n            : null,\n        ].filter(Boolean) as React.ComponentProps<typeof CompositeSelect>['sections']\n      }\n      trigger={trigger}\n      placement=\"bottom right\"\n    />\n  );\n};\n\nconst getEventViewDiscoverPath = (\n  organization: Organization,\n  eventView: EventView\n): string => {\n  const discoverUrlTarget = eventView.getResultsViewUrlTarget(organization.slug);\n\n  // The landing page EventView has some additional conditions, but\n  // `EventView#getResultsViewUrlTarget` omits those! Get them manually\n  discoverUrlTarget.query.query = eventView.getQueryWithAdditionalConditions();\n\n  return `${discoverUrlTarget.pathname}?${qs.stringify(\n    omit(discoverUrlTarget.query, ['widths']) // Column widths are not useful in this case\n  )}`;\n};\n\n/**\n * Constructs an `EventView` that matches a widget's chart definition.\n * @param baseEventView Any valid event view. The easiest way to make a new EventView is to clone an existing one, because `EventView#constructor` takes too many abstract arguments\n * @param chartDefinition\n */\nconst makeEventViewForWidget = (\n  baseEventView: EventView,\n  chartDefinition: ChartDefinition\n): EventView => {\n  const widgetEventView = baseEventView.clone();\n  widgetEventView.name = chartDefinition.title;\n  widgetEventView.yAxis = chartDefinition.fields[0]; // All current widgets only have one field\n  widgetEventView.display = DisplayModes.PREVIOUS;\n  widgetEventView.fields = ['transaction', 'project', ...chartDefinition.fields].map(\n    fieldName => ({field: fieldName} as Field)\n  );\n\n  return widgetEventView;\n};\n\nconst WidgetContainer = withOrganization(_WidgetContainer);\n\nexport default WidgetContainer;\n","import {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {defined} from 'sentry/utils';\nimport {TableData, TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {GenericChildrenProps} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/views/performance/data';\n\nimport {QueryDefinitionWithKey, WidgetDataConstraint, WidgetPropUnion} from '../types';\n\n/**\n * Cleans up lists to remove 'null' transactions rows from metrics-backed data.\n */\nfunction removeEmptyTransactionsFromList(data: TableDataRow[]) {\n  const transactionColumnExists = data.some(\n    d => typeof d === 'object' && 'transaction' in d\n  );\n  return transactionColumnExists\n    ? data.filter(d =>\n        typeof d === 'object' && 'transaction' in d ? d.transaction : true\n      )\n    : data;\n}\n\nexport function transformDiscoverToList<T extends WidgetDataConstraint>(\n  widgetProps: WidgetPropUnion<T>,\n  results: GenericChildrenProps<TableData>,\n  _: QueryDefinitionWithKey<T>\n) {\n  const {start, end, utc, interval, statsPeriod} = normalizeDateTimeParams(\n    widgetProps.location.query,\n    {\n      defaultStatsPeriod: DEFAULT_STATS_PERIOD,\n    }\n  );\n\n  const _data = results.tableData?.data ?? [];\n  const data = removeEmptyTransactionsFromList(_data);\n\n  const childData = {\n    ...results,\n    isErrored: !!results.error,\n    hasData: defined(data) && !!data.length,\n    data,\n\n    utc: utc === 'true',\n    interval,\n    statsPeriod: statsPeriod ?? undefined,\n    start: start ?? '',\n    end: end ?? '',\n  };\n\n  return childData;\n}\n","import {RenderProps} from 'sentry/components/charts/eventsRequest';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {defined} from 'sentry/utils';\n\nimport {QueryDefinitionWithKey, WidgetDataConstraint, WidgetPropUnion} from '../types';\n\nexport function transformEventsRequestToVitals<T extends WidgetDataConstraint>(\n  widgetProps: WidgetPropUnion<T>,\n  results: RenderProps,\n  _: QueryDefinitionWithKey<T>\n) {\n  const {start, end, utc, interval, statsPeriod} = normalizeDateTimeParams(\n    widgetProps.location.query\n  );\n\n  const data = results.results ?? [];\n\n  const childData = {\n    ...results,\n    isLoading: results.loading || results.reloading,\n    isErrored: results.errored,\n    hasData: defined(data) && !!data.length && !!data[0].data.length,\n    data,\n\n    utc: utc === 'true',\n    interval,\n    statsPeriod: statsPeriod ?? undefined,\n    start: start ?? '',\n    end: end ?? '',\n  };\n\n  return childData;\n}\n","import {HistogramQueryChildrenProps} from 'sentry/utils/performance/histogram/histogramQuery';\n\nexport function transformHistogramQuery(_: any, results: HistogramQueryChildrenProps) {\n  const {histograms} = results;\n  return {\n    ...results,\n    data: histograms,\n    isLoading: results.isLoading,\n    isErrored: results.error !== null,\n    hasData: !!Object.values(histograms || {}).length,\n  };\n}\n","import {TrendDiscoveryChildrenProps} from 'sentry/utils/performance/trends/trendsDiscoverQuery';\nimport {normalizeTrends} from 'sentry/views/performance/trends/utils';\n\nexport function transformTrendsDiscover(_: any, props: TrendDiscoveryChildrenProps) {\n  const {trendsData} = props;\n  const events = trendsData\n    ? normalizeTrends((trendsData && trendsData.events && trendsData.events.data) || [])\n    : [];\n  return {\n    ...props,\n    data: trendsData,\n    hasData: !!trendsData?.events?.data.length,\n    loading: props.isLoading,\n    isLoading: props.isLoading,\n    isErrored: !!props.error,\n    errored: props.error,\n    statsData: trendsData ? trendsData.stats : {},\n    transactionsList: events && events.slice ? events.slice(0, 3) : [],\n    events,\n  };\n}\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\nimport {useMEPSettingContext} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport HistogramQuery from 'sentry/utils/performance/histogram/histogramQuery';\nimport {Chart as HistogramChart} from 'sentry/views/performance/landing/chart/histogramChart';\n\nimport {GenericPerformanceWidget} from '../components/performanceWidget';\nimport {transformHistogramQuery} from '../transforms/transformHistogramQuery';\nimport {PerformanceWidgetProps, WidgetDataResult} from '../types';\nimport {getMEPQueryParams} from '../utils';\n\ntype AreaDataType = {\n  chart: WidgetDataResult & ReturnType<typeof transformHistogramQuery>;\n};\n\nexport function HistogramWidget(props: PerformanceWidgetProps) {\n  const mepSetting = useMEPSettingContext();\n  const {ContainerActions, location} = props;\n  const globalSelection = props.eventView.getPageFilters();\n\n  const Queries = useMemo(() => {\n    return {\n      chart: {\n        fields: props.fields,\n        component: provided => (\n          <HistogramQuery\n            {...provided}\n            eventView={provided.eventView}\n            location={props.location}\n            numBuckets={20}\n            dataFilter=\"exclude_outliers\"\n            queryExtras={getMEPQueryParams(mepSetting)}\n          />\n        ),\n        transform: transformHistogramQuery,\n      },\n    };\n  }, [props.chartSetting, mepSetting.memoizationKey]);\n\n  const onFilterChange = () => {};\n\n  return (\n    <GenericPerformanceWidget<AreaDataType>\n      {...props}\n      Subtitle={() => (\n        <Subtitle>\n          {globalSelection.datetime.period\n            ? t('In the last %s ', globalSelection.datetime.period)\n            : t('In the last period')}\n        </Subtitle>\n      )}\n      HeaderActions={provided => (\n        <Fragment>\n          <ContainerActions {...provided.widgetData.chart} />\n        </Fragment>\n      )}\n      Queries={Queries}\n      Visualizations={[\n        {\n          component: provided => (\n            <HistogramChart\n              {...provided}\n              colors={props.chartColor ? [props.chartColor] : undefined}\n              location={location}\n              isLoading={false}\n              isErrored={false}\n              onFilterChange={onFilterChange}\n              field={props.fields[0]}\n              chartData={provided.widgetData.chart?.data?.[props.fields[0]]}\n              disableXAxis\n              disableZoom\n              disableChartPadding\n            />\n          ),\n          height: props.chartHeight,\n        },\n      ]}\n    />\n  );\n}\n\nconst Subtitle = styled('span')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n","import {Fragment, useMemo, useState} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter} from 'react-router';\nimport pick from 'lodash/pick';\n\nimport _EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {getInterval} from 'sentry/components/charts/utils';\nimport Count from 'sentry/components/count';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport Truncate from 'sentry/components/truncate';\nimport {t, tct} from 'sentry/locale';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport {getAggregateAlias} from 'sentry/utils/discover/fields';\nimport {\n  canUseMetricsData,\n  useMEPSettingContext,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {usePageError} from 'sentry/utils/performance/contexts/pageError';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withApi from 'sentry/utils/withApi';\nimport _DurationChart from 'sentry/views/performance/charts/chart';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\nimport {\n  getPerformanceDuration,\n  UNPARAMETERIZED_TRANSACTION,\n} from 'sentry/views/performance/utils';\n\nimport {excludeTransaction} from '../../utils';\nimport {GenericPerformanceWidget} from '../components/performanceWidget';\nimport SelectableList, {\n  GrowLink,\n  ListClose,\n  RightAlignedCell,\n  Subtitle,\n  WidgetEmptyStateWarning,\n} from '../components/selectableList';\nimport {transformDiscoverToList} from '../transforms/transformDiscoverToList';\nimport {transformEventsRequestToArea} from '../transforms/transformEventsToArea';\nimport {PerformanceWidgetProps, QueryDefinition, WidgetDataResult} from '../types';\nimport {eventsRequestQueryProps, getMEPParamsIfApplicable} from '../utils';\nimport {PerformanceWidgetSetting} from '../widgetDefinitions';\n\ntype DataType = {\n  chart: WidgetDataResult & ReturnType<typeof transformEventsRequestToArea>;\n  list: WidgetDataResult & ReturnType<typeof transformDiscoverToList>;\n};\n\nconst slowList = [\n  PerformanceWidgetSetting.SLOW_HTTP_OPS,\n  PerformanceWidgetSetting.SLOW_DB_OPS,\n  PerformanceWidgetSetting.SLOW_BROWSER_OPS,\n  PerformanceWidgetSetting.SLOW_RESOURCE_OPS,\n];\n\n// Most N Frames, low population, and count vs. duration so treated separately from 'slow' widgets.\nconst framesList = [\n  PerformanceWidgetSetting.MOST_SLOW_FRAMES,\n  PerformanceWidgetSetting.MOST_FROZEN_FRAMES,\n];\n\nexport function LineChartListWidget(props: PerformanceWidgetProps) {\n  const mepSetting = useMEPSettingContext();\n  const [selectedListIndex, setSelectListIndex] = useState<number>(0);\n  const {ContainerActions, organization} = props;\n  const useEvents = organization.features.includes(\n    'performance-frontend-use-events-endpoint'\n  );\n  const pageError = usePageError();\n\n  const field = props.fields[0];\n\n  if (props.fields.length !== 1) {\n    throw new Error(\n      `Line chart list widget can only accept a single field (${props.fields})`\n    );\n  }\n\n  const isSlowestType = slowList.includes(props.chartSetting);\n  const isFramesType = framesList.includes(props.chartSetting);\n\n  const listQuery = useMemo<QueryDefinition<DataType, WidgetDataResult>>(\n    () => ({\n      fields: field,\n      component: provided => {\n        const eventView = provided.eventView.clone();\n\n        eventView.sorts = [{kind: 'desc', field}];\n        if (props.chartSetting === PerformanceWidgetSetting.MOST_RELATED_ISSUES) {\n          eventView.fields = [\n            {field: 'issue'},\n            {field: 'transaction'},\n            {field: 'title'},\n            {field: 'project.id'},\n            {field},\n          ];\n          eventView.additionalConditions.setFilterValues('event.type', ['error']);\n          eventView.additionalConditions.setFilterValues('!tags[transaction]', ['']);\n          if (canUseMetricsData(organization)) {\n            eventView.additionalConditions.setFilterValues('!transaction', [\n              UNPARAMETERIZED_TRANSACTION,\n            ]);\n          }\n          const mutableSearch = new MutableSearch(eventView.query);\n          mutableSearch.removeFilter('transaction.duration');\n          eventView.additionalConditions.removeFilter('transaction.op'); // Remove transaction op incase it's applied from the performance view.\n          eventView.additionalConditions.removeFilter('!transaction.op'); // Remove transaction op incase it's applied from the performance view.\n          eventView.query = mutableSearch.formatString();\n        } else if (isSlowestType || isFramesType) {\n          eventView.additionalConditions.setFilterValues('epm()', ['>0.01']);\n          eventView.fields = [\n            {field: 'transaction'},\n            {field: 'project.id'},\n            {field: 'epm()'},\n            ...props.fields.map(f => ({field: f})),\n          ];\n        } else {\n          // Most related errors\n          eventView.fields = [{field: 'transaction'}, {field: 'project.id'}, {field}];\n        }\n        // Don't retrieve list items with 0 in the field.\n        eventView.additionalConditions.setFilterValues(field, ['>0']);\n        return (\n          <DiscoverQuery\n            {...provided}\n            eventView={eventView}\n            location={props.location}\n            limit={3}\n            cursor=\"0:0:1\"\n            noPagination\n            queryExtras={getMEPParamsIfApplicable(mepSetting, props.chartSetting)}\n            useEvents={useEvents}\n          />\n        );\n      },\n      transform: transformDiscoverToList,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.chartSetting, mepSetting.memoizationKey]\n  );\n\n  const chartQuery = useMemo<QueryDefinition<DataType, WidgetDataResult>>(\n    () => {\n      return {\n        enabled: widgetData => {\n          return !!widgetData?.list?.data?.length;\n        },\n        fields: field,\n        component: provided => {\n          const eventView = props.eventView.clone();\n          if (!provided.widgetData.list.data[selectedListIndex]?.transaction) {\n            return null;\n          }\n          eventView.additionalConditions.setFilterValues('transaction', [\n            provided.widgetData.list.data[selectedListIndex].transaction as string,\n          ]);\n          if (props.chartSetting === PerformanceWidgetSetting.MOST_RELATED_ISSUES) {\n            if (!provided.widgetData.list.data[selectedListIndex]?.issue) {\n              return null;\n            }\n            eventView.fields = [\n              {field: 'issue'},\n              {field: 'issue.id'},\n              {field: 'transaction'},\n              {field},\n            ];\n            eventView.additionalConditions.setFilterValues('issue', [\n              provided.widgetData.list.data[selectedListIndex].issue as string,\n            ]);\n            eventView.additionalConditions.setFilterValues('event.type', ['error']);\n\n            if (canUseMetricsData(organization)) {\n              eventView.additionalConditions.setFilterValues('!transaction', [\n                UNPARAMETERIZED_TRANSACTION,\n              ]);\n            }\n\n            eventView.additionalConditions.removeFilter('transaction.op'); // Remove transaction op incase it's applied from the performance view.\n            eventView.additionalConditions.removeFilter('!transaction.op'); // Remove transaction op incase it's applied from the performance view.\n            const mutableSearch = new MutableSearch(eventView.query);\n            mutableSearch.removeFilter('transaction.duration');\n            eventView.query = mutableSearch.formatString();\n          } else {\n            eventView.fields = [{field: 'transaction'}, {field}];\n          }\n          return (\n            <EventsRequest\n              {...pick(provided, eventsRequestQueryProps)}\n              limit={1}\n              includePrevious\n              includeTransformedData\n              partial\n              currentSeriesNames={[field]}\n              query={eventView.getQueryWithAdditionalConditions()}\n              interval={getInterval(\n                {\n                  start: provided.start,\n                  end: provided.end,\n                  period: provided.period,\n                },\n                'medium'\n              )}\n              hideError\n              onError={pageError.setPageError}\n              queryExtras={getMEPParamsIfApplicable(mepSetting, props.chartSetting)}\n            />\n          );\n        },\n        transform: transformEventsRequestToArea,\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.chartSetting, selectedListIndex, mepSetting.memoizationKey]\n  );\n\n  const Queries = {\n    list: listQuery,\n    chart: chartQuery,\n  };\n\n  return (\n    <GenericPerformanceWidget<DataType>\n      {...props}\n      Subtitle={() => <Subtitle>{t('Suggested transactions')}</Subtitle>}\n      HeaderActions={provided => (\n        <ContainerActions isLoading={provided.widgetData.list?.isLoading} />\n      )}\n      EmptyComponent={WidgetEmptyStateWarning}\n      Queries={Queries}\n      Visualizations={[\n        {\n          component: provided => (\n            <DurationChart\n              {...provided.widgetData.chart}\n              {...provided}\n              disableMultiAxis\n              disableXAxis\n              chartColors={props.chartColor ? [props.chartColor] : undefined}\n              isLineChart\n            />\n          ),\n          height: props.chartHeight,\n        },\n        {\n          component: provided => (\n            <SelectableList\n              selectedIndex={selectedListIndex}\n              setSelectedIndex={setSelectListIndex}\n              items={provided.widgetData.list.data.map(listItem => () => {\n                const transaction = (listItem.transaction as string | undefined) ?? '';\n\n                const additionalQuery: Record<string, string> = {};\n\n                if (props.chartSetting === PerformanceWidgetSetting.SLOW_HTTP_OPS) {\n                  additionalQuery.breakdown = 'http';\n                  additionalQuery.display = 'latency';\n                } else if (props.chartSetting === PerformanceWidgetSetting.SLOW_DB_OPS) {\n                  additionalQuery.breakdown = 'db';\n                  additionalQuery.display = 'latency';\n                } else if (\n                  props.chartSetting === PerformanceWidgetSetting.SLOW_BROWSER_OPS\n                ) {\n                  additionalQuery.breakdown = 'browser';\n                  additionalQuery.display = 'latency';\n                } else if (\n                  props.chartSetting === PerformanceWidgetSetting.SLOW_RESOURCE_OPS\n                ) {\n                  additionalQuery.breakdown = 'resource';\n                  additionalQuery.display = 'latency';\n                }\n\n                const transactionTarget = transactionSummaryRouteWithQuery({\n                  orgSlug: props.organization.slug,\n                  projectID: listItem['project.id'] as string,\n                  transaction,\n                  query: props.eventView.getPageFiltersQuery(),\n                  additionalQuery,\n                });\n\n                const fieldString = useEvents ? field : getAggregateAlias(field);\n\n                const valueMap = {\n                  [PerformanceWidgetSetting.MOST_RELATED_ERRORS]: listItem.failure_count,\n                  [PerformanceWidgetSetting.MOST_RELATED_ISSUES]: listItem.issue,\n                  slowest: getPerformanceDuration(listItem[fieldString] as number),\n                };\n                const rightValue =\n                  valueMap[isSlowestType ? 'slowest' : props.chartSetting] ??\n                  listItem[fieldString];\n\n                switch (props.chartSetting) {\n                  case PerformanceWidgetSetting.MOST_RELATED_ISSUES:\n                    return (\n                      <Fragment>\n                        <GrowLink to={transactionTarget}>\n                          <Truncate value={transaction} maxLength={40} />\n                        </GrowLink>\n                        <RightAlignedCell>\n                          <Tooltip title={listItem.title}>\n                            <Link\n                              to={`/organizations/${props.organization.slug}/issues/${listItem['issue.id']}/`}\n                            >\n                              {rightValue}\n                            </Link>\n                          </Tooltip>\n                        </RightAlignedCell>\n                        {!props.withStaticFilters && (\n                          <ListClose\n                            setSelectListIndex={setSelectListIndex}\n                            onClick={() =>\n                              excludeTransaction(listItem.transaction, props)\n                            }\n                          />\n                        )}\n                      </Fragment>\n                    );\n                  case PerformanceWidgetSetting.MOST_RELATED_ERRORS:\n                    return (\n                      <Fragment>\n                        <GrowLink to={transactionTarget}>\n                          <Truncate value={transaction} maxLength={40} />\n                        </GrowLink>\n                        <RightAlignedCell>\n                          {tct('[count] errors', {\n                            count: <Count value={rightValue} />,\n                          })}\n                        </RightAlignedCell>\n                        {!props.withStaticFilters && (\n                          <ListClose\n                            setSelectListIndex={setSelectListIndex}\n                            onClick={() =>\n                              excludeTransaction(listItem.transaction, props)\n                            }\n                          />\n                        )}\n                      </Fragment>\n                    );\n                  default:\n                    if (typeof rightValue === 'number') {\n                      return (\n                        <Fragment>\n                          <GrowLink to={transactionTarget}>\n                            <Truncate value={transaction} maxLength={40} />\n                          </GrowLink>\n                          <RightAlignedCell>\n                            <Count value={rightValue} />\n                          </RightAlignedCell>\n                          {!props.withStaticFilters && (\n                            <ListClose\n                              setSelectListIndex={setSelectListIndex}\n                              onClick={() =>\n                                excludeTransaction(listItem.transaction, props)\n                              }\n                            />\n                          )}\n                        </Fragment>\n                      );\n                    }\n                    return (\n                      <Fragment>\n                        <GrowLink to={transactionTarget}>\n                          <Truncate value={transaction} maxLength={40} />\n                        </GrowLink>\n                        <RightAlignedCell>{rightValue}</RightAlignedCell>\n                        {!props.withStaticFilters && (\n                          <ListClose\n                            setSelectListIndex={setSelectListIndex}\n                            onClick={() =>\n                              excludeTransaction(listItem.transaction, props)\n                            }\n                          />\n                        )}\n                      </Fragment>\n                    );\n                }\n              })}\n            />\n          ),\n          height: 124,\n          noPadding: true,\n        },\n      ]}\n    />\n  );\n}\n\nconst EventsRequest = withApi(_EventsRequest);\nconst DurationChart = withRouter(_DurationChart);\n","import {Fragment, useMemo, useState} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter} from 'react-router';\n\nimport Button from 'sentry/components/button';\nimport Truncate from 'sentry/components/truncate';\nimport {t} from 'sentry/locale';\nimport TrendsDiscoverQuery from 'sentry/utils/performance/trends/trendsDiscoverQuery';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useProjects from 'sentry/utils/useProjects';\nimport withProjects from 'sentry/utils/withProjects';\nimport {CompareDurations} from 'sentry/views/performance/trends/changedTransactions';\nimport {\n  getSelectedProjectPlatforms,\n  handleTrendsClick,\n  trendsTargetRoute,\n} from 'sentry/views/performance/utils';\n\nimport {Chart} from '../../../trends/chart';\nimport {TrendChangeType, TrendFunctionField} from '../../../trends/types';\nimport {excludeTransaction} from '../../utils';\nimport {GenericPerformanceWidget} from '../components/performanceWidget';\nimport SelectableList, {\n  GrowLink,\n  ListClose,\n  RightAlignedCell,\n  Subtitle,\n  WidgetEmptyStateWarning,\n} from '../components/selectableList';\nimport {transformTrendsDiscover} from '../transforms/transformTrendsDiscover';\nimport {PerformanceWidgetProps, QueryDefinition, WidgetDataResult} from '../types';\nimport {PerformanceWidgetSetting} from '../widgetDefinitions';\n\ntype DataType = {\n  chart: WidgetDataResult & ReturnType<typeof transformTrendsDiscover>;\n};\n\nconst fields = [{field: 'transaction'}, {field: 'project'}];\n\nexport function TrendsWidget(props: PerformanceWidgetProps) {\n  const {projects} = useProjects();\n\n  const {\n    eventView: _eventView,\n    ContainerActions,\n    location,\n    organization,\n    withStaticFilters,\n  } = props;\n  const trendChangeType =\n    props.chartSetting === PerformanceWidgetSetting.MOST_IMPROVED\n      ? TrendChangeType.IMPROVED\n      : TrendChangeType.REGRESSION;\n  const trendFunctionField = TrendFunctionField.AVG; // Average is the easiest chart to understand.\n\n  const [selectedListIndex, setSelectListIndex] = useState<number>(0);\n\n  const eventView = _eventView.clone();\n  eventView.fields = fields;\n  eventView.sorts = [\n    {\n      kind: trendChangeType === TrendChangeType.IMPROVED ? 'asc' : 'desc',\n      field: 'trend_percentage()',\n    },\n  ];\n  const rest = {...props, eventView};\n  eventView.additionalConditions.addFilterValues('tpm()', ['>0.01']);\n  eventView.additionalConditions.addFilterValues('count_percentage()', ['>0.25', '<4']);\n  eventView.additionalConditions.addFilterValues('trend_percentage()', ['>0%']);\n  eventView.additionalConditions.addFilterValues('confidence()', ['>6']);\n\n  const chart = useMemo<QueryDefinition<DataType, WidgetDataResult>>(\n    () => ({\n      fields: ['transaction', 'project'],\n      component: provided => (\n        <TrendsDiscoverQuery\n          {...provided}\n          eventView={provided.eventView}\n          location={props.location}\n          trendChangeType={trendChangeType}\n          trendFunctionField={trendFunctionField}\n          limit={3}\n          cursor=\"0:0:1\"\n          noPagination\n        />\n      ),\n      transform: transformTrendsDiscover,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [props.chartSetting, trendChangeType]\n  );\n\n  const Queries = {\n    chart,\n  };\n\n  return (\n    <GenericPerformanceWidget<DataType>\n      {...rest}\n      Subtitle={() => <Subtitle>{t('Trending Transactions')}</Subtitle>}\n      HeaderActions={provided => {\n        return (\n          <Fragment>\n            <div>\n              <Button\n                onClick={() =>\n                  handleTrendsClick({\n                    location,\n                    organization,\n                    projectPlatforms: getSelectedProjectPlatforms(location, projects),\n                  })\n                }\n                size=\"sm\"\n                data-test-id=\"view-all-button\"\n              >\n                {t('View All')}\n              </Button>\n            </div>\n            <ContainerActions {...provided.widgetData.chart} />\n          </Fragment>\n        );\n      }}\n      EmptyComponent={WidgetEmptyStateWarning}\n      Queries={Queries}\n      Visualizations={[\n        {\n          component: provided => (\n            <TrendsChart\n              {...provided}\n              {...rest}\n              isLoading={provided.widgetData.chart.isLoading}\n              statsData={provided.widgetData.chart.statsData}\n              query={eventView.query}\n              project={eventView.project}\n              environment={eventView.environment}\n              start={eventView.start}\n              end={eventView.end}\n              statsPeriod={eventView.statsPeriod}\n              transaction={provided.widgetData.chart.transactionsList[selectedListIndex]}\n              trendChangeType={trendChangeType}\n              trendFunctionField={trendFunctionField}\n              disableXAxis\n              disableLegend\n            />\n          ),\n          bottomPadding: false,\n          height: props.chartHeight,\n        },\n        {\n          component: provided => (\n            <SelectableList\n              selectedIndex={selectedListIndex}\n              setSelectedIndex={setSelectListIndex}\n              items={provided.widgetData.chart.transactionsList.map(listItem => () => {\n                const initialConditions = new MutableSearch([]);\n                initialConditions.addFilterValues('transaction', [listItem.transaction]);\n\n                const trendsTarget = trendsTargetRoute({\n                  organization: props.organization,\n                  location: props.location,\n                  initialConditions,\n                  additionalQuery: {\n                    trendFunction: trendFunctionField,\n                  },\n                });\n                return (\n                  <Fragment>\n                    <GrowLink to={trendsTarget}>\n                      <Truncate value={listItem.transaction} maxLength={40} />\n                    </GrowLink>\n                    <RightAlignedCell>\n                      <CompareDurations transaction={listItem} />\n                    </RightAlignedCell>\n                    {!withStaticFilters && (\n                      <ListClose\n                        setSelectListIndex={setSelectListIndex}\n                        onClick={() => excludeTransaction(listItem.transaction, props)}\n                      />\n                    )}\n                  </Fragment>\n                );\n              })}\n            />\n          ),\n          height: 124,\n          noPadding: true,\n        },\n      ]}\n    />\n  );\n}\n\nconst TrendsChart = withRouter(withProjects(Chart));\n","import {Fragment, useMemo, useState} from 'react';\nimport styled from '@emotion/styled';\nimport pick from 'lodash/pick';\n\nimport Button from 'sentry/components/button';\nimport _EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {getInterval} from 'sentry/components/charts/utils';\nimport Truncate from 'sentry/components/truncate';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport DiscoverQuery, {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {getAggregateAlias} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {\n  canUseMetricsData,\n  useMEPSettingContext,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {usePageError} from 'sentry/utils/performance/contexts/pageError';\nimport {VitalData} from 'sentry/utils/performance/vitals/vitalsCardsDiscoverQuery';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withApi from 'sentry/utils/withApi';\nimport {UNPARAMETERIZED_TRANSACTION} from 'sentry/views/performance/utils';\nimport {vitalDetailRouteWithQuery} from 'sentry/views/performance/vitalDetail/utils';\nimport {_VitalChart} from 'sentry/views/performance/vitalDetail/vitalChart';\n\nimport {excludeTransaction} from '../../utils';\nimport {VitalBar} from '../../vitalsCards';\nimport {GenericPerformanceWidget} from '../components/performanceWidget';\nimport SelectableList, {\n  GrowLink,\n  ListClose,\n  RightAlignedCell,\n  Subtitle,\n  WidgetEmptyStateWarning,\n} from '../components/selectableList';\nimport {transformDiscoverToList} from '../transforms/transformDiscoverToList';\nimport {transformEventsRequestToVitals} from '../transforms/transformEventsToVitals';\nimport {PerformanceWidgetProps, QueryDefinition, WidgetDataResult} from '../types';\nimport {eventsRequestQueryProps, getMEPQueryParams} from '../utils';\nimport {ChartDefinition, PerformanceWidgetSetting} from '../widgetDefinitions';\n\ntype DataType = {\n  chart: WidgetDataResult & ReturnType<typeof transformEventsRequestToVitals>;\n  list: WidgetDataResult & ReturnType<typeof transformDiscoverToList>;\n};\n\nfunction getVitalFields(baseField: string) {\n  const poorCountField = `count_web_vitals(${baseField}, poor)`;\n  const mehCountField = `count_web_vitals(${baseField}, meh)`;\n  const goodCountField = `count_web_vitals(${baseField}, good)`;\n\n  const vitalFields = {\n    poorCountField,\n    mehCountField,\n    goodCountField,\n  };\n  return vitalFields;\n}\n\nexport function transformFieldsWithStops(props: {\n  field: string;\n  fields: string[];\n  vitalStops: ChartDefinition['vitalStops'];\n}) {\n  const {field, fields, vitalStops} = props;\n  const poorStop = vitalStops?.poor;\n  const mehStop = vitalStops?.meh;\n\n  if (!defined(poorStop) || !defined(mehStop)) {\n    return {\n      sortField: fields[0],\n      fieldsList: fields,\n    };\n  }\n\n  const vitalFields = getVitalFields(field);\n\n  const fieldsList = [\n    vitalFields.poorCountField,\n    vitalFields.mehCountField,\n    vitalFields.goodCountField,\n  ];\n\n  return {\n    sortField: vitalFields.poorCountField,\n    vitalFields,\n    fieldsList,\n  };\n}\n\nexport function VitalWidget(props: PerformanceWidgetProps) {\n  const mepSetting = useMEPSettingContext();\n  const {ContainerActions, eventView, organization, location} = props;\n  const useEvents = organization.features.includes(\n    'performance-frontend-use-events-endpoint'\n  );\n  const [selectedListIndex, setSelectListIndex] = useState<number>(0);\n  const field = props.fields[0];\n  const pageError = usePageError();\n\n  const {fieldsList, vitalFields, sortField} = transformFieldsWithStops({\n    field,\n    fields: props.fields,\n    vitalStops: props.chartDefinition.vitalStops,\n  });\n\n  const Queries = {\n    list: useMemo<QueryDefinition<DataType, WidgetDataResult>>(\n      () => ({\n        fields: sortField,\n        component: provided => {\n          const _eventView = provided.eventView.clone();\n\n          const fieldFromProps = fieldsList.map(propField => ({\n            field: propField,\n          }));\n\n          _eventView.sorts = [{kind: 'desc', field: sortField}];\n          if (canUseMetricsData(organization)) {\n            _eventView.additionalConditions.setFilterValues('!transaction', [\n              UNPARAMETERIZED_TRANSACTION,\n            ]);\n          }\n\n          _eventView.fields = [\n            {field: 'transaction'},\n            {field: 'title'},\n            {field: 'project.id'},\n            ...fieldFromProps,\n          ];\n          const mutableSearch = new MutableSearch(_eventView.query);\n          _eventView.query = mutableSearch.formatString();\n          return (\n            <DiscoverQuery\n              {...provided}\n              eventView={_eventView}\n              location={props.location}\n              limit={4}\n              cursor=\"0:0:1\"\n              noPagination\n              queryExtras={getMEPQueryParams(mepSetting)}\n              useEvents={useEvents}\n            />\n          );\n        },\n        transform: transformDiscoverToList,\n      }),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [props.eventView, fieldsList, props.organization.slug, mepSetting.memoizationKey]\n    ),\n    chart: useMemo<QueryDefinition<DataType, WidgetDataResult>>(\n      () => ({\n        enabled: widgetData => {\n          return !!widgetData?.list?.data?.length;\n        },\n        fields: fieldsList,\n        component: provided => {\n          const _eventView = provided.eventView.clone();\n\n          _eventView.additionalConditions.setFilterValues('transaction', [\n            provided.widgetData.list.data[selectedListIndex]?.transaction as string,\n          ]);\n\n          return (\n            <EventsRequest\n              {...pick(provided, eventsRequestQueryProps)}\n              limit={1}\n              currentSeriesNames={[sortField]}\n              includePrevious={false}\n              partial={false}\n              includeTransformedData\n              query={_eventView.getQueryWithAdditionalConditions()}\n              interval={getInterval(\n                {\n                  start: provided.start,\n                  end: provided.end,\n                  period: provided.period,\n                },\n                'medium'\n              )}\n              hideError\n              onError={pageError.setPageError}\n              queryExtras={getMEPQueryParams(mepSetting)}\n            />\n          );\n        },\n        transform: transformEventsRequestToVitals,\n      }),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [props.chartSetting, selectedListIndex, mepSetting.memoizationKey]\n    ),\n  };\n\n  const settingToVital: {[x: string]: WebVital} = {\n    [PerformanceWidgetSetting.WORST_LCP_VITALS]: WebVital.LCP,\n    [PerformanceWidgetSetting.WORST_FCP_VITALS]: WebVital.FCP,\n    [PerformanceWidgetSetting.WORST_FID_VITALS]: WebVital.FID,\n    [PerformanceWidgetSetting.WORST_CLS_VITALS]: WebVital.CLS,\n  };\n\n  const handleViewAllClick = () => {\n    // TODO(k-fish): Add analytics.\n  };\n\n  return (\n    <GenericPerformanceWidget<DataType>\n      {...props}\n      Subtitle={provided => {\n        const listItem = provided.widgetData.list?.data[selectedListIndex];\n\n        if (!listItem) {\n          return <Subtitle />;\n        }\n\n        const vital = settingToVital[props.chartSetting];\n\n        const data = {\n          [settingToVital[props.chartSetting]]: getVitalDataForListItem(\n            listItem,\n            vital,\n            !useEvents\n          ),\n        };\n\n        return (\n          <Subtitle>\n            <VitalBar\n              isLoading={provided.widgetData.list?.isLoading}\n              vital={settingToVital[props.chartSetting]}\n              data={data}\n              showBar={false}\n              showDurationDetail={false}\n              showDetail\n            />\n          </Subtitle>\n        );\n      }}\n      EmptyComponent={WidgetEmptyStateWarning}\n      HeaderActions={provided => {\n        const vital = settingToVital[props.chartSetting];\n        const target = vitalDetailRouteWithQuery({\n          orgSlug: organization.slug,\n          query: eventView.generateQueryStringObject(),\n          vitalName: vital,\n          projectID: decodeList(location.query.project),\n        });\n\n        return (\n          <Fragment>\n            <div>\n              <Button\n                onClick={handleViewAllClick}\n                to={target}\n                size=\"sm\"\n                data-test-id=\"view-all-button\"\n              >\n                {t('View All')}\n              </Button>\n            </div>\n            <ContainerActions {...provided.widgetData.chart} />\n          </Fragment>\n        );\n      }}\n      Queries={Queries}\n      Visualizations={[\n        {\n          component: provided => (\n            <_VitalChart\n              {...provided.widgetData.chart}\n              {...provided}\n              field={field}\n              vitalFields={vitalFields}\n              grid={provided.grid}\n            />\n          ),\n          height: props.chartHeight,\n        },\n        {\n          component: provided => (\n            <SelectableList\n              selectedIndex={selectedListIndex}\n              setSelectedIndex={setSelectListIndex}\n              items={provided.widgetData.list.data.slice(0, 3).map(listItem => () => {\n                const transaction = (listItem?.transaction as string | undefined) ?? '';\n                const _eventView = eventView.clone();\n\n                const initialConditions = new MutableSearch(_eventView.query);\n                initialConditions.addFilterValues('transaction', [transaction]);\n\n                const vital = settingToVital[props.chartSetting];\n\n                _eventView.query = initialConditions.formatString();\n\n                const target = vitalDetailRouteWithQuery({\n                  orgSlug: organization.slug,\n                  query: _eventView.generateQueryStringObject(),\n                  vitalName: vital,\n                  projectID: decodeList(location.query.project),\n                });\n\n                const data = {\n                  [settingToVital[props.chartSetting]]: getVitalDataForListItem(\n                    listItem,\n                    vital,\n                    !useEvents\n                  ),\n                };\n\n                return (\n                  <Fragment>\n                    <GrowLink to={target}>\n                      <Truncate value={transaction} maxLength={40} />\n                    </GrowLink>\n                    <VitalBarCell>\n                      <VitalBar\n                        isLoading={provided.widgetData.list?.isLoading}\n                        vital={settingToVital[props.chartSetting]}\n                        data={data}\n                        showBar\n                        showDurationDetail={false}\n                        showDetail={false}\n                        showTooltip\n                        barHeight={20}\n                      />\n                    </VitalBarCell>\n                    {!props.withStaticFilters && (\n                      <ListClose\n                        setSelectListIndex={setSelectListIndex}\n                        onClick={() => excludeTransaction(listItem.transaction, props)}\n                      />\n                    )}\n                  </Fragment>\n                );\n              })}\n            />\n          ),\n          height: 124,\n          noPadding: true,\n        },\n      ]}\n    />\n  );\n}\n\nfunction getVitalDataForListItem(\n  listItem: TableDataRow,\n  vital: WebVital,\n  useAggregateAlias: boolean = true\n) {\n  const vitalFields = getVitalFields(vital);\n  const transformFieldName = (fieldName: string) =>\n    useAggregateAlias ? getAggregateAlias(fieldName) : fieldName;\n  const poorData: number =\n    (listItem[transformFieldName(vitalFields.poorCountField)] as number) || 0;\n  const mehData: number =\n    (listItem[transformFieldName(vitalFields.mehCountField)] as number) || 0;\n  const goodData: number =\n    (listItem[transformFieldName(vitalFields.goodCountField)] as number) || 0;\n  const _vitalData = {\n    poor: poorData,\n    meh: mehData,\n    good: goodData,\n    p75: 0,\n  };\n  const vitalData: VitalData = {\n    ..._vitalData,\n    total: _vitalData.poor + _vitalData.meh + _vitalData.good,\n  };\n\n  return vitalData;\n}\n\nexport const VitalBarCell = styled(RightAlignedCell)`\n  width: 120px;\n  margin-left: ${space(1)};\n  margin-right: ${space(1)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst EventsRequest = withApi(_EventsRequest);\n","import {Component, Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location, LocationDescriptorObject} from 'history';\n\nimport {addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumn,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport Pagination from 'sentry/components/pagination';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconStar} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport DiscoverQuery, {\n  TableData,\n  TableDataRow,\n} from 'sentry/utils/discover/discoverQuery';\nimport EventView, {\n  EventData,\n  isFieldSortable,\n  MetaType,\n} from 'sentry/utils/discover/eventView';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {fieldAlignment, getAggregateAlias} from 'sentry/utils/discover/fields';\nimport {MEPConsumer} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport CellAction, {Actions, updateQuery} from 'sentry/views/eventsV2/table/cellAction';\nimport {TableColumn} from 'sentry/views/eventsV2/table/types';\n\nimport {getMEPQueryParams} from './landing/widgets/utils';\nimport TransactionThresholdModal, {\n  modalCss,\n  TransactionThresholdMetric,\n} from './transactionSummary/transactionThresholdModal';\nimport {\n  normalizeSearchConditionsWithTransactionName,\n  transactionSummaryRouteWithQuery,\n} from './transactionSummary/utils';\nimport {COLUMN_TITLES} from './data';\nimport {\n  createUnnamedTransactionsDiscoverTarget,\n  getSelectedProjectPlatforms,\n  UNPARAMETERIZED_TRANSACTION,\n} from './utils';\n\nexport function getProjectID(\n  eventData: EventData,\n  projects: Project[]\n): string | undefined {\n  const projectSlug = (eventData?.project as string) || undefined;\n\n  if (typeof projectSlug === undefined) {\n    return undefined;\n  }\n\n  const project = projects.find(currentProject => currentProject.slug === projectSlug);\n\n  if (!project) {\n    return undefined;\n  }\n\n  return project.id;\n}\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  setError: (msg: string | undefined) => void;\n  withStaticFilters: boolean;\n  columnTitles?: string[];\n  summaryConditions?: string;\n};\n\ntype State = {\n  transaction: string | undefined;\n  transactionThreshold: number | undefined;\n  transactionThresholdMetric: TransactionThresholdMetric | undefined;\n  widths: number[];\n};\nclass _Table extends Component<Props, State> {\n  state: State = {\n    widths: [],\n    transaction: undefined,\n    transactionThreshold: undefined,\n    transactionThresholdMetric: undefined,\n  };\n\n  handleCellAction = (column: TableColumn<keyof TableDataRow>, dataRow: TableDataRow) => {\n    return (action: Actions, value: React.ReactText) => {\n      const {eventView, location, organization, projects} = this.props;\n\n      trackAdvancedAnalyticsEvent('performance_views.overview.cellaction', {\n        organization,\n        action,\n      });\n\n      if (action === Actions.EDIT_THRESHOLD) {\n        const project_threshold = dataRow.project_threshold_config;\n        const transactionName = dataRow.transaction as string;\n        const projectID = getProjectID(dataRow, projects);\n\n        openModal(\n          modalProps => (\n            <TransactionThresholdModal\n              {...modalProps}\n              organization={organization}\n              transactionName={transactionName}\n              eventView={eventView}\n              project={projectID}\n              transactionThreshold={project_threshold[1]}\n              transactionThresholdMetric={project_threshold[0]}\n              onApply={(threshold, metric) => {\n                if (\n                  threshold !== project_threshold[1] ||\n                  metric !== project_threshold[0]\n                ) {\n                  this.setState({\n                    transaction: transactionName,\n                    transactionThreshold: threshold,\n                    transactionThresholdMetric: metric,\n                  });\n                }\n                addSuccessMessage(\n                  tct('[transactionName] updated successfully', {\n                    transactionName,\n                  })\n                );\n              }}\n            />\n          ),\n          {modalCss, backdrop: 'static'}\n        );\n        return;\n      }\n\n      const searchConditions = normalizeSearchConditionsWithTransactionName(\n        eventView.query\n      );\n\n      updateQuery(searchConditions, action, column, value);\n\n      browserHistory.push({\n        pathname: location.pathname,\n        query: {\n          ...location.query,\n          cursor: undefined,\n          query: searchConditions.formatString(),\n        },\n      });\n    };\n  };\n\n  renderBodyCell(\n    tableData: TableData | null,\n    column: TableColumn<keyof TableDataRow>,\n    dataRow: TableDataRow\n  ): React.ReactNode {\n    const {eventView, organization, projects, location, withStaticFilters} = this.props;\n    const isAlias = !organization.features.includes(\n      'performance-frontend-use-events-endpoint'\n    );\n\n    if (!tableData || !tableData.meta) {\n      return dataRow[column.key];\n    }\n    const tableMeta = tableData.meta;\n\n    const field = String(column.key);\n    const fieldRenderer = getFieldRenderer(field, tableMeta, isAlias);\n    const rendered = fieldRenderer(dataRow, {organization, location});\n\n    const allowActions = [\n      Actions.ADD,\n      Actions.EXCLUDE,\n      Actions.SHOW_GREATER_THAN,\n      Actions.SHOW_LESS_THAN,\n      Actions.EDIT_THRESHOLD,\n    ];\n\n    const cellActions = withStaticFilters ? [] : allowActions;\n\n    if (field === 'transaction') {\n      const projectID = getProjectID(dataRow, projects);\n      const summaryView = eventView.clone();\n      if (dataRow['http.method']) {\n        summaryView.additionalConditions.setFilterValues('http.method', [\n          dataRow['http.method'] as string,\n        ]);\n      }\n      summaryView.query = summaryView.getQueryWithAdditionalConditions();\n      const isUnparameterizedRow = dataRow.transaction === UNPARAMETERIZED_TRANSACTION;\n      const target = isUnparameterizedRow\n        ? createUnnamedTransactionsDiscoverTarget({\n            organization,\n            location,\n          })\n        : transactionSummaryRouteWithQuery({\n            orgSlug: organization.slug,\n            transaction: String(dataRow.transaction) || '',\n            query: summaryView.generateQueryStringObject(),\n            projectID,\n          });\n\n      return (\n        <CellAction\n          column={column}\n          dataRow={dataRow}\n          handleCellAction={this.handleCellAction(column, dataRow)}\n          allowActions={cellActions}\n        >\n          <Link\n            to={target}\n            onClick={this.handleSummaryClick}\n            style={{display: `block`, width: `100%`}}\n          >\n            {rendered}\n          </Link>\n        </CellAction>\n      );\n    }\n\n    if (field.startsWith('team_key_transaction')) {\n      // don't display per cell actions for team_key_transaction\n      return rendered;\n    }\n\n    const fieldName = getAggregateAlias(field);\n    const value = dataRow[fieldName];\n    if (tableMeta[fieldName] === 'integer' && defined(value) && value > 999) {\n      return (\n        <Tooltip\n          title={value.toLocaleString()}\n          containerDisplayMode=\"block\"\n          position=\"right\"\n        >\n          <CellAction\n            column={column}\n            dataRow={dataRow}\n            handleCellAction={this.handleCellAction(column, dataRow)}\n            allowActions={cellActions}\n          >\n            {rendered}\n          </CellAction>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <CellAction\n        column={column}\n        dataRow={dataRow}\n        handleCellAction={this.handleCellAction(column, dataRow)}\n        allowActions={cellActions}\n      >\n        {rendered}\n      </CellAction>\n    );\n  }\n\n  renderBodyCellWithData = (tableData: TableData | null) => {\n    return (\n      column: TableColumn<keyof TableDataRow>,\n      dataRow: TableDataRow\n    ): React.ReactNode => this.renderBodyCell(tableData, column, dataRow);\n  };\n\n  onSortClick(currentSortKind?: string, currentSortField?: string) {\n    const {organization} = this.props;\n    trackAdvancedAnalyticsEvent('performance_views.landingv2.transactions.sort', {\n      organization,\n      field: currentSortField,\n      direction: currentSortKind,\n    });\n  }\n\n  paginationAnalyticsEvent = (direction: string) => {\n    const {organization} = this.props;\n    trackAdvancedAnalyticsEvent('performance_views.landingv3.table_pagination', {\n      organization,\n      direction,\n    });\n  };\n\n  renderHeadCell(\n    tableMeta: TableData['meta'],\n    column: TableColumn<keyof TableDataRow>,\n    title: React.ReactNode\n  ): React.ReactNode {\n    const {eventView, location} = this.props;\n\n    const align = fieldAlignment(column.name, column.type, tableMeta);\n    const field = {field: column.name, width: column.width};\n    const aggregateAliasTableMeta: MetaType = {};\n    if (tableMeta) {\n      Object.keys(tableMeta).forEach(key => {\n        aggregateAliasTableMeta[getAggregateAlias(key)] = tableMeta[key];\n      });\n    }\n\n    function generateSortLink(): LocationDescriptorObject | undefined {\n      if (!tableMeta) {\n        return undefined;\n      }\n\n      const nextEventView = eventView.sortOnField(field, aggregateAliasTableMeta);\n      const queryStringObject = nextEventView.generateQueryStringObject();\n\n      return {\n        ...location,\n        query: {...location.query, sort: queryStringObject.sort},\n      };\n    }\n    const currentSort = eventView.sortForField(field, aggregateAliasTableMeta);\n    const canSort = isFieldSortable(field, aggregateAliasTableMeta);\n\n    const currentSortKind = currentSort ? currentSort.kind : undefined;\n    const currentSortField = currentSort ? currentSort.field : undefined;\n\n    const sortLink = (\n      <SortLink\n        align={align}\n        title={title || field.field}\n        direction={currentSortKind}\n        canSort={canSort}\n        generateSortLink={generateSortLink}\n        onClick={() => this.onSortClick(currentSortKind, currentSortField)}\n      />\n    );\n    if (field.field.startsWith('user_misery')) {\n      return (\n        <GuideAnchor target=\"project_transaction_threshold\" position=\"top\">\n          {sortLink}\n        </GuideAnchor>\n      );\n    }\n    return sortLink;\n  }\n\n  renderHeadCellWithMeta = (tableMeta: TableData['meta']) => {\n    const columnTitles = this.props.columnTitles ?? COLUMN_TITLES;\n    return (column: TableColumn<keyof TableDataRow>, index: number): React.ReactNode =>\n      this.renderHeadCell(tableMeta, column, columnTitles[index]);\n  };\n\n  renderPrependCellWithData = (tableData: TableData | null) => {\n    const {eventView} = this.props;\n\n    const teamKeyTransactionColumn = eventView\n      .getColumns()\n      .find((col: TableColumn<React.ReactText>) => col.name === 'team_key_transaction');\n    return (isHeader: boolean, dataRow?: any) => {\n      if (teamKeyTransactionColumn) {\n        if (isHeader) {\n          const star = (\n            <TeamKeyTransactionWrapper>\n              <IconStar\n                key=\"keyTransaction\"\n                color=\"yellow300\"\n                isSolid\n                data-test-id=\"team-key-transaction-header\"\n              />\n            </TeamKeyTransactionWrapper>\n          );\n          return [this.renderHeadCell(tableData?.meta, teamKeyTransactionColumn, star)];\n        }\n        return [this.renderBodyCell(tableData, teamKeyTransactionColumn, dataRow)];\n      }\n      return [];\n    };\n  };\n\n  handleSummaryClick = () => {\n    const {organization, location, projects} = this.props;\n    trackAdvancedAnalyticsEvent('performance_views.overview.navigate.summary', {\n      organization,\n      project_platforms: getSelectedProjectPlatforms(location, projects),\n    });\n  };\n\n  handleResizeColumn = (columnIndex: number, nextColumn: GridColumn) => {\n    const widths: number[] = [...this.state.widths];\n    widths[columnIndex] = nextColumn.width\n      ? Number(nextColumn.width)\n      : COL_WIDTH_UNDEFINED;\n    this.setState({widths});\n  };\n\n  getSortedEventView() {\n    const {eventView} = this.props;\n\n    return eventView.withSorts([\n      {\n        field: 'team_key_transaction',\n        kind: 'desc',\n      },\n      ...eventView.sorts,\n    ]);\n  }\n\n  render() {\n    const {eventView, organization, location, setError} = this.props;\n    const useEvents = organization.features.includes(\n      'performance-frontend-use-events-endpoint'\n    );\n    const {widths, transaction, transactionThreshold} = this.state;\n    const columnOrder = eventView\n      .getColumns(useEvents)\n      // remove team_key_transactions from the column order as we'll be rendering it\n      // via a prepended column\n      .filter(\n        (col: TableColumn<React.ReactText>) =>\n          col.name !== 'team_key_transaction' &&\n          !col.name.startsWith('count_miserable') &&\n          col.name !== 'project_threshold_config'\n      )\n      .map((col: TableColumn<React.ReactText>, i: number) => {\n        if (typeof widths[i] === 'number') {\n          return {...col, width: widths[i]};\n        }\n        return col;\n      });\n\n    const sortedEventView = this.getSortedEventView();\n    const columnSortBy = sortedEventView.getSorts();\n\n    const prependColumnWidths = ['max-content'];\n\n    return (\n      <div data-test-id=\"performance-table\">\n        <MEPConsumer>\n          {value => {\n            return (\n              <DiscoverQuery\n                eventView={sortedEventView}\n                orgSlug={organization.slug}\n                location={location}\n                setError={error => setError(error?.message)}\n                referrer=\"api.performance.landing-table\"\n                transactionName={transaction}\n                transactionThreshold={transactionThreshold}\n                queryExtras={getMEPQueryParams(value)}\n                useEvents={useEvents}\n              >\n                {({pageLinks, isLoading, tableData}) => (\n                  <Fragment>\n                    <GridEditable\n                      isLoading={isLoading}\n                      data={tableData ? tableData.data : []}\n                      columnOrder={columnOrder}\n                      columnSortBy={columnSortBy}\n                      grid={{\n                        onResizeColumn: this.handleResizeColumn,\n                        renderHeadCell: this.renderHeadCellWithMeta(\n                          tableData?.meta\n                        ) as any,\n                        renderBodyCell: this.renderBodyCellWithData(tableData) as any,\n                        renderPrependColumns: this.renderPrependCellWithData(\n                          tableData\n                        ) as any,\n                        prependColumnWidths,\n                      }}\n                      location={location}\n                    />\n                    <Pagination\n                      pageLinks={pageLinks}\n                      paginationAnalyticsEvent={this.paginationAnalyticsEvent}\n                    />\n                  </Fragment>\n                )}\n              </DiscoverQuery>\n            );\n          }}\n        </MEPConsumer>\n      </div>\n    );\n  }\n}\n\nfunction Table(props: Omit<Props, 'summaryConditions'> & {summaryConditions?: string}) {\n  const summaryConditions =\n    props.summaryConditions ?? props.eventView.getQueryWithAdditionalConditions();\n\n  return <_Table {...props} summaryConditions={summaryConditions} />;\n}\n\n// Align the contained IconStar with the IconStar buttons in individual table\n// rows, which have 2px padding + 1px border.\nconst TeamKeyTransactionWrapper = styled('div')`\n  padding: 3px;\n`;\n\nexport default Table;\n","import {ReactNode} from 'react';\n\nimport Feature from 'sentry/components/acl/feature';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {t} from 'sentry/locale';\nimport {\n  AutoSampleState,\n  MEPState,\n  MetricsEnhancedSettingContext,\n  useMEPSettingContext,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\n\ninterface MetricsEventsOption {\n  label: string;\n  prefix: ReactNode;\n  value: MEPState;\n}\n\nconst autoTextMap: Record<AutoSampleState, string> = {\n  [AutoSampleState.unset]: t('Auto'),\n  [AutoSampleState.metrics]: t('Auto (metrics)'),\n  [AutoSampleState.transactions]: t('Auto (transactions)'),\n};\n\nfunction getOptions(mepContext: MetricsEnhancedSettingContext): MetricsEventsOption[] {\n  const autoText = autoTextMap[mepContext.autoSampleState];\n\n  const prefix = <span>{t('Dataset')}</span>;\n\n  return [\n    {\n      value: MEPState.auto,\n      prefix,\n      label: autoText,\n    },\n    {\n      value: MEPState.metricsOnly,\n      prefix,\n      label: t('Processed'),\n    },\n    {\n      value: MEPState.transactionsOnly,\n      prefix,\n      label: t('Indexed'),\n    },\n  ];\n}\n\nexport function MetricsEventsDropdown() {\n  return (\n    <Feature features={['performance-use-metrics']}>\n      <InnerDropdown />\n    </Feature>\n  );\n}\n\nfunction InnerDropdown() {\n  const mepSetting = useMEPSettingContext();\n\n  const options = getOptions(mepSetting);\n\n  const currentOption =\n    options.find(({value}) => value === mepSetting.metricSettingState) || options[0];\n\n  return (\n    <CompactSelect\n      triggerProps={{prefix: currentOption.prefix}}\n      value={currentOption.value}\n      options={options}\n      onChange={opt => mepSetting.setMetricSettingState(opt.value)}\n    />\n  );\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {browserHistory, withRouter, WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\n\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {LineChart, LineChartProps} from 'sentry/components/charts/lineChart';\nimport ReleaseSeries from 'sentry/components/charts/releaseSeries';\nimport {ChartContainer, HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {Panel} from 'sentry/components/panels';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {DateString, OrganizationSummary} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport useApi from 'sentry/utils/useApi';\n\nimport {replaceSeriesName, transformEventStatsSmoothed} from '../trends/utils';\nimport {ViewProps} from '../types';\n\nimport {\n  getMaxOfSeries,\n  getVitalChartDefinitions,\n  getVitalChartTitle,\n  vitalNameFromLocation,\n  VitalState,\n  vitalStateColors,\n} from './utils';\n\ntype Props = WithRouterProps &\n  Omit<ViewProps, 'start' | 'end'> & {\n    end: DateString | null;\n    interval: string;\n    organization: OrganizationSummary;\n    start: DateString | null;\n  };\n\nfunction VitalChart({\n  project,\n  environment,\n  location,\n  organization,\n  query,\n  statsPeriod,\n  router,\n  start,\n  end,\n  interval,\n}: Props) {\n  const api = useApi();\n  const theme = useTheme();\n\n  const vitalName = vitalNameFromLocation(location);\n  const yAxis = `p75(${vitalName})`;\n\n  const {utc, legend, vitalPoor, markLines, chartOptions} = getVitalChartDefinitions({\n    theme,\n    location,\n    yAxis,\n    vital: vitalName,\n  });\n\n  function handleLegendSelectChanged(legendChange: {\n    name: string;\n    selected: Record<string, boolean>;\n    type: string;\n  }) {\n    const {selected} = legendChange;\n    const unselected = Object.keys(selected).filter(key => !selected[key]);\n\n    const to = {\n      ...location,\n      query: {\n        ...location.query,\n        unselectedSeries: unselected,\n      },\n    };\n    browserHistory.push(to);\n  }\n\n  return (\n    <Panel>\n      <ChartContainer>\n        <HeaderTitleLegend>\n          {getVitalChartTitle(vitalName)}\n          <QuestionTooltip\n            size=\"sm\"\n            position=\"top\"\n            title={t(`The durations shown should fall under the vital threshold.`)}\n          />\n        </HeaderTitleLegend>\n        <ChartZoom router={router} period={statsPeriod} start={start} end={end} utc={utc}>\n          {zoomRenderProps => (\n            <EventsRequest\n              api={api}\n              organization={organization}\n              period={statsPeriod}\n              project={project}\n              environment={environment}\n              start={start}\n              end={end}\n              interval={interval}\n              showLoading={false}\n              query={query}\n              includePrevious={false}\n              yAxis={[yAxis]}\n              partial\n            >\n              {({timeseriesData: results, errored, loading, reloading}) => {\n                if (errored) {\n                  return (\n                    <ErrorPanel>\n                      <IconWarning color=\"gray500\" size=\"lg\" />\n                    </ErrorPanel>\n                  );\n                }\n\n                const colors =\n                  (results && theme.charts.getColorPalette(results.length - 2)) || [];\n\n                const {smoothedResults} = transformEventStatsSmoothed(results);\n\n                const smoothedSeries = smoothedResults\n                  ? smoothedResults.map(({seriesName, ...rest}, i: number) => {\n                      return {\n                        seriesName: replaceSeriesName(seriesName) || 'p75',\n                        ...rest,\n                        color: colors[i],\n                        lineStyle: {\n                          opacity: 1,\n                          width: 2,\n                        },\n                      };\n                    })\n                  : [];\n\n                const seriesMax = getMaxOfSeries(smoothedSeries);\n                const yAxisMax = Math.max(seriesMax, vitalPoor);\n                chartOptions.yAxis!.max = yAxisMax * 1.1;\n\n                return (\n                  <ReleaseSeries\n                    start={start}\n                    end={end}\n                    period={statsPeriod}\n                    utc={utc}\n                    projects={project}\n                    environments={environment}\n                  >\n                    {({releaseSeries}) => (\n                      <TransitionChart loading={loading} reloading={reloading}>\n                        <TransparentLoadingMask visible={reloading} />\n                        {getDynamicText({\n                          value: (\n                            <LineChart\n                              {...zoomRenderProps}\n                              {...chartOptions}\n                              legend={legend}\n                              onLegendSelectChanged={handleLegendSelectChanged}\n                              series={[...markLines, ...releaseSeries, ...smoothedSeries]}\n                            />\n                          ),\n                          fixed: 'Web Vitals Chart',\n                        })}\n                      </TransitionChart>\n                    )}\n                  </ReleaseSeries>\n                );\n              }}\n            </EventsRequest>\n          )}\n        </ChartZoom>\n      </ChartContainer>\n    </Panel>\n  );\n}\n\nexport default withRouter(VitalChart);\n\nexport type _VitalChartProps = {\n  field: string;\n  grid: LineChartProps['grid'];\n  loading: boolean;\n  reloading: boolean;\n  data?: Series[];\n  height?: number;\n  utc?: boolean;\n  vitalFields?: {\n    goodCountField: string;\n    mehCountField: string;\n    poorCountField: string;\n  };\n};\n\nfunction fieldToVitalType(\n  seriesName: string,\n  vitalFields: _VitalChartProps['vitalFields']\n): VitalState | undefined {\n  if (seriesName === vitalFields?.poorCountField.replace('equation|', '')) {\n    return VitalState.POOR;\n  }\n  if (seriesName === vitalFields?.mehCountField.replace('equation|', '')) {\n    return VitalState.MEH;\n  }\n  if (seriesName === vitalFields?.goodCountField.replace('equation|', '')) {\n    return VitalState.GOOD;\n  }\n\n  return undefined;\n}\n\nexport function _VitalChart(props: _VitalChartProps) {\n  const {\n    field: yAxis,\n    data: _results,\n    loading,\n    reloading,\n    height,\n    grid,\n    utc,\n    vitalFields,\n  } = props;\n  const theme = useTheme();\n\n  if (!_results || !vitalFields) {\n    return null;\n  }\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    grid,\n    seriesOptions: {\n      showSymbol: false,\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: (value: number, seriesName?: string) => {\n        return tooltipFormatter(\n          value,\n          aggregateOutputType(vitalFields[0] === WebVital.CLS ? seriesName : yAxis)\n        );\n      },\n    },\n    xAxis: {\n      show: false,\n    },\n    xAxes: undefined,\n    yAxis: {\n      axisLabel: {\n        color: theme.chartLabel,\n        showMaxLabel: false,\n        formatter: (value: number) =>\n          axisLabelFormatter(value, aggregateOutputType(yAxis)),\n      },\n    },\n    utc,\n    isGroupedByDate: true,\n    showTimeInTooltip: true,\n  };\n\n  const results = _results.filter(s => !!fieldToVitalType(s.seriesName, vitalFields));\n\n  const smoothedSeries = results?.length\n    ? results.map(({seriesName, ...rest}) => {\n        const adjustedSeries = fieldToVitalType(seriesName, vitalFields) || 'count';\n        return {\n          seriesName: adjustedSeries,\n          ...rest,\n          color: theme[vitalStateColors[adjustedSeries]],\n          lineStyle: {\n            opacity: 1,\n            width: 2,\n          },\n        };\n      })\n    : [];\n\n  return (\n    <div>\n      <TransitionChart loading={loading} reloading={reloading}>\n        <TransparentLoadingMask visible={reloading} />\n        {getDynamicText({\n          value: (\n            <LineChart\n              height={height}\n              {...chartOptions}\n              onLegendSelectChanged={() => {}}\n              series={[...smoothedSeries]}\n              isGroupedByDate\n            />\n          ),\n          fixed: 'Web Vitals Chart',\n        })}\n      </TransitionChart>\n    </div>\n  );\n}\n"],"names":["space","PerformanceLayoutBodyRow","p","theme","breakpoints","small","large","columns","minSize","useState","browserHistory","debounce","BaseSearchBar","DEFAULT_DEBOUNCE_DURATION","t","doDiscoverQuery","MutableSearch","useApi","transactionSummaryRouteWithQuery","SearchDropdown","ItemType","SearchBar","props","organization","eventView","_eventView","onSearch","query","searchQuery","searchResults","setSearchResults","loading","setLoading","searchString","setSearchString","api","clone","prepareQuery","prependedChar","appendedChar","length","getSuggestedTransactions","projectIdStrings","project","map","String","conditions","addFilterValues","Object","keys","activeRequests","clear","useEvents","features","includes","url","slug","results","field","sort","formatString","statsPeriod","referrer","parsedResults","data","reduce","searchGroup","item","children","push","value","transaction","project_id","title","type","LINK","desc","icon","_","Error","leading","handleSearch","lastIndex","lastIndexOf","transactionName","slice","navigateToTransactionSummary","name","projectId","generateQueryStringObject","next","orgSlug","projectID","display","maxHeight","overflowY","Container","useCallback","useRef","isPropValid","Button","Input","IconSearch","IconClose","queryProp","defaultQuery","onChange","width","size","className","inputProps","inputRef","setQuery","onQueryChange","e","target","onSubmit","preventDefault","current","blur","clearSearch","FormWrap","StyledInput","undefined","formPadding","paddingLeft","iconSizes","sm","showClearButton","paddingRight","xs","StyledIconSearch","shouldForwardProp","prop","inputSize","SearchClearButton","fontSizeLarge","subText","textColor","createDefinedContext","PerformanceDisplayProvider","_usePerformanceDisplayType","usePerformanceDisplayType","performanceType","useEffect","Sentry","isEqual","loadOrganizationTags","PageFiltersContainer","SentryDocumentTitle","ALL_ACCESS_PROJECTS","trackAdvancedAnalyticsEvent","canUseMetricsData","METRIC_SEARCH_SETTING_PARAM","PerformanceEventViewProvider","useOrganization","usePrevious","useProjects","withPageFilters","DEFAULT_STATS_PERIOD","generatePerformanceEventView","PerformanceLanding","addRoutePerformanceContext","getSelectedProjectPlatforms","handleTrendsClick","PerformanceContent","selection","location","demoMode","router","projects","mounted","previousDateTime","datetime","state","setState","error","withStaticFilters","getOnboardingProject","filtered","filter","firstTransactionEvent","parseInt","id","onboardingProject","selectedProjects","show_onboarding","project_platforms","setError","newError","Array","isArray","withScope","scope","setExtra","captureException","currentMEPState","pathname","cursor","trim","isDefaultQuery","start","end","utc","period","projectPlatforms","Fragment","useTheme","BarChart","BarChartZoom","ErrorPanel","HeaderTitleLegend","TransparentLoadingMask","Placeholder","QuestionTooltip","IconWarning","formatAbbreviatedNumber","getDynamicText","HistogramQuery","computeBuckets","formatHistogramData","DoubleHeaderContainer","getFieldOrBackup","NUM_BUCKETS","PRECISION","HistogramChart","onFilterChange","titleTooltip","didReceiveMultiAxis","backupField","usingBackupAxis","_backupField","_field","isLoading","isErrored","chartData","histograms","Chart","height","grid","disableXAxis","disableZoom","disableChartPadding","colors","series","seriesName","xAxis","truncate","axisTick","alignWithLabel","allSeries","yAxis","axisLabel","color","chartLabel","formatter","zoomRenderProps","show","left","right","top","bottom","fixed","BarChartContainer","hasPadding","MaskContainer","FRONTEND_PAGELOAD_COLUMN_TITLES","FRONTEND_OTHER_COLUMN_TITLES","BACKEND_COLUMN_TITLES","MOBILE_COLUMN_TITLES","REACT_NATIVE_COLUMN_TITLES","getAxisOrBackupAxis","axis","displayedAxis","getBackupAxisOption","backupOption","getBackupAxes","axes","getBackupField","ButtonBar","DatePageFilter","EnvironmentPageFilter","Layout","LoadingIndicator","PageFilterBar","PageHeading","TransactionNameSearchBar","TeamKeyTransactionManager","ProjectPageFilter","MAX_QUERY_LENGTH","PageContent","generateAggregateFields","GenericQueryBatcher","MetricsCardinalityProvider","MEPConsumer","MEPSettingProvider","MEPState","PageErrorAlert","PageErrorProvider","useTeams","Onboarding","MetricsEventsDropdown","getTransactionSearchQuery","AllTransactionsView","BackendView","FrontendOtherView","FrontendPageloadView","MobileView","MetricsDataSwitcher","MetricsDataSwitcherAlert","getDefaultDisplayForPlatform","getLandingDisplayFromParam","handleLandingDisplayChange","LANDING_DISPLAYS","LandingDisplayField","fieldToViewMap","ALL","BACKEND","FRONTEND_OTHER","FRONTEND_PAGELOAD","MOBILE","teams","initiallyLoaded","provideUserTeams","hasMounted","paramLandingDisplay","defaultLandingDisplayForProjects","landingDisplay","showOnboarding","replace","join","getFreeTextFromQuery","transactionValues","getFilterValues","derivedQuery","ViewComponent","pageFilters","SearchFilterContainer","SearchContainerWithFilterAndMetrics","SearchContainerWithFilter","shouldShowTransactionNameOnlySearch","label","metricsDataSide","forceTransactionsOnly","metricSettingState","metricsOnly","fields","StyledPageContent","StyledHeading","useMetricsCardinalityContext","decodeScalar","isUsingMetrics","metricsCardinality","hideLoadingIndicator","outcome","MetricsSwitchHandler","switcherChildren","mepSearchState","hasQuery","queryIsTransactionsBased","transactionsOnly","shouldAdjustQuery","LoadingContainer","useMemo","updateProjects","Alert","GlobalSdkUpdateAlert","ExternalLink","Link","SidebarPanelKey","tct","SidebarPanelStore","areMultipleProjectsSelected","createUnnamedTransactionsDiscoverTarget","getSelectedProjectPlatformsArray","SUPPORTED_TRANSACTION_NAME_DOCS","UNSUPPORTED_TRANSACTION_NAME_DOCS","handleReviewUpdatesClick","activatePanel","Broadcasts","docsLink","platforms","platform","supportedPlatform","find","platformBase","handleSwitchToCompatibleProjects","compatibleProjects","shouldNotifyUnnamedTransactions","shouldWarnIncompatibleSDK","discoverTarget","updateSDK","onlyViewCompatible","discover","setNames","usePageError","Table","PROJECT_PERFORMANCE_TYPE","DoubleChartRow","TripleChartRow","PerformanceWidgetSetting","ANY","USER_MISERY_AREA","TPM_AREA","FAILURE_RATE_AREA","APDEX_AREA","P50_DURATION_AREA","P75_DURATION_AREA","P95_DURATION_AREA","P99_DURATION_AREA","MOST_RELATED_ISSUES","MOST_IMPROVED","MOST_REGRESSED","setPageError","useMEPSettingContext","filterAllowedChartsMetrics","getAllowedChartsSmall","mepSetting","charts","DURATION_HISTOGRAM","SLOW_HTTP_OPS","SLOW_DB_OPS","SLOW_RESOURCE_OPS","P75_LCP_AREA","LCP_HISTOGRAM","FCP_HISTOGRAM","FRONTEND","WORST_LCP_VITALS","WORST_FCP_VITALS","WORST_FID_VITALS","SLOW_BROWSER_OPS","checkIsReactNative","columnTitles","COLD_STARTUP_AREA","WARM_STARTUP_AREA","SLOW_FRAMES_AREA","FROZEN_FRAMES_AREA","MOST_SLOW_FRAMES","MOST_FROZEN_FRAMES","getChartSetting","WidgetContainer","getInitialChartSettings","chartCount","chartHeight","allowedCharts","fill","index","ChartRow","palette","getColorPalette","chartSettings","setChartSettings","defaultProps","StyledRow","omit","pick","qs","DropdownButton","CompositeSelect","IconEllipsis","DisplayModes","withOrganization","GenericPerformanceWidgetDataType","_setChartSetting","WIDGET_DEFINITIONS","HistogramWidget","LineChartListWidget","SingleFieldAreaWidget","TrendsWidget","VitalWidget","trackChartSettingChange","previousChartSetting","chartSetting","fromDefault","from_widget","to_widget","from_default","_WidgetContainer","rowChartSettings","setRowChartSettings","rest","_chartSetting","defaultChartSetting","forceDefaultChartSetting","setChartSettingState","setChartSetting","setting","newSettings","chartDefinition","widgetEventView","makeEventViewForWidget","widgetProps","ContainerActions","containerProps","passedProps","dataType","trends","area","vitals","line_list","histogram","WidgetContainerActions","menuOptions","settingsMap","options","disabled","trigger","ref","handleWidgetActionChange","getEventViewDiscoverPath","allowsOpenInDiscover","Boolean","discoverUrlTarget","getResultsViewUrlTarget","getQueryWithAdditionalConditions","stringify","baseEventView","PREVIOUS","fieldName","normalizeDateTimeParams","defined","removeEmptyTransactionsFromList","transactionColumnExists","some","d","transformDiscoverToList","interval","defaultStatsPeriod","_data","tableData","childData","hasData","transformEventsRequestToVitals","reloading","errored","transformHistogramQuery","values","normalizeTrends","transformTrendsDiscover","trendsData","events","statsData","stats","transactionsList","GenericPerformanceWidget","getMEPQueryParams","globalSelection","getPageFilters","Queries","chart","component","provided","transform","memoizationKey","widgetData","chartColor","Subtitle","gray300","fontSizeMedium","withRouter","_EventsRequest","getInterval","Count","Tooltip","Truncate","DiscoverQuery","getAggregateAlias","withApi","_DurationChart","getPerformanceDuration","UNPARAMETERIZED_TRANSACTION","excludeTransaction","SelectableList","GrowLink","ListClose","RightAlignedCell","WidgetEmptyStateWarning","transformEventsRequestToArea","eventsRequestQueryProps","getMEPParamsIfApplicable","slowList","framesList","selectedListIndex","setSelectListIndex","pageError","isSlowestType","isFramesType","listQuery","sorts","kind","additionalConditions","setFilterValues","mutableSearch","removeFilter","f","chartQuery","enabled","list","issue","listItem","additionalQuery","breakdown","transactionTarget","getPageFiltersQuery","fieldString","valueMap","MOST_RELATED_ERRORS","failure_count","slowest","rightValue","count","noPadding","EventsRequest","DurationChart","TrendsDiscoverQuery","withProjects","CompareDurations","trendsTargetRoute","TrendChangeType","TrendFunctionField","trendChangeType","IMPROVED","REGRESSION","trendFunctionField","AVG","environment","bottomPadding","initialConditions","trendsTarget","trendFunction","TrendsChart","WebVital","decodeList","vitalDetailRouteWithQuery","_VitalChart","VitalBar","getVitalFields","baseField","poorCountField","mehCountField","goodCountField","vitalFields","transformFieldsWithStops","vitalStops","poorStop","poor","mehStop","meh","sortField","fieldsList","fieldFromProps","propField","settingToVital","LCP","FCP","FID","WORST_CLS_VITALS","CLS","handleViewAllClick","vital","getVitalDataForListItem","vitalName","useAggregateAlias","transformFieldName","poorData","mehData","goodData","_vitalData","good","p75","vitalData","total","VitalBarCell","Component","addSuccessMessage","openModal","GuideAnchor","GridEditable","COL_WIDTH_UNDEFINED","SortLink","Pagination","IconStar","isFieldSortable","getFieldRenderer","fieldAlignment","CellAction","Actions","updateQuery","TransactionThresholdModal","modalCss","normalizeSearchConditionsWithTransactionName","COLUMN_TITLES","getProjectID","eventData","projectSlug","currentProject","_Table","widths","transactionThreshold","transactionThresholdMetric","column","dataRow","action","EDIT_THRESHOLD","project_threshold","project_threshold_config","modalProps","threshold","metric","backdrop","searchConditions","renderBodyCell","direction","tableMeta","renderHeadCell","teamKeyTransactionColumn","getColumns","col","isHeader","star","meta","columnIndex","nextColumn","Number","isAlias","key","fieldRenderer","rendered","allowActions","ADD","EXCLUDE","SHOW_GREATER_THAN","SHOW_LESS_THAN","cellActions","summaryView","isUnparameterizedRow","handleCellAction","handleSummaryClick","startsWith","toLocaleString","onSortClick","currentSortKind","currentSortField","align","aggregateAliasTableMeta","forEach","generateSortLink","nextEventView","sortOnField","queryStringObject","currentSort","sortForField","canSort","sortLink","getSortedEventView","withSorts","render","columnOrder","i","sortedEventView","columnSortBy","getSorts","prependColumnWidths","message","pageLinks","onResizeColumn","handleResizeColumn","renderHeadCellWithMeta","renderBodyCellWithData","renderPrependColumns","renderPrependCellWithData","paginationAnalyticsEvent","summaryConditions","TeamKeyTransactionWrapper","Feature","CompactSelect","AutoSampleState","autoTextMap","unset","metrics","transactions","getOptions","mepContext","autoText","autoSampleState","prefix","auto","InnerDropdown","currentOption","opt","setMetricSettingState","ChartZoom","LineChart","ReleaseSeries","ChartContainer","TransitionChart","Panel","axisLabelFormatter","tooltipFormatter","aggregateOutputType","replaceSeriesName","transformEventStatsSmoothed","getMaxOfSeries","getVitalChartDefinitions","getVitalChartTitle","vitalNameFromLocation","VitalState","vitalStateColors","VitalChart","legend","vitalPoor","markLines","chartOptions","handleLegendSelectChanged","legendChange","selected","unselected","to","unselectedSeries","timeseriesData","smoothedResults","smoothedSeries","lineStyle","opacity","seriesMax","yAxisMax","Math","max","releaseSeries","fieldToVitalType","POOR","MEH","GOOD","_results","seriesOptions","showSymbol","tooltip","valueFormatter","xAxes","showMaxLabel","isGroupedByDate","showTimeInTooltip","s","adjustedSeries"],"sourceRoot":""}