{"version":3,"file":"chunks/app_utils_performance_histogram_utils_tsx-app_views_performance_transactionSummary_transactio-36f0d7.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/performance/histogram/utils.tsx","webpack:///./app/utils/performance/urls.ts","webpack:///./app/views/performance/transactionSummary/transactionEvents/utils.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/views/performance/trends/changedTransactions.tsx","webpack:///./app/views/performance/trends/chart.tsx"],"sourcesContent":["import {ColumnType} from 'sentry/utils/discover/fields';\nimport {getDuration} from 'sentry/utils/formatters';\n\nimport {HistogramData} from './types';\n\nexport function getBucketWidth(data: HistogramData) {\n  // We can assume that all buckets are of equal width, use the first two\n  // buckets to get the width. The value of each histogram function indicates\n  // the beginning of the bucket.\n  return data.length >= 2 ? data[1].bin - data[0].bin : 0;\n}\n\nexport function computeBuckets(data: HistogramData) {\n  const width = getBucketWidth(data);\n\n  return data.map(item => {\n    const bucket = item.bin;\n    return {\n      start: bucket,\n      end: bucket + width,\n    };\n  });\n}\n\nexport function formatHistogramData(\n  data: HistogramData,\n  {\n    precision,\n    type,\n    additionalFieldsFn,\n  }: {\n    additionalFieldsFn?: any;\n    precision?: number;\n    type?: ColumnType;\n  } = {}\n) {\n  const formatter = (value: number): string => {\n    switch (type) {\n      case 'duration':\n        const decimalPlaces = precision ?? (value < 1000 ? 0 : 3);\n        return getDuration(value / 1000, decimalPlaces, true);\n      case 'number':\n        // This is trying to avoid some of potential rounding errors that cause bins\n        // have the same label, if the number of bins doesn't visually match what is\n        // expected, check that this rounding is correct. If this issue persists,\n        // consider formatting the bin as a string in the response\n        const factor = 10 ** (precision ?? 0);\n        return (Math.round((value + Number.EPSILON) * factor) / factor).toLocaleString();\n      default:\n        throw new Error(`Unable to format type: ${type}`);\n    }\n  };\n  return data.map(item => {\n    return {\n      value: item.count,\n      name: formatter(item.bin),\n      ...(additionalFieldsFn?.(item.bin) ?? {}),\n    };\n  });\n}\n","import {LocationDescriptor, Query} from 'history';\n\nimport {spanTargetHash} from 'sentry/components/events/interfaces/spans/utils';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport function getTransactionDetailsUrl(\n  orgSlug: Organization['slug'],\n  eventSlug: string,\n  transaction?: string,\n  query?: Query,\n  spanId?: string\n): LocationDescriptor {\n  const locationQuery = {\n    ...(query || {}),\n    transaction,\n  };\n  if (!defined(locationQuery.transaction)) {\n    delete locationQuery.transaction;\n  }\n\n  const target = {\n    pathname: `/organizations/${orgSlug}/performance/${eventSlug}/`,\n    query: locationQuery,\n    hash: defined(spanId) ? spanTargetHash(spanId) : undefined,\n  };\n  if (!defined(target.hash)) {\n    delete target.hash;\n  }\n\n  return target;\n}\n","import {Location, Query} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {filterToField, SpanOperationBreakdownFilter} from '../filter';\nimport {TransactionFilterOptions} from '../utils';\n\nexport enum EventsDisplayFilterName {\n  p50 = 'p50',\n  p75 = 'p75',\n  p95 = 'p95',\n  p99 = 'p99',\n  p100 = 'p100',\n}\n\nexport type EventsDisplayFilter = {\n  label: string;\n  name: EventsDisplayFilterName;\n  query?: string[][];\n  sort?: {field: string; kind: 'desc' | 'asc'};\n};\n\nexport type EventsFilterOptions = {\n  [name in EventsDisplayFilterName]: EventsDisplayFilter;\n};\n\nexport type EventsFilterPercentileValues = {\n  [name in Exclude<EventsDisplayFilterName, EventsDisplayFilterName.p100>]: number;\n};\n\nexport function getEventsFilterOptions(\n  spanOperationBreakdownFilter: SpanOperationBreakdownFilter,\n  percentileValues?: EventsFilterPercentileValues\n): EventsFilterOptions {\n  const {p99, p95, p75, p50} = percentileValues\n    ? percentileValues\n    : {p99: 0, p95: 0, p75: 0, p50: 0};\n  return {\n    [EventsDisplayFilterName.p50]: {\n      name: EventsDisplayFilterName.p50,\n      query: p50 ? [['transaction.duration', `<=${p50.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p50'),\n    },\n    [EventsDisplayFilterName.p75]: {\n      name: EventsDisplayFilterName.p75,\n      query: p75 ? [['transaction.duration', `<=${p75.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p75'),\n    },\n    [EventsDisplayFilterName.p95]: {\n      name: EventsDisplayFilterName.p95,\n      query: p95 ? [['transaction.duration', `<=${p95.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p95'),\n    },\n    [EventsDisplayFilterName.p99]: {\n      name: EventsDisplayFilterName.p99,\n      query: p99 ? [['transaction.duration', `<=${p99.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p99'),\n    },\n    [EventsDisplayFilterName.p100]: {\n      name: EventsDisplayFilterName.p100,\n      label: t('p100'),\n    },\n  };\n}\n\nexport function eventsRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = `/organizations/${orgSlug}/performance/summary/events/`;\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nfunction stringToFilter(option: string) {\n  if (\n    Object.values(EventsDisplayFilterName).includes(option as EventsDisplayFilterName)\n  ) {\n    return option as EventsDisplayFilterName;\n  }\n\n  return EventsDisplayFilterName.p100;\n}\nexport function decodeEventsDisplayFilterFromLocation(location: Location) {\n  return stringToFilter(\n    decodeScalar(location.query.showTransactions, EventsDisplayFilterName.p100)\n  );\n}\n\nexport function filterEventsDisplayToLocationQuery(\n  option: EventsDisplayFilterName,\n  spanOperationBreakdownFilter: SpanOperationBreakdownFilter\n) {\n  const eventsFilterOptions = getEventsFilterOptions(spanOperationBreakdownFilter);\n  const kind = eventsFilterOptions[option].sort?.kind;\n  const field = eventsFilterOptions[option].sort?.field;\n\n  const query: {showTransactions: string; sort?: string} = {\n    showTransactions: option,\n  };\n  if (kind && field) {\n    query.sort = `${kind === 'desc' ? '-' : ''}${field}`;\n  }\n  return query;\n}\n\nexport function mapShowTransactionToPercentile(\n  showTransaction\n): EventsDisplayFilterName | undefined {\n  switch (showTransaction) {\n    case TransactionFilterOptions.OUTLIER:\n      return EventsDisplayFilterName.p100;\n    case TransactionFilterOptions.SLOW:\n      return EventsDisplayFilterName.p95;\n    default:\n      return undefined;\n  }\n}\n","import styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport Count from 'sentry/components/count';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport Duration from 'sentry/components/duration';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport {RadioLineItem} from 'sentry/components/forms/controls/radioGroup';\nimport IdBadge from 'sentry/components/idBadge';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport MenuItem from 'sentry/components/menuItem';\nimport Pagination, {CursorHandler} from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport Radio from 'sentry/components/radio';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconArrow, IconEllipsis} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AvatarProject, Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {formatPercentage, getDuration} from 'sentry/utils/formatters';\nimport TrendsDiscoverQuery from 'sentry/utils/performance/trends/trendsDiscoverQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useApi from 'sentry/utils/useApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport {DisplayModes} from '../transactionSummary/transactionOverview/charts';\nimport {transactionSummaryRouteWithQuery} from '../transactionSummary/utils';\n\nimport Chart from './chart';\nimport {\n  NormalizedTrendsTransaction,\n  TrendChangeType,\n  TrendColumnField,\n  TrendFunctionField,\n  TrendsStats,\n  TrendView,\n} from './types';\nimport {\n  getCurrentTrendFunction,\n  getCurrentTrendParameter,\n  getSelectedQueryKey,\n  getTrendProjectId,\n  modifyTrendView,\n  normalizeTrends,\n  transformDeltaSpread,\n  transformValueDelta,\n  trendCursorNames,\n  trendToColor,\n} from './utils';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  setError: (msg: string | undefined) => void;\n  trendChangeType: TrendChangeType;\n  trendView: TrendView;\n  previousTrendColumn?: TrendColumnField;\n  previousTrendFunction?: TrendFunctionField;\n};\n\ntype TrendsCursorQuery = {\n  improvedCursor?: string;\n  regressionCursor?: string;\n};\n\nconst makeTrendsCursorHandler =\n  (trendChangeType: TrendChangeType): CursorHandler =>\n  (cursor, path, query) => {\n    const cursorQuery = {} as TrendsCursorQuery;\n    if (trendChangeType === TrendChangeType.IMPROVED) {\n      cursorQuery.improvedCursor = cursor;\n    } else if (trendChangeType === TrendChangeType.REGRESSION) {\n      cursorQuery.regressionCursor = cursor;\n    }\n\n    const selectedQueryKey = getSelectedQueryKey(trendChangeType);\n    delete query[selectedQueryKey];\n\n    browserHistory.push({\n      pathname: path,\n      query: {...query, ...cursorQuery},\n    });\n  };\n\nfunction getChartTitle(trendChangeType: TrendChangeType): string {\n  switch (trendChangeType) {\n    case TrendChangeType.IMPROVED:\n      return t('Most Improved Transactions');\n    case TrendChangeType.REGRESSION:\n      return t('Most Regressed Transactions');\n    default:\n      throw new Error('No trend type passed');\n  }\n}\n\nfunction getSelectedTransaction(\n  location: Location,\n  trendChangeType: TrendChangeType,\n  transactions?: NormalizedTrendsTransaction[]\n): NormalizedTrendsTransaction | undefined {\n  const queryKey = getSelectedQueryKey(trendChangeType);\n  const selectedTransactionName = decodeScalar(location.query[queryKey]);\n\n  if (!transactions) {\n    return undefined;\n  }\n\n  const selectedTransaction = transactions.find(\n    transaction =>\n      `${transaction.transaction}-${transaction.project}` === selectedTransactionName\n  );\n\n  if (selectedTransaction) {\n    return selectedTransaction;\n  }\n\n  return transactions.length > 0 ? transactions[0] : undefined;\n}\n\nfunction handleChangeSelected(\n  location: Location,\n  organization: Organization,\n  trendChangeType: TrendChangeType\n) {\n  return function updateSelected(transaction?: NormalizedTrendsTransaction) {\n    const selectedQueryKey = getSelectedQueryKey(trendChangeType);\n    const query = {\n      ...location.query,\n    };\n    if (!transaction) {\n      delete query[selectedQueryKey];\n    } else {\n      query[selectedQueryKey] = transaction\n        ? `${transaction.transaction}-${transaction.project}`\n        : undefined;\n    }\n    browserHistory.push({\n      pathname: location.pathname,\n      query,\n    });\n\n    trackAdvancedAnalyticsEvent('performance_views.trends.widget_interaction', {\n      organization,\n      widget_type: trendChangeType,\n    });\n  };\n}\n\nenum FilterSymbols {\n  GREATER_THAN_EQUALS = '>=',\n  LESS_THAN_EQUALS = '<=',\n}\n\nfunction handleFilterTransaction(location: Location, transaction: string) {\n  const queryString = decodeScalar(location.query.query);\n  const conditions = new MutableSearch(queryString ?? '');\n\n  conditions.addFilterValues('!transaction', [transaction]);\n\n  const query = conditions.formatString();\n\n  browserHistory.push({\n    pathname: location.pathname,\n    query: {\n      ...location.query,\n      query: String(query).trim(),\n    },\n  });\n}\n\nfunction handleFilterDuration(\n  location: Location,\n  organization: Organization,\n  value: number,\n  symbol: FilterSymbols,\n  trendChangeType: TrendChangeType,\n  projects: Project[],\n  projectIds: Readonly<number[]>\n) {\n  const durationTag = getCurrentTrendParameter(location, projects, projectIds).column;\n  const queryString = decodeScalar(location.query.query);\n  const conditions = new MutableSearch(queryString ?? '');\n\n  const existingValues = conditions.getFilterValues(durationTag);\n  const alternateSymbol = symbol === FilterSymbols.GREATER_THAN_EQUALS ? '>' : '<';\n\n  if (existingValues) {\n    existingValues.forEach(existingValue => {\n      if (existingValue.startsWith(symbol) || existingValue.startsWith(alternateSymbol)) {\n        conditions.removeFilterValue(durationTag, existingValue);\n      }\n    });\n  }\n\n  conditions.addFilterValues(durationTag, [`${symbol}${value}`]);\n\n  const query = conditions.formatString();\n\n  browserHistory.push({\n    pathname: location.pathname,\n    query: {\n      ...location.query,\n      query: String(query).trim(),\n    },\n  });\n\n  trackAdvancedAnalyticsEvent('performance_views.trends.change_duration', {\n    organization,\n    widget_type: getChartTitle(trendChangeType),\n    value: `${symbol}${value}`,\n  });\n}\n\nfunction ChangedTransactions(props: Props) {\n  const {\n    location,\n    trendChangeType,\n    previousTrendFunction,\n    previousTrendColumn,\n    organization,\n    projects,\n    setError,\n  } = props;\n  const api = useApi();\n\n  const trendView = props.trendView.clone();\n  const chartTitle = getChartTitle(trendChangeType);\n  modifyTrendView(trendView, location, trendChangeType, projects);\n\n  const onCursor = makeTrendsCursorHandler(trendChangeType);\n  const cursor = decodeScalar(location.query[trendCursorNames[trendChangeType]]);\n  const paginationAnalyticsEvent = (direction: string) => {\n    trackAdvancedAnalyticsEvent('performance_views.trends.widget_pagination', {\n      organization,\n      direction,\n      widget_type: getChartTitle(trendChangeType),\n    });\n  };\n\n  return (\n    <TrendsDiscoverQuery\n      eventView={trendView}\n      orgSlug={organization.slug}\n      location={location}\n      trendChangeType={trendChangeType}\n      cursor={cursor}\n      limit={5}\n      setError={error => setError(error?.message)}\n    >\n      {({isLoading, trendsData, pageLinks}) => {\n        const trendFunction = getCurrentTrendFunction(location);\n        const trendParameter = getCurrentTrendParameter(\n          location,\n          projects,\n          trendView.project\n        );\n        const events = normalizeTrends(\n          (trendsData && trendsData.events && trendsData.events.data) || []\n        );\n        const selectedTransaction = getSelectedTransaction(\n          location,\n          trendChangeType,\n          events\n        );\n\n        const statsData = trendsData?.stats || {};\n        const transactionsList = events && events.slice ? events.slice(0, 5) : [];\n\n        const currentTrendFunction =\n          isLoading && previousTrendFunction\n            ? previousTrendFunction\n            : trendFunction.field;\n\n        const currentTrendColumn =\n          isLoading && previousTrendColumn ? previousTrendColumn : trendParameter.column;\n\n        const titleTooltipContent = t(\n          'This compares the baseline (%s) of the past with the present.',\n          trendFunction.legendLabel\n        );\n\n        return (\n          <TransactionsListContainer data-test-id=\"changed-transactions\">\n            <TrendsTransactionPanel>\n              <StyledHeaderTitleLegend>\n                {chartTitle}\n                <QuestionTooltip size=\"sm\" position=\"top\" title={titleTooltipContent} />\n              </StyledHeaderTitleLegend>\n              {isLoading ? (\n                <LoadingIndicator\n                  style={{\n                    margin: '237px auto',\n                  }}\n                />\n              ) : (\n                <Fragment>\n                  {transactionsList.length ? (\n                    <Fragment>\n                      <ChartContainer>\n                        <Chart\n                          statsData={statsData}\n                          query={trendView.query}\n                          project={trendView.project}\n                          environment={trendView.environment}\n                          start={trendView.start}\n                          end={trendView.end}\n                          statsPeriod={trendView.statsPeriod}\n                          transaction={selectedTransaction}\n                          isLoading={isLoading}\n                          {...props}\n                        />\n                      </ChartContainer>\n                      {transactionsList.map((transaction, index) => (\n                        <TrendsListItem\n                          api={api}\n                          currentTrendFunction={currentTrendFunction}\n                          currentTrendColumn={currentTrendColumn}\n                          trendView={props.trendView}\n                          organization={organization}\n                          transaction={transaction}\n                          key={transaction.transaction}\n                          index={index}\n                          trendChangeType={trendChangeType}\n                          transactions={transactionsList}\n                          location={location}\n                          projects={projects}\n                          statsData={statsData}\n                          handleSelectTransaction={handleChangeSelected(\n                            location,\n                            organization,\n                            trendChangeType\n                          )}\n                        />\n                      ))}\n                    </Fragment>\n                  ) : (\n                    <StyledEmptyStateWarning small>\n                      {t('No results')}\n                    </StyledEmptyStateWarning>\n                  )}\n                </Fragment>\n              )}\n            </TrendsTransactionPanel>\n            <Pagination\n              pageLinks={pageLinks}\n              onCursor={onCursor}\n              paginationAnalyticsEvent={paginationAnalyticsEvent}\n            />\n          </TransactionsListContainer>\n        );\n      }}\n    </TrendsDiscoverQuery>\n  );\n}\n\ntype TrendsListItemProps = {\n  api: Client;\n  currentTrendColumn: string;\n  currentTrendFunction: string;\n  handleSelectTransaction: (transaction: NormalizedTrendsTransaction) => void;\n  index: number;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  statsData: TrendsStats;\n  transaction: NormalizedTrendsTransaction;\n  transactions: NormalizedTrendsTransaction[];\n  trendChangeType: TrendChangeType;\n  trendView: TrendView;\n};\n\nfunction TrendsListItem(props: TrendsListItemProps) {\n  const {\n    transaction,\n    transactions,\n    trendChangeType,\n    currentTrendFunction,\n    currentTrendColumn,\n    index,\n    location,\n    organization,\n    projects,\n    handleSelectTransaction,\n    trendView,\n  } = props;\n  const color = trendToColor[trendChangeType].default;\n\n  const selectedTransaction = getSelectedTransaction(\n    location,\n    trendChangeType,\n    transactions\n  );\n  const isSelected = selectedTransaction === transaction;\n\n  const project = projects.find(\n    ({slug}) => slug === transaction.project\n  ) as AvatarProject;\n\n  const currentPeriodValue = transaction.aggregate_range_2;\n  const previousPeriodValue = transaction.aggregate_range_1;\n\n  const absolutePercentChange = formatPercentage(\n    Math.abs(transaction.trend_percentage - 1),\n    0\n  );\n\n  const previousDuration = getDuration(\n    previousPeriodValue / 1000,\n    previousPeriodValue < 1000 && previousPeriodValue > 10 ? 0 : 2\n  );\n  const currentDuration = getDuration(\n    currentPeriodValue / 1000,\n    currentPeriodValue < 1000 && currentPeriodValue > 10 ? 0 : 2\n  );\n\n  const percentChangeExplanation = t(\n    'Over this period, the %s for %s has %s %s from %s to %s',\n    currentTrendFunction,\n    currentTrendColumn,\n    trendChangeType === TrendChangeType.IMPROVED ? t('decreased') : t('increased'),\n    absolutePercentChange,\n    previousDuration,\n    currentDuration\n  );\n\n  const longestPeriodValue =\n    trendChangeType === TrendChangeType.IMPROVED\n      ? previousPeriodValue\n      : currentPeriodValue;\n  const longestDuration =\n    trendChangeType === TrendChangeType.IMPROVED ? previousDuration : currentDuration;\n\n  return (\n    <ListItemContainer data-test-id={'trends-list-item-' + trendChangeType}>\n      <ItemRadioContainer color={color}>\n        <Tooltip\n          title={\n            <TooltipContent>\n              <span>{t('Total Events')}</span>\n              <span>\n                <Count value={transaction.count_range_1} />\n                <StyledIconArrow direction=\"right\" size=\"xs\" />\n                <Count value={transaction.count_range_2} />\n              </span>\n            </TooltipContent>\n          }\n          disableForVisualTest // Disabled tooltip in snapshots because of overlap order issues.\n        >\n          <RadioLineItem index={index} role=\"radio\">\n            <Radio\n              checked={isSelected}\n              onChange={() => handleSelectTransaction(transaction)}\n            />\n          </RadioLineItem>\n        </Tooltip>\n      </ItemRadioContainer>\n      <TransactionSummaryLink {...props} />\n      <ItemTransactionPercentage>\n        <Tooltip title={percentChangeExplanation}>\n          <Fragment>\n            {trendChangeType === TrendChangeType.REGRESSION ? '+' : ''}\n            {formatPercentage(transaction.trend_percentage - 1, 0)}\n          </Fragment>\n        </Tooltip>\n      </ItemTransactionPercentage>\n      <DropdownLink\n        caret={false}\n        anchorRight\n        title={\n          <StyledButton\n            size=\"xs\"\n            icon={<IconEllipsis data-test-id=\"trends-item-action\" size=\"xs\" />}\n            aria-label={t('Actions')}\n          />\n        }\n      >\n        <MenuItem\n          onClick={() =>\n            handleFilterDuration(\n              location,\n              organization,\n              longestPeriodValue,\n              FilterSymbols.LESS_THAN_EQUALS,\n              trendChangeType,\n              projects,\n              trendView.project\n            )\n          }\n        >\n          <MenuAction>{t('Show \\u2264 %s', longestDuration)}</MenuAction>\n        </MenuItem>\n        <MenuItem\n          onClick={() =>\n            handleFilterDuration(\n              location,\n              organization,\n              longestPeriodValue,\n              FilterSymbols.GREATER_THAN_EQUALS,\n              trendChangeType,\n              projects,\n              trendView.project\n            )\n          }\n        >\n          <MenuAction>{t('Show \\u2265 %s', longestDuration)}</MenuAction>\n        </MenuItem>\n        <MenuItem\n          onClick={() => handleFilterTransaction(location, transaction.transaction)}\n        >\n          <MenuAction>{t('Hide from list')}</MenuAction>\n        </MenuItem>\n      </DropdownLink>\n      <ItemTransactionDurationChange>\n        {project && (\n          <Tooltip title={transaction.project}>\n            <IdBadge avatarSize={16} project={project} hideName />\n          </Tooltip>\n        )}\n        <CompareDurations {...props} />\n      </ItemTransactionDurationChange>\n      <ItemTransactionStatus color={color}>\n        <ValueDelta {...props} />\n      </ItemTransactionStatus>\n    </ListItemContainer>\n  );\n}\n\nexport const CompareDurations = ({\n  transaction,\n}: {\n  transaction: TrendsListItemProps['transaction'];\n}) => {\n  const {fromSeconds, toSeconds, showDigits} = transformDeltaSpread(\n    transaction.aggregate_range_1,\n    transaction.aggregate_range_2\n  );\n\n  return (\n    <DurationChange>\n      <Duration seconds={fromSeconds} fixedDigits={showDigits ? 1 : 0} abbreviation />\n      <StyledIconArrow direction=\"right\" size=\"xs\" />\n      <Duration seconds={toSeconds} fixedDigits={showDigits ? 1 : 0} abbreviation />\n    </DurationChange>\n  );\n};\n\nconst ValueDelta = ({transaction, trendChangeType}: TrendsListItemProps) => {\n  const {seconds, fixedDigits, changeLabel} = transformValueDelta(\n    transaction.trend_difference,\n    trendChangeType\n  );\n\n  return (\n    <span>\n      <Duration seconds={seconds} fixedDigits={fixedDigits} abbreviation /> {changeLabel}\n    </span>\n  );\n};\n\ntype TransactionSummaryLinkProps = TrendsListItemProps & {};\n\nconst TransactionSummaryLink = (props: TransactionSummaryLinkProps) => {\n  const {\n    organization,\n    trendView: eventView,\n    transaction,\n    projects,\n    currentTrendFunction,\n    currentTrendColumn,\n  } = props;\n  const summaryView = eventView.clone();\n  const projectID = getTrendProjectId(transaction, projects);\n  const target = transactionSummaryRouteWithQuery({\n    orgSlug: organization.slug,\n    transaction: String(transaction.transaction),\n    query: summaryView.generateQueryStringObject(),\n    projectID,\n    display: DisplayModes.TREND,\n    trendFunction: currentTrendFunction,\n    trendColumn: currentTrendColumn,\n  });\n\n  return (\n    <ItemTransactionName to={target} data-test-id=\"item-transaction-name\">\n      {transaction.transaction}\n    </ItemTransactionName>\n  );\n};\n\nconst TransactionsListContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TrendsTransactionPanel = styled(Panel)`\n  margin: 0;\n  flex-grow: 1;\n`;\n\nconst ChartContainer = styled('div')`\n  padding: ${space(3)};\n`;\n\nconst StyledHeaderTitleLegend = styled(HeaderTitleLegend)`\n  border-radius: ${p => p.theme.borderRadius};\n  margin: ${space(2)} ${space(3)};\n`;\n\nconst StyledButton = styled(Button)`\n  vertical-align: middle;\n`;\n\nconst MenuAction = styled('div')<{['data-test-id']?: string}>`\n  white-space: nowrap;\n  color: ${p => p.theme.textColor};\n`;\n\nMenuAction.defaultProps = {\n  'data-test-id': 'menu-action',\n};\n\nconst StyledEmptyStateWarning = styled(EmptyStateWarning)`\n  min-height: 300px;\n  justify-content: center;\n`;\n\nconst ListItemContainer = styled('div')`\n  display: grid;\n  grid-template-columns: 24px auto 100px 30px;\n  grid-template-rows: repeat(2, auto);\n  grid-column-gap: ${space(1)};\n  border-top: 1px solid ${p => p.theme.border};\n  padding: ${space(1)} ${space(2)};\n`;\n\nconst ItemRadioContainer = styled('div')`\n  grid-row: 1/3;\n  input {\n    cursor: pointer;\n  }\n  input:checked::after {\n    background-color: ${p => p.color};\n  }\n`;\n\nconst ItemTransactionName = styled(Link)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(1)};\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst ItemTransactionDurationChange = styled('div')`\n  display: flex;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst DurationChange = styled('span')`\n  color: ${p => p.theme.gray300};\n  margin: 0 ${space(1)};\n`;\n\nconst ItemTransactionPercentage = styled('div')`\n  text-align: right;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ItemTransactionStatus = styled('div')`\n  color: ${p => p.color};\n  text-align: right;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst TooltipContent = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  margin: 0 ${space(1)};\n`;\n\nexport default withProjects(withOrganization(ChangedTransactions));\n","// eslint-disable-next-line no-restricted-imports\nimport {browserHistory, withRouter, WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport type {LegendComponentOption} from 'echarts';\n\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport {\n  LineChart,\n  LineChartProps,\n  LineChartSeries,\n} from 'sentry/components/charts/lineChart';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {EventsStatsData, OrganizationSummary, Project} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {\n  axisLabelFormatter,\n  getDurationUnit,\n  tooltipFormatter,\n} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {Theme} from 'sentry/utils/theme';\n\nimport {ViewProps} from '../types';\n\nimport {\n  NormalizedTrendsTransaction,\n  TrendChangeType,\n  TrendFunctionField,\n  TrendsStats,\n} from './types';\nimport {\n  generateTrendFunctionAsString,\n  getCurrentTrendFunction,\n  getCurrentTrendParameter,\n  getUnselectedSeries,\n  transformEventStatsSmoothed,\n  trendToColor,\n} from './utils';\n\ntype Props = WithRouterProps &\n  ViewProps & {\n    isLoading: boolean;\n    location: Location;\n    organization: OrganizationSummary;\n    projects: Project[];\n    statsData: TrendsStats;\n    trendChangeType: TrendChangeType;\n    disableLegend?: boolean;\n    disableXAxis?: boolean;\n    grid?: LineChartProps['grid'];\n    height?: number;\n    transaction?: NormalizedTrendsTransaction;\n    trendFunctionField?: TrendFunctionField;\n  };\n\nfunction transformEventStats(data: EventsStatsData, seriesName?: string): Series[] {\n  return [\n    {\n      seriesName: seriesName || 'Current',\n      data: data.map(([timestamp, countsForTimestamp]) => ({\n        name: timestamp * 1000,\n        value: countsForTimestamp.reduce((acc, {count}) => acc + count, 0),\n      })),\n    },\n  ];\n}\n\nfunction getLegend(trendFunction: string): LegendComponentOption {\n  return {\n    right: 10,\n    top: 0,\n    itemGap: 12,\n    align: 'left',\n    data: [\n      {\n        name: 'Baseline',\n        icon: 'path://M180 1000 l0 -40 200 0 200 0 0 40 0 40 -200 0 -200 0 0 -40z, M810 1000 l0 -40 200 0 200 0 0 40 0 40 -200 0 -200 0 0 -40zm, M1440 1000 l0 -40 200 0 200 0 0 40 0 40 -200 0 -200 0 0 -40z',\n      },\n      {\n        name: 'Releases',\n      },\n      {\n        name: trendFunction,\n      },\n    ],\n  };\n}\n\nfunction getIntervalLine(\n  theme: Theme,\n  series: Series[],\n  intervalRatio: number,\n  transaction?: NormalizedTrendsTransaction\n): LineChartSeries[] {\n  if (!transaction || !series.length || !series[0].data || !series[0].data.length) {\n    return [];\n  }\n\n  const seriesStart = parseInt(series[0].data[0].name as string, 10);\n  const seriesEnd = parseInt(series[0].data.slice(-1)[0].name as string, 10);\n\n  if (seriesEnd < seriesStart) {\n    return [];\n  }\n\n  const periodLine: LineChartSeries = {\n    data: [],\n    color: theme.textColor,\n    markLine: {\n      data: [],\n      label: {},\n      lineStyle: {\n        color: theme.textColor,\n        type: 'dashed',\n        width: 1,\n      },\n      symbol: ['none', 'none'],\n      tooltip: {\n        show: false,\n      },\n    },\n    seriesName: 'Baseline',\n  };\n\n  const periodLineLabel = {\n    fontSize: 11,\n    show: true,\n    color: theme.textColor,\n    silent: true,\n  };\n\n  const previousPeriod = {\n    ...periodLine,\n    markLine: {...periodLine.markLine},\n    seriesName: 'Baseline',\n  };\n  const currentPeriod = {\n    ...periodLine,\n    markLine: {...periodLine.markLine},\n    seriesName: 'Baseline',\n  };\n  const periodDividingLine = {\n    ...periodLine,\n    markLine: {...periodLine.markLine},\n    seriesName: 'Period split',\n  };\n\n  const seriesDiff = seriesEnd - seriesStart;\n  const seriesLine = seriesDiff * intervalRatio + seriesStart;\n\n  previousPeriod.markLine.data = [\n    [\n      {value: 'Past', coord: [seriesStart, transaction.aggregate_range_1]},\n      {coord: [seriesLine, transaction.aggregate_range_1]},\n    ],\n  ];\n  previousPeriod.markLine.tooltip = {\n    formatter: () => {\n      return [\n        '<div class=\"tooltip-series tooltip-series-solo\">',\n        '<div>',\n        `<span class=\"tooltip-label\"><strong>${t('Past Baseline')}</strong></span>`,\n        // p50() coerces the axis to be time based\n        tooltipFormatter(transaction.aggregate_range_1, 'duration'),\n        '</div>',\n        '</div>',\n        '<div class=\"tooltip-arrow\"></div>',\n      ].join('');\n    },\n  };\n  currentPeriod.markLine.data = [\n    [\n      {value: 'Present', coord: [seriesLine, transaction.aggregate_range_2]},\n      {coord: [seriesEnd, transaction.aggregate_range_2]},\n    ],\n  ];\n  currentPeriod.markLine.tooltip = {\n    formatter: () => {\n      return [\n        '<div class=\"tooltip-series tooltip-series-solo\">',\n        '<div>',\n        `<span class=\"tooltip-label\"><strong>${t('Present Baseline')}</strong></span>`,\n        // p50() coerces the axis to be time based\n        tooltipFormatter(transaction.aggregate_range_2, 'duration'),\n        '</div>',\n        '</div>',\n        '<div class=\"tooltip-arrow\"></div>',\n      ].join('');\n    },\n  };\n  periodDividingLine.markLine = {\n    data: [\n      {\n        xAxis: seriesLine,\n      },\n    ],\n    label: {show: false},\n    lineStyle: {\n      color: theme.textColor,\n      type: 'solid',\n      width: 2,\n    },\n    symbol: ['none', 'none'],\n    tooltip: {\n      show: false,\n    },\n    silent: true,\n  };\n\n  previousPeriod.markLine.label = {\n    ...periodLineLabel,\n    formatter: 'Past',\n    position: 'insideStartBottom',\n  };\n  currentPeriod.markLine.label = {\n    ...periodLineLabel,\n    formatter: 'Present',\n    position: 'insideEndBottom',\n  };\n\n  const additionalLineSeries = [previousPeriod, currentPeriod, periodDividingLine];\n  return additionalLineSeries;\n}\n\nexport function Chart({\n  trendChangeType,\n  router,\n  statsPeriod,\n  transaction,\n  statsData,\n  isLoading,\n  location,\n  start: propsStart,\n  end: propsEnd,\n  trendFunctionField,\n  disableXAxis,\n  disableLegend,\n  grid,\n  height,\n  projects,\n  project,\n}: Props) {\n  const theme = useTheme();\n\n  const handleLegendSelectChanged = legendChange => {\n    const {selected} = legendChange;\n    const unselected = Object.keys(selected).filter(key => !selected[key]);\n\n    const query = {\n      ...location.query,\n    };\n\n    const queryKey = getUnselectedSeries(trendChangeType);\n    query[queryKey] = unselected;\n\n    const to = {\n      ...location,\n      query,\n    };\n    browserHistory.push(to);\n  };\n\n  const lineColor = trendToColor[trendChangeType || ''];\n\n  const events =\n    statsData && transaction?.project && transaction?.transaction\n      ? statsData[[transaction.project, transaction.transaction].join(',')]\n      : undefined;\n  const data = events?.data ?? [];\n\n  const trendFunction = getCurrentTrendFunction(location, trendFunctionField);\n  const trendParameter = getCurrentTrendParameter(location, projects, project);\n  const chartLabel = generateTrendFunctionAsString(\n    trendFunction.field,\n    trendParameter.column\n  );\n  const results = transformEventStats(data, chartLabel);\n  const {smoothedResults, minValue, maxValue} = transformEventStatsSmoothed(\n    results,\n    chartLabel\n  );\n\n  const start = propsStart ? getUtcToLocalDateObject(propsStart) : null;\n  const end = propsEnd ? getUtcToLocalDateObject(propsEnd) : null;\n  const {utc} = normalizeDateTimeParams(location.query);\n\n  const seriesSelection = decodeList(\n    location.query[getUnselectedSeries(trendChangeType)]\n  ).reduce((selection, metric) => {\n    selection[metric] = false;\n    return selection;\n  }, {});\n  const legend: LegendComponentOption = disableLegend\n    ? {show: false}\n    : {\n        ...getLegend(chartLabel),\n        selected: seriesSelection,\n      };\n\n  const loading = isLoading;\n  const reloading = isLoading;\n\n  const yMax = Math.max(\n    maxValue,\n    transaction?.aggregate_range_2 || 0,\n    transaction?.aggregate_range_1 || 0\n  );\n  const yMin = Math.min(\n    minValue,\n    transaction?.aggregate_range_1 || Number.MAX_SAFE_INTEGER,\n    transaction?.aggregate_range_2 || Number.MAX_SAFE_INTEGER\n  );\n\n  const smoothedSeries = smoothedResults\n    ? smoothedResults.map(values => {\n        return {\n          ...values,\n          color: lineColor.default,\n          lineStyle: {\n            opacity: 1,\n          },\n        };\n      })\n    : [];\n\n  const intervalSeries = getIntervalLine(theme, smoothedResults || [], 0.5, transaction);\n\n  const yDiff = yMax - yMin;\n  const yMargin = yDiff * 0.1;\n  const series = [...smoothedSeries, ...intervalSeries];\n\n  const durationUnit = getDurationUnit(series);\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    tooltip: {\n      valueFormatter: (value, seriesName) => {\n        return tooltipFormatter(value, aggregateOutputType(seriesName));\n      },\n    },\n    yAxis: {\n      min: Math.max(0, yMin - yMargin),\n      max: yMax + yMargin,\n      minInterval: durationUnit,\n      axisLabel: {\n        color: theme.chartLabel,\n        formatter: (value: number) =>\n          axisLabelFormatter(value, 'duration', undefined, durationUnit),\n      },\n    },\n  };\n\n  return (\n    <ChartZoom\n      router={router}\n      period={statsPeriod}\n      start={start}\n      end={end}\n      utc={utc === 'true'}\n    >\n      {zoomRenderProps => {\n        return (\n          <TransitionChart loading={loading} reloading={reloading}>\n            <TransparentLoadingMask visible={reloading} />\n            {getDynamicText({\n              value: (\n                <LineChart\n                  height={height}\n                  {...zoomRenderProps}\n                  {...chartOptions}\n                  onLegendSelectChanged={handleLegendSelectChanged}\n                  series={series}\n                  seriesOptions={{\n                    showSymbol: false,\n                  }}\n                  legend={legend}\n                  toolBox={{\n                    show: false,\n                  }}\n                  grid={\n                    grid ?? {\n                      left: '10px',\n                      right: '10px',\n                      top: '40px',\n                      bottom: '0px',\n                    }\n                  }\n                  xAxis={disableXAxis ? {show: false} : undefined}\n                />\n              ),\n              fixed: 'Duration Chart',\n            })}\n          </TransitionChart>\n        );\n      }}\n    </ChartZoom>\n  );\n}\n\nexport default withRouter(Chart);\n"],"names":["getDuration","getBucketWidth","data","length","bin","computeBuckets","width","map","item","bucket","start","end","formatHistogramData","precision","type","additionalFieldsFn","formatter","value","decimalPlaces","factor","Math","round","Number","EPSILON","toLocaleString","Error","count","name","spanTargetHash","defined","getTransactionDetailsUrl","orgSlug","eventSlug","transaction","query","spanId","locationQuery","target","pathname","hash","undefined","t","decodeScalar","filterToField","TransactionFilterOptions","EventsDisplayFilterName","getEventsFilterOptions","spanOperationBreakdownFilter","percentileValues","p99","p95","p75","p50","toFixed","sort","kind","field","label","p100","eventsRouteWithQuery","projectID","project","environment","statsPeriod","stringToFilter","option","Object","values","includes","decodeEventsDisplayFilterFromLocation","location","showTransactions","filterEventsDisplayToLocationQuery","eventsFilterOptions","mapShowTransactionToPercentile","showTransaction","OUTLIER","SLOW","space","generateEventSlug","MutableSearch","getTraceDetailsUrl","generateTransactionSummaryRoute","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","transactionSummaryRouteWithQuery","unselectedSeries","display","trendFunction","trendColumn","additionalQuery","searchFilter","formatString","generateTraceLink","dateSelection","organization","tableRow","_query","traceId","trace","generateTransactionLink","transactionName","slug","SidebarSpacer","Fragment","browserHistory","Button","HeaderTitleLegend","Count","DropdownLink","Duration","EmptyStateWarning","RadioLineItem","IdBadge","Link","LoadingIndicator","MenuItem","Pagination","Panel","QuestionTooltip","Radio","Tooltip","IconArrow","IconEllipsis","trackAdvancedAnalyticsEvent","formatPercentage","TrendsDiscoverQuery","useApi","withOrganization","withProjects","DisplayModes","Chart","TrendChangeType","getCurrentTrendFunction","getCurrentTrendParameter","getSelectedQueryKey","getTrendProjectId","modifyTrendView","normalizeTrends","transformDeltaSpread","transformValueDelta","trendCursorNames","trendToColor","makeTrendsCursorHandler","trendChangeType","cursor","path","cursorQuery","IMPROVED","improvedCursor","REGRESSION","regressionCursor","selectedQueryKey","push","getChartTitle","getSelectedTransaction","transactions","queryKey","selectedTransactionName","selectedTransaction","find","handleChangeSelected","updateSelected","widget_type","FilterSymbols","handleFilterTransaction","queryString","conditions","addFilterValues","String","trim","handleFilterDuration","symbol","projects","projectIds","durationTag","column","existingValues","getFilterValues","alternateSymbol","GREATER_THAN_EQUALS","forEach","existingValue","startsWith","removeFilterValue","ChangedTransactions","props","previousTrendFunction","previousTrendColumn","setError","api","trendView","clone","chartTitle","onCursor","paginationAnalyticsEvent","direction","error","message","isLoading","trendsData","pageLinks","trendParameter","events","statsData","stats","transactionsList","slice","currentTrendFunction","currentTrendColumn","titleTooltipContent","legendLabel","margin","index","TrendsListItem","handleSelectTransaction","color","default","isSelected","currentPeriodValue","aggregate_range_2","previousPeriodValue","aggregate_range_1","absolutePercentChange","abs","trend_percentage","previousDuration","currentDuration","percentChangeExplanation","longestPeriodValue","longestDuration","count_range_1","count_range_2","LESS_THAN_EQUALS","CompareDurations","fromSeconds","toSeconds","showDigits","ValueDelta","seconds","fixedDigits","changeLabel","trend_difference","TransactionSummaryLink","eventView","summaryView","generateQueryStringObject","TREND","TransactionsListContainer","TrendsTransactionPanel","ChartContainer","StyledHeaderTitleLegend","p","theme","borderRadius","StyledButton","MenuAction","textColor","defaultProps","StyledEmptyStateWarning","ListItemContainer","border","ItemRadioContainer","ItemTransactionName","fontSizeMedium","overflowEllipsis","ItemTransactionDurationChange","fontSizeSmall","DurationChange","gray300","ItemTransactionPercentage","ItemTransactionStatus","TooltipContent","StyledIconArrow","withRouter","useTheme","ChartZoom","LineChart","TransitionChart","TransparentLoadingMask","normalizeDateTimeParams","getUtcToLocalDateObject","axisLabelFormatter","getDurationUnit","tooltipFormatter","aggregateOutputType","getDynamicText","decodeList","generateTrendFunctionAsString","getUnselectedSeries","transformEventStatsSmoothed","transformEventStats","seriesName","timestamp","countsForTimestamp","reduce","acc","getLegend","right","top","itemGap","align","icon","getIntervalLine","series","intervalRatio","seriesStart","parseInt","seriesEnd","periodLine","markLine","lineStyle","tooltip","show","periodLineLabel","fontSize","silent","previousPeriod","currentPeriod","periodDividingLine","seriesDiff","seriesLine","coord","join","xAxis","position","additionalLineSeries","router","propsStart","propsEnd","trendFunctionField","disableXAxis","disableLegend","grid","height","handleLegendSelectChanged","legendChange","selected","unselected","keys","filter","key","to","lineColor","chartLabel","results","smoothedResults","minValue","maxValue","utc","seriesSelection","selection","metric","legend","loading","reloading","yMax","max","yMin","min","MAX_SAFE_INTEGER","smoothedSeries","opacity","intervalSeries","yDiff","yMargin","durationUnit","chartOptions","valueFormatter","yAxis","minInterval","axisLabel","zoomRenderProps","showSymbol","left","bottom","fixed"],"sourceRoot":""}