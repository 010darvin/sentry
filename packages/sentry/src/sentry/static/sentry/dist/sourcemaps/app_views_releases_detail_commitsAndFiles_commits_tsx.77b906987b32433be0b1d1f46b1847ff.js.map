{"version":3,"file":"chunks/app_views_releases_detail_commitsAndFiles_commits_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/releases/detail/commitsAndFiles/commits.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {Location} from 'history';\n\nimport {CommitRow} from 'sentry/components/commitRow';\nimport {Body, Main} from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Commit, Organization, Project, Repository} from 'sentry/types';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport {getCommitsByRepository, getQuery, getReposToRender} from '../utils';\n\nimport EmptyState from './emptyState';\nimport RepositorySwitcher from './repositorySwitcher';\nimport withReleaseRepos from './withReleaseRepos';\n\ntype Props = RouteComponentProps<{orgId: string; release: string}, {}> & {\n  location: Location;\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  release: string;\n  releaseRepos: Repository[];\n  activeReleaseRepo?: Repository;\n} & AsyncView['props'];\n\ntype State = {\n  commits: Commit[];\n} & AsyncView['state'];\n\nclass Commits extends AsyncView<Props, State> {\n  getTitle() {\n    const {params, projectSlug} = this.props;\n    const {orgId} = params;\n\n    return routeTitleGen(\n      t('Commits - Release %s', formatVersion(params.release)),\n      orgId,\n      false,\n      projectSlug\n    );\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      commits: [],\n    };\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.activeReleaseRepo?.name !== this.props.activeReleaseRepo?.name) {\n      this.remountComponent();\n      return;\n    }\n    super.componentDidUpdate(prevProps, prevState);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {\n      projectSlug,\n      activeReleaseRepo: activeRepository,\n      location,\n      orgSlug,\n      release,\n    } = this.props;\n\n    const query = getQuery({location, activeRepository});\n\n    return [\n      [\n        'commits',\n        `/projects/${orgSlug}/${projectSlug}/releases/${encodeURIComponent(\n          release\n        )}/commits/`,\n        {query},\n      ],\n    ];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderContent() {\n    const {commits, commitsPageLinks, loading} = this.state;\n    const {activeReleaseRepo} = this.props;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!commits.length) {\n      return (\n        <EmptyState>\n          {!activeReleaseRepo\n            ? t('There are no commits associated with this release.')\n            : t(\n                'There are no commits associated with this release in the %s repository.',\n                activeReleaseRepo.name\n              )}\n        </EmptyState>\n      );\n    }\n\n    const commitsByRepository = getCommitsByRepository(commits);\n    const reposToRender = getReposToRender(Object.keys(commitsByRepository));\n\n    return (\n      <Fragment>\n        {reposToRender.map(repoName => (\n          <Panel key={repoName}>\n            <PanelHeader>{repoName}</PanelHeader>\n            <PanelBody>\n              {commitsByRepository[repoName]?.map(commit => (\n                <CommitRow key={commit.id} commit={commit} />\n              ))}\n            </PanelBody>\n          </Panel>\n        ))}\n        <Pagination pageLinks={commitsPageLinks} />\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {location, router, activeReleaseRepo, releaseRepos} = this.props;\n\n    return (\n      <Fragment>\n        {releaseRepos.length > 1 && (\n          <RepositorySwitcher\n            repositories={releaseRepos}\n            activeRepository={activeReleaseRepo}\n            location={location}\n            router={router}\n          />\n        )}\n        {this.renderContent()}\n      </Fragment>\n    );\n  }\n\n  renderComponent() {\n    return (\n      <Body>\n        <Main fullWidth>{super.renderComponent()}</Main>\n      </Body>\n    );\n  }\n}\n\nexport default withReleaseRepos(Commits);\n"],"names":["Fragment","CommitRow","Body","Main","LoadingIndicator","Pagination","Panel","PanelBody","PanelHeader","t","formatVersion","routeTitleGen","AsyncView","getCommitsByRepository","getQuery","getReposToRender","EmptyState","RepositorySwitcher","withReleaseRepos","Commits","getTitle","params","projectSlug","props","orgId","release","getDefaultState","commits","componentDidUpdate","prevProps","prevState","activeReleaseRepo","name","remountComponent","getEndpoints","activeRepository","location","orgSlug","query","encodeURIComponent","renderLoading","renderBody","renderContent","commitsPageLinks","loading","state","length","commitsByRepository","reposToRender","Object","keys","map","repoName","commit","id","router","releaseRepos","renderComponent"],"sourceRoot":""}