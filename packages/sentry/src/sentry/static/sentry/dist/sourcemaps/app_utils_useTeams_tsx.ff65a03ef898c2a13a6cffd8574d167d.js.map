{"version":3,"file":"chunks/app_utils_useTeams_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;;AAOA,MAAMM,UAAU,GAAG,YAId;EAAA,IAHHC,MAGG,uEAHuB,EAGvB;EAAA,IAFHC,IAEG;;EAAA,kCADAC,IACA;IADAA,IACA;EAAA;;EACHL,2EAAc,CAACG,MAAM,CAACC,IAAD,CAAP,EAAe,GAAGC,IAAlB,CAAd;AACD,CAND;AAQA;AACA;AACA;;;AASA;AACO,SAASC,UAAT,CAAoBC,GAApB,EAAiCJ,MAAjC,EAAkDK,OAAlD,EAA4E;EACjFV,2EAAA,CAAqBK,MAAM,CAACO,KAA5B;EACA,OAAOH,GAAG,CAACI,OAAJ,CAAa,UAASR,MAAM,CAACO,KAAM,GAAnC,EAAuC;IAC5CE,OAAO,EAAEC,IAAI,IAAI;MACff,kFAAA,CAA4BK,MAAM,CAACO,KAAnC,EAA0CG,IAA1C;MACAX,UAAU,CAACM,OAAD,EAAU,SAAV,EAAqBK,IAArB,CAAV;IACD,CAJ2C;IAK5CE,KAAK,EAAEA,KAAK,IAAI;MACdjB,gFAAA,CAA0BK,MAAM,CAACO,KAAjC,EAAwCK,KAAxC;MACAb,UAAU,CAACM,OAAD,EAAU,OAAV,EAAmBO,KAAnB,CAAV;IACD;EAR2C,CAAvC,CAAP;AAUD,EAED;;AACO,eAAeE,cAAf,CAA8BV,GAA9B,EAA2CJ,MAA3C,EAA4D;EACjE,MAAMe,KAAK,GAAG,MAAMX,GAAG,CAACY,cAAJ,CAAoB,kBAAiBhB,MAAM,CAACO,KAAM,cAAlD,CAApB;EACAZ,gFAAA,CAA0BoB,KAA1B;AACD;AAEM,SAASG,gBAAT,CACLd,GADK,EAELJ,MAFK,EAGLK,OAHK,EAIL;EACAV,+EAAA,CAAyBK,MAAM,CAACoB,MAAhC;EACA,OAAOhB,GAAG,CAACI,OAAJ,CAAa,UAASR,MAAM,CAACO,KAAM,IAAGP,MAAM,CAACoB,MAAO,GAApD,EAAwD;IAC7DX,OAAO,EAAEC,IAAI,IAAI;MACff,sFAAA,CAAgCK,MAAM,CAACoB,MAAvC,EAA+CV,IAA/C;MACAX,UAAU,CAACM,OAAD,EAAU,SAAV,EAAqBK,IAArB,CAAV;IACD,CAJ4D;IAK7DE,KAAK,EAAEA,KAAK,IAAI;MACdjB,oFAAA,CAA8BK,MAAM,CAACoB,MAArC,EAA6CR,KAA7C;MACAb,UAAU,CAACM,OAAD,EAAU,OAAV,EAAmBO,KAAnB,CAAV;IACD;EAR4D,CAAxD,CAAP;AAUD;AAEM,SAASW,iBAAT,CAA2BH,MAA3B,EAA6DV,IAA7D,EAAyE;EAC9Ef,gFAAA,CAA0ByB,MAA1B,EAAkCV,IAAlC;AACD;AAEM,SAASe,QAAT,CACLrB,GADK,EAELJ,MAFK,EAGLK,OAHK,EAIL;EAAA;;EACA,MAAMqB,QAAQ,GAAI,kBAAiB1B,MAAM,CAACO,KAAM,YAA/B,oBACfP,MAAM,CAAC2B,QADQ,+DACI,IACpB,UAAS3B,MAAM,CAACoB,MAAO,GAFxB;EAGA,MAAMQ,EAAE,GAAG9B,2DAAQ,EAAnB;EAEAH,yEAAA,CAAmBiC,EAAnB,EAAuB5B,MAAM,CAACoB,MAA9B;EAEA,OAAOhB,GAAG,CAACI,OAAJ,CAAYkB,QAAZ,EAAsB;IAC3BI,MAAM,EAAE,MADmB;IAE3BrB,OAAO,EAAEC,IAAI,IAAI;MACff,gFAAA,CAA0BK,MAAM,CAACoB,MAAjC,EAAyCV,IAAzC;MACAX,UAAU,CAACM,OAAD,EAAU,SAAV,EAAqBK,IAArB,CAAV;IACD,CAL0B;IAM3BE,KAAK,EAAEA,KAAK,IAAI;MACdjB,8EAAA,CAAwBiC,EAAxB,EAA4B5B,MAAM,CAACoB,MAAnC,EAA2CR,KAA3C;MACAb,UAAU,CAACM,OAAD,EAAU,OAAV,EAAmBO,KAAnB,CAAV;IACD;EAT0B,CAAtB,CAAP;AAWD;AAEM,SAASoB,SAAT,CACL5B,GADK,EAELJ,MAFK,EAGLK,OAHK,EAIL;EACA,MAAMqB,QAAQ,GAAI,kBAAiB1B,MAAM,CAACO,KAAM,YAC9CP,MAAM,CAAC2B,QAAP,IAAmB,IACpB,UAAS3B,MAAM,CAACoB,MAAO,GAFxB;EAGA,MAAMQ,EAAE,GAAG9B,2DAAQ,EAAnB;EAEAH,yEAAA,CAAmBiC,EAAnB,EAAuB5B,MAAM,CAACoB,MAA9B;EAEA,OAAOhB,GAAG,CAACI,OAAJ,CAAYkB,QAAZ,EAAsB;IAC3BI,MAAM,EAAE,QADmB;IAE3BrB,OAAO,EAAEC,IAAI,IAAI;MACff,gFAAA,CAA0BK,MAAM,CAACoB,MAAjC,EAAyCV,IAAzC;MACAX,UAAU,CAACM,OAAD,EAAU,SAAV,EAAqBK,IAArB,CAAV;IACD,CAL0B;IAM3BE,KAAK,EAAEA,KAAK,IAAI;MACdjB,8EAAA,CAAwBiC,EAAxB,EAA4B5B,MAAM,CAACoB,MAAnC,EAA2CR,KAA3C;MACAb,UAAU,CAACM,OAAD,EAAU,OAAV,EAAmBO,KAAnB,CAAV;IACD;EAT0B,CAAtB,CAAP;AAWD;AAEM,SAASqB,UAAT,CAAoB7B,GAApB,EAAiC8B,IAAjC,EAA2DlC,MAA3D,EAA4E;EACjFL,6EAAA,CAAuBuC,IAAvB;EAEA,OAAO9B,GAAG,CACPY,cADI,CACY,kBAAiBhB,MAAM,CAACO,KAAM,SAD1C,EACoD;IACvDuB,MAAM,EAAE,MAD+C;IAEvDpB,IAAI,EAAEwB;EAFiD,CADpD,EAKJC,IALI,CAMHzB,IAAI,IAAI;IACNf,oFAAA,CAA8Be,IAA9B;IACAhB,kFAAiB,CACfE,kDAAG,CAAC,0DAAD,EAA6D;MAC9DsC,IAAI,EAAG,IAAGxB,IAAI,CAAC2B,IAAK,EAD0C;MAE9DC,YAAY,EAAEtC,MAAM,CAACO;IAFyC,CAA7D,CADY,CAAjB;IAMA,OAAOG,IAAP;EACD,CAfE,EAgBH6B,GAAG,IAAI;IACL5C,kFAAA,CAA4BuC,IAAI,CAACG,IAAjC,EAAuCE,GAAvC;IACA9C,gFAAe,CACbG,kDAAG,CAAC,4DAAD,EAA+D;MAChEsC,IAAI,EAAG,IAAGA,IAAI,CAACG,IAAK,EAD4C;MAEhEC,YAAY,EAAEtC,MAAM,CAACO;IAF2C,CAA/D,CADU,CAAf;IAMA,MAAMgC,GAAN;EACD,CAzBE,CAAP;AA2BD;AAEM,SAASE,UAAT,CAAoBrC,GAApB,EAAiCJ,MAAjC,EAAyD;EAC9DL,6EAAA,CAAuBK,MAAM,CAACoB,MAA9B;EAEA,OAAOhB,GAAG,CACPY,cADI,CACY,UAAShB,MAAM,CAACO,KAAM,IAAGP,MAAM,CAACoB,MAAO,GADnD,EACuD;IAC1DU,MAAM,EAAE;EADkD,CADvD,EAIJK,IAJI,CAKHzB,IAAI,IAAI;IACNf,oFAAA,CAA8BK,MAAM,CAACoB,MAArC,EAA6CV,IAA7C;IACAhB,kFAAiB,CACfE,kDAAG,CAAC,8DAAD,EAAiE;MAClEsC,IAAI,EAAG,IAAGlC,MAAM,CAACoB,MAAO,EAD0C;MAElEkB,YAAY,EAAEtC,MAAM,CAACO;IAF6C,CAAjE,CADY,CAAjB;IAMA,OAAOG,IAAP;EACD,CAdE,EAeH6B,GAAG,IAAI;IACL5C,kFAAA,CAA4BK,MAAM,CAACoB,MAAnC,EAA2CmB,GAA3C;IACA9C,gFAAe,CACbG,kDAAG,CAAC,8DAAD,EAAiE;MAClEsC,IAAI,EAAG,IAAGlC,MAAM,CAACoB,MAAO,EAD0C;MAElEkB,YAAY,EAAEtC,MAAM,CAACO;IAF6C,CAAjE,CADU,CAAf;IAMA,MAAMgC,GAAN;EACD,CAxBE,CAAP;AA0BD;;;;;;;;;;;;;;;;AC1LD;AAEA;AAEA,MAAMO,qBAAqB,GAAG,IAA9B;AAEA;AACA;AACA;AACA;;AACO,SAASC,iBAAT,GAA6B;EAClC,MAAM;IAACC;EAAD,IAAgBH,qEAAA,CAAgB,MAAhB,KAA2B,EAAjD;;EAEA,IAAIG,WAAJ,EAAiB;IACf;AACJ;AACA;AACA;AACA;IACIJ,qDAAA,CAAYE,qBAAZ,EAAmC,MAAnC;;IAEA,IAAIF,qDAAA,CAAYE,qBAAZ,MAAuCK,SAA3C,EAAsD;MACpD,OAAO,IAAP;IACD;EACF;;EAED,OAAO,KAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BD;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;;AA+EA;AACA;AACA;AACA,eAAehD,UAAf,CACEC,GADF,EAEEG,KAFF,EAIE;EAAA,IADA;IAACuD,KAAD;IAAQC,GAAR;IAAaC,MAAb;IAAqBC,KAArB;IAA4BC,UAA5B;IAAwCC;EAAxC,CACA,uEADoE,EACpE;EACA,MAAMC,KAIL,GAAG,EAJJ;;EAMA,IAAIN,KAAK,KAAKX,SAAV,IAAuBW,KAAK,CAACO,MAAN,GAAe,CAA1C,EAA6C;IAC3CD,KAAK,CAACA,KAAN,GAAcN,KAAK,CAACQ,GAAN,CAAUjC,IAAI,IAAK,QAAOA,IAAK,EAA/B,EAAkCkC,IAAlC,CAAuC,GAAvC,CAAd;EACD;;EAED,IAAIR,GAAG,KAAKZ,SAAR,IAAqBY,GAAG,CAACM,MAAJ,GAAa,CAAtC,EAAyC;IACvCD,KAAK,CAACA,KAAN,GAAcL,GAAG,CAACO,GAAJ,CAAQ1C,EAAE,IAAK,MAAKA,EAAG,EAAvB,EAA0B2C,IAA1B,CAA+B,GAA/B,CAAd;EACD;;EAED,IAAIP,MAAJ,EAAY;IAAA;;IACVI,KAAK,CAACA,KAAN,GAAe,GAAD,gBAAGA,KAAK,CAACA,KAAT,uDAAkB,EAAG,IAAGJ,MAAO,EAA/B,CAAiCQ,IAAjC,EAAd;EACD;;EAED,MAAMC,YAAY,GAAGP,UAAU,KAAKF,MAAf,IAA0B,CAACE,UAAD,IAAe,CAACF,MAA/D;;EAEA,IAAIS,YAAY,IAAIN,MAApB,EAA4B;IAC1BC,KAAK,CAACD,MAAN,GAAeA,MAAf;EACD;;EAED,IAAIF,KAAK,KAAKd,SAAd,EAAyB;IACvBiB,KAAK,CAACM,QAAN,GAAiBT,KAAjB;EACD;;EAED,IAAIU,OAAuB,GAAG,KAA9B;EACA,IAAIC,UAAyB,GAAG,IAAhC;EACA,MAAM,CAAClE,IAAD,GAASmE,IAAT,IAAiB,MAAMzE,GAAG,CAACY,cAAJ,CAAoB,kBAAiBT,KAAM,SAA3C,EAAqD;IAChFuE,cAAc,EAAE,IADgE;IAEhFV;EAFgF,CAArD,CAA7B;EAKA,MAAMW,SAAS,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,iBAAN,CAAwB,MAAxB,CAAlB;;EACA,IAAID,SAAJ,EAAe;IAAA;;IACb,MAAME,gBAAgB,GAAGrB,yEAAe,CAACmB,SAAD,CAAxC;IACAJ,OAAO,GAAGM,gBAAH,aAAGA,gBAAH,gDAAGA,gBAAgB,CAAEC,IAArB,0DAAG,sBAAwBC,OAAlC;IACAP,UAAU,GAAGK,gBAAH,aAAGA,gBAAH,iDAAGA,gBAAgB,CAAEC,IAArB,2DAAG,uBAAwBf,MAArC;EACD;;EAED,OAAO;IAACgB,OAAO,EAAEzE,IAAV;IAAgBiE,OAAhB;IAAyBC;EAAzB,CAAP;AACD,EAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,QAAT,GAAuE;EAAA;;EAAA,IAArD;IAACnB,KAAD;IAAQH,KAAR;IAAeC,GAAf;IAAoBsB;EAApB,CAAqD,uEAAJ,EAAI;EACrE,MAAMjF,GAAG,GAAGyD,gEAAM,EAAlB;EACA,MAAM;IAACvB;EAAD,IAAiBqB,4EAAc,CAACF,uEAAD,CAArC;EACA,MAAM6B,KAAK,GAAG3B,4EAAc,CAACD,+DAAD,CAA5B;EAEA,MAAMnD,KAAK,GAAG+B,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAED,IAA5B;EAEA,MAAMkD,UAAU,GAAG,IAAIC,GAAJ,CAAQF,KAAK,CAACvE,KAAN,CAAYuD,GAAZ,CAAgBmB,CAAC,IAAIA,CAAC,CAACpD,IAAvB,CAAR,CAAnB;EACA,MAAMqD,WAAW,oBAAG5B,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAE6B,MAAP,CAActD,IAAI,IAAI,CAACkD,UAAU,CAACK,GAAX,CAAevD,IAAf,CAAvB,CAAH,yDAAmD,EAApE;EACA,MAAMwD,QAAQ,GAAG,IAAIL,GAAJ,CAAQF,KAAK,CAACvE,KAAN,CAAYuD,GAAZ,CAAgBmB,CAAC,IAAIA,CAAC,CAAC7D,EAAvB,CAAR,CAAjB;EACA,MAAMkE,SAAS,kBAAG/B,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAE4B,MAAL,CAAY/D,EAAE,IAAI,CAACiE,QAAQ,CAACD,GAAT,CAAahE,EAAb,CAAnB,CAAH,qDAA2C,EAA1D;EACA,MAAMmE,eAAe,GAAGL,WAAW,CAACrB,MAAZ,GAAqB,CAA7C;EACA,MAAM2B,aAAa,GAAGF,SAAS,CAACzB,MAAV,GAAmB,CAAzC;EACA,MAAM4B,eAAe,GAAGZ,gBAAgB,IAAI,CAACC,KAAK,CAACY,eAAnD,CAbqE,CAerE;EACA;;EACA,MAAMC,eAAe,GAAG,CAACJ,eAAD,IAAoB,CAACE,eAArB,IAAwC,CAACD,aAAjE;EAEA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoB9C,+CAAQ,CAAQ;IACxC4C,eADwC;IAExCG,QAAQ,EAAE,KAF8B;IAGxC3B,OAAO,EAAEW,KAAK,CAACX,OAHyB;IAIxCT,UAAU,EAAE,IAJ4B;IAKxCU,UAAU,EAAEU,KAAK,CAACnB,MALsB;IAMxCoC,UAAU,EAAE;EAN4B,CAAR,CAAlC;EASA,MAAMC,WAAW,GAAGlD,6CAAM,CAAqB,IAArB,CAA1B,CA5BqE,CA8BrE;EACA;;EACA,IAAIQ,KAAK,KAAKX,SAAV,IAAuBY,GAAG,KAAKZ,SAAnC,EAA8C;IAAA;;IAC5C,MAAMsD,UAAU,WAAI3C,KAAK,IAAIC,GAAb,uCAAqB,EAArC;;IACA,IAAIyC,WAAW,CAACE,OAAZ,KAAwB,IAA5B,EAAkC;MAChCF,WAAW,CAACE,OAAZ,GAAsB,IAAIlB,GAAJ,CAAQiB,UAAR,CAAtB;IACD;;IAED,IACEA,UAAU,CAACpC,MAAX,KAAsBmC,WAAW,CAACE,OAAZ,CAAoBC,IAA1C,IACAF,UAAU,CAACG,IAAX,CAAgBC,QAAQ;MAAA;;MAAA,OAAI,0BAACL,WAAW,CAACE,OAAb,iDAAC,qBAAqBd,GAArB,CAAyBiB,QAAzB,CAAD,CAAJ;IAAA,CAAxB,CAFF,EAGE;MACAL,WAAW,CAACE,OAAZ,GAAsB,IAAIlB,GAAJ,CAAQiB,UAAR,CAAtB;IACD;EACF;;EAED,eAAexF,aAAf,GAA+B;IAC7B,IAAIV,KAAK,KAAK4C,SAAd,EAAyB;MACvB;IACD;;IAEDkD,QAAQ,CAAC,EAAC,GAAGD,KAAJ;MAAWE,QAAQ,EAAE;IAArB,CAAD,CAAR;;IACA,IAAI;MACF,MAAMxF,2EAAc,CAACV,GAAD,EAAM;QAACG;MAAD,CAAN,CAApB;MAEA8F,QAAQ,CAAC,EAAC,GAAGD,KAAJ;QAAWE,QAAQ,EAAE,KAArB;QAA4BH,eAAe,EAAE;MAA7C,CAAD,CAAR;IACD,CAJD,CAIE,OAAO5D,GAAP,EAAY;MACZuE,OAAO,CAAClG,KAAR,CAAc2B,GAAd,EADY,CACQ;;MAEpB8D,QAAQ,CAAC,EAAC,GAAGD,KAAJ;QAAWE,QAAQ,EAAE,KAArB;QAA4BH,eAAe,EAAE,IAA7C;QAAmDI,UAAU,EAAEhE;MAA/D,CAAD,CAAR;IACD;EACF;;EAED,eAAewE,mBAAf,GAAqC;IACnC,IAAIxG,KAAK,KAAK4C,SAAd,EAAyB;MACvB;IACD;;IAEDkD,QAAQ,CAAC,EAAC,GAAGD,KAAJ;MAAWE,QAAQ,EAAE;IAArB,CAAD,CAAR;;IACA,IAAI;MACF,MAAM;QAACnB,OAAD;QAAUR,OAAV;QAAmBC;MAAnB,IAAiC,MAAMzE,UAAU,CAACC,GAAD,EAAMG,KAAN,EAAa;QAClEuD,KAAK,EAAE4B,WAD2D;QAElE3B,GAAG,EAAE+B,SAF6D;QAGlE7B;MAHkE,CAAb,CAAvD,CADE,CAOF;;MACA,MAAM+C,YAAY,GAAGxD,oDAAM,CAAC,CAAC,GAAG2B,OAAJ,EAAa,GAAGG,KAAK,CAACvE,KAAtB,CAAD,EAA+B;QAAA,IAAC;UAACa;QAAD,CAAD;QAAA,OAAUA,EAAV;MAAA,CAA/B,CAA3B;MACAjC,4EAAA,CAAsBqH,YAAtB;MAEAX,QAAQ,CAAC,EACP,GAAGD,KADI;QAEPzB,OAFO;QAGP2B,QAAQ,EAAE,KAHH;QAIPH,eAAe,EAAE,IAJV;QAKPvB;MALO,CAAD,CAAR;IAOD,CAlBD,CAkBE,OAAOrC,GAAP,EAAY;MACZuE,OAAO,CAAClG,KAAR,CAAc2B,GAAd,EADY,CACQ;;MAEpB8D,QAAQ,CAAC,EAAC,GAAGD,KAAJ;QAAWE,QAAQ,EAAE,KAArB;QAA4BH,eAAe,EAAE,IAA7C;QAAmDI,UAAU,EAAEhE;MAA/D,CAAD,CAAR;IACD;EACF;;EAED,SAAS2E,YAAT,CAAsBlD,MAAtB,EAAsC;IACpC,IAAIA,MAAM,KAAK,EAAf,EAAmB;MACjB,OAAOmD,0BAA0B,CAACnD,MAAD,CAAjC;IACD,CAHmC,CAKpC;;;IACA,IAAIoC,KAAK,CAACzB,OAAN,KAAkBW,KAAK,CAACX,OAAxB,IAAmCyB,KAAK,CAACxB,UAAN,KAAqBU,KAAK,CAACnB,MAAlE,EAA0E;MACxEkC,QAAQ,CAAC,EACP,GAAGD,KADI;QAEPlC,UAAU,EAAEF,MAFL;QAGPW,OAAO,EAAEW,KAAK,CAACX,OAHR;QAIPC,UAAU,EAAEU,KAAK,CAACnB;MAJX,CAAD,CAAR;IAMD;;IAED,OAAOiD,OAAO,CAACC,OAAR,EAAP;EACD;;EAED,eAAeF,0BAAf,CAA0CnD,MAA1C,EAA2D;IACzD,MAAM;MAACE;IAAD,IAAekC,KAArB,CADyD,CAEzD;;IACA,MAAMjC,MAAM,GAAGH,MAAM,GAAGoC,KAAK,CAACxB,UAAT,GAAsBU,KAAK,CAACnB,MAAjD;;IAEA,IAAI5D,KAAK,KAAK4C,SAAd,EAAyB;MACvB;MACA2D,OAAO,CAAClG,KAAR,CAAc,uDAAd;MACA;IACD;;IAEDyF,QAAQ,CAAC,EAAC,GAAGD,KAAJ;MAAWE,QAAQ,EAAE;IAArB,CAAD,CAAR;;IAEA,IAAI;MACFlG,GAAG,CAACkH,KAAJ;MACA,MAAM;QAACnC,OAAD;QAAUR,OAAV;QAAmBC;MAAnB,IAAiC,MAAMzE,UAAU,CAACC,GAAD,EAAMG,KAAN,EAAa;QAClEyD,MADkE;QAElEC,KAFkE;QAGlEC,UAHkE;QAIlEC;MAJkE,CAAb,CAAvD;MAOA,MAAM6C,YAAY,GAAGxD,oDAAM,CAAC,CAAC,GAAG8B,KAAK,CAACvE,KAAV,EAAiB,GAAGoE,OAApB,CAAD,EAA+B;QAAA,IAAC;UAAC9C;QAAD,CAAD;QAAA,OAAYA,IAAZ;MAAA,CAA/B,CAA3B;;MAEA,IAAI2B,MAAJ,EAAY;QACV;QACA,IAAIgD,YAAY,CAAC3C,MAAb,GAAsBiB,KAAK,CAACvE,KAAN,CAAYsD,MAAtC,EAA8C;UAC5C1E,4EAAA,CAAsBqH,YAAtB;QACD;MACF,CALD,MAKO;QACL;QACArH,4EAAA,CAAsBqH,YAAtB,EAAoCrC,OAApC,EAA6CC,UAA7C;MACD;;MAEDyB,QAAQ,CAAC,EACP,GAAGD,KADI;QAEPzB,OAAO,EAAEA,OAAO,IAAIW,KAAK,CAACX,OAFnB;QAGP2B,QAAQ,EAAE,KAHH;QAIPpC,UAAU,EAAEF,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAY,IAJf;QAKPY;MALO,CAAD,CAAR;IAOD,CA5BD,CA4BE,OAAOrC,GAAP,EAAY;MACZuE,OAAO,CAAClG,KAAR,CAAc2B,GAAd,EADY,CACQ;;MAEpB8D,QAAQ,CAAC,EAAC,GAAGD,KAAJ;QAAWE,QAAQ,EAAE,KAArB;QAA4BC,UAAU,EAAEhE;MAAxC,CAAD,CAAR;IACD;EACF;;EAEDa,gDAAS,CAAC,MAAM;IACd;IACA,IAAI2C,eAAe,IAAIC,aAAvB,EAAsC;MACpCe,mBAAmB;MACnB;IACD,CALa,CAOd;;;IACA,IAAId,eAAJ,EAAqB;MACnBhF,aAAa;IACd;EACF,CAXQ,EAWN,CAACuF,WAAW,CAACE,OAAb,EAAsBrB,gBAAtB,CAXM,CAAT;EAaA,MAAMrC,WAAW,GAAGD,iFAAiB,EAArC;EAEA,MAAMwE,aAAa,GAAGlE,8CAAO,CAAC,MAAM;IAClC,OAAOS,KAAK,GACRwB,KAAK,CAACvE,KAAN,CAAY4E,MAAZ,CAAmBF,CAAC,IAAI3B,KAAK,CAAC0D,QAAN,CAAe/B,CAAC,CAACpD,IAAjB,CAAxB,CADQ,GAER0B,GAAG,GACHuB,KAAK,CAACvE,KAAN,CAAY4E,MAAZ,CAAmBF,CAAC,IAAI1B,GAAG,CAACyD,QAAJ,CAAa/B,CAAC,CAAC7D,EAAf,CAAxB,CADG,GAEHyD,gBAAgB,IAAI,CAACrC,WAArB,GACAsC,KAAK,CAACvE,KAAN,CAAY4E,MAAZ,CAAmBF,CAAC,IAAIA,CAAC,CAACgC,QAA1B,CADA,GAEAnC,KAAK,CAACvE,KANV;EAOD,CAR4B,EAQ1B,CAACuE,KAAK,CAACvE,KAAP,EAAcgD,GAAd,EAAmBD,KAAnB,EAA0BuB,gBAA1B,EAA4CrC,WAA5C,CAR0B,CAA7B;EAUA,MAAM0E,MAAc,GAAG;IACrB3G,KAAK,EAAEwG,aADc;IAErBjB,QAAQ,EAAEF,KAAK,CAACE,QAAN,IAAkBhB,KAAK,CAACqC,OAFb;IAGrBxB,eAAe,EAAEC,KAAK,CAACD,eAHF;IAIrBI,UAAU,EAAEH,KAAK,CAACG,UAJG;IAKrB5B,OAAO,oBAAEyB,KAAK,CAACzB,OAAR,2DAAmBW,KAAK,CAACX,OALX;IAMrBiD,QAAQ,EAAEV,YANW;IAOrBW,QAAQ,EAAEV;EAPW,CAAvB;EAUA,OAAOO,MAAP;AACD;;AAED,iEAAetC,QAAf","sources":["webpack:///./app/actionCreators/teams.tsx","webpack:///./app/utils/isActiveSuperuser.tsx","webpack:///./app/utils/useTeams.tsx"],"sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport TeamActions from 'sentry/actions/teamActions';\nimport {Client} from 'sentry/api';\nimport {tct} from 'sentry/locale';\nimport {Team} from 'sentry/types';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {uniqueId} from 'sentry/utils/guid';\n\ntype CallbackOptions = {\n  error?: Function;\n  success?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\n// Fetch user teams for current org and place them in the team store\nexport async function fetchUserTeams(api: Client, params: OrgSlug) {\n  const teams = await api.requestPromise(`/organizations/${params.orgId}/user-teams/`);\n  TeamActions.loadUserTeams(teams);\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import Cookies from 'js-cookie';\n\nimport ConfigStore from 'sentry/stores/configStore';\n\nconst SUPERUSER_COOKIE_NAME = 'su';\n\n/**\n * Checking for just isSuperuser on a config object may not be enough as backend often checks for *active* superuser.\n * We therefore check both isSuperuser flag AND superuser session cookie.\n */\nexport function isActiveSuperuser() {\n  const {isSuperuser} = ConfigStore.get('user') || {};\n\n  if (isSuperuser) {\n    /**\n     * Superuser cookie cannot be checked for existence as it is HttpOnly.\n     * As a workaround, we try to change it to something else and if that fails we can assume that it's being present.\n     * There may be an edgecase where it's present and expired but for current usage it's not a big deal.\n     */\n    Cookies.set(SUPERUSER_COOKIE_NAME, 'test');\n\n    if (Cookies.get(SUPERUSER_COOKIE_NAME) === undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import {useEffect, useMemo, useRef, useState} from 'react';\nimport uniqBy from 'lodash/uniqBy';\n\nimport {fetchUserTeams} from 'sentry/actionCreators/teams';\nimport TeamActions from 'sentry/actions/teamActions';\nimport {Client} from 'sentry/api';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {Team} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport RequestError from 'sentry/utils/requestError/requestError';\nimport useApi from 'sentry/utils/useApi';\n\ntype State = {\n  /**\n   * The error that occurred if fetching failed\n   */\n  fetchError: null | RequestError;\n  /**\n   * This is state for when fetching data from API\n   */\n  fetching: boolean;\n  /**\n   * Indicates that Team results (from API) are paginated and there are more\n   * Teams that are not in the initial response.\n   */\n  hasMore: null | boolean;\n  /**\n   * Reflects whether or not the initial fetch for the requested teams was\n   * fulfilled\n   */\n  initiallyLoaded: boolean;\n  /**\n   * The last query we searched. Used to validate the cursor\n   */\n  lastSearch: null | string;\n  /**\n   * Pagination\n   */\n  nextCursor?: null | string;\n};\n\ntype Result = {\n  /**\n   * This is an action provided to consumers for them to request more teams\n   * to be loaded. Additional teams will be fetched and loaded into the store.\n   */\n  loadMore: (searchTerm?: string) => Promise<void>;\n  /**\n   * This is an action provided to consumers for them to update the current\n   * teams result set using a simple search query.\n   *\n   * Will always add new options into the store.\n   */\n  onSearch: (searchTerm: string) => Promise<void>;\n  /**\n   * The loaded teams list\n   */\n  teams: Team[];\n} & Pick<State, 'fetching' | 'hasMore' | 'fetchError' | 'initiallyLoaded'>;\n\ntype Options = {\n  /**\n   * When provided, fetches specified teams by id if necessary and only provides those teams.\n   */\n  ids?: string[];\n  /**\n   * Number of teams to return when not using `props.slugs`\n   */\n  limit?: number;\n  /**\n   * When true, fetches user's teams if necessary and only provides user's\n   * teams (isMember = true).\n   */\n  provideUserTeams?: boolean;\n  /**\n   * When provided, fetches specified teams by slug if necessary and only provides those teams.\n   */\n  slugs?: string[];\n};\n\ntype FetchTeamOptions = {\n  cursor?: State['nextCursor'];\n  ids?: string[];\n  lastSearch?: State['lastSearch'];\n  limit?: Options['limit'];\n  search?: State['lastSearch'];\n  slugs?: string[];\n};\n\n/**\n * Helper function to actually load teams\n */\nasync function fetchTeams(\n  api: Client,\n  orgId: string,\n  {slugs, ids, search, limit, lastSearch, cursor}: FetchTeamOptions = {}\n) {\n  const query: {\n    cursor?: typeof cursor;\n    per_page?: number;\n    query?: string;\n  } = {};\n\n  if (slugs !== undefined && slugs.length > 0) {\n    query.query = slugs.map(slug => `slug:${slug}`).join(' ');\n  }\n\n  if (ids !== undefined && ids.length > 0) {\n    query.query = ids.map(id => `id:${id}`).join(' ');\n  }\n\n  if (search) {\n    query.query = `${query.query ?? ''} ${search}`.trim();\n  }\n\n  const isSameSearch = lastSearch === search || (!lastSearch && !search);\n\n  if (isSameSearch && cursor) {\n    query.cursor = cursor;\n  }\n\n  if (limit !== undefined) {\n    query.per_page = limit;\n  }\n\n  let hasMore: null | boolean = false;\n  let nextCursor: null | string = null;\n  const [data, , resp] = await api.requestPromise(`/organizations/${orgId}/teams/`, {\n    includeAllArgs: true,\n    query,\n  });\n\n  const pageLinks = resp?.getResponseHeader('Link');\n  if (pageLinks) {\n    const paginationObject = parseLinkHeader(pageLinks);\n    hasMore = paginationObject?.next?.results;\n    nextCursor = paginationObject?.next?.cursor;\n  }\n\n  return {results: data, hasMore, nextCursor};\n}\n\n// TODO: Paging for items which have already exist in the store is not\n// correctly implemented.\n\n/**\n * Provides teams from the TeamStore\n *\n * This hook also provides a way to select specific slugs to ensure they are\n * loaded, as well as search (type-ahead) for more slugs that may not be in the\n * TeamsStore.\n *\n * NOTE: It is NOT guaranteed that all teams for an organization will be\n * loaded, so you should use this hook with the intention of providing specific\n * slugs, or loading more through search.\n *\n */\nfunction useTeams({limit, slugs, ids, provideUserTeams}: Options = {}) {\n  const api = useApi();\n  const {organization} = useLegacyStore(OrganizationStore);\n  const store = useLegacyStore(TeamStore);\n\n  const orgId = organization?.slug;\n\n  const storeSlugs = new Set(store.teams.map(t => t.slug));\n  const slugsToLoad = slugs?.filter(slug => !storeSlugs.has(slug)) ?? [];\n  const storeIds = new Set(store.teams.map(t => t.id));\n  const idsToLoad = ids?.filter(id => !storeIds.has(id)) ?? [];\n  const shouldLoadSlugs = slugsToLoad.length > 0;\n  const shouldLoadIds = idsToLoad.length > 0;\n  const shouldLoadTeams = provideUserTeams && !store.loadedUserTeams;\n\n  // If we don't need to make a request either for slugs or user teams, set\n  // initiallyLoaded to true\n  const initiallyLoaded = !shouldLoadSlugs && !shouldLoadTeams && !shouldLoadIds;\n\n  const [state, setState] = useState<State>({\n    initiallyLoaded,\n    fetching: false,\n    hasMore: store.hasMore,\n    lastSearch: null,\n    nextCursor: store.cursor,\n    fetchError: null,\n  });\n\n  const slugOrIdRef = useRef<Set<string> | null>(null);\n\n  // Only initialize slugOrIdRef.current once and modify it when we receive new\n  // slugs or ids determined through set equality\n  if (slugs !== undefined || ids !== undefined) {\n    const slugsOrIds = (slugs || ids) ?? [];\n    if (slugOrIdRef.current === null) {\n      slugOrIdRef.current = new Set(slugsOrIds);\n    }\n\n    if (\n      slugsOrIds.length !== slugOrIdRef.current.size ||\n      slugsOrIds.some(slugOrId => !slugOrIdRef.current?.has(slugOrId))\n    ) {\n      slugOrIdRef.current = new Set(slugsOrIds);\n    }\n  }\n\n  async function loadUserTeams() {\n    if (orgId === undefined) {\n      return;\n    }\n\n    setState({...state, fetching: true});\n    try {\n      await fetchUserTeams(api, {orgId});\n\n      setState({...state, fetching: false, initiallyLoaded: true});\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, initiallyLoaded: true, fetchError: err});\n    }\n  }\n\n  async function loadTeamsBySlugOrId() {\n    if (orgId === undefined) {\n      return;\n    }\n\n    setState({...state, fetching: true});\n    try {\n      const {results, hasMore, nextCursor} = await fetchTeams(api, orgId, {\n        slugs: slugsToLoad,\n        ids: idsToLoad,\n        limit,\n      });\n\n      // Unique by `id` to avoid duplicates due to renames and state store data\n      const fetchedTeams = uniqBy([...results, ...store.teams], ({id}) => id);\n      TeamActions.loadTeams(fetchedTeams);\n\n      setState({\n        ...state,\n        hasMore,\n        fetching: false,\n        initiallyLoaded: true,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, initiallyLoaded: true, fetchError: err});\n    }\n  }\n\n  function handleSearch(search: string) {\n    if (search !== '') {\n      return handleFetchAdditionalTeams(search);\n    }\n\n    // Reset pagination state to match store if doing an empty search\n    if (state.hasMore !== store.hasMore || state.nextCursor !== store.cursor) {\n      setState({\n        ...state,\n        lastSearch: search,\n        hasMore: store.hasMore,\n        nextCursor: store.cursor,\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  async function handleFetchAdditionalTeams(search?: string) {\n    const {lastSearch} = state;\n    // Use the store cursor if there is no search keyword provided\n    const cursor = search ? state.nextCursor : store.cursor;\n\n    if (orgId === undefined) {\n      // eslint-disable-next-line no-console\n      console.error('Cannot fetch teams without an organization in context');\n      return;\n    }\n\n    setState({...state, fetching: true});\n\n    try {\n      api.clear();\n      const {results, hasMore, nextCursor} = await fetchTeams(api, orgId, {\n        search,\n        limit,\n        lastSearch,\n        cursor,\n      });\n\n      const fetchedTeams = uniqBy([...store.teams, ...results], ({slug}) => slug);\n\n      if (search) {\n        // Only update the store if we have more items\n        if (fetchedTeams.length > store.teams.length) {\n          TeamActions.loadTeams(fetchedTeams);\n        }\n      } else {\n        // If we fetched a page of teams without a search query, add cursor data to the store\n        TeamActions.loadTeams(fetchedTeams, hasMore, nextCursor);\n      }\n\n      setState({\n        ...state,\n        hasMore: hasMore && store.hasMore,\n        fetching: false,\n        lastSearch: search ?? null,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, fetchError: err});\n    }\n  }\n\n  useEffect(() => {\n    // Load specified team slugs\n    if (shouldLoadSlugs || shouldLoadIds) {\n      loadTeamsBySlugOrId();\n      return;\n    }\n\n    // Load user teams\n    if (shouldLoadTeams) {\n      loadUserTeams();\n    }\n  }, [slugOrIdRef.current, provideUserTeams]);\n\n  const isSuperuser = isActiveSuperuser();\n\n  const filteredTeams = useMemo(() => {\n    return slugs\n      ? store.teams.filter(t => slugs.includes(t.slug))\n      : ids\n      ? store.teams.filter(t => ids.includes(t.id))\n      : provideUserTeams && !isSuperuser\n      ? store.teams.filter(t => t.isMember)\n      : store.teams;\n  }, [store.teams, ids, slugs, provideUserTeams, isSuperuser]);\n\n  const result: Result = {\n    teams: filteredTeams,\n    fetching: state.fetching || store.loading,\n    initiallyLoaded: state.initiallyLoaded,\n    fetchError: state.fetchError,\n    hasMore: state.hasMore ?? store.hasMore,\n    onSearch: handleSearch,\n    loadMore: handleFetchAdditionalTeams,\n  };\n\n  return result;\n}\n\nexport default useTeams;\n"],"names":["addErrorMessage","addSuccessMessage","TeamActions","tct","callIfFunction","uniqueId","doCallback","params","name","args","fetchTeams","api","options","fetchAll","orgId","request","success","data","fetchAllSuccess","error","fetchAllError","fetchUserTeams","teams","requestPromise","loadUserTeams","fetchTeamDetails","fetchDetails","teamId","fetchDetailsSuccess","fetchDetailsError","updateTeamSuccess","updateSuccess","joinTeam","endpoint","memberId","id","update","method","updateError","leaveTeam","createTeam","team","then","createTeamSuccess","slug","organization","err","createTeamError","removeTeam","removeTeamSuccess","removeTeamError","Cookies","ConfigStore","SUPERUSER_COOKIE_NAME","isActiveSuperuser","isSuperuser","get","set","undefined","useEffect","useMemo","useRef","useState","uniqBy","OrganizationStore","TeamStore","useLegacyStore","parseLinkHeader","useApi","slugs","ids","search","limit","lastSearch","cursor","query","length","map","join","trim","isSameSearch","per_page","hasMore","nextCursor","resp","includeAllArgs","pageLinks","getResponseHeader","paginationObject","next","results","useTeams","provideUserTeams","store","storeSlugs","Set","t","slugsToLoad","filter","has","storeIds","idsToLoad","shouldLoadSlugs","shouldLoadIds","shouldLoadTeams","loadedUserTeams","initiallyLoaded","state","setState","fetching","fetchError","slugOrIdRef","slugsOrIds","current","size","some","slugOrId","console","loadTeamsBySlugOrId","fetchedTeams","loadTeams","handleSearch","handleFetchAdditionalTeams","Promise","resolve","clear","filteredTeams","includes","isMember","result","loading","onSearch","loadMore"],"sourceRoot":""}