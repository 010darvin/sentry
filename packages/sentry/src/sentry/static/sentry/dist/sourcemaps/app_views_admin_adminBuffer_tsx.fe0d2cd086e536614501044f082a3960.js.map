{"version":3,"file":"chunks/app_views_admin_adminBuffer_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/internalStatChart.tsx","webpack:///./app/views/admin/adminBuffer.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport {Client} from 'sentry/api';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  label: string;\n  resolution: string;\n  since: number;\n  stat: string;\n  height?: number;\n};\n\ntype State = {\n  data: [number, number][] | null;\n  error: boolean;\n  loading: boolean;\n};\n\nclass InternalStatChart extends Component<Props, State> {\n  state: State = {\n    error: false,\n    loading: true,\n    data: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  shouldComponentUpdate(_nextProps: Props, nextState: State) {\n    return this.state.loading !== nextState.loading;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.since !== this.props.since ||\n      prevProps.stat !== this.props.stat ||\n      prevProps.resolution !== this.props.resolution\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    this.setState({loading: true});\n    this.props.api.request('/internal/stats/', {\n      method: 'GET',\n      data: {\n        since: this.props.since,\n        resolution: this.props.resolution,\n        key: this.props.stat,\n      },\n      success: data =>\n        this.setState({\n          data,\n          loading: false,\n          error: false,\n        }),\n      error: () => this.setState({error: true, loading: false}),\n    });\n  };\n\n  render() {\n    const {loading, error, data} = this.state;\n    const {label, height} = this.props;\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    const series = {\n      seriesName: label,\n      data:\n        data?.map(([timestamp, value]) => ({\n          name: timestamp * 1000,\n          value,\n        })) ?? [],\n    };\n    return (\n      <MiniBarChart\n        height={height ?? 150}\n        series={[series]}\n        isGroupedByDate\n        showTimeInTooltip\n        labelYAxisExtents\n      />\n    );\n  }\n}\n\nexport default withApi(InternalStatChart);\n","import InternalStatChart from 'sentry/components/internalStatChart';\n\nconst AdminBuffer = () => {\n  const since = new Date().getTime() / 1000 - 3600 * 24 * 7;\n\n  return (\n    <div>\n      <h3>Buffers</h3>\n\n      <div className=\"box\">\n        <div className=\"box-header\">\n          <h4>About</h4>\n        </div>\n\n        <div className=\"box-content with-padding\">\n          <p>\n            Sentry buffers are responsible for making changes to cardinality counters —\n            such as an issues event count — as well as updating attributes like{' '}\n            <em>last seen</em>. These are flushed on a regularly interval, and are\n            directly affected by the queue backlog.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"box\">\n        <div className=\"box-header\">\n          <h4>Updates Processed</h4>\n        </div>\n        <InternalStatChart\n          since={since}\n          resolution=\"1h\"\n          stat=\"jobs.finished.sentry.tasks.process_buffer.process_incr\"\n          label=\"Jobs\"\n        />\n      </div>\n\n      <div className=\"box\">\n        <div className=\"box-header\">\n          <h4>Revoked Updates</h4>\n        </div>\n        <InternalStatChart\n          since={since}\n          resolution=\"1h\"\n          stat=\"buffer.revoked\"\n          label=\"Jobs\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AdminBuffer;\n"],"names":["Component","MiniBarChart","LoadingError","LoadingIndicator","withApi","InternalStatChart","error","loading","data","setState","props","api","request","method","since","resolution","key","stat","success","componentDidMount","fetchData","shouldComponentUpdate","_nextProps","nextState","state","componentDidUpdate","prevProps","render","label","height","series","seriesName","map","timestamp","value","name","AdminBuffer","Date","getTime"],"sourceRoot":""}