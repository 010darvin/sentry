{"version":3,"file":"chunks/app_views_dashboardsV2_controls_tsx-app_views_dashboardsV2_detail_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/globalSdkUpdateAlert.tsx","webpack:///./app/utils/performance/contexts/metricsCardinality.tsx","webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuery.tsx","webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums.tsx","webpack:///./app/views/dashboardsV2/controls.tsx","webpack:///./app/views/dashboardsV2/detail.tsx","webpack:///./app/views/dashboardsV2/filtersBar.tsx","webpack:///./app/views/dashboardsV2/title.tsx","webpack:///./app/views/performance/landing/metricsDataSwitcher.tsx","webpack:///./app/views/performance/landing/metricsDataSwitcherAlert.tsx"],"sourcesContent":["import {Fragment, useCallback, useEffect, useState} from 'react';\n\nimport {promptsCheck, promptsUpdate} from 'sentry/actionCreators/prompts';\nimport Alert, {AlertProps} from 'sentry/components/alert';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport SidebarPanelStore from 'sentry/stores/sidebarPanelStore';\nimport {ProjectSdkUpdates} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {promptIsDismissed} from 'sentry/utils/promptIsDismissed';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport withSdkUpdates from 'sentry/utils/withSdkUpdates';\n\nimport {SidebarPanelKey} from './sidebar/types';\nimport Button from './button';\n\ninterface InnerGlobalSdkSuggestionsProps extends AlertProps {\n  className?: string;\n  sdkUpdates?: ProjectSdkUpdates[] | null;\n}\n\nfunction InnerGlobalSdkUpdateAlert(\n  props: InnerGlobalSdkSuggestionsProps\n): React.ReactElement | null {\n  const api = useApi();\n  const organization = useOrganization();\n  const {selection} = usePageFilters();\n\n  const [showUpdateAlert, setShowUpdateAlert] = useState<boolean>(false);\n\n  const handleSnoozePrompt = useCallback(() => {\n    promptsUpdate(api, {\n      organizationId: organization.id,\n      feature: 'sdk_updates',\n      status: 'snoozed',\n    });\n\n    trackAdvancedAnalyticsEvent('sdk_updates.snoozed', {organization});\n    setShowUpdateAlert(false);\n  }, [api, organization]);\n\n  const handleReviewUpdatesClick = useCallback(() => {\n    SidebarPanelStore.activatePanel(SidebarPanelKey.Broadcasts);\n    trackAdvancedAnalyticsEvent('sdk_updates.clicked', {organization});\n  }, [organization]);\n\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('sdk_updates.seen', {organization});\n\n    let isUnmounted = false;\n\n    promptsCheck(api, {\n      organizationId: organization.id,\n      feature: 'sdk_updates',\n    }).then(prompt => {\n      if (isUnmounted) {\n        return;\n      }\n\n      setShowUpdateAlert(!promptIsDismissed(prompt));\n    });\n\n    return () => {\n      isUnmounted = true;\n    };\n  }, [api, organization]);\n\n  if (!showUpdateAlert || !props.sdkUpdates?.length) {\n    return null;\n  }\n\n  // withSdkUpdates explicitly only queries My Projects. This means that when\n  // looking at any projects outside of My Projects (like All Projects), this\n  // will only show the updates relevant to the to user.\n  const projectSpecificUpdates =\n    selection?.projects?.length === 0 || selection?.projects[0] === ALL_ACCESS_PROJECTS\n      ? props.sdkUpdates\n      : props.sdkUpdates.filter(update =>\n          selection?.projects?.includes(parseInt(update.projectId, 10))\n        );\n\n  // Check if we have at least one suggestion out of the list of updates\n  if (projectSpecificUpdates.every(v => v.suggestions.length === 0)) {\n    return null;\n  }\n\n  return (\n    <Alert\n      type=\"info\"\n      showIcon\n      className={props.className}\n      trailingItems={\n        <Fragment>\n          <Button\n            priority=\"link\"\n            size=\"zero\"\n            title={t('Dismiss for the next two weeks')}\n            onClick={handleSnoozePrompt}\n          >\n            {t('Remind me later')}\n          </Button>\n          <span>|</span>\n          <Button priority=\"link\" size=\"zero\" onClick={handleReviewUpdatesClick}>\n            {t('Review updates')}\n          </Button>\n        </Fragment>\n      }\n    >\n      {t(\n        `You have outdated SDKs in your projects. Update them for important fixes and features.`\n      )}\n    </Alert>\n  );\n}\n\nconst WithSdkUpdatesGlobalSdkUpdateAlert = withSdkUpdates(InnerGlobalSdkUpdateAlert);\n\nexport {\n  WithSdkUpdatesGlobalSdkUpdateAlert as GlobalSdkUpdateAlert,\n  InnerGlobalSdkUpdateAlert,\n};\n","import {Fragment, ReactNode} from 'react';\nimport {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport {parsePeriodToHours} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {canUseMetricsData} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport MetricsCompatibilityQuery, {\n  MetricsCompatibilityData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuery';\nimport MetricsCompatibilitySumsQuery, {\n  MetricsCompatibilitySumData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums';\n\nimport {createDefinedContext} from './utils';\n\nexport interface MetricDataSwitcherOutcome {\n  forceTransactionsOnly: boolean;\n  compatibleProjects?: number[];\n  shouldNotifyUnnamedTransactions?: boolean;\n  shouldWarnIncompatibleSDK?: boolean;\n}\nexport interface MetricsCardinalityContext {\n  isLoading: boolean;\n  outcome?: MetricDataSwitcherOutcome;\n}\n\ntype MergedMetricsData = MetricsCompatibilityData & MetricsCompatibilitySumData;\n\nconst [_Provider, _useContext, _Context] =\n  createDefinedContext<MetricsCardinalityContext>({\n    name: 'MetricsCardinalityContext',\n    strict: false,\n  });\n\n/**\n * This provider determines whether the metrics data is storing performance information correctly before we\n * make dozens of requests on pages such as performance landing and dashboards.\n */\nexport const MetricsCardinalityProvider = (props: {\n  children: ReactNode;\n  location: Location;\n  organization: Organization;\n}) => {\n  const isUsingMetrics = canUseMetricsData(props.organization);\n\n  if (!isUsingMetrics) {\n    return (\n      <_Provider\n        value={{\n          isLoading: false,\n          outcome: {\n            forceTransactionsOnly: true,\n          },\n        }}\n      >\n        {props.children}\n      </_Provider>\n    );\n  }\n\n  const baseDiscoverProps = {\n    location: props.location,\n    orgSlug: props.organization.slug,\n    cursor: '0:0:0',\n  };\n  const eventView = EventView.fromLocation(props.location);\n  eventView.fields = [{field: 'tpm()'}];\n  const _eventView = adjustEventViewTime(eventView);\n\n  return (\n    <Fragment>\n      <MetricsCompatibilityQuery eventView={_eventView} {...baseDiscoverProps}>\n        {compatabilityResult => (\n          <MetricsCompatibilitySumsQuery eventView={_eventView} {...baseDiscoverProps}>\n            {sumsResult => (\n              <_Provider\n                value={{\n                  isLoading: compatabilityResult.isLoading || sumsResult.isLoading,\n                  outcome:\n                    compatabilityResult.isLoading || sumsResult.isLoading\n                      ? undefined\n                      : getMetricsOutcome(\n                          compatabilityResult.tableData && sumsResult.tableData\n                            ? {\n                                ...compatabilityResult.tableData,\n                                ...sumsResult.tableData,\n                              }\n                            : null,\n                          !!compatabilityResult.error && !!sumsResult.error\n                        ),\n                }}\n              >\n                {props.children}\n              </_Provider>\n            )}\n          </MetricsCompatibilitySumsQuery>\n        )}\n      </MetricsCompatibilityQuery>\n    </Fragment>\n  );\n};\n\nexport const MetricCardinalityConsumer = _Context.Consumer;\n\nexport const useMetricsCardinalityContext = _useContext;\n\n/**\n * Logic for picking sides of metrics vs. transactions along with the associated warnings.\n */\nfunction getMetricsOutcome(\n  dataCounts: MergedMetricsData | null,\n  hasOtherFallbackCondition: boolean\n) {\n  const fallbackOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: true,\n  };\n  const successOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: false,\n  };\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n  const compatibleProjects = dataCounts.compatible_projects;\n\n  if (hasOtherFallbackCondition) {\n    return fallbackOutcome;\n  }\n\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n\n  if (checkForSamplingRules(dataCounts)) {\n    return fallbackOutcome;\n  }\n\n  if (checkNoDataFallback(dataCounts)) {\n    return fallbackOutcome;\n  }\n\n  if (checkIncompatibleData(dataCounts)) {\n    return {\n      shouldWarnIncompatibleSDK: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfAllOtherData(dataCounts)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfPartialOtherData(dataCounts)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      compatibleProjects,\n      forceTransactionsOnly: false,\n    };\n  }\n\n  return successOutcome;\n}\n\n/**\n * Fallback if very similar amounts of metrics and transactions are found.\n * No projects with dynamic sampling means no rules have been enabled yet.\n */\nfunction checkForSamplingRules(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  if (!dataCounts.dynamic_sampling_projects?.length) {\n    return true;\n  }\n  if (counts.metricsCount === 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Fallback if no metrics found.\n */\nfunction checkNoDataFallback(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return !counts.metricsCount;\n}\n\n/**\n * Fallback and warn if incompatible data found (old specific SDKs).\n */\nfunction checkIncompatibleData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.nullCount > 0;\n}\n\n/**\n * Fallback and warn about unnamed transactions (specific SDKs).\n */\nfunction checkIfAllOtherData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.unparamCount >= counts.metricsCount;\n}\n\n/**\n * Show metrics but warn about unnamed transactions.\n */\nfunction checkIfPartialOtherData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.unparamCount > 0;\n}\n\n/**\n * Temporary function, can be removed after API changes.\n */\nfunction normalizeCounts({sum}: MergedMetricsData) {\n  try {\n    const metricsCount = Number(sum.metrics);\n    const unparamCount = Number(sum.metrics_unparam);\n    const nullCount = Number(sum.metrics_null);\n    return {\n      metricsCount,\n      unparamCount,\n      nullCount,\n    };\n  } catch (_) {\n    return {\n      metricsCount: 0,\n      unparamCount: 0,\n      nullCount: 0,\n    };\n  }\n}\n\n/**\n * Performance optimization to limit the amount of rows scanned before showing the landing page.\n */\nfunction adjustEventViewTime(eventView: EventView) {\n  const _eventView = eventView.clone();\n\n  if (!_eventView.start && !_eventView.end) {\n    if (!_eventView.statsPeriod) {\n      _eventView.statsPeriod = '1h';\n      _eventView.start = undefined;\n      _eventView.end = undefined;\n    } else {\n      const periodHours = parsePeriodToHours(_eventView.statsPeriod);\n      if (periodHours > 1) {\n        _eventView.statsPeriod = '1h';\n        _eventView.start = undefined;\n        _eventView.end = undefined;\n      }\n    }\n  }\n  return _eventView;\n}\n","import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport useApi from 'sentry/utils/useApi';\n\nexport interface MetricsCompatibilityData {\n  compatible_projects?: number[];\n  dynamic_sampling_projects?: number[];\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilityData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilityQuery({children, ...props}: QueryProps) {\n  const api = useApi();\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilityData, {}>\n      route=\"metrics-compatibility-sums\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n      api={api}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport useApi from 'sentry/utils/useApi';\n\nexport interface MetricsCompatibilitySumData {\n  sum: {\n    metrics?: number;\n    metrics_null?: number;\n    metrics_unparam?: number;\n  };\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilitySumData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilitySumsQuery({children, ...props}: QueryProps) {\n  const api = useApi();\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilitySumData, {}>\n      route=\"metrics-compatibility\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n      api={api}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconAdd, IconEdit} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\nimport {UNSAVED_FILTERS_MESSAGE} from './detail';\nimport {DashboardListItem, DashboardState, MAX_WIDGETS} from './types';\n\ntype Props = {\n  dashboardState: DashboardState;\n  dashboards: DashboardListItem[];\n  onAddWidget: () => void;\n  onCancel: () => void;\n  onCommit: () => void;\n  onDelete: () => void;\n  onEdit: () => void;\n  organization: Organization;\n  widgetLimitReached: boolean;\n  hasUnsavedFilters?: boolean;\n};\n\nfunction Controls({\n  organization,\n  dashboardState,\n  dashboards,\n  hasUnsavedFilters,\n  widgetLimitReached,\n  onEdit,\n  onCommit,\n  onDelete,\n  onCancel,\n  onAddWidget,\n}: Props) {\n  function renderCancelButton(label = t('Cancel')) {\n    return (\n      <Button\n        data-test-id=\"dashboard-cancel\"\n        onClick={e => {\n          e.preventDefault();\n          onCancel();\n        }}\n      >\n        {label}\n      </Button>\n    );\n  }\n\n  if ([DashboardState.EDIT, DashboardState.PENDING_DELETE].includes(dashboardState)) {\n    return (\n      <StyledButtonBar gap={1} key=\"edit-controls\">\n        {renderCancelButton()}\n        <Confirm\n          priority=\"danger\"\n          message={t('Are you sure you want to delete this dashboard?')}\n          onConfirm={onDelete}\n          disabled={dashboards.length <= 1}\n        >\n          <Button data-test-id=\"dashboard-delete\" priority=\"danger\">\n            {t('Delete')}\n          </Button>\n        </Confirm>\n        <Button\n          data-test-id=\"dashboard-commit\"\n          onClick={e => {\n            e.preventDefault();\n            onCommit();\n          }}\n          priority=\"primary\"\n        >\n          {t('Save and Finish')}\n        </Button>\n      </StyledButtonBar>\n    );\n  }\n\n  if (dashboardState === DashboardState.CREATE) {\n    return (\n      <StyledButtonBar gap={1} key=\"create-controls\">\n        {renderCancelButton()}\n        <Button\n          data-test-id=\"dashboard-commit\"\n          onClick={e => {\n            e.preventDefault();\n            onCommit();\n          }}\n          priority=\"primary\"\n        >\n          {t('Save and Finish')}\n        </Button>\n      </StyledButtonBar>\n    );\n  }\n\n  if (dashboardState === DashboardState.PREVIEW) {\n    return (\n      <StyledButtonBar gap={1} key=\"preview-controls\">\n        {renderCancelButton(t('Go Back'))}\n        <Button\n          data-test-id=\"dashboard-commit\"\n          onClick={e => {\n            e.preventDefault();\n            onCommit();\n          }}\n          priority=\"primary\"\n        >\n          {t('Add Dashboard')}\n        </Button>\n      </StyledButtonBar>\n    );\n  }\n\n  return (\n    <StyledButtonBar gap={1} key=\"controls\">\n      <DashboardEditFeature>\n        {hasFeature => (\n          <Fragment>\n            <Button\n              data-test-id=\"dashboard-edit\"\n              onClick={e => {\n                e.preventDefault();\n                onEdit();\n              }}\n              icon={<IconEdit />}\n              disabled={!hasFeature || hasUnsavedFilters}\n              title={hasUnsavedFilters && UNSAVED_FILTERS_MESSAGE}\n              priority=\"default\"\n            >\n              {t('Edit Dashboard')}\n            </Button>\n            {hasFeature ? (\n              <Tooltip\n                title={tct('Max widgets ([maxWidgets]) per dashboard reached.', {\n                  maxWidgets: MAX_WIDGETS,\n                })}\n                disabled={!!!widgetLimitReached}\n              >\n                <GuideAnchor\n                  disabled={!!!organization.features.includes('dashboards-releases')}\n                  target=\"releases_widget\"\n                >\n                  <Button\n                    data-test-id=\"add-widget-library\"\n                    priority=\"primary\"\n                    disabled={widgetLimitReached}\n                    icon={<IconAdd isCircled />}\n                    onClick={() => {\n                      trackAdvancedAnalyticsEvent(\n                        'dashboards_views.widget_library.opened',\n                        {\n                          organization,\n                        }\n                      );\n                      onAddWidget();\n                    }}\n                  >\n                    {t('Add Widget')}\n                  </Button>\n                </GuideAnchor>\n              </Tooltip>\n            ) : null}\n          </Fragment>\n        )}\n      </DashboardEditFeature>\n    </StyledButtonBar>\n  );\n}\n\nconst DashboardEditFeature = ({\n  children,\n}: {\n  children: (hasFeature: boolean) => React.ReactNode;\n}) => {\n  const renderDisabled = p => (\n    <Hovercard\n      body={\n        <FeatureDisabled\n          features={p.features}\n          hideHelpToggle\n          featureName={t('Dashboard Editing')}\n        />\n      }\n    >\n      {p.children(p)}\n    </Hovercard>\n  );\n\n  return (\n    <Feature\n      hookName=\"feature-disabled:dashboards-edit\"\n      features={['organizations:dashboards-edit']}\n      renderDisabled={renderDisabled}\n    >\n      {({hasFeature}) => children(hasFeature)}\n    </Feature>\n  );\n};\n\nconst StyledButtonBar = styled(ButtonBar)`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-auto-flow: row;\n    grid-row-gap: ${space(1)};\n    width: 100%;\n  }\n`;\n\nexport default Controls;\n","import {cloneElement, Component, isValidElement} from 'react';\nimport {browserHistory, PlainRoute, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\n\nimport {\n  createDashboard,\n  deleteDashboard,\n  updateDashboard,\n} from 'sentry/actionCreators/dashboards';\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {\n  openAddDashboardWidgetModal,\n  openWidgetViewerModal,\n} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport {\n  isWidgetViewerPath,\n  WidgetViewerQueryField,\n} from 'sentry/components/modals/widgetViewerModal/utils';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {MetricsCardinalityProvider} from 'sentry/utils/performance/contexts/metricsCardinality';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\nimport {\n  cloneDashboard,\n  getCurrentPageFilters,\n  getDashboardFiltersFromURL,\n  hasUnsavedFilterChanges,\n  isWidgetUsingTransactionName,\n  resetPageFilters,\n} from 'sentry/views/dashboardsV2/utils';\nimport {MetricsDataSwitcherAlert} from 'sentry/views/performance/landing/metricsDataSwitcherAlert';\n\nimport {generatePerformanceEventView} from '../performance/data';\nimport {MetricsDataSwitcher} from '../performance/landing/metricsDataSwitcher';\n\nimport {\n  WidgetViewerContext,\n  WidgetViewerContextProps,\n} from './widgetViewer/widgetViewerContext';\nimport Controls from './controls';\nimport Dashboard from './dashboard';\nimport {DEFAULT_STATS_PERIOD} from './data';\nimport FiltersBar from './filtersBar';\nimport {\n  assignDefaultLayout,\n  calculateColumnDepths,\n  getDashboardLayout,\n} from './layoutUtils';\nimport DashboardTitle from './title';\nimport {\n  DashboardDetails,\n  DashboardFilterKeys,\n  DashboardFilters,\n  DashboardListItem,\n  DashboardState,\n  DashboardWidgetSource,\n  MAX_WIDGETS,\n  Widget,\n  WidgetType,\n} from './types';\n\nconst UNSAVED_MESSAGE = t('You have unsaved changes, are you sure you want to leave?');\n\nexport const UNSAVED_FILTERS_MESSAGE = t(\n  'You have unsaved dashboard filters. You can save or discard them.'\n);\n\nconst HookHeader = HookOrDefault({hookName: 'component:dashboards-header'});\n\ntype RouteParams = {\n  orgId: string;\n  dashboardId?: string;\n  widgetId?: number;\n  widgetIndex?: number;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  api: Client;\n  dashboard: DashboardDetails;\n  dashboards: DashboardListItem[];\n  initialState: DashboardState;\n  organization: Organization;\n  projects: Project[];\n  route: PlainRoute;\n  newWidget?: Widget;\n  onDashboardUpdate?: (updatedDashboard: DashboardDetails) => void;\n  onSetNewWidget?: () => void;\n};\n\ntype State = {\n  dashboardState: DashboardState;\n  modifiedDashboard: DashboardDetails | null;\n  widgetLimitReached: boolean;\n} & WidgetViewerContextProps;\n\nclass DashboardDetail extends Component<Props, State> {\n  state: State = {\n    dashboardState: this.props.initialState,\n    modifiedDashboard: this.updateModifiedDashboard(this.props.initialState),\n    widgetLimitReached: this.props.dashboard.widgets.length >= MAX_WIDGETS,\n    setData: data => {\n      this.setState(data);\n    },\n  };\n\n  componentDidMount() {\n    const {route, router} = this.props;\n    router.setRouteLeaveHook(route, this.onRouteLeave);\n    window.addEventListener('beforeunload', this.onUnload);\n    this.checkIfShouldMountWidgetViewerModal();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.checkIfShouldMountWidgetViewerModal();\n\n    if (prevProps.initialState !== this.props.initialState) {\n      // Widget builder can toggle Edit state when saving\n      this.setState({dashboardState: this.props.initialState});\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.onUnload);\n  }\n\n  checkIfShouldMountWidgetViewerModal() {\n    const {\n      params: {widgetId, dashboardId},\n      organization,\n      dashboard,\n      location,\n      router,\n    } = this.props;\n    const {seriesData, tableData, pageLinks, totalIssuesCount, seriesResultsType} =\n      this.state;\n    if (isWidgetViewerPath(location.pathname)) {\n      const widget =\n        defined(widgetId) &&\n        (dashboard.widgets.find(({id}) => id === String(widgetId)) ??\n          dashboard.widgets[widgetId]);\n      if (widget) {\n        openWidgetViewerModal({\n          organization,\n          widget,\n          seriesData,\n          seriesResultsType,\n          tableData,\n          pageLinks,\n          totalIssuesCount,\n          onClose: () => {\n            // Filter out Widget Viewer Modal query params when exiting the Modal\n            const query = omit(location.query, Object.values(WidgetViewerQueryField));\n            router.push({\n              pathname: location.pathname.replace(/widget\\/[0-9]+\\/$/, ''),\n              query,\n            });\n          },\n          onEdit: () => {\n            if (\n              organization.features.includes('new-widget-builder-experience-design') &&\n              !organization.features.includes(\n                'new-widget-builder-experience-modal-access'\n              )\n            ) {\n              const widgetIndex = dashboard.widgets.indexOf(widget);\n              if (dashboardId) {\n                router.push({\n                  pathname: `/organizations/${organization.slug}/dashboard/${dashboardId}/widget/${widgetIndex}/edit/`,\n                  query: {\n                    ...location.query,\n                    source: DashboardWidgetSource.DASHBOARDS,\n                  },\n                });\n                return;\n              }\n            }\n            openAddDashboardWidgetModal({\n              organization,\n              widget,\n              onUpdateWidget: (nextWidget: Widget) => {\n                const updateIndex = dashboard.widgets.indexOf(widget);\n                const nextWidgetsList = cloneDeep(dashboard.widgets);\n                nextWidgetsList[updateIndex] = nextWidget;\n                this.handleUpdateWidgetList(nextWidgetsList);\n              },\n              source: DashboardWidgetSource.DASHBOARDS,\n            });\n          },\n        });\n        trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.open', {\n          organization,\n          widget_type: widget.widgetType ?? WidgetType.DISCOVER,\n          display_type: widget.displayType,\n        });\n      } else {\n        // Replace the URL if the widget isn't found and raise an error in toast\n        router.replace({\n          pathname: `/organizations/${organization.slug}/dashboard/${dashboard.id}/`,\n          query: location.query,\n        });\n        addErrorMessage(t('Widget not found'));\n      }\n    }\n  }\n\n  updateModifiedDashboard(dashboardState: DashboardState) {\n    const {dashboard} = this.props;\n    switch (dashboardState) {\n      case DashboardState.PREVIEW:\n      case DashboardState.CREATE:\n      case DashboardState.EDIT:\n        return cloneDashboard(dashboard);\n      default: {\n        return null;\n      }\n    }\n  }\n\n  get isPreview() {\n    const {dashboardState} = this.state;\n    return DashboardState.PREVIEW === dashboardState;\n  }\n\n  get isEditing() {\n    const {dashboardState} = this.state;\n    return [\n      DashboardState.EDIT,\n      DashboardState.CREATE,\n      DashboardState.PENDING_DELETE,\n    ].includes(dashboardState);\n  }\n\n  get isWidgetBuilderRouter() {\n    const {location, params, organization} = this.props;\n    const {dashboardId, widgetIndex} = params;\n\n    const widgetBuilderRoutes = [\n      `/organizations/${organization.slug}/dashboards/new/widget/new/`,\n      `/organizations/${organization.slug}/dashboard/${dashboardId}/widget/new/`,\n      `/organizations/${organization.slug}/dashboards/new/widget/${widgetIndex}/edit/`,\n      `/organizations/${organization.slug}/dashboard/${dashboardId}/widget/${widgetIndex}/edit/`,\n    ];\n\n    return widgetBuilderRoutes.includes(location.pathname);\n  }\n\n  get dashboardTitle() {\n    const {dashboard} = this.props;\n    const {modifiedDashboard} = this.state;\n    return modifiedDashboard ? modifiedDashboard.title : dashboard.title;\n  }\n\n  onEdit = () => {\n    const {dashboard} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'dashboards2.edit.start',\n      eventName: 'Dashboards2: Edit start',\n      organization_id: parseInt(this.props.organization.id, 10),\n    });\n\n    this.setState({\n      dashboardState: DashboardState.EDIT,\n      modifiedDashboard: cloneDashboard(dashboard),\n    });\n  };\n\n  onRouteLeave = () => {\n    const {dashboard} = this.props;\n    const {modifiedDashboard} = this.state;\n\n    if (\n      ![\n        DashboardState.VIEW,\n        DashboardState.PENDING_DELETE,\n        DashboardState.PREVIEW,\n      ].includes(this.state.dashboardState) &&\n      !isEqual(modifiedDashboard, dashboard)\n    ) {\n      return UNSAVED_MESSAGE;\n    }\n    return undefined;\n  };\n\n  onUnload = (event: BeforeUnloadEvent) => {\n    const {dashboard} = this.props;\n    const {modifiedDashboard} = this.state;\n\n    if (\n      [\n        DashboardState.VIEW,\n        DashboardState.PENDING_DELETE,\n        DashboardState.PREVIEW,\n      ].includes(this.state.dashboardState) ||\n      isEqual(modifiedDashboard, dashboard)\n    ) {\n      return;\n    }\n    event.preventDefault();\n    event.returnValue = UNSAVED_MESSAGE;\n  };\n\n  onDelete = (dashboard: State['modifiedDashboard']) => () => {\n    const {api, organization, location} = this.props;\n    if (!dashboard?.id) {\n      return;\n    }\n\n    const previousDashboardState = this.state.dashboardState;\n\n    this.setState({dashboardState: DashboardState.PENDING_DELETE}, () => {\n      deleteDashboard(api, organization.slug, dashboard.id)\n        .then(() => {\n          addSuccessMessage(t('Dashboard deleted'));\n          trackAnalyticsEvent({\n            eventKey: 'dashboards2.delete',\n            eventName: 'Dashboards2: Delete',\n            organization_id: parseInt(this.props.organization.id, 10),\n          });\n          browserHistory.replace({\n            pathname: `/organizations/${organization.slug}/dashboards/`,\n            query: location.query,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            dashboardState: previousDashboardState,\n          });\n        });\n    });\n  };\n\n  onCancel = () => {\n    const {organization, dashboard, location, params} = this.props;\n    const {modifiedDashboard} = this.state;\n\n    let hasDashboardChanged = !isEqual(modifiedDashboard, dashboard);\n\n    // If a dashboard has every layout undefined, then ignore the layout field\n    // when checking equality because it is a dashboard from before the grid feature\n    const isLegacyLayout = dashboard.widgets.every(({layout}) => !defined(layout));\n    if (isLegacyLayout) {\n      hasDashboardChanged = !isEqual(\n        {\n          ...modifiedDashboard,\n          widgets: modifiedDashboard?.widgets.map(widget => omit(widget, 'layout')),\n        },\n        {...dashboard, widgets: dashboard.widgets.map(widget => omit(widget, 'layout'))}\n      );\n    }\n\n    // Don't confirm preview cancellation regardless of dashboard state\n    if (hasDashboardChanged && !this.isPreview) {\n      // Ignore no-alert here, so that the confirm on cancel matches onUnload & onRouteLeave\n      /* eslint no-alert:0 */\n      if (!confirm(UNSAVED_MESSAGE)) {\n        return;\n      }\n    }\n    if (params.dashboardId) {\n      trackAnalyticsEvent({\n        eventKey: 'dashboards2.edit.cancel',\n        eventName: 'Dashboards2: Edit cancel',\n        organization_id: parseInt(this.props.organization.id, 10),\n      });\n      this.setState({\n        dashboardState: DashboardState.VIEW,\n        modifiedDashboard: null,\n      });\n      return;\n    }\n    trackAnalyticsEvent({\n      eventKey: 'dashboards2.create.cancel',\n      eventName: 'Dashboards2: Create cancel',\n      organization_id: parseInt(this.props.organization.id, 10),\n    });\n    browserHistory.replace({\n      pathname: `/organizations/${organization.slug}/dashboards/`,\n      query: location.query,\n    });\n  };\n\n  handleChangeFilter = (activeFilters: DashboardFilters) => {\n    const {dashboard, location} = this.props;\n    const {modifiedDashboard} = this.state;\n    const newModifiedDashboard = modifiedDashboard || dashboard;\n\n    if (\n      Object.keys(activeFilters).every(\n        key => !!!newModifiedDashboard.filters?.[key] && activeFilters[key].length === 0\n      )\n    ) {\n      return;\n    }\n\n    const filterParams: DashboardFilters = {};\n    Object.keys(activeFilters).forEach(key => {\n      filterParams[key] = activeFilters[key].length ? activeFilters[key] : '';\n    });\n\n    if (!isEqual(activeFilters, dashboard.filters)) {\n      browserHistory.push({\n        ...location,\n        query: {\n          ...location.query,\n          ...filterParams,\n        },\n      });\n    }\n  };\n\n  handleUpdateWidgetList = (widgets: Widget[]) => {\n    const {organization, dashboard, api, onDashboardUpdate, location} = this.props;\n    const {modifiedDashboard} = this.state;\n\n    // Use the new widgets for calculating layout because widgets has\n    // the most up to date information in edit state\n    const currentLayout = getDashboardLayout(widgets);\n    const layoutColumnDepths = calculateColumnDepths(currentLayout);\n    const newModifiedDashboard = {\n      ...cloneDashboard(modifiedDashboard || dashboard),\n      widgets: assignDefaultLayout(widgets, layoutColumnDepths),\n    };\n    this.setState({\n      modifiedDashboard: newModifiedDashboard,\n      widgetLimitReached: widgets.length >= MAX_WIDGETS,\n    });\n    if (this.isEditing || this.isPreview) {\n      return;\n    }\n    updateDashboard(api, organization.slug, newModifiedDashboard).then(\n      (newDashboard: DashboardDetails) => {\n        if (onDashboardUpdate) {\n          onDashboardUpdate(newDashboard);\n          this.setState({\n            modifiedDashboard: null,\n          });\n        }\n        addSuccessMessage(t('Dashboard updated'));\n        if (dashboard && newDashboard.id !== dashboard.id) {\n          browserHistory.replace({\n            pathname: `/organizations/${organization.slug}/dashboard/${newDashboard.id}/`,\n            query: {\n              ...location.query,\n            },\n          });\n          return;\n        }\n      },\n      () => undefined\n    );\n  };\n\n  handleAddCustomWidget = (widget: Widget) => {\n    const {dashboard} = this.props;\n    const {modifiedDashboard} = this.state;\n    const newModifiedDashboard = modifiedDashboard || dashboard;\n    this.onUpdateWidget([...newModifiedDashboard.widgets, widget]);\n  };\n\n  onAddWidget = () => {\n    const {\n      organization,\n      dashboard,\n      router,\n      location,\n      params: {dashboardId},\n    } = this.props;\n    this.setState({\n      modifiedDashboard: cloneDashboard(dashboard),\n    });\n\n    if (\n      organization.features.includes('new-widget-builder-experience-design') &&\n      !organization.features.includes('new-widget-builder-experience-modal-access')\n    ) {\n      if (dashboardId) {\n        router.push({\n          pathname: `/organizations/${organization.slug}/dashboard/${dashboardId}/widget/new/`,\n          query: {\n            ...location.query,\n            source: DashboardWidgetSource.DASHBOARDS,\n          },\n        });\n        return;\n      }\n    }\n    openAddDashboardWidgetModal({\n      organization,\n      dashboard,\n      onAddLibraryWidget: (widgets: Widget[]) => this.handleUpdateWidgetList(widgets),\n      source: DashboardWidgetSource.LIBRARY,\n    });\n  };\n\n  onCommit = () => {\n    const {api, organization, location, dashboard, onDashboardUpdate} = this.props;\n    const {modifiedDashboard, dashboardState} = this.state;\n\n    switch (dashboardState) {\n      case DashboardState.PREVIEW:\n      case DashboardState.CREATE: {\n        if (modifiedDashboard) {\n          if (this.isPreview) {\n            trackAdvancedAnalyticsEvent('dashboards_manage.templates.add', {\n              organization,\n              dashboard_id: dashboard.id,\n              dashboard_title: dashboard.title,\n              was_previewed: true,\n            });\n          }\n          let newModifiedDashboard = modifiedDashboard;\n          if (organization.features.includes('dashboards-top-level-filter')) {\n            newModifiedDashboard = {\n              ...cloneDashboard(modifiedDashboard),\n              ...getCurrentPageFilters(location),\n              filters: getDashboardFiltersFromURL(location) ?? modifiedDashboard.filters,\n            };\n          }\n          createDashboard(\n            api,\n            organization.slug,\n            newModifiedDashboard,\n            this.isPreview\n          ).then(\n            (newDashboard: DashboardDetails) => {\n              addSuccessMessage(t('Dashboard created'));\n              trackAnalyticsEvent({\n                eventKey: 'dashboards2.create.complete',\n                eventName: 'Dashboards2: Create complete',\n                organization_id: parseInt(organization.id, 10),\n              });\n              this.setState({\n                dashboardState: DashboardState.VIEW,\n              });\n\n              // redirect to new dashboard\n              browserHistory.replace({\n                pathname: `/organizations/${organization.slug}/dashboard/${newDashboard.id}/`,\n                query: {\n                  query: omit(location.query, Object.values(DashboardFilterKeys)),\n                },\n              });\n            },\n            () => undefined\n          );\n        }\n        break;\n      }\n      case DashboardState.EDIT: {\n        // only update the dashboard if there are changes\n        if (modifiedDashboard) {\n          if (isEqual(dashboard, modifiedDashboard)) {\n            this.setState({\n              dashboardState: DashboardState.VIEW,\n              modifiedDashboard: null,\n            });\n            return;\n          }\n          updateDashboard(api, organization.slug, modifiedDashboard).then(\n            (newDashboard: DashboardDetails) => {\n              if (onDashboardUpdate) {\n                onDashboardUpdate(newDashboard);\n              }\n              addSuccessMessage(t('Dashboard updated'));\n              trackAnalyticsEvent({\n                eventKey: 'dashboards2.edit.complete',\n                eventName: 'Dashboards2: Edit complete',\n                organization_id: parseInt(organization.id, 10),\n              });\n              this.setState({\n                dashboardState: DashboardState.VIEW,\n                modifiedDashboard: null,\n              });\n\n              if (dashboard && newDashboard.id !== dashboard.id) {\n                browserHistory.replace({\n                  pathname: `/organizations/${organization.slug}/dashboard/${newDashboard.id}/`,\n                  query: {\n                    ...location.query,\n                  },\n                });\n                return;\n              }\n            },\n            () => undefined\n          );\n\n          return;\n        }\n        this.setState({\n          dashboardState: DashboardState.VIEW,\n          modifiedDashboard: null,\n        });\n        break;\n      }\n      case DashboardState.VIEW:\n      default: {\n        this.setState({\n          dashboardState: DashboardState.VIEW,\n          modifiedDashboard: null,\n        });\n        break;\n      }\n    }\n  };\n\n  setModifiedDashboard = (dashboard: DashboardDetails) => {\n    this.setState({\n      modifiedDashboard: dashboard,\n    });\n  };\n\n  onUpdateWidget = (widgets: Widget[]) => {\n    this.setState((state: State) => ({\n      ...state,\n      widgetLimitReached: widgets.length >= MAX_WIDGETS,\n      modifiedDashboard: {\n        ...(state.modifiedDashboard || this.props.dashboard),\n        widgets,\n      },\n    }));\n  };\n\n  renderWidgetBuilder() {\n    const {children, dashboard} = this.props;\n    const {modifiedDashboard} = this.state;\n\n    return isValidElement(children)\n      ? cloneElement(children, {\n          dashboard: modifiedDashboard ?? dashboard,\n          onSave: this.isEditing ? this.onUpdateWidget : this.handleUpdateWidgetList,\n        })\n      : children;\n  }\n\n  renderDefaultDashboardDetail() {\n    const {organization, dashboard, dashboards, params, router, location} = this.props;\n    const {modifiedDashboard, dashboardState, widgetLimitReached} = this.state;\n    const {dashboardId} = params;\n\n    return (\n      <PageFiltersContainer\n        defaultSelection={{\n          datetime: {\n            start: null,\n            end: null,\n            utc: false,\n            period: DEFAULT_STATS_PERIOD,\n          },\n        }}\n      >\n        <PageContent>\n          <NoProjectMessage organization={organization}>\n            <StyledPageHeader>\n              <StyledTitle>\n                <DashboardTitle\n                  dashboard={modifiedDashboard ?? dashboard}\n                  onUpdate={this.setModifiedDashboard}\n                  isEditing={this.isEditing}\n                />\n              </StyledTitle>\n              <Controls\n                organization={organization}\n                dashboards={dashboards}\n                onEdit={this.onEdit}\n                onCancel={this.onCancel}\n                onCommit={this.onCommit}\n                onAddWidget={this.onAddWidget}\n                onDelete={this.onDelete(dashboard)}\n                dashboardState={dashboardState}\n                widgetLimitReached={widgetLimitReached}\n              />\n            </StyledPageHeader>\n            <HookHeader organization={organization} />\n            <StyledPageFilterBar condensed>\n              <ProjectPageFilter />\n              <EnvironmentPageFilter />\n              <DatePageFilter alignDropdown=\"left\" />\n            </StyledPageFilterBar>\n            <Dashboard\n              paramDashboardId={dashboardId}\n              dashboard={modifiedDashboard ?? dashboard}\n              organization={organization}\n              isEditing={this.isEditing}\n              widgetLimitReached={widgetLimitReached}\n              onUpdate={this.onUpdateWidget}\n              handleUpdateWidgetList={this.handleUpdateWidgetList}\n              handleAddCustomWidget={this.handleAddCustomWidget}\n              isPreview={this.isPreview}\n              router={router}\n              location={location}\n            />\n          </NoProjectMessage>\n        </PageContent>\n      </PageFiltersContainer>\n    );\n  }\n\n  getBreadcrumbLabel() {\n    const {dashboardState} = this.state;\n\n    let label = this.dashboardTitle;\n    if (dashboardState === DashboardState.CREATE) {\n      label = t('Create Dashboard');\n    } else if (this.isPreview) {\n      label = t('Preview Dashboard');\n    }\n    return label;\n  }\n\n  renderDashboardDetail() {\n    const {\n      api,\n      organization,\n      dashboard,\n      dashboards,\n      params,\n      router,\n      location,\n      newWidget,\n      onSetNewWidget,\n      onDashboardUpdate,\n      projects,\n    } = this.props;\n    const {modifiedDashboard, dashboardState, widgetLimitReached, seriesData, setData} =\n      this.state;\n    const {dashboardId} = params;\n\n    const hasUnsavedFilters =\n      organization.features.includes('dashboards-top-level-filter') &&\n      dashboard.id !== 'default-overview' &&\n      dashboardState !== DashboardState.CREATE &&\n      hasUnsavedFilterChanges(dashboard, location);\n\n    const eventView = generatePerformanceEventView(location, projects);\n\n    const isDashboardUsingTransaction = dashboard.widgets.some(\n      isWidgetUsingTransactionName\n    );\n\n    return (\n      <SentryDocumentTitle title={dashboard.title} orgSlug={organization.slug}>\n        <PageFiltersContainer\n          defaultSelection={{\n            datetime: {\n              start: null,\n              end: null,\n              utc: false,\n              period: DEFAULT_STATS_PERIOD,\n            },\n          }}\n        >\n          <StyledPageContent>\n            <NoProjectMessage organization={organization}>\n              <Layout.Header>\n                <Layout.HeaderContent>\n                  <Breadcrumbs\n                    crumbs={[\n                      {\n                        label: t('Dashboards'),\n                        to: `/organizations/${organization.slug}/dashboards/`,\n                      },\n                      {\n                        label: this.getBreadcrumbLabel(),\n                      },\n                    ]}\n                  />\n                  <Layout.Title>\n                    <DashboardTitle\n                      dashboard={modifiedDashboard ?? dashboard}\n                      onUpdate={this.setModifiedDashboard}\n                      isEditing={this.isEditing}\n                    />\n                  </Layout.Title>\n                </Layout.HeaderContent>\n                <Layout.HeaderActions>\n                  <Controls\n                    organization={organization}\n                    dashboards={dashboards}\n                    hasUnsavedFilters={hasUnsavedFilters}\n                    onEdit={this.onEdit}\n                    onCancel={this.onCancel}\n                    onCommit={this.onCommit}\n                    onAddWidget={this.onAddWidget}\n                    onDelete={this.onDelete(dashboard)}\n                    dashboardState={dashboardState}\n                    widgetLimitReached={widgetLimitReached}\n                  />\n                </Layout.HeaderActions>\n              </Layout.Header>\n              <Layout.Body>\n                <Layout.Main fullWidth>\n                  <MetricsCardinalityProvider\n                    organization={organization}\n                    location={location}\n                  >\n                    {(organization.features.includes('dashboards-mep') ||\n                      organization.features.includes('mep-rollout-flag')) &&\n                    isDashboardUsingTransaction ? (\n                      <MetricsDataSwitcher\n                        organization={organization}\n                        eventView={eventView}\n                        location={location}\n                        hideLoadingIndicator\n                      >\n                        {metricsDataSide => (\n                          <MetricsDataSwitcherAlert\n                            organization={organization}\n                            eventView={eventView}\n                            projects={projects}\n                            location={location}\n                            router={router}\n                            {...metricsDataSide}\n                          />\n                        )}\n                      </MetricsDataSwitcher>\n                    ) : null}\n                  </MetricsCardinalityProvider>\n                  <FiltersBar\n                    filters={(modifiedDashboard ?? dashboard).filters}\n                    location={location}\n                    hasUnsavedChanges={hasUnsavedFilters}\n                    isEditingDashboard={\n                      dashboardState !== DashboardState.CREATE && this.isEditing\n                    }\n                    isPreview={this.isPreview}\n                    onDashboardFilterChange={this.handleChangeFilter}\n                    onCancel={() => {\n                      resetPageFilters(dashboard, location);\n                      this.setState({\n                        modifiedDashboard: {\n                          ...(modifiedDashboard ?? dashboard),\n                          filters: dashboard.filters,\n                        },\n                      });\n                    }}\n                    onSave={() => {\n                      const newModifiedDashboard = {\n                        ...cloneDashboard(modifiedDashboard ?? dashboard),\n                        ...getCurrentPageFilters(location),\n                        filters:\n                          getDashboardFiltersFromURL(location) ??\n                          (modifiedDashboard ?? dashboard).filters,\n                      };\n                      updateDashboard(api, organization.slug, newModifiedDashboard).then(\n                        (newDashboard: DashboardDetails) => {\n                          if (onDashboardUpdate) {\n                            onDashboardUpdate(newDashboard);\n                            this.setState({\n                              modifiedDashboard: null,\n                            });\n                          }\n                          addSuccessMessage(t('Dashboard filters updated'));\n                          browserHistory.replace({\n                            pathname: `/organizations/${organization.slug}/dashboard/${newDashboard.id}/`,\n                            query: omit(\n                              location.query,\n                              Object.values(DashboardFilterKeys)\n                            ),\n                          });\n                        },\n                        () => undefined\n                      );\n                    }}\n                  />\n\n                  <WidgetViewerContext.Provider value={{seriesData, setData}}>\n                    <Dashboard\n                      paramDashboardId={dashboardId}\n                      dashboard={modifiedDashboard ?? dashboard}\n                      organization={organization}\n                      isEditing={this.isEditing}\n                      widgetLimitReached={widgetLimitReached}\n                      onUpdate={this.onUpdateWidget}\n                      handleUpdateWidgetList={this.handleUpdateWidgetList}\n                      handleAddCustomWidget={this.handleAddCustomWidget}\n                      router={router}\n                      location={location}\n                      newWidget={newWidget}\n                      onSetNewWidget={onSetNewWidget}\n                      isPreview={this.isPreview}\n                    />\n                  </WidgetViewerContext.Provider>\n                </Layout.Main>\n              </Layout.Body>\n            </NoProjectMessage>\n          </StyledPageContent>\n        </PageFiltersContainer>\n      </SentryDocumentTitle>\n    );\n  }\n\n  render() {\n    const {organization} = this.props;\n\n    if (this.isWidgetBuilderRouter) {\n      return this.renderWidgetBuilder();\n    }\n\n    if (organization.features.includes('dashboards-edit')) {\n      return this.renderDashboardDetail();\n    }\n\n    return this.renderDefaultDashboardDetail();\n  }\n}\n\nconst StyledPageHeader = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr);\n  grid-row-gap: ${space(2)};\n  align-items: center;\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: minmax(0, 1fr) max-content;\n    grid-column-gap: ${space(2)};\n    height: 40px;\n  }\n`;\n\nconst StyledTitle = styled(Layout.Title)`\n  margin-top: 0;\n`;\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nconst StyledPageFilterBar = styled(PageFilterBar)`\n  margin-bottom: ${space(2)};\n`;\n\nexport default withProjects(withApi(withOrganization(DashboardDetail)));\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {ReleasesProvider} from 'sentry/utils/releases/releasesProvider';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\n\nimport ReleasesSelectControl from './releasesSelectControl';\nimport {DashboardFilterKeys, DashboardFilters} from './types';\n\ntype FiltersBarProps = {\n  filters: DashboardFilters;\n  hasUnsavedChanges: boolean;\n  isEditingDashboard: boolean;\n  isPreview: boolean;\n  location: Location;\n  onCancel: () => void;\n  onDashboardFilterChange: (activeFilters: DashboardFilters) => void;\n  onSave: () => void;\n};\n\nexport default function FiltersBar({\n  filters,\n  hasUnsavedChanges,\n  isEditingDashboard,\n  isPreview,\n  location,\n  onCancel,\n  onDashboardFilterChange,\n  onSave,\n}: FiltersBarProps) {\n  const {selection} = usePageFilters();\n  const organization = useOrganization();\n\n  const selectedReleases =\n    (defined(location.query?.[DashboardFilterKeys.RELEASE])\n      ? decodeList(location.query[DashboardFilterKeys.RELEASE])\n      : filters?.[DashboardFilterKeys.RELEASE]) ?? [];\n\n  return (\n    <Wrapper>\n      <PageFilterBar condensed>\n        <ProjectPageFilter disabled={isEditingDashboard} />\n        <EnvironmentPageFilter disabled={isEditingDashboard} />\n        <DatePageFilter alignDropdown=\"left\" disabled={isEditingDashboard} />\n      </PageFilterBar>\n      <Feature features={['dashboards-top-level-filter']}>\n        <Fragment>\n          <FilterButtons>\n            <FilterButton>\n              <ReleasesProvider organization={organization} selection={selection}>\n                <ReleasesSelectControl\n                  handleChangeFilter={onDashboardFilterChange}\n                  selectedReleases={selectedReleases}\n                  isDisabled={isEditingDashboard}\n                />\n              </ReleasesProvider>\n            </FilterButton>\n          </FilterButtons>\n          {hasUnsavedChanges && !isEditingDashboard && !isPreview && (\n            <FilterButtons>\n              <Button priority=\"primary\" onClick={onSave}>\n                {t('Save')}\n              </Button>\n              <Button onClick={onCancel}>{t('Cancel')}</Button>\n            </FilterButtons>\n          )}\n        </Fragment>\n      </Feature>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  gap: ${space(1.5)};\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: grid;\n    grid-auto-flow: row;\n  }\n`;\n\nconst FilterButtons = styled(ButtonBar)`\n  display: grid;\n  gap: ${space(1.5)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    align-items: flex-start;\n    gap: ${space(1.5)};\n  }\n`;\n\nconst FilterButton = styled('div')`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    max-width: 300px;\n  }\n`;\n","import EditableText from 'sentry/components/editableText';\nimport {t} from 'sentry/locale';\n\nimport {DashboardDetails} from './types';\n\ntype Props = {\n  dashboard: DashboardDetails | null;\n  isEditing: boolean;\n  onUpdate: (dashboard: DashboardDetails) => void;\n};\n\nfunction DashboardTitle({dashboard, isEditing, onUpdate}: Props) {\n  return (\n    <div>\n      {!dashboard ? (\n        t('Dashboards')\n      ) : (\n        <EditableText\n          isDisabled={!isEditing}\n          value={dashboard.title}\n          onChange={newTitle => onUpdate({...dashboard, title: newTitle})}\n          errorMessage={t('Please set a title for this dashboard')}\n          autoSelect\n        />\n      )}\n    </div>\n  );\n}\n\nexport default DashboardTitle;\n","import {Fragment, useEffect} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  MetricDataSwitcherOutcome,\n  useMetricsCardinalityContext,\n} from 'sentry/utils/performance/contexts/metricsCardinality';\nimport {\n  canUseMetricsData,\n  MEPState,\n  METRIC_SEARCH_SETTING_PARAM,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\ninterface MetricDataSwitchProps {\n  children: (props: MetricDataSwitcherOutcome) => React.ReactNode;\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  hideLoadingIndicator?: boolean;\n}\n\n/**\n * This component decides based on some stats about current projects whether to show certain views of the landing page.\n * It is primarily needed for the rollout during which time users, despite having the flag enabled,\n * may or may not have sampling rules, compatible sdk's etc. This can be simplified post rollout.\n */\nexport function MetricsDataSwitcher(props: MetricDataSwitchProps) {\n  const isUsingMetrics = canUseMetricsData(props.organization);\n  const metricsCardinality = useMetricsCardinalityContext();\n\n  if (!isUsingMetrics) {\n    return (\n      <Fragment>\n        {props.children({\n          forceTransactionsOnly: true,\n        })}\n      </Fragment>\n    );\n  }\n\n  if (metricsCardinality.isLoading && !props.hideLoadingIndicator) {\n    return (\n      <Fragment>\n        <LoadingContainer>\n          <LoadingIndicator />\n        </LoadingContainer>\n      </Fragment>\n    );\n  }\n\n  if (!metricsCardinality.outcome) {\n    return (\n      <Fragment>\n        {props.children({\n          forceTransactionsOnly: true,\n        })}\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <MetricsSwitchHandler\n        eventView={props.eventView}\n        location={props.location}\n        outcome={metricsCardinality.outcome}\n        switcherChildren={props.children}\n      />\n    </Fragment>\n  );\n}\n\ninterface SwitcherHandlerProps {\n  eventView: EventView;\n  location: Location;\n  outcome: MetricDataSwitcherOutcome;\n  switcherChildren: MetricDataSwitchProps['children'];\n}\n\nfunction MetricsSwitchHandler({\n  switcherChildren,\n  outcome,\n  location,\n  eventView,\n}: SwitcherHandlerProps) {\n  const {query} = location;\n  const mepSearchState = decodeScalar(query[METRIC_SEARCH_SETTING_PARAM], '');\n  const hasQuery = decodeScalar(query.query, '');\n  const queryIsTransactionsBased = mepSearchState === MEPState.transactionsOnly;\n\n  const shouldAdjustQuery =\n    hasQuery && queryIsTransactionsBased && !outcome.forceTransactionsOnly;\n\n  useEffect(() => {\n    if (shouldAdjustQuery) {\n      browserHistory.push({\n        pathname: location.pathname,\n        query: {\n          ...location.query,\n          cursor: undefined,\n          query: undefined,\n          [METRIC_SEARCH_SETTING_PARAM]: undefined,\n        },\n      });\n    }\n  }, [shouldAdjustQuery, location]);\n\n  if (hasQuery && queryIsTransactionsBased && !outcome.forceTransactionsOnly) {\n    eventView.query = ''; // TODO: Create switcher provider and move it to the route level to remove the need for this.\n  }\n\n  return <Fragment>{switcherChildren(outcome)}</Fragment>;\n}\n\nconst LoadingContainer = styled('div')`\n  display: flex;\n  justify-content: center;\n`;\n","import {useCallback, useMemo} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport {Location} from 'history';\n\nimport {updateProjects} from 'sentry/actionCreators/pageFilters';\nimport Alert from 'sentry/components/alert';\nimport {GlobalSdkUpdateAlert} from 'sentry/components/globalSdkUpdateAlert';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {SidebarPanelKey} from 'sentry/components/sidebar/types';\nimport {t, tct} from 'sentry/locale';\nimport SidebarPanelStore from 'sentry/stores/sidebarPanelStore';\nimport {Organization, Project} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {MetricDataSwitcherOutcome} from 'sentry/utils/performance/contexts/metricsCardinality';\n\nimport {\n  areMultipleProjectsSelected,\n  createUnnamedTransactionsDiscoverTarget,\n  getSelectedProjectPlatformsArray,\n} from '../utils';\n\ninterface MetricEnhancedDataAlertProps extends MetricDataSwitcherOutcome {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  router: WithRouterProps['router'];\n}\n\n/**\n * From\n * https://github.com/getsentry/sentry-docs/blob/master/src/platforms/common/enriching-events/transaction-name.mdx\n */\nconst SUPPORTED_TRANSACTION_NAME_DOCS = [\n  'javascript',\n  'node',\n  'python',\n  'ruby',\n  'native',\n  'react-native',\n  'dotnet',\n  'unity',\n  'flutter',\n  'dart',\n  'java',\n  'android',\n];\nconst UNSUPPORTED_TRANSACTION_NAME_DOCS = [\n  'javascript.cordova',\n  'javascript.nextjs',\n  'native.minidumps',\n];\n\nexport function MetricsDataSwitcherAlert(\n  props: MetricEnhancedDataAlertProps\n): React.ReactElement | null {\n  const handleReviewUpdatesClick = useCallback(() => {\n    SidebarPanelStore.activatePanel(SidebarPanelKey.Broadcasts);\n  }, []);\n\n  const docsLink = useMemo(() => {\n    const platforms = getSelectedProjectPlatformsArray(props.location, props.projects);\n    if (platforms.length < 1) {\n      return null;\n    }\n\n    const platform = platforms[0];\n    if (UNSUPPORTED_TRANSACTION_NAME_DOCS.includes(platform)) {\n      return null;\n    }\n\n    const supportedPlatform = SUPPORTED_TRANSACTION_NAME_DOCS.find(platformBase =>\n      platform.includes(platformBase)\n    );\n\n    if (!supportedPlatform) {\n      return null;\n    }\n\n    return `https://docs.sentry.io/platforms/${supportedPlatform}/enriching-events/transaction-name/`;\n  }, [props.location, props.projects]);\n\n  const handleSwitchToCompatibleProjects = useCallback(() => {\n    updateProjects(props.compatibleProjects || [], props.router);\n  }, [props.compatibleProjects, props.router]);\n\n  if (!props.shouldNotifyUnnamedTransactions && !props.shouldWarnIncompatibleSDK) {\n    // Control showing generic sdk-alert here since stacking alerts is noisy.\n    return <GlobalSdkUpdateAlert />;\n  }\n\n  const discoverTarget = createUnnamedTransactionsDiscoverTarget(props);\n\n  if (props.shouldWarnIncompatibleSDK) {\n    const updateSDK = (\n      <Link to=\"\" onClick={handleReviewUpdatesClick}>\n        {t('update your SDK version')}\n      </Link>\n    );\n    if (areMultipleProjectsSelected(props.eventView)) {\n      if ((props.compatibleProjects ?? []).length === 0) {\n        return (\n          <Alert\n            type=\"warning\"\n            showIcon\n            data-test-id=\"landing-mep-alert-multi-project-all-incompatible\"\n          >\n            {tct(\n              `A few projects are incompatible with server side sampling. To enable this feature [updateSDK].`,\n              {\n                updateSDK,\n              }\n            )}\n          </Alert>\n        );\n      }\n      return (\n        <Alert\n          type=\"warning\"\n          showIcon\n          data-test-id=\"landing-mep-alert-multi-project-incompatible\"\n        >\n          {tct(\n            `A few projects are incompatible with server side sampling. You can either [updateSDK] or [onlyViewCompatible]`,\n            {\n              updateSDK,\n              onlyViewCompatible: (\n                <Link to=\"\" onClick={handleSwitchToCompatibleProjects}>\n                  {t('only view compatible projects.')}\n                </Link>\n              ),\n            }\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert\n        type=\"warning\"\n        showIcon\n        data-test-id=\"landing-mep-alert-single-project-incompatible\"\n      >\n        {tct(\n          `Your project has an outdated SDK which is incompatible with server side sampling. To enable this feature [updateSDK].`,\n          {\n            updateSDK,\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  if (props.shouldNotifyUnnamedTransactions) {\n    const discover = <Link to={discoverTarget}>{t('open them in Discover.')}</Link>;\n    if (!docsLink) {\n      return (\n        <Alert type=\"warning\" showIcon data-test-id=\"landing-mep-alert-unnamed-discover\">\n          {tct(\n            `You have some unparameterized transactions which are incompatible with server side sampling. You can [discover]`,\n            {\n              discover,\n            }\n          )}\n        </Alert>\n      );\n    }\n\n    return (\n      <Alert\n        type=\"warning\"\n        showIcon\n        data-test-id=\"landing-mep-alert-unnamed-discover-or-set\"\n      >\n        {tct(\n          `You have some unparameterized transactions which are incompatible with server side sampling. You can either [setNames] or [discover]`,\n          {\n            setNames: (\n              <ExternalLink href={docsLink}>{t('set names manually')}</ExternalLink>\n            ),\n            discover,\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  return null;\n}\n"],"names":["Fragment","useCallback","useEffect","useState","promptsCheck","promptsUpdate","Alert","ALL_ACCESS_PROJECTS","t","SidebarPanelStore","trackAdvancedAnalyticsEvent","promptIsDismissed","useApi","useOrganization","usePageFilters","withSdkUpdates","SidebarPanelKey","Button","InnerGlobalSdkUpdateAlert","props","api","organization","selection","showUpdateAlert","setShowUpdateAlert","handleSnoozePrompt","organizationId","id","feature","status","handleReviewUpdatesClick","activatePanel","Broadcasts","isUnmounted","then","prompt","sdkUpdates","length","projectSpecificUpdates","projects","filter","update","includes","parseInt","projectId","every","v","suggestions","className","WithSdkUpdatesGlobalSdkUpdateAlert","GlobalSdkUpdateAlert","parsePeriodToHours","EventView","canUseMetricsData","MetricsCompatibilityQuery","MetricsCompatibilitySumsQuery","createDefinedContext","_Provider","_useContext","_Context","name","strict","MetricsCardinalityProvider","isUsingMetrics","isLoading","outcome","forceTransactionsOnly","children","baseDiscoverProps","location","orgSlug","slug","cursor","eventView","fromLocation","fields","field","_eventView","adjustEventViewTime","compatabilityResult","sumsResult","undefined","getMetricsOutcome","tableData","error","MetricCardinalityConsumer","Consumer","useMetricsCardinalityContext","dataCounts","hasOtherFallbackCondition","fallbackOutcome","successOutcome","compatibleProjects","compatible_projects","checkForSamplingRules","checkNoDataFallback","checkIncompatibleData","shouldWarnIncompatibleSDK","checkIfAllOtherData","shouldNotifyUnnamedTransactions","checkIfPartialOtherData","counts","normalizeCounts","dynamic_sampling_projects","metricsCount","nullCount","unparamCount","sum","Number","metrics","metrics_unparam","metrics_null","_","clone","start","end","statsPeriod","periodHours","omit","GenericDiscoverQuery","getRequestPayload","getEventsAPIPayload","rest","Feature","FeatureDisabled","GuideAnchor","ButtonBar","Confirm","Hovercard","Tooltip","IconAdd","IconEdit","tct","space","UNSAVED_FILTERS_MESSAGE","DashboardState","MAX_WIDGETS","Controls","dashboardState","dashboards","hasUnsavedFilters","widgetLimitReached","onEdit","onCommit","onDelete","onCancel","onAddWidget","renderCancelButton","label","e","preventDefault","EDIT","PENDING_DELETE","CREATE","PREVIEW","hasFeature","maxWidgets","features","DashboardEditFeature","renderDisabled","p","StyledButtonBar","theme","breakpoints","small","cloneElement","Component","isValidElement","browserHistory","cloneDeep","isEqual","createDashboard","deleteDashboard","updateDashboard","addErrorMessage","addSuccessMessage","openAddDashboardWidgetModal","openWidgetViewerModal","Breadcrumbs","DatePageFilter","EnvironmentPageFilter","HookOrDefault","Layout","isWidgetViewerPath","WidgetViewerQueryField","NoProjectMessage","PageFilterBar","PageFiltersContainer","ProjectPageFilter","SentryDocumentTitle","PageContent","defined","trackAnalyticsEvent","withApi","withOrganization","withProjects","cloneDashboard","getCurrentPageFilters","getDashboardFiltersFromURL","hasUnsavedFilterChanges","isWidgetUsingTransactionName","resetPageFilters","MetricsDataSwitcherAlert","generatePerformanceEventView","MetricsDataSwitcher","WidgetViewerContext","Dashboard","DEFAULT_STATS_PERIOD","FiltersBar","assignDefaultLayout","calculateColumnDepths","getDashboardLayout","DashboardTitle","DashboardFilterKeys","DashboardWidgetSource","WidgetType","UNSAVED_MESSAGE","HookHeader","hookName","DashboardDetail","initialState","modifiedDashboard","updateModifiedDashboard","dashboard","widgets","setData","data","setState","eventKey","eventName","organization_id","state","VIEW","event","returnValue","previousDashboardState","replace","pathname","query","catch","params","hasDashboardChanged","isLegacyLayout","layout","map","widget","isPreview","confirm","dashboardId","activeFilters","newModifiedDashboard","Object","keys","key","filters","filterParams","forEach","push","onDashboardUpdate","currentLayout","layoutColumnDepths","isEditing","newDashboard","onUpdateWidget","router","source","DASHBOARDS","onAddLibraryWidget","handleUpdateWidgetList","LIBRARY","dashboard_id","dashboard_title","title","was_previewed","values","componentDidMount","route","setRouteLeaveHook","onRouteLeave","window","addEventListener","onUnload","checkIfShouldMountWidgetViewerModal","componentDidUpdate","prevProps","componentWillUnmount","removeEventListener","widgetId","seriesData","pageLinks","totalIssuesCount","seriesResultsType","find","String","onClose","widgetIndex","indexOf","nextWidget","updateIndex","nextWidgetsList","widget_type","widgetType","DISCOVER","display_type","displayType","isWidgetBuilderRouter","widgetBuilderRoutes","dashboardTitle","renderWidgetBuilder","onSave","renderDefaultDashboardDetail","datetime","utc","period","setModifiedDashboard","handleAddCustomWidget","getBreadcrumbLabel","renderDashboardDetail","newWidget","onSetNewWidget","isDashboardUsingTransaction","some","to","metricsDataSide","handleChangeFilter","render","StyledPageHeader","medium","StyledTitle","Title","StyledPageContent","StyledPageFilterBar","decodeList","ReleasesProvider","ReleasesSelectControl","hasUnsavedChanges","isEditingDashboard","onDashboardFilterChange","selectedReleases","RELEASE","Wrapper","FilterButtons","FilterButton","EditableText","onUpdate","newTitle","LoadingIndicator","MEPState","METRIC_SEARCH_SETTING_PARAM","decodeScalar","metricsCardinality","hideLoadingIndicator","MetricsSwitchHandler","switcherChildren","mepSearchState","hasQuery","queryIsTransactionsBased","transactionsOnly","shouldAdjustQuery","LoadingContainer","useMemo","updateProjects","ExternalLink","Link","areMultipleProjectsSelected","createUnnamedTransactionsDiscoverTarget","getSelectedProjectPlatformsArray","SUPPORTED_TRANSACTION_NAME_DOCS","UNSUPPORTED_TRANSACTION_NAME_DOCS","docsLink","platforms","platform","supportedPlatform","platformBase","handleSwitchToCompatibleProjects","discoverTarget","updateSDK","onlyViewCompatible","discover","setNames"],"sourceRoot":""}