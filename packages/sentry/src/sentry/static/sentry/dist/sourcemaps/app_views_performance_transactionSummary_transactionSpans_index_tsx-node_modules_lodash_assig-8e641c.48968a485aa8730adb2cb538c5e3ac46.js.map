{"version":3,"file":"chunks/app_views_performance_transactionSummary_transactionSpans_index_tsx-node_modules_lodash_assig-8e641c.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/performance/suspectSpans/spanOpsQuery.tsx","webpack:///./app/utils/performance/suspectSpans/suspectSpansQuery.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/index.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/opsFilter.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/suspectSpansTable.tsx","webpack:///../node_modules/lodash/assign.js","webpack:///../node_modules/lodash/maxBy.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {EventsMetaType, MetaType} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport {TransactionThresholdMetric} from 'sentry/views/performance/transactionSummary/transactionThresholdModal';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata from the events endpoint.\n */\nexport type EventsTableData = {\n  data: Array<TableDataRow>;\n  meta?: EventsMetaType;\n};\n\nexport type TableDataWithTitle = TableData & {title: string};\n\ntype DiscoverQueryPropsWithThresholds = DiscoverQueryProps & {\n  transactionName?: string;\n  transactionThreshold?: number;\n  transactionThresholdMetric?: TransactionThresholdMetric;\n};\n\ntype DiscoverQueryComponentProps = DiscoverQueryPropsWithThresholds & {\n  children: (props: GenericChildrenProps<TableData>) => React.ReactNode;\n  useEvents?: boolean;\n};\n\nfunction shouldRefetchData(\n  prevProps: DiscoverQueryPropsWithThresholds,\n  nextProps: DiscoverQueryPropsWithThresholds\n) {\n  return (\n    prevProps.transactionName !== nextProps.transactionName ||\n    prevProps.transactionThreshold !== nextProps.transactionThreshold ||\n    prevProps.transactionThresholdMetric !== nextProps.transactionThresholdMetric\n  );\n}\n\nfunction DiscoverQuery(props: DiscoverQueryComponentProps) {\n  const endpoint = props.useEvents ? 'events' : 'eventsv2';\n  const afterFetch = props.useEvents\n    ? (data, _) => {\n        const {fields, ...otherMeta} = data.meta ?? {};\n        return {\n          ...data,\n          meta: {...fields, ...otherMeta},\n        };\n      }\n    : undefined;\n  return (\n    <GenericDiscoverQuery<TableData, DiscoverQueryPropsWithThresholds>\n      route={endpoint}\n      shouldRefetchData={shouldRefetchData}\n      afterFetch={afterFetch}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(DiscoverQuery);\n","import omit from 'lodash/omit';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SpanOps} from './types';\n\ntype SpanOpsProps = {};\n\ntype RequestProps = DiscoverQueryProps & SpanOpsProps;\n\ntype ChildrenProps = Omit<GenericChildrenProps<SpanOpsProps>, 'tableData'> & {\n  spanOps: SpanOps | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction SpanOpsQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SpanOps, SpanOpsProps>\n      route=\"events-span-ops\"\n      limit={20}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({spanOps: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SpanOpsQuery);\n","import omit from 'lodash/omit';\n\nimport {defined} from 'sentry/utils';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SuspectSpans} from './types';\n\ntype SuspectSpansProps = {\n  maxExclusiveTime?: string;\n  minExclusiveTime?: string;\n  perSuspect?: number;\n  spanGroups?: string[];\n  spanOps?: string[];\n};\n\ntype RequestProps = DiscoverQueryProps & SuspectSpansProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<SuspectSpansProps>, 'tableData'> & {\n  suspectSpans: SuspectSpans | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getSuspectSpanPayload(props: RequestProps) {\n  const {perSuspect, spanOps, spanGroups, minExclusiveTime, maxExclusiveTime} = props;\n  const payload = {\n    perSuspect,\n    spanOp: spanOps,\n    spanGroup: spanGroups,\n    min_exclusive_time: minExclusiveTime,\n    max_exclusive_time: maxExclusiveTime,\n  };\n  if (!defined(payload.perSuspect)) {\n    delete payload.perSuspect;\n  }\n  if (!defined(payload.spanOp)) {\n    delete payload.spanOp;\n  }\n  if (!defined(payload.spanGroup)) {\n    delete payload.spanGroup;\n  }\n  const additionalPayload = props.eventView.getEventsAPIPayload(props.location);\n  return {\n    ...payload,\n    ...additionalPayload,\n  };\n}\n\nfunction SuspectSpansQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SuspectSpans, SuspectSpansProps>\n      route=\"events-spans-performance\"\n      getRequestPayload={getSuspectSpanPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({suspectSpans: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SuspectSpansQuery);\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport Pagination from 'sentry/components/pagination';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SuspectSpansQuery from 'sentry/utils/performance/suspectSpans/suspectSpansQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {SetStateAction} from '../types';\n\nimport OpsFilter from './opsFilter';\nimport SuspectSpansTable from './suspectSpansTable';\nimport {SpanSort, SpansTotalValues} from './types';\nimport {\n  getSuspectSpanSortFromEventView,\n  getTotalsView,\n  SPAN_RELATIVE_PERIODS,\n  SPAN_RETENTION_DAYS,\n  SPAN_SORT_OPTIONS,\n  SPAN_SORT_TO_FIELDS,\n} from './utils';\n\nconst ANALYTICS_VALUES = {\n  spanOp: (organization: Organization, value: string | undefined) =>\n    trackAdvancedAnalyticsEvent('performance_views.spans.change_op', {\n      organization,\n      operation_name: value,\n    }),\n  sort: (organization: Organization, value: string | undefined) =>\n    trackAdvancedAnalyticsEvent('performance_views.spans.change_sort', {\n      organization,\n      sort_column: value,\n    }),\n};\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projectId: string;\n  setError: SetStateAction<string | undefined>;\n  transactionName: string;\n};\n\nfunction SpansContent(props: Props) {\n  const {location, organization, eventView, projectId, transactionName} = props;\n  const query = decodeScalar(location.query.query, '');\n\n  function handleChange(key: string) {\n    return function (value: string | undefined) {\n      ANALYTICS_VALUES[key]?.(organization, value);\n\n      const queryParams = normalizeDateTimeParams({\n        ...(location.query || {}),\n        [key]: value,\n      });\n\n      // do not propagate pagination when making a new search\n      const toOmit = ['cursor'];\n      if (!defined(value)) {\n        toOmit.push(key);\n      }\n      const searchQueryParams = omit(queryParams, toOmit);\n\n      browserHistory.push({\n        ...location,\n        query: searchQueryParams,\n      });\n    };\n  }\n\n  const spanOp = decodeScalar(location.query.spanOp);\n  const spanGroup = decodeScalar(location.query.spanGroup);\n  const sort = getSuspectSpanSortFromEventView(eventView);\n  const spansView = getSpansEventView(eventView, sort.field);\n  const totalsView = getTotalsView(eventView);\n\n  const {projects} = useProjects();\n\n  return (\n    <Layout.Main fullWidth>\n      <FilterActions>\n        <OpsFilter\n          location={location}\n          eventView={eventView}\n          organization={organization}\n          handleOpChange={handleChange('spanOp')}\n          transactionName={transactionName}\n        />\n        <PageFilterBar condensed>\n          <EnvironmentPageFilter />\n          <DatePageFilter\n            alignDropdown=\"left\"\n            maxPickableDays={SPAN_RETENTION_DAYS}\n            relativeOptions={SPAN_RELATIVE_PERIODS}\n          />\n        </PageFilterBar>\n        <StyledSearchBar\n          organization={organization}\n          projectIds={eventView.project}\n          query={query}\n          fields={eventView.fields}\n          onSearch={handleChange('query')}\n        />\n        <CompactSelect\n          value={sort.field}\n          options={SPAN_SORT_OPTIONS.map(opt => ({value: opt.field, label: opt.label}))}\n          onChange={opt => handleChange('sort')(opt.value)}\n          triggerProps={{prefix: sort.prefix}}\n          triggerLabel={sort.label}\n        />\n      </FilterActions>\n      <DiscoverQuery\n        eventView={totalsView}\n        orgSlug={organization.slug}\n        location={location}\n        referrer=\"api.performance.transaction-spans\"\n        cursor=\"0:0:1\"\n        noPagination\n        useEvents\n      >\n        {({tableData}) => {\n          const totals: SpansTotalValues | null =\n            (tableData?.data?.[0] as SpansTotalValues | undefined) ?? null;\n          return (\n            <SuspectSpansQuery\n              location={location}\n              orgSlug={organization.slug}\n              eventView={spansView}\n              limit={10}\n              perSuspect={0}\n              spanOps={defined(spanOp) ? [spanOp] : []}\n              spanGroups={defined(spanGroup) ? [spanGroup] : []}\n            >\n              {({suspectSpans, isLoading, pageLinks}) => (\n                <Fragment>\n                  <SuspectSpansTable\n                    location={location}\n                    organization={organization}\n                    transactionName={transactionName}\n                    project={projects.find(p => p.id === projectId)}\n                    isLoading={isLoading}\n                    suspectSpans={suspectSpans ?? []}\n                    totals={totals}\n                    sort={sort.field}\n                  />\n                  <Pagination pageLinks={pageLinks ?? null} />\n                </Fragment>\n              )}\n            </SuspectSpansQuery>\n          );\n        }}\n      </DiscoverQuery>\n    </Layout.Main>\n  );\n}\n\nfunction getSpansEventView(eventView: EventView, sort: SpanSort): EventView {\n  eventView = eventView.clone();\n  const fields = SPAN_SORT_TO_FIELDS[sort];\n  eventView.fields = fields ? fields.map(field => ({field})) : [];\n  return eventView;\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(3, min-content);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: auto auto 1fr auto;\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    order: 1;\n    grid-column: 1/5;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    order: initial;\n    grid-column: auto;\n  }\n`;\n\nexport default SpansContent;\n","import {Location} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport PageLayout from '../pageLayout';\nimport Tab from '../tabs';\n\nimport SpansContent from './content';\nimport {generateSpansEventView} from './utils';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n};\n\nfunction TransactionSpans(props: Props) {\n  const {location, organization, projects} = props;\n\n  return (\n    <PageLayout\n      location={location}\n      organization={organization}\n      projects={projects}\n      tab={Tab.Spans}\n      getDocumentTitle={getDocumentTitle}\n      generateEventView={generateSpansEventView}\n      childComponent={SpansContent}\n    />\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Performance')].join(' - ');\n  }\n\n  return [t('Summary'), t('Performance')].join(' - ');\n}\n\nexport default withProjects(withOrganization(TransactionSpans));\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {pickBarColor} from 'sentry/components/performance/waterfall/utils';\nimport {IconFilter, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SpanOpsQuery from 'sentry/utils/performance/suspectSpans/spanOpsQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\ntype Props = {\n  eventView: EventView;\n  handleOpChange: (op: string | undefined) => void;\n  location: Location;\n  organization: Organization;\n  transactionName: string;\n};\n\nfunction getMenuOptions({spanOps, isLoading, error}) {\n  if (isLoading) {\n    return [{key: 'isLoading', disabled: true, label: t('Loading…')}];\n  }\n\n  if (error) {\n    return [\n      {\n        key: 'error',\n        disabled: true,\n        label: t('Error loading operations'),\n        leadingItems: <IconWarning color=\"subText\" />,\n      },\n    ];\n  }\n\n  return spanOps.map(spanOp => ({\n    value: spanOp.op,\n    label: spanOp.op,\n    leadingItems: <OperationDot backgroundColor={pickBarColor(spanOp.op)} />,\n  }));\n}\n\nexport default function OpsFilter(props: Props) {\n  const {location, eventView, organization, handleOpChange, transactionName} = props;\n\n  // clear out the query string from the event view\n  // as we want to restrict queries to the op names\n  const conditions = new MutableSearch('');\n  conditions\n    .setFilterValues('event.type', ['transaction'])\n    .setFilterValues('transaction', [transactionName]);\n  const opsFilterEventView = eventView.clone();\n  opsFilterEventView.query = conditions.formatString();\n\n  const currentOp = decodeScalar(location.query.spanOp);\n\n  return (\n    <SpanOpsQuery\n      location={location}\n      orgSlug={organization.slug}\n      eventView={opsFilterEventView}\n      cursor=\"0:0:1\"\n      noPagination\n    >\n      {results => (\n        <CompactSelect\n          isClearable\n          maxMenuWidth=\"24rem\"\n          menuTitle={t('Filter by operation')}\n          options={getMenuOptions(results)}\n          onChange={opt => handleOpChange(opt?.value)}\n          value={currentOp}\n          triggerLabel={currentOp ?? t('Filter')}\n          triggerProps={{icon: <IconFilter />}}\n        />\n      )}\n    </SpanOpsQuery>\n  );\n}\n\nconst OperationDot = styled('div')<{backgroundColor: string}>`\n  display: block;\n  width: ${space(1)};\n  height: ${space(1)};\n  border-radius: 100%;\n  background-color: ${p => p.backgroundColor};\n`;\n","import {Query} from 'history';\n\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\n\nexport function generateSpanDetailsRoute({\n  orgSlug,\n  spanSlug,\n}: {\n  orgSlug: String;\n  spanSlug: SpanSlug;\n}): string {\n  const spanComponent = `${encodeURIComponent(spanSlug.op)}:${spanSlug.group}`;\n  return `/organizations/${orgSlug}/performance/summary/spans/${spanComponent}/`;\n}\n\nexport function spanDetailsRouteWithQuery({\n  orgSlug,\n  transaction,\n  query,\n  spanSlug,\n  projectID,\n}: {\n  orgSlug: string;\n  query: Query;\n  spanSlug: SpanSlug;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateSpanDetailsRoute({\n    orgSlug,\n    spanSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport enum ZoomKeys {\n  MIN = 'min',\n  MAX = 'max',\n}\n","import {ReactNode} from 'react';\nimport {Location} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {ColumnType, fieldAlignment} from 'sentry/utils/discover/fields';\nimport {Container as TableCellContainer} from 'sentry/utils/discover/styles';\nimport {SuspectSpans} from 'sentry/utils/performance/suspectSpans/types';\n\nimport {spanDetailsRouteWithQuery} from './spanDetails/utils';\nimport {SpanSort, SpanSortOthers, SpanSortPercentiles, SpansTotalValues} from './types';\n\ntype Props = {\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  sort: SpanSort;\n  suspectSpans: SuspectSpans;\n  totals: SpansTotalValues | null;\n  transactionName: string;\n  project?: Project;\n};\n\nexport default function SuspectSpansTable(props: Props) {\n  const {\n    location,\n    organization,\n    transactionName,\n    isLoading,\n    suspectSpans,\n    totals,\n    sort,\n    project,\n  } = props;\n\n  const data: TableDataRowWithExtras[] = suspectSpans.map(suspectSpan => ({\n    operation: suspectSpan.op,\n    group: suspectSpan.group,\n    description: suspectSpan.description,\n    totalCount: suspectSpan.count,\n    frequency:\n      // Frequency is computed using the `uniq` function in ClickHouse.\n      // Because it is an approximation, it can occasionally exceed the number of events.\n      defined(suspectSpan.frequency) && defined(totals?.['count()'])\n        ? Math.min(1, suspectSpan.frequency / totals!['count()'])\n        : null,\n    avgOccurrences: suspectSpan.avgOccurrences,\n    p50ExclusiveTime: suspectSpan.p50ExclusiveTime,\n    p75ExclusiveTime: suspectSpan.p75ExclusiveTime,\n    p95ExclusiveTime: suspectSpan.p95ExclusiveTime,\n    p99ExclusiveTime: suspectSpan.p99ExclusiveTime,\n    sumExclusiveTime: suspectSpan.sumExclusiveTime,\n  }));\n\n  return (\n    <GridEditable\n      isLoading={isLoading}\n      data={data}\n      columnOrder={COLUMN_ORDER[sort].map(column => COLUMNS[column])}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell,\n        renderBodyCell: renderBodyCellWithMeta(\n          location,\n          organization,\n          transactionName,\n          project\n        ),\n      }}\n      location={location}\n    />\n  );\n}\n\nfunction renderHeadCell(column: TableColumn, _index: number): ReactNode {\n  const align = fieldAlignment(column.key, COLUMN_TYPE[column.key]);\n  return (\n    <SortLink\n      title={column.name}\n      align={align}\n      direction={undefined}\n      canSort={false}\n      generateSortLink={() => undefined}\n    />\n  );\n}\n\nfunction renderBodyCellWithMeta(\n  location: Location,\n  organization: Organization,\n  transactionName: string,\n  project?: Project\n) {\n  return (column: TableColumn, dataRow: TableDataRowWithExtras): React.ReactNode => {\n    const fieldRenderer = getFieldRenderer(column.key, COLUMN_TYPE);\n\n    if (column.key === 'description') {\n      const target = spanDetailsRouteWithQuery({\n        orgSlug: organization.slug,\n        transaction: transactionName,\n        query: location.query,\n        spanSlug: {op: dataRow.operation, group: dataRow.group},\n        projectID: project?.id,\n      });\n      return (\n        <TableCellContainer>\n          <Link to={target}>{dataRow[column.key] ?? t('(unnamed span)')}</Link>\n        </TableCellContainer>\n      );\n    }\n\n    return fieldRenderer(dataRow, {location, organization});\n  };\n}\n\ntype TableColumnKey =\n  | 'operation'\n  | 'description'\n  | 'totalCount'\n  | 'frequency'\n  | 'avgOccurrences'\n  | 'p50ExclusiveTime'\n  | 'p75ExclusiveTime'\n  | 'p95ExclusiveTime'\n  | 'p99ExclusiveTime'\n  | 'sumExclusiveTime';\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableDataRowWithExtras = TableDataRow & {\n  group: string;\n};\n\nconst COLUMN_ORDER: Record<SpanSort, TableColumnKey[]> = {\n  [SpanSortOthers.COUNT]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortOthers.AVG_OCCURRENCE]: [\n    'operation',\n    'description',\n    'avgOccurrences',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortOthers.SUM_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P50_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p50ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P75_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P95_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p95ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P99_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p99ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n};\n\nconst COLUMNS: Record<TableColumnKey, TableColumn> = {\n  operation: {\n    key: 'operation',\n    name: t('Span Operation'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  description: {\n    key: 'description',\n    name: t('Span Name'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  totalCount: {\n    key: 'totalCount',\n    name: t('Total Count'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  frequency: {\n    key: 'frequency',\n    name: t('Frequency'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  avgOccurrences: {\n    key: 'avgOccurrences',\n    name: t('Average Occurrences'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p50ExclusiveTime: {\n    key: 'p50ExclusiveTime',\n    name: t('P50 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p75ExclusiveTime: {\n    key: 'p75ExclusiveTime',\n    name: t('P75 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p95ExclusiveTime: {\n    key: 'p95ExclusiveTime',\n    name: t('P95 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p99ExclusiveTime: {\n    key: 'p99ExclusiveTime',\n    name: t('P99 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  sumExclusiveTime: {\n    key: 'sumExclusiveTime',\n    name: t('Total Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nconst COLUMN_TYPE: Record<TableColumnKey, ColumnType> = {\n  operation: 'string',\n  description: 'string',\n  totalCount: 'integer',\n  frequency: 'percentage',\n  avgOccurrences: 'number',\n  p50ExclusiveTime: 'duration',\n  p75ExclusiveTime: 'duration',\n  p95ExclusiveTime: 'duration',\n  p99ExclusiveTime: 'duration',\n  sumExclusiveTime: 'duration',\n};\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nmodule.exports = maxBy;\n"],"names":["omit","Link","IconArrow","SortLink","align","title","canSort","generateSortLink","onClick","direction","target","arrow","StyledLink","props","forwardProps","p","StyledNonLink","StyledIconArrow","withApi","GenericDiscoverQuery","shouldRefetchData","prevProps","nextProps","transactionName","transactionThreshold","transactionThresholdMetric","DiscoverQuery","endpoint","useEvents","afterFetch","data","_","fields","otherMeta","meta","undefined","SpanOpsQuery","tableData","rest","children","spanOps","defined","getSuspectSpanPayload","perSuspect","spanGroups","minExclusiveTime","maxExclusiveTime","payload","spanOp","spanGroup","min_exclusive_time","max_exclusive_time","additionalPayload","eventView","getEventsAPIPayload","location","SuspectSpansQuery","suspectSpans","Fragment","browserHistory","DatePageFilter","EnvironmentPageFilter","SearchBar","CompactSelect","Layout","PageFilterBar","normalizeDateTimeParams","Pagination","space","trackAdvancedAnalyticsEvent","decodeScalar","useProjects","OpsFilter","SuspectSpansTable","getSuspectSpanSortFromEventView","getTotalsView","SPAN_RELATIVE_PERIODS","SPAN_RETENTION_DAYS","SPAN_SORT_OPTIONS","SPAN_SORT_TO_FIELDS","ANALYTICS_VALUES","organization","value","operation_name","sort","sort_column","SpansContent","projectId","query","handleChange","key","queryParams","toOmit","push","searchQueryParams","spansView","getSpansEventView","field","totalsView","projects","project","map","opt","label","prefix","slug","totals","isLoading","pageLinks","find","id","clone","FilterActions","theme","breakpoints","small","xlarge","StyledSearchBar","t","withOrganization","withProjects","PageLayout","Tab","generateSpansEventView","TransactionSpans","Spans","getDocumentTitle","hasTransactionName","String","trim","length","join","pickBarColor","IconFilter","IconWarning","MutableSearch","getMenuOptions","error","disabled","leadingItems","op","handleOpChange","conditions","setFilterValues","opsFilterEventView","formatString","currentOp","results","icon","OperationDot","backgroundColor","generateSpanDetailsRoute","orgSlug","spanSlug","spanComponent","encodeURIComponent","group","spanDetailsRouteWithQuery","transaction","projectID","pathname","environment","statsPeriod","start","end","ZoomKeys","GridEditable","COL_WIDTH_UNDEFINED","getFieldRenderer","fieldAlignment","Container","TableCellContainer","SpanSortOthers","SpanSortPercentiles","suspectSpan","operation","description","totalCount","count","frequency","Math","min","avgOccurrences","p50ExclusiveTime","p75ExclusiveTime","p95ExclusiveTime","p99ExclusiveTime","sumExclusiveTime","COLUMN_ORDER","column","COLUMNS","renderHeadCell","renderBodyCell","renderBodyCellWithMeta","_index","COLUMN_TYPE","name","dataRow","fieldRenderer","COUNT","AVG_OCCURRENCE","SUM_EXCLUSIVE_TIME","P50_EXCLUSIVE_TIME","P75_EXCLUSIVE_TIME","P95_EXCLUSIVE_TIME","P99_EXCLUSIVE_TIME","width"],"sourceRoot":""}