{"version":3,"file":"chunks/app_views_performance_breadcrumb_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/performance/histogram/utils.tsx","webpack:///./app/utils/performance/urls.ts","webpack:///./app/views/performance/breadcrumb.tsx","webpack:///./app/views/performance/transactionSummary/tabs.tsx","webpack:///./app/views/performance/transactionSummary/transactionEvents/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/types.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionTags/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionVitals/utils.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx"],"sourcesContent":["import {ColumnType} from 'sentry/utils/discover/fields';\nimport {getDuration} from 'sentry/utils/formatters';\n\nimport {HistogramData} from './types';\n\nexport function getBucketWidth(data: HistogramData) {\n  // We can assume that all buckets are of equal width, use the first two\n  // buckets to get the width. The value of each histogram function indicates\n  // the beginning of the bucket.\n  return data.length >= 2 ? data[1].bin - data[0].bin : 0;\n}\n\nexport function computeBuckets(data: HistogramData) {\n  const width = getBucketWidth(data);\n\n  return data.map(item => {\n    const bucket = item.bin;\n    return {\n      start: bucket,\n      end: bucket + width,\n    };\n  });\n}\n\nexport function formatHistogramData(\n  data: HistogramData,\n  {\n    precision,\n    type,\n    additionalFieldsFn,\n  }: {\n    additionalFieldsFn?: any;\n    precision?: number;\n    type?: ColumnType;\n  } = {}\n) {\n  const formatter = (value: number): string => {\n    switch (type) {\n      case 'duration':\n        const decimalPlaces = precision ?? (value < 1000 ? 0 : 3);\n        return getDuration(value / 1000, decimalPlaces, true);\n      case 'number':\n        // This is trying to avoid some of potential rounding errors that cause bins\n        // have the same label, if the number of bins doesn't visually match what is\n        // expected, check that this rounding is correct. If this issue persists,\n        // consider formatting the bin as a string in the response\n        const factor = 10 ** (precision ?? 0);\n        return (Math.round((value + Number.EPSILON) * factor) / factor).toLocaleString();\n      default:\n        throw new Error(`Unable to format type: ${type}`);\n    }\n  };\n  return data.map(item => {\n    return {\n      value: item.count,\n      name: formatter(item.bin),\n      ...(additionalFieldsFn?.(item.bin) ?? {}),\n    };\n  });\n}\n","import {LocationDescriptor, Query} from 'history';\n\nimport {spanTargetHash} from 'sentry/components/events/interfaces/spans/utils';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport function getTransactionDetailsUrl(\n  orgSlug: Organization['slug'],\n  eventSlug: string,\n  transaction?: string,\n  query?: Query,\n  spanId?: string\n): LocationDescriptor {\n  const locationQuery = {\n    ...(query || {}),\n    transaction,\n  };\n  if (!defined(locationQuery.transaction)) {\n    delete locationQuery.transaction;\n  }\n\n  const target = {\n    pathname: `/organizations/${orgSlug}/performance/${eventSlug}/`,\n    query: locationQuery,\n    hash: defined(spanId) ? spanTargetHash(spanId) : undefined,\n  };\n  if (!defined(target.hash)) {\n    delete target.hash;\n  }\n\n  return target;\n}\n","import {Location, LocationDescriptor} from 'history';\n\nimport Breadcrumbs, {Crumb} from 'sentry/components/breadcrumbs';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport Tab from './transactionSummary/tabs';\nimport {eventsRouteWithQuery} from './transactionSummary/transactionEvents/utils';\nimport {spansRouteWithQuery} from './transactionSummary/transactionSpans/utils';\nimport {tagsRouteWithQuery} from './transactionSummary/transactionTags/utils';\nimport {vitalsRouteWithQuery} from './transactionSummary/transactionVitals/utils';\nimport {transactionSummaryRouteWithQuery} from './transactionSummary/utils';\nimport {vitalDetailRouteWithQuery} from './vitalDetail/utils';\nimport {getPerformanceLandingUrl} from './utils';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  eventSlug?: string;\n  spanSlug?: SpanSlug;\n  tab?: Tab;\n  traceSlug?: string;\n  transaction?: {\n    name: string;\n    project: string;\n  };\n  vitalName?: string;\n};\n\nfunction Breadcrumb(props: Props) {\n  function getCrumbs() {\n    const crumbs: Crumb[] = [];\n    const {\n      organization,\n      location,\n      transaction,\n      vitalName,\n      spanSlug,\n      eventSlug,\n      traceSlug,\n      tab,\n    } = props;\n\n    const performanceTarget: LocationDescriptor = {\n      pathname: getPerformanceLandingUrl(organization),\n      query: {\n        ...location.query,\n        // clear out the transaction name\n        transaction: undefined,\n      },\n    };\n\n    crumbs.push({\n      to: performanceTarget,\n      label: t('Performance'),\n      preservePageFilters: true,\n    });\n\n    if (vitalName) {\n      const webVitalsTarget = vitalDetailRouteWithQuery({\n        orgSlug: organization.slug,\n        vitalName: 'fcp',\n        projectID: decodeScalar(location.query.project),\n        query: location.query,\n      });\n      crumbs.push({\n        to: webVitalsTarget,\n        label: t('Vital Detail'),\n        preservePageFilters: true,\n      });\n    } else if (transaction) {\n      const routeQuery = {\n        orgSlug: organization.slug,\n        transaction: transaction.name,\n        projectID: transaction.project,\n        query: location.query,\n      };\n\n      switch (tab) {\n        case Tab.Tags: {\n          const tagsTarget = tagsRouteWithQuery(routeQuery);\n          crumbs.push({\n            to: tagsTarget,\n            label: t('Tags'),\n            preservePageFilters: true,\n          });\n          break;\n        }\n        case Tab.Events: {\n          const eventsTarget = eventsRouteWithQuery(routeQuery);\n          crumbs.push({\n            to: eventsTarget,\n            label: t('All Events'),\n            preservePageFilters: true,\n          });\n          break;\n        }\n        case Tab.WebVitals: {\n          const webVitalsTarget = vitalsRouteWithQuery(routeQuery);\n          crumbs.push({\n            to: webVitalsTarget,\n            label: t('Web Vitals'),\n            preservePageFilters: true,\n          });\n          break;\n        }\n        case Tab.Spans: {\n          const spansTarget = spansRouteWithQuery(routeQuery);\n          crumbs.push({\n            to: spansTarget,\n            label: t('Spans'),\n            preservePageFilters: true,\n          });\n          break;\n        }\n        case Tab.TransactionSummary:\n        default: {\n          const summaryTarget = transactionSummaryRouteWithQuery(routeQuery);\n          crumbs.push({\n            to: summaryTarget,\n            label: t('Transaction Summary'),\n            preservePageFilters: true,\n          });\n        }\n      }\n    }\n\n    if (transaction && spanSlug) {\n      crumbs.push({\n        to: '',\n        label: t('Span Summary'),\n      });\n    } else if (transaction && eventSlug) {\n      crumbs.push({\n        to: '',\n        label: t('Event Details'),\n      });\n    } else if (traceSlug) {\n      crumbs.push({\n        to: '',\n        label: t('Trace View'),\n      });\n    }\n\n    return crumbs;\n  }\n\n  return <Breadcrumbs crumbs={getCrumbs()} />;\n}\n\nexport default Breadcrumb;\n","enum Tab {\n  TransactionSummary,\n  WebVitals,\n  Tags,\n  Events,\n  Spans,\n  Anomalies,\n  Replays,\n}\n\nexport default Tab;\n","import {Location, Query} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {filterToField, SpanOperationBreakdownFilter} from '../filter';\nimport {TransactionFilterOptions} from '../utils';\n\nexport enum EventsDisplayFilterName {\n  p50 = 'p50',\n  p75 = 'p75',\n  p95 = 'p95',\n  p99 = 'p99',\n  p100 = 'p100',\n}\n\nexport type EventsDisplayFilter = {\n  label: string;\n  name: EventsDisplayFilterName;\n  query?: string[][];\n  sort?: {field: string; kind: 'desc' | 'asc'};\n};\n\nexport type EventsFilterOptions = {\n  [name in EventsDisplayFilterName]: EventsDisplayFilter;\n};\n\nexport type EventsFilterPercentileValues = {\n  [name in Exclude<EventsDisplayFilterName, EventsDisplayFilterName.p100>]: number;\n};\n\nexport function getEventsFilterOptions(\n  spanOperationBreakdownFilter: SpanOperationBreakdownFilter,\n  percentileValues?: EventsFilterPercentileValues\n): EventsFilterOptions {\n  const {p99, p95, p75, p50} = percentileValues\n    ? percentileValues\n    : {p99: 0, p95: 0, p75: 0, p50: 0};\n  return {\n    [EventsDisplayFilterName.p50]: {\n      name: EventsDisplayFilterName.p50,\n      query: p50 ? [['transaction.duration', `<=${p50.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p50'),\n    },\n    [EventsDisplayFilterName.p75]: {\n      name: EventsDisplayFilterName.p75,\n      query: p75 ? [['transaction.duration', `<=${p75.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p75'),\n    },\n    [EventsDisplayFilterName.p95]: {\n      name: EventsDisplayFilterName.p95,\n      query: p95 ? [['transaction.duration', `<=${p95.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p95'),\n    },\n    [EventsDisplayFilterName.p99]: {\n      name: EventsDisplayFilterName.p99,\n      query: p99 ? [['transaction.duration', `<=${p99.toFixed(0)}`]] : undefined,\n      sort: {\n        kind: 'desc',\n        field: filterToField(spanOperationBreakdownFilter) || 'transaction.duration',\n      },\n      label: t('p99'),\n    },\n    [EventsDisplayFilterName.p100]: {\n      name: EventsDisplayFilterName.p100,\n      label: t('p100'),\n    },\n  };\n}\n\nexport function eventsRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = `/organizations/${orgSlug}/performance/summary/events/`;\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nfunction stringToFilter(option: string) {\n  if (\n    Object.values(EventsDisplayFilterName).includes(option as EventsDisplayFilterName)\n  ) {\n    return option as EventsDisplayFilterName;\n  }\n\n  return EventsDisplayFilterName.p100;\n}\nexport function decodeEventsDisplayFilterFromLocation(location: Location) {\n  return stringToFilter(\n    decodeScalar(location.query.showTransactions, EventsDisplayFilterName.p100)\n  );\n}\n\nexport function filterEventsDisplayToLocationQuery(\n  option: EventsDisplayFilterName,\n  spanOperationBreakdownFilter: SpanOperationBreakdownFilter\n) {\n  const eventsFilterOptions = getEventsFilterOptions(spanOperationBreakdownFilter);\n  const kind = eventsFilterOptions[option].sort?.kind;\n  const field = eventsFilterOptions[option].sort?.field;\n\n  const query: {showTransactions: string; sort?: string} = {\n    showTransactions: option,\n  };\n  if (kind && field) {\n    query.sort = `${kind === 'desc' ? '-' : ''}${field}`;\n  }\n  return query;\n}\n\nexport function mapShowTransactionToPercentile(\n  showTransaction\n): EventsDisplayFilterName | undefined {\n  switch (showTransaction) {\n    case TransactionFilterOptions.OUTLIER:\n      return EventsDisplayFilterName.p100;\n    case TransactionFilterOptions.SLOW:\n      return EventsDisplayFilterName.p95;\n    default:\n      return undefined;\n  }\n}\n","export enum SpanSortPercentiles {\n  P50_EXCLUSIVE_TIME = 'p50ExclusiveTime',\n  P75_EXCLUSIVE_TIME = 'p75ExclusiveTime',\n  P95_EXCLUSIVE_TIME = 'p95ExclusiveTime',\n  P99_EXCLUSIVE_TIME = 'p99ExclusiveTime',\n}\n\nexport enum SpanSortOthers {\n  COUNT = 'count',\n  AVG_OCCURRENCE = 'avgOccurrence',\n  SUM_EXCLUSIVE_TIME = 'sumExclusiveTime',\n}\n\nexport type SpanSort = SpanSortPercentiles | SpanSortOthers;\n\nexport type SpanSortOption = {\n  field: SpanSort;\n  label: string;\n  prefix: string;\n};\n\nexport type SpansTotalValues = {\n  'count()': number;\n};\n","import {Location, Query} from 'history';\nimport pick from 'lodash/pick';\n\nimport {DEFAULT_RELATIVE_PERIODS} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {isAggregateField} from 'sentry/utils/discover/fields';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {SpanSort, SpanSortOption, SpanSortOthers, SpanSortPercentiles} from './types';\n\nexport function generateSpansRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/spans/`;\n}\n\nexport function spansRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateSpansRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport const SPAN_RETENTION_DAYS = 30;\n\nexport const SPAN_RELATIVE_PERIODS = pick(DEFAULT_RELATIVE_PERIODS, [\n  '1h',\n  '24h',\n  '7d',\n  '14d',\n  '30d',\n]);\n\nexport const SPAN_SORT_OPTIONS: SpanSortOption[] = [\n  {\n    prefix: t('Sort By'),\n    label: t('Total Self Time'),\n    field: SpanSortOthers.SUM_EXCLUSIVE_TIME,\n  },\n  {\n    prefix: t('Sort By'),\n    label: t('Average Count'),\n    field: SpanSortOthers.AVG_OCCURRENCE,\n  },\n  {\n    prefix: t('Sort By'),\n    label: t('Total Count'),\n    field: SpanSortOthers.COUNT,\n  },\n  {\n    prefix: t('Sort By'),\n    label: t('p50 Self Time'),\n    field: SpanSortPercentiles.P50_EXCLUSIVE_TIME,\n  },\n  {\n    prefix: t('Sort By'),\n    label: t('p75 Self Time'),\n    field: SpanSortPercentiles.P75_EXCLUSIVE_TIME,\n  },\n  {\n    prefix: t('Sort By'),\n    label: t('p95 Self Time'),\n    field: SpanSortPercentiles.P95_EXCLUSIVE_TIME,\n  },\n  {\n    prefix: t('Sort By'),\n    label: t('p99 Self Time'),\n    field: SpanSortPercentiles.P99_EXCLUSIVE_TIME,\n  },\n];\n\nconst DEFAULT_SORT = SpanSortOthers.SUM_EXCLUSIVE_TIME;\n\nfunction getSuspectSpanSort(sort: string): SpanSortOption {\n  const selected = SPAN_SORT_OPTIONS.find(option => option.field === sort);\n  if (selected) {\n    return selected;\n  }\n  return SPAN_SORT_OPTIONS.find(option => option.field === DEFAULT_SORT)!;\n}\n\nexport function getSuspectSpanSortFromLocation(\n  location: Location,\n  sortKey: string = 'sort'\n): SpanSortOption {\n  const sort = decodeScalar(location?.query?.[sortKey]) ?? DEFAULT_SORT;\n  return getSuspectSpanSort(sort);\n}\n\nexport function getSuspectSpanSortFromEventView(eventView: EventView): SpanSortOption {\n  const sort = eventView.sorts.length ? eventView.sorts[0].field : DEFAULT_SORT;\n  return getSuspectSpanSort(sort);\n}\n\nexport function parseSpanSlug(spanSlug: string | undefined): SpanSlug | undefined {\n  if (!defined(spanSlug)) {\n    return undefined;\n  }\n\n  const delimiterPos = spanSlug.lastIndexOf(':');\n  if (delimiterPos < 0) {\n    return undefined;\n  }\n\n  const op = spanSlug.slice(0, delimiterPos);\n  const group = spanSlug.slice(delimiterPos + 1);\n\n  return {op, group};\n}\n\nexport function generateSpansEventView({\n  location,\n  transactionName,\n}: {\n  location: Location;\n  transactionName: string;\n}): EventView {\n  const query = decodeScalar(location.query.query, '');\n  const conditions = new MutableSearch(query);\n\n  conditions.setFilterValues('event.type', ['transaction']);\n  conditions.setFilterValues('transaction', [transactionName]);\n\n  Object.keys(conditions.filters).forEach(field => {\n    if (isAggregateField(field)) {\n      conditions.removeFilter(field);\n    }\n  });\n\n  const eventView = EventView.fromNewQueryWithLocation(\n    {\n      id: undefined,\n      version: 2,\n      name: transactionName,\n      fields: [...Object.values(SpanSortOthers), ...Object.values(SpanSortPercentiles)],\n      query: conditions.formatString(),\n      projects: [],\n    },\n    location\n  );\n\n  const sort = getSuspectSpanSortFromLocation(location);\n  return eventView.withSorts([{field: sort.field, kind: 'desc'}]);\n}\n\n/**\n * For the totals view, we want to get some transaction level stats like\n * the number of transactions and the sum of the transaction duration.\n * This requires the removal of any aggregate conditions as they can result\n * in unexpected empty responses.\n */\nexport function getTotalsView(eventView: EventView): EventView {\n  const totalsView = eventView.withColumns([\n    {kind: 'function', function: ['count', '', undefined, undefined]},\n  ]);\n\n  const conditions = new MutableSearch(eventView.query);\n\n  // filter out any aggregate conditions\n  Object.keys(conditions.filters).forEach(field => {\n    if (isAggregateField(field)) {\n      conditions.removeFilter(field);\n    }\n  });\n\n  totalsView.query = conditions.formatString();\n  return totalsView;\n}\n\nexport const SPAN_SORT_TO_FIELDS: Record<SpanSort, string[]> = {\n  [SpanSortOthers.SUM_EXCLUSIVE_TIME]: [\n    'percentileArray(spans_exclusive_time, 0.75)',\n    'count()',\n    'count_unique(id)',\n    'sumArray(spans_exclusive_time)',\n  ],\n  [SpanSortOthers.AVG_OCCURRENCE]: [\n    'percentileArray(spans_exclusive_time, 0.75)',\n    'count()',\n    'count_unique(id)',\n    'equation|count() / count_unique(id)',\n    'sumArray(spans_exclusive_time)',\n  ],\n  [SpanSortOthers.COUNT]: [\n    'percentileArray(spans_exclusive_time, 0.75)',\n    'count()',\n    'count_unique(id)',\n    'sumArray(spans_exclusive_time)',\n  ],\n  [SpanSortPercentiles.P50_EXCLUSIVE_TIME]: [\n    'percentileArray(spans_exclusive_time, 0.5)',\n    'count()',\n    'count_unique(id)',\n    'sumArray(spans_exclusive_time)',\n  ],\n  [SpanSortPercentiles.P75_EXCLUSIVE_TIME]: [\n    'percentileArray(spans_exclusive_time, 0.75)',\n    'count()',\n    'count_unique(id)',\n    'sumArray(spans_exclusive_time)',\n  ],\n  [SpanSortPercentiles.P95_EXCLUSIVE_TIME]: [\n    'percentileArray(spans_exclusive_time, 0.95)',\n    'count()',\n    'count_unique(id)',\n    'sumArray(spans_exclusive_time)',\n  ],\n  [SpanSortPercentiles.P99_EXCLUSIVE_TIME]: [\n    'percentileArray(spans_exclusive_time, 0.99)',\n    'count()',\n    'count_unique(id)',\n    'sumArray(spans_exclusive_time)',\n  ],\n};\n\nexport function getExclusiveTimeDisplayedValue(value: string): string {\n  return value.replace('exclusive', 'self');\n}\n","import {Location, Query} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nexport function generateTagsRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/tags/`;\n}\n\nexport function decodeSelectedTagKey(location: Location): string | undefined {\n  return decodeScalar(location.query.tagKey);\n}\n\nexport function trackTagPageInteraction(organization: Organization) {\n  trackAnalyticsEvent({\n    eventKey: 'performance_views.tags.interaction',\n    eventName: 'Performance Views: Tag Page - Interaction',\n    organization_id: parseInt(organization.id, 10),\n  });\n}\n\nexport function tagsRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateTagsRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n      tagKey: query.tagKey,\n    },\n  };\n}\n\nexport function getTagSortForTagsPage(location: Location) {\n  // Retrieves the tag from the same query param segment explorer uses, but removes columns that aren't supported.\n  let tagSort = decodeScalar(location.query?.tagSort) ?? '-frequency';\n\n  if (['sumdelta'].find(denied => tagSort?.includes(denied))) {\n    tagSort = '-frequency';\n  }\n\n  return tagSort;\n}\n\n// TODO(k-fish): Improve meta of backend response to return these directly\nexport function parseHistogramBucketInfo(row: {[key: string]: React.ReactText}) {\n  const field = Object.keys(row).find(f => f.includes('histogram'));\n  if (!field) {\n    return undefined;\n  }\n  const parts = field.split('_');\n  return {\n    histogramField: field,\n    bucketSize: parseInt(parts[parts.length - 3], 10),\n    offset: parseInt(parts[parts.length - 2], 10),\n    multiplier: parseInt(parts[parts.length - 1], 10),\n  };\n}\n","import type {ECharts} from 'echarts';\nimport {Query} from 'history';\n\nimport {WebVital} from 'sentry/utils/fields';\nimport {HistogramData} from 'sentry/utils/performance/histogram/types';\nimport {getBucketWidth} from 'sentry/utils/performance/histogram/utils';\nimport {VitalsData} from 'sentry/utils/performance/vitals/vitalsCardsDiscoverQuery';\n\nimport {Point, Rectangle} from './types';\n\nexport function generateVitalsRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/vitals/`;\n}\n\nexport function vitalsRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateVitalsRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\n/**\n * Given a value on the x-axis, return the index of the nearest bucket or null\n * if it cannot be found.\n *\n * A bucket contains a range of values, and nearest is defined as the bucket the\n * value will fall in.\n */\nexport function findNearestBucketIndex(\n  chartData: HistogramData,\n  xAxis: number\n): number | null {\n  const width = getBucketWidth(chartData);\n  // it's possible that the data is not available yet or the x axis is out of range\n  if (!chartData.length || xAxis >= chartData[chartData.length - 1].bin + width) {\n    return null;\n  }\n  if (xAxis < chartData[0].bin) {\n    return -1;\n  }\n\n  return Math.floor((xAxis - chartData[0].bin) / width);\n}\n\n/**\n * To compute pixel coordinates, we need at least 2 unique points on the chart.\n * The two points must have different x axis and y axis values for it to work.\n *\n * If all bars have the same y value, pick the most naive reference rect. This\n * may result in floating point errors, but should be okay for our purposes.\n */\nexport function getRefRect(chartData: HistogramData): Rectangle | null {\n  // not enough points to construct 2 reference points\n  if (chartData.length < 2) {\n    return null;\n  }\n\n  for (let i = 0; i < chartData.length; i++) {\n    const data1 = chartData[i];\n    for (let j = i + 1; j < chartData.length; j++) {\n      const data2 = chartData[j];\n\n      if (data1.bin !== data2.bin && data1.count !== data2.count) {\n        return {\n          point1: {x: i, y: Math.min(data1.count, data2.count)},\n          point2: {x: j, y: Math.max(data1.count, data2.count)},\n        };\n      }\n    }\n  }\n\n  // all data points have the same count, just pick any 2 histogram bins\n  // and use 0 and 1 as the count as we can rely on them being on the graph\n  return {\n    point1: {x: 0, y: 0},\n    point2: {x: 1, y: 1},\n  };\n}\n\n/**\n * Given an ECharts instance and a rectangle defined in terms of the x and y axis,\n * compute the corresponding pixel coordinates. If it cannot be done, return null.\n */\nexport function asPixelRect(chartRef: ECharts, dataRect: Rectangle): Rectangle | null {\n  const point1 = chartRef.convertToPixel({xAxisIndex: 0, yAxisIndex: 0}, [\n    dataRect.point1.x,\n    dataRect.point1.y,\n  ]);\n\n  if (isNaN(point1?.[0]) || isNaN(point1?.[1])) {\n    return null;\n  }\n\n  const point2 = chartRef.convertToPixel({xAxisIndex: 0, yAxisIndex: 0}, [\n    dataRect.point2.x,\n    dataRect.point2.y,\n  ]);\n\n  if (isNaN(point2?.[0]) || isNaN(point2?.[1])) {\n    return null;\n  }\n\n  return {\n    point1: {x: point1[0], y: point1[1]},\n    point2: {x: point2[0], y: point2[1]},\n  };\n}\n\n/**\n * Given a point on a source rectangle, map it to the corresponding point on the\n * destination rectangle. Assumes that the two rectangles are related by a simple\n * transformation containing only translations and scaling.\n */\nexport function mapPoint(\n  point: Point,\n  srcRect: Rectangle,\n  destRect: Rectangle\n): Point | null {\n  if (\n    srcRect.point1.x === srcRect.point2.x ||\n    srcRect.point1.y === srcRect.point2.y ||\n    destRect.point1.x === destRect.point2.x ||\n    destRect.point1.y === destRect.point2.y\n  ) {\n    return null;\n  }\n\n  const xPercentage =\n    (point.x - srcRect.point1.x) / (srcRect.point2.x - srcRect.point1.x);\n  const yPercentage =\n    (point.y - srcRect.point1.y) / (srcRect.point2.y - srcRect.point1.y);\n\n  return {\n    x: destRect.point1.x + (destRect.point2.x - destRect.point1.x) * xPercentage,\n    y: destRect.point1.y + (destRect.point2.y - destRect.point1.y) * yPercentage,\n  };\n}\n\nexport function isMissingVitalsData(\n  vitalsData: VitalsData | null,\n  allVitals: WebVital[]\n): boolean {\n  if (!vitalsData || allVitals.some(vital => !vitalsData[vital])) {\n    return true;\n  }\n\n  const measurementsWithoutCounts = Object.values(vitalsData).filter(\n    vitalObj => vitalObj.total === 0\n  );\n  return measurementsWithoutCounts.length > 0;\n}\n","import styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n"],"names":["getDuration","getBucketWidth","data","length","bin","computeBuckets","width","map","item","bucket","start","end","formatHistogramData","precision","type","additionalFieldsFn","formatter","value","decimalPlaces","factor","Math","round","Number","EPSILON","toLocaleString","Error","count","name","spanTargetHash","defined","getTransactionDetailsUrl","orgSlug","eventSlug","transaction","query","spanId","locationQuery","target","pathname","hash","undefined","Breadcrumbs","t","decodeScalar","Tab","eventsRouteWithQuery","spansRouteWithQuery","tagsRouteWithQuery","vitalsRouteWithQuery","transactionSummaryRouteWithQuery","vitalDetailRouteWithQuery","getPerformanceLandingUrl","Breadcrumb","props","getCrumbs","crumbs","organization","location","vitalName","spanSlug","traceSlug","tab","performanceTarget","push","to","label","preservePageFilters","webVitalsTarget","slug","projectID","project","routeQuery","Tags","tagsTarget","Events","eventsTarget","WebVitals","Spans","spansTarget","TransactionSummary","summaryTarget","filterToField","TransactionFilterOptions","EventsDisplayFilterName","getEventsFilterOptions","spanOperationBreakdownFilter","percentileValues","p99","p95","p75","p50","toFixed","sort","kind","field","p100","environment","statsPeriod","stringToFilter","option","Object","values","includes","decodeEventsDisplayFilterFromLocation","showTransactions","filterEventsDisplayToLocationQuery","eventsFilterOptions","mapShowTransactionToPercentile","showTransaction","OUTLIER","SLOW","SpanSortPercentiles","SpanSortOthers","pick","DEFAULT_RELATIVE_PERIODS","EventView","isAggregateField","MutableSearch","generateSpansRoute","SPAN_RETENTION_DAYS","SPAN_RELATIVE_PERIODS","SPAN_SORT_OPTIONS","prefix","SUM_EXCLUSIVE_TIME","AVG_OCCURRENCE","COUNT","P50_EXCLUSIVE_TIME","P75_EXCLUSIVE_TIME","P95_EXCLUSIVE_TIME","P99_EXCLUSIVE_TIME","DEFAULT_SORT","getSuspectSpanSort","selected","find","getSuspectSpanSortFromLocation","sortKey","getSuspectSpanSortFromEventView","eventView","sorts","parseSpanSlug","delimiterPos","lastIndexOf","op","slice","group","generateSpansEventView","transactionName","conditions","setFilterValues","keys","filters","forEach","removeFilter","fromNewQueryWithLocation","id","version","fields","formatString","projects","withSorts","getTotalsView","totalsView","withColumns","function","SPAN_SORT_TO_FIELDS","getExclusiveTimeDisplayedValue","replace","trackAnalyticsEvent","generateTagsRoute","decodeSelectedTagKey","tagKey","trackTagPageInteraction","eventKey","eventName","organization_id","parseInt","getTagSortForTagsPage","tagSort","denied","parseHistogramBucketInfo","row","f","parts","split","histogramField","bucketSize","offset","multiplier","generateVitalsRoute","findNearestBucketIndex","chartData","xAxis","floor","getRefRect","i","data1","j","data2","point1","x","y","min","point2","max","asPixelRect","chartRef","dataRect","convertToPixel","xAxisIndex","yAxisIndex","isNaN","mapPoint","point","srcRect","destRect","xPercentage","yPercentage","isMissingVitalsData","vitalsData","allVitals","some","vital","measurementsWithoutCounts","filter","vitalObj","total","space","generateEventSlug","getTraceDetailsUrl","generateTransactionSummaryRoute","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","unselectedSeries","display","trendFunction","trendColumn","additionalQuery","searchFilter","generateTraceLink","dateSelection","tableRow","_query","traceId","trace","generateTransactionLink","SidebarSpacer"],"sourceRoot":""}