{"version":3,"file":"chunks/app_components_modals_widgetViewerModal_tsx-app_utils_discover_charts_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/modals/widgetViewerModal.tsx","webpack:///./app/components/modals/widgetViewerModal/widgetViewerTableCell.tsx","webpack:///./app/components/pagination.tsx","webpack:///./app/utils/discover/charts.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {Fragment, memo, useEffect, useMemo, useRef, useState} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {components} from 'react-select';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport {truncate} from '@sentry/utils';\nimport type {DataZoomComponentOption} from 'echarts';\nimport {Location} from 'history';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport trimStart from 'lodash/trimStart';\nimport moment from 'moment';\n\nimport {fetchTotalCount} from 'sentry/actionCreators/events';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport Option from 'sentry/components/forms/selectOption';\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport Pagination from 'sentry/components/pagination';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {parseSearch} from 'sentry/components/searchSyntax/parser';\nimport HighlightQuery from 'sentry/components/searchSyntax/renderer';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters, SelectValue} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport {TableDataWithTitle} from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  isAggregateField,\n  isEquation,\n  isEquationAlias,\n} from 'sentry/utils/discover/fields';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport {decodeInteger, decodeList, decodeScalar} from 'sentry/utils/queryString';\nimport useApi from 'sentry/utils/useApi';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport {DisplayType, Widget, WidgetType} from 'sentry/views/dashboardsV2/types';\nimport {\n  eventViewFromWidget,\n  getFieldsFromEquations,\n  getNumEquations,\n  getWidgetDiscoverUrl,\n  getWidgetIssueUrl,\n  getWidgetReleasesUrl,\n  isCustomMeasurementWidget,\n} from 'sentry/views/dashboardsV2/utils';\nimport WidgetCardChart, {\n  AugmentedEChartDataZoomHandler,\n  SLIDER_HEIGHT,\n} from 'sentry/views/dashboardsV2/widgetCard/chart';\nimport {\n  DashboardsMEPProvider,\n  useDashboardsMEPContext,\n} from 'sentry/views/dashboardsV2/widgetCard/dashboardsMEPContext';\nimport {GenericWidgetQueriesChildrenProps} from 'sentry/views/dashboardsV2/widgetCard/genericWidgetQueries';\nimport IssueWidgetQueries from 'sentry/views/dashboardsV2/widgetCard/issueWidgetQueries';\nimport ReleaseWidgetQueries from 'sentry/views/dashboardsV2/widgetCard/releaseWidgetQueries';\nimport {WidgetCardChartContainer} from 'sentry/views/dashboardsV2/widgetCard/widgetCardChartContainer';\nimport WidgetQueries from 'sentry/views/dashboardsV2/widgetCard/widgetQueries';\nimport {decodeColumnOrder} from 'sentry/views/eventsV2/utils';\n\nimport {WidgetViewerQueryField} from './widgetViewerModal/utils';\nimport {\n  renderDiscoverGridHeaderCell,\n  renderGridBodyCell,\n  renderIssueGridHeaderCell,\n  renderReleaseGridHeaderCell,\n} from './widgetViewerModal/widgetViewerTableCell';\n\nexport interface WidgetViewerModalOptions {\n  organization: Organization;\n  widget: Widget;\n  onEdit?: () => void;\n  pageLinks?: string;\n  seriesData?: Series[];\n  seriesResultsType?: string;\n  tableData?: TableDataWithTitle[];\n  totalIssuesCount?: string;\n}\n\ninterface Props extends ModalRenderProps, WithRouterProps, WidgetViewerModalOptions {\n  organization: Organization;\n  selection: PageFilters;\n}\n\nconst FULL_TABLE_ITEM_LIMIT = 20;\nconst HALF_TABLE_ITEM_LIMIT = 10;\nconst GEO_COUNTRY_CODE = 'geo.country_code';\nconst HALF_CONTAINER_HEIGHT = 300;\nconst EMPTY_QUERY_NAME = '(Empty Query Condition)';\n\nconst shouldWidgetCardChartMemo = (prevProps, props) => {\n  const selectionMatches = props.selection === prevProps.selection;\n  const sortMatches =\n    props.location.query[WidgetViewerQueryField.SORT] ===\n    prevProps.location.query[WidgetViewerQueryField.SORT];\n  const chartZoomOptionsMatches = isEqual(\n    props.chartZoomOptions,\n    prevProps.chartZoomOptions\n  );\n  const isNotTopNWidget =\n    props.widget.displayType !== DisplayType.TOP_N && !defined(props.widget.limit);\n  return selectionMatches && chartZoomOptionsMatches && (sortMatches || isNotTopNWidget);\n};\n\n// WidgetCardChartContainer and WidgetCardChart rerenders if selection was changed.\n// This is required because we want to prevent ECharts interactions from causing\n// unnecessary rerenders which can break legends and zoom functionality.\nconst MemoizedWidgetCardChartContainer = memo(\n  WidgetCardChartContainer,\n  shouldWidgetCardChartMemo\n);\nconst MemoizedWidgetCardChart = memo(WidgetCardChart, shouldWidgetCardChartMemo);\n\nasync function fetchDiscoverTotal(\n  api: Client,\n  organization: Organization,\n  location: Location,\n  eventView: EventView\n): Promise<string | undefined> {\n  if (!eventView.isValid()) {\n    return undefined;\n  }\n\n  try {\n    const total = await fetchTotalCount(\n      api,\n      organization.slug,\n      eventView.getEventsAPIPayload(location)\n    );\n    return total.toLocaleString();\n  } catch (err) {\n    Sentry.captureException(err);\n    return undefined;\n  }\n}\n\nfunction WidgetViewerModal(props: Props) {\n  const {\n    organization,\n    widget,\n    selection,\n    location,\n    Footer,\n    Body,\n    Header,\n    closeModal,\n    onEdit,\n    router,\n    routes,\n    params,\n    seriesData,\n    tableData,\n    totalIssuesCount,\n    pageLinks: defaultPageLinks,\n    seriesResultsType,\n  } = props;\n  const shouldShowSlider = organization.features.includes('widget-viewer-modal-minimap');\n  // Get widget zoom from location\n  // We use the start and end query params for just the initial state\n  const start = decodeScalar(location.query[WidgetViewerQueryField.START]);\n  const end = decodeScalar(location.query[WidgetViewerQueryField.END]);\n  const isTableWidget = widget.displayType === DisplayType.TABLE;\n  const locationPageFilter = useMemo(\n    () =>\n      start && end\n        ? {\n            ...selection,\n            datetime: {start, end, period: null, utc: null},\n          }\n        : selection,\n    [start, end, selection]\n  );\n\n  const [chartUnmodified, setChartUnmodified] = useState<boolean>(true);\n\n  const [chartZoomOptions, setChartZoomOptions] = useState<DataZoomComponentOption>({\n    start: 0,\n    end: 100,\n  });\n\n  // We wrap the modalChartSelection in a useRef because we do not want to recalculate this value\n  // (which would cause an unnecessary rerender on calculation) except for the initial load.\n  // We use this for when a user visit a widget viewer url directly.\n  const [modalTableSelection, setModalTableSelection] =\n    useState<PageFilters>(locationPageFilter);\n  const modalChartSelection = useRef(modalTableSelection);\n\n  // Detect when a user clicks back and set the PageFilter state to match the location\n  // We need to use useEffect to prevent infinite looping rerenders due to the setModalTableSelection call\n  useEffect(() => {\n    if (location.action === 'POP') {\n      setModalTableSelection(locationPageFilter);\n      if (start && end) {\n        setChartZoomOptions({\n          startValue: moment.utc(start).unix() * 1000,\n          endValue: moment.utc(end).unix() * 1000,\n        });\n      } else {\n        setChartZoomOptions({start: 0, end: 100});\n      }\n    }\n  }, [end, location, locationPageFilter, start]);\n\n  // Get legends toggle settings from location\n  // We use the legend query params for just the initial state\n  const [disabledLegends, setDisabledLegends] = useState<{[key: string]: boolean}>(\n    decodeList(location.query[WidgetViewerQueryField.LEGEND]).reduce((acc, legend) => {\n      acc[legend] = false;\n      return acc;\n    }, {})\n  );\n  const [totalResults, setTotalResults] = useState<string | undefined>();\n\n  // Get query selection settings from location\n  const selectedQueryIndex =\n    decodeInteger(location.query[WidgetViewerQueryField.QUERY]) ?? 0;\n\n  // Get pagination settings from location\n  const page = decodeInteger(location.query[WidgetViewerQueryField.PAGE]) ?? 0;\n  const cursor = decodeScalar(location.query[WidgetViewerQueryField.CURSOR]);\n\n  // Get table column widths from location\n  const widths = decodeList(location.query[WidgetViewerQueryField.WIDTH]);\n\n  // Get table sort settings from location\n  const sort = decodeScalar(location.query[WidgetViewerQueryField.SORT]);\n  const sortedQueries = cloneDeep(\n    sort ? widget.queries.map(query => ({...query, orderby: sort})) : widget.queries\n  );\n\n  // Top N widget charts (including widgets with limits) results rely on the sorting of the query\n  // Set the orderby of the widget chart to match the location query params\n  const primaryWidget =\n    widget.displayType === DisplayType.TOP_N || widget.limit !== undefined\n      ? {...widget, queries: sortedQueries}\n      : widget;\n  const api = useApi();\n\n  // Create Table widget\n  const tableWidget = {\n    ...cloneDeep({...widget, queries: [sortedQueries[selectedQueryIndex]]}),\n    displayType: DisplayType.TABLE,\n  };\n  const {aggregates, columns} = tableWidget.queries[0];\n  const {orderby} = widget.queries[0];\n  const order = orderby.startsWith('-');\n  const rawOrderby = trimStart(orderby, '-');\n\n  const fields = defined(tableWidget.queries[0].fields)\n    ? tableWidget.queries[0].fields\n    : [...columns, ...aggregates];\n\n  // Some Discover Widgets (Line, Area, Bar) allow the user to specify an orderby\n  // that is not explicitly selected as an aggregate or column. We need to explicitly\n  // include the orderby in the table widget aggregates and columns otherwise\n  // eventsv2 will complain about sorting on an unselected field.\n  if (\n    widget.widgetType === WidgetType.DISCOVER &&\n    orderby &&\n    !isEquationAlias(rawOrderby) &&\n    !fields.includes(rawOrderby)\n  ) {\n    fields.push(rawOrderby);\n    [tableWidget, primaryWidget].forEach(aggregatesAndColumns => {\n      if (isAggregateField(rawOrderby) || isEquation(rawOrderby)) {\n        aggregatesAndColumns.queries.forEach(query => {\n          if (!query.aggregates.includes(rawOrderby)) {\n            query.aggregates.push(rawOrderby);\n          }\n        });\n      } else {\n        aggregatesAndColumns.queries.forEach(query => {\n          if (!query.columns.includes(rawOrderby)) {\n            query.columns.push(rawOrderby);\n          }\n        });\n      }\n    });\n  }\n\n  // Need to set the orderby of the eventsv2 query to equation[index] format\n  // since eventsv2 does not accept the raw equation as a valid sort payload\n  if (isEquation(rawOrderby) && tableWidget.queries[0].orderby === orderby) {\n    tableWidget.queries[0].orderby = `${order ? '-' : ''}equation[${\n      getNumEquations(fields) - 1\n    }]`;\n  }\n\n  // World Map view should always have geo.country in the table chart\n  if (\n    widget.displayType === DisplayType.WORLD_MAP &&\n    !columns.includes(GEO_COUNTRY_CODE)\n  ) {\n    fields.unshift(GEO_COUNTRY_CODE);\n    columns.unshift(GEO_COUNTRY_CODE);\n  }\n  // Default table columns for visualizations that don't have a column setting\n  const shouldReplaceTableColumns =\n    [\n      DisplayType.AREA,\n      DisplayType.LINE,\n      DisplayType.BIG_NUMBER,\n      DisplayType.BAR,\n    ].includes(widget.displayType) &&\n    widget.widgetType &&\n    [WidgetType.DISCOVER, WidgetType.RELEASE].includes(widget.widgetType) &&\n    !defined(widget.limit);\n\n  // Updates fields by adding any individual terms from equation fields as a column\n  if (!isTableWidget) {\n    const equationFields = getFieldsFromEquations(fields);\n    equationFields.forEach(term => {\n      if (isAggregateField(term) && !aggregates.includes(term)) {\n        aggregates.unshift(term);\n      }\n      if (!isAggregateField(term) && !columns.includes(term)) {\n        columns.unshift(term);\n      }\n    });\n  }\n\n  // Add any group by columns into table fields if missing\n  columns.forEach(column => {\n    if (!fields.includes(column)) {\n      fields.unshift(column);\n    }\n  });\n\n  if (shouldReplaceTableColumns) {\n    switch (widget.widgetType) {\n      case WidgetType.DISCOVER:\n        if (fields.length === 1) {\n          tableWidget.queries[0].orderby =\n            tableWidget.queries[0].orderby || `-${fields[0]}`;\n        }\n        fields.unshift('title');\n        columns.unshift('title');\n        break;\n      case WidgetType.RELEASE:\n        fields.unshift('release');\n        columns.unshift('release');\n        break;\n      default:\n        break;\n    }\n  }\n\n  const eventView = eventViewFromWidget(\n    tableWidget.title,\n    tableWidget.queries[0],\n    modalTableSelection,\n    tableWidget.displayType\n  );\n\n  let columnOrder = decodeColumnOrder(\n    fields.map(field => ({\n      field,\n    })),\n    organization.features.includes('discover-frontend-use-events-endpoint')\n  );\n  const columnSortBy = eventView.getSorts();\n  columnOrder = columnOrder.map((column, index) => ({\n    ...column,\n    width: parseInt(widths[index], 10) || -1,\n  }));\n\n  const queryOptions = sortedQueries.map(({name, conditions}, index) => {\n    // Creates the highlighted query elements to be used in the Query Select\n    const parsedQuery = !!!name && !!conditions ? parseSearch(conditions) : null;\n    const getHighlightedQuery = (\n      highlightedContainerProps: React.ComponentProps<typeof HighlightContainer>\n    ) => {\n      return parsedQuery !== null ? (\n        <HighlightContainer {...highlightedContainerProps}>\n          <HighlightQuery parsedQuery={parsedQuery} />\n        </HighlightContainer>\n      ) : undefined;\n    };\n\n    return {\n      label: truncate(name || conditions, 120),\n      value: index,\n      getHighlightedQuery,\n    };\n  });\n\n  const onResizeColumn = (columnIndex: number, nextColumn: GridColumnOrder) => {\n    const newWidth = nextColumn.width ? Number(nextColumn.width) : COL_WIDTH_UNDEFINED;\n    const newWidths: number[] = new Array(Math.max(columnIndex, widths.length)).fill(\n      COL_WIDTH_UNDEFINED\n    );\n    widths.forEach((width, index) => (newWidths[index] = parseInt(width, 10)));\n    newWidths[columnIndex] = newWidth;\n    router.replace({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        [WidgetViewerQueryField.WIDTH]: newWidths,\n      },\n    });\n  };\n\n  // Get discover result totals\n  useEffect(() => {\n    const getDiscoverTotals = async () => {\n      if (widget.widgetType === WidgetType.DISCOVER) {\n        setTotalResults(await fetchDiscoverTotal(api, organization, location, eventView));\n      }\n    };\n    getDiscoverTotals();\n    // Disabling this for now since this effect should only run on initial load and query index changes\n    // Including all exhaustive deps would cause fetchDiscoverTotal on nearly every update\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedQueryIndex]);\n\n  function onLegendSelectChanged({selected}: {selected: Record<string, boolean>}) {\n    setDisabledLegends(selected);\n    router.replace({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        [WidgetViewerQueryField.LEGEND]: Object.keys(selected).filter(\n          key => !selected[key]\n        ),\n      },\n    });\n    trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.toggle_legend', {\n      organization,\n      widget_type: widget.widgetType ?? WidgetType.DISCOVER,\n      display_type: widget.displayType,\n    });\n  }\n\n  function DiscoverTable({\n    tableResults,\n    loading,\n    pageLinks,\n  }: GenericWidgetQueriesChildrenProps) {\n    const {isMetricsData} = useDashboardsMEPContext();\n    const links = parseLinkHeader(pageLinks ?? null);\n    const isFirstPage = links.previous?.results === false;\n    return (\n      <Fragment>\n        <GridEditable\n          isLoading={loading}\n          data={tableResults?.[0]?.data ?? []}\n          columnOrder={columnOrder}\n          columnSortBy={columnSortBy}\n          grid={{\n            renderHeadCell: renderDiscoverGridHeaderCell({\n              ...props,\n              widget: tableWidget,\n              tableData: tableResults?.[0],\n              onHeaderClick: () => {\n                if (\n                  [DisplayType.TOP_N, DisplayType.TABLE].includes(widget.displayType) ||\n                  defined(widget.limit)\n                ) {\n                  setChartUnmodified(false);\n                }\n              },\n              isMetricsData,\n            }) as (column: GridColumnOrder, columnIndex: number) => React.ReactNode,\n            renderBodyCell: renderGridBodyCell({\n              ...props,\n              tableData: tableResults?.[0],\n              isFirstPage,\n            }),\n            onResizeColumn,\n          }}\n          location={location}\n        />\n        {(links?.previous?.results || links?.next?.results) && (\n          <Pagination\n            pageLinks={pageLinks}\n            onCursor={newCursor => {\n              router.replace({\n                pathname: location.pathname,\n                query: {\n                  ...location.query,\n                  [WidgetViewerQueryField.CURSOR]: newCursor,\n                },\n              });\n\n              if (widget.displayType === DisplayType.TABLE) {\n                setChartUnmodified(false);\n              }\n\n              trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.paginate', {\n                organization,\n                widget_type: WidgetType.DISCOVER,\n                display_type: widget.displayType,\n              });\n            }}\n          />\n        )}\n      </Fragment>\n    );\n  }\n\n  const renderIssuesTable = ({\n    tableResults,\n    loading,\n    pageLinks,\n    totalCount,\n  }: GenericWidgetQueriesChildrenProps) => {\n    if (totalResults === undefined && totalCount) {\n      setTotalResults(totalCount);\n    }\n    const links = parseLinkHeader(pageLinks ?? null);\n    return (\n      <Fragment>\n        <GridEditable\n          isLoading={loading}\n          data={tableResults?.[0]?.data ?? []}\n          columnOrder={columnOrder}\n          columnSortBy={columnSortBy}\n          grid={{\n            renderHeadCell: renderIssueGridHeaderCell({\n              location,\n              organization,\n              selection,\n              widget: tableWidget,\n              onHeaderClick: () => {\n                setChartUnmodified(false);\n              },\n            }) as (column: GridColumnOrder, columnIndex: number) => React.ReactNode,\n            renderBodyCell: renderGridBodyCell({\n              location,\n              organization,\n              selection,\n              widget: tableWidget,\n            }),\n            onResizeColumn,\n          }}\n          location={location}\n        />\n        {(links?.previous?.results || links?.next?.results) && (\n          <Pagination\n            pageLinks={pageLinks}\n            onCursor={(nextCursor, _path, _query, delta) => {\n              let nextPage = isNaN(page) ? delta : page + delta;\n              let newCursor = nextCursor;\n              // unset cursor and page when we navigate back to the first page\n              // also reset cursor if somehow the previous button is enabled on\n              // first page and user attempts to go backwards\n              if (nextPage <= 0) {\n                newCursor = undefined;\n                nextPage = 0;\n              }\n              router.replace({\n                pathname: location.pathname,\n                query: {\n                  ...location.query,\n                  [WidgetViewerQueryField.CURSOR]: newCursor,\n                  [WidgetViewerQueryField.PAGE]: nextPage,\n                },\n              });\n\n              if (widget.displayType === DisplayType.TABLE) {\n                setChartUnmodified(false);\n              }\n\n              trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.paginate', {\n                organization,\n                widget_type: WidgetType.ISSUE,\n                display_type: widget.displayType,\n              });\n            }}\n          />\n        )}\n      </Fragment>\n    );\n  };\n\n  const renderReleaseTable: ReleaseWidgetQueries['props']['children'] = ({\n    tableResults,\n    loading,\n    pageLinks,\n  }) => {\n    const links = parseLinkHeader(pageLinks ?? null);\n    const isFirstPage = links.previous?.results === false;\n    return (\n      <Fragment>\n        <GridEditable\n          isLoading={loading}\n          data={tableResults?.[0]?.data ?? []}\n          columnOrder={columnOrder}\n          columnSortBy={columnSortBy}\n          grid={{\n            renderHeadCell: renderReleaseGridHeaderCell({\n              ...props,\n              widget: tableWidget,\n              tableData: tableResults?.[0],\n              onHeaderClick: () => {\n                if (\n                  [DisplayType.TOP_N, DisplayType.TABLE].includes(widget.displayType) ||\n                  defined(widget.limit)\n                ) {\n                  setChartUnmodified(false);\n                }\n              },\n            }) as (column: GridColumnOrder, columnIndex: number) => React.ReactNode,\n            renderBodyCell: renderGridBodyCell({\n              ...props,\n              tableData: tableResults?.[0],\n              isFirstPage,\n            }),\n            onResizeColumn,\n          }}\n          location={location}\n        />\n        {!tableWidget.queries[0].orderby.match(/^-?release$/) &&\n          (links?.previous?.results || links?.next?.results) && (\n            <Pagination\n              pageLinks={pageLinks}\n              onCursor={newCursor => {\n                router.replace({\n                  pathname: location.pathname,\n                  query: {\n                    ...location.query,\n                    [WidgetViewerQueryField.CURSOR]: newCursor,\n                  },\n                });\n                trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.paginate', {\n                  organization,\n                  widget_type: WidgetType.RELEASE,\n                  display_type: widget.displayType,\n                });\n              }}\n            />\n          )}\n      </Fragment>\n    );\n  };\n\n  const onZoom: AugmentedEChartDataZoomHandler = (evt, chart) => {\n    // @ts-ignore getModel() is private but we need this to retrieve datetime values of zoomed in region\n    const model = chart.getModel();\n    const {seriesStart, seriesEnd} = evt;\n    let startValue, endValue;\n    startValue = model._payload.batch?.[0].startValue;\n    endValue = model._payload.batch?.[0].endValue;\n    const seriesStartTime = seriesStart ? new Date(seriesStart).getTime() : undefined;\n    const seriesEndTime = seriesEnd ? new Date(seriesEnd).getTime() : undefined;\n    // Slider zoom events don't contain the raw date time value, only the percentage\n    // We use the percentage with the start and end of the series to calculate the adjusted zoom\n    if (startValue === undefined || endValue === undefined) {\n      if (seriesStartTime && seriesEndTime) {\n        const diff = seriesEndTime - seriesStartTime;\n        startValue = diff * model._payload.start * 0.01 + seriesStartTime;\n        endValue = diff * model._payload.end * 0.01 + seriesStartTime;\n      } else {\n        return;\n      }\n    }\n    setChartZoomOptions({startValue, endValue});\n    const newStart = getUtcDateString(moment.utc(startValue));\n    const newEnd = getUtcDateString(moment.utc(endValue));\n    setModalTableSelection({\n      ...modalTableSelection,\n      datetime: {\n        ...modalTableSelection.datetime,\n        start: newStart,\n        end: newEnd,\n        period: null,\n      },\n    });\n    router.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        [WidgetViewerQueryField.START]: newStart,\n        [WidgetViewerQueryField.END]: newEnd,\n      },\n    });\n    trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.zoom', {\n      organization,\n      widget_type: widget.widgetType ?? WidgetType.DISCOVER,\n      display_type: widget.displayType,\n    });\n  };\n\n  function renderWidgetViewerTable() {\n    switch (widget.widgetType) {\n      case WidgetType.ISSUE:\n        if (tableData && chartUnmodified && widget.displayType === DisplayType.TABLE) {\n          return renderIssuesTable({\n            tableResults: tableData,\n            loading: false,\n            errorMessage: undefined,\n            pageLinks: defaultPageLinks,\n            totalCount: totalIssuesCount,\n          });\n        }\n        return (\n          <IssueWidgetQueries\n            api={api}\n            organization={organization}\n            widget={tableWidget}\n            selection={modalTableSelection}\n            limit={\n              widget.displayType === DisplayType.TABLE\n                ? FULL_TABLE_ITEM_LIMIT\n                : HALF_TABLE_ITEM_LIMIT\n            }\n            cursor={cursor}\n          >\n            {renderIssuesTable}\n          </IssueWidgetQueries>\n        );\n      case WidgetType.RELEASE:\n        if (tableData && chartUnmodified && widget.displayType === DisplayType.TABLE) {\n          return renderReleaseTable({\n            tableResults: tableData,\n            loading: false,\n            pageLinks: defaultPageLinks,\n          });\n        }\n        return (\n          <ReleaseWidgetQueries\n            api={api}\n            organization={organization}\n            widget={tableWidget}\n            selection={modalTableSelection}\n            limit={\n              widget.displayType === DisplayType.TABLE\n                ? FULL_TABLE_ITEM_LIMIT\n                : HALF_TABLE_ITEM_LIMIT\n            }\n            cursor={cursor}\n          >\n            {renderReleaseTable}\n          </ReleaseWidgetQueries>\n        );\n      case WidgetType.DISCOVER:\n      default:\n        if (tableData && chartUnmodified && widget.displayType === DisplayType.TABLE) {\n          return (\n            <DiscoverTable\n              tableResults={tableData}\n              loading={false}\n              pageLinks={defaultPageLinks}\n            />\n          );\n        }\n        return (\n          <WidgetQueries\n            api={api}\n            organization={organization}\n            widget={tableWidget}\n            selection={modalTableSelection}\n            limit={\n              widget.displayType === DisplayType.TABLE\n                ? FULL_TABLE_ITEM_LIMIT\n                : HALF_TABLE_ITEM_LIMIT\n            }\n            cursor={cursor}\n          >\n            {({tableResults, loading, pageLinks}) => (\n              <DiscoverTable\n                tableResults={tableResults}\n                loading={loading}\n                pageLinks={pageLinks}\n              />\n            )}\n          </WidgetQueries>\n        );\n    }\n  }\n\n  function renderWidgetViewer() {\n    return (\n      <Fragment>\n        {widget.displayType !== DisplayType.TABLE && (\n          <Container\n            height={\n              widget.displayType !== DisplayType.BIG_NUMBER\n                ? HALF_CONTAINER_HEIGHT +\n                  (shouldShowSlider &&\n                  [\n                    DisplayType.AREA,\n                    DisplayType.LINE,\n                    DisplayType.BAR,\n                    DisplayType.TOP_N,\n                  ].includes(widget.displayType)\n                    ? SLIDER_HEIGHT\n                    : 0)\n                : null\n            }\n          >\n            {(!!seriesData || !!tableData) && chartUnmodified ? (\n              <MemoizedWidgetCardChart\n                timeseriesResults={seriesData}\n                timeseriesResultsType={seriesResultsType}\n                tableResults={tableData}\n                errorMessage={undefined}\n                loading={false}\n                location={location}\n                widget={widget}\n                selection={selection}\n                router={router}\n                organization={organization}\n                onZoom={onZoom}\n                onLegendSelectChanged={onLegendSelectChanged}\n                legendOptions={{selected: disabledLegends}}\n                expandNumbers\n                showSlider={shouldShowSlider}\n                noPadding\n                chartZoomOptions={chartZoomOptions}\n              />\n            ) : (\n              <MemoizedWidgetCardChartContainer\n                location={location}\n                router={router}\n                routes={routes}\n                params={params}\n                api={api}\n                organization={organization}\n                selection={modalChartSelection.current}\n                // Top N charts rely on the orderby of the table\n                widget={primaryWidget}\n                onZoom={onZoom}\n                onLegendSelectChanged={onLegendSelectChanged}\n                legendOptions={{selected: disabledLegends}}\n                expandNumbers\n                showSlider={shouldShowSlider}\n                noPadding\n                chartZoomOptions={chartZoomOptions}\n              />\n            )}\n          </Container>\n        )}\n        {widget.queries.length > 1 && (\n          <Alert type=\"info\" showIcon>\n            {t(\n              'This widget was built with multiple queries. Table data can only be displayed for one query at a time. To edit any of the queries, edit the widget.'\n            )}\n          </Alert>\n        )}\n        {(widget.queries.length > 1 || widget.queries[0].conditions) && (\n          <QueryContainer>\n            <SelectControl\n              value={selectedQueryIndex}\n              options={queryOptions}\n              onChange={(option: SelectValue<number>) => {\n                router.replace({\n                  pathname: location.pathname,\n                  query: {\n                    ...location.query,\n                    [WidgetViewerQueryField.QUERY]: option.value,\n                    [WidgetViewerQueryField.PAGE]: undefined,\n                    [WidgetViewerQueryField.CURSOR]: undefined,\n                  },\n                });\n\n                trackAdvancedAnalyticsEvent(\n                  'dashboards_views.widget_viewer.select_query',\n                  {\n                    organization,\n                    widget_type: widget.widgetType ?? WidgetType.DISCOVER,\n                    display_type: widget.displayType,\n                  }\n                );\n              }}\n              components={{\n                // Replaces the displayed selected value\n                SingleValue: containerProps => {\n                  return (\n                    <components.SingleValue\n                      {...containerProps}\n                      // Overwrites some of the default styling that interferes with highlighted query text\n                      getStyles={() => ({\n                        wordBreak: 'break-word',\n                        flex: 1,\n                        display: 'flex',\n                        padding: `0 ${space(0.5)}`,\n                      })}\n                    >\n                      {queryOptions[selectedQueryIndex].getHighlightedQuery({\n                        display: 'block',\n                      }) ??\n                        (queryOptions[selectedQueryIndex].label || (\n                          <EmptyQueryContainer>{EMPTY_QUERY_NAME}</EmptyQueryContainer>\n                        ))}\n                    </components.SingleValue>\n                  );\n                },\n                // Replaces the dropdown options\n                Option: containerProps => {\n                  const highlightedQuery = containerProps.data.getHighlightedQuery({\n                    display: 'flex',\n                  });\n                  return (\n                    <Option\n                      {...(highlightedQuery\n                        ? {\n                            ...containerProps,\n                            label: highlightedQuery,\n                          }\n                        : containerProps.label\n                        ? containerProps\n                        : {\n                            ...containerProps,\n                            label: (\n                              <EmptyQueryContainer>\n                                {EMPTY_QUERY_NAME}\n                              </EmptyQueryContainer>\n                            ),\n                          })}\n                    />\n                  );\n                },\n                // Hide the dropdown indicator if there is only one option\n                ...(widget.queries.length < 2 ? {IndicatorsContainer: _ => null} : {}),\n              }}\n              isSearchable={false}\n              isDisabled={widget.queries.length < 2}\n            />\n            {widget.queries.length === 1 && (\n              <StyledQuestionTooltip\n                title={t('To edit this query, you must edit the widget.')}\n                size=\"sm\"\n              />\n            )}\n          </QueryContainer>\n        )}\n        {renderWidgetViewerTable()}\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <DashboardsMEPProvider>\n        <Header closeButton>\n          <h3>{widget.title}</h3>\n        </Header>\n        <Body>{renderWidgetViewer()}</Body>\n        <Footer>\n          <ResultsContainer>\n            {renderTotalResults(totalResults, widget.widgetType)}\n            <ButtonBar gap={1}>\n              {onEdit && widget.id && (\n                <Button\n                  type=\"button\"\n                  onClick={() => {\n                    closeModal();\n                    onEdit();\n                    trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.edit', {\n                      organization,\n                      widget_type: widget.widgetType ?? WidgetType.DISCOVER,\n                      display_type: widget.displayType,\n                    });\n                  }}\n                >\n                  {t('Edit Widget')}\n                </Button>\n              )}\n              {widget.widgetType && (\n                <OpenButton\n                  widget={primaryWidget}\n                  organization={organization}\n                  selection={modalTableSelection}\n                  selectedQueryIndex={selectedQueryIndex}\n                />\n              )}\n            </ButtonBar>\n          </ResultsContainer>\n        </Footer>\n      </DashboardsMEPProvider>\n    </Fragment>\n  );\n}\n\ninterface OpenButtonProps {\n  organization: Organization;\n  selectedQueryIndex: number;\n  selection: PageFilters;\n  widget: Widget;\n}\n\nfunction OpenButton({\n  widget,\n  selection,\n  organization,\n  selectedQueryIndex,\n}: OpenButtonProps) {\n  let openLabel: string;\n  let path: string;\n  const {isMetricsData} = useDashboardsMEPContext();\n\n  switch (widget.widgetType) {\n    case WidgetType.ISSUE:\n      openLabel = t('Open in Issues');\n      path = getWidgetIssueUrl(widget, selection, organization);\n      break;\n    case WidgetType.RELEASE:\n      openLabel = t('Open in Releases');\n      path = getWidgetReleasesUrl(widget, selection, organization);\n      break;\n    case WidgetType.DISCOVER:\n    default:\n      openLabel = t('Open in Discover');\n      path = getWidgetDiscoverUrl(\n        {...widget, queries: [widget.queries[selectedQueryIndex]]},\n        selection,\n        organization,\n        0,\n        isMetricsData\n      );\n      break;\n  }\n\n  return (\n    <Button\n      to={path}\n      priority=\"primary\"\n      type=\"button\"\n      disabled={isCustomMeasurementWidget(widget)}\n      title={\n        isCustomMeasurementWidget(widget)\n          ? t('Widgets using custom performance metrics cannot be opened in Discover.')\n          : undefined\n      }\n      onClick={() => {\n        trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.open_source', {\n          organization,\n          widget_type: widget.widgetType ?? WidgetType.DISCOVER,\n          display_type: widget.displayType,\n        });\n      }}\n    >\n      {openLabel}\n    </Button>\n  );\n}\n\nfunction renderTotalResults(totalResults?: string, widgetType?: WidgetType) {\n  if (totalResults === undefined) {\n    return <span />;\n  }\n  switch (widgetType) {\n    case WidgetType.ISSUE:\n      return (\n        <span>\n          {tct('[description:Total Issues:] [total]', {\n            description: <strong />,\n            total: totalResults === '1000' ? '1000+' : totalResults,\n          })}\n        </span>\n      );\n    case WidgetType.DISCOVER:\n      return (\n        <span>\n          {tct('[description:Total Events:] [total]', {\n            description: <strong />,\n            total: totalResults,\n          })}\n        </span>\n      );\n    default:\n      return <span />;\n  }\n}\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 1200px;\n`;\n\nconst Container = styled('div')<{height?: number | null}>`\n  height: ${p => (p.height ? `${p.height}px` : 'auto')};\n  position: relative;\n  padding-bottom: ${space(3)};\n`;\n\nconst QueryContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  position: relative;\n`;\n\nconst StyledQuestionTooltip = styled(QuestionTooltip)`\n  position: absolute;\n  top: ${space(1.5)};\n  right: ${space(2)};\n`;\n\nconst HighlightContainer = styled('span')<{display?: 'block' | 'flex'}>`\n  display: ${p => p.display};\n  gap: ${space(1)};\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 2;\n  flex: 1;\n`;\n\nconst ResultsContainer = styled('div')`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  gap: ${space(1)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    align-items: center;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\nconst EmptyQueryContainer = styled('span')`\n  color: ${p => p.theme.disabled};\n`;\n\nexport default withRouter(withPageFilters(WidgetViewerModal));\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location, LocationDescriptorObject} from 'history';\nimport trimStart from 'lodash/trimStart';\n\nimport {GridColumnOrder} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {\n  getIssueFieldRenderer,\n  getSortField,\n} from 'sentry/utils/dashboards/issueFieldRenderers';\nimport {TableDataRow, TableDataWithTitle} from 'sentry/utils/discover/discoverQuery';\nimport EventView, {isFieldSortable} from 'sentry/utils/discover/eventView';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {\n  fieldAlignment,\n  getAggregateAlias,\n  getEquationAliasIndex,\n  isAggregateField,\n  isEquationAlias,\n  Sort,\n} from 'sentry/utils/discover/fields';\nimport {\n  eventDetailsRouteWithEventView,\n  generateEventSlug,\n} from 'sentry/utils/discover/urls';\nimport {DisplayType, Widget, WidgetType} from 'sentry/views/dashboardsV2/types';\nimport {eventViewFromWidget} from 'sentry/views/dashboardsV2/utils';\nimport {ISSUE_FIELDS} from 'sentry/views/dashboardsV2/widgetBuilder/issueWidget/fields';\nimport TopResultsIndicator from 'sentry/views/eventsV2/table/topResultsIndicator';\nimport {TableColumn} from 'sentry/views/eventsV2/table/types';\n\nimport {WidgetViewerQueryField} from './utils';\n// Dashboards only supports top 5 for now\nconst DEFAULT_NUM_TOP_EVENTS = 5;\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  selection: PageFilters;\n  widget: Widget;\n  isFirstPage?: boolean;\n  isMetricsData?: boolean;\n  onHeaderClick?: () => void;\n  tableData?: TableDataWithTitle;\n};\n\nexport const renderIssueGridHeaderCell =\n  ({location, widget, tableData, organization, onHeaderClick}: Props) =>\n  (column: TableColumn<keyof TableDataRow>, _columnIndex: number): React.ReactNode => {\n    const tableMeta = tableData?.meta;\n    const align = fieldAlignment(column.name, column.type, tableMeta);\n    const sortField = getSortField(String(column.key));\n\n    return (\n      <SortLink\n        align={align}\n        title={<StyledTooltip title={column.name}>{column.name}</StyledTooltip>}\n        direction={widget.queries[0].orderby === sortField ? 'desc' : undefined}\n        canSort={!!sortField}\n        generateSortLink={() => ({\n          ...location,\n          query: {\n            ...location.query,\n            [WidgetViewerQueryField.SORT]: sortField,\n            [WidgetViewerQueryField.PAGE]: undefined,\n            [WidgetViewerQueryField.CURSOR]: undefined,\n          },\n        })}\n        onClick={() => {\n          onHeaderClick?.();\n          trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.sort', {\n            organization,\n            widget_type: WidgetType.ISSUE,\n            display_type: widget.displayType,\n            column: column.name,\n            order: 'desc',\n          });\n        }}\n      />\n    );\n  };\n\nexport const renderDiscoverGridHeaderCell =\n  ({\n    location,\n    selection,\n    widget,\n    tableData,\n    organization,\n    onHeaderClick,\n    isMetricsData,\n  }: Props) =>\n  (column: TableColumn<keyof TableDataRow>, _columnIndex: number): React.ReactNode => {\n    const {orderby} = widget.queries[0];\n    // Need to convert orderby to aggregate alias because eventView still uses aggregate alias format\n    const aggregateAliasOrderBy = `${\n      orderby.startsWith('-') ? '-' : ''\n    }${getAggregateAlias(trimStart(orderby, '-'))}`;\n    const eventView = eventViewFromWidget(\n      widget.title,\n      {...widget.queries[0], orderby: aggregateAliasOrderBy},\n      selection,\n      widget.displayType\n    );\n    const tableMeta = tableData?.meta;\n    const align = fieldAlignment(column.name, column.type, tableMeta);\n    const field = {field: String(column.key), width: column.width};\n    function generateSortLink(): LocationDescriptorObject | undefined {\n      if (!tableMeta) {\n        return undefined;\n      }\n\n      const nextEventView = eventView.sortOnField(field, tableMeta, undefined, true);\n      const queryStringObject = nextEventView.generateQueryStringObject();\n\n      return {\n        ...location,\n        query: {\n          ...location.query,\n          [WidgetViewerQueryField.SORT]: queryStringObject.sort,\n          [WidgetViewerQueryField.PAGE]: undefined,\n          [WidgetViewerQueryField.CURSOR]: undefined,\n        },\n      };\n    }\n\n    const currentSort = eventView.sortForField(field, tableMeta);\n    const canSort =\n      !(isMetricsData && field.field === 'title') && isFieldSortable(field, tableMeta);\n    const titleText = isEquationAlias(column.name)\n      ? eventView.getEquations()[getEquationAliasIndex(column.name)]\n      : column.name;\n\n    return (\n      <SortLink\n        align={align}\n        title={<StyledTooltip title={titleText}>{titleText}</StyledTooltip>}\n        direction={currentSort ? currentSort.kind : undefined}\n        canSort={canSort}\n        generateSortLink={generateSortLink}\n        onClick={() => {\n          onHeaderClick?.();\n          trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.sort', {\n            organization,\n            widget_type: WidgetType.DISCOVER,\n            display_type: widget.displayType,\n            column: column.name,\n            order: currentSort?.kind === 'desc' ? 'asc' : 'desc',\n          });\n        }}\n      />\n    );\n  };\n\nexport const renderGridBodyCell =\n  ({location, organization, widget, tableData, isFirstPage}: Props) =>\n  (\n    column: GridColumnOrder,\n    dataRow: Record<string, any>,\n    rowIndex: number,\n    columnIndex: number\n  ): React.ReactNode => {\n    const columnKey = String(column.key);\n    const isTopEvents = widget.displayType === DisplayType.TOP_N;\n    let cell: React.ReactNode;\n    const isAlias =\n      !organization.features.includes('discover-frontend-use-events-endpoint') &&\n      widget.widgetType !== WidgetType.RELEASE;\n    switch (widget.widgetType) {\n      case WidgetType.ISSUE:\n        cell = (\n          getIssueFieldRenderer(columnKey) ?? getFieldRenderer(columnKey, ISSUE_FIELDS)\n        )(dataRow, {organization, location});\n        break;\n      case WidgetType.DISCOVER:\n      default:\n        if (!tableData || !tableData.meta) {\n          return dataRow[column.key];\n        }\n        const unit = tableData.meta.units?.[column.key];\n        cell = getFieldRenderer(\n          columnKey,\n          tableData.meta,\n          isAlias\n        )(dataRow, {\n          organization,\n          location,\n          unit,\n        });\n\n        const fieldName = getAggregateAlias(columnKey);\n        const value = dataRow[fieldName];\n        if (tableData.meta[fieldName] === 'integer' && defined(value) && value > 999) {\n          return (\n            <Tooltip\n              title={value.toLocaleString()}\n              containerDisplayMode=\"block\"\n              position=\"right\"\n            >\n              {cell}\n            </Tooltip>\n          );\n        }\n        break;\n    }\n    const topResultsCount = tableData\n      ? Math.min(tableData?.data.length, DEFAULT_NUM_TOP_EVENTS)\n      : DEFAULT_NUM_TOP_EVENTS;\n    return (\n      <Fragment>\n        {isTopEvents &&\n        isFirstPage &&\n        rowIndex < DEFAULT_NUM_TOP_EVENTS &&\n        columnIndex === 0 ? (\n          <TopResultsIndicator count={topResultsCount} index={rowIndex} />\n        ) : null}\n        {cell}\n      </Fragment>\n    );\n  };\n\nexport const renderPrependColumns =\n  ({location, organization, tableData, eventView}: Props & {eventView: EventView}) =>\n  (isHeader: boolean, dataRow?: any, rowIndex?: number): React.ReactNode[] => {\n    if (isHeader) {\n      return [\n        <PrependHeader key=\"header-event-id\">\n          <SortLink\n            align=\"left\"\n            title={t('event id')}\n            direction={undefined}\n            canSort={false}\n            generateSortLink={() => undefined}\n          />\n        </PrependHeader>,\n      ];\n    }\n    let value = dataRow.id;\n\n    if (tableData?.meta) {\n      const fieldRenderer = getFieldRenderer('id', tableData?.meta);\n      value = fieldRenderer(dataRow, {organization, location});\n    }\n\n    const eventSlug = generateEventSlug(dataRow);\n\n    const target = eventDetailsRouteWithEventView({\n      orgSlug: organization.slug,\n      eventSlug,\n      eventView,\n    });\n\n    return [\n      <Tooltip key={`eventlink${rowIndex}`} title={t('View Event')}>\n        <Link data-test-id=\"view-event\" to={target}>\n          {value}\n        </Link>\n      </Tooltip>,\n    ];\n  };\n\nexport const renderReleaseGridHeaderCell =\n  ({location, widget, tableData, organization, onHeaderClick}: Props) =>\n  (column: TableColumn<keyof TableDataRow>, _columnIndex: number): React.ReactNode => {\n    const tableMeta = tableData?.meta;\n    const align = fieldAlignment(column.name, column.type, tableMeta);\n    const widgetOrderBy = widget.queries[0].orderby;\n    const sort: Sort = {\n      kind: widgetOrderBy.startsWith('-') ? 'desc' : 'asc',\n      field: widgetOrderBy.startsWith('-') ? widgetOrderBy.slice(1) : widgetOrderBy,\n    };\n    const canSort = isAggregateField(column.name);\n    const titleText = column.name;\n\n    function generateSortLink(): LocationDescriptorObject {\n      const columnSort =\n        column.name === sort.field\n          ? {...sort, kind: sort.kind === 'desc' ? 'asc' : 'desc'}\n          : {kind: 'desc', field: column.name};\n\n      return {\n        ...location,\n        query: {\n          ...location.query,\n          [WidgetViewerQueryField.SORT]:\n            columnSort.kind === 'desc' ? `-${columnSort.field}` : columnSort.field,\n          [WidgetViewerQueryField.PAGE]: undefined,\n          [WidgetViewerQueryField.CURSOR]: undefined,\n        },\n      };\n    }\n\n    return (\n      <SortLink\n        align={align}\n        title={<StyledTooltip title={titleText}>{titleText}</StyledTooltip>}\n        direction={sort.field === column.name ? sort.kind : undefined}\n        canSort={canSort}\n        generateSortLink={generateSortLink}\n        onClick={() => {\n          onHeaderClick?.();\n          trackAdvancedAnalyticsEvent('dashboards_views.widget_viewer.sort', {\n            organization,\n            widget_type: WidgetType.RELEASE,\n            display_type: widget.displayType,\n            column: column.name,\n            order: sort?.kind === 'desc' ? 'asc' : 'desc',\n          });\n        }}\n      />\n    );\n  };\n\nconst StyledTooltip = styled(Tooltip)`\n  display: initial;\n`;\n\nconst PrependHeader = styled('span')`\n  color: ${p => p.theme.subText};\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {browserHistory, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Query} from 'history';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {IconChevron} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\n\n/**\n * @param cursor The string cursor value\n * @param path   The current page pathname\n * @param query  The current query object\n * @param delta  The delta in page number change triggered by the\n *               click. A negative delta would be a \"previous\" page.\n */\nexport type CursorHandler = (\n  cursor: string | undefined,\n  path: string,\n  query: Query,\n  delta: number\n) => void;\n\ntype Props = WithRouterProps & {\n  caption?: React.ReactNode;\n  className?: string;\n  disabled?: boolean;\n  onCursor?: CursorHandler;\n  pageLinks?: string | null;\n  paginationAnalyticsEvent?: (direction: string) => void;\n  size?: 'zero' | 'xs' | 'sm';\n  to?: string;\n};\n\nconst defaultOnCursor: CursorHandler = (cursor, path, query, _direction) =>\n  browserHistory.push({\n    pathname: path,\n    query: {...query, cursor},\n  });\n\nconst Pagination = ({\n  to,\n  location,\n  className,\n  onCursor = defaultOnCursor,\n  paginationAnalyticsEvent,\n  pageLinks,\n  size = 'sm',\n  caption,\n  disabled = false,\n}: Props) => {\n  if (!pageLinks) {\n    return null;\n  }\n\n  const path = to ?? location.pathname;\n  const query = location.query;\n  const links = parseLinkHeader(pageLinks);\n  const previousDisabled = disabled || links.previous?.results === false;\n  const nextDisabled = disabled || links.next?.results === false;\n\n  return (\n    <Wrapper className={className}>\n      {caption && <PaginationCaption>{caption}</PaginationCaption>}\n      <ButtonBar merged>\n        <Button\n          icon={<IconChevron direction=\"left\" size=\"sm\" />}\n          aria-label={t('Previous')}\n          size={size}\n          disabled={previousDisabled}\n          onClick={() => {\n            onCursor?.(links.previous?.cursor, path, query, -1);\n            paginationAnalyticsEvent?.('Previous');\n          }}\n        />\n        <Button\n          icon={<IconChevron direction=\"right\" size=\"sm\" />}\n          aria-label={t('Next')}\n          size={size}\n          disabled={nextDisabled}\n          onClick={() => {\n            onCursor?.(links.next?.cursor, path, query, 1);\n            paginationAnalyticsEvent?.('Next');\n          }}\n        />\n      </ButtonBar>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin: ${space(3)} 0 0 0;\n`;\n\nconst PaginationCaption = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(2)};\n`;\n\nexport default withRouter(Pagination);\n","import {LegendComponentOption} from 'echarts';\n\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport {AggregationOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(\n  value: number | null,\n  outputType: AggregationOutputType = 'number'\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  return tooltipFormatterUsingAggregateOutputType(value, outputType);\n}\n\n/**\n * Formatter for chart tooltips that takes the aggregate output type directly\n */\nexport function tooltipFormatterUsingAggregateOutputType(\n  value: number | null,\n  type: string\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    case 'size':\n      return formatBytesBase2(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  outputType: AggregationOutputType,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  return axisLabelFormatterUsingAggregateOutputType(\n    value,\n    outputType,\n    abbreviation,\n    durationUnit\n  );\n}\n\n/**\n * Formatter for chart axis labels that takes the aggregate output type directly\n */\nexport function axisLabelFormatterUsingAggregateOutputType(\n  value: number,\n  type: string,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value, durationUnit);\n    case 'size':\n      return formatBytesBase2(value, 0);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number, durationUnit?: number): string {\n  durationUnit ??= categorizeDuration(value);\n  if (value === 0) {\n    return '0';\n  }\n  switch (durationUnit) {\n    case WEEK: {\n      const label = (value / WEEK).toFixed(0);\n      return t('%swk', label);\n    }\n    case DAY: {\n      const label = (value / DAY).toFixed(0);\n      return t('%sd', label);\n    }\n    case HOUR: {\n      const label = (value / HOUR).toFixed(0);\n      return t('%shr', label);\n    }\n    case MINUTE: {\n      const label = (value / MINUTE).toFixed(0);\n      return t('%smin', label);\n    }\n    case SECOND: {\n      const label = (value / SECOND).toFixed(0);\n      return t('%ss', label);\n    }\n    default:\n      const label = value.toFixed(0);\n      return t('%sms', label);\n  }\n}\n\n/**\n * Given an array of series and an eCharts legend object,\n * finds the range of y values (min and max) based on which series is selected in the legend\n * Assumes series[0] > series[1] > ...\n * @param series Array of eCharts series\n * @param legend eCharts legend object\n * @returns\n */\nexport function findRangeOfMultiSeries(series: Series[], legend?: LegendComponentOption) {\n  let range: {max: number; min: number} | undefined;\n  if (series[0]?.data) {\n    let minSeries = series[0];\n    let maxSeries;\n    series.forEach(({seriesName, data}, idx) => {\n      if (legend?.selected?.[seriesName] !== false && data.length) {\n        minSeries = series[idx];\n        maxSeries ??= series[idx];\n      }\n    });\n    if (maxSeries?.data) {\n      const max = Math.max(\n        ...maxSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      const min = Math.min(\n        ...minSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      range = {max, min};\n    }\n  }\n  return range;\n}\n\n/**\n * Given a eCharts series and legend, returns the unit to be used on the yAxis for a duration chart\n * @param series eCharts series array\n * @param legend eCharts legend object\n * @returns\n */\nexport function getDurationUnit(\n  series: Series[],\n  legend?: LegendComponentOption\n): number {\n  let durationUnit = 0;\n  const range = findRangeOfMultiSeries(series, legend);\n  if (range) {\n    const avg = (range.max + range.min) / 2;\n    durationUnit = categorizeDuration((range.max - range.min) / 5); // avg of 5 yAxis ticks per chart\n\n    const numOfDigits = (avg / durationUnit).toFixed(0).length;\n    if (numOfDigits > 6) {\n      durationUnit = categorizeDuration(avg);\n    }\n  }\n  return durationUnit;\n}\n\n/**\n * Categorizes the duration by Second, Minute, Hour, etc\n * Ex) categorizeDuration(1200) = MINUTE\n * @param value Duration in ms\n */\nexport function categorizeDuration(value): number {\n  if (value >= WEEK) {\n    return WEEK;\n  }\n  if (value >= DAY) {\n    return DAY;\n  }\n  if (value >= HOUR) {\n    return HOUR;\n  }\n  if (value >= MINUTE) {\n    return MINUTE;\n  }\n  if (value >= SECOND) {\n    return SECOND;\n  }\n  return 1;\n}\n"],"names":["omit","Link","IconArrow","SortLink","align","title","canSort","generateSortLink","onClick","direction","target","arrow","StyledLink","props","forwardProps","p","StyledNonLink","StyledIconArrow","Fragment","memo","useEffect","useMemo","useRef","useState","withRouter","components","css","Sentry","truncate","cloneDeep","isEqual","trimStart","moment","fetchTotalCount","Alert","Button","ButtonBar","SelectControl","Option","GridEditable","COL_WIDTH_UNDEFINED","Pagination","QuestionTooltip","parseSearch","HighlightQuery","t","tct","space","defined","trackAdvancedAnalyticsEvent","getUtcDateString","isAggregateField","isEquation","isEquationAlias","parseLinkHeader","decodeInteger","decodeList","decodeScalar","useApi","withPageFilters","DisplayType","WidgetType","eventViewFromWidget","getFieldsFromEquations","getNumEquations","getWidgetDiscoverUrl","getWidgetIssueUrl","getWidgetReleasesUrl","isCustomMeasurementWidget","WidgetCardChart","SLIDER_HEIGHT","DashboardsMEPProvider","useDashboardsMEPContext","IssueWidgetQueries","ReleaseWidgetQueries","WidgetCardChartContainer","WidgetQueries","decodeColumnOrder","WidgetViewerQueryField","renderDiscoverGridHeaderCell","renderGridBodyCell","renderIssueGridHeaderCell","renderReleaseGridHeaderCell","FULL_TABLE_ITEM_LIMIT","HALF_TABLE_ITEM_LIMIT","GEO_COUNTRY_CODE","HALF_CONTAINER_HEIGHT","EMPTY_QUERY_NAME","shouldWidgetCardChartMemo","prevProps","selectionMatches","selection","sortMatches","location","query","SORT","chartZoomOptionsMatches","chartZoomOptions","isNotTopNWidget","widget","displayType","TOP_N","limit","MemoizedWidgetCardChartContainer","MemoizedWidgetCardChart","fetchDiscoverTotal","api","organization","eventView","isValid","undefined","total","slug","getEventsAPIPayload","toLocaleString","err","captureException","WidgetViewerModal","Footer","Body","Header","closeModal","onEdit","router","routes","params","seriesData","tableData","totalIssuesCount","pageLinks","defaultPageLinks","seriesResultsType","shouldShowSlider","features","includes","start","START","end","END","isTableWidget","TABLE","locationPageFilter","datetime","period","utc","chartUnmodified","setChartUnmodified","setChartZoomOptions","modalTableSelection","setModalTableSelection","modalChartSelection","action","startValue","unix","endValue","disabledLegends","setDisabledLegends","LEGEND","reduce","acc","legend","totalResults","setTotalResults","selectedQueryIndex","QUERY","page","PAGE","cursor","CURSOR","widths","WIDTH","sort","sortedQueries","queries","map","orderby","primaryWidget","tableWidget","aggregates","columns","order","startsWith","rawOrderby","fields","widgetType","DISCOVER","push","forEach","aggregatesAndColumns","WORLD_MAP","unshift","shouldReplaceTableColumns","AREA","LINE","BIG_NUMBER","BAR","RELEASE","equationFields","term","column","length","columnOrder","field","columnSortBy","getSorts","index","width","parseInt","queryOptions","name","conditions","parsedQuery","getHighlightedQuery","highlightedContainerProps","label","value","onResizeColumn","columnIndex","nextColumn","newWidth","Number","newWidths","Array","Math","max","fill","replace","pathname","getDiscoverTotals","onLegendSelectChanged","selected","Object","keys","filter","key","widget_type","display_type","DiscoverTable","tableResults","loading","isMetricsData","links","isFirstPage","previous","results","data","renderHeadCell","onHeaderClick","renderBodyCell","next","newCursor","renderIssuesTable","totalCount","nextCursor","_path","_query","delta","nextPage","isNaN","ISSUE","renderReleaseTable","match","onZoom","evt","chart","model","getModel","seriesStart","seriesEnd","_payload","batch","seriesStartTime","Date","getTime","seriesEndTime","diff","newStart","newEnd","renderWidgetViewerTable","errorMessage","renderWidgetViewer","current","option","SingleValue","containerProps","wordBreak","flex","display","padding","highlightedQuery","IndicatorsContainer","_","renderTotalResults","id","OpenButton","openLabel","path","description","modalCss","Container","height","QueryContainer","StyledQuestionTooltip","HighlightContainer","theme","text","familyMono","fontSizeSmall","ResultsContainer","breakpoints","small","EmptyQueryContainer","disabled","Tooltip","getIssueFieldRenderer","getSortField","isFieldSortable","getFieldRenderer","fieldAlignment","getAggregateAlias","getEquationAliasIndex","eventDetailsRouteWithEventView","generateEventSlug","ISSUE_FIELDS","TopResultsIndicator","DEFAULT_NUM_TOP_EVENTS","_columnIndex","tableMeta","meta","type","sortField","String","aggregateAliasOrderBy","nextEventView","sortOnField","queryStringObject","generateQueryStringObject","currentSort","sortForField","titleText","getEquations","kind","dataRow","rowIndex","columnKey","isTopEvents","cell","isAlias","unit","units","fieldName","topResultsCount","min","renderPrependColumns","isHeader","fieldRenderer","eventSlug","orgSlug","widgetOrderBy","slice","columnSort","StyledTooltip","PrependHeader","subText","browserHistory","IconChevron","defaultOnCursor","_direction","to","className","onCursor","paginationAnalyticsEvent","size","caption","previousDisabled","nextDisabled","Wrapper","PaginationCaption","fontSizeMedium","formatBytesBase2","DAY","formatAbbreviatedNumber","formatPercentage","getDuration","HOUR","MINUTE","SECOND","WEEK","tooltipFormatter","outputType","tooltipFormatterUsingAggregateOutputType","toString","axisLabelFormatter","abbreviation","durationUnit","axisLabelFormatterUsingAggregateOutputType","axisDuration","categorizeDuration","toFixed","findRangeOfMultiSeries","series","range","minSeries","maxSeries","idx","seriesName","getDurationUnit","avg","numOfDigits"],"sourceRoot":""}