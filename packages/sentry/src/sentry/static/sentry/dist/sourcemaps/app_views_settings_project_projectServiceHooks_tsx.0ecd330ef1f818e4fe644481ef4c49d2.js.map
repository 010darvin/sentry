{"version":3,"file":"chunks/app_views_settings_project_projectServiceHooks_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/projectServiceHooks.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport Field from 'sentry/components/forms/field';\nimport Link from 'sentry/components/links/link';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Switch from 'sentry/components/switchButton';\nimport Truncate from 'sentry/components/truncate';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, ServiceHook} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\ntype RowProps = {\n  hook: ServiceHook;\n  onToggleActive: () => void;\n  orgId: string;\n  projectId: string;\n};\n\nfunction ServiceHookRow({orgId, projectId, hook, onToggleActive}: RowProps) {\n  return (\n    <Field\n      label={\n        <Link\n          data-test-id=\"project-service-hook\"\n          to={`/settings/${orgId}/projects/${projectId}/hooks/${hook.id}/`}\n        >\n          <Truncate value={hook.url} />\n        </Link>\n      }\n      help={\n        <small>\n          {hook.events && hook.events.length !== 0 ? (\n            hook.events.join(', ')\n          ) : (\n            <em>{t('no events configured')}</em>\n          )}\n        </small>\n      }\n    >\n      <Switch isActive={hook.status === 'active'} size=\"lg\" toggle={onToggleActive} />\n    </Field>\n  );\n}\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n};\n\ntype State = {\n  hookList: null | ServiceHook[];\n} & AsyncView['state'];\n\nclass ProjectServiceHooks extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['hookList', `/projects/${orgId}/${projectId}/hooks/`]];\n  }\n\n  onToggleActive = (hook: ServiceHook) => {\n    const {orgId, projectId} = this.props.params;\n    const {hookList} = this.state;\n    if (!hookList) {\n      return;\n    }\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.api.request(`/projects/${orgId}/${projectId}/hooks/${hook.id}/`, {\n      method: 'PUT',\n      data: {\n        isActive: hook.status !== 'active',\n      },\n      success: data => {\n        clearIndicators();\n        this.setState({\n          hookList: hookList.map(h => {\n            if (h.id === data.id) {\n              return {\n                ...h,\n                ...data,\n              };\n            }\n            return h;\n          }),\n        });\n      },\n      error: () => {\n        addErrorMessage(t('Unable to remove application. Please try again.'));\n      },\n    });\n  };\n\n  renderEmpty() {\n    return (\n      <EmptyMessage>\n        {t('There are no service hooks associated with this project.')}\n      </EmptyMessage>\n    );\n  }\n\n  renderResults() {\n    const {orgId, projectId} = this.props.params;\n\n    return (\n      <Fragment>\n        <PanelHeader key=\"header\">{t('Service Hook')}</PanelHeader>\n        <PanelBody key=\"body\">\n          <PanelAlert type=\"info\" showIcon>\n            {t(\n              'Service Hooks are an early adopter preview feature and will change in the future.'\n            )}\n          </PanelAlert>\n          {this.state.hookList?.map(hook => (\n            <ServiceHookRow\n              key={hook.id}\n              orgId={orgId}\n              projectId={projectId}\n              hook={hook}\n              onToggleActive={this.onToggleActive.bind(this, hook)}\n            />\n          ))}\n        </PanelBody>\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {hookList} = this.state;\n    const body =\n      hookList && hookList.length > 0 ? this.renderResults() : this.renderEmpty();\n\n    const {orgId, projectId} = this.props.params;\n    const access = new Set(this.props.organization.access);\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Service Hooks')}\n          action={\n            access.has('project:write') ? (\n              <Button\n                data-test-id=\"new-service-hook\"\n                to={`/settings/${orgId}/projects/${projectId}/hooks/new/`}\n                size=\"sm\"\n                priority=\"primary\"\n                icon={<IconAdd size=\"xs\" isCircled />}\n              >\n                {t('Create New Hook')}\n              </Button>\n            ) : null\n          }\n        />\n        <Panel>{body}</Panel>\n      </Fragment>\n    );\n  }\n}\nexport default withOrganization(ProjectServiceHooks);\n"],"names":["AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Fragment","addErrorMessage","addLoadingMessage","clearIndicators","Button","Field","Link","Panel","PanelAlert","PanelBody","PanelHeader","Switch","Truncate","IconAdd","t","withOrganization","EmptyMessage","SettingsPageHeader","ServiceHookRow","orgId","projectId","hook","onToggleActive","id","url","events","length","join","status","ProjectServiceHooks","props","params","hookList","state","api","request","method","data","isActive","success","setState","map","h","error","getEndpoints","renderEmpty","renderResults","bind","renderBody","body","access","Set","organization","has"],"sourceRoot":""}