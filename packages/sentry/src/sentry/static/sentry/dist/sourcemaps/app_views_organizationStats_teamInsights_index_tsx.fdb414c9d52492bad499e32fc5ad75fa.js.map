{"version":3,"file":"chunks/app_views_organizationStats_teamInsights_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;;;AAOA,SAASK,qBAAT,OAAgE;EAAA,IAAjC;IAACC,QAAD;IAAWC;EAAX,CAAiC;EAC9D,OACE,gEAAC,qEAAD;IAAS,YAAY,EAAEA,YAAvB;IAAqC,QAAQ,EAAE,CAAC,eAAD,CAA/C;IAAA,UACE,gEAAC,0EAAD;MAAkB,YAAY,EAAEA,YAAhC;MAAA,UACGD,QAAQ,iBAAIL,qDAAc,CAACK,QAAD,CAA1B,gBACGN,mDAAY,CAACM,QAAD,EAAW;QACrBC;MADqB,CAAX,CADf,GAIID;IALP;EADF,EADF;AAWD;;AAZQD;AAcT,iEAAeD,yEAAgB,CAACC,qBAAD,CAA/B","sources":["webpack:///./app/views/organizationStats/teamInsights/index.tsx"],"sourcesContent":["import {cloneElement, isValidElement} from 'react';\n\nimport Feature from 'sentry/components/acl/feature';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  organization: Organization;\n  children?: React.ReactNode;\n};\n\nfunction TeamInsightsContainer({children, organization}: Props) {\n  return (\n    <Feature organization={organization} features={['team-insights']}>\n      <NoProjectMessage organization={organization}>\n        {children && isValidElement(children)\n          ? cloneElement(children, {\n              organization,\n            })\n          : (children as React.ReactChild)}\n      </NoProjectMessage>\n    </Feature>\n  );\n}\n\nexport default withOrganization(TeamInsightsContainer);\n"],"names":["cloneElement","isValidElement","Feature","NoProjectMessage","withOrganization","TeamInsightsContainer","children","organization"],"sourceRoot":""}