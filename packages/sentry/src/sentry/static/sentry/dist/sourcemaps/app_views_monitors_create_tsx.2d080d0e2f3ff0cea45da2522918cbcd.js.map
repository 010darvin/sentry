{"version":3,"file":"chunks/app_views_monitors_create_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/monitors/create.tsx","webpack:///./app/views/monitors/monitorForm.tsx","webpack:///./app/views/monitors/monitorModel.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport AsyncView from 'sentry/views/asyncView';\n\nimport MonitorForm from './monitorForm';\nimport {Monitor} from './types';\n\ntype Props = AsyncView['props'] & RouteComponentProps<{orgId: string}, {}>;\n\nexport default class CreateMonitor extends AsyncView<Props, AsyncView['state']> {\n  getTitle() {\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  onSubmitSuccess = (data: Monitor) => {\n    browserHistory.push(`/organizations/${this.props.params.orgId}/monitors/${data.id}/`);\n  };\n\n  renderBody() {\n    return (\n      <Fragment>\n        <h1>New Monitor</h1>\n        <MonitorForm\n          apiMethod=\"POST\"\n          apiEndpoint={`/organizations/${this.props.params.orgId}/monitors/`}\n          onSubmitSuccess={this.onSubmitSuccess}\n        />\n      </Fragment>\n    );\n  }\n}\n","import {Component, Fragment} from 'react';\nimport {Observer} from 'mobx-react';\n\nimport Access from 'sentry/components/acl/access';\nimport Field from 'sentry/components/forms/field';\nimport Form from 'sentry/components/forms/form';\nimport NumberField from 'sentry/components/forms/numberField';\nimport SelectField from 'sentry/components/forms/selectField';\nimport TextCopyInput from 'sentry/components/forms/textCopyInput';\nimport TextField from 'sentry/components/forms/textField';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {PageFilters, Project, SelectValue} from 'sentry/types';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport MonitorModel from './monitorModel';\nimport {Monitor, MonitorConfig, MonitorTypes, ScheduleType} from './types';\n\nconst SCHEDULE_TYPES: SelectValue<ScheduleType>[] = [\n  {value: 'crontab', label: 'Crontab'},\n  {value: 'interval', label: 'Interval'},\n];\n\nconst MONITOR_TYPES: SelectValue<MonitorTypes>[] = [\n  {value: 'cron_job', label: 'Cron Job'},\n];\n\nconst INTERVALS: SelectValue<string>[] = [\n  {value: 'minute', label: 'minute(s)'},\n  {value: 'hour', label: 'hour(s)'},\n  {value: 'day', label: 'day(s)'},\n  {value: 'week', label: 'week(s)'},\n  {value: 'month', label: 'month(s)'},\n  {value: 'year', label: 'year(s)'},\n];\n\ntype Props = {\n  apiEndpoint: string;\n  apiMethod: Form['props']['apiMethod'];\n  onSubmitSuccess: Form['props']['onSubmitSuccess'];\n  projects: Project[];\n  selection: PageFilters;\n  monitor?: Monitor;\n};\n\nclass MonitorForm extends Component<Props> {\n  form = new MonitorModel();\n\n  formDataFromConfig(type: MonitorTypes, config: MonitorConfig) {\n    const rv = {};\n    switch (type) {\n      case 'cron_job':\n        rv['config.schedule_type'] = config.schedule_type;\n        rv['config.checkin_margin'] = config.checkin_margin;\n        rv['config.max_runtime'] = config.max_runtime;\n\n        switch (config.schedule_type) {\n          case 'interval':\n            rv['config.schedule.frequency'] = config.schedule[0];\n            rv['config.schedule.interval'] = config.schedule[1];\n            break;\n          case 'crontab':\n          default:\n            rv['config.schedule'] = config.schedule;\n        }\n        break;\n      default:\n    }\n    return rv;\n  }\n\n  render() {\n    const {monitor} = this.props;\n    const selectedProjectId = this.props.selection.projects[0];\n    const selectedProject = selectedProjectId\n      ? this.props.projects.find(p => p.id === selectedProjectId + '')\n      : null;\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <Form\n            allowUndo\n            requireChanges\n            apiEndpoint={this.props.apiEndpoint}\n            apiMethod={this.props.apiMethod}\n            model={this.form}\n            initialData={\n              monitor\n                ? {\n                    name: monitor.name,\n                    type: monitor.type,\n                    project: monitor.project.slug,\n                    ...this.formDataFromConfig(monitor.type, monitor.config),\n                  }\n                : {\n                    project: selectedProject ? selectedProject.slug : null,\n                  }\n            }\n            onSubmitSuccess={this.props.onSubmitSuccess}\n          >\n            <Panel>\n              <PanelHeader>{t('Details')}</PanelHeader>\n\n              <PanelBody>\n                {monitor && (\n                  <Field label={t('ID')}>\n                    <div className=\"controls\">\n                      <TextCopyInput>{monitor.id}</TextCopyInput>\n                    </div>\n                  </Field>\n                )}\n                <SelectField\n                  name=\"project\"\n                  label={t('Project')}\n                  disabled={!hasAccess}\n                  options={this.props.projects\n                    .filter(p => p.isMember)\n                    .map(p => ({value: p.slug, label: p.slug}))}\n                  required\n                />\n                <TextField\n                  name=\"name\"\n                  placeholder={t('My Cron Job')}\n                  label={t('Name')}\n                  disabled={!hasAccess}\n                  required\n                />\n              </PanelBody>\n            </Panel>\n            <Panel>\n              <PanelHeader>{t('Config')}</PanelHeader>\n\n              <PanelBody>\n                <SelectField\n                  name=\"type\"\n                  label={t('Type')}\n                  disabled={!hasAccess}\n                  options={MONITOR_TYPES}\n                  required\n                />\n                <Observer>\n                  {() => {\n                    switch (this.form.getValue('type')) {\n                      case 'cron_job':\n                        return (\n                          <Fragment>\n                            <NumberField\n                              name=\"config.max_runtime\"\n                              label={t('Max Runtime')}\n                              disabled={!hasAccess}\n                              help={t(\n                                \"The maximum runtime (in minutes) a check-in is allowed before it's marked as a failure.\"\n                              )}\n                              placeholder=\"e.g. 30\"\n                            />\n                            <SelectField\n                              name=\"config.schedule_type\"\n                              label={t('Schedule Type')}\n                              disabled={!hasAccess}\n                              options={SCHEDULE_TYPES}\n                              required\n                            />\n                          </Fragment>\n                        );\n                      default:\n                        return null;\n                    }\n                  }}\n                </Observer>\n                <Observer>\n                  {() => {\n                    switch (this.form.getValue('config.schedule_type')) {\n                      case 'crontab':\n                        return (\n                          <Fragment>\n                            <TextField\n                              name=\"config.schedule\"\n                              label={t('Schedule')}\n                              disabled={!hasAccess}\n                              placeholder=\"*/5 * * * *\"\n                              required\n                              help={tct(\n                                'Changes to the schedule will apply on the next check-in. See [link:Wikipedia] for crontab syntax.',\n                                {\n                                  link: <a href=\"https://en.wikipedia.org/wiki/Cron\" />,\n                                }\n                              )}\n                            />\n                            <NumberField\n                              name=\"config.checkin_margin\"\n                              label={t('Check-in Margin')}\n                              disabled={!hasAccess}\n                              help={t(\n                                \"The margin (in minutes) a check-in is allowed to exceed it's scheduled window before being treated as missed.\"\n                              )}\n                              placeholder=\"e.g. 30\"\n                            />\n                          </Fragment>\n                        );\n                      case 'interval':\n                        return (\n                          <Fragment>\n                            <NumberField\n                              name=\"config.schedule.frequency\"\n                              label={t('Frequency')}\n                              disabled={!hasAccess}\n                              placeholder=\"e.g. 1\"\n                              required\n                            />\n                            <SelectField\n                              name=\"config.schedule.interval\"\n                              label={t('Interval')}\n                              disabled={!hasAccess}\n                              options={INTERVALS}\n                              required\n                            />\n                            <NumberField\n                              name=\"config.checkin_margin\"\n                              label={t('Check-in Margin')}\n                              disabled={!hasAccess}\n                              help={t(\n                                \"The margin (in minutes) a check-in is allowed to exceed it's scheduled window before being treated as missed.\"\n                              )}\n                              placeholder=\"e.g. 30\"\n                            />\n                          </Fragment>\n                        );\n                      default:\n                        return null;\n                    }\n                  }}\n                </Observer>\n              </PanelBody>\n            </Panel>\n          </Form>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default withPageFilters(withProjects(MonitorForm));\n","import FormModel from 'sentry/components/forms/model';\n\nimport {MonitorConfig} from './types';\n\ntype TransformedData = {\n  config?: Partial<MonitorConfig>;\n};\n\nexport default class MonitorModel extends FormModel {\n  getTransformedData() {\n    return this.fields.toJSON().reduce<TransformedData>((data, [k, v]) => {\n      if (k.indexOf('config.') !== 0) {\n        data[k] = v;\n        return data;\n      }\n\n      if (!data.config) {\n        data.config = {};\n      }\n      if (k === 'config.schedule.frequency' || k === 'config.schedule.interval') {\n        if (!Array.isArray(data.config.schedule)) {\n          data.config.schedule = [null, null];\n        }\n      }\n\n      if (k === 'config.schedule.frequency') {\n        data.config!.schedule![0] = parseInt(v as string, 10);\n      } else if (k === 'config.schedule.interval') {\n        data.config!.schedule![1] = v;\n      } else {\n        data.config[k.substr(7)] = v;\n      }\n\n      return data;\n    }, {});\n  }\n\n  getTransformedValue(id: string) {\n    return id.indexOf('config') === 0 ? this.getValue(id) : super.getTransformedValue(id);\n  }\n}\n"],"names":["AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Fragment","browserHistory","MonitorForm","CreateMonitor","data","push","props","params","orgId","id","renderBody","onSubmitSuccess","Component","Observer","Access","Field","Form","NumberField","SelectField","TextCopyInput","TextField","Panel","PanelBody","PanelHeader","t","tct","withPageFilters","withProjects","MonitorModel","SCHEDULE_TYPES","value","label","MONITOR_TYPES","INTERVALS","formDataFromConfig","type","config","rv","schedule_type","checkin_margin","max_runtime","schedule","monitor","selectedProjectId","selection","projects","selectedProject","find","p","hasAccess","apiEndpoint","apiMethod","form","name","project","slug","filter","isMember","map","getValue","link","FormModel","getTransformedData","fields","toJSON","reduce","k","v","indexOf","Array","isArray","parseInt","substr","getTransformedValue"],"sourceRoot":""}