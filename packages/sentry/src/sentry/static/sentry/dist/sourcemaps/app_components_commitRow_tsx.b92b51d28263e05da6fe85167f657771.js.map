{"version":3,"file":"chunks/app_components_commitRow_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/commitLink.tsx","webpack:///./app/components/commitRow.tsx"],"sourcesContent":["import Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab, IconVsts} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Repository} from 'sentry/types';\nimport {getShortCommitHash} from 'sentry/utils';\n\ntype CommitFormatterParameters = {\n  baseUrl: string;\n  commitId: string;\n};\n\ntype CommitProvider = {\n  commitUrl: (opts: CommitFormatterParameters) => string;\n  icon: React.ReactNode;\n  providerIds: string[];\n};\n\n// TODO(epurkhiser, jess): This should be moved into plugins.\nconst SUPPORTED_PROVIDERS: Readonly<CommitProvider[]> = [\n  {\n    icon: <IconGithub size=\"xs\" />,\n    providerIds: ['github', 'integrations:github', 'integrations:github_enterprise'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconBitbucket size=\"xs\" />,\n    providerIds: ['bitbucket', 'integrations:bitbucket'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commits/${commitId}`,\n  },\n  {\n    icon: <IconVsts size=\"xs\" />,\n    providerIds: ['visualstudio', 'integrations:vsts'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconGitlab size=\"xs\" />,\n    providerIds: ['gitlab', 'integrations:gitlab'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n];\n\ntype Props = {\n  commitId: string;\n  inline?: boolean;\n  repository?: Repository;\n  showIcon?: boolean;\n};\n\nfunction CommitLink({inline, commitId, repository, showIcon = true}: Props) {\n  if (!commitId || !repository) {\n    return <span>{t('Unknown Commit')}</span>;\n  }\n\n  const shortId = getShortCommitHash(commitId);\n\n  const providerData = SUPPORTED_PROVIDERS.find(provider => {\n    if (!repository.provider) {\n      return false;\n    }\n    return provider.providerIds.includes(repository.provider.id);\n  });\n\n  if (providerData === undefined) {\n    return <span>{shortId}</span>;\n  }\n\n  const commitUrl =\n    repository.url &&\n    providerData.commitUrl({\n      commitId,\n      baseUrl: repository.url,\n    });\n\n  return !inline ? (\n    <Button\n      external\n      href={commitUrl}\n      size=\"sm\"\n      icon={showIcon ? providerData.icon : null}\n    >\n      {shortId}\n    </Button>\n  ) : (\n    <ExternalLink href={commitUrl}>\n      {showIcon ? providerData.icon : null}\n      {' ' + shortId}\n    </ExternalLink>\n  );\n}\n\nexport default CommitLink;\n","import {useCallback} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {openInviteMembersModal} from 'sentry/actionCreators/modal';\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport CommitLink from 'sentry/components/commitLink';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport Link from 'sentry/components/links/link';\nimport {PanelItem} from 'sentry/components/panels';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconWarning} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Commit} from 'sentry/types';\n\nfunction formatCommitMessage(message: string | null) {\n  if (!message) {\n    return t('No message provided');\n  }\n\n  return message.split(/\\n/)[0];\n}\n\ninterface CommitRowProps {\n  commit: Commit;\n  className?: string;\n  customAvatar?: React.ReactNode;\n}\n\nfunction CommitRow({commit, customAvatar, className}: CommitRowProps) {\n  const handleInviteClick = useCallback(() => {\n    if (!commit.author?.email) {\n      Sentry.captureException(\n        new Error(`Commit author has no email or id, invite flow is broken.`)\n      );\n      return;\n    }\n\n    openInviteMembersModal({\n      initialData: [\n        {\n          emails: new Set([commit.author.email]),\n        },\n      ],\n      source: 'suspect_commit',\n    });\n  }, [commit.author]);\n\n  return (\n    <PanelItem key={commit.id} className={className} data-test-id=\"commit-row\">\n      {customAvatar ? (\n        customAvatar\n      ) : commit.author && commit.author.id === undefined ? (\n        <AvatarWrapper>\n          <Hovercard\n            body={\n              <EmailWarning>\n                {tct(\n                  'The email [actorEmail] is not a member of your organization. [inviteUser:Invite] them or link additional emails in [accountSettings:account settings].',\n                  {\n                    actorEmail: <strong>{commit.author.email}</strong>,\n                    accountSettings: <StyledLink to=\"/settings/account/emails/\" />,\n                    inviteUser: <StyledLink to=\"\" onClick={handleInviteClick} />,\n                  }\n                )}\n              </EmailWarning>\n            }\n          >\n            <UserAvatar size={36} user={commit.author} />\n            <EmailWarningIcon data-test-id=\"email-warning\">\n              <IconWarning size=\"xs\" />\n            </EmailWarningIcon>\n          </Hovercard>\n        </AvatarWrapper>\n      ) : (\n        <AvatarWrapper>\n          <UserAvatar size={36} user={commit.author} />\n        </AvatarWrapper>\n      )}\n\n      <CommitMessage>\n        <Message>{formatCommitMessage(commit.message)}</Message>\n        <Meta>\n          {tct('[author] committed [timeago]', {\n            author: <strong>{commit.author?.name ?? t('Unknown author')}</strong>,\n            timeago: <TimeSince date={commit.dateCreated} />,\n          })}\n        </Meta>\n      </CommitMessage>\n\n      <div>\n        <CommitLink commitId={commit.id} repository={commit.repository} />\n      </div>\n    </PanelItem>\n  );\n}\n\nconst AvatarWrapper = styled('div')`\n  position: relative;\n  align-self: flex-start;\n  margin-right: ${space(2)};\n`;\n\nconst EmailWarning = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 1.4;\n  margin: -4px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.textColor};\n  border-bottom: 1px dotted ${p => p.theme.textColor};\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nconst EmailWarningIcon = styled('span')`\n  position: absolute;\n  bottom: -6px;\n  right: -7px;\n  line-height: 12px;\n  border-radius: 50%;\n  border: 1px solid ${p => p.theme.background};\n  background: ${p => p.theme.yellow200};\n  padding: 1px 2px 3px 2px;\n`;\n\nconst CommitMessage = styled('div')`\n  flex: 1;\n  flex-direction: column;\n  min-width: 0;\n  margin-right: ${space(2)};\n`;\n\nconst Message = styled(TextOverflow)`\n  font-size: 15px;\n  line-height: 1.1;\n  font-weight: bold;\n`;\n\nconst Meta = styled(TextOverflow)`\n  font-size: 13px;\n  line-height: 1.5;\n  margin: 0;\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledCommitRow = styled(CommitRow)`\n  align-items: center;\n`;\n\nexport {StyledCommitRow as CommitRow};\n"],"names":["Button","ExternalLink","IconBitbucket","IconGithub","IconGitlab","IconVsts","t","getShortCommitHash","SUPPORTED_PROVIDERS","icon","providerIds","commitUrl","baseUrl","commitId","CommitLink","inline","repository","showIcon","shortId","providerData","find","provider","includes","id","undefined","url","useCallback","Sentry","openInviteMembersModal","UserAvatar","Hovercard","Link","PanelItem","TextOverflow","TimeSince","IconWarning","tct","space","formatCommitMessage","message","split","CommitRow","commit","customAvatar","className","handleInviteClick","author","email","captureException","Error","initialData","emails","Set","source","actorEmail","accountSettings","inviteUser","name","timeago","dateCreated","AvatarWrapper","EmailWarning","p","theme","fontSizeSmall","StyledLink","textColor","EmailWarningIcon","background","yellow200","CommitMessage","Message","Meta","subText","StyledCommitRow"],"sourceRoot":""}