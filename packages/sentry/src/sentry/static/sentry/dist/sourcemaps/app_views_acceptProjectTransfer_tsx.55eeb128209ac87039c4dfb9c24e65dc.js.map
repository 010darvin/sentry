{"version":3,"file":"chunks/app_views_acceptProjectTransfer_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/views/acceptProjectTransfer.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport Form from 'sentry/components/forms/form';\nimport SelectField from 'sentry/components/forms/selectField';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype TransferDetails = {\n  organizations: Organization[];\n  project: Project;\n};\n\ntype State = {\n  transferDetails: TransferDetails | null;\n} & AsyncView['state'];\n\nclass AcceptProjectTransfer extends AsyncView<Props, State> {\n  disableErrorReport = false;\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const query = this.props.location.query;\n    return [['transferDetails', '/accept-transfer/', {query}]];\n  }\n\n  getTitle() {\n    return t('Accept Project Transfer');\n  }\n\n  handleSubmit = formData => {\n    this.api.request('/accept-transfer/', {\n      method: 'POST',\n      data: {\n        data: this.props.location.query.data,\n        organization: formData.organization,\n      },\n      success: () => {\n        const orgSlug = formData.organization;\n\n        this.props.router.push(`/${orgSlug}`);\n        addSuccessMessage(t('Project successfully transferred'));\n      },\n      error: error => {\n        const errorMsg =\n          error && error.responseJSON && typeof error.responseJSON.detail === 'string'\n            ? error.responseJSON.detail\n            : '';\n\n        addErrorMessage(\n          t('Unable to transfer project') + errorMsg ? `: ${errorMsg}` : ''\n        );\n      },\n    });\n  };\n\n  renderError(error) {\n    let disableLog = false;\n    // Check if there is an error message with `transferDetails` endpoint\n    // If so, show as toast and ignore, otherwise log to sentry\n    if (error && error.responseJSON && typeof error.responseJSON.detail === 'string') {\n      addErrorMessage(error.responseJSON.detail);\n      disableLog = true;\n    }\n\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {transferDetails} = this.state;\n    const options = transferDetails?.organizations.map(org => ({\n      label: org.slug,\n      value: org.slug,\n    }));\n    const organization = options?.[0]?.value;\n\n    return (\n      <NarrowLayout>\n        <SettingsPageHeader title={t('Approve Transfer Project Request')} />\n        <p>\n          {tct(\n            'Projects must be transferred to a specific [organization]. ' +\n              'You can grant specific teams access to the project later under the [projectSettings]. ' +\n              '(Note that granting access to at least one team is necessary for the project to ' +\n              'appear in all parts of the UI.)',\n            {\n              organization: <strong>{t('Organization')}</strong>,\n              projectSettings: <strong>{t('Project Settings')}</strong>,\n            }\n          )}\n        </p>\n        {transferDetails && (\n          <p>\n            {tct(\n              'Please select which [organization] you want for the project [project].',\n              {\n                organization: <strong>{t('Organization')}</strong>,\n                project: transferDetails.project.slug,\n              }\n            )}\n          </p>\n        )}\n        <Form\n          onSubmit={this.handleSubmit}\n          submitLabel={t('Transfer Project')}\n          submitPriority=\"danger\"\n          initialData={organization ? {organization} : undefined}\n        >\n          <SelectField\n            options={options}\n            label={t('Organization')}\n            name=\"organization\"\n            style={{borderBottom: 'none'}}\n          />\n        </Form>\n      </NarrowLayout>\n    );\n  }\n}\n\nexport default AcceptProjectTransfer;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["useEffect","logout","IconSentry","t","useApi","NarrowLayout","maxWidth","showLogout","children","api","document","body","classList","add","remove","handleLogout","window","location","assign","Logout","p","theme","fontSizeLarge","addErrorMessage","addSuccessMessage","Form","SelectField","tct","AsyncView","SettingsPageHeader","AcceptProjectTransfer","formData","request","method","data","props","query","organization","success","orgSlug","router","push","error","errorMsg","responseJSON","detail","getEndpoints","getTitle","renderError","disableLog","renderBody","transferDetails","state","options","organizations","map","org","label","slug","value","projectSettings","project","handleSubmit","undefined","borderBottom","AsyncComponent","SentryDocumentTitle","render","renderComponent"],"sourceRoot":""}