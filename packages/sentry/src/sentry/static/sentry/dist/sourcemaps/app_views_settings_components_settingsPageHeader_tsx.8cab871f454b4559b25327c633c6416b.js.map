{"version":3,"file":"chunks/app_views_settings_components_settingsPageHeader_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAGA;AACA;;;;AAsBA,SAASE,0BAAT,OASU;EAAA,IAT0B;IAClCC,IADkC;IAElCC,KAFkC;IAGlCC,QAHkC;IAIlCC,MAJkC;IAKlCC,IALkC;IAMlCC,IANkC;IAOlCC,aAAa,GAAG,KAPkB;IAQlC,GAAGC;EAR+B,CAS1B;EACR;EACA;EACA;EACA,MAAMC,QAAQ,GAAG,CAACN,QAAlB;EAEA,OACE,6EAASK,KAAT;IAAA,WACE,iEAAC,eAAD;MAAiB,QAAQ,EAAEC,QAA3B;MAAA,WACE,iEAAC,YAAD;QAAA,WACGR,IAAI,IAAI,gEAAC,IAAD;UAAA,UAAOA;QAAP,EADX,EAEGC,KAAK,IACJ,iEAAC,KAAD;UAAO,IAAI,EAAEI,IAAb;UAAmB,MAAM,EAAEC,aAA3B;UAAA,WACE,gEAAC,mEAAD;YAAA,UAAcL;UAAd,EADF,EAEGC,QAAQ,IAAI,gEAAC,QAAD;YAAA,UAAWA;UAAX,EAFf;QAAA,EAHJ;MAAA,EADF,EAUGC,MAAM,IAAI,gEAAC,MAAD;QAAQ,QAAQ,EAAEK,QAAlB;QAAA,UAA6BL;MAA7B,EAVb;IAAA,EADF,EAcGC,IAAI,IAAI,gEAAC,WAAD;MAAA,UAAcA;IAAd,EAdX,EAeGC,IAAI,IAAI,gEAAC,WAAD;MAAA,UAAcA;IAAd,EAfX;EAAA,EADF;AAmBD;;AAlCQN;;AAyCT,MAAMU,eAAe,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,8BAEJC,CAAC,IAAKA,CAAC,CAACF,QAAF,GAAa,QAAb,GAAwB,YAF1B,yBAArB;;AAIA,MAAMG,YAAY,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAlB;;AAIA,MAAMC,KAAK,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,CACPF,CAAC,IAAI,CAACA,CAAC,CAACG,MAAH,IAAc,oCADZ,cAECf,+DAAK,CAAC,CAAD,CAFN,OAEaA,+DAAK,CAAC,CAAD,CAFlB,OAEyBA,+DAAK,CAAC,CAAD,CAF9B,2BAAX;;AAIA,MAAMgB,QAAQ,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,WACHJ,CAAC,IAAIA,CAAC,CAACK,KAAF,CAAQC,OADV,iCAGCN,CAAC,IAAIA,CAAC,CAACK,KAAF,CAAQE,aAHd,eAIDnB,+DAAK,CAAC,GAAD,CAJJ,6BAAd;;AAOA,MAAMoB,IAAI,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,kBACQpB,+DAAK,CAAC,CAAD,CADb,yBAAV;;AAIA,MAAMqB,MAAM,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,gBACIT,CAAC,IAAKA,CAAC,CAACF,QAAF,GAAa,GAAb,GAAmBV,+DAAK,CAAC,CAAD,CADlC,yBAAZ;;AAIA,MAAMsB,kBAAkB,GAAG,8EAAOrB,0BAAP;EAAA;AAAA,MAAH,gCAIPD,+DAAK,CAAC,CAAD,CAJE,yBAAxB;;AAOA,MAAMuB,WAAW,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,uBAEDvB,+DAAK,CAAC,CAAD,CAFJ,yBAAjB;;AAIA,MAAMwB,WAAW,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAjB;;AAKA,iEAAeF,kBAAf","sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx"],"sourcesContent":["import {HTMLProps, ReactNode} from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  // The title\n  title: ReactNode;\n\n  // CTA button\n  action?: ReactNode;\n  body?: ReactNode;\n\n  className?: string;\n  // Icon left of title\n  icon?: ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  subtitle?: ReactNode;\n\n  tabs?: ReactNode;\n};\n\nfunction UnstyledSettingsPageHeader({\n  icon,\n  title,\n  subtitle,\n  action,\n  body,\n  tabs,\n  noTitleStyles = false,\n  ...props\n}: Props) {\n  // If Header is narrow, use align-items to center <Action>.\n  // Otherwise, use a fixed margin to prevent an odd alignment.\n  // This is needed as Actions could be a button or a dropdown.\n  const isNarrow = !subtitle;\n\n  return (\n    <div {...props}>\n      <TitleAndActions isNarrow={isNarrow}>\n        <TitleWrapper>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n              {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            </Title>\n          )}\n        </TitleWrapper>\n        {action && <Action isNarrow={isNarrow}>{action}</Action>}\n      </TitleAndActions>\n\n      {body && <BodyWrapper>{body}</BodyWrapper>}\n      {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n    </div>\n  );\n}\n\ninterface TitleProps extends React.HTMLAttributes<HTMLDivElement> {\n  styled?: boolean;\n  tabs?: ReactNode;\n}\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n"],"names":["HeaderTitle","space","UnstyledSettingsPageHeader","icon","title","subtitle","action","body","tabs","noTitleStyles","props","isNarrow","TitleAndActions","p","TitleWrapper","Title","styled","Subtitle","theme","gray400","fontSizeLarge","Icon","Action","SettingsPageHeader","BodyWrapper","TabsWrapper"],"sourceRoot":""}