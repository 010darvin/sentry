{"version":3,"file":"chunks/app_views_settings_project_projectCreateServiceHook_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;;;;AAIA,SAASK,wBAAT,OAAmD;EAAA,IAAjB;IAACC;EAAD,CAAiB;EACjD,MAAM;IAACC,KAAD;IAAQC;EAAR,IAAqBF,MAA3B;EACA,MAAMG,KAAK,GAAGP,gDAAC,CAAC,qBAAD,CAAf;EAEA,OACE,gEAAC,6EAAD;IAAqB,KAAK,EAAEO,KAA5B;IAAA,UACE,iEAAC,2CAAD;MAAA,WACE,gEAAC,2FAAD;QAAoB,KAAK,EAAEA;MAA3B,EADF,EAEE,gEAAC,6FAAD;QACE,KAAK,EAAEF,KADT;QAEE,SAAS,EAAEC,SAFb;QAGE,WAAW,EAAE;UAACE,MAAM,EAAE,EAAT;UAAaC,QAAQ,EAAE;QAAvB;MAHf,EAFF;IAAA;EADF,EADF;AAYD;;AAhBQN;AAkBT,iEAAeA,wBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMiB,aAAsB,GAAG,CAAC,aAAD,EAAgB,eAAhB,EAAiCC,GAAjC,CAAqCC,CAAC,IAAI,CAACA,CAAD,EAAIA,CAAJ,CAA1C,CAA/B;AASe,MAAMpB,uBAAN,SAAsCQ,4CAAtC,CAAuD;EAAA;IAAA;;IAAA,2GAClD,MAAM;MACtB,MAAM;QAACL,KAAD;QAAQC;MAAR,IAAqB,KAAKiB,KAAhC;MACAZ,6DAAA,CAAqB,aAAYN,KAAM,aAAYC,SAAU,SAA7D;IACD,CAJmE;EAAA;;EAMpEmB,MAAM,GAAG;IACP,MAAM;MAACC,WAAD;MAAcrB,KAAd;MAAqBC,SAArB;MAAgCqB;IAAhC,IAA0C,KAAKJ,KAArD;IAEA,MAAMK,QAAQ,GAAGD,MAAM,GAClB,aAAYtB,KAAM,IAAGC,SAAU,UAASqB,MAAO,GAD7B,GAElB,aAAYtB,KAAM,IAAGC,SAAU,SAFpC;IAIA,OACE,iEAAC,2DAAD;MAAA,UACE,kEAAC,uEAAD;QACE,SAAS,EAAEqB,MAAM,GAAG,KAAH,GAAW,MAD9B;QAEE,WAAW,EAAEC,QAFf;QAGE,WAAW,EAAEF,WAHf;QAIE,eAAe,EAAE,KAAKG,eAJxB;QAKE,WAAW,EAAE;UACXC,SAAS,EAAE,CADA;UAEXC,YAAY,EAAE;QAFH,CALf;QASE,WAAW,EAAEJ,MAAM,GAAG3B,iDAAC,CAAC,cAAD,CAAJ,GAAuBA,iDAAC,CAAC,aAAD,CAT7C;QAAA,WAWE,iEAAC,iEAAD;UAAA,UAAcA,iDAAC,CAAC,oBAAD;QAAf,EAXF,EAYE,kEAAC,+DAAD;UAAA,WACE,iEAAC,4EAAD;YAAc,IAAI,EAAC,UAAnB;YAA8B,KAAK,EAAEA,iDAAC,CAAC,QAAD;UAAtC,EADF,EAEE,iEAAC,yEAAD;YACE,IAAI,EAAC,KADP;YAEE,KAAK,EAAEA,iDAAC,CAAC,KAAD,CAFV;YAGE,QAAQ,MAHV;YAIE,IAAI,EAAEA,iDAAC,CAAC,oCAAD;UAJT,EAFF,EAQE,iEAAC,yEAAD;YACE,IAAI,EAAC,QADP;YAEE,KAAK,EAAEA,iDAAC,CAAC,QAAD,CAFV;YAGE,MAAM,EAAE,KAHV;YAIE,IAAI,EAAEA,iDAAC,CAAC,2CAAD,CAJT;YAAA,UAMG;cAAA,IAAC;gBAACgC,KAAD;gBAAQC;cAAR,CAAD;cAAA,OACC,iEAAC,yFAAD;gBACE,QAAQ,EAAEA,QADZ;gBAEE,KAAK,EAAED,KAFT;gBAGE,OAAO,EAAEZ;cAHX,EADD;YAAA;UANH,EARF;QAAA,EAZF;MAAA;IADF,EADF;EAwCD;;AArDmE;AAAjDlB","sources":["webpack:///./app/views/settings/project/projectCreateServiceHook.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'sentry/views/settings/project/serviceHookSettingsForm';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\nfunction ProjectCreateServiceHook({params}: Props) {\n  const {orgId, projectId} = params;\n  const title = t('Create Service Hook');\n\n  return (\n    <SentryDocumentTitle title={title}>\n      <Fragment>\n        <SettingsPageHeader title={title} />\n        <ServiceHookSettingsForm\n          orgId={orgId}\n          projectId={projectId}\n          initialData={{events: [], isActive: true}}\n        />\n      </Fragment>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default ProjectCreateServiceHook;\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport BooleanField from 'sentry/components/forms/booleanField';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport FormField from 'sentry/components/forms/formField';\nimport TextField from 'sentry/components/forms/textField';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Choices, ServiceHook} from 'sentry/types';\n\nconst EVENT_CHOICES: Choices = ['event.alert', 'event.created'].map(e => [e, e]);\n\ntype Props = {\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  orgId: string;\n  projectId: string;\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends Component<Props> {\n  onSubmitSuccess = () => {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n  };\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({value, onChange}) => (\n                <MultipleCheckbox\n                  onChange={onChange}\n                  value={value}\n                  choices={EVENT_CHOICES}\n                />\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n"],"names":["Fragment","SentryDocumentTitle","t","SettingsPageHeader","ServiceHookSettingsForm","ProjectCreateServiceHook","params","orgId","projectId","title","events","isActive","Component","browserHistory","ApiForm","BooleanField","MultipleCheckbox","FormField","TextField","Panel","PanelBody","PanelHeader","EVENT_CHOICES","map","e","props","push","render","initialData","hookId","endpoint","onSubmitSuccess","marginTop","paddingRight","value","onChange"],"sourceRoot":""}