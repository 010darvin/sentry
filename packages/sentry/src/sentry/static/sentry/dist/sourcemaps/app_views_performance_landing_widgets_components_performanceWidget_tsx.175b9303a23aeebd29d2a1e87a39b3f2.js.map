{"version":3,"file":"chunks/app_views_performance_landing_widgets_components_performanceWidget_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/performance/contexts/metricsEnhancedPerformanceDataContext.tsx","webpack:///./app/views/performance/landing/widgets/components/dataStateSwitch.tsx","webpack:///./app/views/performance/landing/widgets/components/performanceWidget.tsx","webpack:///./app/views/performance/landing/widgets/components/performanceWidgetContainer.tsx","webpack:///./app/views/performance/landing/widgets/components/queryHandler.tsx","webpack:///./app/views/performance/landing/widgets/components/widgetHeader.tsx","webpack:///./app/views/performance/landing/widgets/types.tsx","webpack:///./app/views/performance/landing/widgets/utils.tsx","webpack:///./app/views/performance/landing/widgets/widgetDefinitions.tsx"],"sourcesContent":["import {ReactNode, useCallback, useState} from 'react';\n\nimport Tag from 'sentry/components/tag';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport {WIDGET_MAP_DENY_LIST} from 'sentry/views/performance/landing/widgets/utils';\nimport {PerformanceWidgetSetting} from 'sentry/views/performance/landing/widgets/widgetDefinitions';\n\nimport {AutoSampleState, useMEPSettingContext} from './metricsEnhancedSetting';\nimport {createDefinedContext} from './utils';\n\ninterface MetricsEnhancedPerformanceDataContext {\n  setIsMetricsData: (value?: boolean) => void;\n  isMetricsData?: boolean;\n}\n\nconst [_MEPDataProvider, _useMEPDataContext] =\n  createDefinedContext<MetricsEnhancedPerformanceDataContext>({\n    name: 'MetricsEnhancedPerformanceDataContext',\n  });\n\nexport const MEPDataProvider = ({\n  children,\n  chartSetting,\n}: {\n  children: ReactNode;\n  chartSetting?: PerformanceWidgetSetting;\n}) => {\n  const {setAutoSampleState} = useMEPSettingContext();\n  const [isMetricsData, _setIsMetricsData] = useState<boolean | undefined>(undefined); // Uses undefined to cover 'not initialized'\n\n  const setIsMetricsData = useCallback(\n    (value?: boolean) => {\n      if (WIDGET_MAP_DENY_LIST.includes(chartSetting as PerformanceWidgetSetting)) {\n        // Certain widgets shouldn't update their sampled tags or have the page info change eg. Auto(...)\n        return;\n      }\n      if (value === true) {\n        setAutoSampleState(AutoSampleState.metrics);\n      } else if (value === false) {\n        setAutoSampleState(AutoSampleState.transactions);\n      }\n      _setIsMetricsData(value);\n    },\n    [setAutoSampleState, _setIsMetricsData, chartSetting]\n  );\n\n  return (\n    <_MEPDataProvider value={{isMetricsData, setIsMetricsData}}>\n      {children}\n    </_MEPDataProvider>\n  );\n};\n\nexport const useMEPDataContext = _useMEPDataContext;\n\nexport const MEPTag = () => {\n  const {isMetricsData} = useMEPDataContext();\n  const organization = useOrganization();\n\n  if (!organization.features.includes('performance-use-metrics')) {\n    // Separate if for easier flag deletion\n    return null;\n  }\n\n  if (isMetricsData === undefined) {\n    return <span data-test-id=\"no-metrics-data-tag\" />;\n  }\n\n  const tagText = isMetricsData ? 'processed' : 'indexed';\n\n  return <Tag data-test-id=\"has-metrics-data-tag\">{tagText}</Tag>;\n};\n","import {Fragment} from 'react';\n\nexport function DataStateSwitch(props: {\n  dataComponents: JSX.Element[];\n  emptyComponent: JSX.Element;\n  errorComponent: JSX.Element;\n\n  hasData: boolean;\n  isErrored: boolean;\n  isLoading: boolean;\n  loadingComponent?: JSX.Element;\n}): JSX.Element {\n  if (props.isErrored) {\n    return props.errorComponent;\n  }\n  if (props.isLoading && props.loadingComponent) {\n    return props.loadingComponent;\n  }\n  if (!props.hasData) {\n    return props.emptyComponent;\n  }\n  return <Fragment>{props.dataComponents}</Fragment>;\n}\n","import {Fragment, useCallback, useRef, useState} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconWarning} from 'sentry/icons/iconWarning';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {MEPDataProvider} from 'sentry/utils/performance/contexts/metricsEnhancedPerformanceDataContext';\nimport useApi from 'sentry/utils/useApi';\nimport getPerformanceWidgetContainer from 'sentry/views/performance/landing/widgets/components/performanceWidgetContainer';\n\nimport {\n  GenericPerformanceWidgetProps,\n  WidgetDataConstraint,\n  WidgetDataProps,\n  WidgetDataResult,\n  WidgetPropUnion,\n} from '../types';\nimport {PerformanceWidgetSetting} from '../widgetDefinitions';\n\nimport {DataStateSwitch} from './dataStateSwitch';\nimport {QueryHandler} from './queryHandler';\nimport {WidgetHeader} from './widgetHeader';\n\n// Generic performance widget for type T, where T defines all the data contained in the widget.\nexport function GenericPerformanceWidget<T extends WidgetDataConstraint>(\n  props: WidgetPropUnion<T>\n) {\n  // Use object keyed to chart setting so switching between charts of a similar type doesn't retain data with query components still having inflight requests.\n  const [allWidgetData, setWidgetData] = useState<{[chartSetting: string]: T}>({});\n  const widgetData = allWidgetData[props.chartSetting] ?? {};\n  const widgetDataRef = useRef(widgetData);\n\n  const setWidgetDataForKey = useCallback(\n    (dataKey: string, result?: WidgetDataResult) => {\n      const _widgetData = widgetDataRef.current;\n      const newWidgetData = {..._widgetData, [dataKey]: result};\n      widgetDataRef.current = newWidgetData;\n      setWidgetData({[props.chartSetting]: newWidgetData});\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [allWidgetData, setWidgetData]\n  );\n  const removeWidgetDataForKey = useCallback(\n    (dataKey: string) => {\n      const _widgetData = widgetDataRef.current;\n      const newWidgetData = {..._widgetData};\n      delete newWidgetData[dataKey];\n      widgetDataRef.current = newWidgetData;\n      setWidgetData({[props.chartSetting]: newWidgetData});\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [allWidgetData, setWidgetData]\n  );\n  const widgetProps = {widgetData, setWidgetDataForKey, removeWidgetDataForKey};\n\n  const queries = Object.entries(props.Queries).map(([key, definition]) => ({\n    ...definition,\n    queryKey: key,\n  }));\n\n  const api = useApi();\n\n  const totalHeight = props.Visualizations.reduce((acc, curr) => acc + curr.height, 0);\n\n  return (\n    <Fragment>\n      <MEPDataProvider chartSetting={props.chartSetting}>\n        <QueryHandler\n          eventView={props.eventView}\n          widgetData={widgetData}\n          setWidgetDataForKey={setWidgetDataForKey}\n          removeWidgetDataForKey={removeWidgetDataForKey}\n          queryProps={props}\n          queries={queries}\n          api={api}\n        />\n        <_DataDisplay<T> {...props} {...widgetProps} totalHeight={totalHeight} />\n      </MEPDataProvider>\n    </Fragment>\n  );\n}\n\nfunction trackDataComponentClicks(\n  chartSetting: PerformanceWidgetSetting,\n  organization: Organization\n) {\n  trackAdvancedAnalyticsEvent('performance_views.landingv3.widget.interaction', {\n    organization,\n    widget_type: chartSetting,\n  });\n}\n\nfunction _DataDisplay<T extends WidgetDataConstraint>(\n  props: GenericPerformanceWidgetProps<T> & WidgetDataProps<T> & {totalHeight: number}\n) {\n  const {Visualizations, chartHeight, totalHeight, containerType, EmptyComponent} = props;\n\n  const Container = getPerformanceWidgetContainer({\n    containerType,\n  });\n\n  const numberKeys = Object.keys(props.Queries).length;\n  const missingDataKeys = Object.values(props.widgetData).length !== numberKeys;\n  const hasData =\n    !missingDataKeys && Object.values(props.widgetData).every(d => !d || d.hasData);\n  const isLoading = Object.values(props.widgetData).some(d => !d || d.isLoading);\n  const isErrored =\n    !missingDataKeys && Object.values(props.widgetData).some(d => d && d.isErrored);\n\n  return (\n    <Container data-test-id=\"performance-widget-container\">\n      <ContentContainer>\n        <WidgetHeader<T> {...props} />\n      </ContentContainer>\n      <DataStateSwitch\n        isLoading={isLoading}\n        isErrored={isErrored}\n        hasData={hasData}\n        errorComponent={<DefaultErrorComponent height={totalHeight} />}\n        dataComponents={Visualizations.map((Visualization, index) => (\n          <ContentContainer\n            key={index}\n            noPadding={Visualization.noPadding}\n            bottomPadding={Visualization.bottomPadding}\n            data-test-id=\"widget-state-has-data\"\n            onClick={() =>\n              trackDataComponentClicks(props.chartSetting, props.organization)\n            }\n          >\n            {getDynamicText({\n              value: (\n                <Visualization.component\n                  grid={defaultGrid}\n                  queryFields={Visualization.fields}\n                  widgetData={props.widgetData}\n                  height={chartHeight}\n                />\n              ),\n              fixed: <Placeholder height={`${chartHeight}px`} />,\n            })}\n          </ContentContainer>\n        ))}\n        loadingComponent={<PerformanceWidgetPlaceholder height={`${totalHeight}px`} />}\n        emptyComponent={\n          EmptyComponent ? (\n            <EmptyComponent />\n          ) : (\n            <PerformanceWidgetPlaceholder height={`${totalHeight}px`} />\n          )\n        }\n      />\n    </Container>\n  );\n}\n\nexport const DataDisplay = withRouter(_DataDisplay);\n\nconst DefaultErrorComponent = (props: {height: number}) => {\n  return (\n    <ErrorPanel data-test-id=\"widget-state-is-errored\" height={`${props.height}px`}>\n      <IconWarning color=\"gray300\" size=\"lg\" />\n    </ErrorPanel>\n  );\n};\n\nconst defaultGrid = {\n  left: space(0),\n  right: space(0),\n  top: space(2),\n  bottom: space(1),\n};\n\nconst ContentContainer = styled('div')<{bottomPadding?: boolean; noPadding?: boolean}>`\n  padding-left: ${p => (p.noPadding ? space(0) : space(2))};\n  padding-right: ${p => (p.noPadding ? space(0) : space(2))};\n  padding-bottom: ${p => (p.bottomPadding ? space(1) : space(0))};\n`;\n\nconst PerformanceWidgetPlaceholder = styled(Placeholder)`\n  border-color: transparent;\n  border-bottom-right-radius: inherit;\n  border-bottom-left-radius: inherit;\n`;\n\nGenericPerformanceWidget.defaultProps = {\n  containerType: 'panel',\n  chartHeight: 200,\n};\n","import styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport space from 'sentry/styles/space';\n\nexport type PerformanceWidgetContainerTypes = 'panel' | 'inline';\n\nconst StyledPanel = styled(Panel)`\n  padding-top: ${space(2)};\n  margin-bottom: 0;\n`;\nconst Div = styled('div')``;\n\nconst getPerformanceWidgetContainer = ({\n  containerType,\n}: {\n  containerType: PerformanceWidgetContainerTypes;\n}) => {\n  if (containerType === 'panel') {\n    return StyledPanel;\n  }\n  if (containerType === 'inline') {\n    return Div;\n  }\n  return Div;\n};\n\nexport default getPerformanceWidgetContainer;\n","import {Fragment, useEffect} from 'react';\n\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {useMEPDataContext} from 'sentry/utils/performance/contexts/metricsEnhancedPerformanceDataContext';\n\nimport {QueryDefinitionWithKey, QueryHandlerProps, WidgetDataConstraint} from '../types';\nimport {PerformanceWidgetSetting} from '../widgetDefinitions';\n\n/*\n  Component to handle switching component-style queries over to state. This should be temporary to make it easier to switch away from waterfall style api components.\n*/\nexport function QueryHandler<T extends WidgetDataConstraint>(\n  props: QueryHandlerProps<T>\n) {\n  const children = props.children ?? <Fragment />;\n\n  if (!props.queries.length) {\n    return <Fragment>{children}</Fragment>;\n  }\n\n  return (\n    <Fragment>\n      {props.queries\n        .filter(q => (q.enabled ? q.enabled(props.widgetData) : true))\n        .map(query => (\n          <SingleQueryHandler key={query.queryKey} {...props} query={query} />\n        ))}\n    </Fragment>\n  );\n}\n\nfunction genericQueryReferrer(setting: PerformanceWidgetSetting) {\n  return `api.performance.generic-widget-chart.${setting.replace(/_/g, '-')}`;\n}\n\nfunction SingleQueryHandler<T extends WidgetDataConstraint>(\n  props: QueryHandlerProps<T> & {query: QueryDefinitionWithKey<T>}\n) {\n  const query = props.query;\n  const globalSelection = props.queryProps.eventView.getPageFilters();\n  const start = globalSelection.datetime.start\n    ? getUtcToLocalDateObject(globalSelection.datetime.start)\n    : null;\n\n  const end = globalSelection.datetime.end\n    ? getUtcToLocalDateObject(globalSelection.datetime.end)\n    : null;\n\n  useEffect(\n    () => () => {\n      // Destroy previous data on unmount, in case enabled value changes and unmounts the query component.\n      props.removeWidgetDataForKey(query.queryKey);\n    },\n    []\n  );\n\n  return (\n    <query.component\n      key={query.queryKey}\n      fields={query.fields}\n      yAxis={query.fields}\n      start={start}\n      end={end}\n      period={globalSelection.datetime.period}\n      project={globalSelection.projects}\n      environment={globalSelection.environments}\n      organization={props.queryProps.organization}\n      orgSlug={props.queryProps.organization.slug}\n      eventView={props.queryProps.eventView}\n      query={props.queryProps.eventView.getQueryWithAdditionalConditions()}\n      widgetData={props.widgetData}\n      referrer={genericQueryReferrer(props.queryProps.chartSetting)}\n    >\n      {results => {\n        return (\n          <Fragment>\n            <QueryResultSaver<T> results={results} {...props} query={query} />\n          </Fragment>\n        );\n      }}\n    </query.component>\n  );\n}\n\nfunction QueryResultSaver<T extends WidgetDataConstraint>(\n  props: {\n    // TODO(k-fish): Fix this any.\n    query: QueryDefinitionWithKey<T>;\n    results: any;\n  } & QueryHandlerProps<T>\n) {\n  const mepContext = useMEPDataContext();\n  const {results, query} = props;\n\n  const transformed = query.transform(props.queryProps, results, props.query);\n\n  useEffect(() => {\n    const isMetricsData =\n      results?.seriesAdditionalInfo?.[props.queryProps.fields[0]]?.isMetricsData ??\n      results?.histograms?.meta?.isMetricsData;\n    mepContext.setIsMetricsData(isMetricsData);\n    props.setWidgetDataForKey(query.queryKey, transformed);\n  }, [transformed?.hasData, transformed?.isLoading, transformed?.isErrored]);\n  return <Fragment />;\n}\n","import styled from '@emotion/styled';\n\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport space from 'sentry/styles/space';\nimport {MEPTag} from 'sentry/utils/performance/contexts/metricsEnhancedPerformanceDataContext';\n\nimport {\n  GenericPerformanceWidgetProps,\n  WidgetDataConstraint,\n  WidgetDataProps,\n} from '../types';\n\nexport function WidgetHeader<T extends WidgetDataConstraint>(\n  props: GenericPerformanceWidgetProps<T> & WidgetDataProps<T>\n) {\n  const {title, titleTooltip, Subtitle, HeaderActions} = props;\n  return (\n    <WidgetHeaderContainer>\n      <TitleContainer>\n        <StyledHeaderTitleLegend data-test-id=\"performance-widget-title\">\n          <TextOverflow>{title}</TextOverflow>\n          <MEPTag />\n          <QuestionTooltip position=\"top\" size=\"sm\" title={titleTooltip} />\n        </StyledHeaderTitleLegend>\n        {Subtitle ? <Subtitle {...props} /> : null}\n      </TitleContainer>\n      <HeaderActionsContainer>\n        {HeaderActions && <HeaderActions {...props} />}\n      </HeaderActionsContainer>\n    </WidgetHeaderContainer>\n  );\n}\n\nconst StyledHeaderTitleLegend = styled(HeaderTitleLegend)`\n  position: relative;\n  z-index: initial;\n`;\n\nconst TitleContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst WidgetHeaderContainer = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: ${space(1)};\n`;\n\nconst HeaderActionsContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(1)};\n`;\n","import {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport BaseChart from 'sentry/components/charts/baseChart';\nimport {RenderProps} from 'sentry/components/charts/eventsRequest';\nimport {DateString, Organization, OrganizationSummary} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\n\nimport {PerformanceWidgetContainerTypes} from './components/performanceWidgetContainer';\nimport {ChartDefinition, PerformanceWidgetSetting} from './widgetDefinitions';\n\nexport enum VisualizationDataState {\n  ERROR = 'error',\n  LOADING = 'loading',\n  EMPTY = 'empty',\n  DATA = 'data',\n}\n\nexport enum GenericPerformanceWidgetDataType {\n  histogram = 'histogram',\n  area = 'area',\n  vitals = 'vitals',\n  line_list = 'line_list',\n  trends = 'trends',\n}\n\nexport type PerformanceWidgetProps = {\n  ContainerActions: React.FC<{isLoading: boolean}>;\n  chartDefinition: ChartDefinition;\n  chartHeight: number;\n\n  chartSetting: PerformanceWidgetSetting;\n  eventView: EventView;\n  fields: string[];\n  location: Location;\n\n  organization: Organization;\n  title: string;\n  titleTooltip: string;\n\n  chartColor?: string;\n\n  withStaticFilters?: boolean;\n};\n\nexport interface WidgetDataResult {\n  hasData: boolean;\n  isErrored: boolean;\n  isLoading: boolean;\n}\nexport interface WidgetDataConstraint {\n  [dataKey: string]: WidgetDataResult | undefined;\n}\n\nexport type QueryChildren = {\n  children: (props: any) => React.ReactNode; // TODO(k-fish): Fix any type.\n};\nexport type QueryFC<T extends WidgetDataConstraint> = React.FC<\n  QueryChildren & {\n    eventView: EventView;\n    orgSlug: string;\n    organization: OrganizationSummary;\n    widgetData: T;\n    end?: DateString;\n    environment?: Readonly<string[]>;\n    fields?: string | string[];\n    period?: string | null;\n    project?: Readonly<number[]>;\n    query?: string;\n    referrer?: string;\n    start?: DateString;\n    team?: Readonly<string | string[]>;\n    yAxis?: string | string[];\n  }\n>;\n\nexport type QueryDefinition<\n  T extends WidgetDataConstraint,\n  S extends WidgetDataResult | undefined\n> = {\n  component: QueryFC<T>;\n  fields: string | string[];\n  transform: (\n    props: GenericPerformanceWidgetProps<T>,\n    results: any,\n    queryDefinition: QueryDefinitionWithKey<T>\n  ) => S; // TODO(k-fish): Fix any type.\n  enabled?: (data: T) => boolean;\n};\nexport type Queries<T extends WidgetDataConstraint> = Record<\n  string,\n  QueryDefinition<T, T[string]>\n>;\n\ntype Visualization<T> = {\n  component: React.FC<{\n    widgetData: T;\n    grid?: React.ComponentProps<typeof BaseChart>['grid'];\n    height?: number;\n    queryFields?: string;\n  }>;\n  height: number;\n  bottomPadding?: boolean;\n  dataState?: (data: T) => VisualizationDataState;\n  fields?: string;\n  noPadding?: boolean;\n  queryFields?: string[]; // Used to determine placeholder and loading sizes. Will also be passed to the component.\n};\n\ntype Visualizations<T extends WidgetDataConstraint> = Readonly<Visualization<T>[]>; // Readonly because of index being used for React key.\n\ntype HeaderActions<T> = React.FC<{\n  widgetData: T;\n}>;\n\ntype Subtitle<T> = React.FC<{\n  widgetData: T;\n}>;\n\nexport type GenericPerformanceWidgetProps<T extends WidgetDataConstraint> = {\n  Queries: Queries<T>;\n  Visualizations: Visualizations<T>;\n\n  chartDefinition: ChartDefinition;\n  chartHeight: number;\n\n  chartSetting: PerformanceWidgetSetting;\n  containerType: PerformanceWidgetContainerTypes;\n  eventView: EventView;\n\n  fields: string[];\n  location: Location;\n  organization: Organization;\n\n  // Header;\n  title: string;\n  titleTooltip: string;\n  EmptyComponent?: React.FC<{height?: number}>;\n\n  HeaderActions?: HeaderActions<T>;\n  // Components\n  Subtitle?: Subtitle<T>;\n};\n\nexport type GenericPerformanceWithData<T extends WidgetDataConstraint> =\n  GenericPerformanceWidgetProps<T> & WidgetDataProps<T>;\n\nexport type WidgetDataProps<T> = {\n  removeWidgetDataForKey: (dataKey: string) => void;\n  setWidgetDataForKey: (dataKey: string, result?: WidgetDataResult) => void;\n  widgetData: T;\n};\n\nexport type EventsRequestChildrenProps = RenderProps;\n\nexport type QueryDefinitionWithKey<T extends WidgetDataConstraint> = QueryDefinition<\n  T,\n  T[string]\n> & {queryKey: string};\n\nexport type QueryHandlerProps<T extends WidgetDataConstraint> = {\n  api: Client;\n  eventView: EventView;\n  queries: QueryDefinitionWithKey<T>[];\n  queryProps: WidgetPropUnion<T>;\n  children?: React.ReactNode;\n} & WidgetDataProps<T>;\n\nexport type WidgetPropUnion<T extends WidgetDataConstraint> =\n  GenericPerformanceWidgetProps<T>;\n","import {Organization} from 'sentry/types';\nimport {objectIsEmpty} from 'sentry/utils';\nimport localStorage from 'sentry/utils/localStorage';\nimport {\n  canUseMetricsData,\n  MEPState,\n  MetricsEnhancedSettingContext,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\n\nimport {PROJECT_PERFORMANCE_TYPE} from '../../utils';\n\nimport {PerformanceWidgetSetting} from './widgetDefinitions';\n\nexport const eventsRequestQueryProps = [\n  'children',\n  'organization',\n  'yAxis',\n  'period',\n  'start',\n  'end',\n  'environment',\n  'project',\n  'referrer',\n] as const;\n\nfunction setWidgetStorageObject(localObject: Record<string, string>) {\n  localStorage.setItem(getContainerLocalStorageObjectKey, JSON.stringify(localObject));\n}\n\nconst mepQueryParamBase = {};\n\nexport function getMEPQueryParams(mepContext: MetricsEnhancedSettingContext) {\n  let queryParams = {};\n  const base = mepQueryParamBase;\n  if (mepContext.shouldQueryProvideMEPAutoParams) {\n    queryParams = {\n      ...queryParams,\n      ...base,\n      dataset: 'metricsEnhanced',\n    };\n  }\n  if (mepContext.shouldQueryProvideMEPTransactionParams) {\n    queryParams = {...queryParams, ...base, dataset: 'discover'};\n  }\n  if (mepContext.shouldQueryProvideMEPMetricParams) {\n    queryParams = {...queryParams, ...base, dataset: 'metrics'};\n  }\n\n  // Disallow any performance request from using aggregates since they aren't currently possible in all visualizations and we don't want to mix modes.\n  return objectIsEmpty(queryParams) ? undefined : queryParams;\n}\n\nexport function getMetricOnlyQueryParams() {\n  return {...mepQueryParamBase, dataset: 'metrics'};\n}\n\nexport const WIDGET_MAP_DENY_LIST = [\n  PerformanceWidgetSetting.MOST_RELATED_ERRORS,\n  PerformanceWidgetSetting.MOST_RELATED_ISSUES,\n];\n\n/**\n * Some widgets, such as Related Issues, are inherently not possible w/ metrics at the moment since they use event.type:error under the hood.\n */\nexport function getMEPParamsIfApplicable(\n  mepContext: MetricsEnhancedSettingContext,\n  widget: PerformanceWidgetSetting\n) {\n  if (WIDGET_MAP_DENY_LIST.includes(widget)) {\n    return undefined;\n  }\n  return getMEPQueryParams(mepContext);\n}\n\nconst getContainerLocalStorageObjectKey = 'landing-chart-container';\nconst getContainerKey = (\n  index: number,\n  performanceType: PROJECT_PERFORMANCE_TYPE,\n  height: number\n) => `landing-chart-container#${performanceType}#${height}#${index}`;\n\nfunction getWidgetStorageObject() {\n  const localObject = JSON.parse(\n    localStorage.getItem(getContainerLocalStorageObjectKey) || '{}'\n  );\n  return localObject;\n}\n\nexport const getChartSetting = (\n  index: number,\n  height: number,\n  performanceType: PROJECT_PERFORMANCE_TYPE,\n  defaultType: PerformanceWidgetSetting,\n  forceDefaultChartSetting?: boolean // Used for testing.\n): PerformanceWidgetSetting => {\n  if (forceDefaultChartSetting) {\n    return defaultType;\n  }\n  const key = getContainerKey(index, performanceType, height);\n  const localObject = getWidgetStorageObject();\n  const value = localObject?.[key];\n\n  if (\n    value &&\n    Object.values(PerformanceWidgetSetting).includes(value as PerformanceWidgetSetting)\n  ) {\n    const _value: PerformanceWidgetSetting = value as PerformanceWidgetSetting;\n    return _value;\n  }\n  return defaultType;\n};\nexport const _setChartSetting = (\n  index: number,\n  height: number,\n  performanceType: PROJECT_PERFORMANCE_TYPE,\n  setting: PerformanceWidgetSetting\n) => {\n  const key = getContainerKey(index, performanceType, height);\n  const localObject = getWidgetStorageObject();\n  localObject[key] = setting;\n\n  setWidgetStorageObject(localObject);\n};\n\nconst DISALLOWED_CHARTS_METRICS = [\n  PerformanceWidgetSetting.DURATION_HISTOGRAM,\n  PerformanceWidgetSetting.FCP_HISTOGRAM,\n  PerformanceWidgetSetting.LCP_HISTOGRAM,\n  PerformanceWidgetSetting.FID_HISTOGRAM,\n];\n\nexport function filterAllowedChartsMetrics(\n  organization: Organization,\n  allowedCharts: PerformanceWidgetSetting[],\n  mepSetting: MetricsEnhancedSettingContext\n) {\n  if (\n    !canUseMetricsData(organization) ||\n    mepSetting.metricSettingState === MEPState.transactionsOnly\n  ) {\n    return allowedCharts;\n  }\n\n  return allowedCharts.filter(c => !DISALLOWED_CHARTS_METRICS.includes(c));\n}\n","import CHART_PALETTE from 'sentry/constants/chartPalette';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\n\nimport {getTermHelp, PERFORMANCE_TERM} from '../../data';\n\nimport {GenericPerformanceWidgetDataType} from './types';\n\nexport interface ChartDefinition {\n  dataType: GenericPerformanceWidgetDataType;\n  fields: string[];\n\n  title: string;\n  titleTooltip: string; // The first field in the list will be treated as the primary field in most widgets (except for special casing).\n\n  allowsOpenInDiscover?: boolean;\n  chartColor?: string; // Optional. Will default to colors depending on placement in list or colors from the chart itself.\n\n  vitalStops?: {\n    meh: number;\n    poor: number;\n  };\n}\n\nexport enum PerformanceWidgetSetting {\n  DURATION_HISTOGRAM = 'duration_histogram',\n  LCP_HISTOGRAM = 'lcp_histogram',\n  FCP_HISTOGRAM = 'fcp_histogram',\n  FID_HISTOGRAM = 'fid_histogram',\n  APDEX_AREA = 'apdex_area',\n  P50_DURATION_AREA = 'p50_duration_area',\n  P75_DURATION_AREA = 'p75_duration_area',\n  P95_DURATION_AREA = 'p95_duration_area',\n  P99_DURATION_AREA = 'p99_duration_area',\n  P75_LCP_AREA = 'p75_lcp_area',\n  TPM_AREA = 'tpm_area',\n  FAILURE_RATE_AREA = 'failure_rate_area',\n  USER_MISERY_AREA = 'user_misery_area',\n  WORST_LCP_VITALS = 'worst_lcp_vitals',\n  WORST_FCP_VITALS = 'worst_fcp_vitals',\n  WORST_CLS_VITALS = 'worst_cls_vitals',\n  WORST_FID_VITALS = 'worst_fid_vitals',\n  MOST_IMPROVED = 'most_improved',\n  MOST_REGRESSED = 'most_regressed',\n  MOST_RELATED_ERRORS = 'most_related_errors',\n  MOST_RELATED_ISSUES = 'most_related_issues',\n  SLOW_HTTP_OPS = 'slow_http_ops',\n  SLOW_DB_OPS = 'slow_db_ops',\n  SLOW_RESOURCE_OPS = 'slow_resource_ops',\n  SLOW_BROWSER_OPS = 'slow_browser_ops',\n  COLD_STARTUP_AREA = 'cold_startup_area',\n  WARM_STARTUP_AREA = 'warm_startup_area',\n  SLOW_FRAMES_AREA = 'slow_frames_area',\n  FROZEN_FRAMES_AREA = 'frozen_frames_area',\n  MOST_SLOW_FRAMES = 'most_slow_frames',\n  MOST_FROZEN_FRAMES = 'most_frozen_frames',\n}\n\nconst WIDGET_PALETTE = CHART_PALETTE[5];\nexport const WIDGET_DEFINITIONS: ({\n  organization,\n}: {\n  organization: Organization;\n}) => Record<PerformanceWidgetSetting, ChartDefinition> = ({\n  organization,\n}: {\n  organization: Organization;\n}) => ({\n  [PerformanceWidgetSetting.DURATION_HISTOGRAM]: {\n    title: t('Duration Distribution'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n    fields: ['transaction.duration'],\n    dataType: GenericPerformanceWidgetDataType.histogram,\n    chartColor: WIDGET_PALETTE[5],\n  },\n  [PerformanceWidgetSetting.LCP_HISTOGRAM]: {\n    title: t('LCP Distribution'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n    fields: ['measurements.lcp'],\n    dataType: GenericPerformanceWidgetDataType.histogram,\n    chartColor: WIDGET_PALETTE[5],\n  },\n  [PerformanceWidgetSetting.FCP_HISTOGRAM]: {\n    title: t('FCP Distribution'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n    fields: ['measurements.fcp'],\n    dataType: GenericPerformanceWidgetDataType.histogram,\n    chartColor: WIDGET_PALETTE[5],\n  },\n  [PerformanceWidgetSetting.FID_HISTOGRAM]: {\n    title: t('FID Distribution'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n    fields: ['measurements.fid'],\n    dataType: GenericPerformanceWidgetDataType.histogram,\n    chartColor: WIDGET_PALETTE[5],\n  },\n  [PerformanceWidgetSetting.WORST_LCP_VITALS]: {\n    title: t('Worst LCP Web Vitals'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.LCP),\n    fields: ['measurements.lcp'],\n    vitalStops: {\n      poor: 4000,\n      meh: 2500,\n    },\n    dataType: GenericPerformanceWidgetDataType.vitals,\n  },\n  [PerformanceWidgetSetting.WORST_FCP_VITALS]: {\n    title: t('Worst FCP Web Vitals'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FCP),\n    fields: ['measurements.fcp'],\n    vitalStops: {\n      poor: 3000,\n      meh: 1000,\n    },\n    dataType: GenericPerformanceWidgetDataType.vitals,\n  },\n  [PerformanceWidgetSetting.WORST_FID_VITALS]: {\n    title: t('Worst FID Web Vitals'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FID),\n    fields: ['measurements.fid'],\n    vitalStops: {\n      poor: 300,\n      meh: 100,\n    },\n    dataType: GenericPerformanceWidgetDataType.vitals,\n  },\n  [PerformanceWidgetSetting.WORST_CLS_VITALS]: {\n    title: t('Worst CLS Web Vitals'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.CLS),\n    fields: ['measurements.cls'],\n    vitalStops: {\n      poor: 0.25,\n      meh: 0.1,\n    },\n    dataType: GenericPerformanceWidgetDataType.vitals,\n  },\n  [PerformanceWidgetSetting.TPM_AREA]: {\n    title: t('Transactions Per Minute'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.TPM),\n    fields: ['tpm()'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[1],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.APDEX_AREA]: {\n    title: t('Apdex'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.APDEX),\n    fields: ['apdex()'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[4],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.P50_DURATION_AREA]: {\n    title: t('p50 Duration'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P50),\n    fields: ['p50(transaction.duration)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.P75_DURATION_AREA]: {\n    title: t('p75 Duration'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P75),\n    fields: ['p75(transaction.duration)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.P95_DURATION_AREA]: {\n    title: t('p95 Duration'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P95),\n    fields: ['p95(transaction.duration)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.P99_DURATION_AREA]: {\n    title: t('p99 Duration'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P99),\n    fields: ['p99(transaction.duration)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.P75_LCP_AREA]: {\n    title: t('p75 LCP'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P75),\n    fields: ['p75(measurements.lcp)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[1],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.FAILURE_RATE_AREA]: {\n    title: t('Failure Rate'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE),\n    fields: ['failure_rate()'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[2],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.USER_MISERY_AREA]: {\n    title: t('User Misery'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.USER_MISERY),\n    fields: [`user_misery()`],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[0],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.COLD_STARTUP_AREA]: {\n    title: t('Cold Startup Time'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_COLD),\n    fields: ['p75(measurements.app_start_cold)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[4],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.WARM_STARTUP_AREA]: {\n    title: t('Warm Startup Time'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_WARM),\n    fields: ['p75(measurements.app_start_warm)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.SLOW_FRAMES_AREA]: {\n    title: t('Slow Frames'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_FRAMES),\n    fields: ['p75(measurements.frames_slow_rate)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[0],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.FROZEN_FRAMES_AREA]: {\n    title: t('Frozen Frames'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FROZEN_FRAMES),\n    fields: ['p75(measurements.frames_frozen_rate)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[5],\n    allowsOpenInDiscover: true,\n  },\n  [PerformanceWidgetSetting.MOST_RELATED_ERRORS]: {\n    title: t('Most Related Errors'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.MOST_ERRORS),\n    fields: [`failure_count()`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.MOST_RELATED_ISSUES]: {\n    title: t('Most Related Issues'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.MOST_ISSUES),\n    fields: [`count()`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.SLOW_HTTP_OPS]: {\n    title: t('Slow HTTP Ops'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_HTTP_SPANS),\n    fields: [`p75(spans.http)`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.SLOW_BROWSER_OPS]: {\n    title: t('Slow Browser Ops'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_HTTP_SPANS),\n    fields: [`p75(spans.browser)`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.SLOW_RESOURCE_OPS]: {\n    title: t('Slow Resource Ops'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_HTTP_SPANS),\n    fields: [`p75(spans.resource)`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.SLOW_DB_OPS]: {\n    title: t('Slow DB Ops'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_HTTP_SPANS),\n    fields: [`p75(spans.db)`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.MOST_SLOW_FRAMES]: {\n    title: t('Most Slow Frames'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_FRAMES),\n    fields: ['avg(measurements.frames_slow)'],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.MOST_FROZEN_FRAMES]: {\n    title: t('Most Frozen Frames'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FROZEN_FRAMES),\n    fields: ['avg(measurements.frames_frozen)'],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.MOST_IMPROVED]: {\n    title: t('Most Improved'),\n    titleTooltip: t(\n      'This compares the baseline (%s) of the past with the present.',\n      'improved'\n    ),\n    fields: [],\n    dataType: GenericPerformanceWidgetDataType.trends,\n  },\n  [PerformanceWidgetSetting.MOST_REGRESSED]: {\n    title: t('Most Regressed'),\n    titleTooltip: t(\n      'This compares the baseline (%s) of the past with the present.',\n      'regressed'\n    ),\n    fields: [],\n    dataType: GenericPerformanceWidgetDataType.trends,\n  },\n});\n"],"names":["useCallback","useState","Tag","useOrganization","WIDGET_MAP_DENY_LIST","AutoSampleState","useMEPSettingContext","createDefinedContext","_MEPDataProvider","_useMEPDataContext","name","MEPDataProvider","children","chartSetting","setAutoSampleState","isMetricsData","_setIsMetricsData","undefined","setIsMetricsData","value","includes","metrics","transactions","useMEPDataContext","MEPTag","organization","features","tagText","Fragment","DataStateSwitch","props","isErrored","errorComponent","isLoading","loadingComponent","hasData","emptyComponent","dataComponents","useRef","withRouter","ErrorPanel","Placeholder","IconWarning","space","trackAdvancedAnalyticsEvent","getDynamicText","useApi","getPerformanceWidgetContainer","QueryHandler","WidgetHeader","GenericPerformanceWidget","allWidgetData","setWidgetData","widgetData","widgetDataRef","setWidgetDataForKey","dataKey","result","_widgetData","current","newWidgetData","removeWidgetDataForKey","widgetProps","queries","Object","entries","Queries","map","key","definition","queryKey","api","totalHeight","Visualizations","reduce","acc","curr","height","eventView","trackDataComponentClicks","widget_type","_DataDisplay","chartHeight","containerType","EmptyComponent","Container","numberKeys","keys","length","missingDataKeys","values","every","d","some","Visualization","index","noPadding","bottomPadding","defaultGrid","fields","fixed","DataDisplay","DefaultErrorComponent","left","right","top","bottom","ContentContainer","p","PerformanceWidgetPlaceholder","defaultProps","Panel","StyledPanel","Div","useEffect","getUtcToLocalDateObject","filter","q","enabled","query","genericQueryReferrer","setting","replace","SingleQueryHandler","globalSelection","queryProps","getPageFilters","start","datetime","end","period","projects","environments","slug","getQueryWithAdditionalConditions","results","QueryResultSaver","mepContext","transformed","transform","seriesAdditionalInfo","histograms","meta","HeaderTitleLegend","QuestionTooltip","TextOverflow","title","titleTooltip","Subtitle","HeaderActions","StyledHeaderTitleLegend","TitleContainer","WidgetHeaderContainer","HeaderActionsContainer","VisualizationDataState","GenericPerformanceWidgetDataType","objectIsEmpty","localStorage","canUseMetricsData","MEPState","PerformanceWidgetSetting","eventsRequestQueryProps","setWidgetStorageObject","localObject","setItem","getContainerLocalStorageObjectKey","JSON","stringify","mepQueryParamBase","getMEPQueryParams","queryParams","base","shouldQueryProvideMEPAutoParams","dataset","shouldQueryProvideMEPTransactionParams","shouldQueryProvideMEPMetricParams","getMetricOnlyQueryParams","MOST_RELATED_ERRORS","MOST_RELATED_ISSUES","getMEPParamsIfApplicable","widget","getContainerKey","performanceType","getWidgetStorageObject","parse","getItem","getChartSetting","defaultType","forceDefaultChartSetting","_value","_setChartSetting","DISALLOWED_CHARTS_METRICS","DURATION_HISTOGRAM","FCP_HISTOGRAM","LCP_HISTOGRAM","FID_HISTOGRAM","filterAllowedChartsMetrics","allowedCharts","mepSetting","metricSettingState","transactionsOnly","c","CHART_PALETTE","t","getTermHelp","PERFORMANCE_TERM","WIDGET_PALETTE","WIDGET_DEFINITIONS","DURATION_DISTRIBUTION","dataType","histogram","chartColor","WORST_LCP_VITALS","LCP","vitalStops","poor","meh","vitals","WORST_FCP_VITALS","FCP","WORST_FID_VITALS","FID","WORST_CLS_VITALS","CLS","TPM_AREA","TPM","area","allowsOpenInDiscover","APDEX_AREA","APDEX","P50_DURATION_AREA","P50","P75_DURATION_AREA","P75","P95_DURATION_AREA","P95","P99_DURATION_AREA","P99","P75_LCP_AREA","FAILURE_RATE_AREA","FAILURE_RATE","USER_MISERY_AREA","USER_MISERY","COLD_STARTUP_AREA","APP_START_COLD","WARM_STARTUP_AREA","APP_START_WARM","SLOW_FRAMES_AREA","SLOW_FRAMES","FROZEN_FRAMES_AREA","FROZEN_FRAMES","MOST_ERRORS","line_list","MOST_ISSUES","SLOW_HTTP_OPS","SLOW_HTTP_SPANS","SLOW_BROWSER_OPS","SLOW_RESOURCE_OPS","SLOW_DB_OPS","MOST_SLOW_FRAMES","MOST_FROZEN_FRAMES","MOST_IMPROVED","trends","MOST_REGRESSED"],"sourceRoot":""}