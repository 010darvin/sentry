{"version":3,"file":"chunks/app_views_settings_project_projectEnvironments_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/utils/environment.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectEnvironments.tsx"],"sourcesContent":["import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Environment} from 'sentry/types';\n\nconst DEFAULT_EMPTY_ROUTING_NAME = 'none';\nconst DEFAULT_EMPTY_ENV_NAME = '(No Environment)';\n\nexport function getUrlRoutingName(env: Partial<Environment>) {\n  if (env.name) {\n    return encodeURIComponent(env.name);\n  }\n\n  if (env.displayName) {\n    return encodeURIComponent(env.displayName);\n  }\n  return DEFAULT_EMPTY_ROUTING_NAME;\n}\n\nexport function getDisplayName(env: Partial<Environment>) {\n  return env.name || env.displayName || DEFAULT_EMPTY_ENV_NAME;\n}\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Component, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Access from 'sentry/components/acl/access';\nimport Button from 'sentry/components/button';\nimport ListLink from 'sentry/components/links/listLink';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NavTabs from 'sentry/components/navTabs';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {ALL_ENVIRONMENTS_KEY} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Environment, Project} from 'sentry/types';\nimport {getDisplayName, getUrlRoutingName} from 'sentry/utils/environment';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport withApi from 'sentry/utils/withApi';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype Props = {\n  api: Client;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  environments: null | Environment[];\n  isLoading: boolean;\n  project: null | Project;\n};\n\nclass ProjectEnvironments extends Component<Props, State> {\n  state: State = {\n    project: null,\n    environments: null,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      this.props.location.pathname.endsWith('hidden/') !==\n      prevProps.location.pathname.endsWith('hidden/')\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData() {\n    const isHidden = this.props.location.pathname.endsWith('hidden/');\n\n    if (!this.state.isLoading) {\n      this.setState({isLoading: true});\n    }\n\n    const {orgId, projectId} = this.props.params;\n    this.props.api.request(`/projects/${orgId}/${projectId}/environments/`, {\n      query: {\n        visibility: isHidden ? 'hidden' : 'visible',\n      },\n      success: environments => {\n        this.setState({environments, isLoading: false});\n      },\n    });\n  }\n\n  fetchProjectDetails() {\n    const {orgId, projectId} = this.props.params;\n    this.props.api.request(`/projects/${orgId}/${projectId}/`, {\n      success: project => {\n        this.setState({project});\n      },\n    });\n  }\n\n  // Toggle visibility of environment\n  toggleEnv = (env: Environment, shouldHide: boolean) => {\n    const {orgId, projectId} = this.props.params;\n\n    this.props.api.request(\n      `/projects/${orgId}/${projectId}/environments/${getUrlRoutingName(env)}/`,\n      {\n        method: 'PUT',\n        data: {\n          name: env.name,\n          isHidden: shouldHide,\n        },\n        success: () => {\n          addSuccessMessage(\n            tct('Updated [environment]', {\n              environment: getDisplayName(env),\n            })\n          );\n        },\n        error: () => {\n          addErrorMessage(\n            tct('Unable to update [environment]', {\n              environment: getDisplayName(env),\n            })\n          );\n        },\n        complete: this.fetchData.bind(this),\n      }\n    );\n  };\n\n  renderEmpty() {\n    const isHidden = this.props.location.pathname.endsWith('hidden/');\n    const message = isHidden\n      ? t(\"You don't have any hidden environments.\")\n      : t(\"You don't have any environments yet.\");\n    return <EmptyMessage>{message}</EmptyMessage>;\n  }\n\n  /**\n   * Renders rows for \"system\" environments:\n   * - \"All Environments\"\n   * - \"No Environment\"\n   *\n   */\n  renderAllEnvironmentsSystemRow() {\n    // Not available in \"Hidden\" tab\n    const isHidden = this.props.location.pathname.endsWith('hidden/');\n    if (isHidden) {\n      return null;\n    }\n    return (\n      <EnvironmentRow\n        name={ALL_ENVIRONMENTS_KEY}\n        environment={{\n          id: ALL_ENVIRONMENTS_KEY,\n          name: ALL_ENVIRONMENTS_KEY,\n          displayName: ALL_ENVIRONMENTS_KEY,\n        }}\n        isSystemRow\n      />\n    );\n  }\n\n  renderEnvironmentList(envs: Environment[]) {\n    const isHidden = this.props.location.pathname.endsWith('hidden/');\n    const buttonText = isHidden ? t('Show') : t('Hide');\n\n    return (\n      <Fragment>\n        {this.renderAllEnvironmentsSystemRow()}\n        {envs.map(env => (\n          <EnvironmentRow\n            key={env.id}\n            name={env.name}\n            environment={env}\n            isHidden={isHidden}\n            onHide={this.toggleEnv}\n            actionText={buttonText}\n            shouldShowAction\n          />\n        ))}\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {environments, isLoading} = this.state;\n\n    if (isLoading) {\n      return <LoadingIndicator />;\n    }\n\n    return (\n      <PanelBody>\n        {environments?.length\n          ? this.renderEnvironmentList(environments)\n          : this.renderEmpty()}\n      </PanelBody>\n    );\n  }\n\n  render() {\n    const {routes, params, location} = this.props;\n    const isHidden = location.pathname.endsWith('hidden/');\n\n    const baseUrl = recreateRoute('', {routes, params, stepBack: -1});\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Environments')} projectSlug={params.projectId} />\n        <SettingsPageHeader\n          title={t('Manage Environments')}\n          tabs={\n            <NavTabs underlined>\n              <ListLink to={baseUrl} index isActive={() => !isHidden}>\n                {t('Environments')}\n              </ListLink>\n              <ListLink to={`${baseUrl}hidden/`} index isActive={() => isHidden}>\n                {t('Hidden')}\n              </ListLink>\n            </NavTabs>\n          }\n        />\n        <PermissionAlert />\n\n        <Panel>\n          <PanelHeader>{isHidden ? t('Hidden') : t('Active Environments')}</PanelHeader>\n          {this.renderBody()}\n        </Panel>\n      </div>\n    );\n  }\n}\n\ntype RowProps = {\n  environment: Environment;\n  name: string;\n  actionText?: string;\n  isHidden?: boolean;\n  isSystemRow?: boolean;\n  onHide?: (env: Environment, isHidden: boolean) => void;\n  shouldShowAction?: boolean;\n};\n\nfunction EnvironmentRow({\n  environment,\n  name,\n  onHide,\n  shouldShowAction = false,\n  isSystemRow = false,\n  isHidden = false,\n  actionText = '',\n}: RowProps) {\n  return (\n    <EnvironmentItem>\n      <Name>{isSystemRow ? t('All Environments') : name}</Name>\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <Fragment>\n            {shouldShowAction && onHide && (\n              <EnvironmentButton\n                size=\"xs\"\n                disabled={!hasAccess}\n                onClick={() => onHide(environment, !isHidden)}\n              >\n                {actionText}\n              </EnvironmentButton>\n            )}\n          </Fragment>\n        )}\n      </Access>\n    </EnvironmentItem>\n  );\n}\n\nconst EnvironmentItem = styled(PanelItem)`\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Name = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst EnvironmentButton = styled(Button)`\n  margin-left: ${space(0.5)};\n`;\n\nexport {ProjectEnvironments};\nexport default withApi(ProjectEnvironments);\n"],"names":["Component","Link","RouterLink","withRouter","classNames","omit","qs","ListLink","_classNames","className","activeClassName","props","isActive","to","query","index","router","queryData","parse","undefined","target","pathname","render","children","disabled","carriedProps","getClassName","StyledLi","shouldForwardProp","prop","p","theme","DEFAULT_EMPTY_ROUTING_NAME","DEFAULT_EMPTY_ENV_NAME","getUrlRoutingName","env","name","encodeURIComponent","displayName","getDisplayName","findLastIndex","replaceRouterParams","recreateRoute","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","slice","baseRoute","search","hash","fullRoute","join","Access","Alert","t","PermissionAlert","access","hasAccess","Fragment","addErrorMessage","addSuccessMessage","Button","LoadingIndicator","NavTabs","Panel","PanelBody","PanelHeader","PanelItem","SentryDocumentTitle","ALL_ENVIRONMENTS_KEY","tct","space","withApi","EmptyMessage","SettingsPageHeader","ProjectEnvironments","project","environments","isLoading","shouldHide","orgId","projectId","api","request","method","data","isHidden","success","environment","error","complete","fetchData","bind","componentDidMount","componentDidUpdate","prevProps","endsWith","state","setState","visibility","fetchProjectDetails","renderEmpty","message","renderAllEnvironmentsSystemRow","id","renderEnvironmentList","envs","buttonText","toggleEnv","renderBody","length","baseUrl","EnvironmentRow","onHide","shouldShowAction","isSystemRow","actionText","EnvironmentItem","Name","EnvironmentButton"],"sourceRoot":""}