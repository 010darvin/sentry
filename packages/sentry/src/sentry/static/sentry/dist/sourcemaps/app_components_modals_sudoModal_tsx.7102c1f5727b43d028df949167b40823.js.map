{"version":3,"file":"chunks/app_components_modals_sudoModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/account.tsx","webpack:///./app/components/hook.tsx","webpack:///./app/components/modals/sudoModal.tsx","webpack:///./app/components/u2f/u2fContainer.tsx","webpack:///./app/constants/superuserAccessErrors.tsx","webpack:///./app/utils/useApi.tsx","webpack:///./app/utils/withApi.tsx"],"sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {User, UserIdentityConfig} from 'sentry/types';\n\nexport async function disconnectIdentity(\n  identity: UserIdentityConfig,\n  onSuccess: {(): void}\n) {\n  const api = new Client();\n\n  try {\n    await api.requestPromise(\n      `/users/me/user-identities/${identity.category}/${identity.id}/`,\n      {\n        method: 'DELETE',\n      }\n    );\n  } catch {\n    addErrorMessage('Error disconnecting identity');\n    return;\n  }\n\n  addSuccessMessage(`Disconnected ${identity.provider.name}`);\n  onSuccess();\n}\n\nexport function updateUser(user: User) {\n  const previousUser = ConfigStore.get('user');\n\n  // If the user changed their theme preferences, we should also update\n  // the config store\n  if (\n    previousUser.options.theme !== user.options.theme &&\n    user.options.theme !== 'system'\n  ) {\n    ConfigStore.set('theme', user.options.theme);\n  }\n\n  // Ideally we'd fire an action but this is gonna get refactored soon anyway\n  ConfigStore.set('user', user);\n}\n\nexport function logout(api: Client) {\n  return api.requestPromise('/auth/', {method: 'DELETE'});\n}\n\nexport function removeAuthenticator(api: Client, userId: string, authId: string) {\n  return api.requestPromise(`/users/${userId}/authenticators/${authId}/`, {\n    method: 'DELETE',\n  });\n}\n","import {Component} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Props<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  name: H;\n  /**\n   * If children are provided as a function to the Hook, the hooks will be\n   * passed down as a render prop.\n   */\n  children?: (opts: {hooks: Array<Hooks[H]>}) => React.ReactNode;\n} & Omit<Parameters<Hooks[H]>[0], 'name'>;\n\ntype HookState<H extends HookName> = {\n  hooks: Array<Hooks[H]>;\n};\n\n/**\n * Instead of accessing the HookStore directly, use this.\n *\n * If the hook slot needs to perform anything w/ the hooks, you can pass a\n * function as a child and you will receive an object with a `hooks` key\n *\n * Example:\n *\n *   <Hook name=\"my-hook\">\n *     {({hooks}) => hooks.map(hook => (\n *       <Wrapper>{hook}</Wrapper>\n *     ))}\n *   </Hook>\n */\nfunction Hook<H extends HookName>({name, ...props}: Props<H>) {\n  class HookComponent extends Component<{}, HookState<H>> {\n    static displayName = `Hook(${name})`;\n\n    state = {\n      hooks: HookStore.get(name).map(cb => cb(props)),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    handleHooks(hookName: HookName, hooks: Array<Hooks[H]>) {\n      // Make sure that the incoming hook update matches this component's hook name\n      if (hookName !== name) {\n        return;\n      }\n\n      this.setState({hooks: hooks.map(cb => cb(props))});\n    }\n\n    unsubscribe = HookStore.listen(\n      (hookName: HookName, hooks: Array<Hooks[H]>) => this.handleHooks(hookName, hooks),\n      undefined\n    );\n\n    render() {\n      const {children} = props;\n\n      if (!this.state.hooks || !this.state.hooks.length) {\n        return null;\n      }\n\n      if (typeof children === 'function') {\n        return children({hooks: this.state.hooks});\n      }\n\n      return this.state.hooks;\n    }\n  }\n\n  return <HookComponent />;\n}\n\nexport default Hook;\n","import {Component, Fragment} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport Form from 'sentry/components/forms/form';\nimport InputField from 'sentry/components/forms/inputField';\nimport Hook from 'sentry/components/hook';\nimport U2fContainer from 'sentry/components/u2f/u2fContainer';\nimport {ErrorCodes} from 'sentry/constants/superuserAccessErrors';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {Authenticator} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype OnTapProps = NonNullable<React.ComponentProps<typeof U2fContainer>['onTap']>;\n\ntype Props = WithRouterProps &\n  Pick<ModalRenderProps, 'Body' | 'Header'> & {\n    api: Client;\n    closeModal: () => void;\n    /**\n     * User is a superuser without an active su session\n     */\n    isSuperuser?: boolean;\n    needsReload?: boolean;\n    /**\n     * expects a function that returns a Promise\n     */\n    retryRequest?: () => Promise<any>;\n  };\n\ntype State = {\n  authenticators: Array<Authenticator>;\n  busy: boolean;\n  error: boolean;\n  errorType: string;\n  superuserAccessCategory: string;\n  superuserReason: string;\n};\n\nclass SudoModal extends Component<Props, State> {\n  state: State = {\n    error: false,\n    errorType: '',\n    busy: false,\n    superuserAccessCategory: '',\n    superuserReason: '',\n    authenticators: [],\n  };\n\n  componentDidMount() {\n    this.getAuthenticators();\n  }\n\n  handleSubmit = async () => {\n    const {api, isSuperuser} = this.props;\n    const data = {\n      isSuperuserModal: isSuperuser,\n      superuserAccessCategory: 'cops_csm',\n      superuserReason: 'COPS and CSM use',\n    };\n    try {\n      await api.requestPromise('/auth/', {method: 'PUT', data});\n      this.handleSuccess();\n    } catch (err) {\n      this.handleError(err);\n    }\n  };\n\n  handleSuccess = () => {\n    const {closeModal, isSuperuser, location, needsReload, router, retryRequest} =\n      this.props;\n\n    if (!retryRequest) {\n      closeModal();\n      return;\n    }\n\n    if (isSuperuser) {\n      router.replace({pathname: location.pathname, state: {forceUpdate: new Date()}});\n      if (needsReload) {\n        window.location.reload();\n      }\n      return;\n    }\n\n    this.setState({busy: true}, () => {\n      retryRequest().then(() => {\n        this.setState({busy: false}, closeModal);\n      });\n    });\n  };\n\n  handleError = err => {\n    let errorType = '';\n    if (err.status === 403) {\n      errorType = ErrorCodes.invalidPassword;\n    } else if (err.status === 401) {\n      errorType = ErrorCodes.invalidSSOSession;\n    } else if (err.status === 400) {\n      errorType = ErrorCodes.invalidAccessCategory;\n    } else {\n      errorType = ErrorCodes.unknownError;\n    }\n    this.setState({\n      busy: false,\n      error: true,\n      errorType,\n    });\n  };\n\n  handleU2fTap = async (data: Parameters<OnTapProps>[0]) => {\n    this.setState({busy: true});\n\n    const {api, isSuperuser} = this.props;\n\n    try {\n      data.isSuperuserModal = isSuperuser;\n      data.superuserAccessCategory = this.state.superuserAccessCategory;\n      data.superuserReason = this.state.superuserReason;\n      await api.requestPromise('/auth/', {method: 'PUT', data});\n      this.handleSuccess();\n    } catch (err) {\n      this.setState({busy: false});\n      // u2fInterface relies on this\n      throw err;\n    }\n  };\n\n  handleLogout = async () => {\n    const {api} = this.props;\n    try {\n      await logout(api);\n    } catch {\n      // ignore errors\n    }\n    window.location.assign(`/auth/login/?next=${encodeURIComponent(location.pathname)}`);\n  };\n\n  async getAuthenticators() {\n    const {api} = this.props;\n\n    try {\n      const authenticators = await api.requestPromise('/authenticators/');\n      this.setState({authenticators: authenticators ?? []});\n    } catch {\n      // ignore errors\n    }\n  }\n\n  renderBodyContent() {\n    const {isSuperuser} = this.props;\n    const {authenticators, error, errorType} = this.state;\n    const user = ConfigStore.get('user');\n    const isSelfHosted = ConfigStore.get('isSelfHosted');\n    const validateSUForm = ConfigStore.get('validateSUForm');\n\n    if (errorType === ErrorCodes.invalidSSOSession) {\n      this.handleLogout();\n      return null;\n    }\n\n    if (\n      (!user.hasPasswordAuth && authenticators.length === 0) ||\n      (isSuperuser && !isSelfHosted && validateSUForm)\n    ) {\n      return (\n        <Fragment>\n          <StyledTextBlock>\n            {isSuperuser\n              ? t(\n                  'You are attempting to access a resource that requires superuser access, please re-authenticate as a superuser.'\n                )\n              : t('You will need to reauthenticate to continue')}\n          </StyledTextBlock>\n          {error && (\n            <StyledAlert type=\"error\" showIcon>\n              {t(errorType)}\n            </StyledAlert>\n          )}\n          {isSuperuser ? (\n            <Form\n              apiMethod=\"PUT\"\n              apiEndpoint=\"/auth/\"\n              submitLabel={t('Re-authenticate')}\n              onSubmitSuccess={this.handleSuccess}\n              onSubmitError={this.handleError}\n              initialData={{isSuperuserModal: isSuperuser}}\n              extraButton={\n                <BackWrapper>\n                  <Button onClick={this.handleSubmit}>{t('COPS/CSM')}</Button>\n                </BackWrapper>\n              }\n              resetOnError\n            >\n              {!isSelfHosted && <Hook name=\"component:superuser-access-category\" />}\n            </Form>\n          ) : (\n            <Button\n              priority=\"primary\"\n              href={`/auth/login/?next=${encodeURIComponent(location.pathname)}`}\n            >\n              {t('Continue')}\n            </Button>\n          )}\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        <StyledTextBlock>\n          {isSuperuser\n            ? t(\n                'You are attempting to access a resource that requires superuser access, please re-authenticate as a superuser.'\n              )\n            : t('Help us keep your account safe by confirming your identity.')}\n        </StyledTextBlock>\n\n        {error && (\n          <StyledAlert type=\"error\" showIcon>\n            {t(errorType)}\n          </StyledAlert>\n        )}\n\n        <Form\n          apiMethod=\"PUT\"\n          apiEndpoint=\"/auth/\"\n          submitLabel={t('Confirm Password')}\n          onSubmitSuccess={this.handleSuccess}\n          onSubmitError={this.handleError}\n          hideFooter={!user.hasPasswordAuth && authenticators.length === 0}\n          initialData={{isSuperuserModal: isSuperuser}}\n          resetOnError\n        >\n          {user.hasPasswordAuth && (\n            <StyledInputField\n              type=\"password\"\n              inline={false}\n              label={t('Password')}\n              name=\"password\"\n              autoFocus\n              flexibleControlStateSize\n            />\n          )}\n\n          <U2fContainer\n            authenticators={authenticators}\n            displayMode=\"sudo\"\n            onTap={this.handleU2fTap}\n          />\n        </Form>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {Header, Body} = this.props;\n\n    return (\n      <Fragment>\n        <Header closeButton>{t('Confirm Password to Continue')}</Header>\n        <Body>{this.renderBodyContent()}</Body>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(withApi(SudoModal));\nexport {SudoModal};\n\nconst StyledTextBlock = styled(TextBlock)`\n  margin-bottom: ${space(1)};\n`;\n\nconst StyledInputField = styled(InputField)`\n  padding-left: 0;\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin-bottom: 0;\n`;\n\nconst BackWrapper = styled('div')`\n  width: 100%;\n  margin-left: ${space(4)};\n`;\n","import {Authenticator} from 'sentry/types';\n\nimport U2fSign from './u2fsign';\n\ntype U2FSignProps = React.ComponentProps<typeof U2fSign>;\n\ntype Props = {\n  authenticators: Array<Authenticator>;\n  onTap: U2FSignProps['onTap'];\n  className?: string;\n  displayMode?: U2FSignProps['displayMode'];\n};\n\nfunction U2fContainer({className, authenticators, ...props}: Props) {\n  if (!authenticators.length) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {authenticators.map(auth =>\n        auth.id === 'u2f' && auth.challenge ? (\n          <U2fSign key={auth.id} {...props} challengeData={auth.challenge} />\n        ) : null\n      )}\n    </div>\n  );\n}\n\nexport default U2fContainer;\n","export enum ErrorCodes {\n  invalidPassword = 'Incorrect password',\n  invalidSSOSession = 'Your SSO Session has expired, please reauthenticate',\n  invalidAccessCategory = 'Please fill out the access category and reason correctly',\n  unknownError = 'An error ocurred, please try again',\n}\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {Client} from 'sentry/api';\n\ntype Options = {\n  /**\n   * An existing API client may be provided.\n   *\n   * This is a continent way to re-use clients and still inherit the\n   * persistInFlight configuration.\n   */\n  api?: Client;\n  /**\n   * Enabling this option will disable clearing in-flight requests when the\n   * component is unmounted.\n   *\n   * This may be useful in situations where your component needs to finish up\n   * somewhere the client was passed into some type of action creator and the\n   * component is unmounted.\n   */\n  persistInFlight?: boolean;\n};\n\n/**\n * Returns an API client that will have it's requests canceled when the owning\n * React component is unmounted (may be disabled via options).\n */\nfunction useApi({persistInFlight, api: providedApi}: Options = {}) {\n  const localApi = useRef<Client>();\n\n  // Lazily construct the client if we weren't provided with one\n  if (localApi.current === undefined && providedApi === undefined) {\n    localApi.current = new Client();\n  }\n\n  // Use the provided client if available\n  const api = providedApi ?? localApi.current!;\n\n  // Clear API calls on unmount (if persistInFlight is disabled\n  const clearOnUnmount = useCallback(() => {\n    if (!persistInFlight) {\n      api.clear();\n    }\n  }, [api, persistInFlight]);\n\n  useEffect(() => clearOnUnmount, [clearOnUnmount]);\n\n  return api;\n}\n\nexport default useApi;\n","import {Client} from 'sentry/api';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport useApi from 'sentry/utils/useApi';\n\ntype InjectedApiProps = {\n  api: Client;\n};\n\ntype WrappedProps<P> = Omit<P, keyof InjectedApiProps> & Partial<InjectedApiProps>;\n\n/**\n * XXX: Prefer useApi if you are wrapping a Function Component!\n *\n * React Higher-Order Component (HoC) that provides \"api\" client when mounted,\n * and clears API requests when component is unmounted.\n *\n * If an `api` prop is provided when the component is invoked it will be passed\n * through.\n */\nconst withApi = <P extends InjectedApiProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Parameters<typeof useApi>[0] = {}\n) => {\n  const WithApi: React.FC<WrappedProps<P>> = ({api: propsApi, ...props}) => {\n    const api = useApi({api: propsApi, ...options});\n\n    return <WrappedComponent {...(props as P)} api={api} />;\n  };\n\n  WithApi.displayName = `withApi(${getDisplayName(WrappedComponent)})`;\n\n  return WithApi;\n};\n\nexport default withApi;\n"],"names":["addErrorMessage","addSuccessMessage","Client","ConfigStore","disconnectIdentity","identity","onSuccess","api","requestPromise","category","id","method","provider","name","updateUser","user","previousUser","get","options","theme","set","logout","removeAuthenticator","userId","authId","Component","HookStore","Hook","props","HookComponent","hooks","map","cb","listen","hookName","handleHooks","undefined","componentWillUnmount","unsubscribe","setState","render","children","state","length","Fragment","withRouter","Alert","Button","Form","InputField","U2fContainer","ErrorCodes","t","space","withApi","TextBlock","SudoModal","error","errorType","busy","superuserAccessCategory","superuserReason","authenticators","isSuperuser","data","isSuperuserModal","handleSuccess","err","handleError","closeModal","location","needsReload","router","retryRequest","replace","pathname","forceUpdate","Date","window","reload","then","status","invalidPassword","invalidSSOSession","invalidAccessCategory","unknownError","assign","encodeURIComponent","componentDidMount","getAuthenticators","renderBodyContent","isSelfHosted","validateSUForm","handleLogout","hasPasswordAuth","handleSubmit","handleU2fTap","Header","Body","StyledTextBlock","StyledInputField","StyledAlert","BackWrapper","U2fSign","className","auth","challenge","useCallback","useEffect","useRef","useApi","persistInFlight","providedApi","localApi","current","clearOnUnmount","clear","getDisplayName","WrappedComponent","WithApi","propsApi","displayName"],"sourceRoot":""}