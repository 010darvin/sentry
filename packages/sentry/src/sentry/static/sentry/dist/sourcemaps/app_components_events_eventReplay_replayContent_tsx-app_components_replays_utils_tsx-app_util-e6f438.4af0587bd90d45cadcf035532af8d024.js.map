{"version":3,"file":"chunks/app_components_events_eventReplay_replayContent_tsx-app_components_replays_utils_tsx-app_util-e6f438.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/eventReplay/replayContent.tsx","webpack:///./app/components/replays/replayContext.tsx","webpack:///./app/components/replays/utils.tsx","webpack:///./app/utils/replays/highlightNode.tsx","webpack:///./app/utils/replays/hooks/useRAF.tsx","webpack:///./app/utils/replays/replayDataUtils.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport DateTime from 'sentry/components/dateTime';\nimport Duration from 'sentry/components/duration';\nimport Placeholder from 'sentry/components/placeholder';\nimport {Provider as ReplayContextProvider} from 'sentry/components/replays/replayContext';\nimport ReplayView from 'sentry/components/replays/replayView';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport useFullscreen from 'sentry/utils/replays/hooks/useFullscreen';\nimport useReplayData from 'sentry/utils/replays/hooks/useReplayData';\nimport FluidHeight from 'sentry/views/replays/detail/layout/fluidHeight';\n\ntype Props = {\n  orgSlug: string;\n  replaySlug: string;\n};\n\nfunction ReplayContent({orgSlug, replaySlug}: Props) {\n  const {fetching, replay, fetchError} = useReplayData({\n    orgSlug,\n    replaySlug,\n  });\n  const {ref: fullscreenRef, toggle: toggleFullscreen} = useFullscreen();\n\n  if (fetchError) {\n    throw new Error('Failed to load Replay');\n  }\n\n  const replayRecord = replay?.getReplay();\n\n  if (fetching || !replayRecord) {\n    return <StyledPlaceholder height=\"400px\" width=\"100%\" />;\n  }\n\n  return (\n    <table className=\"table key-value\">\n      <tbody>\n        <tr key=\"replay\">\n          <td className=\"key\">{t('Replay')}</td>\n          <td className=\"value\">\n            <ReplayContextProvider replay={replay} initialTimeOffset={0}>\n              <PlayerContainer ref={fullscreenRef}>\n                <ReplayView toggleFullscreen={toggleFullscreen} showAddressBar={false} />\n              </PlayerContainer>\n            </ReplayContextProvider>\n          </td>\n        </tr>\n        <tr key=\"id\">\n          <td className=\"key\">{t('Id')}</td>\n          <td className=\"value\">\n            <pre className=\"val-string\">{replayRecord.id}</pre>\n          </td>\n        </tr>\n        <tr key=\"url\">\n          <td className=\"key\">{t('URL')}</td>\n          <td className=\"value\">\n            <pre className=\"val-string\">{replayRecord.urls[0]}</pre>\n          </td>\n        </tr>\n        <tr key=\"timestamp\">\n          <td className=\"key\">{t('Timestamp')}</td>\n          <td className=\"value\">\n            <pre className=\"val-string\">\n              <DateTime year seconds utc date={replayRecord.startedAt} />\n            </pre>\n          </td>\n        </tr>\n        <tr key=\"duration\">\n          <td className=\"key\">{t('Duration')}</td>\n          <td className=\"value\">\n            <pre className=\"val-string\">\n              <Duration seconds={replayRecord.duration / 1000} fixedDigits={0} />\n            </pre>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nconst PlayerContainer = styled(FluidHeight)`\n  margin-bottom: ${space(2)};\n  background: ${p => p.theme.background};\n`;\n\nconst StyledPlaceholder = styled(Placeholder)`\n  margin-top: ${space(2)};\n`;\n\nexport default ReplayContent;\n","import React, {useCallback, useContext, useEffect, useRef, useState} from 'react';\nimport {useTheme} from '@emotion/react';\nimport {Replayer, ReplayerEvents} from 'rrweb';\n\nimport {\n  clearAllHighlights,\n  highlightNode,\n  removeHighlightedNode,\n} from 'sentry/utils/replays/highlightNode';\nimport useRAF from 'sentry/utils/replays/hooks/useRAF';\nimport type ReplayReader from 'sentry/utils/replays/replayReader';\nimport usePrevious from 'sentry/utils/usePrevious';\n\ntype Dimensions = {height: number; width: number};\ntype RootElem = null | HTMLDivElement;\n\ntype HighlightParams = {\n  nodeId: number;\n  annotation?: string;\n};\n\n// Important: Don't allow context Consumers to access `Replayer` directly.\n// It has state that, when changed, will not trigger a react render.\n// Instead only expose methods that wrap `Replayer` and manage state.\ntype ReplayPlayerContextProps = {\n  /**\n   * Clear all existing highlights in replay\n   */\n  clearAllHighlights: () => void;\n\n  /**\n   * The time, in milliseconds, where the user focus is.\n   * The user focus can be reported by any collaborating object, usually on\n   * hover.\n   */\n  currentHoverTime: undefined | number;\n\n  /**\n   * The current time of the video, in milliseconds\n   * The value is updated on every animation frame, about every 16.6ms\n   */\n  currentTime: number;\n\n  /**\n   * Original dimensions in pixels of the captured browser window\n   */\n  dimensions: Dimensions;\n\n  /**\n   * The calculated speed of the player when fast-forwarding through idle moments in the video\n   * The value is set to `0` when the video is not fast-forwarding\n   * The speed is automatically determined by the length of each idle period\n   */\n  fastForwardSpeed: number;\n\n  /**\n   * Highlight a node in the replay\n   */\n  highlight: (args: HighlightParams) => void;\n\n  /**\n   * Required to be called with a <div> Ref\n   * Represents the location in the DOM where the iframe video should be mounted\n   *\n   * @param _root\n   */\n  initRoot: (root: RootElem) => void;\n\n  /**\n   * Set to true while the library is reconstructing the DOM\n   */\n  isBuffering: boolean;\n\n  /**\n   * Set to true when the replay finish event is fired\n   */\n  isFinished: boolean;\n\n  /**\n   * Whether the video is currently playing\n   */\n  isPlaying: boolean;\n\n  /**\n   * Whether fast-forward mode is enabled if RRWeb detects idle moments in the video\n   */\n  isSkippingInactive: boolean;\n\n  /**\n   * Removes a highlighted node from the replay\n   */\n  removeHighlight: ({nodeId}: {nodeId: number}) => void;\n\n  /**\n   * The core replay data\n   */\n  replay: ReplayReader | null;\n\n  /**\n   * Restart the replay\n   */\n  restart: () => void;\n\n  /**\n   * Set the currentHoverTime so collaborating components can highlight related\n   * information\n   */\n  setCurrentHoverTime: (time: undefined | number) => void;\n\n  /**\n   * Jump the video to a specific time\n   */\n  setCurrentTime: (time: number) => void;\n\n  /**\n   * Set speed for normal playback\n   */\n  setSpeed: (speed: number) => void;\n\n  /**\n   * The speed for normal playback\n   */\n  speed: number;\n\n  /**\n   * Start or stop playback\n   *\n   * @param play\n   */\n  togglePlayPause: (play: boolean) => void;\n\n  /**\n   * Allow RRWeb to use Fast-Forward mode for idle moments in the video\n   *\n   * @param skip\n   */\n  toggleSkipInactive: (skip: boolean) => void;\n};\n\nconst ReplayPlayerContext = React.createContext<ReplayPlayerContextProps>({\n  clearAllHighlights: () => {},\n  currentHoverTime: undefined,\n  currentTime: 0,\n  dimensions: {height: 0, width: 0},\n  fastForwardSpeed: 0,\n  highlight: () => {},\n  initRoot: () => {},\n  isBuffering: false,\n  isFinished: false,\n  isPlaying: false,\n  isSkippingInactive: true,\n  removeHighlight: () => {},\n  replay: null,\n  restart: () => {},\n  setCurrentHoverTime: () => {},\n  setCurrentTime: () => {},\n  setSpeed: () => {},\n  speed: 1,\n  togglePlayPause: () => {},\n  toggleSkipInactive: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n  replay: ReplayReader | null;\n\n  /**\n   * Time, in seconds, when the video should start\n   */\n  initialTimeOffset?: number;\n\n  /**\n   * Override return fields for testing\n   */\n  value?: Partial<ReplayPlayerContextProps>;\n};\n\nfunction useCurrentTime(callback: () => number) {\n  const [currentTime, setCurrentTime] = useState(0);\n  useRAF(() => setCurrentTime(callback));\n  return currentTime;\n}\n\nexport function Provider({children, replay, initialTimeOffset = 0, value = {}}: Props) {\n  const events = replay?.getRRWebEvents();\n\n  const theme = useTheme();\n  const oldEvents = usePrevious(events);\n  // Note we have to check this outside of hooks, see `usePrevious` comments\n  const hasNewEvents = events !== oldEvents;\n  const replayerRef = useRef<Replayer>(null);\n  const [dimensions, setDimensions] = useState<Dimensions>({height: 0, width: 0});\n  const [currentHoverTime, setCurrentHoverTime] = useState<undefined | number>();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [finishedAtMS, setFinishedAtMS] = useState<number>(-1);\n  const [isSkippingInactive, setIsSkippingInactive] = useState(true);\n  const [speed, setSpeedState] = useState(1);\n  const [fastForwardSpeed, setFFSpeed] = useState(0);\n  const [buffer, setBufferTime] = useState({target: -1, previous: -1});\n  const playTimer = useRef<number | undefined>(undefined);\n  const unMountedRef = useRef(false);\n\n  const isFinished = replayerRef.current?.getCurrentTime() === finishedAtMS;\n\n  const forceDimensions = (dimension: Dimensions) => {\n    setDimensions(dimension);\n  };\n  const onFastForwardStart = (e: {speed: number}) => {\n    setFFSpeed(e.speed);\n  };\n  const onFastForwardEnd = () => {\n    setFFSpeed(0);\n  };\n\n  const highlight = useCallback(({nodeId, annotation}: HighlightParams) => {\n    const replayer = replayerRef.current;\n    if (!replayer) {\n      return;\n    }\n\n    highlightNode({replayer, nodeId, annotation});\n  }, []);\n\n  const clearAllHighlightsCallback = useCallback(() => {\n    const replayer = replayerRef.current;\n    if (!replayer) {\n      return;\n    }\n\n    clearAllHighlights({replayer});\n  }, []);\n\n  const removeHighlight = useCallback(({nodeId}: {nodeId: number}) => {\n    const replayer = replayerRef.current;\n    if (!replayer) {\n      return;\n    }\n\n    removeHighlightedNode({replayer, nodeId});\n  }, []);\n\n  const setReplayFinished = useCallback(() => {\n    setFinishedAtMS(replayerRef.current?.getCurrentTime() ?? -1);\n    setIsPlaying(false);\n  }, []);\n\n  const initRoot = useCallback(\n    (root: RootElem) => {\n      if (events === undefined) {\n        return;\n      }\n\n      if (root === null) {\n        return;\n      }\n\n      if (replayerRef.current) {\n        if (!hasNewEvents && !unMountedRef.current) {\n          // Already have a player for these events, the parent node must've re-rendered\n          return;\n        }\n\n        if (replayerRef.current.iframe.contentDocument?.body.childElementCount === 0) {\n          // If this is true, then no need to clear old iframe as nothing was rendered\n          return;\n        }\n\n        // We have new events, need to clear out the old iframe because a new\n        // `Replayer` instance is about to be created\n        while (root.firstChild) {\n          root.removeChild(root.firstChild);\n        }\n      }\n\n      // eslint-disable-next-line no-new\n      const inst = new Replayer(events, {\n        root,\n        blockClass: 'sr-block',\n        // liveMode: false,\n        // triggerFocus: false,\n        mouseTail: {\n          duration: 0.75 * 1000,\n          lineCap: 'round',\n          lineWidth: 2,\n          strokeStyle: theme.purple200,\n        },\n        // unpackFn: _ => _,\n        // plugins: [],\n        skipInactive: true,\n      });\n\n      // @ts-expect-error: rrweb types event handlers with `unknown` parameters\n      inst.on(ReplayerEvents.Resize, forceDimensions);\n      inst.on(ReplayerEvents.Finish, setReplayFinished);\n      // @ts-expect-error: rrweb types event handlers with `unknown` parameters\n      inst.on(ReplayerEvents.SkipStart, onFastForwardStart);\n      inst.on(ReplayerEvents.SkipEnd, onFastForwardEnd);\n\n      // `.current` is marked as readonly, but it's safe to set the value from\n      // inside a `useEffect` hook.\n      // See: https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables\n      // @ts-expect-error\n      replayerRef.current = inst;\n\n      if (unMountedRef.current) {\n        unMountedRef.current = false;\n      }\n    },\n    [events, theme.purple200, setReplayFinished, hasNewEvents]\n  );\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState !== 'visible') {\n        replayerRef.current?.pause();\n      }\n    };\n\n    if (replayerRef.current && events) {\n      initRoot(replayerRef.current.wrapper.parentElement as RootElem);\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n    }\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [initRoot, events]);\n\n  const getCurrentTime = useCallback(\n    () => (replayerRef.current ? Math.max(replayerRef.current.getCurrentTime(), 0) : 0),\n    []\n  );\n\n  const setCurrentTime = useCallback(\n    (requestedTimeMs: number) => {\n      const replayer = replayerRef.current;\n      if (!replayer) {\n        return;\n      }\n\n      const maxTimeMs = replayerRef.current?.getMetaData().totalTime;\n      const time = requestedTimeMs > maxTimeMs ? 0 : requestedTimeMs;\n\n      // Sometimes rrweb doesn't get to the exact target time, as long as it has\n      // changed away from the previous time then we can hide then buffering message.\n      setBufferTime({target: time, previous: getCurrentTime()});\n\n      // Clear previous timers. Without this (but with the setTimeout) multiple\n      // requests to set the currentTime could finish out of order and cause jumping.\n      if (playTimer.current) {\n        window.clearTimeout(playTimer.current);\n      }\n\n      if (isPlaying) {\n        playTimer.current = window.setTimeout(() => replayer.play(time), 0);\n        setIsPlaying(true);\n      } else {\n        playTimer.current = window.setTimeout(() => replayer.pause(time), 0);\n        setIsPlaying(false);\n      }\n    },\n    [getCurrentTime, isPlaying]\n  );\n\n  const setSpeed = useCallback(\n    (newSpeed: number) => {\n      const replayer = replayerRef.current;\n      if (!replayer) {\n        return;\n      }\n      if (isPlaying) {\n        replayer.pause();\n        replayer.setConfig({speed: newSpeed});\n        replayer.play(getCurrentTime());\n      } else {\n        replayer.setConfig({speed: newSpeed});\n      }\n      setSpeedState(newSpeed);\n    },\n    [getCurrentTime, isPlaying]\n  );\n\n  const togglePlayPause = useCallback(\n    (play: boolean) => {\n      const replayer = replayerRef.current;\n      if (!replayer) {\n        return;\n      }\n\n      if (play) {\n        replayer.play(getCurrentTime());\n      } else {\n        replayer.pause(getCurrentTime());\n      }\n      setIsPlaying(play);\n    },\n    [getCurrentTime]\n  );\n\n  const restart = useCallback(() => {\n    if (replayerRef.current) {\n      replayerRef.current.play(0);\n      setIsPlaying(true);\n    }\n  }, []);\n\n  const toggleSkipInactive = useCallback((skip: boolean) => {\n    const replayer = replayerRef.current;\n    if (!replayer) {\n      return;\n    }\n    if (skip !== replayer.config.skipInactive) {\n      replayer.setConfig({skipInactive: skip});\n    }\n    setIsSkippingInactive(skip);\n  }, []);\n\n  // Only on pageload: set the initial playback timestamp\n  useEffect(() => {\n    if (initialTimeOffset && events && replayerRef.current) {\n      setCurrentTime(initialTimeOffset * 1000);\n    }\n\n    return () => {\n      unMountedRef.current = true;\n    };\n  }, [events, replayerRef.current]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const currentPlayerTime = useCurrentTime(getCurrentTime);\n\n  const [isBuffering, currentTime] =\n    buffer.target !== -1 &&\n    buffer.previous === currentPlayerTime &&\n    buffer.target !== buffer.previous\n      ? [true, buffer.target]\n      : [false, currentPlayerTime];\n\n  if (!isBuffering && buffer.target !== -1) {\n    setBufferTime({target: -1, previous: -1});\n  }\n\n  return (\n    <ReplayPlayerContext.Provider\n      value={{\n        clearAllHighlights: clearAllHighlightsCallback,\n        currentHoverTime,\n        currentTime,\n        dimensions,\n        fastForwardSpeed,\n        highlight,\n        initRoot,\n        isBuffering,\n        isFinished,\n        isPlaying,\n        isSkippingInactive,\n        removeHighlight,\n        replay,\n        restart,\n        setCurrentHoverTime,\n        setCurrentTime,\n        setSpeed,\n        speed,\n        togglePlayPause,\n        toggleSkipInactive,\n        ...value,\n      }}\n    >\n      {children}\n    </ReplayPlayerContext.Provider>\n  );\n}\n\nexport const useReplayContext = () => useContext(ReplayPlayerContext);\n","import padStart from 'lodash/padStart';\n\nimport {Crumb} from 'sentry/types/breadcrumbs';\nimport type {ReplaySpan} from 'sentry/views/replays/types';\n\nfunction padZero(num: number, len = 2): string {\n  const str = String(num);\n  return padStart(str, len, '0');\n}\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\n\n/**\n * @param timestamp The timestamp that is our reference point. Can be anything that `moment` accepts such as `'2022-05-04T19:47:52.915000Z'` or `1651664872.915`\n * @param diffMs Number of milliseconds to adjust the timestamp by, either positive (future) or negative (past)\n * @returns Unix timestamp of the adjusted timestamp, in milliseconds\n */\nexport function relativeTimeInMs(\n  timestamp: ConstructorParameters<typeof Date>[0],\n  diffMs: number\n): number {\n  return Math.abs(new Date(timestamp).getTime() - diffMs);\n}\n\nexport function showPlayerTime(\n  timestamp: ConstructorParameters<typeof Date>[0],\n  relativeTimeMs: number,\n  showMs: boolean = false\n): string {\n  return formatTime(relativeTimeInMs(timestamp, relativeTimeMs), showMs);\n}\n\n// TODO: move into 'sentry/utils/formatters'\nexport function formatTime(ms: number, showMs?: boolean): string {\n  if (ms <= 0 || isNaN(ms)) {\n    if (showMs) {\n      return '00:00.000';\n    }\n\n    return '00:00';\n  }\n\n  const hour = Math.floor(ms / HOUR);\n  ms = ms % HOUR;\n  const minute = Math.floor(ms / MINUTE);\n  ms = ms % MINUTE;\n  const second = Math.floor(ms / SECOND);\n\n  let formattedTime = '00:00';\n\n  if (hour) {\n    formattedTime = `${padZero(hour)}:${padZero(minute)}:${padZero(second)}`;\n  } else {\n    formattedTime = `${padZero(minute)}:${padZero(second)}`;\n  }\n\n  if (showMs) {\n    const milliseconds = Math.floor(ms % SECOND);\n    formattedTime = `${formattedTime}.${padZero(milliseconds, 3)}`;\n  }\n\n  return formattedTime;\n}\n\n/**\n * Figure out how many ticks to show in an area.\n * If there is more space available, we can show more granular ticks, but if\n * less space is available, fewer ticks.\n * Similarly if the duration is short, the ticks will represent a short amount\n * of time (like every second) but if the duration is long one tick may\n * represent an hour.\n *\n * @param durationMs The amount of time that we need to chop up into even sections\n * @param width Total width available, pixels\n * @param minWidth Minimum space for each column, pixels. Ex: So we can show formatted time like `1:00:00` between major ticks\n * @returns\n */\nexport function countColumns(durationMs: number, width: number, minWidth: number = 50) {\n  let maxCols = Math.floor(width / minWidth);\n  const remainder = durationMs - maxCols * width > 0 ? 1 : 0;\n  maxCols -= remainder;\n\n  // List of all the possible time granularities to display\n  // We could generate the list, which is basically a version of fizzbuzz, hard-coding is quicker.\n  const timeOptions = [\n    1 * HOUR,\n    30 * MINUTE,\n    20 * MINUTE,\n    15 * MINUTE,\n    10 * MINUTE,\n    5 * MINUTE,\n    2 * MINUTE,\n    1 * MINUTE,\n    30 * SECOND,\n    10 * SECOND,\n    5 * SECOND,\n    1 * SECOND,\n  ];\n\n  const timeBasedCols = timeOptions.reduce<Map<number, number>>((map, time) => {\n    map.set(time, Math.floor(durationMs / time));\n    return map;\n  }, new Map());\n\n  const [timespan, cols] = Array.from(timeBasedCols.entries())\n    .filter(([_span, c]) => c <= maxCols) // Filter for any valid timespan option where all ticks would fit\n    .reduce((best, next) => (next[1] > best[1] ? next : best), [0, 0]); // select the timespan option with the most ticks\n\n  const remaining = (durationMs - timespan * cols) / timespan;\n  return {timespan, cols, remaining};\n}\n\n/**\n * Group Crumbs for display along the timeline.\n *\n * The timeline is broken down into columns (aka buckets, or time-slices).\n * Columns translate to a fixed width on the screen, to prevent side-scrolling.\n *\n * This function groups crumbs into columns based on the number of columns available\n * and the timestamp of the crumb.\n */\nexport function getCrumbsByColumn(\n  startTimestampMs: number,\n  durationMs: number,\n  crumbs: Crumb[],\n  totalColumns: number\n) {\n  const safeDurationMs = isNaN(durationMs) ? 1 : durationMs;\n\n  const columnCrumbPairs = crumbs.map(breadcrumb => {\n    const {timestamp} = breadcrumb;\n    const timestampMilliSeconds = +new Date(String(timestamp));\n    const sinceStart = isNaN(timestampMilliSeconds)\n      ? 0\n      : timestampMilliSeconds - startTimestampMs;\n\n    const columnPositionCalc =\n      Math.floor((sinceStart / safeDurationMs) * (totalColumns - 1)) + 1;\n\n    // Should start at minimum in the first column\n    const column = Math.max(1, columnPositionCalc);\n\n    return [column, breadcrumb] as [number, Crumb];\n  });\n\n  const crumbsByColumn = columnCrumbPairs.reduce((map, [column, breadcrumb]) => {\n    if (map.has(column)) {\n      map.get(column)?.push(breadcrumb);\n    } else {\n      map.set(column, [breadcrumb]);\n    }\n    return map;\n  }, new Map() as Map<number, Crumb[]>);\n\n  return crumbsByColumn;\n}\n\ntype FlattenedSpanRange = {\n  /**\n   * Duration of this range\n   */\n  duration: number;\n  /**\n   * Absolute time in ms when the range ends\n   */\n  endTimestamp: number;\n  /**\n   * Number of spans that got flattened into this range\n   */\n  spanCount: number;\n  /**\n   * ID of the original span that created this range\n   */\n  spanId: string;\n  //\n  /**\n   * Absolute time in ms when the span starts\n   */\n  startTimestamp: number;\n};\n\nfunction doesOverlap(a: FlattenedSpanRange, b: FlattenedSpanRange) {\n  const bStartsWithinA =\n    a.startTimestamp <= b.startTimestamp && b.startTimestamp <= a.endTimestamp;\n  const bEndsWithinA =\n    a.startTimestamp <= b.endTimestamp && b.endTimestamp <= a.endTimestamp;\n  return bStartsWithinA || bEndsWithinA;\n}\n\nexport function flattenSpans(rawSpans: ReplaySpan[]): FlattenedSpanRange[] {\n  if (!rawSpans.length) {\n    return [];\n  }\n\n  const spans = rawSpans.map(span => {\n    const startTimestamp = span.startTimestamp * 1000;\n\n    // `endTimestamp` is at least msPerPixel wide, otherwise it disappears\n    const endTimestamp = span.endTimestamp * 1000;\n    return {\n      spanCount: 1,\n      // spanId: span.span_id,\n      startTimestamp,\n      endTimestamp,\n      duration: endTimestamp - startTimestamp,\n    } as FlattenedSpanRange;\n  });\n\n  const [firstSpan, ...restSpans] = spans;\n  const flatSpans = [firstSpan];\n\n  for (const span of restSpans) {\n    let overlap = false;\n    for (const fspan of flatSpans) {\n      if (doesOverlap(fspan, span)) {\n        overlap = true;\n        fspan.spanCount += 1;\n        fspan.startTimestamp = Math.min(fspan.startTimestamp, span.startTimestamp);\n        fspan.endTimestamp = Math.max(fspan.endTimestamp, span.endTimestamp);\n        fspan.duration = fspan.endTimestamp - fspan.startTimestamp;\n        break;\n      }\n    }\n    if (!overlap) {\n      flatSpans.push(span);\n    }\n  }\n  return flatSpans;\n}\n\n/**\n * Divide two numbers safely\n */\nexport function divide(numerator: number, denominator: number | undefined) {\n  if (denominator === undefined || isNaN(denominator) || denominator === 0) {\n    return 0;\n  }\n  return numerator / denominator;\n}\n","import type {Replayer} from 'rrweb';\n\nconst DEFAULT_HIGHLIGHT_COLOR = 'rgba(168, 196, 236, 0.75)';\n\nconst highlightsByNodeId: Map<number, {canvas: HTMLCanvasElement}> = new Map();\n\ninterface AddHighlightParams {\n  nodeId: number;\n  replayer: Replayer;\n  annotation?: string;\n  color?: string;\n}\n\ninterface RemoveHighlightParams {\n  nodeId: number;\n  replayer: Replayer;\n}\n\ninterface ClearAllHighlightsParams {\n  replayer: Replayer;\n}\n\nexport function clearAllHighlights({replayer}: ClearAllHighlightsParams) {\n  for (const nodeId of highlightsByNodeId.keys()) {\n    removeHighlightedNode({replayer, nodeId});\n  }\n}\n\n/**\n * Remove the canvas that has the highlight for a node.\n *\n * XXX: This is potentially not good if we have a lot of highlights, as we\n * are creating a new canvas PER highlight.\n */\nexport function removeHighlightedNode({replayer, nodeId}: RemoveHighlightParams) {\n  if (!highlightsByNodeId.has(nodeId)) {\n    return false;\n  }\n\n  const highlightObj = highlightsByNodeId.get(nodeId);\n\n  if (!highlightObj || !replayer.wrapper.contains(highlightObj.canvas)) {\n    return false;\n  }\n\n  replayer.wrapper.removeChild(highlightObj.canvas);\n  highlightsByNodeId.delete(nodeId);\n\n  return true;\n}\n\n/**\n * Attempt to highlight the node inside of a replay recording\n */\nexport function highlightNode({\n  replayer,\n  nodeId,\n  annotation = '',\n  color,\n}: AddHighlightParams) {\n  // @ts-expect-error mouseTail is private\n  const {mouseTail, wrapper} = replayer;\n  const mirror = replayer.getMirror();\n  const node = mirror.getNode(nodeId);\n\n  // TODO(replays): There is some sort of race condition here when you \"rewind\" a replay,\n  // mirror will be empty and highlight does not get added because node is null\n  if (!node || !replayer.iframe.contentDocument?.body?.contains(node)) {\n    return null;\n  }\n\n  // @ts-ignore This builds locally, but fails in CI -- ignoring for now\n  const {top, left, width, height} = node.getBoundingClientRect();\n  const highlightColor = color ?? DEFAULT_HIGHLIGHT_COLOR;\n\n  // Clone the mouseTail canvas as it has the dimensions and position that we\n  // want on top of the replay. We may need to revisit this strategy as we\n  // create a new canvas for every highlight. See additional notes in\n  // removeHighlight() method.\n  const canvas = mouseTail.cloneNode();\n\n  const ctx = canvas.getContext('2d');\n\n  if (!ctx) {\n    return null;\n  }\n\n  // TODO(replays): Does not account for scrolling (should we attempt to keep highlight visible, or does it disappear)\n\n  // Draw a rectangle to highlight element\n  ctx.fillStyle = highlightColor;\n  ctx.fillRect(left, top, width, height);\n\n  // Draw a dashed border around highlight\n  ctx.beginPath();\n  ctx.setLineDash([5, 5]);\n  ctx.moveTo(left, top);\n  ctx.lineTo(left + width, top);\n  ctx.lineTo(left + width, top + height);\n  ctx.lineTo(left, top + height);\n  ctx.closePath();\n  ctx.stroke();\n\n  ctx.font = '24px Rubik';\n  ctx.textAlign = 'right';\n  ctx.textBaseline = 'bottom';\n\n  const textWidth = ctx.measureText(annotation).width;\n\n  // Draw rect around text\n  ctx.fillStyle = 'rgba(30, 30, 30, 0.75)';\n  ctx.fillRect(left + width - textWidth, top + height - 30, textWidth, 30);\n\n  // Draw text\n  ctx.fillStyle = 'white';\n  ctx.fillText(annotation, left + width, top + height);\n\n  highlightsByNodeId.set(nodeId, {\n    canvas,\n  });\n\n  wrapper.insertBefore(canvas, mouseTail);\n\n  return {\n    canvas,\n  };\n}\n","import {useEffect} from 'react';\n\n// TODO: move into app/utils/*\nexport default function useRAF(callback: () => unknown) {\n  useEffect(() => {\n    const timer = window.requestAnimationFrame(callback);\n    return () => window.cancelAnimationFrame(timer);\n  }, [callback]);\n}\n","import first from 'lodash/first';\n\nimport {transformCrumbs} from 'sentry/components/events/interfaces/breadcrumbs/utils';\nimport {t} from 'sentry/locale';\nimport type {\n  BreadcrumbTypeDefault,\n  BreadcrumbTypeNavigation,\n  Crumb,\n  RawCrumb,\n} from 'sentry/types/breadcrumbs';\nimport {BreadcrumbLevelType, BreadcrumbType} from 'sentry/types/breadcrumbs';\nimport type {\n  RecordingEvent,\n  ReplayCrumb,\n  ReplayError,\n  ReplayRecord,\n  ReplaySpan,\n} from 'sentry/views/replays/types';\n\nexport function mapResponseToReplayRecord(apiResponse: any): ReplayRecord {\n  return {\n    ...apiResponse,\n    ...(apiResponse.startedAt ? {startedAt: new Date(apiResponse.startedAt)} : {}),\n    ...(apiResponse.finishedAt ? {finishedAt: new Date(apiResponse.finishedAt)} : {}),\n    user: {\n      email: apiResponse.user.email || '',\n      id: apiResponse.user.id || '',\n      ip_address: apiResponse.user.ip_address || '',\n      name: apiResponse.user.name || '',\n      username: '',\n    },\n  };\n}\n\nexport function rrwebEventListFactory(\n  replayRecord: ReplayRecord,\n  rrwebEvents: RecordingEvent[]\n) {\n  const events = ([] as RecordingEvent[]).concat(rrwebEvents).concat({\n    type: 5, // EventType.Custom,\n    timestamp: replayRecord.finishedAt.getTime(),\n    data: {\n      tag: 'replay-end',\n    },\n  });\n\n  events.sort((a, b) => a.timestamp - b.timestamp);\n\n  const firstRRWebEvent = first(events) as RecordingEvent;\n  firstRRWebEvent.timestamp = replayRecord.startedAt.getTime();\n\n  return events;\n}\n\nexport function breadcrumbFactory(\n  replayRecord: ReplayRecord,\n  errors: ReplayError[],\n  rawCrumbs: ReplayCrumb[],\n  spans: ReplaySpan[]\n): Crumb[] {\n  const initialUrl = replayRecord.tags.url;\n  const initBreadcrumb = {\n    type: BreadcrumbType.INIT,\n    timestamp: replayRecord.startedAt.toISOString(),\n    level: BreadcrumbLevelType.INFO,\n    message: initialUrl,\n    data: {\n      action: 'replay-init',\n      label: t('Start recording'),\n      url: initialUrl,\n    },\n  } as BreadcrumbTypeDefault;\n\n  const errorCrumbs: RawCrumb[] = errors.map(error => ({\n    type: BreadcrumbType.ERROR,\n    level: BreadcrumbLevelType.ERROR,\n    category: 'exception',\n    message: error['error.value'],\n    data: {\n      label: error['error.type'],\n    },\n    timestamp: error.timestamp,\n  }));\n\n  const spanCrumbs: (BreadcrumbTypeDefault | BreadcrumbTypeNavigation)[] = spans\n    .filter(span =>\n      ['navigation.navigate', 'navigation.reload', 'largest-contentful-paint'].includes(\n        span.op\n      )\n    )\n    .map(span => {\n      if (span.op.startsWith('navigation')) {\n        const [, action] = span.op.split('.');\n        return {\n          category: 'default',\n          type: BreadcrumbType.NAVIGATION,\n          timestamp: new Date(span.startTimestamp * 1000).toISOString(),\n          level: BreadcrumbLevelType.INFO,\n          message: span.description,\n          action,\n          data: {\n            to: span.description,\n            label:\n              action === 'reload'\n                ? t('Reload')\n                : action === 'navigate'\n                ? t('Page load')\n                : t('Navigation'),\n            ...span.data,\n          },\n        };\n      }\n\n      return {\n        type: BreadcrumbType.DEBUG,\n        timestamp: new Date(span.startTimestamp * 1000).toISOString(),\n        level: BreadcrumbLevelType.INFO,\n        category: 'default',\n        data: {\n          action: span.op,\n          ...span.data,\n          label: span.op === 'largest-contentful-paint' ? t('LCP') : span.op,\n        },\n      };\n    });\n\n  const hasPageLoad = spans.find(span => span.op === 'navigation.navigate');\n\n  const result = transformCrumbs([\n    ...(!hasPageLoad ? [initBreadcrumb] : []),\n    ...(rawCrumbs.map(({timestamp, ...crumb}) => ({\n      ...crumb,\n      type: BreadcrumbType.DEFAULT,\n      timestamp: new Date(timestamp * 1000).toISOString(),\n    })) as RawCrumb[]),\n    ...errorCrumbs,\n    ...spanCrumbs,\n  ]);\n\n  return result.sort((a, b) => +new Date(a.timestamp || 0) - +new Date(b.timestamp || 0));\n}\n\nexport function spansFactory(spans: ReplaySpan[]) {\n  return spans.sort((a, b) => a.startTimestamp - b.startTimestamp);\n}\n\n/**\n * We need to figure out the real start and end timestamps based on when\n * first and last bits of data were collected. In milliseconds.\n *\n * @deprecated Once the backend returns the corrected timestamps, this is not needed.\n */\nexport function replayTimestamps(\n  rrwebEvents: RecordingEvent[],\n  rawCrumbs: ReplayCrumb[],\n  rawSpanData: ReplaySpan[]\n) {\n  const rrwebTimestamps = rrwebEvents.map(event => event.timestamp);\n  const breadcrumbTimestamps = (\n    rawCrumbs.map(rawCrumb => rawCrumb.timestamp).filter(Boolean) as number[]\n  ).map(timestamp => +new Date(timestamp * 1000));\n  const spanStartTimestamps = rawSpanData.map(span => span.startTimestamp * 1000);\n  const spanEndTimestamps = rawSpanData.map(span => span.endTimestamp * 1000);\n\n  return {\n    startTimestampMs: Math.min(\n      ...[...rrwebTimestamps, ...breadcrumbTimestamps, ...spanStartTimestamps]\n    ),\n    endTimestampMs: Math.max(\n      ...[...rrwebTimestamps, ...breadcrumbTimestamps, ...spanEndTimestamps]\n    ),\n  };\n}\n"],"names":["DateTime","Duration","Placeholder","Provider","ReplayContextProvider","ReplayView","t","space","useFullscreen","useReplayData","FluidHeight","ReplayContent","orgSlug","replaySlug","fetching","replay","fetchError","ref","fullscreenRef","toggle","toggleFullscreen","Error","replayRecord","getReplay","id","urls","startedAt","duration","PlayerContainer","p","theme","background","StyledPlaceholder","React","useCallback","useContext","useEffect","useRef","useState","useTheme","Replayer","ReplayerEvents","clearAllHighlights","highlightNode","removeHighlightedNode","useRAF","usePrevious","ReplayPlayerContext","createContext","currentHoverTime","undefined","currentTime","dimensions","height","width","fastForwardSpeed","highlight","initRoot","isBuffering","isFinished","isPlaying","isSkippingInactive","removeHighlight","restart","setCurrentHoverTime","setCurrentTime","setSpeed","speed","togglePlayPause","toggleSkipInactive","useCurrentTime","callback","children","initialTimeOffset","value","events","getRRWebEvents","oldEvents","hasNewEvents","replayerRef","setDimensions","setIsPlaying","finishedAtMS","setFinishedAtMS","setIsSkippingInactive","setSpeedState","setFFSpeed","buffer","setBufferTime","target","previous","playTimer","unMountedRef","current","getCurrentTime","forceDimensions","dimension","onFastForwardStart","e","onFastForwardEnd","nodeId","annotation","replayer","clearAllHighlightsCallback","setReplayFinished","root","iframe","contentDocument","body","childElementCount","firstChild","removeChild","inst","blockClass","mouseTail","lineCap","lineWidth","strokeStyle","purple200","skipInactive","on","Resize","Finish","SkipStart","SkipEnd","handleVisibilityChange","document","visibilityState","pause","wrapper","parentElement","addEventListener","removeEventListener","Math","max","requestedTimeMs","maxTimeMs","getMetaData","totalTime","time","window","clearTimeout","setTimeout","play","newSpeed","setConfig","skip","config","currentPlayerTime","useReplayContext","padStart","padZero","num","len","str","String","SECOND","MINUTE","HOUR","relativeTimeInMs","timestamp","diffMs","abs","Date","getTime","showPlayerTime","relativeTimeMs","showMs","formatTime","ms","isNaN","hour","floor","minute","second","formattedTime","milliseconds","countColumns","durationMs","minWidth","maxCols","remainder","timeOptions","timeBasedCols","reduce","map","set","Map","timespan","cols","Array","from","entries","filter","_span","c","best","next","remaining","getCrumbsByColumn","startTimestampMs","crumbs","totalColumns","safeDurationMs","columnCrumbPairs","breadcrumb","timestampMilliSeconds","sinceStart","columnPositionCalc","column","crumbsByColumn","has","get","push","doesOverlap","a","b","bStartsWithinA","startTimestamp","endTimestamp","bEndsWithinA","flattenSpans","rawSpans","length","spans","span","spanCount","firstSpan","restSpans","flatSpans","overlap","fspan","min","divide","numerator","denominator","DEFAULT_HIGHLIGHT_COLOR","highlightsByNodeId","keys","highlightObj","contains","canvas","delete","color","mirror","getMirror","node","getNode","top","left","getBoundingClientRect","highlightColor","cloneNode","ctx","getContext","fillStyle","fillRect","beginPath","setLineDash","moveTo","lineTo","closePath","stroke","font","textAlign","textBaseline","textWidth","measureText","fillText","insertBefore","timer","requestAnimationFrame","cancelAnimationFrame","first","transformCrumbs","BreadcrumbLevelType","BreadcrumbType","mapResponseToReplayRecord","apiResponse","finishedAt","user","email","ip_address","name","username","rrwebEventListFactory","rrwebEvents","concat","type","data","tag","sort","firstRRWebEvent","breadcrumbFactory","errors","rawCrumbs","initialUrl","tags","url","initBreadcrumb","INIT","toISOString","level","INFO","message","action","label","errorCrumbs","error","ERROR","category","spanCrumbs","includes","op","startsWith","split","NAVIGATION","description","to","DEBUG","hasPageLoad","find","result","crumb","DEFAULT","spansFactory","replayTimestamps","rawSpanData","rrwebTimestamps","event","breadcrumbTimestamps","rawCrumb","Boolean","spanStartTimestamps","spanEndTimestamps","endTimestampMs"],"sourceRoot":""}