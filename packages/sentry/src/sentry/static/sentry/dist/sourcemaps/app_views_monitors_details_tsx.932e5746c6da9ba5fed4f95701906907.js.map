{"version":3,"file":"chunks/app_views_monitors_details_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/issueList.tsx","webpack:///./app/utils/logging.tsx","webpack:///./app/views/monitors/checkInIcon.tsx","webpack:///./app/views/monitors/details.tsx","webpack:///./app/views/monitors/monitorCheckIns.tsx","webpack:///./app/views/monitors/monitorHeader.tsx","webpack:///./app/views/monitors/monitorHeaderActions.tsx","webpack:///./app/views/monitors/monitorIcon.tsx","webpack:///./app/views/monitors/monitorIssues.tsx","webpack:///./app/views/monitors/monitorStats.tsx"],"sourcesContent":["import {Fragment, useCallback, useEffect, useMemo, useState} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\n\nimport CompactIssue from 'sentry/components/issues/compactIssue';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {IconSearch} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\ninterface IssueListProps extends WithRouterProps {\n  endpoint: string;\n  emptyText?: string;\n  noBorder?: boolean;\n  noMargin?: boolean;\n  pagination?: boolean;\n  query?: Record<string, any>;\n  renderEmpty?: () => React.ReactElement;\n}\n\ninterface IssueListState {\n  data: Array<Group>;\n  issueIds: Array<string>;\n  pageLinks: string | null;\n  status: 'loading' | 'error' | 'success';\n}\n\nfunction IssueList({\n  endpoint,\n  emptyText,\n  query,\n  location,\n  pagination,\n  renderEmpty,\n  noBorder,\n  noMargin,\n}: IssueListProps): React.ReactElement {\n  const api = useApi();\n\n  const [state, setState] = useState<IssueListState>({\n    issueIds: [],\n    status: 'loading',\n    pageLinks: null,\n    data: [],\n  });\n\n  const fetchIssueListData = useCallback(() => {\n    api.clear();\n    api.request(endpoint, {\n      method: 'GET',\n      query: {\n        ...query,\n        ...(location?.query?.cursor ? {cursor: location.query.cursor} : {}),\n      },\n      success: (data, _, resp) => {\n        setState({\n          data,\n          status: 'success',\n          issueIds: data.map(item => item.id),\n          pageLinks: resp?.getResponseHeader('Link') ?? null,\n        });\n      },\n      error: () => {\n        setState(prevState => ({...prevState, status: 'error'}));\n      },\n    });\n  }, [query, endpoint, location.query, api]);\n\n  // TODO: location should always be passed as a prop, check why we have this\n  const hasLocation = !!location;\n\n  useEffect(() => {\n    if (!hasLocation) {\n      return;\n    }\n\n    setState({issueIds: [], status: 'loading', pageLinks: null, data: []});\n    fetchIssueListData();\n  }, [fetchIssueListData, hasLocation]);\n\n  const panelStyles = useMemo(() => {\n    const styles: React.CSSProperties = {\n      ...(noBorder ? {border: 0, borderRadius: 0} : {}),\n      ...(noMargin ? {marginBottom: 0} : {}),\n    };\n\n    return styles;\n  }, [noBorder, noMargin]);\n\n  return (\n    <Fragment>\n      {state.status === 'loading' ? (\n        <div style={{margin: '18px 18px 0'}}>\n          <LoadingIndicator />\n        </div>\n      ) : state.status === 'error' ? (\n        <div style={{margin: `${space(2)} ${space(2)} 0`}}>\n          <LoadingError onRetry={fetchIssueListData} />\n        </div>\n      ) : state.issueIds.length > 0 ? (\n        <Panel style={panelStyles}>\n          <PanelBody className=\"issue-list\">\n            {state.data.map(issue => (\n              <CompactIssue key={issue.id} id={issue.id} data={issue} />\n            ))}\n          </PanelBody>\n        </Panel>\n      ) : renderEmpty ? (\n        renderEmpty()\n      ) : (\n        <Panel style={panelStyles}>\n          <EmptyMessage icon={<IconSearch size=\"xl\" />}>\n            {emptyText ?? t('Nothing to show here, move along.')}\n          </EmptyMessage>\n        </Panel>\n      )}\n\n      {pagination && state.pageLinks && <Pagination pageLinks={state.pageLinks} />}\n    </Fragment>\n  );\n}\n\nexport {IssueList};\n\nexport default withRouter(IssueList);\n","import * as Sentry from '@sentry/react';\n\nexport function logException(ex: Error, context?: any): void {\n  Sentry.withScope(scope => {\n    if (context) {\n      scope.setExtra('context', context);\n    }\n\n    Sentry.captureException(ex);\n  });\n  /* eslint no-console:0 */\n  window.console && console.error && console.error(ex);\n}\n","import styled from '@emotion/styled';\n\ntype Props = {\n  size: number | string;\n  status: 'error' | 'ok';\n  color?: string;\n};\n\nexport default styled('div')<Props>`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n\n  ${p =>\n    p.color\n      ? `background: ${p.color};`\n      : `background: ${\n          p.status === 'error'\n            ? p.theme.error\n            : p.status === 'ok'\n            ? p.theme.success\n            : p.theme.disabled\n        };`};\n`;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Panel, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport MonitorCheckIns from './monitorCheckIns';\nimport MonitorHeader from './monitorHeader';\nimport MonitorIssues from './monitorIssues';\nimport MonitorStats from './monitorStats';\nimport {Monitor} from './types';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{monitorId: string; orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  monitor: Monitor | null;\n};\n\nclass MonitorDetails extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params, location} = this.props;\n    return [['monitor', `/monitors/${params.monitorId}/`, {query: location.query}]];\n  }\n\n  getTitle() {\n    if (this.state.monitor) {\n      return `${this.state.monitor.name} - Monitors - ${this.props.params.orgId}`;\n    }\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  onUpdate = (data: Monitor) =>\n    this.setState(state => ({monitor: {...state.monitor, ...data}}));\n\n  renderBody() {\n    const {monitor} = this.state;\n\n    if (monitor === null) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <MonitorHeader\n          monitor={monitor}\n          orgId={this.props.params.orgId}\n          onUpdate={this.onUpdate}\n        />\n\n        <MonitorStats monitor={monitor} />\n\n        <Panel style={{paddingBottom: 0}}>\n          <PanelHeader>{t('Related Issues')}</PanelHeader>\n\n          <MonitorIssues monitor={monitor} orgId={this.props.params.orgId} />\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Recent Check-ins')}</PanelHeader>\n\n          <MonitorCheckIns monitor={monitor} />\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nexport default MonitorDetails;\n","import styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Duration from 'sentry/components/duration';\nimport {PanelBody, PanelItem} from 'sentry/components/panels';\nimport TimeSince from 'sentry/components/timeSince';\nimport space from 'sentry/styles/space';\nimport {Monitor} from 'sentry/views/monitors/types';\n\nimport CheckInIcon from './checkInIcon';\n\ntype CheckIn = {\n  dateCreated: string;\n  duration: number;\n  id: string;\n  status: 'ok' | 'error';\n};\n\ntype Props = {\n  monitor: Monitor;\n} & AsyncComponent['props'];\n\ntype State = {\n  checkInList: CheckIn[];\n} & AsyncComponent['state'];\n\nexport default class MonitorCheckIns extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {monitor} = this.props;\n    return [\n      ['checkInList', `/monitors/${monitor.id}/checkins/`, {query: {per_page: 10}}],\n    ];\n  }\n\n  renderError() {\n    return <ErrorWrapper>{super.renderError()}</ErrorWrapper>;\n  }\n\n  renderBody() {\n    return (\n      <PanelBody>\n        {this.state.checkInList.map(checkIn => (\n          <PanelItem key={checkIn.id}>\n            <CheckInIconWrapper>\n              <CheckInIcon status={checkIn.status} size={16} />\n            </CheckInIconWrapper>\n            <TimeSinceWrapper>\n              <TimeSince date={checkIn.dateCreated} />\n            </TimeSinceWrapper>\n            <DurationWrapper>\n              {checkIn.duration && <Duration seconds={checkIn.duration / 100} />}\n            </DurationWrapper>\n          </PanelItem>\n        ))}\n      </PanelBody>\n    );\n  }\n}\n\nconst DivMargin = styled('div')`\n  margin-right: ${space(2)};\n`;\n\nconst CheckInIconWrapper = styled(DivMargin)`\n  display: flex;\n  align-items: center;\n`;\n\nconst TimeSinceWrapper = styled(DivMargin)`\n  font-variant-numeric: tabular-nums;\n`;\n\nconst DurationWrapper = styled('div')`\n  font-variant-numeric: tabular-nums;\n`;\n\nconst ErrorWrapper = styled('div')`\n  margin: ${space(3)} ${space(3)} 0;\n`;\n","import TimeSince from 'sentry/components/timeSince';\nimport {t} from 'sentry/locale';\n\nimport MonitorHeaderActions from './monitorHeaderActions';\nimport MonitorIcon from './monitorIcon';\n\ntype Props = React.ComponentProps<typeof MonitorHeaderActions>;\n\nconst MonitorHeader = ({monitor, orgId, onUpdate}: Props) => (\n  <div className=\"release-details\">\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-xs-10\">\n        <h3>{monitor.name}</h3>\n        <div className=\"release-meta\">{monitor.id}</div>\n      </div>\n      <div className=\"col-sm-2 hidden-xs\">\n        <h6 className=\"nav-header\">{t('Last Check-in')}</h6>\n        {monitor.lastCheckIn && <TimeSince date={monitor.lastCheckIn} />}\n      </div>\n      <div className=\"col-sm-2 hidden-xs\">\n        <h6 className=\"nav-header\">{t('Next Check-in')}</h6>\n        {monitor.nextCheckIn && <TimeSince date={monitor.nextCheckIn} />}\n      </div>\n      <div className=\"col-sm-2\">\n        <h6 className=\"nav-header\">{t('Status')}</h6>\n        <MonitorIcon status={monitor.status} size={16} />\n      </div>\n    </div>\n    <MonitorHeaderActions orgId={orgId} monitor={monitor} onUpdate={onUpdate} />\n  </div>\n);\n\nexport default MonitorHeader;\n","import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport {IconDelete, IconEdit} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {logException} from 'sentry/utils/logging';\nimport useApi from 'sentry/utils/useApi';\n\nimport {Monitor} from './types';\n\ntype Props = {\n  monitor: Monitor;\n  onUpdate: (data: Monitor) => void;\n  orgId: string;\n};\n\nconst MonitorHeaderActions = ({monitor, orgId, onUpdate}: Props) => {\n  const api = useApi();\n\n  const handleDelete = () => {\n    const redirectPath = `/organizations/${orgId}/monitors/`;\n    addLoadingMessage(t('Deleting Monitor...'));\n\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        browserHistory.push(redirectPath);\n      })\n      .catch(() => {\n        addErrorMessage(t('Unable to remove monitor.'));\n      });\n  };\n\n  const updateMonitor = (data: Partial<Monitor>) => {\n    addLoadingMessage();\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'PUT',\n        data,\n      })\n      .then(resp => {\n        clearIndicators();\n        onUpdate?.(resp);\n      })\n      .catch(err => {\n        logException(err);\n        addErrorMessage(t('Unable to update monitor.'));\n      });\n  };\n\n  const toggleStatus = () =>\n    updateMonitor({\n      status: monitor.status === 'disabled' ? 'active' : 'disabled',\n    });\n\n  return (\n    <ButtonContainer>\n      <ButtonBar gap={1}>\n        <Button\n          size=\"sm\"\n          icon={<IconEdit size=\"xs\" />}\n          to={`/organizations/${orgId}/monitors/${monitor.id}/edit/`}\n        >\n          &nbsp;\n          {t('Edit')}\n        </Button>\n        <Button size=\"sm\" onClick={toggleStatus}>\n          {monitor.status !== 'disabled' ? t('Pause') : t('Enable')}\n        </Button>\n        <Confirm\n          onConfirm={handleDelete}\n          message={t(\n            'Deleting this monitor is permanent. Are you sure you wish to continue?'\n          )}\n        >\n          <Button size=\"sm\" icon={<IconDelete size=\"xs\" />}>\n            {t('Delete')}\n          </Button>\n        </Confirm>\n      </ButtonBar>\n    </ButtonContainer>\n  );\n};\n\nconst ButtonContainer = styled('div')`\n  margin-bottom: ${space(3)};\n  display: flex;\n  flex-shrink: 1;\n`;\n\nexport default MonitorHeaderActions;\n","import styled from '@emotion/styled';\n\nimport {Status} from './types';\n\nexport default styled('div')<{size: number; status: Status}>`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n\n  ${p =>\n    p.color\n      ? `background: ${p.color};`\n      : `background: ${\n          p.status === 'error'\n            ? p.theme.error\n            : p.status === 'ok'\n            ? p.theme.success\n            : p.theme.disabled\n        };`};\n`;\n","import IssueList from 'sentry/components/issueList';\nimport {t} from 'sentry/locale';\n\nimport {Monitor} from './types';\n\ntype Props = {\n  monitor: Monitor;\n  orgId: string;\n};\n\nconst MonitorIssues = ({orgId, monitor}: Props) => (\n  <IssueList\n    endpoint={`/organizations/${orgId}/issues/`}\n    query={{\n      query: 'monitor.id:\"' + monitor.id + '\"',\n      project: monitor.project.id,\n      limit: 5,\n    }}\n    pagination={false}\n    emptyText={t('No issues found')}\n    noBorder\n    noMargin\n  />\n);\n\nexport default MonitorIssues;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport theme from 'sentry/utils/theme';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nimport {Monitor, MonitorStat} from './types';\n\ntype Props = AsyncComponent['props'] & {\n  monitor: Monitor;\n};\n\ntype State = AsyncComponent['state'] & {\n  stats: MonitorStat[] | null;\n};\n\ntype Stat = {name: string; value: number};\n\nexport default class MonitorStats extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {monitor} = this.props;\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n    return [\n      [\n        'stats',\n        `/monitors/${monitor.id}/stats/`,\n        {\n          query: {\n            since,\n            until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderBody() {\n    let emptyStats = true;\n    const success = {\n      seriesName: t('Successful'),\n      data: [] as Stat[],\n    };\n    const failed = {\n      seriesName: t('Failed'),\n      data: [] as Stat[],\n    };\n    this.state.stats?.forEach(p => {\n      if (p.ok || p.error) {\n        emptyStats = false;\n      }\n      const timestamp = p.ts * 1000;\n      success.data.push({name: timestamp.toString(), value: p.ok});\n      failed.data.push({name: timestamp.toString(), value: p.error});\n    });\n    const colors = [theme.green300, theme.red300];\n\n    return (\n      <Panel>\n        <PanelBody withPadding>\n          {!emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              stacked\n              colors={colors}\n              height={150}\n              series={[success, failed]}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('All check-ins for this monitor.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n"],"names":["Fragment","useCallback","useEffect","useMemo","useState","withRouter","CompactIssue","LoadingError","LoadingIndicator","Pagination","Panel","PanelBody","IconSearch","t","space","useApi","EmptyMessage","IssueList","endpoint","emptyText","query","location","pagination","renderEmpty","noBorder","noMargin","api","state","setState","issueIds","status","pageLinks","data","fetchIssueListData","clear","request","method","cursor","success","_","resp","map","item","id","getResponseHeader","error","prevState","hasLocation","panelStyles","styles","border","borderRadius","marginBottom","margin","length","issue","Sentry","logException","ex","context","withScope","scope","setExtra","captureException","window","console","p","size","color","theme","disabled","PanelHeader","AsyncView","MonitorCheckIns","MonitorHeader","MonitorIssues","MonitorStats","MonitorDetails","monitor","getEndpoints","params","props","monitorId","getTitle","name","orgId","renderBody","onUpdate","paddingBottom","AsyncComponent","Duration","PanelItem","TimeSince","CheckInIcon","per_page","renderError","checkInList","checkIn","dateCreated","duration","DivMargin","CheckInIconWrapper","TimeSinceWrapper","DurationWrapper","ErrorWrapper","MonitorHeaderActions","MonitorIcon","lastCheckIn","nextCheckIn","browserHistory","addErrorMessage","addLoadingMessage","clearIndicators","Button","ButtonBar","Confirm","IconDelete","IconEdit","handleDelete","redirectPath","requestPromise","then","push","catch","updateMonitor","err","toggleStatus","ButtonContainer","project","limit","MiniBarChart","until","Math","floor","Date","getTime","since","resolution","emptyStats","seriesName","failed","stats","forEach","ok","timestamp","ts","toString","value","colors","green300","red300"],"sourceRoot":""}