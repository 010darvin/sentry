{"version":3,"file":"chunks/app_components_breadcrumbs_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/breadcrumbs.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/crumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/divider.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport Link, {LinkProps} from 'sentry/components/links/link';\nimport {IconChevron} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\nimport BreadcrumbDropdown, {\n  BreadcrumbDropdownProps,\n} from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\n\nconst BreadcrumbList = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(1)} 0;\n`;\n\nexport interface Crumb {\n  /**\n   * Label of the crumb\n   */\n  label: React.ReactNode;\n\n  /**\n   * Component will try to come up with unique key, but you can provide your own\n   * (used when mapping over crumbs)\n   */\n  key?: string;\n\n  /**\n   * It will keep the page filter values (projects, environments, time) in the\n   * querystring when navigating (GlobalSelectionLink)\n   */\n  preservePageFilters?: boolean;\n\n  /**\n   * Link of the crumb\n   */\n  to?: LinkProps['to'] | null;\n}\n\nexport interface CrumbDropdown {\n  /**\n   * Items of the crumb dropdown\n   */\n  items: BreadcrumbDropdownProps['items'];\n\n  /**\n   * Name of the crumb\n   */\n  label: React.ReactNode;\n\n  /**\n   * Callback function for when an item is selected\n   */\n  onSelect: BreadcrumbDropdownProps['onSelect'];\n}\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Array of crumbs that will be rendered\n   */\n  crumbs: (Crumb | CrumbDropdown)[];\n\n  /**\n   * As a general rule of thumb we don't want the last item to be link as it most likely\n   * points to the same page we are currently on. This is by default false, so that\n   * people don't have to check if crumb is last in the array and then manually\n   * assign `to: null/undefined` when passing props to this component.\n   */\n  linkLastItem?: boolean;\n}\n\nfunction isCrumbDropdown(crumb: Crumb | CrumbDropdown): crumb is CrumbDropdown {\n  return (crumb as CrumbDropdown).items !== undefined;\n}\n\n/**\n * Page breadcrumbs used for navigation, not to be confused with sentry's event breadcrumbs\n */\nconst Breadcrumbs = ({crumbs, linkLastItem = false, ...props}: Props) => {\n  if (crumbs.length === 0) {\n    return null;\n  }\n\n  if (!linkLastItem) {\n    const lastCrumb = crumbs[crumbs.length - 1];\n    if (!isCrumbDropdown(lastCrumb)) {\n      lastCrumb.to = null;\n    }\n  }\n\n  return (\n    <BreadcrumbList {...props}>\n      {crumbs.map((crumb, index) => {\n        if (isCrumbDropdown(crumb)) {\n          const {label, ...crumbProps} = crumb;\n          return (\n            <BreadcrumbDropdown\n              key={index}\n              isLast={index >= crumbs.length - 1}\n              route={{}}\n              name={label}\n              {...crumbProps}\n            />\n          );\n        }\n        const {label, to, preservePageFilters, key} = crumb;\n        const labelKey = typeof label === 'string' ? label : '';\n        const mapKey =\n          key ?? typeof to === 'string' ? `${labelKey}${to}` : `${labelKey}${index}`;\n\n        return (\n          <Fragment key={mapKey}>\n            {to ? (\n              <BreadcrumbLink\n                to={to}\n                preservePageFilters={preservePageFilters}\n                data-test-id=\"breadcrumb-link\"\n              >\n                {label}\n              </BreadcrumbLink>\n            ) : (\n              <BreadcrumbItem>{label}</BreadcrumbItem>\n            )}\n\n            {index < crumbs.length - 1 && (\n              <BreadcrumbDividerIcon size=\"xs\" direction=\"right\" />\n            )}\n          </Fragment>\n        );\n      })}\n    </BreadcrumbList>\n  );\n};\n\nconst getBreadcrumbListItemStyles = (p: {theme: Theme}) => css`\n  ${p.theme.overflowEllipsis}\n  font-size: ${p.theme.fontSizeLarge};\n  color: ${p.theme.gray300};\n  width: auto;\n\n  &:last-child {\n    color: ${p.theme.textColor};\n  }\n`;\n\ninterface BreadcrumbLinkProps {\n  to: LinkProps['to'];\n  children?: React.ReactNode;\n  preservePageFilters?: boolean;\n}\n\nconst BreadcrumbLink = styled(\n  ({preservePageFilters, to, ...props}: BreadcrumbLinkProps) =>\n    preservePageFilters ? (\n      <GlobalSelectionLink to={to as LocationDescriptor} {...props} />\n    ) : (\n      <Link to={to} {...props} />\n    )\n)`\n  ${getBreadcrumbListItemStyles}\n\n  &:hover,\n  &:active {\n    color: ${p => p.theme.subText};\n  }\n`;\n\nconst BreadcrumbItem = styled('span')`\n  ${getBreadcrumbListItemStyles}\n  max-width: 400px;\n`;\n\nconst BreadcrumbDividerIcon = styled(IconChevron)`\n  color: ${p => p.theme.gray300};\n  margin: 0 ${space(1)};\n  flex-shrink: 0;\n`;\n\nexport default Breadcrumbs;\n","import {Component} from 'react';\n\nimport DropdownAutoCompleteMenu from 'sentry/components/dropdownAutoComplete/menu';\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport Crumb from 'sentry/views/settings/components/settingsBreadcrumb/crumb';\nimport Divider from 'sentry/views/settings/components/settingsBreadcrumb/divider';\n\nimport {RouteWithName} from './types';\n\nconst EXIT_DELAY = 0;\n\ninterface AdditionalDropdownProps\n  extends Pick<\n    React.ComponentProps<typeof DropdownAutoCompleteMenu>,\n    'onChange' | 'busyItemsStillVisible'\n  > {}\n\nexport interface BreadcrumbDropdownProps extends AdditionalDropdownProps {\n  items: Item[];\n  name: React.ReactNode;\n  onSelect: (item: Item) => void;\n  route: RouteWithName;\n  enterDelay?: number;\n  hasMenu?: boolean;\n  isLast?: boolean;\n}\n\ntype State = {\n  isOpen: boolean;\n};\n\nclass BreadcrumbDropdown extends Component<BreadcrumbDropdownProps, State> {\n  state: State = {\n    isOpen: false,\n  };\n\n  componentWillUnmount() {\n    window.clearTimeout(this.enteringTimeout);\n    window.clearTimeout(this.leavingTimeout);\n  }\n\n  enteringTimeout: number | undefined = undefined;\n  leavingTimeout: number | undefined = undefined;\n\n  open = () => {\n    this.setState({isOpen: true});\n  };\n\n  close = () => {\n    this.setState({isOpen: false});\n  };\n\n  handleStateChange = () => {};\n\n  // Adds a delay when mouse hovers on actor (in this case the breadcrumb)\n  handleMouseEnterActor = () => {\n    window.clearTimeout(this.leavingTimeout);\n    window.clearTimeout(this.enteringTimeout);\n\n    this.enteringTimeout = window.setTimeout(\n      () => this.open(),\n      this.props.enterDelay ?? 0\n    );\n  };\n\n  // handles mouseEnter event on actor and menu, should clear the leaving timeout and keep menu open\n  handleMouseEnter = () => {\n    window.clearTimeout(this.leavingTimeout);\n    window.clearTimeout(this.enteringTimeout);\n    this.open();\n  };\n\n  // handles mouseLeave event on actor and menu, adds a timeout before updating state to account for\n  // mouseLeave into\n  handleMouseLeave = () => {\n    window.clearTimeout(this.enteringTimeout);\n    this.leavingTimeout = window.setTimeout(() => this.close(), EXIT_DELAY);\n  };\n\n  // Close immediately when actor is clicked clicked\n  handleClickActor = () => {\n    this.close();\n  };\n\n  // Close immediately when clicked outside\n  handleClose = () => {\n    this.close();\n  };\n\n  render() {\n    const {hasMenu, route, isLast, name, items, onSelect, ...dropdownProps} = this.props;\n\n    return (\n      <DropdownAutoCompleteMenu\n        blendCorner={false}\n        onOpen={this.handleMouseEnter}\n        onClose={this.close}\n        isOpen={this.state.isOpen}\n        menuProps={{\n          onMouseEnter: this.handleMouseEnter,\n          onMouseLeave: this.handleMouseLeave,\n        }}\n        items={items}\n        onSelect={onSelect}\n        virtualizedHeight={41}\n        {...dropdownProps}\n      >\n        {({getActorProps, actions, isOpen}) => (\n          <Crumb\n            {...getActorProps({\n              onClick: this.handleClickActor.bind(this, actions),\n              onMouseEnter: this.handleMouseEnterActor.bind(this, actions),\n              onMouseLeave: this.handleMouseLeave.bind(this, actions),\n            })}\n          >\n            <span>{name || route.name} </span>\n            <Divider isHover={hasMenu && isOpen} isLast={isLast} />\n          </Crumb>\n        )}\n      </DropdownAutoCompleteMenu>\n    );\n  }\n}\n\nexport default BreadcrumbDropdown;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst Crumb = styled('div')`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-size: 18px;\n  color: ${p => p.theme.subText};\n  padding-right: ${space(1)};\n  cursor: pointer;\n  white-space: nowrap;\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default Crumb;\n","import styled from '@emotion/styled';\n\nimport {IconChevron} from 'sentry/icons';\n\ntype Props = {\n  isHover?: boolean;\n  isLast?: boolean;\n};\n\nconst Divider = ({isHover, isLast}: Props) =>\n  isLast ? null : (\n    <StyledDivider>\n      <StyledIconChevron direction={isHover ? 'down' : 'right'} size=\"14px\" />\n    </StyledDivider>\n  );\n\nconst StyledIconChevron = styled(IconChevron)`\n  display: block;\n`;\n\nconst StyledDivider = styled('span')`\n  display: inline-block;\n  margin-left: 6px;\n  color: ${p => p.theme.gray200};\n  position: relative;\n`;\n\nexport default Divider;\n"],"names":["Fragment","css","GlobalSelectionLink","Link","IconChevron","space","BreadcrumbDropdown","BreadcrumbList","isCrumbDropdown","crumb","items","undefined","Breadcrumbs","crumbs","linkLastItem","props","length","lastCrumb","to","map","index","label","crumbProps","preservePageFilters","key","labelKey","mapKey","getBreadcrumbListItemStyles","p","theme","overflowEllipsis","fontSizeLarge","gray300","textColor","BreadcrumbLink","subText","BreadcrumbItem","BreadcrumbDividerIcon","Component","DropdownAutoCompleteMenu","Crumb","Divider","EXIT_DELAY","isOpen","setState","window","clearTimeout","leavingTimeout","enteringTimeout","setTimeout","open","enterDelay","close","componentWillUnmount","render","hasMenu","route","isLast","name","onSelect","dropdownProps","handleMouseEnter","state","onMouseEnter","onMouseLeave","handleMouseLeave","getActorProps","actions","onClick","handleClickActor","bind","handleMouseEnterActor","isHover","StyledIconChevron","StyledDivider","gray200"],"sourceRoot":""}