{"version":3,"file":"chunks/app_views_settings_account_accountEmails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountEmails.tsx"],"sourcesContent":["import {JsonFormObject} from 'sentry/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Add Secondary Emails',\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Additional Email',\n        placeholder: 'e.g. secondary@example.com',\n        help: 'Designate an alternative email for this account',\n        showReturnButton: true,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {RequestOptions} from 'sentry/api';\nimport AlertLink from 'sentry/components/alertLink';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Tag from 'sentry/components/tag';\nimport accountEmailsFields from 'sentry/data/forms/accountEmails';\nimport {IconDelete, IconStack} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {UserEmail} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/emails/';\n\ntype Props = AsyncView['props'];\n\ntype State = AsyncView['state'] & {\n  emails: UserEmail[];\n};\n\nclass AccountEmails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Emails');\n  }\n\n  getEndpoints() {\n    return [];\n  }\n\n  handleSubmitSuccess: Form['props']['onSubmitSuccess'] = (_change, model, id) => {\n    if (id === undefined) {\n      return;\n    }\n    model.setValue(id, '');\n    this.remountComponent();\n  };\n\n  renderBody() {\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Email Addresses')} />\n        <EmailAddresses />\n        <Form\n          apiMethod=\"POST\"\n          apiEndpoint={ENDPOINT}\n          saveOnBlur\n          allowUndo={false}\n          onSubmitSuccess={this.handleSubmitSuccess}\n        >\n          <JsonForm forms={accountEmailsFields} />\n        </Form>\n\n        <AlertLink to=\"/settings/account/notifications\" icon={<IconStack />}>\n          {t('Want to change how many emails you get? Use the notifications panel.')}\n        </AlertLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default AccountEmails;\n\nexport class EmailAddresses extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['emails', ENDPOINT]];\n  }\n  doApiCall(endpoint: string, requestParams: RequestOptions) {\n    this.setState({loading: true, emails: []}, () =>\n      this.api\n        .requestPromise(endpoint, requestParams)\n        .then(() => this.remountComponent())\n        .catch(err => {\n          this.remountComponent();\n\n          if (err?.responseJSON?.email) {\n            addErrorMessage(err.responseJSON.email);\n          }\n        })\n    );\n  }\n  handleSetPrimary = (email: string) =>\n    this.doApiCall(ENDPOINT, {\n      method: 'PUT',\n      data: {email},\n    });\n\n  handleRemove = (email: string) =>\n    this.doApiCall(ENDPOINT, {\n      method: 'DELETE',\n      data: {email},\n    });\n\n  handleVerify = (email: string) =>\n    this.doApiCall(`${ENDPOINT}confirm/`, {\n      method: 'POST',\n      data: {email},\n    });\n\n  render() {\n    const {emails, loading} = this.state;\n    const primary = emails?.find(({isPrimary}) => isPrimary);\n    const secondary = emails?.filter(({isPrimary}) => !isPrimary);\n\n    if (loading) {\n      return (\n        <Panel>\n          <PanelHeader>{t('Email Addresses')}</PanelHeader>\n          <PanelBody>\n            <LoadingIndicator />\n          </PanelBody>\n        </Panel>\n      );\n    }\n    return (\n      <Panel>\n        <PanelHeader>{t('Email Addresses')}</PanelHeader>\n        <PanelBody>\n          {primary && (\n            <EmailRow\n              onRemove={this.handleRemove}\n              onVerify={this.handleVerify}\n              {...primary}\n            />\n          )}\n\n          {secondary?.map(emailObj => (\n            <EmailRow\n              key={emailObj.email}\n              onSetPrimary={this.handleSetPrimary}\n              onRemove={this.handleRemove}\n              onVerify={this.handleVerify}\n              {...emailObj}\n            />\n          ))}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype EmailRowProps = {\n  email: string;\n  onRemove: (email: string, e: React.MouseEvent) => void;\n  onVerify: (email: string, e: React.MouseEvent) => void;\n  hideRemove?: boolean;\n  isPrimary?: boolean;\n  isVerified?: boolean;\n  onSetPrimary?: (email: string, e: React.MouseEvent) => void;\n};\n\nconst EmailRow = ({\n  email,\n  onRemove,\n  onVerify,\n  onSetPrimary,\n  isVerified,\n  isPrimary,\n  hideRemove,\n}: EmailRowProps) => (\n  <EmailItem>\n    <EmailTags>\n      {email}\n      {!isVerified && <Tag type=\"warning\">{t('Unverified')}</Tag>}\n      {isPrimary && <Tag type=\"success\">{t('Primary')}</Tag>}\n    </EmailTags>\n    <ButtonBar gap={1}>\n      {!isPrimary && isVerified && (\n        <Button size=\"sm\" onClick={e => onSetPrimary?.(email, e)}>\n          {t('Set as primary')}\n        </Button>\n      )}\n      {!isVerified && (\n        <Button size=\"sm\" onClick={e => onVerify(email, e)}>\n          {t('Resend verification')}\n        </Button>\n      )}\n      {!hideRemove && !isPrimary && (\n        <Button\n          aria-label={t('Remove email')}\n          data-test-id=\"remove\"\n          priority=\"danger\"\n          size=\"sm\"\n          icon={<IconDelete />}\n          onClick={e => onRemove(email, e)}\n        />\n      )}\n    </ButtonBar>\n  </EmailItem>\n);\n\nconst EmailTags = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  align-items: center;\n`;\n\nconst EmailItem = styled(PanelItem)`\n  justify-content: space-between;\n`;\n"],"names":["route","formGroups","title","fields","name","type","label","placeholder","help","showReturnButton","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Fragment","addErrorMessage","AlertLink","Button","ButtonBar","Form","JsonForm","LoadingIndicator","Panel","PanelBody","PanelHeader","PanelItem","Tag","accountEmailsFields","IconDelete","IconStack","t","space","SettingsPageHeader","ENDPOINT","AccountEmails","_change","model","id","undefined","setValue","remountComponent","getEndpoints","renderBody","handleSubmitSuccess","EmailAddresses","email","doApiCall","method","data","endpoint","requestParams","setState","loading","emails","api","requestPromise","then","catch","err","responseJSON","state","primary","find","isPrimary","secondary","filter","handleRemove","handleVerify","map","emailObj","handleSetPrimary","EmailRow","onRemove","onVerify","onSetPrimary","isVerified","hideRemove","e","EmailTags","EmailItem"],"sourceRoot":""}