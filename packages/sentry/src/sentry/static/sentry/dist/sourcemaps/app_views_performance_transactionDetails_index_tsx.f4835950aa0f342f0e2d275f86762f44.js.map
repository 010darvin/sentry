{"version":3,"file":"chunks/app_views_performance_transactionDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/eventMetadata.tsx","webpack:///./app/components/events/rootSpanStatus.tsx","webpack:///./app/components/pageAlertBar.tsx","webpack:///./app/utils/profiling/routes.tsx","webpack:///./app/views/performance/transactionDetails/content.tsx","webpack:///./app/views/performance/transactionDetails/finishSetupAlert.tsx","webpack:///./app/views/performance/transactionDetails/index.tsx","webpack:///./app/views/performance/transactionDetails/transactionToProfileButton.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport DateTime from 'sentry/components/dateTime';\nimport FileSize from 'sentry/components/fileSize';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {OrganizationSummary} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport Projects from 'sentry/utils/projects';\n\ntype Props = {\n  event: Event;\n  organization: OrganizationSummary;\n  projectId: string;\n};\n\n/**\n * Render metadata about the event and provide a link to the JSON blob.\n * Used in the sidebar of performance event details and discover2 event details.\n */\nfunction EventMetadata({event, organization, projectId}: Props) {\n  const eventJsonUrl = `/api/0/projects/${organization.slug}/${projectId}/events/${event.eventID}/json/`;\n\n  return (\n    <MetaDataID>\n      <SectionHeading>{t('Event ID')}</SectionHeading>\n      <MetadataContainer data-test-id=\"event-id\">{event.eventID}</MetadataContainer>\n      <MetadataContainer>\n        <DateTime\n          date={getDynamicText({\n            value: event.dateCreated || (event.endTimestamp || 0) * 1000,\n            fixed: 'Dummy timestamp',\n          })}\n        />\n      </MetadataContainer>\n      <Projects orgId={organization.slug} slugs={[projectId]}>\n        {({projects}) => {\n          const project = projects.find(p => p.slug === projectId);\n          return (\n            <StyledProjectBadge\n              project={project ? project : {slug: projectId}}\n              avatarSize={16}\n            />\n          );\n        }}\n      </Projects>\n      <MetadataJSON href={eventJsonUrl} className=\"json-link\">\n        {t('Preview JSON')} (<FileSize bytes={event.size} />)\n      </MetadataJSON>\n    </MetaDataID>\n  );\n}\n\nconst MetaDataID = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst MetadataContainer = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst MetadataJSON = styled(ExternalLink)`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StyledProjectBadge = styled(ProjectBadge)`\n  margin-bottom: ${space(2)};\n`;\n\nexport default EventMetadata;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport {TraceContextType} from 'sentry/components/events/interfaces/spans/types';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Event, EventTransaction} from 'sentry/types/event';\n\ntype Props = {\n  event: Event;\n};\n\nclass RootSpanStatus extends Component<Props> {\n  getTransactionEvent(): EventTransaction | undefined {\n    const {event} = this.props;\n\n    if (event.type === 'transaction') {\n      return event as EventTransaction;\n    }\n\n    return undefined;\n  }\n\n  getRootSpanStatus(): string {\n    const event = this.getTransactionEvent();\n\n    const DEFAULT = '\\u2014';\n\n    if (!event) {\n      return DEFAULT;\n    }\n\n    const traceContext: TraceContextType | undefined = event?.contexts?.trace;\n\n    return traceContext?.status ?? DEFAULT;\n  }\n\n  getHttpStatusCode(): string {\n    const {event} = this.props;\n\n    const {tags} = event;\n\n    if (!Array.isArray(tags)) {\n      return '';\n    }\n\n    const tag = tags.find(tagObject => tagObject.key === 'http.status_code');\n\n    if (!tag) {\n      return '';\n    }\n\n    return tag.value;\n  }\n\n  render() {\n    const event = this.getTransactionEvent();\n\n    if (!event) {\n      return null;\n    }\n\n    const label = `${this.getHttpStatusCode()} ${this.getRootSpanStatus()}`.trim();\n\n    return (\n      <Container>\n        <Header>\n          <SectionHeading>{t('Status')}</SectionHeading>\n        </Header>\n        <div>{label}</div>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-bottom: ${space(4)};\n`;\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport default RootSpanStatus;\n","import styled from '@emotion/styled';\n\nconst PageAlertBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${p => p.theme.headerBackground};\n  background-color: ${p => p.theme.bannerBackground};\n  padding: 6px 30px;\n  font-size: 14px;\n`;\n\nexport default PageAlertBar;\n","import {Location, LocationDescriptor, Path} from 'history';\n\nimport {Organization, Project} from 'sentry/types';\nimport {Trace} from 'sentry/types/profiling/core';\n\nexport function generateProfilingRoute({orgSlug}: {orgSlug: Organization['slug']}): Path {\n  return `/organizations/${orgSlug}/profiling/`;\n}\n\nexport function generateProfileSummaryRoute({\n  orgSlug,\n  projectSlug,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n}): Path {\n  return `/organizations/${orgSlug}/profiling/summary/${projectSlug}/`;\n}\n\nexport function generateProfileFlamechartRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/flamechart/`;\n}\n\nexport function generateProfileDetailsRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/details/`;\n}\n\nexport function generateProfilingRouteWithQuery({\n  location,\n  orgSlug,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  location?: Location;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfilingRoute({orgSlug});\n  return {\n    pathname,\n    query: {\n      ...location?.query,\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileSummaryRouteWithQuery({\n  location,\n  orgSlug,\n  projectSlug,\n  transaction,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  transaction: string;\n  location?: Location;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileSummaryRoute({orgSlug, projectSlug});\n  return {\n    pathname,\n    query: {\n      ...location?.query,\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function generateProfileFlamechartRouteWithQuery({\n  location,\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  location?: Location;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileFlamechartRoute({\n    orgSlug,\n    projectSlug,\n    profileId,\n  });\n  return {\n    pathname,\n    query: {\n      ...location?.query,\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileDetailsRouteWithQuery({\n  location,\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  location?: Location;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileDetailsRoute({orgSlug, projectSlug, profileId});\n  return {\n    pathname,\n    query: {\n      ...location?.query,\n      ...query,\n    },\n  };\n}\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport NotFound from 'sentry/components/errors/notFound';\nimport EventCustomPerformanceMetrics from 'sentry/components/events/eventCustomPerformanceMetrics';\nimport {BorderlessEventEntries} from 'sentry/components/events/eventEntries';\nimport EventMetadata from 'sentry/components/events/eventMetadata';\nimport EventVitals from 'sentry/components/events/eventVitals';\nimport * as SpanEntryContext from 'sentry/components/events/interfaces/spans/context';\nimport RootSpanStatus from 'sentry/components/events/rootSpanStatus';\nimport FileSize from 'sentry/components/fileSize';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {TagsTable} from 'sentry/components/tagsTable';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {Event, EventTag} from 'sentry/types/event';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {formatTagKey} from 'sentry/utils/discover/fields';\nimport {QuickTraceContext} from 'sentry/utils/performance/quickTrace/quickTraceContext';\nimport QuickTraceQuery from 'sentry/utils/performance/quickTrace/quickTraceQuery';\nimport TraceMetaQuery from 'sentry/utils/performance/quickTrace/traceMetaQuery';\nimport {getTraceTimeRangeFromEvent} from 'sentry/utils/performance/quickTrace/utils';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport Projects from 'sentry/utils/projects';\nimport {appendTagCondition, decodeScalar} from 'sentry/utils/queryString';\nimport Breadcrumb from 'sentry/views/performance/breadcrumb';\n\nimport {transactionSummaryRouteWithQuery} from '../transactionSummary/utils';\nimport {getSelectedProjectPlatforms} from '../utils';\n\nimport EventMetas from './eventMetas';\nimport FinishSetupAlert from './finishSetupAlert';\nimport {TransactionToProfileButton} from './transactionToProfileButton';\n\ntype Props = Pick<\n  RouteComponentProps<{eventSlug: string}, {}>,\n  'params' | 'location' | 'router' | 'route'\n> & {\n  eventSlug: string;\n  organization: Organization;\n  projects: Project[];\n};\n\ntype State = {\n  event: Event | undefined;\n  isSidebarVisible: boolean;\n} & AsyncComponent['state'];\n\nclass EventDetailsContent extends AsyncComponent<Props, State> {\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: {},\n    event: undefined,\n\n    // local state\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar = () => {\n    this.setState({isSidebarVisible: !this.state.isSidebarVisible});\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params} = this.props;\n    const {eventSlug} = params;\n\n    const url = `/organizations/${organization.slug}/events/${eventSlug}/`;\n\n    return [['event', url]];\n  }\n\n  get projectId() {\n    return this.props.eventSlug.split(':')[0];\n  }\n\n  generateTagUrl = (tag: EventTag) => {\n    const {location, organization} = this.props;\n    const {event} = this.state;\n    if (!event) {\n      return '';\n    }\n    const query = decodeScalar(location.query.query, '');\n    const newQuery = {\n      ...location.query,\n      query: appendTagCondition(query, formatTagKey(tag.key), tag.value),\n    };\n    return transactionSummaryRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: event.title,\n      projectID: event.projectID,\n      query: newQuery,\n    });\n  };\n\n  renderBody() {\n    const {event} = this.state;\n    const {organization} = this.props;\n\n    if (!event) {\n      return <NotFound />;\n    }\n    const isSampleTransaction = event.tags.some(\n      tag => tag.key === 'sample_event' && tag.value === 'yes'\n    );\n\n    return (\n      <Fragment>\n        {isSampleTransaction && (\n          <FinishSetupAlert organization={organization} projectId={this.projectId} />\n        )}\n        {this.renderContent(event)}\n      </Fragment>\n    );\n  }\n\n  renderContent(event: Event) {\n    const {organization, location, eventSlug, route, router, projects} = this.props;\n\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'performance.event_details',\n      eventName: 'Performance: Opened Event Details',\n      event_type: event.type,\n      organization_id: parseInt(organization.id, 10),\n      project_platforms: getSelectedProjectPlatforms(location, projects),\n    });\n\n    const {isSidebarVisible} = this.state;\n    const transactionName = event.title;\n    const query = decodeScalar(location.query.query, '');\n\n    const eventJsonUrl = `/api/0/projects/${organization.slug}/${this.projectId}/events/${event.eventID}/json/`;\n    const traceId = event.contexts?.trace?.trace_id ?? '';\n    const {start, end} = getTraceTimeRangeFromEvent(event);\n\n    const hasProfilingFeature = organization.features.includes('profiling');\n\n    return (\n      <TraceMetaQuery\n        location={location}\n        orgSlug={organization.slug}\n        traceId={traceId}\n        start={start}\n        end={end}\n      >\n        {metaResults => (\n          <QuickTraceQuery event={event} location={location} orgSlug={organization.slug}>\n            {results => (\n              <Fragment>\n                <Layout.Header>\n                  <Layout.HeaderContent>\n                    <Breadcrumb\n                      organization={organization}\n                      location={location}\n                      transaction={{\n                        project: event.projectID,\n                        name: transactionName,\n                      }}\n                      eventSlug={eventSlug}\n                    />\n                    <Layout.Title data-test-id=\"event-header\">{event.title}</Layout.Title>\n                  </Layout.HeaderContent>\n                  <Layout.HeaderActions>\n                    <ButtonBar gap={1}>\n                      <Button onClick={this.toggleSidebar}>\n                        {isSidebarVisible ? 'Hide Details' : 'Show Details'}\n                      </Button>\n                      {results && (\n                        <Button icon={<IconOpen />} href={eventJsonUrl} external>\n                          {t('JSON')} (<FileSize bytes={event.size} />)\n                        </Button>\n                      )}\n                      {hasProfilingFeature && (\n                        <TransactionToProfileButton\n                          orgId={organization.slug}\n                          projectId={this.projectId}\n                          transactionId={event.eventID}\n                        />\n                      )}\n                    </ButtonBar>\n                  </Layout.HeaderActions>\n                </Layout.Header>\n                <Layout.Body>\n                  {results && (\n                    <Layout.Main fullWidth>\n                      <EventMetas\n                        quickTrace={results}\n                        meta={metaResults?.meta ?? null}\n                        event={event}\n                        organization={organization}\n                        projectId={this.projectId}\n                        location={location}\n                        errorDest=\"issue\"\n                        transactionDest=\"performance\"\n                      />\n                    </Layout.Main>\n                  )}\n                  <Layout.Main fullWidth={!isSidebarVisible}>\n                    <Projects orgId={organization.slug} slugs={[this.projectId]}>\n                      {({projects: _projects}) => (\n                        <SpanEntryContext.Provider\n                          value={{\n                            getViewChildTransactionTarget: childTransactionProps => {\n                              return getTransactionDetailsUrl(\n                                organization.slug,\n                                childTransactionProps.eventSlug,\n                                childTransactionProps.transaction,\n                                location.query\n                              );\n                            },\n                          }}\n                        >\n                          <QuickTraceContext.Provider value={results}>\n                            <BorderlessEventEntries\n                              organization={organization}\n                              event={event}\n                              project={_projects[0] as Project}\n                              showExampleCommit={false}\n                              showTagSummary={false}\n                              location={location}\n                              api={this.api}\n                              router={router}\n                              route={route}\n                            />\n                          </QuickTraceContext.Provider>\n                        </SpanEntryContext.Provider>\n                      )}\n                    </Projects>\n                  </Layout.Main>\n                  {isSidebarVisible && (\n                    <Layout.Side>\n                      {results === undefined && (\n                        <Fragment>\n                          <EventMetadata\n                            event={event}\n                            organization={organization}\n                            projectId={this.projectId}\n                          />\n                          <RootSpanStatus event={event} />\n                        </Fragment>\n                      )}\n                      <EventVitals event={event} />\n                      {(organization.features.includes('dashboards-mep') ||\n                        organization.features.includes('mep-rollout-flag')) && (\n                        <EventCustomPerformanceMetrics\n                          event={event}\n                          location={location}\n                          organization={organization}\n                        />\n                      )}\n                      <TagsTable\n                        event={event}\n                        query={query}\n                        generateUrl={this.generateTagUrl}\n                      />\n                    </Layout.Side>\n                  )}\n                </Layout.Body>\n              </Fragment>\n            )}\n          </QuickTraceQuery>\n        )}\n      </TraceMetaQuery>\n    );\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    const permissionDenied = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n    if (permissionDenied) {\n      return (\n        <LoadingError message={t('You do not have permission to view that event.')} />\n      );\n    }\n\n    return super.renderError(error, true);\n  }\n\n  renderComponent() {\n    const {organization} = this.props;\n\n    return (\n      <SentryDocumentTitle\n        title={t('Performance - Event Details')}\n        orgSlug={organization.slug}\n      >\n        {super.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default EventDetailsContent;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport PageAlertBar from 'sentry/components/pageAlertBar';\nimport {IconLightning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\nexport default function FinishSetupAlert({\n  organization,\n  projectId,\n}: {\n  organization: Organization;\n  projectId: string;\n}) {\n  return (\n    <PageAlertBar>\n      <IconLightning />\n      <TextWrapper>\n        {t(\n          'You are viewing a sample transaction. Configure performance to start viewing real transactions.'\n        )}\n      </TextWrapper>\n      <Button\n        size=\"xs\"\n        priority=\"primary\"\n        external\n        href=\"https://docs.sentry.io/performance-monitoring/getting-started/\"\n        onClick={() =>\n          trackAdvancedAnalyticsEvent('growth.sample_transaction_docs_link_clicked', {\n            project_id: projectId,\n            organization,\n          })\n        }\n      >\n        {t('Get Started')}\n      </Button>\n    </PageAlertBar>\n  );\n}\n\nconst TextWrapper = styled('span')`\n  margin: 0 ${space(1)};\n`;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization} from 'sentry/types';\nimport useProjects from 'sentry/utils/useProjects';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport EventDetailsContent from './content';\n\ntype Props = RouteComponentProps<{eventSlug: string}, {}> & {\n  organization: Organization;\n};\n\nfunction EventDetails(props: Props) {\n  const {projects} = useProjects();\n\n  const getEventSlug = (): string => {\n    const {eventSlug} = props.params;\n    return typeof eventSlug === 'string' ? eventSlug.trim() : '';\n  };\n\n  const {organization, location, params, router, route} = props;\n  const documentTitle = t('Performance Details');\n  const eventSlug = getEventSlug();\n  const projectSlug = eventSlug.split(':')[0];\n\n  return (\n    <SentryDocumentTitle\n      title={documentTitle}\n      orgSlug={organization.slug}\n      projectSlug={projectSlug}\n    >\n      <StyledPageContent>\n        <NoProjectMessage organization={organization}>\n          <EventDetailsContent\n            organization={organization}\n            location={location}\n            params={params}\n            eventSlug={eventSlug}\n            router={router}\n            route={route}\n            projects={projects}\n          />\n        </NoProjectMessage>\n      </StyledPageContent>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withOrganization(EventDetails);\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n","import {useEffect, useState} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {RequestState} from 'sentry/types/core';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {generateProfileFlamechartRoute} from 'sentry/utils/profiling/routes';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ninterface Props {\n  orgId: string;\n  projectId: string;\n  transactionId: string;\n}\n\nfunction TransactionToProfileButton({transactionId, orgId, projectId}: Props) {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const [profileIdState, setProfileIdState] = useState<RequestState<string>>({\n    type: 'initial',\n  });\n\n  useEffect(() => {\n    fetchProfileId(api, transactionId, orgId, projectId)\n      .then((profileId: ProfileId) => {\n        setProfileIdState({type: 'resolved', data: profileId.profile_id});\n      })\n      .catch(err => {\n        // If there isn't a matching profile, we get a 404. No need to raise an error\n        // in this case, but we should otherwise.\n        if (err.status !== 404) {\n          Sentry.captureException(err);\n        }\n      });\n  }, [api, transactionId, orgId, projectId]);\n\n  if (profileIdState.type !== 'resolved') {\n    return null;\n  }\n\n  function handleGoToProfile() {\n    trackAdvancedAnalyticsEvent('profiling_views.go_to_flamegraph', {\n      organization,\n      source: 'transaction_details',\n    });\n  }\n\n  const target = generateProfileFlamechartRoute({\n    orgSlug: orgId,\n    projectSlug: projectId,\n    profileId: profileIdState.data,\n  });\n\n  return (\n    <Button onClick={handleGoToProfile} to={target}>\n      {t('Go to Profile')}\n    </Button>\n  );\n}\n\ntype ProfileId = {\n  profile_id: string;\n};\n\nfunction fetchProfileId(\n  api: Client,\n  transactionId: string,\n  orgId: string,\n  projectId: string\n): Promise<ProfileId> {\n  return api.requestPromise(\n    `/projects/${orgId}/${projectId}/profiling/transactions/${transactionId}/`,\n    {\n      method: 'GET',\n    }\n  );\n}\n\nexport {TransactionToProfileButton};\n"],"names":["SectionHeading","DateTime","FileSize","ProjectBadge","ExternalLink","t","space","getDynamicText","Projects","EventMetadata","event","organization","projectId","eventJsonUrl","slug","eventID","value","dateCreated","endTimestamp","fixed","projects","project","find","p","size","MetaDataID","MetadataContainer","theme","fontSizeMedium","MetadataJSON","StyledProjectBadge","Component","RootSpanStatus","getTransactionEvent","props","type","undefined","getRootSpanStatus","DEFAULT","traceContext","contexts","trace","status","getHttpStatusCode","tags","Array","isArray","tag","tagObject","key","render","label","trim","Container","subText","Header","PageAlertBar","headerBackground","bannerBackground","generateProfilingRoute","orgSlug","generateProfileSummaryRoute","projectSlug","generateProfileFlamechartRoute","profileId","generateProfileDetailsRoute","generateProfilingRouteWithQuery","location","query","pathname","generateProfileSummaryRouteWithQuery","transaction","generateProfileFlamechartRouteWithQuery","generateProfileDetailsRouteWithQuery","Fragment","AsyncComponent","Button","ButtonBar","NotFound","EventCustomPerformanceMetrics","BorderlessEventEntries","EventVitals","SpanEntryContext","Layout","LoadingError","SentryDocumentTitle","TagsTable","IconOpen","trackAnalyticsEvent","formatTagKey","QuickTraceContext","QuickTraceQuery","TraceMetaQuery","getTraceTimeRangeFromEvent","getTransactionDetailsUrl","appendTagCondition","decodeScalar","Breadcrumb","transactionSummaryRouteWithQuery","getSelectedProjectPlatforms","EventMetas","FinishSetupAlert","TransactionToProfileButton","EventDetailsContent","loading","reloading","error","errors","isSidebarVisible","setState","state","newQuery","title","projectID","getEndpoints","params","eventSlug","url","split","renderBody","isSampleTransaction","some","renderContent","route","router","eventKey","eventName","event_type","organization_id","parseInt","id","project_platforms","transactionName","traceId","trace_id","start","end","hasProfilingFeature","features","includes","metaResults","results","name","toggleSidebar","meta","_projects","getViewChildTransactionTarget","childTransactionProps","api","generateTagUrl","renderError","notFound","Object","values","resp","permissionDenied","renderComponent","IconLightning","trackAdvancedAnalyticsEvent","project_id","TextWrapper","NoProjectMessage","PageContent","useProjects","withOrganization","EventDetails","getEventSlug","documentTitle","StyledPageContent","useEffect","useState","Sentry","useApi","useOrganization","transactionId","orgId","profileIdState","setProfileIdState","fetchProfileId","then","data","profile_id","catch","err","captureException","handleGoToProfile","source","target","requestPromise","method"],"sourceRoot":""}