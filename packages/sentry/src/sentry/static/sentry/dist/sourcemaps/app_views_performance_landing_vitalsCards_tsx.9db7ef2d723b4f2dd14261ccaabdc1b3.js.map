{"version":3,"file":"chunks/app_views_performance_landing_vitalsCards_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/sparklines/index.tsx","webpack:///./app/components/sparklines/line.tsx","webpack:///./app/utils/performance/vitals/vitalsCardsDiscoverQuery.tsx","webpack:///./app/views/performance/landing/vitalsCards.tsx","webpack:///./app/views/performance/vitalDetail/colorBar.tsx","webpack:///./app/views/performance/vitalDetail/vitalPercents.tsx"],"sourcesContent":["import {Sparklines} from 'react-sparklines';\nimport * as PropTypes from 'prop-types';\n\n/**\n * This is required because:\n *\n * - React.Suspense only works with default exports\n * - typescript complains that the library's `propTypes` does not\n * have `children defined.\n * - typescript also won't let us access `Sparklines.propTypes`\n */\nexport default class SparklinesWithCustomPropTypes extends Sparklines {\n  static propTypes = {\n    children: PropTypes.node,\n    data: PropTypes.array,\n    limit: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    svgWidth: PropTypes.number,\n    svgHeight: PropTypes.number,\n    preserveAspectRatio: PropTypes.string,\n    margin: PropTypes.number,\n    style: PropTypes.object,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    onMouseMove: PropTypes.func,\n  };\n}\n","// Need to re-export this as default because React.Suspense does not support\n// named exports, only default\nexport {SparklinesLine as default} from 'react-sparklines';\n","import pick from 'lodash/pick';\n\nimport {MetaType} from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryPropsWithContext,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {WebVital} from 'sentry/utils/fields';\nimport {PERFORMANCE_URL_PARAM} from 'sentry/utils/performance/constants';\nimport withApi from 'sentry/utils/withApi';\n\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\nexport type VitalData = {\n  good: number;\n  meh: number;\n  p75: number | null;\n  poor: number;\n  total: number;\n};\n\nexport type VitalsData = Record<string, VitalData>;\n\ntype VitalsProps = {\n  vitals: WebVital[];\n};\n\ntype RequestProps = DiscoverQueryPropsWithContext & VitalsProps;\n\ntype ChildrenProps = Omit<GenericChildrenProps<VitalsProps>, 'tableData'> & {\n  vitalsData: VitalsData | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getRequestPayload(props: RequestProps) {\n  const {eventView, vitals} = props;\n  const apiPayload = eventView?.getEventsAPIPayload(props.location);\n  return {\n    vital: vitals,\n    ...pick(apiPayload, ['query', ...Object.values(PERFORMANCE_URL_PARAM)]),\n  };\n}\n\nfunction VitalsCardsDiscoverQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<VitalsData, VitalsProps>\n      getRequestPayload={getRequestPayload}\n      route=\"events-vitals\"\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({vitalsData: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(VitalsCardsDiscoverQuery);\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport {Location} from 'history';\n\nimport Card from 'sentry/components/card';\nimport EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {HeaderTitle} from 'sentry/components/charts/styles';\nimport {getInterval} from 'sentry/components/charts/utils';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport Sparklines from 'sentry/components/sparklines';\nimport SparklinesLine from 'sentry/components/sparklines/line';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  Column,\n  generateFieldAsString,\n  getAggregateAlias,\n} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport VitalsCardsDiscoverQuery, {\n  VitalData,\n  VitalsData,\n} from 'sentry/utils/performance/vitals/vitalsCardsDiscoverQuery';\nimport {decodeList} from 'sentry/utils/queryString';\nimport theme from 'sentry/utils/theme';\nimport useApi from 'sentry/utils/useApi';\n\nimport ColorBar from '../vitalDetail/colorBar';\nimport {\n  vitalAbbreviations,\n  vitalDetailRouteWithQuery,\n  vitalMap,\n  VitalState,\n  vitalStateColors,\n} from '../vitalDetail/utils';\nimport VitalPercents from '../vitalDetail/vitalPercents';\n\nimport {\n  getDefaultDisplayFieldForPlatform,\n  LandingDisplayField,\n  vitalCardDetails,\n} from './utils';\n\ntype FrontendCardsProps = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  frontendOnly?: boolean;\n};\n\nexport function FrontendCards(props: FrontendCardsProps) {\n  const {eventView, location, organization, projects, frontendOnly = false} = props;\n\n  if (frontendOnly) {\n    const defaultDisplay = getDefaultDisplayFieldForPlatform(projects, eventView);\n    const isFrontend = defaultDisplay === LandingDisplayField.FRONTEND_PAGELOAD;\n\n    if (!isFrontend) {\n      return null;\n    }\n  }\n\n  const vitals = [WebVital.FCP, WebVital.LCP, WebVital.FID, WebVital.CLS];\n\n  return (\n    <VitalsCardsDiscoverQuery\n      eventView={eventView}\n      location={location}\n      orgSlug={organization.slug}\n      vitals={vitals}\n    >\n      {({isLoading, vitalsData}) => {\n        return (\n          <VitalsContainer>\n            {vitals.map(vital => {\n              const target = vitalDetailRouteWithQuery({\n                orgSlug: organization.slug,\n                query: eventView.generateQueryStringObject(),\n                vitalName: vital,\n                projectID: decodeList(location.query.project),\n              });\n\n              const value = isLoading\n                ? '\\u2014'\n                : getP75(vitalsData?.[vital] ?? null, vital);\n              const chart = (\n                <VitalBarContainer>\n                  <VitalBar isLoading={isLoading} vital={vital} data={vitalsData} />\n                </VitalBarContainer>\n              );\n\n              return (\n                <Link\n                  key={vital}\n                  to={target}\n                  data-test-id={`vitals-linked-card-${vitalAbbreviations[vital]}`}\n                >\n                  <VitalCard\n                    title={vitalMap[vital] ?? ''}\n                    tooltip={WEB_VITAL_DETAILS[vital].description ?? ''}\n                    value={isLoading ? '\\u2014' : value}\n                    chart={chart}\n                    minHeight={150}\n                  />\n                </Link>\n              );\n            })}\n          </VitalsContainer>\n        );\n      }}\n    </VitalsCardsDiscoverQuery>\n  );\n}\n\nconst VitalBarContainer = styled('div')`\n  margin-top: ${space(1.5)};\n`;\n\ntype BaseCardsProps = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n};\n\ntype GenericCardsProps = BaseCardsProps & {\n  functions: Column[];\n};\n\nfunction GenericCards(props: GenericCardsProps) {\n  const api = useApi();\n\n  const {eventView: baseEventView, location, organization, functions} = props;\n  const {query} = location;\n  const eventView = baseEventView.withColumns(functions);\n\n  // construct request parameters for fetching chart data\n  const globalSelection = eventView.getPageFilters();\n  const start = globalSelection.datetime.start\n    ? getUtcToLocalDateObject(globalSelection.datetime.start)\n    : undefined;\n  const end = globalSelection.datetime.end\n    ? getUtcToLocalDateObject(globalSelection.datetime.end)\n    : undefined;\n  const interval =\n    typeof query.sparkInterval === 'string'\n      ? query.sparkInterval\n      : getInterval(\n          {\n            start: start || null,\n            end: end || null,\n            period: globalSelection.datetime.period,\n          },\n          'low'\n        );\n  const apiPayload = eventView.getEventsAPIPayload(location);\n\n  return (\n    <DiscoverQuery\n      location={location}\n      eventView={eventView}\n      orgSlug={organization.slug}\n      limit={1}\n      referrer=\"api.performance.vitals-cards\"\n    >\n      {({isLoading: isSummaryLoading, tableData}) => (\n        <EventsRequest\n          api={api}\n          organization={organization}\n          period={globalSelection.datetime.period}\n          project={globalSelection.projects}\n          environment={globalSelection.environments}\n          team={apiPayload.team}\n          start={start}\n          end={end}\n          interval={interval}\n          query={apiPayload.query}\n          includePrevious={false}\n          yAxis={eventView.getFields()}\n          partial\n        >\n          {({results}) => {\n            const series = results?.reduce((allSeries, oneSeries) => {\n              allSeries[oneSeries.seriesName] = oneSeries.data.map(item => item.value);\n              return allSeries;\n            }, {});\n            const details = vitalCardDetails(organization);\n\n            return (\n              <VitalsContainer>\n                {functions.map(func => {\n                  let fieldName = generateFieldAsString(func);\n\n                  if (fieldName.includes('apdex')) {\n                    // Replace apdex with explicit thresholds with a generic one for lookup\n                    fieldName = 'apdex()';\n                  }\n\n                  const cardDetail = details[fieldName];\n                  if (!cardDetail) {\n                    Sentry.captureMessage(`Missing field '${fieldName}' in vital cards.`);\n                    return null;\n                  }\n\n                  const {title, tooltip, formatter} = cardDetail;\n                  const alias = getAggregateAlias(fieldName);\n                  const rawValue = tableData?.data?.[0]?.[alias] as number;\n\n                  const data = series?.[fieldName];\n                  const value =\n                    isSummaryLoading || !defined(rawValue)\n                      ? '\\u2014'\n                      : formatter(rawValue);\n                  const chart = <SparklineChart data={data} />;\n                  return (\n                    <VitalCard\n                      key={fieldName}\n                      title={title}\n                      tooltip={tooltip}\n                      value={value}\n                      chart={chart}\n                      horizontal\n                      minHeight={96}\n                      isNotInteractive\n                    />\n                  );\n                })}\n              </VitalsContainer>\n            );\n          }}\n        </EventsRequest>\n      )}\n    </DiscoverQuery>\n  );\n}\n\nfunction _BackendCards(props: BaseCardsProps) {\n  const functions: Column[] = [\n    {\n      kind: 'function',\n      function: ['p75', 'transaction.duration', undefined, undefined],\n    },\n    {kind: 'function', function: ['tpm', '', undefined, undefined]},\n    {kind: 'function', function: ['failure_rate', '', undefined, undefined]},\n    {\n      kind: 'function',\n      function: ['apdex', '', undefined, undefined],\n    },\n  ];\n  return <GenericCards {...props} functions={functions} />;\n}\n\nexport const BackendCards = _BackendCards;\n\ntype MobileCardsProps = BaseCardsProps & {\n  showStallPercentage: boolean;\n};\n\nfunction _MobileCards(props: MobileCardsProps) {\n  const functions: Column[] = [\n    {\n      kind: 'function',\n      function: ['p75', 'measurements.app_start_cold', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['p75', 'measurements.app_start_warm', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['p75', 'measurements.frames_slow_rate', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['p75', 'measurements.frames_frozen_rate', undefined, undefined],\n    },\n  ];\n  if (props.showStallPercentage) {\n    functions.push({\n      kind: 'function',\n      function: ['p75', 'measurements.stall_percentage', undefined, undefined],\n    });\n  }\n  return <GenericCards {...props} functions={functions} />;\n}\n\nexport const MobileCards = _MobileCards;\n\ntype SparklineChartProps = {\n  data: number[];\n};\n\nfunction SparklineChart(props: SparklineChartProps) {\n  const {data} = props;\n  const width = 150;\n  const height = 24;\n  const lineColor = theme.charts.getColorPalette(1)[0];\n  return (\n    <SparklineContainer data-test-id=\"sparkline\" width={width} height={height}>\n      <Sparklines data={data} width={width} height={height}>\n        <SparklinesLine style={{stroke: lineColor, fill: 'none', strokeWidth: 3}} />\n      </Sparklines>\n    </SparklineContainer>\n  );\n}\n\ntype SparklineContainerProps = {\n  height: number;\n  width: number;\n};\n\nconst SparklineContainer = styled('div')<SparklineContainerProps>`\n  flex-grow: 4;\n  max-height: ${p => p.height}px;\n  max-width: ${p => p.width}px;\n  margin: ${space(1)} ${space(0)} ${space(0.5)} ${space(3)};\n`;\n\nconst VitalsContainer = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-column-gap: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  }\n`;\n\ntype VitalBarProps = {\n  data: VitalsData | null;\n  isLoading: boolean;\n  vital: WebVital | WebVital[];\n  barHeight?: number;\n  showBar?: boolean;\n  showDetail?: boolean;\n  showDurationDetail?: boolean;\n  showStates?: boolean;\n  showTooltip?: boolean;\n  showVitalPercentNames?: boolean;\n  showVitalThresholds?: boolean;\n  value?: string;\n};\n\nexport function VitalBar(props: VitalBarProps) {\n  const {\n    isLoading,\n    data,\n    vital,\n    value,\n    showBar = true,\n    showStates = false,\n    showDurationDetail = false,\n    showVitalPercentNames = true,\n    showVitalThresholds = false,\n    showDetail = true,\n    showTooltip = false,\n    barHeight,\n  } = props;\n\n  if (isLoading) {\n    return showStates ? <Placeholder height=\"48px\" /> : null;\n  }\n\n  const emptyState = showStates ? (\n    <EmptyVitalBar small>{t('No vitals found')}</EmptyVitalBar>\n  ) : null;\n\n  if (!data) {\n    return emptyState;\n  }\n\n  const counts: Pick<VitalData, 'poor' | 'meh' | 'good' | 'total'> = {\n    poor: 0,\n    meh: 0,\n    good: 0,\n    total: 0,\n  };\n  const vitals = Array.isArray(vital) ? vital : [vital];\n  vitals.forEach(vitalName => {\n    const c = data?.[vitalName] ?? {};\n    Object.keys(counts).forEach(countKey => (counts[countKey] += c[countKey]));\n  });\n\n  if (!counts.total) {\n    return emptyState;\n  }\n\n  const p75: React.ReactNode = Array.isArray(vital)\n    ? null\n    : value ?? getP75(data?.[vital] ?? null, vital);\n  const percents = getPercentsFromCounts(counts);\n  const colorStops = getColorStopsFromPercents(percents);\n\n  return (\n    <Fragment>\n      {showBar && (\n        <StyledTooltip\n          title={\n            <VitalPercents\n              vital={vital}\n              percents={percents}\n              showVitalPercentNames={false}\n              showVitalThresholds={false}\n              hideTooltips={showTooltip}\n            />\n          }\n          disabled={!showTooltip}\n          position=\"bottom\"\n        >\n          <ColorBar barHeight={barHeight} colorStops={colorStops} />\n        </StyledTooltip>\n      )}\n      {showDetail && (\n        <BarDetail>\n          {showDurationDetail && p75 && (\n            <div>\n              {t('The p75 for all transactions is ')}\n              <strong>{p75}</strong>\n            </div>\n          )}\n\n          <VitalPercents\n            vital={vital}\n            percents={percents}\n            showVitalPercentNames={showVitalPercentNames}\n            showVitalThresholds={showVitalThresholds}\n          />\n        </BarDetail>\n      )}\n    </Fragment>\n  );\n}\n\nconst EmptyVitalBar = styled(EmptyStateWarning)`\n  height: 48px;\n  padding: ${space(1.5)} 15%;\n`;\n\ntype VitalCardProps = {\n  chart: React.ReactNode;\n  title: string;\n  tooltip: string;\n  value: string | number;\n  horizontal?: boolean;\n  isNotInteractive?: boolean;\n  minHeight?: number;\n};\n\nfunction VitalCard(props: VitalCardProps) {\n  const {chart, minHeight, horizontal, title, tooltip, value, isNotInteractive} = props;\n  return (\n    <StyledCard interactive={!isNotInteractive} minHeight={minHeight}>\n      <HeaderTitle>\n        <OverflowEllipsis>{t(title)}</OverflowEllipsis>\n        <QuestionTooltip size=\"sm\" position=\"top\" title={tooltip} />\n      </HeaderTitle>\n      <CardContent horizontal={horizontal}>\n        <CardValue>{value}</CardValue>\n        {chart}\n      </CardContent>\n    </StyledCard>\n  );\n}\n\nconst CardContent = styled('div')<{horizontal?: boolean}>`\n  width: 100%;\n  display: flex;\n  flex-direction: ${p => (p.horizontal ? 'row' : 'column')};\n  justify-content: space-between;\n`;\n\nconst StyledCard = styled(Card)<{minHeight?: number}>`\n  color: ${p => p.theme.textColor};\n  padding: ${space(2)} ${space(3)};\n  align-items: flex-start;\n  margin-bottom: ${space(2)};\n  ${p => p.minHeight && `min-height: ${p.minHeight}px`};\n`;\n\nconst StyledTooltip = styled(Tooltip)`\n  width: 100%;\n`;\n\nfunction getP75(data: VitalData | null, vitalName: WebVital): string {\n  const p75 = data?.p75 ?? null;\n  if (p75 === null) {\n    return '\\u2014';\n  }\n  return vitalName === WebVital.CLS ? p75.toFixed(2) : `${p75.toFixed(0)}ms`;\n}\n\ntype Percent = {\n  percent: number;\n  vitalState: VitalState;\n};\n\nfunction getPercentsFromCounts({poor, meh, good, total}) {\n  const poorPercent = poor / total;\n  const mehPercent = meh / total;\n  const goodPercent = good / total;\n\n  const percents: Percent[] = [\n    {\n      vitalState: VitalState.GOOD,\n      percent: goodPercent,\n    },\n    {\n      vitalState: VitalState.MEH,\n      percent: mehPercent,\n    },\n    {\n      vitalState: VitalState.POOR,\n      percent: poorPercent,\n    },\n  ];\n\n  return percents;\n}\n\nfunction getColorStopsFromPercents(percents: Percent[]) {\n  return percents.map(({percent, vitalState}) => ({\n    percent,\n    color: vitalStateColors[vitalState],\n  }));\n}\n\nconst BarDetail = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nconst CardValue = styled('div')`\n  font-size: 32px;\n  margin-top: ${space(1)};\n`;\n\nconst OverflowEllipsis = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n`;\n","import {ReactNode} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Color} from 'sentry/utils/theme';\n\ntype ColorStop = {\n  color: Color | string;\n  percent: number;\n  renderBarStatus?: (barStatus: ReactNode, key: string) => ReactNode;\n};\n\ntype Props = {\n  colorStops: ColorStop[];\n  barHeight?: number;\n};\n\nconst ColorBar = (props: Props) => {\n  return (\n    <VitalBar\n      barHeight={props.barHeight}\n      fractions={props.colorStops.map(({percent}) => percent)}\n    >\n      {props.colorStops.map(colorStop => {\n        const barStatus = <BarStatus color={colorStop.color} key={colorStop.color} />;\n\n        return colorStop.renderBarStatus?.(barStatus, colorStop.color) ?? barStatus;\n      })}\n    </VitalBar>\n  );\n};\n\ntype VitalBarProps = {\n  fractions: number[];\n  barHeight?: number;\n};\n\nconst VitalBar = styled('div')<VitalBarProps>`\n  height: ${p => (p.barHeight ? `${p.barHeight}px` : '16px')};\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  background: ${p => p.theme.gray100};\n  display: grid;\n  grid-template-columns: ${p => p.fractions.map(f => `${f}fr`).join(' ')};\n  margin-bottom: ${p => (p.barHeight ? '' : space(1))};\n  border-radius: 2px;\n`;\n\ntype ColorProps = {\n  color: Color | string;\n};\n\nconst BarStatus = styled('div')<ColorProps>`\n  background-color: ${p => p.theme[p.color] ?? p.color};\n`;\n\nexport default ColorBar;\n","import styled from '@emotion/styled';\n\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {WebVital} from 'sentry/utils/fields';\nimport {formatPercentage} from 'sentry/utils/formatters';\n\nimport {VitalState, vitalStateIcons, webVitalMeh, webVitalPoor} from './utils';\n\ntype Percent = {\n  percent: number;\n  vitalState: VitalState;\n};\n\ntype Props = {\n  percents: Percent[];\n  vital: WebVital | WebVital[];\n  hideTooltips?: boolean;\n  showVitalPercentNames?: boolean;\n  showVitalThresholds?: boolean;\n};\n\nfunction getVitalStateText(vital: WebVital | WebVital[], vitalState) {\n  const unit = !Array.isArray(vital) && vital !== WebVital.CLS ? 'ms' : '';\n  switch (vitalState) {\n    case VitalState.POOR:\n      return Array.isArray(vital)\n        ? t('Poor')\n        : tct('(>[threshold][unit])', {threshold: webVitalPoor[vital], unit});\n    case VitalState.MEH:\n      return Array.isArray(vital)\n        ? t('Meh')\n        : tct('(>[threshold][unit])', {threshold: webVitalMeh[vital], unit});\n    case VitalState.GOOD:\n      return Array.isArray(vital)\n        ? t('Good')\n        : tct('(<=[threshold][unit])', {threshold: webVitalMeh[vital], unit});\n    default:\n      return null;\n  }\n}\n\nexport default function VitalPercents(props: Props) {\n  return (\n    <VitalSet>\n      {props.percents.map(pct => (\n        <VitalStatus data-test-id=\"vital-status\" key={pct.vitalState}>\n          {vitalStateIcons[pct.vitalState]}\n          {props.showVitalPercentNames && t(`${pct.vitalState}`)}{' '}\n          {formatPercentage(pct.percent, 0)}\n          {props.showVitalThresholds && getVitalStateText(props.vital, pct.vitalState)}\n        </VitalStatus>\n      ))}\n    </VitalSet>\n  );\n}\n\nconst VitalSet = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n`;\n\nconst VitalStatus = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n"],"names":["Sparklines","PropTypes","SparklinesWithCustomPropTypes","children","node","data","array","limit","number","width","height","svgWidth","svgHeight","preserveAspectRatio","string","margin","style","object","min","max","onMouseMove","func","SparklinesLine","default","pick","GenericDiscoverQuery","PERFORMANCE_URL_PARAM","withApi","getRequestPayload","props","eventView","vitals","apiPayload","getEventsAPIPayload","location","vital","Object","values","VitalsCardsDiscoverQuery","tableData","rest","vitalsData","Fragment","Sentry","Card","EventsRequest","HeaderTitle","getInterval","EmptyStateWarning","Link","Placeholder","QuestionTooltip","Tooltip","t","space","defined","getUtcToLocalDateObject","DiscoverQuery","generateFieldAsString","getAggregateAlias","WebVital","WEB_VITAL_DETAILS","decodeList","theme","useApi","ColorBar","vitalAbbreviations","vitalDetailRouteWithQuery","vitalMap","VitalState","vitalStateColors","VitalPercents","getDefaultDisplayFieldForPlatform","LandingDisplayField","vitalCardDetails","FrontendCards","organization","projects","frontendOnly","defaultDisplay","isFrontend","FRONTEND_PAGELOAD","FCP","LCP","FID","CLS","slug","isLoading","map","target","orgSlug","query","generateQueryStringObject","vitalName","projectID","project","value","getP75","chart","description","VitalBarContainer","GenericCards","api","baseEventView","functions","withColumns","globalSelection","getPageFilters","start","datetime","undefined","end","interval","sparkInterval","period","isSummaryLoading","environments","team","getFields","results","series","reduce","allSeries","oneSeries","seriesName","item","details","fieldName","includes","cardDetail","captureMessage","title","tooltip","formatter","alias","rawValue","_BackendCards","kind","function","BackendCards","_MobileCards","showStallPercentage","push","MobileCards","SparklineChart","lineColor","charts","getColorPalette","stroke","fill","strokeWidth","SparklineContainer","p","VitalsContainer","breakpoints","small","large","VitalBar","showBar","showStates","showDurationDetail","showVitalPercentNames","showVitalThresholds","showDetail","showTooltip","barHeight","emptyState","counts","poor","meh","good","total","Array","isArray","forEach","c","keys","countKey","p75","percents","getPercentsFromCounts","colorStops","getColorStopsFromPercents","EmptyVitalBar","VitalCard","minHeight","horizontal","isNotInteractive","CardContent","StyledCard","textColor","StyledTooltip","toFixed","poorPercent","mehPercent","goodPercent","vitalState","GOOD","percent","MEH","POOR","color","BarDetail","fontSizeMedium","CardValue","OverflowEllipsis","overflowEllipsis","colorStop","barStatus","renderBarStatus","gray100","fractions","f","join","BarStatus","tct","formatPercentage","vitalStateIcons","webVitalMeh","webVitalPoor","getVitalStateText","unit","threshold","pct","VitalSet","VitalStatus"],"sourceRoot":""}