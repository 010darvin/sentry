{"version":3,"file":"chunks/app_views_settings_organizationSecurityAndPrivacy_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/organizationSecurityAndPrivacyGroups.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationSecurityAndPrivacy/index.tsx"],"sourcesContent":["import {JsonFormObject} from 'sentry/components/forms/type';\nimport {t} from 'sentry/locale';\nimport {convertMultilineFieldValue, extractMultilineFields} from 'sentry/utils';\nimport {\n  formatStoreCrashReports,\n  getStoreCrashReportsValues,\n  SettingScope,\n} from 'sentry/utils/crashReports';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/security-and-privacy/';\nexport default [\n  {\n    title: t('Security & Privacy'),\n    fields: [\n      {\n        name: 'require2FA',\n        type: 'boolean',\n        label: t('Require Two-Factor Authentication'),\n        help: t('Require and enforce two-factor authentication for all members'),\n        confirm: {\n          true: t(\n            'This will remove all members without two-factor authentication' +\n              ' from your organization. It will also send them an email to setup 2FA' +\n              ' and reinstate their access and settings. Do you want to continue?'\n          ),\n          false: t(\n            'Are you sure you want to allow users to access your organization without having two-factor authentication enabled?'\n          ),\n        },\n      },\n      {\n        name: 'requireEmailVerification',\n        type: 'boolean',\n        label: t('Require Email Verification'),\n        help: t('Require and enforce email address verification for all members'),\n        visible: ({features}) => features.has('required-email-verification'),\n        confirm: {\n          true: t(\n            'This will remove all members whose email addresses are not verified' +\n              ' from your organization. It will also send them an email to verify their address' +\n              ' and reinstate their access and settings. Do you want to continue?'\n          ),\n          false: t(\n            'Are you sure you want to allow users to access your organization without verifying their email address?'\n          ),\n        },\n      },\n      {\n        name: 'allowSharedIssues',\n        type: 'boolean',\n\n        label: t('Allow Shared Issues'),\n        help: t('Enable sharing of limited details on issues to anonymous users'),\n        confirm: {\n          true: t('Are you sure you want to allow sharing issues to anonymous users?'),\n        },\n      },\n      {\n        name: 'enhancedPrivacy',\n        type: 'boolean',\n\n        label: t('Enhanced Privacy'),\n        help: t(\n          'Enable enhanced privacy controls to limit personally identifiable information (PII) as well as source code in things like notifications'\n        ),\n        confirm: {\n          false: t(\n            'Disabling this can have privacy implications for ALL projects, are you sure you want to continue?'\n          ),\n        },\n      },\n      {\n        name: 'scrapeJavaScript',\n        type: 'boolean',\n        confirm: {\n          false: t(\n            \"Are you sure you want to disable sourcecode fetching for JavaScript events? This will affect Sentry's ability to aggregate issues if you're not already uploading sourcemaps as artifacts.\"\n          ),\n        },\n        label: t('Allow JavaScript Source Fetching'),\n        help: t('Allow Sentry to scrape missing JavaScript source context when possible'),\n      },\n      {\n        name: 'storeCrashReports',\n        type: 'select',\n        label: t('Store Native Crash Reports'),\n        help: t(\n          'Store native crash reports such as Minidumps for improved processing and download in issue details'\n        ),\n        visible: ({features}) => features.has('event-attachments'),\n        // HACK: some organization can have limit of stored crash reports a number that's not in the options (legacy reasons),\n        // we therefore display it in a placeholder\n        placeholder: ({value}) => formatStoreCrashReports(value),\n        choices: () =>\n          getStoreCrashReportsValues(SettingScope.Organization).map(value => [\n            value,\n            formatStoreCrashReports(value),\n          ]),\n      },\n      {\n        name: 'allowJoinRequests',\n        type: 'boolean',\n\n        label: t('Allow Join Requests'),\n        help: t('Allow users to request to join your organization'),\n        confirm: {\n          true: t(\n            'Are you sure you want to allow users to request to join your organization?'\n          ),\n        },\n        visible: ({hasSsoEnabled}) => !hasSsoEnabled,\n      },\n    ],\n  },\n  {\n    title: t('Data Scrubbing'),\n    fields: [\n      {\n        name: 'dataScrubber',\n        type: 'boolean',\n        label: t('Require Data Scrubber'),\n        help: t('Require server-side data scrubbing be enabled for all projects'),\n        confirm: {\n          false: t(\n            'Disabling this can have privacy implications for ALL projects, are you sure you want to continue?'\n          ),\n        },\n      },\n      {\n        name: 'dataScrubberDefaults',\n        type: 'boolean',\n        label: t('Require Using Default Scrubbers'),\n        help: t(\n          'Require the default scrubbers be applied to prevent things like passwords and credit cards from being stored for all projects'\n        ),\n        confirm: {\n          false: t(\n            'Disabling this can have privacy implications for ALL projects, are you sure you want to continue?'\n          ),\n        },\n      },\n      {\n        name: 'sensitiveFields',\n        type: 'string',\n        multiline: true,\n        autosize: true,\n        maxRows: 10,\n        rows: 1,\n        placeholder: 'e.g. email',\n        label: t('Global Sensitive Fields'),\n        help: t(\n          'Additional field names to match against when scrubbing data for all projects. Separate multiple entries with a newline.'\n        ),\n        extraHelp: t(\n          'Note: These fields will be used in addition to project specific fields.'\n        ),\n        getValue: val => extractMultilineFields(val),\n        setValue: val => convertMultilineFieldValue(val),\n      },\n      {\n        name: 'safeFields',\n        type: 'string',\n        multiline: true,\n        autosize: true,\n        maxRows: 10,\n        rows: 1,\n        placeholder: t('e.g. business-email'),\n        label: t('Global Safe Fields'),\n        help: t(\n          'Field names which data scrubbers should ignore. Separate multiple entries with a newline.'\n        ),\n        extraHelp: t(\n          'Note: These fields will be used in addition to project specific fields'\n        ),\n        getValue: val => extractMultilineFields(val),\n        setValue: val => convertMultilineFieldValue(val),\n      },\n      {\n        name: 'scrubIPAddresses',\n        type: 'boolean',\n        label: t('Prevent Storing of IP Addresses'),\n        help: t(\n          'Preventing IP addresses from being stored for new events on all projects'\n        ),\n        confirm: {\n          false: t(\n            'Disabling this can have privacy implications for ALL projects, are you sure you want to continue?'\n          ),\n        },\n      },\n    ],\n  },\n] as JsonFormObject[];\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {updateOrganization} from 'sentry/actionCreators/organizations';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport organizationSecurityAndPrivacyGroups from 'sentry/data/forms/organizationSecurityAndPrivacyGroups';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport DataScrubbing from '../components/dataScrubbing';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n};\n\nclass OrganizationSecurityAndPrivacyContent extends AsyncView<Props> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n    return [['authProvider', `/organizations/${orgId}/auth-provider/`]];\n  }\n\n  handleUpdateOrganization = (data: Organization) => {\n    // This will update OrganizationStore (as well as OrganizationsStore\n    // which is slightly incorrect because it has summaries vs a detailed org)\n    updateOrganization(data);\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    const {orgId} = this.props.params;\n    const initialData = organization;\n    const endpoint = `/organizations/${orgId}/`;\n    const access = new Set(organization.access);\n    const features = new Set(organization.features);\n    const relayPiiConfig = organization.relayPiiConfig;\n    const {authProvider} = this.state;\n    const title = t('Security & Privacy');\n\n    return (\n      <Fragment>\n        <SentryDocumentTitle title={title} orgSlug={organization.slug} />\n        <SettingsPageHeader title={title} />\n        <Form\n          data-test-id=\"organization-settings-security-and-privacy\"\n          apiMethod=\"PUT\"\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          additionalFieldProps={{hasSsoEnabled: !!authProvider}}\n          onSubmitSuccess={this.handleUpdateOrganization}\n          onSubmitError={() => addErrorMessage(t('Unable to save change'))}\n          saveOnBlur\n          allowUndo\n        >\n          <JsonForm\n            features={features}\n            forms={organizationSecurityAndPrivacyGroups}\n            disabled={!access.has('org:write')}\n          />\n        </Form>\n        <DataScrubbing\n          additionalContext={t('These rules can be configured for each project.')}\n          endpoint={endpoint}\n          relayPiiConfig={relayPiiConfig}\n          disabled={!access.has('org:write')}\n          organization={organization}\n          onSubmitSuccess={this.handleUpdateOrganization}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationSecurityAndPrivacyContent);\n"],"names":["t","convertMultilineFieldValue","extractMultilineFields","formatStoreCrashReports","getStoreCrashReportsValues","SettingScope","route","title","fields","name","type","label","help","confirm","true","false","visible","features","has","placeholder","value","choices","Organization","map","hasSsoEnabled","multiline","autosize","maxRows","rows","extraHelp","getValue","val","setValue","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Fragment","addErrorMessage","updateOrganization","Form","JsonForm","organizationSecurityAndPrivacyGroups","withOrganization","SettingsPageHeader","DataScrubbing","OrganizationSecurityAndPrivacyContent","data","getEndpoints","orgId","props","params","renderBody","organization","initialData","endpoint","access","Set","relayPiiConfig","authProvider","state","slug","handleUpdateOrganization"],"sourceRoot":""}