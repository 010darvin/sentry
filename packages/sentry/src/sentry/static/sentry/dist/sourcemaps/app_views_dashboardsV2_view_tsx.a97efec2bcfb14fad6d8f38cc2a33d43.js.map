{"version":3,"file":"chunks/app_views_dashboardsV2_view_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/dashboardsV2/orgDashboards.tsx","webpack:///./app/views/dashboardsV2/view.tsx"],"sourcesContent":["import {browserHistory} from 'react-router';\nimport {Location} from 'history';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\n\nimport {Client} from 'sentry/api';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport NotFound from 'sentry/components/errors/notFound';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\n\nimport {assignTempId} from './layoutUtils';\nimport {DashboardDetails, DashboardListItem} from './types';\nimport {hasSavedPageFilters} from './utils';\n\ntype OrgDashboardsChildrenProps = {\n  dashboard: DashboardDetails | null;\n  dashboards: DashboardListItem[];\n  error: boolean;\n  onDashboardUpdate: (updatedDashboard: DashboardDetails) => void;\n};\n\ntype Props = {\n  api: Client;\n  children: (props: OrgDashboardsChildrenProps) => React.ReactNode;\n  location: Location;\n  organization: Organization;\n  params: {orgId: string; dashboardId?: string};\n};\n\ntype State = {\n  // endpoint response\n  dashboards: DashboardListItem[] | null;\n  /**\n   * The currently selected dashboard.\n   */\n  selectedDashboard: DashboardDetails | null;\n} & AsyncComponent['state'];\n\nclass OrgDashboards extends AsyncComponent<Props, State> {\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: {},\n\n    dashboards: [],\n    selectedDashboard: null,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isEqual(prevProps.params.dashboardId, this.props.params.dashboardId)) {\n      this.remountComponent();\n    }\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params} = this.props;\n    const url = `/organizations/${organization.slug}/dashboards/`;\n    const endpoints: ReturnType<AsyncComponent['getEndpoints']> = [['dashboards', url]];\n\n    if (params.dashboardId) {\n      endpoints.push(['selectedDashboard', `${url}${params.dashboardId}/`]);\n      trackAnalyticsEvent({\n        eventKey: 'dashboards2.view',\n        eventName: 'Dashboards2: View dashboard',\n        organization_id: parseInt(this.props.organization.id, 10),\n        dashboard_id: params.dashboardId,\n      });\n    }\n\n    return endpoints;\n  }\n\n  onDashboardUpdate(updatedDashboard: DashboardDetails) {\n    this.setState({selectedDashboard: updatedDashboard});\n  }\n\n  getDashboards(): DashboardListItem[] {\n    const {dashboards} = this.state;\n\n    return Array.isArray(dashboards) ? dashboards : [];\n  }\n\n  onRequestSuccess({stateKey, data}) {\n    const {params, organization, location} = this.props;\n\n    if (params.dashboardId || stateKey === 'selectedDashboard') {\n      const queryParamFilters = new Set([\n        'project',\n        'environment',\n        'statsPeriod',\n        'start',\n        'end',\n        'utc',\n        'release',\n      ]);\n      if (\n        organization.features.includes('dashboards-top-level-filter') &&\n        stateKey === 'selectedDashboard' &&\n        // Only redirect if there are saved filters and none of the filters\n        // appear in the query params\n        hasSavedPageFilters(data) &&\n        isEmpty(\n          Object.keys(location.query).filter(unsavedQueryParam =>\n            queryParamFilters.has(unsavedQueryParam)\n          )\n        )\n      ) {\n        browserHistory.replace({\n          ...location,\n          query: {\n            ...location.query,\n            project: data.projects,\n            environment: data.environment,\n            statsPeriod: data.period,\n            start: data.start,\n            end: data.end,\n            utc: data.utc,\n          },\n        });\n      }\n      return;\n    }\n\n    // If we don't have a selected dashboard, and one isn't going to arrive\n    // we can redirect to the first dashboard in the list.\n    const dashboardId = data.length ? data[0].id : 'default-overview';\n    const url = `/organizations/${organization.slug}/dashboard/${dashboardId}/`;\n    browserHistory.replace({\n      pathname: url,\n      query: {\n        ...location.query,\n      },\n    });\n  }\n\n  renderLoading() {\n    return (\n      <PageContent>\n        <LoadingIndicator />\n      </PageContent>\n    );\n  }\n\n  renderBody() {\n    const {children, organization} = this.props;\n    const {selectedDashboard, error} = this.state;\n    let dashboard = selectedDashboard;\n\n    if (organization.features.includes('dashboard-grid-layout')) {\n      // Ensure there are always tempIds for grid layout\n      // This is needed because there are cases where the dashboard\n      // renders before the onRequestSuccess setState is processed\n      // and will caused stacked widgets because of missing tempIds\n      dashboard = selectedDashboard\n        ? {\n            ...selectedDashboard,\n            widgets: selectedDashboard.widgets.map(assignTempId),\n          }\n        : null;\n    }\n\n    return children({\n      error,\n      dashboard,\n      dashboards: this.getDashboards(),\n      onDashboardUpdate: (updatedDashboard: DashboardDetails) =>\n        this.onDashboardUpdate(updatedDashboard),\n    });\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n\n    return super.renderError(error, true);\n  }\n\n  renderComponent() {\n    const {organization, location} = this.props;\n    const {loading, selectedDashboard} = this.state;\n\n    if (!organization.features.includes('dashboards-basic')) {\n      // Redirect to Dashboards v1\n      browserHistory.replace({\n        pathname: `/organizations/${organization.slug}/dashboards/`,\n        query: {\n          ...location.query,\n        },\n      });\n      return null;\n    }\n\n    if (\n      loading &&\n      organization.features.includes('dashboards-top-level-filter') &&\n      selectedDashboard &&\n      hasSavedPageFilters(selectedDashboard) &&\n      isEmpty(location.query)\n    ) {\n      // Block dashboard from rendering if the dashboard has filters and\n      // the URL does not contain filters yet. The filters can either match the\n      // saved filters, or can be different (i.e. sharing an unsaved state)\n      return this.renderLoading();\n    }\n\n    return (\n      <SentryDocumentTitle title={t('Dashboards')} orgSlug={organization.slug}>\n        {super.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default OrgDashboards;\n","import {useEffect, useState} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport pick from 'lodash/pick';\n\nimport {updateDashboardVisit} from 'sentry/actionCreators/dashboards';\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport NotFound from 'sentry/components/errors/notFound';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport DashboardDetail from './detail';\nimport OrgDashboards from './orgDashboards';\nimport {DashboardState, Widget} from './types';\nimport {constructWidgetFromQuery} from './utils';\n\nconst ALLOWED_PARAMS = [\n  'start',\n  'end',\n  'utc',\n  'period',\n  'project',\n  'environment',\n  'statsPeriod',\n];\n\ntype Props = RouteComponentProps<\n  {dashboardId: string; orgId: string; widgetId?: number},\n  {}\n> & {\n  children: React.ReactNode;\n  organization: Organization;\n};\n\nfunction ViewEditDashboard(props: Props) {\n  const api = useApi();\n\n  const {organization, params, location} = props;\n  const dashboardId = params.dashboardId;\n  const orgSlug = organization.slug;\n  const [newWidget, setNewWidget] = useState<Widget | undefined>();\n  const [dashboardInitialState, setDashboardInitialState] = useState(DashboardState.VIEW);\n\n  useEffect(() => {\n    if (dashboardId && dashboardId !== 'default-overview') {\n      updateDashboardVisit(api, orgSlug, dashboardId);\n    }\n  }, [api, orgSlug, dashboardId]);\n\n  useEffect(() => {\n    const constructedWidget = constructWidgetFromQuery(location.query);\n    setNewWidget(constructedWidget);\n    // Clean up url after constructing widget from query string, only allow GHS params\n    if (constructedWidget) {\n      setDashboardInitialState(DashboardState.EDIT);\n      browserHistory.replace({\n        pathname: location.pathname,\n        query: pick(location.query, ALLOWED_PARAMS),\n      });\n    }\n  }, [location.pathname]);\n\n  return (\n    <DashboardBasicFeature organization={organization}>\n      <OrgDashboards\n        api={api}\n        location={location}\n        params={params}\n        organization={organization}\n      >\n        {({dashboard, dashboards, error, onDashboardUpdate}) => {\n          return error ? (\n            <NotFound />\n          ) : dashboard ? (\n            <ErrorBoundary>\n              <DashboardDetail\n                {...props}\n                initialState={dashboardInitialState}\n                dashboard={dashboard}\n                dashboards={dashboards}\n                onDashboardUpdate={onDashboardUpdate}\n                newWidget={newWidget}\n                onSetNewWidget={() => setNewWidget(undefined)}\n              />\n            </ErrorBoundary>\n          ) : (\n            <LoadingIndicator />\n          );\n        }}\n      </OrgDashboards>\n    </DashboardBasicFeature>\n  );\n}\n\nexport default withOrganization(ViewEditDashboard);\n\ntype FeatureProps = {\n  children: React.ReactNode;\n  organization: Organization;\n};\n\nexport const DashboardBasicFeature = ({organization, children}: FeatureProps) => {\n  const renderDisabled = () => (\n    <PageContent>\n      <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n    </PageContent>\n  );\n\n  return (\n    <Feature\n      hookName=\"feature-disabled:dashboards-page\"\n      features={['organizations:dashboards-basic']}\n      organization={organization}\n      renderDisabled={renderDisabled}\n    >\n      {children}\n    </Feature>\n  );\n};\n"],"names":["browserHistory","isEmpty","isEqual","AsyncComponent","NotFound","LoadingIndicator","SentryDocumentTitle","t","PageContent","trackAnalyticsEvent","assignTempId","hasSavedPageFilters","OrgDashboards","loading","reloading","error","errors","dashboards","selectedDashboard","componentDidUpdate","prevProps","params","dashboardId","props","remountComponent","getEndpoints","organization","url","slug","endpoints","push","eventKey","eventName","organization_id","parseInt","id","dashboard_id","onDashboardUpdate","updatedDashboard","setState","getDashboards","state","Array","isArray","onRequestSuccess","stateKey","data","location","queryParamFilters","Set","features","includes","Object","keys","query","filter","unsavedQueryParam","has","replace","project","projects","environment","statsPeriod","period","start","end","utc","length","pathname","renderLoading","renderBody","children","dashboard","widgets","map","renderError","notFound","values","find","resp","status","renderComponent","useEffect","useState","pick","updateDashboardVisit","Feature","Alert","ErrorBoundary","useApi","withOrganization","DashboardDetail","DashboardState","constructWidgetFromQuery","ALLOWED_PARAMS","ViewEditDashboard","api","orgSlug","newWidget","setNewWidget","dashboardInitialState","setDashboardInitialState","VIEW","constructedWidget","EDIT","undefined","DashboardBasicFeature","renderDisabled"],"sourceRoot":""}