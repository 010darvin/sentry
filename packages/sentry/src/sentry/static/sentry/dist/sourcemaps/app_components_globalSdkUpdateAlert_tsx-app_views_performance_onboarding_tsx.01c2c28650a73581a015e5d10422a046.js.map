{"version":3,"file":"chunks/app_components_globalSdkUpdateAlert_tsx-app_views_performance_onboarding_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/globalSdkUpdateAlert.tsx","webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/views/performance/onboarding.tsx"],"sourcesContent":["import {Fragment, useCallback, useEffect, useState} from 'react';\n\nimport {promptsCheck, promptsUpdate} from 'sentry/actionCreators/prompts';\nimport Alert, {AlertProps} from 'sentry/components/alert';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport SidebarPanelStore from 'sentry/stores/sidebarPanelStore';\nimport {ProjectSdkUpdates} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {promptIsDismissed} from 'sentry/utils/promptIsDismissed';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport withSdkUpdates from 'sentry/utils/withSdkUpdates';\n\nimport {SidebarPanelKey} from './sidebar/types';\nimport Button from './button';\n\ninterface InnerGlobalSdkSuggestionsProps extends AlertProps {\n  className?: string;\n  sdkUpdates?: ProjectSdkUpdates[] | null;\n}\n\nfunction InnerGlobalSdkUpdateAlert(\n  props: InnerGlobalSdkSuggestionsProps\n): React.ReactElement | null {\n  const api = useApi();\n  const organization = useOrganization();\n  const {selection} = usePageFilters();\n\n  const [showUpdateAlert, setShowUpdateAlert] = useState<boolean>(false);\n\n  const handleSnoozePrompt = useCallback(() => {\n    promptsUpdate(api, {\n      organizationId: organization.id,\n      feature: 'sdk_updates',\n      status: 'snoozed',\n    });\n\n    trackAdvancedAnalyticsEvent('sdk_updates.snoozed', {organization});\n    setShowUpdateAlert(false);\n  }, [api, organization]);\n\n  const handleReviewUpdatesClick = useCallback(() => {\n    SidebarPanelStore.activatePanel(SidebarPanelKey.Broadcasts);\n    trackAdvancedAnalyticsEvent('sdk_updates.clicked', {organization});\n  }, [organization]);\n\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('sdk_updates.seen', {organization});\n\n    let isUnmounted = false;\n\n    promptsCheck(api, {\n      organizationId: organization.id,\n      feature: 'sdk_updates',\n    }).then(prompt => {\n      if (isUnmounted) {\n        return;\n      }\n\n      setShowUpdateAlert(!promptIsDismissed(prompt));\n    });\n\n    return () => {\n      isUnmounted = true;\n    };\n  }, [api, organization]);\n\n  if (!showUpdateAlert || !props.sdkUpdates?.length) {\n    return null;\n  }\n\n  // withSdkUpdates explicitly only queries My Projects. This means that when\n  // looking at any projects outside of My Projects (like All Projects), this\n  // will only show the updates relevant to the to user.\n  const projectSpecificUpdates =\n    selection?.projects?.length === 0 || selection?.projects[0] === ALL_ACCESS_PROJECTS\n      ? props.sdkUpdates\n      : props.sdkUpdates.filter(update =>\n          selection?.projects?.includes(parseInt(update.projectId, 10))\n        );\n\n  // Check if we have at least one suggestion out of the list of updates\n  if (projectSpecificUpdates.every(v => v.suggestions.length === 0)) {\n    return null;\n  }\n\n  return (\n    <Alert\n      type=\"info\"\n      showIcon\n      className={props.className}\n      trailingItems={\n        <Fragment>\n          <Button\n            priority=\"link\"\n            size=\"zero\"\n            title={t('Dismiss for the next two weeks')}\n            onClick={handleSnoozePrompt}\n          >\n            {t('Remind me later')}\n          </Button>\n          <span>|</span>\n          <Button priority=\"link\" size=\"zero\" onClick={handleReviewUpdatesClick}>\n            {t('Review updates')}\n          </Button>\n        </Fragment>\n      }\n    >\n      {t(\n        `You have outdated SDKs in your projects. Update them for important fixes and features.`\n      )}\n    </Alert>\n  );\n}\n\nconst WithSdkUpdatesGlobalSdkUpdateAlert = withSdkUpdates(InnerGlobalSdkUpdateAlert);\n\nexport {\n  WithSdkUpdatesGlobalSdkUpdateAlert as GlobalSdkUpdateAlert,\n  InnerGlobalSdkUpdateAlert,\n};\n","import styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  image: React.ReactNode;\n  className?: string;\n};\n\nfunction OnboardingPanel({className, image, children}: Props) {\n  return (\n    <Panel className={className}>\n      <Container>\n        <IlloBox>{image}</IlloBox>\n        <StyledBox>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')`\n  z-index: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","import {useEffect} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport emptyStateImg from 'sentry-images/spot/performance-empty-state.svg';\nimport tourAlert from 'sentry-images/spot/performance-tour-alert.svg';\nimport tourCorrelate from 'sentry-images/spot/performance-tour-correlate.svg';\nimport tourMetrics from 'sentry-images/spot/performance-tour-metrics.svg';\nimport tourTrace from 'sentry-images/spot/performance-tour-trace.svg';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport FeatureTourModal, {\n  TourImage,\n  TourStep,\n  TourText,\n} from 'sentry/components/modals/featureTourModal';\nimport OnboardingPanel from 'sentry/components/onboardingPanel';\nimport {filterProjects} from 'sentry/components/performanceOnboarding/utils';\nimport {SidebarPanelKey} from 'sentry/components/sidebar/types';\nimport {withPerformanceOnboarding} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\nimport SidebarPanelStore from 'sentry/stores/sidebarPanelStore';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport useApi from 'sentry/utils/useApi';\nimport useProjects from 'sentry/utils/useProjects';\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\n\nconst performanceSetupUrl =\n  'https://docs.sentry.io/performance-monitoring/getting-started/';\n\nconst docsLink = (\n  <Button external href={performanceSetupUrl}>\n    {t('Setup')}\n  </Button>\n);\n\nexport const PERFORMANCE_TOUR_STEPS: TourStep[] = [\n  {\n    title: t('Track Application Metrics'),\n    image: <TourImage src={tourMetrics} />,\n    body: (\n      <TourText>\n        {t(\n          'Monitor your slowest pageloads and APIs to see which users are having the worst time.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Correlate Errors and Performance'),\n    image: <TourImage src={tourCorrelate} />,\n    body: (\n      <TourText>\n        {t(\n          'See what errors occurred within a transaction and the impact of those errors.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Watch and Alert'),\n    image: <TourImage src={tourAlert} />,\n    body: (\n      <TourText>\n        {t(\n          'Highlight mission-critical pages and APIs and set latency alerts to notify you before things go wrong.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Trace Across Systems'),\n    image: <TourImage src={tourTrace} />,\n    body: (\n      <TourText>\n        {t(\n          \"Follow a trace from a user's session and drill down to identify any bottlenecks that occur.\"\n        )}\n      </TourText>\n    ),\n  },\n];\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n};\n\nfunction Onboarding({organization, project}: Props) {\n  const api = useApi();\n\n  const {projects} = useProjects();\n  const {location} = useRouteContext();\n\n  const {projectsForOnboarding} = filterProjects(projects);\n\n  const showOnboardingChecklist = organization.features?.includes(\n    'performance-onboarding-checklist'\n  );\n\n  useEffect(() => {\n    if (\n      showOnboardingChecklist &&\n      location.hash === '#performance-sidequest' &&\n      projectsForOnboarding.some(p => p.id === project.id)\n    ) {\n      SidebarPanelStore.activatePanel(SidebarPanelKey.PerformanceOnboarding);\n    }\n  }, [location.hash, projectsForOnboarding, project.id, showOnboardingChecklist]);\n\n  function handleAdvance(step: number, duration: number) {\n    trackAdvancedAnalyticsEvent('performance_views.tour.advance', {\n      step,\n      duration,\n      organization,\n    });\n  }\n\n  function handleClose(step: number, duration: number) {\n    trackAdvancedAnalyticsEvent('performance_views.tour.close', {\n      step,\n      duration,\n      organization,\n    });\n  }\n\n  const currentPlatform = project.platform;\n  const hasPerformanceOnboarding = currentPlatform\n    ? withPerformanceOnboarding.has(currentPlatform)\n    : false;\n\n  let setupButton = (\n    <Button\n      priority=\"primary\"\n      href=\"https://docs.sentry.io/performance-monitoring/getting-started/\"\n      external\n    >\n      {t('Start Setup')}\n    </Button>\n  );\n\n  if (hasPerformanceOnboarding && showOnboardingChecklist) {\n    setupButton = (\n      <Button\n        priority=\"primary\"\n        onClick={event => {\n          event.preventDefault();\n          window.location.hash = 'performance-sidequest';\n          SidebarPanelStore.activatePanel(SidebarPanelKey.PerformanceOnboarding);\n        }}\n      >\n        {t('Start Checklist')}\n      </Button>\n    );\n  }\n\n  return (\n    <OnboardingPanel image={<PerfImage src={emptyStateImg} />}>\n      <h3>{t('Pinpoint problems')}</h3>\n      <p>\n        {t(\n          'Something seem slow? Track down transactions to connect the dots between 10-second page loads and poor-performing API calls or slow database queries.'\n        )}\n      </p>\n      <ButtonList gap={1}>\n        {setupButton}\n        <Button\n          data-test-id=\"create-sample-transaction-btn\"\n          onClick={async () => {\n            trackAdvancedAnalyticsEvent('performance_views.create_sample_transaction', {\n              platform: project.platform,\n              organization,\n            });\n            addLoadingMessage(t('Processing sample event...'), {\n              duration: 15000,\n            });\n            const url = `/projects/${organization.slug}/${project.slug}/create-sample-transaction/`;\n            try {\n              const eventData = await api.requestPromise(url, {method: 'POST'});\n              browserHistory.push(\n                `/organizations/${organization.slug}/performance/${project.slug}:${eventData.eventID}/`\n              );\n              clearIndicators();\n            } catch (error) {\n              Sentry.withScope(scope => {\n                scope.setExtra('error', error);\n                Sentry.captureException(new Error('Failed to create sample event'));\n              });\n              clearIndicators();\n              addErrorMessage(t('Failed to create a new sample event'));\n              return;\n            }\n          }}\n        >\n          {t('View Sample Transaction')}\n        </Button>\n      </ButtonList>\n      <FeatureTourModal\n        steps={PERFORMANCE_TOUR_STEPS}\n        onAdvance={handleAdvance}\n        onCloseModal={handleClose}\n        doneUrl={performanceSetupUrl}\n        doneText={t('Start Setup')}\n      >\n        {({showModal}) => (\n          <Button\n            priority=\"link\"\n            onClick={() => {\n              trackAdvancedAnalyticsEvent('performance_views.tour.start', {organization});\n              showModal();\n            }}\n          >\n            {t('Take a Tour')}\n          </Button>\n        )}\n      </FeatureTourModal>\n    </OnboardingPanel>\n  );\n}\n\nconst PerfImage = styled('img')`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    max-width: unset;\n    user-select: none;\n    position: absolute;\n    top: 75px;\n    bottom: 0;\n    width: 450px;\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    width: 480px;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    width: 600px;\n  }\n`;\n\nconst ButtonList = styled(ButtonBar)`\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n  margin-bottom: 16px;\n`;\n\nexport default Onboarding;\n"],"names":["Fragment","useCallback","useEffect","useState","promptsCheck","promptsUpdate","Alert","ALL_ACCESS_PROJECTS","t","SidebarPanelStore","trackAdvancedAnalyticsEvent","promptIsDismissed","useApi","useOrganization","usePageFilters","withSdkUpdates","SidebarPanelKey","Button","InnerGlobalSdkUpdateAlert","props","api","organization","selection","showUpdateAlert","setShowUpdateAlert","handleSnoozePrompt","organizationId","id","feature","status","handleReviewUpdatesClick","activatePanel","Broadcasts","isUnmounted","then","prompt","sdkUpdates","length","projectSpecificUpdates","projects","filter","update","includes","parseInt","projectId","every","v","suggestions","className","WithSdkUpdatesGlobalSdkUpdateAlert","GlobalSdkUpdateAlert","Panel","space","OnboardingPanel","image","children","Container","p","theme","breakpoints","small","medium","StyledBox","IlloBox","browserHistory","Sentry","emptyStateImg","tourAlert","tourCorrelate","tourMetrics","tourTrace","addErrorMessage","addLoadingMessage","clearIndicators","ButtonBar","FeatureTourModal","TourImage","TourText","filterProjects","withPerformanceOnboarding","useProjects","useRouteContext","performanceSetupUrl","docsLink","PERFORMANCE_TOUR_STEPS","title","body","actions","Onboarding","project","location","projectsForOnboarding","showOnboardingChecklist","features","hash","some","PerformanceOnboarding","handleAdvance","step","duration","handleClose","currentPlatform","platform","hasPerformanceOnboarding","has","setupButton","event","preventDefault","window","url","slug","eventData","requestPromise","method","push","eventID","error","withScope","scope","setExtra","captureException","Error","showModal","PerfImage","large","ButtonList"],"sourceRoot":""}