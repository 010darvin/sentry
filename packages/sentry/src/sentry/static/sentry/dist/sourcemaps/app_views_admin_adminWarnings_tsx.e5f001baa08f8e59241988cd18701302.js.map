{"version":3,"file":"chunks/app_views_admin_adminWarnings_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;;;;AASA,MAAMG,aAAN,SAA4BD,8DAA5B,CAAiD;EAC/CE,YAAY,GAA0C;IACpD,OAAO,CAAC,CAAC,MAAD,EAAS,qBAAT,CAAD,CAAP;EACD;;EAEDC,UAAU,GAAG;IACX,MAAM;MAACC;IAAD,IAAS,KAAKC,KAApB;;IAEA,IAAID,IAAI,KAAK,IAAb,EAAmB;MACjB,OAAO,IAAP;IACD;;IAED,MAAM;MAACE,MAAD;MAASC;IAAT,IAAqBH,IAA3B;IAEA,OACE;MAAA,WACE;QAAA,UAAKL,gDAAC,CAAC,iBAAD;MAAN,EADF,EAEG,CAACQ,QAAD,IAAa,CAACD,MAAd,IAAwBP,gDAAC,CAAC,oCAAD,CAF5B,EAIGO,MAAM,CAACE,GAAP,CAAW;QAAA,IAAC,CAACC,SAAD,EAAYC,eAAZ,CAAD;QAAA,OACV,iEAAC,2CAAD;UAAA,WACE;YAAA,UAAKD;UAAL,EADF,EAEE;YAAA,UACGC,eAAe,CAACF,GAAhB,CAAoB,CAACG,OAAD,EAAUC,CAAV,KACnB;cAAA,UAAaD;YAAb,GAASC,CAAT,CADD;UADH,EAFF;QAAA,GAAeH,SAAf,CADU;MAAA,CAAX,CAJH,EAeGF,QAAQ,CAACM,MAAT,GAAkB,CAAlB,IACC,iEAAC,2CAAD;QAAA,WACE;UAAA;QAAA,EADF,EAEE;UAAA,UACGN,QAAQ,CAACC,GAAT,CAAa,CAACG,OAAD,EAAUC,CAAV,KACZ;YAAA,UAAaD;UAAb,GAASC,CAAT,CADD;QADH,EAFF;MAAA,EAhBJ;IAAA,EADF;EA4BD;;AA1C8C;;AA6CjD,iEAAeX,aAAf;;;;;;;;;;;;;;;;;ACzDA;AACA;;AAKe,MAAMD,SAAN,SAGLc,wEAHK,CAGgB;EAC7BE,QAAQ,GAAG;IACT,OAAO,EAAP;EACD;;EAEDC,MAAM,GAAG;IACP,OACE,gEAAC,6EAAD;MAAqB,KAAK,EAAE,KAAKD,QAAL,EAA5B;MAAA,UACG,KAAKE,eAAL;IADH,EADF;EAKD;;AAX4B;AAHVlB","sources":["webpack:///./app/views/admin/adminWarnings.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport {t} from 'sentry/locale';\nimport AsyncView from 'sentry/views/asyncView';\n\ntype Data = {\n  groups: [groupName: string, grouppedWarnings: string[]][];\n  warnings: string[];\n};\n\ntype State = AsyncView['state'] & {data: Data | null};\n\nclass AdminWarnings extends AsyncView<{}, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/internal/warnings/']];\n  }\n\n  renderBody() {\n    const {data} = this.state;\n\n    if (data === null) {\n      return null;\n    }\n\n    const {groups, warnings} = data;\n\n    return (\n      <div>\n        <h3>{t('System Warnings')}</h3>\n        {!warnings && !groups && t('There are no warnings at this time')}\n\n        {groups.map(([groupName, groupedWarnings]) => (\n          <Fragment key={groupName}>\n            <h4>{groupName}</h4>\n            <ul>\n              {groupedWarnings.map((warning, i) => (\n                <li key={i}>{warning}</li>\n              ))}\n            </ul>\n          </Fragment>\n        ))}\n\n        {warnings.length > 0 && (\n          <Fragment>\n            <h4>Miscellaneous</h4>\n            <ul>\n              {warnings.map((warning, i) => (\n                <li key={i}>{warning}</li>\n              ))}\n            </ul>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AdminWarnings;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["Fragment","t","AsyncView","AdminWarnings","getEndpoints","renderBody","data","state","groups","warnings","map","groupName","groupedWarnings","warning","i","length","AsyncComponent","SentryDocumentTitle","getTitle","render","renderComponent"],"sourceRoot":""}