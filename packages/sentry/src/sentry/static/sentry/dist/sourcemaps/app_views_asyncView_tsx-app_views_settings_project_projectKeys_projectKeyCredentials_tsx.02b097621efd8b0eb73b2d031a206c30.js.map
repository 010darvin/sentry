{"version":3,"file":"chunks/app_views_asyncView_tsx-app_views_settings_project_projectKeys_projectKeyCredentials_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;;AAKe,MAAME,SAAN,SAGLF,wEAHK,CAGgB;EAC7BG,QAAQ,GAAG;IACT,OAAO,EAAP;EACD;;EAEDC,MAAM,GAAG;IACP,OACE,gEAAC,6EAAD;MAAqB,KAAK,EAAE,KAAKD,QAAL,EAA5B;MAAA,UACG,KAAKE,eAAL;IADH,EADF;EAKD;;AAX4B;AAHVH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNrB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMc,aAAa,GAAG;EACpBC,OAAO,EAAE,IADW;EAEpBC,aAAa,EAAE,IAFK;EAGpBC,oBAAoB,EAAE,IAHF;EAIpBC,YAAY,EAAE,IAJM;EAKpBC,UAAU,EAAE,IALQ;EAMpBC,aAAa,EAAE,KANK;EAOpBC,aAAa,EAAE,KAPK;EAQpBC,aAAa,EAAE;AARK,CAAtB;;AAoBA,MAAMC,qBAAN,SAAoCnB,4CAApC,CAA4D;EAAA;IAAA;;IAAA,iGAG3C;MACboB,iBAAiB,EAAE;IADN,CAH2C;;IAAA,+GAOpC,MAAM;MAC1B,KAAKC,QAAL,CAAcC,KAAK,KAAK;QACtBF,iBAAiB,EAAE,CAACE,KAAK,CAACF;MADJ,CAAL,CAAnB;IAGD,CAXyD;EAAA;;EAa1DtB,MAAM,GAAG;IACP,MAAM;MAACsB;IAAD,IAAsB,KAAKE,KAAjC;IACA,MAAM;MACJC,SADI;MAEJC,IAFI;MAGJb,OAHI;MAIJC,aAJI;MAKJC,oBALI;MAMJC,YANI;MAOJC,UAPI;MAQJC,aARI;MASJC,aATI;MAUJC;IAVI,IAWF,KAAKO,KAXT;IAaA,OACE,kEAAC,2CAAD;MAAA,WACGb,aAAa,IACZ,kEAAC,qEAAD;QACE,KAAK,EAAEN,gDAAC,CAAC,KAAD,CADV;QAEE,MAAM,EAAE,KAFV;QAGE,wBAAwB,MAH1B;QAIE,IAAI,EAAEC,kDAAG,CAAC,2DAAD,EAA8D;UACrEmB,IAAI,EAAEf,OAAO,GACX,iEAAC,oEAAD;YAAM,EAAE,EAAC,EAAT;YAAY,OAAO,EAAE,KAAKgB,mBAA1B;YAAA,UACGP,iBAAiB,GACdd,gDAAC,CAAC,qBAAD,CADa,GAEdA,gDAAC,CAAC,qBAAD;UAHP,EADW,GAMT;QAPiE,CAA9D,CAJX;QAAA,WAcE,iEAAC,6EAAD;UAAA,UACGG,wEAAc,CAAC;YACdmB,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAASC,MADF;YAEdC,KAAK,EAAE;UAFO,CAAD;QADjB,EAdF,EAoBGX,iBAAiB,IAChB,iEAAC,WAAD;UACE,KAAK,EAAE,IADT;UAEE,IAAI,EAAEd,gDAAC,CACL,yKADK,CAFT;UAKE,MAAM,EAAE,KALV;UAME,wBAAwB,MAN1B;UAAA,UAQE,iEAAC,6EAAD;YAAA,UACGG,wEAAc,CAAC;cACdmB,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAASG,MADF;cAEdD,KAAK,EAAE;YAFO,CAAD;UADjB;QARF,EArBJ;MAAA,EAFJ,EA2CG,CAACnB,aAAD,IAAkBD,OAAlB,IACC,iEAAC,qEAAD;QACE,KAAK,EAAEL,gDAAC,CAAC,kBAAD,CADV;QAEE,IAAI,EAAEA,gDAAC,CACL,yKADK,CAFT;QAKE,MAAM,EAAE,KALV;QAME,wBAAwB,MAN1B;QAAA,UAQE,iEAAC,6EAAD;UAAA,UACGG,wEAAc,CAAC;YACdmB,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAASG,MADF;YAEdD,KAAK,EAAE;UAFO,CAAD;QADjB;MARF,EA5CJ,EA6DGlB,oBAAoB,IACnB,iEAAC,qEAAD;QACE,KAAK,EAAEP,gDAAC,CAAC,0BAAD,CADV;QAEE,IAAI,EAAEA,gDAAC,CACL,gFADK,CAFT;QAKE,MAAM,EAAE,KALV;QAME,wBAAwB,MAN1B;QAAA,UAQE,iEAAC,6EAAD;UAAA,UACGG,wEAAc,CAAC;YACdmB,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAASI,QADF;YAEdF,KAAK,EAAE;UAFO,CAAD;QADjB;MARF,EA9DJ,EA+EGjB,YAAY,IACX,iEAAC,qEAAD;QACE,KAAK,EAAER,gDAAC,CAAC,mBAAD,CADV;QAEE,IAAI,EAAEC,kDAAG,CACP,sFADO,EAEP;UACEmB,IAAI,EACF,iEAAC,4EAAD;YAAc,IAAI,EAAC,2DAAnB;YAAA;UAAA;QAFJ,CAFO,CAFX;QAYE,MAAM,EAAE,KAZV;QAaE,wBAAwB,MAb1B;QAAA,UAeE,iEAAC,6EAAD;UAAA,UACGjB,wEAAc,CAAC;YACdmB,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAASK,QADF;YAEdH,KAAK,EAAE;UAFO,CAAD;QADjB;MAfF,EAhFJ,EAwGGhB,UAAU,IACT,iEAAC,qEAAD;QACE,KAAK,EAAET,gDAAC,CAAC,0BAAD,CADV;QAEE,IAAI,EAAEA,gDAAC,CAAC,yDAAD,CAFT;QAGE,MAAM,EAAE,KAHV;QAIE,wBAAwB,MAJ1B;QAAA,UAME,iEAAC,6EAAD;UAAA,UACGG,wEAAc,CAAC;YACdmB,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAASM,MAAT,IAAmB,EADZ;YAEdJ,KAAK,EAAE;UAFO,CAAD;QADjB;MANF,EAzGJ,EAwHGf,aAAa,IACZ,iEAAC,qEAAD;QAAO,KAAK,EAAEV,gDAAC,CAAC,YAAD,CAAf;QAA+B,MAAM,MAArC;QAAsC,wBAAwB,MAA9D;QAAA,UACE,iEAAC,6EAAD;UAAA,UACGG,wEAAc,CAAC;YACdmB,KAAK,EAAEJ,IAAI,CAACM,MADE;YAEdC,KAAK,EAAE;UAFO,CAAD;QADjB;MADF,EAzHJ,EAmIGd,aAAa,IACZ,iEAAC,qEAAD;QAAO,KAAK,EAAEX,gDAAC,CAAC,YAAD,CAAf;QAA+B,MAAM,MAArC;QAAsC,wBAAwB,MAA9D;QAAA,UACE,iEAAC,6EAAD;UAAA,UACGG,wEAAc,CAAC;YACdmB,KAAK,EAAEJ,IAAI,CAACQ,MADE;YAEdD,KAAK,EAAE;UAFO,CAAD;QADjB;MADF,EApIJ,EA8IGb,aAAa,IACZ,iEAAC,qEAAD;QAAO,KAAK,EAAEZ,gDAAC,CAAC,YAAD,CAAf;QAA+B,MAAM,MAArC;QAAsC,wBAAwB,MAA9D;QAAA,UACE,iEAAC,6EAAD;UAAA,UACGG,wEAAc,CAAC;YACdmB,KAAK,EAAEL,SADO;YAEdQ,KAAK,EAAE;UAFO,CAAD;QADjB;MADF,EA/IJ;IAAA,EADF;EA2JD;;AAvLyD;;AAAtDZ;;kFAAAA,uCACkBT;;AAyLxB,MAAM0B,WAAW,GAAG,8EAAOlC,qEAAP;EAAA;AAAA,MAAH,aACJM,+DAAK,CAAC,GAAD,CADD,+BAAjB;;AAIA,iEAAeW,qBAAf","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Field from 'sentry/components/forms/field';\nimport TextCopyInput from 'sentry/components/forms/textCopyInput';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nconst DEFAULT_PROPS = {\n  showDsn: true,\n  showDsnPublic: true,\n  showSecurityEndpoint: true,\n  showMinidump: true,\n  showUnreal: true,\n  showPublicKey: false,\n  showSecretKey: false,\n  showProjectId: false,\n};\n\ntype Props = {\n  data: ProjectKey;\n  projectId: string;\n} & typeof DEFAULT_PROPS;\n\ntype State = {\n  showDeprecatedDsn: boolean;\n};\n\nclass ProjectKeyCredentials extends Component<Props, State> {\n  static defaultProps = DEFAULT_PROPS;\n\n  state: State = {\n    showDeprecatedDsn: false,\n  };\n\n  toggleDeprecatedDsn = () => {\n    this.setState(state => ({\n      showDeprecatedDsn: !state.showDeprecatedDsn,\n    }));\n  };\n\n  render() {\n    const {showDeprecatedDsn} = this.state;\n    const {\n      projectId,\n      data,\n      showDsn,\n      showDsnPublic,\n      showSecurityEndpoint,\n      showMinidump,\n      showUnreal,\n      showPublicKey,\n      showSecretKey,\n      showProjectId,\n    } = this.props;\n\n    return (\n      <Fragment>\n        {showDsnPublic && (\n          <Field\n            label={t('DSN')}\n            inline={false}\n            flexibleControlStateSize\n            help={tct('The DSN tells the SDK where to send the events to. [link]', {\n              link: showDsn ? (\n                <Link to=\"\" onClick={this.toggleDeprecatedDsn}>\n                  {showDeprecatedDsn\n                    ? t('Hide deprecated DSN')\n                    : t('Show deprecated DSN')}\n                </Link>\n              ) : null,\n            })}\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.public,\n                fixed: '__DSN__',\n              })}\n            </TextCopyInput>\n            {showDeprecatedDsn && (\n              <StyledField\n                label={null}\n                help={t(\n                  'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n                )}\n                inline={false}\n                flexibleControlStateSize\n              >\n                <TextCopyInput>\n                  {getDynamicText({\n                    value: data.dsn.secret,\n                    fixed: '__DSN_DEPRECATED__',\n                  })}\n                </TextCopyInput>\n              </StyledField>\n            )}\n          </Field>\n        )}\n\n        {/* this edge case should imho not happen, but just to be sure */}\n        {!showDsnPublic && showDsn && (\n          <Field\n            label={t('DSN (Deprecated)')}\n            help={t(\n              'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.secret,\n                fixed: '__DSN_DEPRECATED__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecurityEndpoint && (\n          <Field\n            label={t('Security Header Endpoint')}\n            help={t(\n              'Use your security header endpoint for features like CSP and Expect-CT reports.'\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.security,\n                fixed: '__SECURITY_HEADER_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showMinidump && (\n          <Field\n            label={t('Minidump Endpoint')}\n            help={tct(\n              'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                    minidump crash reports\n                  </ExternalLink>\n                ),\n              }\n            )}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.minidump,\n                fixed: '__MINIDUMP_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showUnreal && (\n          <Field\n            label={t('Unreal Engine 4 Endpoint')}\n            help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n            inline={false}\n            flexibleControlStateSize\n          >\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.dsn.unreal || '',\n                fixed: '__UNREAL_ENDPOINT__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showPublicKey && (\n          <Field label={t('Public Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.public,\n                fixed: '__PUBLICKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showSecretKey && (\n          <Field label={t('Secret Key')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: data.secret,\n                fixed: '__SECRETKEY__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n\n        {showProjectId && (\n          <Field label={t('Project ID')} inline flexibleControlStateSize>\n            <TextCopyInput>\n              {getDynamicText({\n                value: projectId,\n                fixed: '__PROJECTID__',\n              })}\n            </TextCopyInput>\n          </Field>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst StyledField = styled(Field)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Component","Fragment","Field","TextCopyInput","ExternalLink","Link","t","tct","space","getDynamicText","DEFAULT_PROPS","showDsn","showDsnPublic","showSecurityEndpoint","showMinidump","showUnreal","showPublicKey","showSecretKey","showProjectId","ProjectKeyCredentials","showDeprecatedDsn","setState","state","projectId","data","props","link","toggleDeprecatedDsn","value","dsn","public","fixed","secret","security","minidump","unreal","StyledField"],"sourceRoot":""}