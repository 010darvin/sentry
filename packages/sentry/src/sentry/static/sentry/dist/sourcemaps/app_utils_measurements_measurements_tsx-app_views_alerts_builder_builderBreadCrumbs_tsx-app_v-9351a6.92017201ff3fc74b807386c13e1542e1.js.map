{"version":3,"file":"chunks/app_utils_measurements_measurements_tsx-app_views_alerts_builder_builderBreadCrumbs_tsx-app_v-9351a6.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/components/graphic.tsx","webpack:///./app/components/charts/eventsRequest.tsx","webpack:///./app/components/charts/optionSelector.tsx","webpack:///./app/components/numberDragControl.tsx","webpack:///./app/components/selectMembers/index.tsx","webpack:///./app/types/alerts.tsx","webpack:///./app/utils/measurements/measurements.tsx","webpack:///./app/utils/performance/vitals/constants.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/alerts/builder/builderBreadCrumbs.tsx","webpack:///./app/views/alerts/rules/issue/index.tsx","webpack:///./app/views/alerts/rules/issue/memberTeamFields.tsx","webpack:///./app/views/alerts/rules/issue/ruleNode.tsx","webpack:///./app/views/alerts/rules/issue/ruleNodeList.tsx","webpack:///./app/views/alerts/rules/issue/sentryAppRuleModal.tsx","webpack:///./app/views/alerts/rules/issue/setupAlertIntegrationButton.tsx","webpack:///./app/views/alerts/rules/issue/ticketRuleModal.tsx","webpack:///./app/views/alerts/rules/metric/actions.tsx","webpack:///./app/views/alerts/rules/metric/constants.tsx","webpack:///./app/views/alerts/rules/metric/incompatibleAlertQuery.tsx","webpack:///./app/views/alerts/rules/metric/metricField.tsx","webpack:///./app/views/alerts/rules/metric/presetSidebar.tsx","webpack:///./app/views/alerts/rules/metric/ruleConditionsForm.tsx","webpack:///./app/views/alerts/rules/metric/ruleForm.tsx","webpack:///./app/views/alerts/rules/metric/ruleNameOwnerForm.tsx","webpack:///./app/views/alerts/rules/metric/thresholdTypeForm.tsx","webpack:///./app/views/alerts/rules/metric/triggers/actionsPanel/actionSpecificTargetSelector.tsx","webpack:///./app/views/alerts/rules/metric/triggers/actionsPanel/actionTargetSelector.tsx","webpack:///./app/views/alerts/rules/metric/triggers/actionsPanel/deleteActionButton.tsx","webpack:///./app/views/alerts/rules/metric/triggers/actionsPanel/index.tsx","webpack:///./app/views/alerts/rules/metric/triggers/chart/index.tsx","webpack:///./app/views/alerts/rules/metric/triggers/chart/thresholdsChart.tsx","webpack:///./app/views/alerts/rules/metric/triggers/form.tsx","webpack:///./app/views/alerts/rules/metric/triggers/index.tsx","webpack:///./app/views/alerts/rules/metric/triggers/thresholdControl.tsx","webpack:///./app/views/alerts/rules/metric/utils/getEventTypeFilter.tsx","webpack:///./app/views/alerts/rules/metric/utils/getMetricDatasetQueryExtras.tsx","webpack:///./app/views/alerts/rules/metric/utils/hasThresholdValue.tsx","webpack:///./app/views/alerts/rules/metric/utils/isCrashFreeAlert.tsx","webpack:///./app/views/alerts/rules/metric/wizardField.tsx","webpack:///./app/views/alerts/utils/constants.tsx","webpack:///./app/views/alerts/utils/getChangeStatus.tsx","webpack:///./app/views/alerts/utils/getComparisonMarkLines.tsx","webpack:///./app/views/alerts/wizard/options.tsx","webpack:///./app/views/alerts/wizard/utils.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import 'echarts/lib/component/graphic';\n\nimport type {GraphicComponentOption} from 'echarts';\n\n/**\n * eCharts graphic\n *\n * See https://echarts.apache.org/en/option.html#graphic\n */\nexport default function Graphic(props: GraphicComponentOption): GraphicComponentOption {\n  return props;\n}\n","import {PureComponent} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omitBy from 'lodash/omitBy';\n\nimport {doEventsRequest} from 'sentry/actionCreators/events';\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\nimport {\n  canIncludePreviousPeriod,\n  getPreviousSeriesName,\n  isMultiSeriesStats,\n} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {\n  DateString,\n  EventsStats,\n  EventsStatsData,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport {stripEquationPrefix} from 'sentry/utils/discover/fields';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\nexport type TimeSeriesData = {\n  allTimeseriesData?: EventsStatsData;\n  comparisonTimeseriesData?: Series[];\n  originalPreviousTimeseriesData?: EventsStatsData | null;\n  originalTimeseriesData?: EventsStatsData;\n  previousTimeseriesData?: Series[] | null;\n  timeAggregatedData?: Series | {};\n  timeframe?: {end: number; start: number};\n  // timeseries data\n  timeseriesData?: Series[];\n  timeseriesTotals?: {count: number};\n};\n\ntype LoadingStatus = {\n  /**\n   * Whether there was an error retrieving data\n   */\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  errorMessage?: string;\n};\n\n// Can hold additional data from the root an events stat object (eg. start, end, order, isMetricsData).\ninterface AdditionalSeriesInfo {\n  isMetricsData?: boolean;\n}\n\nexport type RenderProps = LoadingStatus &\n  TimeSeriesData & {\n    results?: Series[]; // Chart with multiple series.\n    seriesAdditionalInfo?: Record<string, AdditionalSeriesInfo>;\n  };\n\ntype DefaultProps = {\n  /**\n   * Include data for previous period\n   */\n  includePrevious: boolean;\n  /**\n   * Transform the response data to be something ingestible by charts\n   */\n  includeTransformedData: boolean;\n  /**\n   * Interval to group results in\n   *\n   * e.g. 1d, 1h, 1m, 1s\n   */\n  interval: string;\n  /**\n   * number of rows to return\n   */\n  limit: number;\n  /**\n   * The query string to search events by\n   */\n  query: string;\n  /**\n   * Time delta for comparing intervals of alert metrics, in seconds\n   */\n  comparisonDelta?: number;\n  /**\n   * Absolute end date for query\n   */\n  end?: DateString;\n  /**\n   * Relative time period for query.\n   *\n   * Use `start` and `end` for absolute dates.\n   *\n   * e.g. 24h, 7d, 30d\n   */\n  period?: string | null;\n  /**\n   * Absolute start date for query\n   */\n  start?: DateString;\n};\n\ntype EventsRequestPartialProps = {\n  /**\n   * API client instance\n   */\n  api: Client;\n  children: (renderProps: RenderProps) => React.ReactNode;\n  organization: OrganizationSummary;\n  /**\n   * Whether or not to include the last partial bucket. This happens for example when the\n   * current time is 11:26 and the last bucket ranges from 11:25-11:30. This means that\n   * the last bucket contains 1 minute worth of data while the rest contains 5 minutes.\n   *\n   * This flag indicates whether or not this last bucket should be included in the result.\n   */\n  partial: boolean;\n  /**\n   * Discover needs confirmation to run >30 day >10 project queries,\n   * optional and when not passed confirmation is not required.\n   */\n  confirmedQuery?: boolean;\n  /**\n   * Name used for display current series dataset tooltip\n   */\n  currentSeriesNames?: string[];\n  /**\n   * Optional callback to further process raw events request response data\n   */\n  dataLoadedCallback?: (any: EventsStats | MultiSeriesEventsStats | null) => void;\n  /**\n   * List of environments to query\n   */\n  environment?: Readonly<string[]>;\n  /**\n   * Is query out of retention\n   */\n  expired?: boolean;\n  /**\n   * List of fields to group with when doing a topEvents request.\n   */\n  field?: string[];\n  /**\n   * Allows overriding the pathname.\n   */\n  generatePathname?: (org: OrganizationSummary) => string;\n  /**\n   * Hide error toast (used for pages which also query eventsV2). Stops error appearing as a toast.\n   */\n  hideError?: boolean;\n  /**\n   * Initial loading state\n   */\n  loading?: boolean;\n  /**\n   * Query name used for displaying error toast if it is out of retention\n   */\n  name?: string;\n  /**\n   * A way to control error if error handling is not owned by the toast.\n   */\n  onError?: (error: string) => void;\n  /**\n   * How to order results when getting top events.\n   */\n  orderby?: string;\n  previousSeriesNames?: string[];\n  /**\n   * List of project ids to query\n   */\n  project?: Readonly<number[]>;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * A unique name for what's triggering this request, see organization_events_stats for an allowlist\n   */\n  referrer?: string;\n  /**\n   * Should loading be shown.\n   */\n  showLoading?: boolean;\n  /**\n   * List of team ids to query\n   */\n  team?: Readonly<string | string[]>;\n  /**\n   * The number of top results to get. When set a multi-series result will be returned\n   * in the `results` child render function.\n   */\n  topEvents?: number;\n  /**\n   * Whether or not to zerofill results\n   */\n  withoutZerofill?: boolean;\n  /**\n   * The yAxis being plotted. If multiple yAxis are requested,\n   * the child render function will be called with `results`\n   */\n  yAxis?: string | string[];\n};\n\ntype TimeAggregationProps =\n  | {includeTimeAggregation: true; timeAggregationSeriesName: string}\n  | {includeTimeAggregation?: false; timeAggregationSeriesName?: undefined};\n\nexport type EventsRequestProps = DefaultProps &\n  TimeAggregationProps &\n  EventsRequestPartialProps;\n\ntype EventsRequestState = {\n  errored: boolean;\n  fetchedWithPrevious: boolean;\n  reloading: boolean;\n  timeseriesData: null | EventsStats | MultiSeriesEventsStats;\n  errorMessage?: string;\n};\n\nconst propNamesToIgnore = [\n  'api',\n  'children',\n  'organization',\n  'loading',\n  'queryBatching',\n  'generatePathname',\n];\nconst omitIgnoredProps = (props: EventsRequestProps) =>\n  omitBy(props, (_value, key) => propNamesToIgnore.includes(key));\n\nclass EventsRequest extends PureComponent<EventsRequestProps, EventsRequestState> {\n  static defaultProps: DefaultProps = {\n    period: undefined,\n    start: null,\n    end: null,\n    interval: '1d',\n    comparisonDelta: undefined,\n    limit: 15,\n    query: '',\n    includePrevious: true,\n    includeTransformedData: true,\n  };\n\n  state: EventsRequestState = {\n    reloading: !!this.props.loading,\n    errored: false,\n    timeseriesData: null,\n    fetchedWithPrevious: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: EventsRequestProps) {\n    if (isEqual(omitIgnoredProps(prevProps), omitIgnoredProps(this.props))) {\n      return;\n    }\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  private unmounting: boolean = false;\n\n  fetchData = async () => {\n    const {api, confirmedQuery, onError, expired, name, hideError, ...props} = this.props;\n    let timeseriesData: EventsStats | MultiSeriesEventsStats | null = null;\n\n    if (confirmedQuery === false) {\n      return;\n    }\n\n    this.setState(state => ({\n      reloading: state.timeseriesData !== null,\n      errored: false,\n      errorMessage: undefined,\n    }));\n\n    let errorMessage;\n    if (expired) {\n      errorMessage = t(\n        '%s has an invalid date range. Please try a more recent date range.',\n        name\n      );\n      addErrorMessage(errorMessage, {append: true});\n\n      this.setState({\n        errored: true,\n        errorMessage,\n      });\n    } else {\n      try {\n        api.clear();\n        timeseriesData = await doEventsRequest(api, props);\n      } catch (resp) {\n        if (resp && resp.responseJSON && resp.responseJSON.detail) {\n          errorMessage = resp.responseJSON.detail;\n        } else {\n          errorMessage = t('Error loading chart data');\n        }\n        if (!hideError) {\n          addErrorMessage(errorMessage);\n        }\n        if (onError) {\n          onError(errorMessage);\n        }\n        this.setState({\n          errored: true,\n          errorMessage,\n        });\n      }\n    }\n\n    if (this.unmounting) {\n      return;\n    }\n\n    this.setState({\n      reloading: false,\n      timeseriesData,\n      fetchedWithPrevious: props.includePrevious,\n    });\n    if (props.dataLoadedCallback) {\n      props.dataLoadedCallback(timeseriesData);\n    }\n  };\n\n  /**\n   * Retrieves dataset for the current period (since data can potentially\n   * contain previous period's data), as well as the previous period if\n   * possible.\n   *\n   * Returns `null` if data does not exist\n   */\n  getData = (\n    data: EventsStatsData\n  ): {current: EventsStatsData; previous: EventsStatsData | null} => {\n    const {fetchedWithPrevious} = this.state;\n    const {period, includePrevious} = this.props;\n\n    const hasPreviousPeriod =\n      fetchedWithPrevious || canIncludePreviousPeriod(includePrevious, period);\n    // Take the floor just in case, but data should always be divisible by 2\n    const dataMiddleIndex = Math.floor(data.length / 2);\n    return {\n      current: hasPreviousPeriod ? data.slice(dataMiddleIndex) : data,\n      previous: hasPreviousPeriod ? data.slice(0, dataMiddleIndex) : null,\n    };\n  };\n\n  // This aggregates all values per `timestamp`\n  calculateTotalsPerTimestamp(\n    data: EventsStatsData,\n    getName: (\n      timestamp: number,\n      countArray: {count: number}[],\n      i: number\n    ) => number = timestamp => timestamp * 1000\n  ): SeriesDataUnit[] {\n    return data.map(([timestamp, countArray], i) => ({\n      name: getName(timestamp, countArray, i),\n      value: countArray.reduce((acc, {count}) => acc + count, 0),\n    }));\n  }\n\n  /**\n   * Get previous period data, but transform timestamps so that data fits unto\n   * the current period's data axis\n   */\n  transformPreviousPeriodData(\n    current: EventsStatsData,\n    previous: EventsStatsData | null,\n    seriesName?: string\n  ): Series | null {\n    // Need the current period data array so we can take the timestamp\n    // so we can be sure the data lines up\n    if (!previous) {\n      return null;\n    }\n\n    return {\n      seriesName: seriesName ?? 'Previous',\n      data: this.calculateTotalsPerTimestamp(\n        previous,\n        (_timestamp, _countArray, i) => current[i][0] * 1000\n      ),\n      stack: 'previous',\n    };\n  }\n\n  /**\n   * Aggregate all counts for each time stamp\n   */\n  transformAggregatedTimeseries(data: EventsStatsData, seriesName: string = ''): Series {\n    return {\n      seriesName,\n      data: this.calculateTotalsPerTimestamp(data),\n    };\n  }\n\n  /**\n   * Transforms query response into timeseries data to be used in a chart\n   */\n  transformTimeseriesData(data: EventsStatsData, seriesName?: string): Series[] {\n    return [\n      {\n        seriesName: seriesName || 'Current',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce((acc, {count}) => acc + count, 0),\n        })),\n      },\n    ];\n  }\n\n  /**\n   * Transforms comparisonCount in query response into timeseries data to be used in a comparison chart for change alerts\n   */\n  transformComparisonTimeseriesData(data: EventsStatsData): Series[] {\n    return [\n      {\n        seriesName: 'comparisonCount()',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce(\n            (acc, {comparisonCount}) => acc + (comparisonCount ?? 0),\n            0\n          ),\n        })),\n      },\n    ];\n  }\n\n  processData(response: EventsStats, seriesIndex: number = 0, seriesName?: string) {\n    const {data, isMetricsData, totals} = response;\n    const {\n      includeTransformedData,\n      includeTimeAggregation,\n      timeAggregationSeriesName,\n      currentSeriesNames,\n      previousSeriesNames,\n      comparisonDelta,\n    } = this.props;\n    const {current, previous} = this.getData(data);\n    const transformedData = includeTransformedData\n      ? this.transformTimeseriesData(\n          current,\n          seriesName ?? currentSeriesNames?.[seriesIndex]\n        )\n      : [];\n    const transformedComparisonData =\n      includeTransformedData && comparisonDelta\n        ? this.transformComparisonTimeseriesData(current)\n        : [];\n    const previousData = includeTransformedData\n      ? this.transformPreviousPeriodData(\n          current,\n          previous,\n          (seriesName ? getPreviousSeriesName(seriesName) : undefined) ??\n            previousSeriesNames?.[seriesIndex]\n        )\n      : null;\n    const timeAggregatedData = includeTimeAggregation\n      ? this.transformAggregatedTimeseries(current, timeAggregationSeriesName || '')\n      : {};\n    const timeframe =\n      response.start && response.end\n        ? !previous\n          ? {\n              start: response.start * 1000,\n              end: response.end * 1000,\n            }\n          : {\n              // Find the midpoint of start & end since previous includes 2x data\n              start: (response.start + response.end) * 500,\n              end: response.end * 1000,\n            }\n        : undefined;\n\n    const processedData = {\n      data: transformedData,\n      comparisonData: transformedComparisonData,\n      allData: data,\n      originalData: current,\n      totals,\n      isMetricsData,\n      originalPreviousData: previous,\n      previousData,\n      timeAggregatedData,\n      timeframe,\n    };\n\n    return processedData;\n  }\n\n  render() {\n    const {children, showLoading, ...props} = this.props;\n    const {topEvents} = this.props;\n    const {timeseriesData, reloading, errored, errorMessage} = this.state;\n    // Is \"loading\" if data is null\n    const loading = this.props.loading || timeseriesData === null;\n\n    if (showLoading && loading) {\n      return <LoadingPanel data-test-id=\"events-request-loading\" />;\n    }\n    if (isMultiSeriesStats(timeseriesData, defined(topEvents))) {\n      // Convert multi-series results into chartable series. Multi series results\n      // are created when multiple yAxis are used or a topEvents request is made.\n      // Convert the timeseries data into a multi-series result set.\n      // As the server will have replied with a map like:\n      // {[titleString: string]: EventsStats}\n      let timeframe: {end: number; start: number} | undefined = undefined;\n      const seriesAdditionalInfo: Record<string, AdditionalSeriesInfo> = {};\n      const sortedTimeseriesData = Object.keys(timeseriesData)\n        .map(\n          (\n            seriesName: string,\n            index: number\n          ): [number, Series, Series | null, AdditionalSeriesInfo] => {\n            const seriesData: EventsStats = timeseriesData[seriesName];\n            const processedData = this.processData(\n              seriesData,\n              index,\n              stripEquationPrefix(seriesName)\n            );\n            if (!timeframe) {\n              timeframe = processedData.timeframe;\n            }\n            if (processedData.isMetricsData) {\n              seriesAdditionalInfo[seriesName] = {\n                isMetricsData: processedData.isMetricsData,\n              };\n            }\n            return [\n              seriesData.order || 0,\n              processedData.data[0],\n              processedData.previousData,\n              {isMetricsData: processedData.isMetricsData},\n            ];\n          }\n        )\n        .sort((a, b) => a[0] - b[0]);\n      const results: Series[] = sortedTimeseriesData.map(item => {\n        return item[1];\n      });\n      const previousTimeseriesData: Series[] | undefined = sortedTimeseriesData.some(\n        item => item[2] === null\n      )\n        ? undefined\n        : sortedTimeseriesData.map(item => {\n            return item[2] as Series;\n          });\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        results,\n        timeframe,\n        previousTimeseriesData,\n        seriesAdditionalInfo,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    if (timeseriesData) {\n      const {\n        data: transformedTimeseriesData,\n        comparisonData: transformedComparisonTimeseriesData,\n        allData: allTimeseriesData,\n        originalData: originalTimeseriesData,\n        totals: timeseriesTotals,\n        originalPreviousData: originalPreviousTimeseriesData,\n        previousData: previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        isMetricsData,\n      } = this.processData(timeseriesData);\n\n      const seriesAdditionalInfo = {\n        [this.props.currentSeriesNames?.[0] ?? 'current']: {isMetricsData},\n      };\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        // meta data,\n        seriesAdditionalInfo,\n        // timeseries data\n        timeseriesData: transformedTimeseriesData,\n        comparisonTimeseriesData: transformedComparisonTimeseriesData,\n        allTimeseriesData,\n        originalTimeseriesData,\n        timeseriesTotals,\n        originalPreviousTimeseriesData,\n        previousTimeseriesData: previousTimeseriesData\n          ? [previousTimeseriesData]\n          : previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    return children({\n      loading,\n      reloading,\n      errored,\n      errorMessage,\n      ...props,\n    });\n  }\n}\nexport default EventsRequest;\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport Truncate from 'sentry/components/truncate';\nimport {SelectValue} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\ntype BaseProps = React.ComponentProps<typeof CompactSelect> & {\n  options: SelectValue<string>[];\n  title: string;\n  featureType?: 'alpha' | 'beta' | 'new';\n};\n\ntype SingleProps = BaseProps & {\n  onChange: (value: string) => void;\n  selected: string;\n  multiple?: false;\n};\ntype MultipleProps = BaseProps & {\n  multiple: true;\n  onChange: (value: string[]) => void;\n  selected: string[];\n};\n\nfunction OptionSelector({\n  options,\n  onChange,\n  selected,\n  title,\n  featureType,\n  multiple,\n  ...rest\n}: SingleProps | MultipleProps) {\n  const mappedOptions = useMemo(() => {\n    return options.map(opt => ({\n      ...opt,\n      label: <Truncate value={String(opt.label)} maxLength={60} expandDirection=\"left\" />,\n    }));\n  }, [options]);\n\n  function onValueChange(option) {\n    onChange(multiple ? option.map(o => o.value) : option.value);\n  }\n\n  function isOptionDisabled(option) {\n    return (\n      // Option is explicitly marked as disabled\n      option.disabled ||\n      // The user has reached the maximum number of selections (3), and the option hasn't\n      // yet been selected. These options should be disabled to visually indicate that the\n      // user has reached the max.\n      (multiple && selected.length === 3 && !selected.includes(option.value))\n    );\n  }\n\n  return (\n    <CompactSelect\n      size=\"sm\"\n      options={mappedOptions}\n      value={selected}\n      onChange={onValueChange}\n      isOptionDisabled={isOptionDisabled}\n      multiple={multiple}\n      triggerProps={{\n        borderless: true,\n        prefix: (\n          <Fragment>\n            {title}\n            {defined(featureType) ? <StyledFeatureBadge type={featureType} /> : null}\n          </Fragment>\n        ),\n      }}\n      placement=\"bottom right\"\n      {...rest}\n    />\n  );\n}\n\nconst StyledFeatureBadge = styled(FeatureBadge)`\n  margin-left: 0px;\n`;\n\nexport default OptionSelector;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {IconArrow} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\n\ntype NumberDragControlProps = {\n  onChange: (delta: number, event: React.MouseEvent<HTMLDivElement>) => void;\n  axis?: 'x' | 'y';\n  /**\n   * The value to increment by if the shift key is held. Defaults to 1\n   */\n  shiftStep?: number;\n  /**\n   * The value to increment by as the mouse is dragged. Defaults to 1\n   */\n  step?: number;\n};\n\ntype Props = Omit<React.HTMLAttributes<HTMLDivElement>, keyof NumberDragControlProps> &\n  NumberDragControlProps;\n\ntype State = {\n  isClicked: boolean;\n};\n\nclass NumberDragControl extends Component<Props, State> {\n  state: State = {\n    isClicked: false,\n  };\n\n  render() {\n    const {onChange, axis, step, shiftStep, ...props} = this.props;\n    const isX = (axis ?? 'x') === 'x';\n\n    return (\n      <Wrapper\n        {...props}\n        onMouseDown={(event: React.MouseEvent<HTMLDivElement>) => {\n          if (event.button !== 0) {\n            return;\n          }\n\n          // XXX(epurkhiser): We can remove this later, just curious if people\n          // are actually using the drag control\n          trackAnalyticsEvent({\n            eventName: 'Number Drag Control: Clicked',\n            eventKey: 'number_drag_control.clicked',\n            organization_id: null,\n          });\n\n          event.currentTarget.requestPointerLock();\n          this.setState({isClicked: true});\n        }}\n        onMouseUp={() => {\n          document.exitPointerLock();\n          this.setState({isClicked: false});\n        }}\n        onMouseMove={(event: React.MouseEvent<HTMLDivElement>) => {\n          if (!this.state.isClicked) {\n            return;\n          }\n          const delta = isX ? event.movementX : event.movementY * -1;\n          const deltaOne = delta > 0 ? Math.ceil(delta / 100) : Math.floor(delta / 100);\n          const deltaStep = deltaOne * ((event.shiftKey ? shiftStep : step) ?? 1);\n\n          onChange(deltaStep, event);\n        }}\n        isActive={this.state.isClicked}\n        isX={isX}\n      >\n        <IconArrow direction={isX ? 'left' : 'up'} size=\"8px\" />\n        <IconArrow direction={isX ? 'right' : 'down'} size=\"8px\" />\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('div')<{isActive: boolean; isX: boolean}>`\n  display: grid;\n  padding: ${space(0.5)};\n  ${p =>\n    p.isX\n      ? 'grid-template-columns: max-content max-content'\n      : 'grid-template-rows: max-content max-content'};\n  cursor: ${p => (p.isX ? 'ew-resize' : 'ns-resize')};\n  color: ${p => (p.isActive ? p.theme.gray500 : p.theme.gray300)};\n  background: ${p => p.isActive && p.theme.backgroundSecondary};\n  border-radius: 2px;\n`;\n\nexport default NumberDragControl;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'sentry/api';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport IdBadge from 'sentry/components/idBadge';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport {Member, Organization, Project, User} from 'sentry/types';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport withApi from 'sentry/utils/withApi';\n\nconst getSearchKeyForUser = (user: User) =>\n  `${user.email && user.email.toLowerCase()} ${user.name && user.name.toLowerCase()}`;\n\ntype MentionableUser = {\n  actor: {\n    id: string;\n    name: string;\n    type: 'user';\n  };\n  label: React.ReactElement;\n  searchKey: string;\n  value: string;\n  disabled?: boolean;\n};\n\ntype Props = {\n  api: Client;\n  onChange: (value: any) => any;\n  organization: Organization;\n  value: any;\n  disabled?: boolean;\n  onInputChange?: (value: any) => any;\n  placeholder?: string;\n  project?: Project;\n  styles?: {control?: (provided: any) => any};\n};\n\ntype State = {\n  inputValue: string;\n  loading: boolean;\n  memberListLoading: boolean;\n  options: MentionableUser[] | null;\n};\n\ntype FilterOption<T> = {\n  data: T;\n  label: React.ReactNode;\n  value: string;\n};\n\n/**\n * A component that allows you to select either members and/or teams\n */\nclass SelectMembers extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    inputValue: '',\n    options: null,\n    memberListLoading: !MemberListStore.isLoaded(),\n  };\n\n  componentWillUnmount() {\n    this.unlisteners.forEach(callIfFunction);\n  }\n\n  unlisteners = [\n    MemberListStore.listen(() => {\n      this.setState({\n        memberListLoading: !MemberListStore.isLoaded(),\n      });\n    }, undefined),\n  ];\n\n  renderUserBadge = (user: User) => (\n    <IdBadge avatarSize={24} user={user} hideEmail useLink={false} />\n  );\n\n  createMentionableUser = (user: User): MentionableUser => ({\n    value: user.id,\n    label: this.renderUserBadge(user),\n    searchKey: getSearchKeyForUser(user),\n    actor: {\n      type: 'user',\n      id: user.id,\n      name: user.name,\n    },\n  });\n\n  createUnmentionableUser = ({user}) => ({\n    ...this.createMentionableUser(user),\n    disabled: true,\n    label: (\n      <DisabledLabel>\n        <Tooltip\n          position=\"left\"\n          title={t('%s is not a member of project', user.name || user.email)}\n        >\n          {this.renderUserBadge(user)}\n        </Tooltip>\n      </DisabledLabel>\n    ),\n  });\n\n  getMentionableUsers() {\n    return MemberListStore.getAll().map(this.createMentionableUser);\n  }\n\n  handleChange = newValue => {\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = inputValue => {\n    this.setState({inputValue});\n\n    if (this.props.onInputChange) {\n      this.props.onInputChange(inputValue);\n    }\n  };\n\n  queryMembers = debounce((query, cb) => {\n    const {api, organization} = this.props;\n\n    // Because this function is debounced, the component can potentially be\n    // unmounted before this fires, in which case, `api` is null\n    if (!api) {\n      return null;\n    }\n\n    return api\n      .requestPromise(`/organizations/${organization.slug}/members/`, {\n        query: {query},\n      })\n      .then(\n        (data: Member[]) => cb(null, data),\n        err => cb(err)\n      );\n  }, 250);\n\n  handleLoadOptions = (): Promise<MentionableUser[]> => {\n    const usersInProject = this.getMentionableUsers();\n    const usersInProjectById = usersInProject.map(({actor}) => actor.id);\n\n    // Return a promise for `react-select`\n    return new Promise((resolve, reject) => {\n      this.queryMembers(this.state.inputValue, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    })\n      .then(\n        members =>\n          // Be careful here as we actually want the `users` object, otherwise it means user\n          // has not registered for sentry yet, but has been invited\n          (members\n            ? (members as Member[])\n                .filter(({user}) => user && usersInProjectById.indexOf(user.id) === -1)\n                .map(this.createUnmentionableUser)\n            : []) as MentionableUser[]\n      )\n      .then((members: MentionableUser[]) => {\n        const options = [...usersInProject, ...members];\n        this.setState({options});\n        return options;\n      });\n  };\n\n  render() {\n    const {placeholder, styles} = this.props;\n\n    // If memberList is still loading we need to disable a placeholder Select,\n    // otherwise `react-select` will call `loadOptions` and prematurely load\n    // options\n    if (this.state.memberListLoading) {\n      return <StyledSelectControl isDisabled placeholder={t('Loading')} />;\n    }\n\n    return (\n      <StyledSelectControl\n        filterOption={(option: FilterOption<MentionableUser>, filterText: string) =>\n          option?.data?.searchKey?.indexOf(filterText) > -1\n        }\n        loadOptions={this.handleLoadOptions}\n        defaultOptions\n        async\n        isDisabled={this.props.disabled}\n        cacheOptions={false}\n        placeholder={placeholder}\n        onInputChange={this.handleInputChange}\n        onChange={this.handleChange}\n        value={this.state.options?.find(({value}) => value === this.props.value)}\n        styles={{\n          ...(styles ?? {}),\n          option: (provided, state: any) => ({\n            ...provided,\n            svg: {\n              color: state.isSelected && state.theme.white,\n            },\n          }),\n        }}\n      />\n    );\n  }\n}\n\nconst DisabledLabel = styled('div')`\n  display: flex;\n  opacity: 0.5;\n  overflow: hidden; /* Needed so that \"Add to team\" button can fit */\n`;\n\nconst StyledSelectControl = styled(SelectControl)`\n  .Select-value {\n    display: flex;\n    align-items: center;\n  }\n  .Select-input {\n    margin-left: 32px;\n  }\n`;\n\nexport default withApi(SelectMembers);\n","import type {SchemaFormConfig} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\n\nimport type {IssueConfigField} from './integrations';\n\ntype IssueAlertRuleFormField =\n  | {\n      type: 'choice';\n      choices?: [string, string][];\n      initial?: string;\n      placeholder?: string;\n    }\n  | {\n      type: 'string';\n      initial?: string;\n      placeholder?: string;\n    }\n  | {\n      type: 'number';\n      initial?: string;\n      placeholder?: number | string;\n    };\n\n/**\n * These templates that tell the UI how to render the action or condition\n * and what fields it needs\n */\nexport interface IssueAlertRuleActionTemplate {\n  enabled: boolean;\n  id: string;\n  label: string;\n  name: string;\n  prompt: string;\n  actionType?: 'ticket' | 'sentryapp';\n  formFields?:\n    | {\n        [key: string]: IssueAlertRuleFormField;\n      }\n    | SchemaFormConfig;\n  link?: string;\n  sentryAppInstallationUuid?: string;\n  ticketType?: string;\n}\nexport type IssueAlertRuleConditionTemplate = IssueAlertRuleActionTemplate;\n\n/**\n * These are the action or condition data that the user is editing or has saved.\n */\nexport interface IssueAlertRuleAction\n  extends Omit<IssueAlertRuleActionTemplate, 'formFields' | 'enabled'> {\n  // These are the same values as the keys in `formFields` for a template\n  [key: string]: any;\n  dynamic_form_fields?: IssueConfigField[];\n}\n\nexport type IssueAlertRuleCondition = Omit<\n  IssueAlertRuleConditionTemplate,\n  'formFields' | 'enabled'\n> & {\n  dynamic_form_fields?: IssueConfigField[];\n} & {\n  // These are the same values as the keys in `formFields` for a template\n  [key: string]: number | string;\n};\n\nexport interface UnsavedIssueAlertRule {\n  /** When an issue matches [actionMatch] of the following */\n  actionMatch: 'all' | 'any' | 'none';\n  actions: IssueAlertRuleAction[];\n  conditions: IssueAlertRuleCondition[];\n  /** If that issue has [filterMatch] of these properties */\n  filterMatch: 'all' | 'any' | 'none';\n  filters: IssueAlertRuleCondition[];\n  frequency: number;\n  name: string;\n  environment?: null | string;\n  owner?: string | null;\n}\n\n// Issue-based alert rule\nexport interface IssueAlertRule extends UnsavedIssueAlertRule {\n  createdBy: {email: string; id: number; name: string} | null;\n  dateCreated: string;\n  id: string;\n  projects: string[];\n  errors?: {detail: string}[];\n  lastTriggered?: string;\n}\n\n// Project's alert rule stats\nexport type ProjectAlertRuleStats = {\n  count: number;\n  date: string;\n};\n\nexport enum MailActionTargetType {\n  IssueOwners = 'IssueOwners',\n  Team = 'Team',\n  Member = 'Member',\n  ReleaseMembers = 'ReleaseMembers',\n}\n\nexport enum AssigneeTargetType {\n  Unassigned = 'Unassigned',\n  Team = 'Team',\n  Member = 'Member',\n}\n\nexport type NoteType = {\n  mentions: string[];\n  text: string;\n};\n","import {Fragment} from 'react';\n\nimport {\n  MOBILE_VITAL_DETAILS,\n  WEB_VITAL_DETAILS,\n} from 'sentry/utils/performance/vitals/constants';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nimport {MobileVital, WebVital} from '../fields';\n\nexport type Measurement = {\n  key: string;\n  name: string;\n};\n\nexport type MeasurementCollection = Record<string, Measurement>;\n\ntype VitalType = WebVital | MobileVital;\n\nfunction measurementsFromDetails(\n  details: Partial<Record<VitalType, Vital>>\n): MeasurementCollection {\n  return Object.fromEntries(\n    Object.entries(details).map(([key, value]) => {\n      const newValue: Measurement = {\n        name: value.name,\n        key,\n      };\n      return [key, newValue];\n    })\n  );\n}\n\nconst MOBILE_MEASUREMENTS = measurementsFromDetails(MOBILE_VITAL_DETAILS);\nconst WEB_MEASUREMENTS = measurementsFromDetails(WEB_VITAL_DETAILS);\n\nexport function getMeasurements() {\n  return {...WEB_MEASUREMENTS, ...MOBILE_MEASUREMENTS};\n}\n\ntype ChildrenProps = {\n  measurements: MeasurementCollection;\n};\n\ntype Props = {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction Measurements({children}: Props) {\n  const measurements = getMeasurements();\n  return <Fragment>{children({measurements})}</Fragment>;\n}\n\nexport default Measurements;\n","import {t} from 'sentry/locale';\nimport {measurementType} from 'sentry/utils/discover/fields';\nimport {MobileVital, WebVital} from 'sentry/utils/fields';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    poorThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    poorThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\nexport const MOBILE_VITAL_DETAILS: Record<MobileVital, Vital> = {\n  [MobileVital.AppStartCold]: {\n    slug: 'app_start_cold',\n    name: t('App Start Cold'),\n    description: t(\n      'Cold start is a measure of the application start up time from scratch.'\n    ),\n    type: measurementType(MobileVital.AppStartCold),\n  },\n  [MobileVital.AppStartWarm]: {\n    slug: 'app_start_warm',\n    name: t('App Start Warm'),\n    description: t(\n      'Warm start is a measure of the application start up time while still in memory.'\n    ),\n    type: measurementType(MobileVital.AppStartWarm),\n  },\n  [MobileVital.FramesTotal]: {\n    slug: 'frames_total',\n    name: t('Total Frames'),\n    description: t(\n      'Total frames is a count of the number of frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesTotal),\n  },\n  [MobileVital.FramesSlow]: {\n    slug: 'frames_slow',\n    name: t('Slow Frames'),\n    description: t(\n      'Slow frames is a count of the number of slow frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesSlow),\n  },\n  [MobileVital.FramesFrozen]: {\n    slug: 'frames_frozen',\n    name: t('Frozen Frames'),\n    description: t(\n      'Frozen frames is a count of the number of frozen frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesFrozen),\n  },\n  [MobileVital.FramesSlowRate]: {\n    slug: 'frames_slow_rate',\n    name: t('Slow Frames Rate'),\n    description: t(\n      'Slow Frames Rate is the percentage of frames recorded within a transaction that is considered slow.'\n    ),\n    type: measurementType(MobileVital.FramesSlowRate),\n  },\n  [MobileVital.FramesFrozenRate]: {\n    slug: 'frames_frozen_rate',\n    name: t('Frozen Frames Rate'),\n    description: t(\n      'Frozen Frames Rate is the percentage of frames recorded within a transaction that is considered frozen.'\n    ),\n    type: measurementType(MobileVital.FramesFrozenRate),\n  },\n  [MobileVital.StallCount]: {\n    slug: 'stall_count',\n    name: t('Stalls'),\n    description: t(\n      'Stalls is the number of times the application stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallCount),\n  },\n  [MobileVital.StallTotalTime]: {\n    slug: 'stall_total_time',\n    name: t('Total Stall Time'),\n    description: t(\n      'Stall Total Time is the total amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallTotalTime),\n  },\n  [MobileVital.StallLongestTime]: {\n    slug: 'stall_longest_time',\n    name: t('Longest Stall Time'),\n    description: t(\n      'Stall Longest Time is the longest amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallLongestTime),\n  },\n  [MobileVital.StallPercentage]: {\n    slug: 'stall_percentage',\n    name: t('Stall Percentage'),\n    description: t(\n      'Stall Percentage is the percentage of the transaction duration the application was stalled.'\n    ),\n    type: measurementType(MobileVital.StallPercentage),\n  },\n};\n\nexport enum Browser {\n  CHROME = 'Chrome',\n  EDGE = 'Edge',\n  OPERA = 'Opera',\n  FIREFOX = 'Firefox',\n  SAFARI = 'Safari',\n  IE = 'IE',\n}\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import styled from '@emotion/styled';\nimport type {Location} from 'history';\n\nimport Breadcrumbs, {Crumb, CrumbDropdown} from 'sentry/components/breadcrumbs';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport type {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ninterface Props {\n  location: Location;\n  organization: Organization;\n  projectSlug: string;\n  routes: RouteWithName[];\n  title: string;\n  alertName?: string;\n  alertType?: string;\n  canChangeProject?: boolean;\n}\n\nfunction BuilderBreadCrumbs({title, alertName, projectSlug, organization}: Props) {\n  const crumbs: (Crumb | CrumbDropdown)[] = [\n    {\n      to: `/organizations/${organization.slug}/alerts/rules/`,\n      label: t('Alerts'),\n      preservePageFilters: true,\n    },\n    {\n      label: title,\n      ...(alertName\n        ? {\n            to: `/organizations/${organization.slug}/alerts/${projectSlug}/wizard`,\n            preservePageFilters: true,\n          }\n        : {}),\n    },\n  ];\n  if (alertName) {\n    crumbs.push({label: alertName});\n  }\n\n  return <StyledBreadcrumbs crumbs={crumbs} />;\n}\n\nconst StyledBreadcrumbs = styled(Breadcrumbs)`\n  font-size: 18px;\n  margin-bottom: ${space(3)};\n`;\n\nexport default BuilderBreadCrumbs;\n","import {ChangeEvent, ReactNode} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport {components} from 'react-select';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {Location} from 'history';\nimport cloneDeep from 'lodash/cloneDeep';\nimport omit from 'lodash/omit';\nimport set from 'lodash/set';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {updateOnboardingTask} from 'sentry/actionCreators/onboardingTasks';\nimport Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport Field from 'sentry/components/forms/field';\nimport FieldHelp from 'sentry/components/forms/field/fieldHelp';\nimport Form from 'sentry/components/forms/form';\nimport FormField from 'sentry/components/forms/formField';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport SelectField from 'sentry/components/forms/selectField';\nimport TeamSelector from 'sentry/components/forms/teamSelector';\nimport IdBadge from 'sentry/components/idBadge';\nimport Input from 'sentry/components/input';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport LoadingMask from 'sentry/components/loadingMask';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {ALL_ENVIRONMENTS_KEY} from 'sentry/constants';\nimport {IconChevron} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  Environment,\n  IssueOwnership,\n  OnboardingTaskKey,\n  Organization,\n  Project,\n  Team,\n} from 'sentry/types';\nimport {\n  IssueAlertRule,\n  IssueAlertRuleAction,\n  IssueAlertRuleActionTemplate,\n  IssueAlertRuleConditionTemplate,\n  UnsavedIssueAlertRule,\n} from 'sentry/types/alerts';\nimport {metric} from 'sentry/utils/analytics';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {getDisplayName} from 'sentry/utils/environment';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\nimport {\n  CHANGE_ALERT_CONDITION_IDS,\n  CHANGE_ALERT_PLACEHOLDERS_LABELS,\n} from 'sentry/views/alerts/utils/constants';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport RuleNodeList from './ruleNodeList';\nimport SetupAlertIntegrationButton from './setupAlertIntegrationButton';\n\nconst FREQUENCY_OPTIONS = [\n  {value: '5', label: t('5 minutes')},\n  {value: '10', label: t('10 minutes')},\n  {value: '30', label: t('30 minutes')},\n  {value: '60', label: t('60 minutes')},\n  {value: '180', label: t('3 hours')},\n  {value: '720', label: t('12 hours')},\n  {value: '1440', label: t('24 hours')},\n  {value: '10080', label: t('1 week')},\n  {value: '43200', label: t('30 days')},\n];\n\nconst ACTION_MATCH_OPTIONS = [\n  {value: 'all', label: t('all')},\n  {value: 'any', label: t('any')},\n  {value: 'none', label: t('none')},\n];\n\nconst ACTION_MATCH_OPTIONS_MIGRATED = [\n  {value: 'all', label: t('all')},\n  {value: 'any', label: t('any')},\n];\n\nconst defaultRule: UnsavedIssueAlertRule = {\n  actionMatch: 'all',\n  filterMatch: 'all',\n  actions: [],\n  conditions: [],\n  filters: [],\n  name: '',\n  frequency: 30,\n  environment: ALL_ENVIRONMENTS_KEY,\n};\n\nconst POLLING_MAX_TIME_LIMIT = 3 * 60000;\n\ntype ConditionOrActionProperty = 'conditions' | 'actions' | 'filters';\n\ntype RuleTaskResponse = {\n  status: 'pending' | 'failed' | 'success';\n  error?: string;\n  rule?: IssueAlertRule;\n};\n\ntype RouteParams = {orgId: string; projectId?: string; ruleId?: string};\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n  userTeamIds: string[];\n  loadingProjects?: boolean;\n  onChangeTitle?: (data: string) => void;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = AsyncView['state'] & {\n  configs: {\n    actions: IssueAlertRuleActionTemplate[];\n    conditions: IssueAlertRuleConditionTemplate[];\n    filters: IssueAlertRuleConditionTemplate[];\n  } | null;\n  detailedError: null | {\n    [key: string]: string[];\n  };\n  environments: Environment[] | null;\n  project: Project;\n  uuid: null | string;\n  duplicateTargetRule?: UnsavedIssueAlertRule | IssueAlertRule | null;\n  ownership?: null | IssueOwnership;\n  rule?: UnsavedIssueAlertRule | IssueAlertRule | null;\n};\n\nfunction isSavedAlertRule(rule: State['rule']): rule is IssueAlertRule {\n  return rule?.hasOwnProperty('id') ?? false;\n}\n\nclass IssueRuleEditor extends AsyncView<Props, State> {\n  pollingTimeout: number | undefined = undefined;\n\n  get isDuplicateRule(): boolean {\n    const {location} = this.props;\n    const createFromDuplicate = location?.query.createFromDuplicate === 'true';\n    return createFromDuplicate && location?.query.duplicateRuleId;\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.pollingTimeout);\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.project.id === this.state.project.id) {\n      return;\n    }\n\n    this.fetchEnvironments();\n  }\n\n  getTitle() {\n    const {organization} = this.props;\n    const {rule, project} = this.state;\n    const ruleName = rule?.name;\n\n    return routeTitleGen(\n      ruleName ? t('Alert %s', ruleName) : '',\n      organization.slug,\n      false,\n      project?.slug\n    );\n  }\n\n  getDefaultState() {\n    const {userTeamIds, project} = this.props;\n    const defaultState = {\n      ...super.getDefaultState(),\n      configs: null,\n      detailedError: null,\n      rule: {...defaultRule},\n      environments: [],\n      uuid: null,\n      project,\n    };\n\n    const projectTeamIds = new Set(project.teams.map(({id}) => id));\n    const userTeamId = userTeamIds.find(id => projectTeamIds.has(id)) ?? null;\n    defaultState.rule.owner = userTeamId && `team:${userTeamId}`;\n\n    return defaultState;\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {\n      location: {query},\n      params: {ruleId, orgId},\n    } = this.props;\n    // project in state isn't initialized when getEndpoints is first called\n    const project = this.state?.project ?? this.props.project;\n\n    const endpoints = [\n      [\n        'environments',\n        `/projects/${orgId}/${project.slug}/environments/`,\n        {\n          query: {\n            visibility: 'visible',\n          },\n        },\n      ],\n      ['configs', `/projects/${orgId}/${project.slug}/rules/configuration/`],\n      ['ownership', `/projects/${orgId}/${project.slug}/ownership/`],\n    ];\n\n    if (ruleId) {\n      endpoints.push(['rule', `/projects/${orgId}/${project.slug}/rules/${ruleId}/`]);\n    }\n\n    if (!ruleId && query.createFromDuplicate && query.duplicateRuleId) {\n      endpoints.push([\n        'duplicateTargetRule',\n        `/projects/${orgId}/${project.slug}/rules/${query.duplicateRuleId}/`,\n      ]);\n    }\n\n    return endpoints as [string, string][];\n  }\n\n  onRequestSuccess({stateKey, data}) {\n    if (stateKey === 'rule' && data.name) {\n      this.props.onChangeTitle?.(data.name);\n    }\n    if (stateKey === 'duplicateTargetRule') {\n      this.setState({\n        rule: {\n          ...omit(data, ['id']),\n          name: data.name + ' copy',\n        } as UnsavedIssueAlertRule,\n      });\n    }\n  }\n\n  onLoadAllEndpointsSuccess() {\n    const {rule} = this.state;\n    if (rule) {\n      ((rule as IssueAlertRule)?.errors || []).map(({detail}) =>\n        addErrorMessage(detail, {append: true})\n      );\n    }\n  }\n  pollHandler = async (quitTime: number) => {\n    if (Date.now() > quitTime) {\n      addErrorMessage(t('Looking for that channel took too long :('));\n      this.setState({loading: false});\n      return;\n    }\n\n    const {organization} = this.props;\n    const {uuid, project} = this.state;\n    const origRule = this.state.rule;\n\n    try {\n      const response: RuleTaskResponse = await this.api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/rule-task/${uuid}/`\n      );\n\n      const {status, rule, error} = response;\n\n      if (status === 'pending') {\n        window.clearTimeout(this.pollingTimeout);\n\n        this.pollingTimeout = window.setTimeout(() => {\n          this.pollHandler(quitTime);\n        }, 1000);\n        return;\n      }\n\n      if (status === 'failed') {\n        this.setState({\n          detailedError: {actions: [error ? error : t('An error occurred')]},\n          loading: false,\n        });\n        this.handleRuleSaveFailure(t('An error occurred'));\n      }\n      if (rule) {\n        const ruleId = isSavedAlertRule(origRule) ? `${origRule.id}/` : '';\n        const isNew = !ruleId;\n        this.handleRuleSuccess(isNew, rule);\n      }\n    } catch {\n      this.handleRuleSaveFailure(t('An error occurred'));\n      this.setState({loading: false});\n    }\n  };\n\n  fetchEnvironments() {\n    const {\n      params: {orgId},\n    } = this.props;\n    const {project} = this.state;\n\n    this.api\n      .requestPromise(`/projects/${orgId}/${project.slug}/environments/`, {\n        query: {\n          visibility: 'visible',\n        },\n      })\n      .then(response => this.setState({environments: response}))\n      .catch(_err => addErrorMessage(t('Unable to fetch environments')));\n  }\n\n  fetchStatus() {\n    // pollHandler calls itself until it gets either a success\n    // or failed status but we don't want to poll forever so we pass\n    // in a hard stop time of 3 minutes before we bail.\n    const quitTime = Date.now() + POLLING_MAX_TIME_LIMIT;\n    window.clearTimeout(this.pollingTimeout);\n\n    this.pollingTimeout = window.setTimeout(() => {\n      this.pollHandler(quitTime);\n    }, 1000);\n  }\n\n  handleRuleSuccess = (isNew: boolean, rule: IssueAlertRule) => {\n    const {organization, router} = this.props;\n    const {project} = this.state;\n    this.setState({detailedError: null, loading: false, rule});\n\n    // The onboarding task will be completed on the server side when the alert\n    // is created\n    updateOnboardingTask(null, organization, {\n      task: OnboardingTaskKey.ALERT_RULE,\n      status: 'complete',\n    });\n\n    metric.endTransaction({name: 'saveAlertRule'});\n\n    router.push({\n      pathname: `/organizations/${organization.slug}/alerts/rules/${project.slug}/${rule.id}/details/`,\n    });\n    addSuccessMessage(isNew ? t('Created alert rule') : t('Updated alert rule'));\n  };\n\n  handleRuleSaveFailure(msg: ReactNode) {\n    addErrorMessage(msg);\n    metric.endTransaction({name: 'saveAlertRule'});\n  }\n\n  handleSubmit = async () => {\n    const {project, rule} = this.state;\n    const ruleId = isSavedAlertRule(rule) ? `${rule.id}/` : '';\n    const isNew = !ruleId;\n    const {organization} = this.props;\n\n    const endpoint = `/projects/${organization.slug}/${project.slug}/rules/${ruleId}`;\n\n    if (rule && rule.environment === ALL_ENVIRONMENTS_KEY) {\n      delete rule.environment;\n    }\n\n    addLoadingMessage();\n\n    try {\n      const transaction = metric.startTransaction({name: 'saveAlertRule'});\n      transaction.setTag('type', 'issue');\n      transaction.setTag('operation', isNew ? 'create' : 'edit');\n      if (rule) {\n        for (const action of rule.actions) {\n          // Grab the last part of something like 'sentry.mail.actions.NotifyEmailAction'\n          const splitActionId = action.id.split('.');\n          const actionName = splitActionId[splitActionId.length - 1];\n          if (actionName === 'SlackNotifyServiceAction') {\n            transaction.setTag(actionName, true);\n          }\n        }\n        transaction.setData('actions', rule.actions);\n      }\n      const [data, , resp] = await this.api.requestPromise(endpoint, {\n        includeAllArgs: true,\n        method: isNew ? 'POST' : 'PUT',\n        data: rule,\n        query: {\n          duplicateRule: this.isDuplicateRule ? 'true' : 'false',\n          wizardV3: 'true',\n        },\n      });\n\n      // if we get a 202 back it means that we have an async task\n      // running to lookup and verify the channel id for Slack.\n      if (resp?.status === 202) {\n        this.setState({detailedError: null, loading: true, uuid: data.uuid});\n        this.fetchStatus();\n        addLoadingMessage(t('Looking through all your channels...'));\n      } else {\n        this.handleRuleSuccess(isNew, data);\n      }\n    } catch (err) {\n      this.setState({\n        detailedError: err.responseJSON || {__all__: 'Unknown error'},\n        loading: false,\n      });\n      this.handleRuleSaveFailure(t('An error occurred'));\n    }\n  };\n\n  handleDeleteRule = async () => {\n    const {project, rule} = this.state;\n    const ruleId = isSavedAlertRule(rule) ? `${rule.id}/` : '';\n    const isNew = !ruleId;\n    const {organization} = this.props;\n\n    if (isNew) {\n      return;\n    }\n\n    const endpoint = `/projects/${organization.slug}/${project.slug}/rules/${ruleId}`;\n\n    addLoadingMessage(t('Deleting...'));\n\n    try {\n      await this.api.requestPromise(endpoint, {\n        method: 'DELETE',\n      });\n\n      addSuccessMessage(t('Deleted alert rule'));\n      browserHistory.replace(recreateRoute('', {...this.props, stepBack: -2}));\n    } catch (err) {\n      this.setState({\n        detailedError: err.responseJSON || {__all__: 'Unknown error'},\n      });\n      addErrorMessage(t('There was a problem deleting the alert'));\n    }\n  };\n\n  handleCancel = () => {\n    const {organization, router} = this.props;\n\n    router.push(`/organizations/${organization.slug}/alerts/rules/`);\n  };\n\n  hasError = (field: string) => {\n    const {detailedError} = this.state;\n\n    if (!detailedError) {\n      return false;\n    }\n\n    return detailedError.hasOwnProperty(field);\n  };\n\n  handleEnvironmentChange = (val: string) => {\n    // If 'All Environments' is selected the value should be null\n    if (val === ALL_ENVIRONMENTS_KEY) {\n      this.handleChange('environment', null);\n    } else {\n      this.handleChange('environment', val);\n    }\n  };\n\n  handleChange = <T extends keyof IssueAlertRule>(prop: T, val: IssueAlertRule[T]) => {\n    this.setState(prevState => {\n      const clonedState = cloneDeep(prevState);\n      set(clonedState, `rule[${prop}]`, val);\n      return {...clonedState, detailedError: omit(prevState.detailedError, prop)};\n    });\n  };\n\n  handlePropertyChange = <T extends keyof IssueAlertRuleAction>(\n    type: ConditionOrActionProperty,\n    idx: number,\n    prop: T,\n    val: IssueAlertRuleAction[T]\n  ) => {\n    this.setState(prevState => {\n      const clonedState = cloneDeep(prevState);\n      set(clonedState, `rule[${type}][${idx}][${prop}]`, val);\n      return clonedState;\n    });\n  };\n\n  getInitialValue = (type: ConditionOrActionProperty, id: string) => {\n    const configuration = this.state.configs?.[type]?.find(c => c.id === id);\n\n    const hasChangeAlerts =\n      configuration?.id &&\n      this.props.organization.features.includes('change-alerts') &&\n      CHANGE_ALERT_CONDITION_IDS.includes(configuration.id);\n\n    return configuration?.formFields\n      ? Object.fromEntries(\n          Object.entries(configuration.formFields)\n            // TODO(ts): Doesn't work if I cast formField as IssueAlertRuleFormField\n            .map(([key, formField]: [string, any]) => [\n              key,\n              hasChangeAlerts && key === 'interval'\n                ? '1h'\n                : formField?.initial ?? formField?.choices?.[0]?.[0],\n            ])\n            .filter(([, initial]) => !!initial)\n        )\n      : {};\n  };\n\n  handleResetRow = <T extends keyof IssueAlertRuleAction>(\n    type: ConditionOrActionProperty,\n    idx: number,\n    prop: T,\n    val: IssueAlertRuleAction[T]\n  ) => {\n    this.setState(prevState => {\n      const clonedState = cloneDeep(prevState);\n\n      // Set initial configuration, but also set\n      const id = (clonedState.rule as IssueAlertRule)[type][idx].id;\n      const newRule = {\n        ...this.getInitialValue(type, id),\n        id,\n        [prop]: val,\n      };\n\n      set(clonedState, `rule[${type}][${idx}]`, newRule);\n      return clonedState;\n    });\n  };\n\n  handleAddRow = (type: ConditionOrActionProperty, id: string) => {\n    this.setState(prevState => {\n      const clonedState = cloneDeep(prevState);\n\n      // Set initial configuration\n      const newRule = {\n        ...this.getInitialValue(type, id),\n        id,\n      };\n      const newTypeList = prevState.rule ? prevState.rule[type] : [];\n\n      set(clonedState, `rule[${type}]`, [...newTypeList, newRule]);\n      return clonedState;\n    });\n\n    const {organization} = this.props;\n    const {project} = this.state;\n    trackAdvancedAnalyticsEvent('edit_alert_rule.add_row', {\n      organization,\n      project_id: project.id,\n      type,\n      name: id,\n    });\n  };\n\n  handleDeleteRow = (type: ConditionOrActionProperty, idx: number) => {\n    this.setState(prevState => {\n      const clonedState = cloneDeep(prevState);\n\n      const newTypeList = prevState.rule ? prevState.rule[type] : [];\n      if (prevState.rule) {\n        newTypeList.splice(idx, 1);\n      }\n\n      set(clonedState, `rule[${type}]`, newTypeList);\n      return clonedState;\n    });\n  };\n\n  handleAddCondition = (id: string) => this.handleAddRow('conditions', id);\n  handleAddAction = (id: string) => this.handleAddRow('actions', id);\n  handleAddFilter = (id: string) => this.handleAddRow('filters', id);\n  handleDeleteCondition = (ruleIndex: number) =>\n    this.handleDeleteRow('conditions', ruleIndex);\n  handleDeleteAction = (ruleIndex: number) => this.handleDeleteRow('actions', ruleIndex);\n  handleDeleteFilter = (ruleIndex: number) => this.handleDeleteRow('filters', ruleIndex);\n  handleChangeConditionProperty = (ruleIndex: number, prop: string, val: string) =>\n    this.handlePropertyChange('conditions', ruleIndex, prop, val);\n  handleChangeActionProperty = (ruleIndex: number, prop: string, val: string) =>\n    this.handlePropertyChange('actions', ruleIndex, prop, val);\n  handleChangeFilterProperty = (ruleIndex: number, prop: string, val: string) =>\n    this.handlePropertyChange('filters', ruleIndex, prop, val);\n  handleResetCondition = (ruleIndex: number, prop: string, value: string) =>\n    this.handleResetRow('conditions', ruleIndex, prop, value);\n  handleResetAction = (ruleIndex: number, prop: string, value: string) =>\n    this.handleResetRow('actions', ruleIndex, prop, value);\n  handleResetFilter = (ruleIndex: number, prop: string, value: string) =>\n    this.handleResetRow('filters', ruleIndex, prop, value);\n\n  handleValidateRuleName = () => {\n    const isRuleNameEmpty = !this.state.rule?.name.trim();\n\n    if (!isRuleNameEmpty) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      detailedError: {\n        ...prevState.detailedError,\n        name: [t('Field Required')],\n      },\n    }));\n  };\n\n  getConditions() {\n    const {organization} = this.props;\n\n    if (!organization.features.includes('change-alerts')) {\n      return this.state.configs?.conditions ?? null;\n    }\n\n    return (\n      this.state.configs?.conditions?.map(condition =>\n        CHANGE_ALERT_CONDITION_IDS.includes(condition.id)\n          ? ({\n              ...condition,\n              label: CHANGE_ALERT_PLACEHOLDERS_LABELS[condition.id],\n            } as IssueAlertRuleConditionTemplate)\n          : condition\n      ) ?? null\n    );\n  }\n\n  getTeamId = () => {\n    const {rule} = this.state;\n    const owner = rule?.owner;\n    // ownership follows the format team:<id>, just grab the id\n    return owner && owner.split(':')[1];\n  };\n\n  handleOwnerChange = ({value}: {value: string}) => {\n    const ownerValue = value && `team:${value}`;\n    this.handleChange('owner', ownerValue);\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderError() {\n    return (\n      <Alert type=\"error\" showIcon>\n        {t(\n          'Unable to access this alert rule -- check to make sure you have the correct permissions'\n        )}\n      </Alert>\n    );\n  }\n\n  renderRuleName(disabled: boolean) {\n    const {rule, detailedError} = this.state;\n    const {name} = rule || {};\n\n    return (\n      <StyledField\n        label={null}\n        help={null}\n        error={detailedError?.name?.[0]}\n        disabled={disabled}\n        required\n        stacked\n        flexibleControlStateSize\n      >\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          data-test-id=\"alert-name\"\n          placeholder={t('Enter Alert Name')}\n          onChange={(event: ChangeEvent<HTMLInputElement>) =>\n            this.handleChange('name', event.target.value)\n          }\n          onBlur={this.handleValidateRuleName}\n          disabled={disabled}\n        />\n      </StyledField>\n    );\n  }\n\n  renderTeamSelect(disabled: boolean) {\n    const {rule, project} = this.state;\n    const ownerId = rule?.owner?.split(':')[1];\n\n    return (\n      <StyledField\n        extraMargin\n        label={null}\n        help={null}\n        disabled={disabled}\n        flexibleControlStateSize\n      >\n        <TeamSelector\n          value={this.getTeamId()}\n          project={project}\n          onChange={this.handleOwnerChange}\n          teamFilter={(team: Team) => team.isMember || team.id === ownerId}\n          useId\n          includeUnassigned\n          disabled={disabled}\n        />\n      </StyledField>\n    );\n  }\n\n  renderIdBadge(project: Project) {\n    return (\n      <IdBadge\n        project={project}\n        avatarProps={{consistentWidth: true}}\n        avatarSize={18}\n        disableLink\n        hideName\n      />\n    );\n  }\n\n  renderEnvironmentSelect(disabled: boolean) {\n    const {environments, rule} = this.state;\n\n    const environmentOptions = [\n      {\n        value: ALL_ENVIRONMENTS_KEY,\n        label: t('All Environments'),\n      },\n      ...(environments?.map(env => ({value: env.name, label: getDisplayName(env)})) ??\n        []),\n    ];\n\n    const environment =\n      !rule || !rule.environment ? ALL_ENVIRONMENTS_KEY : rule.environment;\n\n    return (\n      <FormField\n        name=\"environment\"\n        inline={false}\n        style={{padding: 0, border: 'none'}}\n        flexibleControlStateSize\n        className={this.hasError('environment') ? ' error' : ''}\n        required\n        disabled={disabled}\n      >\n        {({onChange, onBlur}) => (\n          <SelectControl\n            clearable={false}\n            disabled={disabled}\n            value={environment}\n            options={environmentOptions}\n            onChange={({value}) => {\n              this.handleEnvironmentChange(value);\n              onChange(value, {});\n              onBlur(value, {});\n            }}\n          />\n        )}\n      </FormField>\n    );\n  }\n\n  renderProjectSelect(disabled: boolean) {\n    const {project: _selectedProject, projects, organization} = this.props;\n    const hasOpenMembership = organization.features.includes('open-membership');\n    const myProjects = projects.filter(project => project.hasAccess && project.isMember);\n    const allProjects = projects.filter(\n      project => project.hasAccess && !project.isMember\n    );\n\n    const myProjectOptions = myProjects.map(myProject => ({\n      value: myProject.id,\n      label: myProject.slug,\n      leadingItems: this.renderIdBadge(myProject),\n    }));\n\n    const openMembershipProjects = [\n      {\n        label: t('My Projects'),\n        options: myProjectOptions,\n      },\n      {\n        label: t('All Projects'),\n        options: allProjects.map(allProject => ({\n          value: allProject.id,\n          label: allProject.slug,\n          leadingItems: this.renderIdBadge(allProject),\n        })),\n      },\n    ];\n\n    const projectOptions =\n      hasOpenMembership || isActiveSuperuser()\n        ? openMembershipProjects\n        : myProjectOptions;\n\n    return (\n      <FormField\n        name=\"projectId\"\n        inline={false}\n        style={{padding: 0}}\n        flexibleControlStateSize\n      >\n        {({onChange, onBlur, model}) => {\n          const selectedProject =\n            projects.find(({id}) => id === model.getValue('projectId')) ||\n            _selectedProject;\n\n          return (\n            <SelectControl\n              disabled={disabled}\n              value={selectedProject.id}\n              styles={{\n                container: (provided: {[x: string]: string | number | boolean}) => ({\n                  ...provided,\n                  marginBottom: `${space(1)}`,\n                }),\n              }}\n              options={projectOptions}\n              onChange={({value}: {value: Project['id']}) => {\n                // if the current owner/team isn't part of project selected, update to the first available team\n                const nextSelectedProject =\n                  projects.find(({id}) => id === value) ?? selectedProject;\n                const ownerId: String | undefined = model\n                  .getValue('owner')\n                  ?.split(':')[1];\n                if (\n                  ownerId &&\n                  nextSelectedProject.teams.find(({id}) => id === ownerId) ===\n                    undefined &&\n                  nextSelectedProject.teams.length\n                ) {\n                  this.handleOwnerChange({value: nextSelectedProject.teams[0].id});\n                }\n\n                this.setState({project: nextSelectedProject});\n\n                onChange(value, {});\n                onBlur(value, {});\n              }}\n              components={{\n                SingleValue: containerProps => (\n                  <components.ValueContainer {...containerProps}>\n                    <IdBadge\n                      project={selectedProject}\n                      avatarProps={{consistentWidth: true}}\n                      avatarSize={18}\n                      disableLink\n                    />\n                  </components.ValueContainer>\n                ),\n              }}\n            />\n          );\n        }}\n      </FormField>\n    );\n  }\n\n  renderActionInterval(disabled: boolean) {\n    const {rule} = this.state;\n    const {frequency} = rule || {};\n\n    return (\n      <FormField\n        name=\"frequency\"\n        inline={false}\n        style={{padding: 0, border: 'none'}}\n        label={null}\n        help={null}\n        className={this.hasError('frequency') ? ' error' : ''}\n        required\n        disabled={disabled}\n        flexibleControlStateSize\n      >\n        {({onChange, onBlur}) => (\n          <SelectControl\n            clearable={false}\n            disabled={disabled}\n            value={`${frequency}`}\n            options={FREQUENCY_OPTIONS}\n            onChange={({value}) => {\n              this.handleChange('frequency', value);\n              onChange(value, {});\n              onBlur(value, {});\n            }}\n          />\n        )}\n      </FormField>\n    );\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {project, rule, detailedError, loading, ownership} = this.state;\n    const {actions, filters, conditions, frequency} = rule || {};\n\n    const environment =\n      !rule || !rule.environment ? ALL_ENVIRONMENTS_KEY : rule.environment;\n\n    // Note `key` on `<Form>` below is so that on initial load, we show\n    // the form with a loading mask on top of it, but force a re-render by using\n    // a different key when we have fetched the rule so that form inputs are filled in\n    return (\n      <Access access={['alerts:write']}>\n        {({hasAccess}) => {\n          // check if superuser or if user is on the alert's team\n          const disabled = loading || !(isActiveSuperuser() || hasAccess);\n\n          return (\n            <Main fullWidth>\n              <StyledForm\n                key={isSavedAlertRule(rule) ? rule.id : undefined}\n                onCancel={this.handleCancel}\n                onSubmit={this.handleSubmit}\n                initialData={{\n                  ...rule,\n                  environment,\n                  frequency: `${frequency}`,\n                  projectId: project.id,\n                }}\n                submitDisabled={disabled}\n                submitLabel={t('Save Rule')}\n                extraButton={\n                  isSavedAlertRule(rule) ? (\n                    <Confirm\n                      disabled={disabled}\n                      priority=\"danger\"\n                      confirmText={t('Delete Rule')}\n                      onConfirm={this.handleDeleteRule}\n                      header={t('Delete Rule')}\n                      message={t('Are you sure you want to delete this rule?')}\n                    >\n                      <Button priority=\"danger\" type=\"button\">\n                        {t('Delete Rule')}\n                      </Button>\n                    </Confirm>\n                  ) : null\n                }\n              >\n                <List symbol=\"colored-numeric\">\n                  {loading && <SemiTransparentLoadingMask data-test-id=\"loading-mask\" />}\n                  <StyledListItem>{t('Add alert settings')}</StyledListItem>\n                  <SettingsContainer>\n                    {this.renderEnvironmentSelect(disabled)}\n                    {this.renderProjectSelect(disabled)}\n                  </SettingsContainer>\n                  <SetConditionsListItem>\n                    {t('Set conditions')}\n                    <SetupAlertIntegrationButton\n                      projectSlug={project.slug}\n                      organization={organization}\n                    />\n                  </SetConditionsListItem>\n                  <ConditionsPanel>\n                    <PanelBody>\n                      <Step>\n                        <StepConnector />\n\n                        <StepContainer>\n                          <ChevronContainer>\n                            <IconChevron\n                              color=\"gray200\"\n                              isCircled\n                              direction=\"right\"\n                              size=\"sm\"\n                            />\n                          </ChevronContainer>\n\n                          <StepContent>\n                            <StepLead>\n                              {tct(\n                                '[when:When] an event is captured by Sentry and [selector] of the following happens',\n                                {\n                                  when: <Badge />,\n                                  selector: (\n                                    <EmbeddedWrapper>\n                                      <EmbeddedSelectField\n                                        className={classNames({\n                                          error: this.hasError('actionMatch'),\n                                        })}\n                                        inline={false}\n                                        styles={{\n                                          control: provided => ({\n                                            ...provided,\n                                            minHeight: '20px',\n                                            height: '20px',\n                                          }),\n                                        }}\n                                        isSearchable={false}\n                                        isClearable={false}\n                                        name=\"actionMatch\"\n                                        required\n                                        flexibleControlStateSize\n                                        options={ACTION_MATCH_OPTIONS_MIGRATED}\n                                        onChange={val =>\n                                          this.handleChange('actionMatch', val)\n                                        }\n                                        disabled={disabled}\n                                      />\n                                    </EmbeddedWrapper>\n                                  ),\n                                }\n                              )}\n                            </StepLead>\n                            <RuleNodeList\n                              nodes={this.getConditions()}\n                              items={conditions ?? []}\n                              selectType=\"grouped\"\n                              placeholder={t('Add optional trigger...')}\n                              onPropertyChange={this.handleChangeConditionProperty}\n                              onAddRow={this.handleAddCondition}\n                              onResetRow={this.handleResetCondition}\n                              onDeleteRow={this.handleDeleteCondition}\n                              organization={organization}\n                              project={project}\n                              disabled={disabled}\n                              error={\n                                this.hasError('conditions') && (\n                                  <StyledAlert type=\"error\">\n                                    {detailedError?.conditions[0]}\n                                  </StyledAlert>\n                                )\n                              }\n                            />\n                          </StepContent>\n                        </StepContainer>\n                      </Step>\n\n                      <Step>\n                        <StepConnector />\n\n                        <StepContainer>\n                          <ChevronContainer>\n                            <IconChevron\n                              color=\"gray200\"\n                              isCircled\n                              direction=\"right\"\n                              size=\"sm\"\n                            />\n                          </ChevronContainer>\n\n                          <StepContent>\n                            <StepLead>\n                              {tct('[if:If] [selector] of these filters match', {\n                                if: <Badge />,\n                                selector: (\n                                  <EmbeddedWrapper>\n                                    <EmbeddedSelectField\n                                      className={classNames({\n                                        error: this.hasError('filterMatch'),\n                                      })}\n                                      inline={false}\n                                      styles={{\n                                        control: provided => ({\n                                          ...provided,\n                                          minHeight: '20px',\n                                          height: '20px',\n                                        }),\n                                      }}\n                                      isSearchable={false}\n                                      isClearable={false}\n                                      name=\"filterMatch\"\n                                      required\n                                      flexibleControlStateSize\n                                      options={ACTION_MATCH_OPTIONS}\n                                      onChange={val =>\n                                        this.handleChange('filterMatch', val)\n                                      }\n                                      disabled={disabled}\n                                    />\n                                  </EmbeddedWrapper>\n                                ),\n                              })}\n                            </StepLead>\n                            <RuleNodeList\n                              nodes={this.state.configs?.filters ?? null}\n                              items={filters ?? []}\n                              placeholder={t('Add optional filter...')}\n                              onPropertyChange={this.handleChangeFilterProperty}\n                              onAddRow={this.handleAddFilter}\n                              onResetRow={this.handleResetFilter}\n                              onDeleteRow={this.handleDeleteFilter}\n                              organization={organization}\n                              project={project}\n                              disabled={disabled}\n                              error={\n                                this.hasError('filters') && (\n                                  <StyledAlert type=\"error\">\n                                    {detailedError?.filters[0]}\n                                  </StyledAlert>\n                                )\n                              }\n                            />\n                          </StepContent>\n                        </StepContainer>\n                      </Step>\n\n                      <Step>\n                        <StepContainer>\n                          <ChevronContainer>\n                            <IconChevron\n                              isCircled\n                              color=\"gray200\"\n                              direction=\"right\"\n                              size=\"sm\"\n                            />\n                          </ChevronContainer>\n                          <StepContent>\n                            <StepLead>\n                              {tct('[then:Then] perform these actions', {\n                                then: <Badge />,\n                              })}\n                            </StepLead>\n\n                            <RuleNodeList\n                              nodes={this.state.configs?.actions ?? null}\n                              selectType=\"grouped\"\n                              items={actions ?? []}\n                              placeholder={t('Add action...')}\n                              onPropertyChange={this.handleChangeActionProperty}\n                              onAddRow={this.handleAddAction}\n                              onResetRow={this.handleResetAction}\n                              onDeleteRow={this.handleDeleteAction}\n                              organization={organization}\n                              project={project}\n                              disabled={disabled}\n                              ownership={ownership}\n                              error={\n                                this.hasError('actions') && (\n                                  <StyledAlert type=\"error\">\n                                    {detailedError?.actions[0]}\n                                  </StyledAlert>\n                                )\n                              }\n                            />\n                          </StepContent>\n                        </StepContainer>\n                      </Step>\n                    </PanelBody>\n                  </ConditionsPanel>\n                  <StyledListItem>\n                    {t('Set action interval')}\n                    <StyledFieldHelp>\n                      {t('Perform the actions above once this often for an issue')}\n                    </StyledFieldHelp>\n                  </StyledListItem>\n                  {this.renderActionInterval(disabled)}\n                  <StyledListItem>{t('Establish ownership')}</StyledListItem>\n                  {this.renderRuleName(disabled)}\n                  {this.renderTeamSelect(disabled)}\n                </List>\n              </StyledForm>\n            </Main>\n          );\n        }}\n      </Access>\n    );\n  }\n}\n\nexport default withOrganization(withProjects(IssueRuleEditor));\n\n// TODO(ts): Understand why styled is not correctly inheriting props here\nconst StyledForm = styled(Form)<Form['props']>`\n  position: relative;\n`;\n\nconst ConditionsPanel = styled(Panel)`\n  padding-top: ${space(0.5)};\n  padding-bottom: ${space(2)};\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin-bottom: 0;\n`;\n\nconst StyledListItem = styled(ListItem)`\n  margin: ${space(2)} 0 ${space(1)} 0;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nconst StyledFieldHelp = styled(FieldHelp)`\n  margin-top: 0;\n`;\n\nconst SetConditionsListItem = styled(StyledListItem)`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Step = styled('div')`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  margin: ${space(4)} ${space(4)} ${space(3)} ${space(1)};\n`;\n\nconst StepContainer = styled('div')`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  flex-grow: 1;\n`;\n\nconst StepContent = styled('div')`\n  flex-grow: 1;\n`;\n\nconst StepConnector = styled('div')`\n  position: absolute;\n  height: 100%;\n  top: 28px;\n  left: 19px;\n  border-right: 1px ${p => p.theme.gray200} dashed;\n`;\n\nconst StepLead = styled('div')`\n  margin-bottom: ${space(0.5)};\n`;\n\nconst ChevronContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(0.5)} ${space(1.5)};\n`;\n\nconst Badge = styled('span')`\n  display: inline-block;\n  min-width: 56px;\n  background-color: ${p => p.theme.purple300};\n  padding: 0 ${space(0.75)};\n  border-radius: ${p => p.theme.borderRadius};\n  color: ${p => p.theme.white};\n  text-transform: uppercase;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: 600;\n  line-height: 1.5;\n`;\n\nconst EmbeddedWrapper = styled('div')`\n  display: inline-block;\n  margin: 0 ${space(0.5)};\n  width: 80px;\n`;\n\nconst EmbeddedSelectField = styled(SelectField)`\n  padding: 0;\n  font-weight: normal;\n  text-transform: none;\n`;\n\nconst SemiTransparentLoadingMask = styled(LoadingMask)`\n  opacity: 0.6;\n  z-index: 1; /* Needed so that it sits above form elements */\n`;\n\nconst SettingsContainer = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${space(1)};\n`;\n\nconst StyledField = styled(Field)<{extraMargin?: boolean}>`\n  :last-child {\n    padding-bottom: ${space(2)};\n  }\n\n  border-bottom: none;\n  padding: 0;\n\n  & > div {\n    padding: 0;\n    width: 100%;\n  }\n\n  margin-bottom: ${p => `${p.extraMargin ? '60px' : space(1)}`};\n`;\n\nconst Main = styled(Layout.Main)`\n  padding: ${space(2)} ${space(4)};\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport TeamSelector from 'sentry/components/forms/teamSelector';\nimport {PanelItem} from 'sentry/components/panels';\nimport SelectMembers from 'sentry/components/selectMembers';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {IssueAlertRuleAction, IssueAlertRuleCondition} from 'sentry/types/alerts';\n\ninterface OptionRecord {\n  label: string;\n  value: string;\n}\n\ntype Props = {\n  disabled: boolean;\n  loading: boolean;\n  memberValue: string | number;\n  onChange: (action: IssueAlertRuleAction) => void;\n  options: OptionRecord[];\n  organization: Organization;\n  project: Project;\n  ruleData: IssueAlertRuleAction | IssueAlertRuleCondition;\n  teamValue: string | number;\n};\n\nclass MemberTeamFields extends Component<Props> {\n  handleChange = (attribute: 'targetType' | 'targetIdentifier', newValue: string) => {\n    const {onChange, ruleData} = this.props;\n    if (newValue === ruleData[attribute]) {\n      return;\n    }\n    const newData = {\n      ...ruleData,\n      [attribute]: newValue,\n    };\n    /**\n     * TargetIdentifiers between the targetTypes are not unique, and may wrongly map to something that has not been\n     * selected. E.g. A member and project can both have the `targetIdentifier`, `'2'`. Hence we clear the identifier.\n     **/\n    if (attribute === 'targetType') {\n      newData.targetIdentifier = '';\n    }\n    onChange(newData);\n  };\n\n  handleChangeActorType = (optionRecord: OptionRecord) => {\n    this.handleChange('targetType', optionRecord.value);\n  };\n\n  handleChangeActorId = (optionRecord: OptionRecord & {[key: string]: any}) => {\n    this.handleChange('targetIdentifier', optionRecord.value);\n  };\n\n  render(): React.ReactElement {\n    const {\n      disabled,\n      loading,\n      project,\n      organization,\n      ruleData,\n      memberValue,\n      teamValue,\n      options,\n    } = this.props;\n\n    const teamSelected = ruleData.targetType === teamValue;\n    const memberSelected = ruleData.targetType === memberValue;\n\n    const selectControlStyles = {\n      control: provided => ({\n        ...provided,\n        minHeight: '28px',\n        height: '28px',\n      }),\n    };\n\n    return (\n      <PanelItemGrid>\n        <SelectControl\n          isClearable={false}\n          isDisabled={disabled || loading}\n          value={ruleData.targetType}\n          styles={selectControlStyles}\n          options={options}\n          onChange={this.handleChangeActorType}\n        />\n        {teamSelected ? (\n          <TeamSelector\n            disabled={disabled}\n            key={teamValue}\n            project={project}\n            // The value from the endpoint is of type `number`, `SelectMembers` require value to be of type `string`\n            value={`${ruleData.targetIdentifier}`}\n            styles={selectControlStyles}\n            onChange={this.handleChangeActorId}\n            useId\n          />\n        ) : memberSelected ? (\n          <SelectMembers\n            disabled={disabled}\n            key={teamSelected ? teamValue : memberValue}\n            project={project}\n            organization={organization}\n            // The value from the endpoint is of type `number`, `SelectMembers` require value to be of type `string`\n            value={`${ruleData.targetIdentifier}`}\n            styles={selectControlStyles}\n            onChange={this.handleChangeActorId}\n          />\n        ) : null}\n      </PanelItemGrid>\n    );\n  }\n}\n\nconst PanelItemGrid = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: 200px 200px;\n  padding: 0;\n  align-items: center;\n  gap: ${space(2)};\n`;\n\nexport default MemberTeamFields;\n","import {Fragment, useCallback, useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {openModal} from 'sentry/actionCreators/modal';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport Input from 'sentry/components/input';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {releaseHealth} from 'sentry/data/platformCategories';\nimport {IconDelete, IconSettings} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Choices, IssueOwnership, Organization, Project} from 'sentry/types';\nimport {\n  AssigneeTargetType,\n  IssueAlertRuleAction,\n  IssueAlertRuleActionTemplate,\n  IssueAlertRuleCondition,\n  IssueAlertRuleConditionTemplate,\n  MailActionTargetType,\n} from 'sentry/types/alerts';\nimport MemberTeamFields from 'sentry/views/alerts/rules/issue/memberTeamFields';\nimport SentryAppRuleModal from 'sentry/views/alerts/rules/issue/sentryAppRuleModal';\nimport TicketRuleModal from 'sentry/views/alerts/rules/issue/ticketRuleModal';\nimport {SchemaFormConfig} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\nimport {EVENT_FREQUENCY_PERCENT_CONDITION} from 'sentry/views/projectInstall/issueAlertOptions';\n\ninterface FieldProps {\n  data: Props['data'];\n  disabled: boolean;\n  fieldConfig: FormField;\n  index: number;\n  name: string;\n  onMemberTeamChange: (data: Props['data']) => void;\n  onPropertyChange: Props['onPropertyChange'];\n  onReset: Props['onReset'];\n  organization: Organization;\n  project: Project;\n}\n\nfunction NumberField({\n  data,\n  index,\n  disabled,\n  name,\n  fieldConfig,\n  onPropertyChange,\n}: FieldProps) {\n  const value =\n    data[name] && typeof data[name] !== 'boolean' ? (data[name] as string | number) : '';\n\n  // Set default value of number fields to the placeholder value\n  useEffect(() => {\n    if (\n      value === '' &&\n      data.id === 'sentry.rules.filters.issue_occurrences.IssueOccurrencesFilter' &&\n      !isNaN(Number(fieldConfig.placeholder))\n    ) {\n      onPropertyChange(index, name, `${fieldConfig.placeholder}`);\n    }\n    // Value omitted on purpose to avoid overwriting user changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onPropertyChange, index, name, fieldConfig.placeholder, data.id]);\n\n  return (\n    <InlineNumberInput\n      type=\"number\"\n      name={name}\n      value={value}\n      placeholder={`${fieldConfig.placeholder}`}\n      disabled={disabled}\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n        onPropertyChange(index, name, e.target.value)\n      }\n    />\n  );\n}\n\nfunction AssigneeFilterFields({\n  data,\n  organization,\n  project,\n  disabled,\n  onMemberTeamChange,\n}: FieldProps) {\n  const isInitialized = data.targetType !== undefined && `${data.targetType}`.length > 0;\n  return (\n    <MemberTeamFields\n      disabled={disabled}\n      project={project}\n      organization={organization}\n      loading={!isInitialized}\n      ruleData={data}\n      onChange={onMemberTeamChange}\n      options={[\n        {value: AssigneeTargetType.Unassigned, label: t('No One')},\n        {value: AssigneeTargetType.Team, label: t('Team')},\n        {value: AssigneeTargetType.Member, label: t('Member')},\n      ]}\n      memberValue={AssigneeTargetType.Member}\n      teamValue={AssigneeTargetType.Team}\n    />\n  );\n}\n\nfunction MailActionFields({\n  data,\n  organization,\n  project,\n  disabled,\n  onMemberTeamChange,\n}: FieldProps) {\n  const isInitialized = data.targetType !== undefined && `${data.targetType}`.length > 0;\n  return (\n    <MemberTeamFields\n      disabled={disabled}\n      project={project}\n      organization={organization}\n      loading={!isInitialized}\n      ruleData={data as IssueAlertRuleAction}\n      onChange={onMemberTeamChange}\n      options={[\n        {value: MailActionTargetType.IssueOwners, label: t('Issue Owners')},\n        {value: MailActionTargetType.Team, label: t('Team')},\n        {value: MailActionTargetType.Member, label: t('Member')},\n        ...(organization.features?.includes('alert-release-notification-workflow')\n          ? [{value: MailActionTargetType.ReleaseMembers, label: t('Release Members')}]\n          : []),\n      ]}\n      memberValue={MailActionTargetType.Member}\n      teamValue={MailActionTargetType.Team}\n    />\n  );\n}\n\nfunction ChoiceField({\n  data,\n  disabled,\n  index,\n  onPropertyChange,\n  onReset,\n  name,\n  fieldConfig,\n}: FieldProps) {\n  // Select the first item on this list\n  // If it's not yet defined, call onPropertyChange to make sure the value is set on state\n  let initialVal: string | undefined;\n  if (data[name] === undefined && !!fieldConfig.choices.length) {\n    initialVal = fieldConfig.initial\n      ? `${fieldConfig.initial}`\n      : `${fieldConfig.choices[0][0]}`;\n  } else {\n    initialVal = `${data[name]}`;\n  }\n\n  // All `value`s are cast to string\n  // There are integrations that give the form field choices with the value as number, but\n  // when the integration configuration gets saved, it gets saved and returned as a string\n  const options = fieldConfig.choices.map(([value, label]) => ({\n    value: `${value}`,\n    label,\n  }));\n\n  return (\n    <InlineSelectControl\n      isClearable={false}\n      name={name}\n      value={initialVal}\n      styles={{\n        control: (provided: any) => ({\n          ...provided,\n          minHeight: '28px',\n          height: '28px',\n        }),\n      }}\n      disabled={disabled}\n      options={options}\n      onChange={({value}: {value: string}) => {\n        if (fieldConfig.resetsForm) {\n          onReset(index, name, value);\n        } else {\n          onPropertyChange(index, name, value);\n        }\n      }}\n    />\n  );\n}\n\nfunction TextField({\n  data,\n  index,\n  onPropertyChange,\n  disabled,\n  name,\n  fieldConfig,\n}: FieldProps) {\n  const value =\n    data[name] && typeof data[name] !== 'boolean' ? (data[name] as string | number) : '';\n\n  return (\n    <InlineInput\n      type=\"text\"\n      name={name}\n      value={value}\n      placeholder={`${fieldConfig.placeholder}`}\n      disabled={disabled}\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n        onPropertyChange(index, name, e.target.value)\n      }\n    />\n  );\n}\n\nexport type FormField = {\n  // The rest is configuration for the form field\n  [key: string]: any;\n  // Type of form fields\n  type: string;\n};\n\ninterface Props {\n  data: IssueAlertRuleAction | IssueAlertRuleCondition;\n  disabled: boolean;\n  index: number;\n  onDelete: (rowIndex: number) => void;\n  onPropertyChange: (rowIndex: number, name: string, value: string) => void;\n  onReset: (rowIndex: number, name: string, value: string) => void;\n  organization: Organization;\n  project: Project;\n  node?: IssueAlertRuleActionTemplate | IssueAlertRuleConditionTemplate | null;\n  ownership?: null | IssueOwnership;\n}\n\nfunction RuleNode({\n  index,\n  data,\n  node,\n  organization,\n  project,\n  disabled,\n  onDelete,\n  onPropertyChange,\n  onReset,\n  ownership,\n}: Props) {\n  const handleDelete = useCallback(() => {\n    onDelete(index);\n  }, [index, onDelete]);\n\n  const handleMemberTeamChange = useCallback(\n    ({targetType, targetIdentifier}: IssueAlertRuleAction | IssueAlertRuleCondition) => {\n      onPropertyChange(index, 'targetType', `${targetType}`);\n      onPropertyChange(index, 'targetIdentifier', `${targetIdentifier}`);\n    },\n    [index, onPropertyChange]\n  );\n\n  function getField(name: string, fieldConfig: FormField) {\n    const fieldProps: FieldProps = {\n      index,\n      name,\n      fieldConfig,\n      data,\n      organization,\n      project,\n      disabled,\n      onMemberTeamChange: handleMemberTeamChange,\n      onPropertyChange,\n      onReset,\n    };\n\n    switch (fieldConfig.type) {\n      case 'choice':\n        return <ChoiceField {...fieldProps} />;\n      case 'number':\n        return <NumberField {...fieldProps} />;\n      case 'string':\n        return <TextField {...fieldProps} />;\n      case 'mailAction':\n        return <MailActionFields {...fieldProps} />;\n      case 'assignee':\n        return <AssigneeFilterFields {...fieldProps} />;\n      default:\n        return null;\n    }\n  }\n\n  function renderRow() {\n    if (!node) {\n      return (\n        <Separator>\n          This node failed to render. It may have migrated to another section of the alert\n          conditions\n        </Separator>\n      );\n    }\n\n    const {label, formFields} = node;\n\n    const parts = label.split(/({\\w+})/).map((part, i) => {\n      if (!/^{\\w+}$/.test(part)) {\n        return <Separator key={i}>{part}</Separator>;\n      }\n\n      const key = part.slice(1, -1);\n\n      // If matcher is \"is set\" or \"is not set\", then we do not want to show the value input\n      // because it is not required\n      if (key === 'value' && (data.match === 'is' || data.match === 'ns')) {\n        return null;\n      }\n      return (\n        <Separator key={key}>\n          {formFields && formFields.hasOwnProperty(key)\n            ? getField(key, formFields[key])\n            : part}\n        </Separator>\n      );\n    });\n\n    const [title, ...inputs] = parts;\n\n    // We return this so that it can be a grid\n    return (\n      <Fragment>\n        {title}\n        {inputs}\n      </Fragment>\n    );\n  }\n\n  function conditionallyRenderHelpfulBanner() {\n    if (data.id === EVENT_FREQUENCY_PERCENT_CONDITION) {\n      if (!project.platform || !releaseHealth.includes(project.platform)) {\n        return (\n          <MarginlessAlert type=\"error\">\n            {tct(\n              \"This project doesn't support sessions. [link:View supported platforms]\",\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/product/releases/setup/#release-health\" />\n                ),\n              }\n            )}\n          </MarginlessAlert>\n        );\n      }\n\n      return (\n        <MarginlessAlert type=\"warning\">\n          {tct(\n            'Percent of sessions affected is approximated by the ratio of the issue frequency to the number of sessions in the project. [link:Learn more.]',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/product/alerts/create-alerts/issue-alert-config/\" />\n              ),\n            }\n          )}\n        </MarginlessAlert>\n      );\n    }\n\n    if (data.id === 'sentry.integrations.slack.notify_action.SlackNotifyServiceAction') {\n      return (\n        <MarginlessAlert\n          type=\"info\"\n          showIcon\n          trailingItems={\n            <Button\n              href=\"https://docs.sentry.io/product/integrations/notification-incidents/slack/#rate-limiting-error\"\n              size=\"xs\"\n            >\n              {t('Learn More')}\n            </Button>\n          }\n        >\n          {t('Having rate limiting problems? Enter a channel or user ID.')}\n        </MarginlessAlert>\n      );\n    }\n\n    if (\n      data.id === 'sentry.mail.actions.NotifyEmailAction' &&\n      data.targetType === MailActionTargetType.IssueOwners\n    ) {\n      return (\n        <MarginlessAlert type=\"warning\">\n          {!ownership\n            ? tct(\n                'If there are no matching [issueOwners], ownership is determined by the [ownershipSettings].',\n                {\n                  issueOwners: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/issue-owners/\">\n                      {t('issue owners')}\n                    </ExternalLink>\n                  ),\n                  ownershipSettings: (\n                    <ExternalLink\n                      href={`/settings/${organization.slug}/projects/${project.slug}/ownership/`}\n                    >\n                      {t('ownership settings')}\n                    </ExternalLink>\n                  ),\n                }\n              )\n            : ownership.fallthrough\n            ? tct(\n                'If there are no matching [issueOwners], all project members will receive this alert. To change this behavior, see [ownershipSettings].',\n                {\n                  issueOwners: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/issue-owners/\">\n                      {t('issue owners')}\n                    </ExternalLink>\n                  ),\n                  ownershipSettings: (\n                    <ExternalLink\n                      href={`/settings/${organization.slug}/projects/${project.slug}/ownership/`}\n                    >\n                      {t('ownership settings')}\n                    </ExternalLink>\n                  ),\n                }\n              )\n            : tct(\n                'If there are no matching [issueOwners], this action will have no effect. To change this behavior, see [ownershipSettings].',\n                {\n                  issueOwners: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/issue-owners/\">\n                      {t('issue owners')}\n                    </ExternalLink>\n                  ),\n                  ownershipSettings: (\n                    <ExternalLink\n                      href={`/settings/${organization.slug}/projects/${project.slug}/ownership/`}\n                    >\n                      {t('ownership settings')}\n                    </ExternalLink>\n                  ),\n                }\n              )}\n        </MarginlessAlert>\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Update all the AlertRuleAction's fields from the TicketRuleModal together\n   * only after the user clicks \"Apply Changes\".\n   * @param formData Form data\n   * @param fetchedFieldOptionsCache Object\n   */\n  const updateParentFromTicketRule = useCallback(\n    (\n      formData: Record<string, string>,\n      fetchedFieldOptionsCache: Record<string, Choices>\n    ): void => {\n      // We only know the choices after the form loads.\n      formData.dynamic_form_fields = ((formData.dynamic_form_fields as any) || []).map(\n        (field: any) => {\n          // Overwrite the choices because the user's pick is in this list.\n          if (\n            field.name in formData &&\n            fetchedFieldOptionsCache?.hasOwnProperty(field.name)\n          ) {\n            field.choices = fetchedFieldOptionsCache[field.name];\n          }\n          return field;\n        }\n      );\n\n      for (const [name, value] of Object.entries(formData)) {\n        onPropertyChange(index, name, value);\n      }\n    },\n    [index, onPropertyChange]\n  );\n\n  /**\n   * Update all the AlertRuleAction's fields from the SentryAppRuleModal together\n   * only after the user clicks \"Save Changes\".\n   * @param formData Form data\n   */\n  const updateParentFromSentryAppRule = useCallback(\n    (formData: Record<string, string>): void => {\n      for (const [name, value] of Object.entries(formData)) {\n        onPropertyChange(index, name, value);\n      }\n    },\n    [index, onPropertyChange]\n  );\n\n  const {actionType, id, sentryAppInstallationUuid} = node || {};\n  const ticketRule = actionType === 'ticket';\n  const sentryAppRule = actionType === 'sentryapp' && sentryAppInstallationUuid;\n  const isNew = id === EVENT_FREQUENCY_PERCENT_CONDITION;\n  return (\n    <RuleRowContainer>\n      <RuleRow>\n        <Rule>\n          {isNew && <StyledFeatureBadge type=\"new\" />}\n          <input type=\"hidden\" name=\"id\" value={data.id} />\n          {renderRow()}\n          {ticketRule && node && (\n            <Button\n              size=\"sm\"\n              icon={<IconSettings size=\"xs\" />}\n              type=\"button\"\n              onClick={() =>\n                openModal(deps => (\n                  <TicketRuleModal\n                    {...deps}\n                    formFields={node.formFields || {}}\n                    link={node.link}\n                    ticketType={node.ticketType}\n                    instance={data}\n                    index={index}\n                    onSubmitAction={updateParentFromTicketRule}\n                    organization={organization}\n                  />\n                ))\n              }\n            >\n              {t('Issue Link Settings')}\n            </Button>\n          )}\n          {sentryAppRule && node && (\n            <Button\n              size=\"sm\"\n              icon={<IconSettings size=\"xs\" />}\n              type=\"button\"\n              disabled={Boolean(data.disabled) || disabled}\n              onClick={() => {\n                openModal(\n                  deps => (\n                    <SentryAppRuleModal\n                      {...deps}\n                      sentryAppInstallationUuid={sentryAppInstallationUuid}\n                      config={node.formFields as SchemaFormConfig}\n                      appName={node.prompt}\n                      onSubmitSuccess={updateParentFromSentryAppRule}\n                      resetValues={data}\n                    />\n                  ),\n                  {allowClickClose: false}\n                );\n              }}\n            >\n              {t('Settings')}\n            </Button>\n          )}\n        </Rule>\n        <DeleteButton\n          disabled={disabled}\n          aria-label={t('Delete Node')}\n          onClick={handleDelete}\n          type=\"button\"\n          size=\"sm\"\n          icon={<IconDelete />}\n        />\n      </RuleRow>\n      {conditionallyRenderHelpfulBanner()}\n    </RuleRowContainer>\n  );\n}\n\nexport default RuleNode;\n\nconst InlineInput = styled(Input)`\n  width: auto;\n  height: 28px;\n`;\n\nconst InlineNumberInput = styled(Input)`\n  width: 90px;\n  height: 28px;\n`;\n\nconst InlineSelectControl = styled(SelectControl)`\n  width: 180px;\n`;\n\nconst Separator = styled('span')`\n  margin-right: ${space(1)};\n  padding-top: ${space(0.5)};\n  padding-bottom: ${space(0.5)};\n`;\n\nconst RuleRow = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(1)};\n`;\n\nconst RuleRowContainer = styled('div')`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  border: 1px ${p => p.theme.innerBorder} solid;\n`;\n\nconst Rule = styled('div')`\n  display: flex;\n  align-items: center;\n  flex: 1;\n  flex-wrap: wrap;\n`;\n\nconst DeleteButton = styled(Button)`\n  flex-shrink: 0;\n`;\n\nconst MarginlessAlert = styled(Alert)`\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  border-width: 0;\n  border-top: 1px ${p => p.theme.innerBorder} solid;\n  margin: 0;\n  padding: ${space(1)} ${space(1)};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst StyledFeatureBadge = styled(FeatureBadge)`\n  margin: 0 ${space(1)} 0 0;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {IssueOwnership, Organization, Project} from 'sentry/types';\nimport {\n  IssueAlertRuleAction,\n  IssueAlertRuleActionTemplate,\n  IssueAlertRuleCondition,\n  IssueAlertRuleConditionTemplate,\n} from 'sentry/types/alerts';\nimport {\n  CHANGE_ALERT_CONDITION_IDS,\n  COMPARISON_INTERVAL_CHOICES,\n  COMPARISON_TYPE_CHOICE_VALUES,\n  COMPARISON_TYPE_CHOICES,\n} from 'sentry/views/alerts/utils/constants';\nimport {EVENT_FREQUENCY_PERCENT_CONDITION} from 'sentry/views/projectInstall/issueAlertOptions';\n\nimport {AlertRuleComparisonType} from '../metric/types';\n\nimport RuleNode from './ruleNode';\n\ntype Props = {\n  disabled: boolean;\n  error: React.ReactNode;\n  /**\n   * actions/conditions that have been added to the rule\n   */\n  items: IssueAlertRuleAction[] | IssueAlertRuleCondition[];\n  /**\n   * All available actions or conditions\n   */\n  nodes: IssueAlertRuleActionTemplate[] | IssueAlertRuleConditionTemplate[] | null;\n  onAddRow: (value: string) => void;\n  onDeleteRow: (ruleIndex: number) => void;\n  onPropertyChange: (ruleIndex: number, prop: string, val: string) => void;\n  onResetRow: (ruleIndex: number, name: string, value: string) => void;\n  organization: Organization;\n  /**\n   * Placeholder for select control\n   */\n  placeholder: string;\n  project: Project;\n  ownership?: null | IssueOwnership;\n  selectType?: 'grouped';\n};\n\nclass RuleNodeList extends Component<Props> {\n  componentWillUnmount() {\n    window.clearTimeout(this.propertyChangeTimeout);\n  }\n\n  propertyChangeTimeout: number | undefined = undefined;\n\n  getNode = (\n    id: string,\n    itemIdx: number\n  ):\n    | IssueAlertRuleActionTemplate\n    | IssueAlertRuleConditionTemplate\n    | null\n    | undefined => {\n    const {nodes, items, organization, onPropertyChange} = this.props;\n    const node = nodes ? nodes.find(n => n.id === id) : null;\n\n    if (!node) {\n      return null;\n    }\n\n    if (\n      !organization.features.includes('change-alerts') ||\n      !CHANGE_ALERT_CONDITION_IDS.includes(node.id)\n    ) {\n      return node;\n    }\n\n    const item = items[itemIdx] as IssueAlertRuleCondition;\n\n    let changeAlertNode: IssueAlertRuleConditionTemplate = {\n      ...node,\n      label: node.label.replace('...', ' {comparisonType}'),\n      formFields: {\n        ...node.formFields,\n        comparisonType: {\n          type: 'choice',\n          choices: COMPARISON_TYPE_CHOICES,\n          // give an initial value from not among choices so selector starts with none selected\n          initial: 'select',\n        },\n      },\n    };\n\n    // item.comparison type isn't backfilled and is missing for old alert rules\n    // this is a problem when an old alert is being edited, need to initialize it\n    if (!item.comparisonType && item.value && item.name) {\n      item.comparisonType = item.comparisonInterval === undefined ? 'count' : 'percent';\n    }\n\n    if (item.comparisonType) {\n      changeAlertNode = {\n        ...changeAlertNode,\n        label: changeAlertNode.label.replace(\n          '{comparisonType}',\n          COMPARISON_TYPE_CHOICE_VALUES[item.comparisonType]\n        ),\n      };\n\n      if (item.comparisonType === AlertRuleComparisonType.PERCENT) {\n        if (!item.comparisonInterval) {\n          // comparisonInterval value in IssueRuleEditor state\n          // is undefined even if initial value is defined\n          // can't directly call onPropertyChange, because\n          // getNode is called during render\n          window.clearTimeout(this.propertyChangeTimeout);\n          this.propertyChangeTimeout = window.setTimeout(() =>\n            onPropertyChange(itemIdx, 'comparisonInterval', '1w')\n          );\n        }\n        changeAlertNode = {\n          ...changeAlertNode,\n          formFields: {\n            ...changeAlertNode.formFields,\n            comparisonInterval: {\n              type: 'choice',\n              choices: COMPARISON_INTERVAL_CHOICES,\n              initial: '1w',\n            },\n          },\n        };\n      }\n    }\n\n    return changeAlertNode;\n  };\n\n  render() {\n    const {\n      onAddRow,\n      onResetRow,\n      onDeleteRow,\n      onPropertyChange,\n      nodes,\n      placeholder,\n      items,\n      organization,\n      ownership,\n      project,\n      disabled,\n      error,\n      selectType,\n    } = this.props;\n\n    const enabledNodes = nodes ? nodes.filter(({enabled}) => enabled) : [];\n\n    const createSelectOptions = (actions: IssueAlertRuleActionTemplate[]) =>\n      actions.map(node => {\n        const isNew = node.id === EVENT_FREQUENCY_PERCENT_CONDITION;\n\n        if (node.id.includes('NotifyEmailAction')) {\n          return {\n            value: node.id,\n            label: organization.features?.includes('alert-release-notification-workflow')\n              ? t('Issue Owners, Team, Member, or Release Members')\n              : t('Issue Owners, Team, or Member'),\n          };\n        }\n\n        return {\n          value: node.id,\n          label: (\n            <Fragment>\n              {isNew && <StyledFeatureBadge type=\"new\" noTooltip />}\n              {node.prompt?.length ? node.prompt : node.label}\n            </Fragment>\n          ),\n        };\n      });\n\n    let options: any = !selectType ? createSelectOptions(enabledNodes) : [];\n\n    if (selectType === 'grouped') {\n      const grouped = enabledNodes.reduce(\n        (acc, curr) => {\n          if (curr.actionType === 'ticket') {\n            acc.ticket.push(curr);\n          } else if (curr.id.includes('event_frequency')) {\n            acc.frequency.push(curr);\n          } else if (\n            curr.id.includes('sentry.rules.conditions') &&\n            !curr.id.includes('event_frequency')\n          ) {\n            acc.change.push(curr);\n          } else if (curr.id.includes('sentry.integrations')) {\n            acc.notifyIntegration.push(curr);\n          } else if (curr.id.includes('notify_event')) {\n            acc.notifyIntegration.push(curr);\n          } else {\n            acc.notify.push(curr);\n          }\n          return acc;\n        },\n        {\n          notify: [] as IssueAlertRuleActionTemplate[],\n          notifyIntegration: [] as IssueAlertRuleActionTemplate[],\n          ticket: [] as IssueAlertRuleActionTemplate[],\n          change: [] as IssueAlertRuleConditionTemplate[],\n          frequency: [] as IssueAlertRuleConditionTemplate[],\n        }\n      );\n\n      options = Object.entries(grouped)\n        .filter(([_, values]) => values.length)\n        .map(([key, values]) => {\n          const label = {\n            notify: t('Send notification to\\u{2026}'),\n            notifyIntegration: t('Notify integration\\u{2026}'),\n            ticket: t('Create new\\u{2026}'),\n            change: t('Issue state change'),\n            frequency: t('Issue frequency'),\n          };\n\n          return {label: label[key], options: createSelectOptions(values)};\n        });\n    }\n\n    return (\n      <Fragment>\n        <RuleNodes>\n          {error}\n          {items.map((item, idx) => (\n            <RuleNode\n              key={idx}\n              index={idx}\n              node={this.getNode(item.id, idx)}\n              onDelete={onDeleteRow}\n              onPropertyChange={onPropertyChange}\n              onReset={onResetRow}\n              data={item}\n              organization={organization}\n              project={project}\n              disabled={disabled}\n              ownership={ownership}\n            />\n          ))}\n        </RuleNodes>\n        <StyledSelectControl\n          placeholder={placeholder}\n          value={null}\n          onChange={obj => onAddRow(obj ? obj.value : obj)}\n          options={options}\n          disabled={disabled}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default RuleNodeList;\n\nconst StyledSelectControl = styled(SelectControl)`\n  width: 100%;\n`;\n\nconst RuleNodes = styled('div')`\n  display: grid;\n  margin-bottom: ${space(1)};\n  gap: ${space(1)};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    grid-auto-flow: row;\n  }\n`;\n\nconst StyledFeatureBadge = styled(FeatureBadge)`\n  margin: 0 ${space(1)} 0 0;\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {closeModal, ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport SentryAppExternalForm, {\n  SchemaFormConfig,\n} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\n\ntype Props = ModalRenderProps & {\n  appName: string;\n  config: SchemaFormConfig;\n  onSubmitSuccess: React.ComponentProps<typeof SentryAppExternalForm>['onSubmitSuccess'];\n  resetValues: {[key: string]: any};\n  sentryAppInstallationUuid: string;\n};\n\nconst SentryAppRuleModal = ({\n  Header,\n  Body,\n  sentryAppInstallationUuid,\n  appName,\n  config,\n  resetValues,\n  onSubmitSuccess,\n}: Props) => (\n  <Fragment>\n    <Header closeButton>\n      <div>{tct('[name] Settings', {name: appName})}</div>\n      {config.description && <Description>{config.description}</Description>}\n    </Header>\n    <Body>\n      <SentryAppExternalForm\n        sentryAppInstallationUuid={sentryAppInstallationUuid}\n        appName={appName}\n        config={resetValues?.formFields || config}\n        element=\"alert-rule-action\"\n        action=\"create\"\n        onSubmitSuccess={(...params) => {\n          onSubmitSuccess(...params);\n          closeModal();\n        }}\n        resetValues={{settings: resetValues?.settings}}\n      />\n    </Body>\n  </Fragment>\n);\n\nconst Description = styled('div')`\n  padding-top: ${space(0)};\n  color: ${p => p.theme.subText};\n`;\n\nexport default SentryAppRuleModal;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport PluginIcon from 'sentry/plugins/components/pluginIcon';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, Project} from 'sentry/types';\n\ntype Props = AsyncComponent['props'] & {\n  organization: Organization;\n  projectSlug: string;\n};\n\ntype State = AsyncComponent['state'] & {\n  detailedProject?: Project & {\n    hasAlertIntegrationInstalled: boolean;\n  };\n};\n\n/**\n * This component renders a button to Set up an alert integration (just Slack for now)\n * if the project has no alerting integrations setup already.\n */\nexport default class SetupAlertIntegrationButton extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {projectSlug, organization} = this.props;\n    return [\n      [\n        'detailedProject',\n        `/projects/${organization.slug}/${projectSlug}/?expand=hasAlertIntegration`,\n      ],\n    ];\n  }\n\n  renderLoading() {\n    return null;\n  }\n\n  // if there is an error, just show nothing\n  renderError() {\n    return null;\n  }\n\n  renderBody(): React.ReactNode {\n    const {organization} = this.props;\n    const {detailedProject} = this.state;\n    // don't render anything if we don't have the project yet or if an alert integration\n    // is installed\n    if (!detailedProject || detailedProject.hasAlertIntegrationInstalled) {\n      return null;\n    }\n\n    const config = ConfigStore.getConfig();\n    // link to docs to set up Slack for self-hosted folks\n    const referrerQuery = '?referrer=issue-alert-builder';\n    const buttonProps = config.isSelfHosted\n      ? {\n          href: `https://develop.sentry.dev/integrations/slack/${referrerQuery}`,\n        }\n      : {\n          to: `/settings/${organization.slug}/integrations/slack/${referrerQuery}`,\n        };\n\n    // TOOD(Steve): need to use the Tooltip component because adding a title to the button\n    // puts the tooltip in the upper left hand corner of the page instead of the button\n    return (\n      <Tooltip title={t('Send Alerts to Slack. Install the integration now.')}>\n        <Button\n          size=\"sm\"\n          icon={<PluginIcon pluginId=\"slack\" size={16} />}\n          {...buttonProps}\n        >\n          {t('Set Up Slack Now')}\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport AbstractExternalIssueForm, {\n  ExternalIssueFormErrors,\n} from 'sentry/components/externalIssues/abstractExternalIssueForm';\nimport Form from 'sentry/components/forms/form';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Choices, IssueConfigField, Organization} from 'sentry/types';\nimport {IssueAlertRuleAction} from 'sentry/types/alerts';\nimport AsyncView from 'sentry/views/asyncView';\n\nconst IGNORED_FIELDS = ['Sprint'];\n\ntype Props = {\n  // Comes from the in-code definition of a `TicketEventAction`.\n  formFields: {[key: string]: any};\n  index: number;\n  // The AlertRuleAction from DB.\n  instance: IssueAlertRuleAction;\n  onSubmitAction: (\n    data: {[key: string]: string},\n    fetchedFieldOptionsCache: Record<string, Choices>\n  ) => void;\n  organization: Organization;\n  link?: string;\n  ticketType?: string;\n} & AbstractExternalIssueForm['props'];\n\ntype State = {\n  issueConfigFieldsCache: IssueConfigField[];\n} & AbstractExternalIssueForm['state'];\n\nclass TicketRuleModal extends AbstractExternalIssueForm<Props, State> {\n  getDefaultState(): State {\n    const {instance} = this.props;\n    const issueConfigFieldsCache = Object.values(instance?.dynamic_form_fields || {});\n    return {\n      ...super.getDefaultState(),\n      fetchedFieldOptionsCache: Object.fromEntries(\n        issueConfigFieldsCache.map(field => [field.name, field.choices as Choices])\n      ),\n      issueConfigFieldsCache,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {instance} = this.props;\n    const query = (instance.dynamic_form_fields || [])\n      .filter(field => field.updatesForm)\n      .filter(field => instance.hasOwnProperty(field.name))\n      .reduce(\n        (accumulator, {name}) => {\n          accumulator[name] = instance[name];\n          return accumulator;\n        },\n        {action: 'create'}\n      );\n    return [['integrationDetails', this.getEndPointString(), {query}]];\n  }\n\n  handleReceiveIntegrationDetails = (integrationDetails: any) => {\n    this.setState({\n      issueConfigFieldsCache: integrationDetails[this.getConfigName()],\n    });\n  };\n\n  /**\n   * Get a list of formFields names with valid config data.\n   */\n  getValidAndSavableFieldNames = (): string[] => {\n    const {issueConfigFieldsCache} = this.state;\n    return (issueConfigFieldsCache || [])\n      .filter(field => field.hasOwnProperty('name'))\n      .map(field => field.name);\n  };\n\n  getEndPointString(): string {\n    const {instance, organization} = this.props;\n    return `/organizations/${organization.slug}/integrations/${instance.integration}/?ignored=${IGNORED_FIELDS}`;\n  }\n\n  /**\n   * Clean up the form data before saving it to state.\n   */\n  cleanData = (data: {\n    [key: string]: string;\n  }): {\n    [key: string]: any;\n    integration?: string | number;\n  } => {\n    const {instance} = this.props;\n    const {issueConfigFieldsCache} = this.state;\n    const names: string[] = this.getValidAndSavableFieldNames();\n    const formData: {\n      [key: string]: any;\n      integration?: string | number;\n    } = {};\n    if (instance?.hasOwnProperty('integration')) {\n      formData.integration = instance.integration;\n    }\n    formData.dynamic_form_fields = issueConfigFieldsCache;\n    for (const [key, value] of Object.entries(data)) {\n      if (names.includes(key)) {\n        formData[key] = value;\n      }\n    }\n    return formData;\n  };\n\n  onFormSubmit: Form['props']['onSubmit'] = (data, _success, _error, e, model) => {\n    const {onSubmitAction, closeModal} = this.props;\n    const {fetchedFieldOptionsCache} = this.state;\n\n    // This is a \"fake form\", so don't actually POST to an endpoint.\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (model.validateForm()) {\n      onSubmitAction(this.cleanData(data), fetchedFieldOptionsCache);\n      addSuccessMessage(t('Changes applied.'));\n      closeModal();\n    }\n  };\n\n  getFormProps = (): Form['props'] => {\n    const {closeModal} = this.props;\n\n    return {\n      ...this.getDefaultFormProps(),\n      cancelLabel: t('Close'),\n      onCancel: closeModal,\n      onSubmit: this.onFormSubmit,\n      submitLabel: t('Apply Changes'),\n    };\n  };\n\n  /**\n   * Set the initial data from the Rule, replace `title` and `description` with\n   * disabled inputs, and use the cached dynamic choices.\n   */\n  cleanFields = (): IssueConfigField[] => {\n    const {instance} = this.props;\n\n    const fields: IssueConfigField[] = [\n      {\n        name: 'title',\n        label: 'Title',\n        type: 'string',\n        default: 'This will be the same as the Sentry Issue.',\n        disabled: true,\n      } as IssueConfigField,\n      {\n        name: 'description',\n        label: 'Description',\n        type: 'string',\n        default: 'This will be generated from the Sentry Issue details.',\n        disabled: true,\n      } as IssueConfigField,\n    ];\n\n    return fields.concat(\n      this.getCleanedFields()\n        // Skip fields if they already exist.\n        .filter(field => !fields.map(f => f.name).includes(field.name))\n        .map(field => {\n          // Overwrite defaults from cache.\n          if (instance.hasOwnProperty(field.name)) {\n            field.default = instance[field.name] || field.default;\n          }\n          return field;\n        })\n    );\n  };\n\n  getErrors() {\n    const errors: ExternalIssueFormErrors = {};\n    for (const field of this.cleanFields()) {\n      if (field.type === 'select' && field.default) {\n        const fieldChoices = (field.choices || []) as Choices;\n        const found = fieldChoices.find(([value, _]) =>\n          Array.isArray(field.default)\n            ? field.default.includes(value)\n            : value === field.default\n        );\n\n        if (!found) {\n          errors[field.name] = (\n            <FieldErrorLabel>{`Could not fetch saved option for ${field.label}. Please reselect.`}</FieldErrorLabel>\n          );\n        }\n      }\n    }\n    return errors;\n  }\n\n  renderBodyText = () => {\n    // `ticketType` already includes indefinite article.\n    const {ticketType, link} = this.props;\n    return (\n      <BodyText>\n        {tct(\n          'When this alert is triggered [ticketType] will be ' +\n            'created with the following fields. It will also [linkToDocs] ' +\n            'with the new Sentry Issue.',\n          {\n            linkToDocs: <ExternalLink href={link}>{t('stay in sync')}</ExternalLink>,\n            ticketType,\n          }\n        )}\n      </BodyText>\n    );\n  };\n\n  render() {\n    return this.renderForm(this.cleanFields(), this.getErrors());\n  }\n}\n\nconst BodyText = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst FieldErrorLabel = styled('label')`\n  padding-bottom: ${space(2)};\n  color: ${p => p.theme.errorText};\n`;\n\nexport default TicketRuleModal;\n","import {Client} from 'sentry/api';\n\nimport {MetricRule, SavedMetricRule} from './types';\n\nfunction isSavedRule(rule: MetricRule): rule is SavedMetricRule {\n  return !!rule.id;\n}\n\n/**\n * Add a new rule or update an existing rule\n *\n * @param api API Client\n * @param orgId Organization slug\n * @param rule Saved or Unsaved Metric Rule\n * @param query Query parameters for the request eg - referrer\n */\nexport function addOrUpdateRule(\n  api: Client,\n  orgId: string,\n  projectId: string,\n  rule: MetricRule,\n  query?: object | any\n) {\n  const isExisting = isSavedRule(rule);\n  const endpoint = `/projects/${orgId}/${projectId}/alert-rules/${\n    isSavedRule(rule) ? `${rule.id}/` : ''\n  }`;\n  const method = isExisting ? 'PUT' : 'POST';\n\n  return api.requestPromise(endpoint, {\n    method,\n    data: rule,\n    query,\n    includeAllArgs: true,\n  });\n}\n\n/**\n * Delete an existing rule\n *\n * @param api API Client\n * @param orgId Organization slug\n * @param rule Saved or Unsaved Metric Rule\n */\nexport function deleteRule(\n  api: Client,\n  orgId: string,\n  rule: SavedMetricRule\n): Promise<void> {\n  return api.requestPromise(`/organizations/${orgId}/alert-rules/${rule.id}/`, {\n    method: 'DELETE',\n  });\n}\n","import {t} from 'sentry/locale';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {AggregationKeyWithAlias, LooseFieldKey} from 'sentry/utils/discover/fields';\nimport {AggregationKey} from 'sentry/utils/fields';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {\n  AlertRuleComparisonType,\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  Dataset,\n  Datasource,\n  EventTypes,\n  TimeWindow,\n  Trigger,\n  UnsavedMetricRule,\n} from 'sentry/views/alerts/rules/metric/types';\nimport {\n  DATA_SOURCE_TO_SET_AND_EVENT_TYPES,\n  getQueryDatasource,\n  isSessionAggregate,\n} from 'sentry/views/alerts/utils';\nimport {AlertType, WizardRuleTemplate} from 'sentry/views/alerts/wizard/options';\n\nexport const DEFAULT_COUNT_TIME_WINDOW = 1; // 1min\nexport const DEFAULT_CHANGE_TIME_WINDOW = 60; // 1h\nexport const DEFAULT_CHANGE_COMP_DELTA = 10080; // 1w\n\nexport const DEFAULT_AGGREGATE = 'count()';\nexport const DEFAULT_TRANSACTION_AGGREGATE = 'p95(transaction.duration)';\n\nexport const DATASET_EVENT_TYPE_FILTERS = {\n  [Dataset.ERRORS]: 'event.type:error',\n  [Dataset.TRANSACTIONS]: 'event.type:transaction',\n  [Dataset.GENERIC_METRICS]: 'event.type:transaction',\n} as const;\n\nexport const DATASOURCE_EVENT_TYPE_FILTERS = {\n  [Datasource.ERROR_DEFAULT]: 'event.type:[error, default]',\n  [Datasource.ERROR]: 'event.type:error',\n  [Datasource.DEFAULT]: 'event.type:default',\n  [Datasource.TRANSACTION]: 'event.type:transaction',\n} as const;\n\nexport type OptionConfig = {\n  aggregations: AggregationKeyWithAlias[];\n  fields: LooseFieldKey[];\n  measurementKeys?: string[];\n};\n\n/**\n * Allowed error aggregations for alerts\n */\nexport const errorFieldConfig: OptionConfig = {\n  aggregations: [AggregationKey.Count, AggregationKey.CountUnique],\n  fields: ['user'],\n};\n\nconst commonAggregations = [\n  AggregationKey.Avg,\n  AggregationKey.Percentile,\n  AggregationKey.P50,\n  AggregationKey.P75,\n  AggregationKey.P95,\n  AggregationKey.P99,\n  AggregationKey.P100,\n];\n\nconst allAggregations = [\n  ...commonAggregations,\n  AggregationKey.FailureRate,\n  AggregationKey.Apdex,\n  AggregationKey.Count,\n];\n\nexport const DuplicateMetricFields: string[] = [\n  'dataset',\n  'eventTypes',\n  'aggregate',\n  'query',\n  'timeWindow',\n  'thresholdPeriod',\n  'projects',\n  'environment',\n  'resolveThreshold',\n  'thresholdType',\n  'owner',\n  'name',\n  'projectId',\n  'comparisonDelta',\n];\n\nexport const DuplicateTriggerFields: string[] = ['alertThreshold', 'label'];\n\nexport const DuplicateActionFields: string[] = [\n  'type',\n  'targetType',\n  'targetIdentifier',\n  'inputChannelId',\n  'options',\n];\n\nexport const COMPARISON_DELTA_OPTIONS = [\n  {value: 5, label: t('same time 5 minutes ago')}, // 5 minutes\n  {value: 15, label: t('same time 15 minutes ago')}, // 15 minutes\n  {value: 60, label: t('same time one hour ago')}, // one hour\n  {value: 1440, label: t('same time one day ago')}, // one day\n  {value: 10080, label: t('same time one week ago')}, // one week\n  {value: 43200, label: t('same time one month ago')}, // 30 days\n];\n\nexport function getWizardAlertFieldConfig(\n  alertType: AlertType,\n  dataset: Dataset\n): OptionConfig {\n  if (alertType === 'custom' && dataset === Dataset.ERRORS) {\n    return errorFieldConfig;\n  }\n  // If user selected apdex we must include that in the OptionConfig as it has a user specified column\n  const aggregations =\n    alertType === 'apdex' || alertType === 'custom'\n      ? allAggregations\n      : commonAggregations;\n  return {\n    aggregations,\n    fields: ['transaction.duration'],\n    measurementKeys: Object.keys(WEB_VITAL_DETAILS),\n  };\n}\n\n/**\n * Allowed transaction aggregations for alerts\n */\nexport const transactionFieldConfig: OptionConfig = {\n  aggregations: allAggregations,\n  fields: ['transaction.duration'],\n  measurementKeys: Object.keys(WEB_VITAL_DETAILS),\n};\n\nexport function createDefaultTrigger(label: AlertRuleTriggerType): Trigger {\n  return {\n    label,\n    alertThreshold: '',\n    actions: [],\n  };\n}\n\nexport function createDefaultRule(\n  defaultRuleOptions: Partial<UnsavedMetricRule> = {}\n): UnsavedMetricRule {\n  return {\n    dataset: Dataset.ERRORS,\n    eventTypes: [EventTypes.ERROR],\n    aggregate: DEFAULT_AGGREGATE,\n    query: '',\n    timeWindow: 60,\n    thresholdPeriod: 1,\n    triggers: [\n      createDefaultTrigger(AlertRuleTriggerType.CRITICAL),\n      createDefaultTrigger(AlertRuleTriggerType.WARNING),\n    ],\n    projects: [],\n    environment: null,\n    resolveThreshold: '',\n    thresholdType: AlertRuleThresholdType.ABOVE,\n    ...defaultRuleOptions,\n  };\n}\n\n/**\n * Create an unsaved alert from a discover EventView object\n */\nexport function createRuleFromEventView(eventView: EventView): UnsavedMetricRule {\n  const parsedQuery = getQueryDatasource(eventView.query);\n  const datasetAndEventtypes = parsedQuery\n    ? DATA_SOURCE_TO_SET_AND_EVENT_TYPES[parsedQuery.source]\n    : DATA_SOURCE_TO_SET_AND_EVENT_TYPES.error;\n\n  let aggregate = eventView.getYAxis();\n  if (\n    datasetAndEventtypes.dataset === 'transactions' &&\n    /^p\\d{2,3}\\(\\)/.test(eventView.getYAxis())\n  ) {\n    // p95() -> p95(transaction.duration)\n    aggregate = eventView.getYAxis().slice(0, 3) + '(transaction.duration)';\n  }\n\n  return {\n    ...createDefaultRule(),\n    ...datasetAndEventtypes,\n    query: parsedQuery?.query ?? eventView.query,\n    aggregate,\n    environment: eventView.environment.length ? eventView.environment[0] : null,\n  };\n}\n\nexport function createRuleFromWizardTemplate(\n  wizardTemplate: WizardRuleTemplate\n): UnsavedMetricRule {\n  const {eventTypes, aggregate, dataset} = wizardTemplate;\n  const defaultRuleOptions: Partial<UnsavedMetricRule> = {};\n\n  if (isSessionAggregate(aggregate)) {\n    defaultRuleOptions.thresholdType = AlertRuleThresholdType.BELOW;\n    defaultRuleOptions.timeWindow = TimeWindow.ONE_HOUR;\n  }\n\n  if (aggregate.includes('apdex')) {\n    defaultRuleOptions.thresholdType = AlertRuleThresholdType.BELOW;\n  }\n\n  return {\n    ...createDefaultRule(defaultRuleOptions),\n    eventTypes: [eventTypes],\n    aggregate,\n    dataset,\n  };\n}\n\nexport function getThresholdUnits(\n  aggregate: string,\n  comparisonType: AlertRuleComparisonType\n): string {\n  // cls is a number not a measurement of time\n  if (\n    isSessionAggregate(aggregate) ||\n    comparisonType === AlertRuleComparisonType.CHANGE\n  ) {\n    return '%';\n  }\n\n  if (aggregate.includes('measurements.cls')) {\n    return '';\n  }\n\n  if (aggregate.includes('duration') || aggregate.includes('measurements')) {\n    return 'ms';\n  }\n\n  return '';\n}\n","import {useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport {IconClose} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport type EventView from 'sentry/utils/discover/eventView';\nimport {\n  Aggregation,\n  AGGREGATIONS,\n  explodeFieldString,\n} from 'sentry/utils/discover/fields';\nimport {\n  errorFieldConfig,\n  transactionFieldConfig,\n} from 'sentry/views/alerts/rules/metric/constants';\nimport {getQueryDatasource} from 'sentry/views/alerts/utils';\n\n/**\n * Discover query supports more features than alert rules\n * To create an alert rule from a discover query, some parameters need to be adjusted\n */\ntype IncompatibleQueryProperties = {\n  /**\n   * Must have zero or one environments\n   */\n  hasEnvironmentError: boolean;\n  /**\n   * event.type must be error or transaction\n   */\n  hasEventTypeError: boolean;\n  /**\n   * Must have exactly one project selected and not -1 (all projects)\n   */\n  hasProjectError: boolean;\n  hasYAxisError: boolean;\n};\n\nfunction incompatibleYAxis(eventView: EventView): boolean {\n  const column = explodeFieldString(eventView.getYAxis());\n  if (\n    column.kind === 'field' ||\n    column.kind === 'equation' ||\n    column.kind === 'calculatedField'\n  ) {\n    return true;\n  }\n\n  const eventTypeMatch = eventView.query.match(/event\\.type:(transaction|error)/);\n  if (!eventTypeMatch) {\n    return false;\n  }\n\n  const dataset = eventTypeMatch[1];\n  const yAxisConfig = dataset === 'error' ? errorFieldConfig : transactionFieldConfig;\n\n  const invalidFunction = !yAxisConfig.aggregations.includes(column.function[0]);\n  // Allow empty parameters, allow all numeric parameters - eg. apdex(300)\n  const aggregation: Aggregation | undefined = AGGREGATIONS[column.function[0]];\n  if (!aggregation) {\n    return false;\n  }\n\n  const isNumericParameter = aggregation.parameters.some(\n    param => param.kind === 'value' && param.dataType === 'number'\n  );\n  // There are other measurements possible, but for the time being, only allow alerting\n  // on the predefined set of measurements for alerts.\n  const allowedParameters = [\n    '',\n    ...yAxisConfig.fields,\n    ...(yAxisConfig.measurementKeys ?? []),\n  ];\n  const invalidParameter =\n    !isNumericParameter && !allowedParameters.includes(column.function[1]);\n\n  return invalidFunction || invalidParameter;\n}\n\nexport function checkMetricAlertCompatiablity(\n  eventView: EventView\n): IncompatibleQueryProperties {\n  // Must have exactly one project selected and not -1 (all projects)\n  const hasProjectError = eventView.project.length !== 1 || eventView.project[0] === -1;\n  // Must have one or zero environments\n  const hasEnvironmentError = eventView.environment.length > 1;\n  // Must have event.type of error or transaction\n  const hasEventTypeError = getQueryDatasource(eventView.query) === null;\n  // yAxis must be a function and enabled on alerts\n  const hasYAxisError = incompatibleYAxis(eventView);\n  return {\n    hasProjectError,\n    hasEnvironmentError,\n    hasEventTypeError,\n    hasYAxisError,\n  };\n}\n\ninterface IncompatibleAlertQueryProps {\n  eventView: EventView;\n  orgSlug: string;\n}\n\n/**\n * Displays messages to the user on what needs to change in their query\n */\nexport function IncompatibleAlertQuery(props: IncompatibleAlertQueryProps) {\n  const [isOpen, setIsOpen] = useState(true);\n  const incompatibleQuery = checkMetricAlertCompatiablity(props.eventView);\n  const totalErrors = Object.values(incompatibleQuery).filter(val => val).length;\n\n  if (!totalErrors || !isOpen) {\n    return null;\n  }\n\n  const eventTypeError = props.eventView.clone();\n  eventTypeError.query += ' event.type:error';\n  const eventTypeTransaction = props.eventView.clone();\n  eventTypeTransaction.query += ' event.type:transaction';\n  const eventTypeDefault = props.eventView.clone();\n  eventTypeDefault.query += ' event.type:default';\n  const eventTypeErrorDefault = props.eventView.clone();\n  eventTypeErrorDefault.query += ' event.type:error or event.type:default';\n  const pathname = `/organizations/${props.orgSlug}/discover/results/`;\n\n  const eventTypeLinks = {\n    error: (\n      <Link\n        to={{\n          pathname,\n          query: eventTypeError.generateQueryStringObject(),\n        }}\n      />\n    ),\n    default: (\n      <Link\n        to={{\n          pathname,\n          query: eventTypeDefault.generateQueryStringObject(),\n        }}\n      />\n    ),\n    transaction: (\n      <Link\n        to={{\n          pathname,\n          query: eventTypeTransaction.generateQueryStringObject(),\n        }}\n      />\n    ),\n    errorDefault: (\n      <Link\n        to={{\n          pathname,\n          query: eventTypeErrorDefault.generateQueryStringObject(),\n        }}\n      />\n    ),\n  };\n\n  return (\n    <StyledAlert\n      type=\"info\"\n      showIcon\n      trailingItems={\n        <Button\n          icon={<IconClose size=\"sm\" />}\n          aria-label={t('Close')}\n          size=\"zero\"\n          onClick={() => setIsOpen(false)}\n          borderless\n        />\n      }\n    >\n      {t('The following problems occurred while creating your alert:')}\n      <StyledUnorderedList>\n        {incompatibleQuery.hasProjectError && <li>{t('No project was selected')}</li>}\n        {incompatibleQuery.hasEnvironmentError && (\n          <li>{t('Too many environments were selected')}</li>\n        )}\n        {incompatibleQuery.hasEventTypeError && (\n          <li>{tct(\"An event type wasn't selected\", eventTypeLinks)}</li>\n        )}\n        {incompatibleQuery.hasYAxisError && (\n          <li>\n            {tct('An alert can’t use the metric [yAxis] just yet.', {\n              yAxis: <StyledCode>{props.eventView.getYAxis()}</StyledCode>,\n            })}\n          </li>\n        )}\n      </StyledUnorderedList>\n    </StyledAlert>\n  );\n}\n\nconst StyledAlert = styled(Alert)`\n  color: ${p => p.theme.textColor};\n`;\n\nconst StyledUnorderedList = styled('ul')`\n  margin-bottom: 0;\n`;\n\nconst StyledCode = styled('code')`\n  background-color: transparent;\n  padding: 0;\n`;\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport FormField from 'sentry/components/forms/formField';\nimport {Organization} from 'sentry/types';\nimport {\n  Aggregation,\n  AGGREGATIONS,\n  explodeFieldString,\n  generateFieldAsString,\n} from 'sentry/utils/discover/fields';\nimport {\n  AlertType,\n  hideParameterSelectorSet,\n  hidePrimarySelectorSet,\n} from 'sentry/views/alerts/wizard/options';\nimport {QueryField} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValueKind} from 'sentry/views/eventsV2/table/types';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\n\nimport {\n  errorFieldConfig,\n  getWizardAlertFieldConfig,\n  OptionConfig,\n  transactionFieldConfig,\n} from './constants';\nimport {Dataset} from './types';\n\ntype Props = Omit<FormField['props'], 'children'> & {\n  organization: Organization;\n  alertType?: AlertType;\n  /**\n   * Optionally set a width for each column of selector\n   */\n  columnWidth?: number;\n  inFieldLabels?: boolean;\n};\n\nexport const getFieldOptionConfig = ({\n  dataset,\n  alertType,\n}: {\n  dataset: Dataset;\n  alertType?: AlertType;\n}) => {\n  let config: OptionConfig;\n  let hidePrimarySelector = false;\n  let hideParameterSelector = false;\n  if (alertType) {\n    config = getWizardAlertFieldConfig(alertType, dataset);\n    hidePrimarySelector = hidePrimarySelectorSet.has(alertType);\n    hideParameterSelector = hideParameterSelectorSet.has(alertType);\n  } else {\n    config = dataset === Dataset.ERRORS ? errorFieldConfig : transactionFieldConfig;\n  }\n  const aggregations = Object.fromEntries<Aggregation>(\n    config.aggregations.map(key => {\n      // TODO(scttcper): Temporary hack for default value while we handle the translation of user\n      if (key === 'count_unique') {\n        const agg = AGGREGATIONS[key] as Aggregation;\n        agg.getFieldOverrides = () => {\n          return {defaultValue: 'tags[sentry:user]'};\n        };\n        return [key, agg];\n      }\n\n      return [key, AGGREGATIONS[key]];\n    })\n  );\n\n  const fieldKeys = config.fields.map(key => {\n    // XXX(epurkhiser): Temporary hack while we handle the translation of user ->\n    // tags[sentry:user].\n    if (key === 'user') {\n      return 'tags[sentry:user]';\n    }\n\n    return key;\n  });\n\n  const {measurementKeys} = config;\n\n  return {\n    fieldOptionsConfig: {aggregations, fieldKeys, measurementKeys},\n    hidePrimarySelector,\n    hideParameterSelector,\n  };\n};\n\nconst MetricField = ({\n  organization,\n  columnWidth,\n  inFieldLabels,\n  alertType,\n  ...props\n}: Props) => (\n  <FormField {...props}>\n    {({onChange, value, model, disabled}) => {\n      const dataset = model.getValue('dataset');\n\n      const {fieldOptionsConfig, hidePrimarySelector, hideParameterSelector} =\n        getFieldOptionConfig({\n          dataset: dataset as Dataset,\n          alertType,\n        });\n      const fieldOptions = generateFieldOptions({organization, ...fieldOptionsConfig});\n      const fieldValue = explodeFieldString(value ?? '');\n\n      const fieldKey =\n        fieldValue?.kind === FieldValueKind.FUNCTION\n          ? `function:${fieldValue.function[0]}`\n          : '';\n\n      const selectedField = fieldOptions[fieldKey]?.value;\n      const numParameters: number =\n        selectedField?.kind === FieldValueKind.FUNCTION\n          ? selectedField.meta.parameters.length\n          : 0;\n\n      const parameterColumns =\n        numParameters - (hideParameterSelector ? 1 : 0) - (hidePrimarySelector ? 1 : 0);\n\n      return (\n        <Fragment>\n          <StyledQueryField\n            filterPrimaryOptions={option => option.value.kind === FieldValueKind.FUNCTION}\n            fieldOptions={fieldOptions}\n            fieldValue={fieldValue}\n            onChange={v => onChange(generateFieldAsString(v), {})}\n            columnWidth={columnWidth}\n            gridColumns={parameterColumns + 1}\n            inFieldLabels={inFieldLabels}\n            shouldRenderTag={false}\n            disabled={disabled}\n            hideParameterSelector={hideParameterSelector}\n            hidePrimarySelector={hidePrimarySelector}\n          />\n        </Fragment>\n      );\n    }}\n  </FormField>\n);\n\nconst StyledQueryField = styled(QueryField)<{gridColumns: number; columnWidth?: number}>`\n  ${p =>\n    p.columnWidth &&\n    css`\n      width: ${p.gridColumns * p.columnWidth}px;\n    `}\n`;\n\nconst PresetButton = styled(Button)<{disabled: boolean}>`\n  ${p =>\n    p.disabled &&\n    css`\n      color: ${p.theme.textColor};\n      &:hover,\n      &:focus {\n        color: ${p.theme.textColor};\n      }\n    `}\n`;\n\nPresetButton.defaultProps = {\n  priority: 'link',\n  borderless: true,\n};\n\nexport default MetricField;\n","import {useState} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport useApi from 'sentry/utils/useApi';\n\nimport {Preset, PRESET_AGGREGATES, PresetContext} from './presets';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  className?: string;\n  onSelect?(preset: Preset, ctx: PresetContext): void;\n  selectedPresetId?: string;\n};\nexport default function PresetSidebar(props: Props) {\n  return (\n    <div className={props.className}>\n      <Header>{t('Suggested Alerts')}</Header>\n      {PRESET_AGGREGATES.map((preset, i) => (\n        <PresetSidebarItem\n          key={preset.id}\n          preset={preset}\n          index={i}\n          organization={props.organization}\n          project={props.project}\n          selected={props.selectedPresetId === preset.id}\n          onClick={ctx => props.onSelect && props.onSelect(preset, ctx)}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction PresetSidebarItem(props: {\n  index: number;\n  organization: Organization;\n  preset: Preset;\n  project: Project;\n  onClick?: (ctx: PresetContext) => void;\n  selected?: boolean;\n}) {\n  const theme = useTheme();\n  const api = useApi();\n  const [loading, setLoading] = useState(false);\n  const iconColor = theme.charts.getColorPalette(PRESET_AGGREGATES.length)[props.index];\n  return (\n    <StyledPresetSidebarItemContainer\n      selected={props.selected || false}\n      onClick={() => {\n        if (loading) {\n          return;\n        }\n        trackAdvancedAnalyticsEvent('growth.metric_alert_preset_sidebar_clicked', {\n          organization: props.organization,\n          preset: props.preset.id,\n        });\n        setLoading(true);\n        props.preset\n          .makeContext(api, props.project, props.organization)\n          .then(props.onClick)\n          .finally(() => setLoading(false));\n      }}\n    >\n      {loading && (\n        <LoadingWrapper>\n          <StyledLoadingIndicator hideMessage />\n        </LoadingWrapper>\n      )}\n      <IconWrapper backgroundColor={iconColor}>\n        {<props.preset.Icon color=\"white\" />}\n      </IconWrapper>\n      <div>\n        <h1>{props.preset.title}</h1>\n        <small>{props.preset.description}</small>\n      </div>\n    </StyledPresetSidebarItemContainer>\n  );\n}\n\nconst LoadingWrapper = styled('div')`\n  position: absolute;\n  background-color: ${p => p.theme.overlayBackgroundAlpha};\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: default;\n`;\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  margin: 0;\n`;\nconst StyledPresetSidebarItemContainer = styled('div')<{selected: boolean}>`\n  border: 1px solid transparent;\n  position: relative;\n  overflow: hidden;\n  border-radius: ${p => p.theme.borderRadius};\n  transition: border-color 0.3s ease;\n  padding: ${space(2)};\n  h1 {\n    font-size: ${p => p.theme.fontSizeLarge};\n    font-weight: 500;\n    margin-bottom: 0;\n    color: ${p => p.theme.gray500};\n  }\n  small {\n    color: ${p => p.theme.gray300};\n  }\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  cursor: pointer;\n  user-select: none;\n\n  &:hover {\n    border-color: ${p => p.theme.gray100};\n  }\n  ${p => p.selected && `border-color: ${p.theme.gray200};`}\n`;\n\nconst Header = styled('h5')`\n  margin-left: ${space(1)};\n`;\n\nconst IconWrapper = styled('div')<{backgroundColor: string}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${space(1)};\n  min-width: 40px;\n  height: 40px;\n  border-radius: ${p => p.theme.borderRadius};\n  background: ${p => p.backgroundColor};\n  margin-right: ${space(1)};\n`;\n","import {Fragment, PureComponent} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport {components} from 'react-select';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport pick from 'lodash/pick';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport FormField from 'sentry/components/forms/formField';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport SelectField from 'sentry/components/forms/selectField';\nimport IdBadge from 'sentry/components/idBadge';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport ListItem from 'sentry/components/list/listItem';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Environment, Organization, Project, SelectValue} from 'sentry/types';\nimport {getDisplayName} from 'sentry/utils/environment';\nimport {MobileVital, WebVital} from 'sentry/utils/fields';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport withProjects from 'sentry/utils/withProjects';\nimport WizardField from 'sentry/views/alerts/rules/metric/wizardField';\nimport {\n  convertDatasetEventTypesToSource,\n  DATA_SOURCE_LABELS,\n  DATA_SOURCE_TO_SET_AND_EVENT_TYPES,\n} from 'sentry/views/alerts/utils';\nimport {AlertType} from 'sentry/views/alerts/wizard/options';\n\nimport {isCrashFreeAlert} from './utils/isCrashFreeAlert';\nimport {DEFAULT_AGGREGATE, DEFAULT_TRANSACTION_AGGREGATE} from './constants';\nimport {AlertRuleComparisonType, Dataset, Datasource, TimeWindow} from './types';\n\nconst TIME_WINDOW_MAP: Record<TimeWindow, string> = {\n  [TimeWindow.ONE_MINUTE]: t('1 minute'),\n  [TimeWindow.FIVE_MINUTES]: t('5 minutes'),\n  [TimeWindow.TEN_MINUTES]: t('10 minutes'),\n  [TimeWindow.FIFTEEN_MINUTES]: t('15 minutes'),\n  [TimeWindow.THIRTY_MINUTES]: t('30 minutes'),\n  [TimeWindow.ONE_HOUR]: t('1 hour'),\n  [TimeWindow.TWO_HOURS]: t('2 hours'),\n  [TimeWindow.FOUR_HOURS]: t('4 hours'),\n  [TimeWindow.ONE_DAY]: t('24 hours'),\n};\n\ntype Props = {\n  alertType: AlertType;\n  api: Client;\n  comparisonType: AlertRuleComparisonType;\n  dataset: Dataset;\n  disabled: boolean;\n  onComparisonDeltaChange: (value: number) => void;\n  onFilterSearch: (query: string) => void;\n  onTimeWindowChange: (value: number) => void;\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n  router: InjectedRouter;\n  showMEPAlertBanner: boolean;\n  thresholdChart: React.ReactNode;\n  timeWindow: number;\n  allowChangeEventTypes?: boolean;\n  comparisonDelta?: number;\n  disableProjectSelector?: boolean;\n  loadingProjects?: boolean;\n};\n\ntype State = {\n  environments: Environment[] | null;\n};\n\nclass RuleConditionsForm extends PureComponent<Props, State> {\n  state: State = {\n    environments: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.project.id === this.props.project.id) {\n      return;\n    }\n\n    this.fetchData();\n  }\n\n  formElemBaseStyle = {\n    padding: `${space(0.5)}`,\n    border: 'none',\n  };\n\n  async fetchData() {\n    const {api, organization, project} = this.props;\n\n    try {\n      const environments = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/environments/`,\n        {\n          query: {\n            visibility: 'visible',\n          },\n        }\n      );\n      this.setState({environments});\n    } catch (_err) {\n      addErrorMessage(t('Unable to fetch environments'));\n    }\n  }\n\n  get timeWindowOptions() {\n    let options: Record<string, string> = TIME_WINDOW_MAP;\n\n    if (isCrashFreeAlert(this.props.dataset)) {\n      options = pick(TIME_WINDOW_MAP, [\n        // TimeWindow.THIRTY_MINUTES, leaving this option out until we figure out the sub-hour session resolution chart limitations\n        TimeWindow.ONE_HOUR,\n        TimeWindow.TWO_HOURS,\n        TimeWindow.FOUR_HOURS,\n        TimeWindow.ONE_DAY,\n      ]);\n    }\n\n    return Object.entries(options).map(([value, label]) => ({\n      value: parseInt(value, 10),\n      label: tct('[timeWindow] interval', {\n        timeWindow: label.slice(-1) === 's' ? label.slice(0, -1) : label,\n      }),\n    }));\n  }\n\n  get searchPlaceholder() {\n    switch (this.props.dataset) {\n      case Dataset.ERRORS:\n        return t('Filter events by level, message, and other properties\\u2026');\n      case Dataset.METRICS:\n      case Dataset.SESSIONS:\n        return t('Filter sessions by release version\\u2026');\n      case Dataset.TRANSACTIONS:\n      default:\n        return t('Filter transactions by URL, tags, and other properties\\u2026');\n    }\n  }\n\n  get searchSupportedTags() {\n    if (isCrashFreeAlert(this.props.dataset)) {\n      return {\n        release: {\n          key: 'release',\n          name: 'release',\n        },\n      };\n    }\n\n    return undefined;\n  }\n\n  renderEventTypeFilter() {\n    const {organization, disabled, alertType} = this.props;\n\n    const dataSourceOptions = [\n      {\n        label: t('Errors'),\n        options: [\n          {\n            value: Datasource.ERROR_DEFAULT,\n            label: DATA_SOURCE_LABELS[Datasource.ERROR_DEFAULT],\n          },\n          {\n            value: Datasource.DEFAULT,\n            label: DATA_SOURCE_LABELS[Datasource.DEFAULT],\n          },\n          {\n            value: Datasource.ERROR,\n            label: DATA_SOURCE_LABELS[Datasource.ERROR],\n          },\n        ],\n      },\n    ];\n\n    if (organization.features.includes('performance-view') && alertType === 'custom') {\n      dataSourceOptions.push({\n        label: t('Transactions'),\n        options: [\n          {\n            value: Datasource.TRANSACTION,\n            label: DATA_SOURCE_LABELS[Datasource.TRANSACTION],\n          },\n        ],\n      });\n    }\n\n    return (\n      <FormField\n        name=\"datasource\"\n        inline={false}\n        style={{\n          ...this.formElemBaseStyle,\n          minWidth: 300,\n          flex: 2,\n        }}\n        flexibleControlStateSize\n      >\n        {({onChange, onBlur, model}) => {\n          const formDataset = model.getValue('dataset');\n          const formEventTypes = model.getValue('eventTypes');\n          const mappedValue = convertDatasetEventTypesToSource(\n            formDataset,\n            formEventTypes\n          );\n          return (\n            <SelectControl\n              value={mappedValue}\n              inFieldLabel={t('Events: ')}\n              onChange={optionObj => {\n                const optionValue = optionObj.value;\n                onChange(optionValue, {});\n                onBlur(optionValue, {});\n                // Reset the aggregate to the default (which works across\n                // datatypes), otherwise we may send snuba an invalid query\n                // (transaction aggregate on events datasource = bad).\n                optionValue === 'transaction'\n                  ? model.setValue('aggregate', DEFAULT_TRANSACTION_AGGREGATE)\n                  : model.setValue('aggregate', DEFAULT_AGGREGATE);\n\n                // set the value of the dataset and event type from data source\n                const {dataset: datasetFromDataSource, eventTypes} =\n                  DATA_SOURCE_TO_SET_AND_EVENT_TYPES[optionValue] ?? {};\n                model.setValue('dataset', datasetFromDataSource);\n                model.setValue('eventTypes', eventTypes);\n              }}\n              options={dataSourceOptions}\n              isDisabled={disabled}\n            />\n          );\n        }}\n      </FormField>\n    );\n  }\n\n  renderIdBadge(project: Project) {\n    return (\n      <IdBadge\n        project={project}\n        avatarProps={{consistentWidth: true}}\n        avatarSize={18}\n        disableLink\n        hideName\n      />\n    );\n  }\n\n  renderProjectSelector() {\n    const {\n      project: _selectedProject,\n      projects,\n      disabled,\n      organization,\n      disableProjectSelector,\n    } = this.props;\n    const hasOpenMembership = organization.features.includes('open-membership');\n    const myProjects = projects.filter(project => project.hasAccess && project.isMember);\n    const allProjects = projects.filter(\n      project => project.hasAccess && !project.isMember\n    );\n\n    const myProjectOptions = myProjects.map(myProject => ({\n      value: myProject.id,\n      label: myProject.slug,\n      leadingItems: this.renderIdBadge(myProject),\n    }));\n\n    const openMembershipProjects = [\n      {\n        label: t('My Projects'),\n        options: myProjectOptions,\n      },\n      {\n        label: t('All Projects'),\n        options: allProjects.map(allProject => ({\n          value: allProject.id,\n          label: allProject.slug,\n          leadingItems: this.renderIdBadge(allProject),\n        })),\n      },\n    ];\n\n    const projectOptions =\n      hasOpenMembership || isActiveSuperuser()\n        ? openMembershipProjects\n        : myProjectOptions;\n\n    return (\n      <FormField\n        name=\"projectId\"\n        inline={false}\n        style={{\n          ...this.formElemBaseStyle,\n          minWidth: 300,\n          flex: 2,\n        }}\n        flexibleControlStateSize\n      >\n        {({onChange, onBlur, model}) => {\n          const selectedProject =\n            projects.find(({id}) => id === model.getValue('projectId')) ||\n            _selectedProject;\n\n          return (\n            <SelectControl\n              isDisabled={disabled || disableProjectSelector}\n              value={selectedProject.id}\n              options={projectOptions}\n              onChange={({value}: {value: Project['id']}) => {\n                // if the current owner/team isn't part of project selected, update to the first available team\n                const nextSelectedProject =\n                  projects.find(({id}) => id === value) ?? selectedProject;\n                const ownerId: String | undefined = model\n                  .getValue('owner')\n                  ?.split(':')[1];\n                if (\n                  ownerId &&\n                  nextSelectedProject.teams.find(({id}) => id === ownerId) ===\n                    undefined &&\n                  nextSelectedProject.teams.length\n                ) {\n                  model.setValue('owner', `team:${nextSelectedProject.teams[0].id}`);\n                }\n                onChange(value, {});\n                onBlur(value, {});\n              }}\n              components={{\n                SingleValue: containerProps => (\n                  <components.ValueContainer {...containerProps}>\n                    <IdBadge\n                      project={selectedProject}\n                      avatarProps={{consistentWidth: true}}\n                      avatarSize={18}\n                      disableLink\n                    />\n                  </components.ValueContainer>\n                ),\n              }}\n            />\n          );\n        }}\n      </FormField>\n    );\n  }\n\n  renderInterval() {\n    const {organization, disabled, alertType, timeWindow, onTimeWindowChange} =\n      this.props;\n\n    return (\n      <Fragment>\n        <StyledListItem>\n          <StyledListTitle>\n            <div>{t('Define your metric')}</div>\n          </StyledListTitle>\n        </StyledListItem>\n        <FormRow>\n          <WizardField\n            name=\"aggregate\"\n            help={null}\n            organization={organization}\n            disabled={disabled}\n            style={{\n              ...this.formElemBaseStyle,\n              flex: 1,\n            }}\n            inline={false}\n            flexibleControlStateSize\n            columnWidth={200}\n            alertType={alertType}\n            required\n          />\n          <SelectControl\n            name=\"timeWindow\"\n            styles={{\n              control: (provided: {[x: string]: string | number | boolean}) => ({\n                ...provided,\n                minWidth: 200,\n                maxWidth: 300,\n              }),\n              container: (provided: {[x: string]: string | number | boolean}) => ({\n                ...provided,\n                margin: `${space(0.5)}`,\n              }),\n            }}\n            options={this.timeWindowOptions}\n            required\n            isDisabled={disabled}\n            value={timeWindow}\n            onChange={({value}) => onTimeWindowChange(value)}\n            inline={false}\n            flexibleControlStateSize\n          />\n        </FormRow>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {\n      organization,\n      disabled,\n      onFilterSearch,\n      allowChangeEventTypes,\n      dataset,\n      showMEPAlertBanner,\n    } = this.props;\n    const {environments} = this.state;\n\n    const environmentOptions: SelectValue<string | null>[] = [\n      {\n        value: null,\n        label: t('All Environments'),\n      },\n      ...(environments?.map(env => ({value: env.name, label: getDisplayName(env)})) ??\n        []),\n    ];\n\n    const transactionTags = [\n      'transaction',\n      'transaction.duration',\n      'transaction.op',\n      'transaction.status',\n    ];\n    const measurementTags = Object.values({...WebVital, ...MobileVital});\n    const eventOmitTags =\n      dataset === 'events' ? [...measurementTags, ...transactionTags] : [];\n\n    const hasMetricDataset =\n      organization.features.includes('metrics-performance-alerts') ||\n      organization.features.includes('mep-rollout-flag');\n\n    return (\n      <Fragment>\n        <ChartPanel>\n          <StyledPanelBody>{this.props.thresholdChart}</StyledPanelBody>\n        </ChartPanel>\n        {showMEPAlertBanner && hasMetricDataset && (\n          <AlertContainer>\n            <Alert type=\"info\" showIcon>\n              {tct(\n                'Filtering by these conditions automatically switch you to indexed events. [link:Learn more].',\n                {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/metrics/\" />\n                  ),\n                }\n              )}\n            </Alert>\n          </AlertContainer>\n        )}\n        {this.renderInterval()}\n        <StyledListItem>{t('Filter events')}</StyledListItem>\n        <FormRow noMargin columns={1 + (allowChangeEventTypes ? 1 : 0) + 1}>\n          {this.renderProjectSelector()}\n          <SelectField\n            name=\"environment\"\n            placeholder={t('All Environments')}\n            style={{\n              ...this.formElemBaseStyle,\n              minWidth: 230,\n              flex: 1,\n            }}\n            styles={{\n              singleValue: (base: any) => ({\n                ...base,\n              }),\n              option: (base: any) => ({\n                ...base,\n              }),\n            }}\n            options={environmentOptions}\n            isDisabled={disabled || this.state.environments === null}\n            isClearable\n            inline={false}\n            flexibleControlStateSize\n          />\n          {allowChangeEventTypes && this.renderEventTypeFilter()}\n        </FormRow>\n        <FormRow>\n          <FormField\n            name=\"query\"\n            inline={false}\n            style={{\n              ...this.formElemBaseStyle,\n              flex: '6 0 500px',\n            }}\n            flexibleControlStateSize\n          >\n            {({onChange, onBlur, onKeyDown, initialData}) => (\n              <SearchContainer>\n                <StyledSearchBar\n                  searchSource=\"alert_builder\"\n                  defaultQuery={initialData?.query ?? ''}\n                  omitTags={[\n                    'event.type',\n                    'release.version',\n                    'release.stage',\n                    'release.package',\n                    'release.build',\n                    'project',\n                    ...eventOmitTags,\n                  ]}\n                  includeSessionTagsValues={dataset === Dataset.SESSIONS}\n                  disabled={disabled}\n                  useFormWrapper={false}\n                  organization={organization}\n                  placeholder={this.searchPlaceholder}\n                  onChange={onChange}\n                  query={initialData.query}\n                  onKeyDown={e => {\n                    /**\n                     * Do not allow enter key to submit the alerts form since it is unlikely\n                     * users will be ready to create the rule as this sits above required fields.\n                     */\n                    if (e.key === 'Enter') {\n                      e.preventDefault();\n                      e.stopPropagation();\n                    }\n\n                    onKeyDown?.(e);\n                  }}\n                  onClose={query => {\n                    onFilterSearch(query);\n                    onBlur(query);\n                  }}\n                  onSearch={query => {\n                    onFilterSearch(query);\n                    onChange(query, {});\n                  }}\n                  {...(this.searchSupportedTags\n                    ? {supportedTags: this.searchSupportedTags}\n                    : {})}\n                  hasRecentSearches={dataset !== Dataset.SESSIONS}\n                />\n              </SearchContainer>\n            )}\n          </FormField>\n        </FormRow>\n      </Fragment>\n    );\n  }\n}\n\nconst StyledListTitle = styled('div')`\n  display: flex;\n  span {\n    margin-left: ${space(1)};\n  }\n`;\n\nconst ChartPanel = styled(Panel)`\n  margin-bottom: ${space(1)};\n`;\n\nconst AlertContainer = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPanelBody = styled(PanelBody)`\n  ol,\n  h4 {\n    margin-bottom: ${space(1)};\n  }\n`;\n\nconst SearchContainer = styled('div')`\n  display: flex;\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  flex-grow: 1;\n`;\n\nconst StyledListItem = styled(ListItem)`\n  margin-bottom: ${space(1)};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  line-height: 1.3;\n`;\n\nconst FormRow = styled('div')<{columns?: number; noMargin?: boolean}>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: ${p => (p.noMargin ? 0 : space(4))};\n  ${p =>\n    p.columns !== undefined &&\n    css`\n      display: grid;\n      grid-template-columns: repeat(${p.columns}, auto);\n    `}\n`;\n\nexport default withProjects(RuleConditionsForm);\n","import {Fragment, ReactNode} from 'react';\nimport {PlainRoute, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addSuccessMessage,\n  clearIndicators,\n  Indicator,\n} from 'sentry/actionCreators/indicator';\nimport {fetchOrganizationTags} from 'sentry/actionCreators/tags';\nimport Access from 'sentry/components/acl/access';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport Confirm from 'sentry/components/confirm';\nimport Form from 'sentry/components/forms/form';\nimport FormModel from 'sentry/components/forms/model';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t} from 'sentry/locale';\nimport IndicatorStore from 'sentry/stores/indicatorStore';\nimport space from 'sentry/styles/space';\nimport {EventsStats, MultiSeriesEventsStats, Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {logExperiment, metric} from 'sentry/utils/analytics';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport type EventView from 'sentry/utils/discover/eventView';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport withProjects from 'sentry/utils/withProjects';\nimport {IncompatibleAlertQuery} from 'sentry/views/alerts/rules/metric/incompatibleAlertQuery';\nimport RuleNameOwnerForm from 'sentry/views/alerts/rules/metric/ruleNameOwnerForm';\nimport ThresholdTypeForm from 'sentry/views/alerts/rules/metric/thresholdTypeForm';\nimport Triggers from 'sentry/views/alerts/rules/metric/triggers';\nimport TriggersChart from 'sentry/views/alerts/rules/metric/triggers/chart';\nimport {getEventTypeFilter} from 'sentry/views/alerts/rules/metric/utils/getEventTypeFilter';\nimport hasThresholdValue from 'sentry/views/alerts/rules/metric/utils/hasThresholdValue';\nimport {AlertRuleType} from 'sentry/views/alerts/types';\nimport {\n  AlertWizardAlertNames,\n  DatasetMEPAlertQueryTypes,\n} from 'sentry/views/alerts/wizard/options';\nimport {getAlertTypeFromAggregateDataset} from 'sentry/views/alerts/wizard/utils';\n\nimport {isCrashFreeAlert} from './utils/isCrashFreeAlert';\nimport {addOrUpdateRule} from './actions';\nimport {\n  createDefaultTrigger,\n  DEFAULT_CHANGE_COMP_DELTA,\n  DEFAULT_CHANGE_TIME_WINDOW,\n  DEFAULT_COUNT_TIME_WINDOW,\n} from './constants';\nimport {Preset, PRESET_AGGREGATES, PresetContext} from './presets';\nimport PresetSidebar from './presetSidebar';\nimport RuleConditionsForm from './ruleConditionsForm';\nimport {\n  AlertRuleComparisonType,\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  Dataset,\n  EventTypes,\n  MetricActionTemplate,\n  MetricRule,\n  Trigger,\n  UnsavedMetricRule,\n} from './types';\n\nconst POLLING_MAX_TIME_LIMIT = 3 * 60000;\n\ntype RuleTaskResponse = {\n  status: 'pending' | 'failed' | 'success';\n  alertRule?: MetricRule;\n  error?: string;\n};\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n  routes: PlainRoute[];\n  rule: MetricRule;\n  userTeamIds: string[];\n  disableProjectSelector?: boolean;\n  eventView?: EventView;\n  isCustomMetric?: boolean;\n  isDuplicateRule?: boolean;\n  ruleId?: string;\n  sessionId?: string;\n} & RouteComponentProps<{orgId: string; projectId?: string; ruleId?: string}, {}> & {\n    onSubmitSuccess?: Form['props']['onSubmitSuccess'];\n  } & AsyncComponent['props'];\n\ntype State = {\n  aggregate: string;\n  // `null` means loading\n  availableActions: MetricActionTemplate[] | null;\n  comparisonType: AlertRuleComparisonType;\n  // Rule conditions form inputs\n  // Needed for TriggersChart\n  dataset: Dataset;\n  environment: string | null;\n  eventTypes: EventTypes[];\n  project: Project;\n  query: string;\n  resolveThreshold: UnsavedMetricRule['resolveThreshold'];\n  showMEPAlertBanner: boolean;\n  thresholdPeriod: UnsavedMetricRule['thresholdPeriod'];\n  thresholdType: UnsavedMetricRule['thresholdType'];\n  timeWindow: number;\n  triggerErrors: Map<number, {[fieldName: string]: string}>;\n  triggers: Trigger[];\n  comparisonDelta?: number;\n  selectedPresetId?: string;\n  uuid?: string;\n} & AsyncComponent['state'];\n\nconst isEmpty = (str: unknown): boolean => str === '' || !defined(str);\n\nclass RuleFormContainer extends AsyncComponent<Props, State> {\n  form = new FormModel();\n  pollingTimeout: number | undefined = undefined;\n\n  get isDuplicateRule(): boolean {\n    return Boolean(this.props.isDuplicateRule);\n  }\n\n  get chartQuery(): string {\n    const {query, eventTypes, dataset} = this.state;\n    const eventTypeFilter = getEventTypeFilter(this.state.dataset, eventTypes);\n    const queryWithTypeFilter = `${query} ${eventTypeFilter}`.trim();\n    return isCrashFreeAlert(dataset) ? query : queryWithTypeFilter;\n  }\n\n  componentDidMount() {\n    const {organization} = this.props;\n    const {project} = this.state;\n    // SearchBar gets its tags from Reflux.\n    fetchOrganizationTags(this.api, organization.slug, [project.id]);\n\n    if (this.props.location?.query.preset) {\n      const preset = PRESET_AGGREGATES.find(\n        p => p.id === this.props.location.query.preset\n      );\n      if (preset) {\n        preset\n          .makeContext(this.api, project, this.props.organization)\n          .then(ctx => this.setPreset(preset, ctx));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.pollingTimeout);\n  }\n\n  getDefaultState(): State {\n    const {rule, location} = this.props;\n    const triggersClone = [...rule.triggers];\n    const {\n      aggregate,\n      eventTypes: _eventTypes,\n      dataset,\n      name,\n      showMEPAlertBanner,\n    } = location?.query ?? {};\n    const eventTypes = typeof _eventTypes === 'string' ? [_eventTypes] : _eventTypes;\n\n    // Warning trigger is removed if it is blank when saving\n    if (triggersClone.length !== 2) {\n      triggersClone.push(createDefaultTrigger(AlertRuleTriggerType.WARNING));\n    }\n\n    return {\n      ...super.getDefaultState(),\n\n      name: name ?? rule.name ?? '',\n      aggregate: aggregate ?? rule.aggregate,\n      dataset: dataset ?? rule.dataset,\n      eventTypes: eventTypes ?? rule.eventTypes ?? [],\n      query: rule.query ?? '',\n      timeWindow: rule.timeWindow,\n      environment: rule.environment || null,\n      triggerErrors: new Map(),\n      availableActions: null,\n      triggers: triggersClone,\n      resolveThreshold: rule.resolveThreshold,\n      thresholdType: rule.thresholdType,\n      thresholdPeriod: rule.thresholdPeriod ?? 1,\n      comparisonDelta: rule.comparisonDelta ?? undefined,\n      comparisonType: rule.comparisonDelta\n        ? AlertRuleComparisonType.CHANGE\n        : AlertRuleComparisonType.COUNT,\n      project: this.props.project,\n      owner: rule.owner,\n      showMEPAlertBanner: showMEPAlertBanner ?? false,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId} = this.props.params;\n\n    // TODO(incidents): This is temporary until new API endpoints\n    // We should be able to just fetch the rule if rule.id exists\n\n    return [\n      ['availableActions', `/organizations/${orgId}/alert-rules/available-actions/`],\n    ];\n  }\n\n  setPreset(preset: Preset, context: PresetContext) {\n    this.form.setInitialData({\n      ...this.form.initialData,\n      name: context.name,\n      dataset: context.dataset,\n      eventTypes: context.eventTypes as any,\n      aggregate: context.aggregate,\n      comparisonDelta: context.comparisonDelta,\n      timeWindow: context.timeWindow,\n      query: context.query,\n      projectId: this.form.getValue('projectId'),\n    });\n    this.form.setValue('comparisonDelta', context.comparisonDelta);\n\n    this.setState({\n      comparisonType: context.comparisonType,\n      triggers: context.triggers,\n      thresholdType: context.thresholdType,\n      triggerErrors: new Map(),\n      selectedPresetId: preset.id,\n    });\n  }\n\n  goBack() {\n    const {router} = this.props;\n    const {orgId} = this.props.params;\n\n    router.push(`/organizations/${orgId}/alerts/rules/`);\n  }\n\n  resetPollingState = (loadingSlackIndicator: Indicator) => {\n    IndicatorStore.remove(loadingSlackIndicator);\n    this.setState({loading: false, uuid: undefined});\n  };\n\n  fetchStatus(model: FormModel) {\n    const loadingSlackIndicator = IndicatorStore.addMessage(\n      t('Looking for your slack channel (this can take a while)'),\n      'loading'\n    );\n    // pollHandler calls itself until it gets either a success\n    // or failed status but we don't want to poll forever so we pass\n    // in a hard stop time of 3 minutes before we bail.\n    const quitTime = Date.now() + POLLING_MAX_TIME_LIMIT;\n    window.clearTimeout(this.pollingTimeout);\n    this.pollingTimeout = window.setTimeout(() => {\n      this.pollHandler(model, quitTime, loadingSlackIndicator);\n    }, 1000);\n  }\n\n  pollHandler = async (\n    model: FormModel,\n    quitTime: number,\n    loadingSlackIndicator: Indicator\n  ) => {\n    if (Date.now() > quitTime) {\n      addErrorMessage(t('Looking for that channel took too long :('));\n      this.resetPollingState(loadingSlackIndicator);\n      return;\n    }\n\n    const {\n      organization,\n      onSubmitSuccess,\n      params: {ruleId},\n    } = this.props;\n    const {uuid, project} = this.state;\n\n    try {\n      const response: RuleTaskResponse = await this.api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/alert-rule-task/${uuid}/`\n      );\n\n      const {status, alertRule, error} = response;\n\n      if (status === 'pending') {\n        window.clearTimeout(this.pollingTimeout);\n\n        this.pollingTimeout = window.setTimeout(() => {\n          this.pollHandler(model, quitTime, loadingSlackIndicator);\n        }, 1000);\n        return;\n      }\n\n      this.resetPollingState(loadingSlackIndicator);\n\n      if (status === 'failed') {\n        this.handleRuleSaveFailure(error);\n      }\n      if (alertRule) {\n        addSuccessMessage(ruleId ? t('Updated alert rule') : t('Created alert rule'));\n        if (onSubmitSuccess) {\n          onSubmitSuccess(alertRule, model);\n        }\n      }\n    } catch {\n      this.handleRuleSaveFailure(t('An error occurred'));\n      this.resetPollingState(loadingSlackIndicator);\n    }\n  };\n\n  /**\n   * Checks to see if threshold is valid given target value, and state of\n   * inverted threshold as well as the *other* threshold\n   *\n   * @param type The threshold type to be updated\n   * @param value The new threshold value\n   */\n  isValidTrigger = (\n    triggerIndex: number,\n    trigger: Trigger,\n    errors,\n    resolveThreshold: number | '' | null\n  ): boolean => {\n    const {alertThreshold} = trigger;\n    const {thresholdType} = this.state;\n\n    // If value and/or other value is empty\n    // then there are no checks to perform against\n    if (!hasThresholdValue(alertThreshold) || !hasThresholdValue(resolveThreshold)) {\n      return true;\n    }\n\n    // If this is alert threshold and not inverted, it can't be below resolve\n    // If this is alert threshold and inverted, it can't be above resolve\n    // If this is resolve threshold and not inverted, it can't be above resolve\n    // If this is resolve threshold and inverted, it can't be below resolve\n    // Since we're comparing non-inclusive thresholds here (>, <), we need\n    // to modify the values when we compare. An example of why:\n    // Alert > 0, resolve < 1. This means that we want to alert on values\n    // of 1 or more, and resolve on values of 0 or less. This is valid, but\n    // without modifying the values, this boundary case will fail.\n    const isValid =\n      thresholdType === AlertRuleThresholdType.BELOW\n        ? alertThreshold - 1 < resolveThreshold + 1\n        : alertThreshold + 1 > resolveThreshold - 1;\n\n    const otherErrors = errors.get(triggerIndex) || {};\n\n    if (isValid) {\n      return true;\n    }\n\n    // Not valid... let's figure out an error message\n    const isBelow = thresholdType === AlertRuleThresholdType.BELOW;\n    let errorMessage = '';\n\n    if (typeof resolveThreshold !== 'number') {\n      errorMessage = isBelow\n        ? t('Resolution threshold must be greater than alert')\n        : t('Resolution threshold must be less than alert');\n    } else {\n      errorMessage = isBelow\n        ? t('Alert threshold must be less than resolution')\n        : t('Alert threshold must be greater than resolution');\n    }\n\n    errors.set(triggerIndex, {\n      ...otherErrors,\n      alertThreshold: errorMessage,\n    });\n\n    return false;\n  };\n\n  validateFieldInTrigger({errors, triggerIndex, field, message, isValid}) {\n    // If valid, reset error for fieldName\n    if (isValid()) {\n      const {[field]: _validatedField, ...otherErrors} = errors.get(triggerIndex) || {};\n\n      if (Object.keys(otherErrors).length > 0) {\n        errors.set(triggerIndex, otherErrors);\n      } else {\n        errors.delete(triggerIndex);\n      }\n\n      return errors;\n    }\n\n    if (!errors.has(triggerIndex)) {\n      errors.set(triggerIndex, {});\n    }\n    const currentErrors = errors.get(triggerIndex);\n\n    errors.set(triggerIndex, {\n      ...currentErrors,\n      [field]: message,\n    });\n\n    return errors;\n  }\n\n  /**\n   * Validate triggers\n   *\n   * @return Returns true if triggers are valid\n   */\n  validateTriggers(\n    triggers = this.state.triggers,\n    thresholdType = this.state.thresholdType,\n    resolveThreshold = this.state.resolveThreshold,\n    changedTriggerIndex?: number\n  ) {\n    const {comparisonType} = this.state;\n    const triggerErrors = new Map();\n\n    const requiredFields = ['label', 'alertThreshold'];\n    triggers.forEach((trigger, triggerIndex) => {\n      requiredFields.forEach(field => {\n        // check required fields\n        this.validateFieldInTrigger({\n          errors: triggerErrors,\n          triggerIndex,\n          isValid: (): boolean => {\n            if (trigger.label === AlertRuleTriggerType.CRITICAL) {\n              return !isEmpty(trigger[field]);\n            }\n\n            // If warning trigger has actions, it must have a value\n            return trigger.actions.length === 0 || !isEmpty(trigger[field]);\n          },\n          field,\n          message: t('Field is required'),\n        });\n      });\n\n      // Check thresholds\n      this.isValidTrigger(\n        changedTriggerIndex ?? triggerIndex,\n        trigger,\n        triggerErrors,\n        resolveThreshold\n      );\n    });\n\n    // If we have 2 triggers, we need to make sure that the critical and warning\n    // alert thresholds are valid (e.g. if critical is above x, warning must be less than x)\n    const criticalTriggerIndex = triggers.findIndex(\n      ({label}) => label === AlertRuleTriggerType.CRITICAL\n    );\n    const warningTriggerIndex = criticalTriggerIndex ^ 1;\n    const criticalTrigger = triggers[criticalTriggerIndex];\n    const warningTrigger = triggers[warningTriggerIndex];\n\n    const isEmptyWarningThreshold = isEmpty(warningTrigger.alertThreshold);\n    const warningThreshold = warningTrigger.alertThreshold ?? 0;\n    const criticalThreshold = criticalTrigger.alertThreshold ?? 0;\n\n    const hasError =\n      thresholdType === AlertRuleThresholdType.ABOVE ||\n      comparisonType === AlertRuleComparisonType.CHANGE\n        ? warningThreshold > criticalThreshold\n        : warningThreshold < criticalThreshold;\n\n    if (hasError && !isEmptyWarningThreshold) {\n      [criticalTriggerIndex, warningTriggerIndex].forEach(index => {\n        const otherErrors = triggerErrors.get(index) ?? {};\n        triggerErrors.set(index, {\n          ...otherErrors,\n          alertThreshold:\n            thresholdType === AlertRuleThresholdType.ABOVE ||\n            comparisonType === AlertRuleComparisonType.CHANGE\n              ? t('Warning threshold must be less than critical threshold')\n              : t('Warning threshold must be greater than critical threshold'),\n        });\n      });\n    }\n\n    return triggerErrors;\n  }\n\n  handleFieldChange = (name: string, value: unknown) => {\n    const {projects} = this.props;\n    if (\n      [\n        'aggregate',\n        'dataset',\n        'eventTypes',\n        'timeWindow',\n        'environment',\n        'comparisonDelta',\n        'projectId',\n      ].includes(name)\n    ) {\n      this.setState(({project: _project}) => ({\n        [name]: value,\n        project: name === 'projectId' ? projects.find(({id}) => id === value) : _project,\n      }));\n    }\n  };\n\n  // We handle the filter update outside of the fieldChange handler since we\n  // don't want to update the filter on every input change, just on blurs and\n  // searches.\n  handleFilterUpdate = (query: string) => {\n    const {organization, sessionId} = this.props;\n\n    trackAdvancedAnalyticsEvent('alert_builder.filter', {\n      organization,\n      session_id: sessionId,\n      query,\n    });\n\n    this.setState({query});\n  };\n\n  handleSubmit = async (\n    _data: Partial<MetricRule>,\n    _onSubmitSuccess,\n    _onSubmitError,\n    _e,\n    model: FormModel\n  ) => {\n    // This validates all fields *except* for Triggers\n    const validRule = model.validateForm();\n\n    // Validate Triggers\n    const triggerErrors = this.validateTriggers();\n    const validTriggers = Array.from(triggerErrors).length === 0;\n\n    if (!validTriggers) {\n      this.setState(state => ({\n        triggerErrors: new Map([...triggerErrors, ...state.triggerErrors]),\n      }));\n    }\n\n    if (!validRule || !validTriggers) {\n      const missingFields = [\n        !validRule && t('name'),\n        !validRule && !validTriggers && t('and'),\n        !validTriggers && t('critical threshold'),\n      ].filter(x => x);\n\n      addErrorMessage(t(`Alert not valid: missing %s`, missingFields.join(' ')));\n      return;\n    }\n\n    const {\n      organization,\n      rule,\n      onSubmitSuccess,\n      location,\n      sessionId,\n      params: {ruleId},\n    } = this.props;\n    const {\n      project,\n      aggregate,\n      dataset,\n      resolveThreshold,\n      triggers,\n      thresholdType,\n      thresholdPeriod,\n      comparisonDelta,\n      uuid,\n      timeWindow,\n      eventTypes,\n    } = this.state;\n    // Remove empty warning trigger\n    const sanitizedTriggers = triggers.filter(\n      trigger =>\n        trigger.label !== AlertRuleTriggerType.WARNING || !isEmpty(trigger.alertThreshold)\n    );\n\n    // form model has all form state data, however we use local state to keep\n    // track of the list of triggers (and actions within triggers)\n    const loadingIndicator = IndicatorStore.addMessage(\n      t('Saving your alert rule, hold on...'),\n      'loading'\n    );\n    try {\n      const transaction = metric.startTransaction({name: 'saveAlertRule'});\n      transaction.setTag('type', AlertRuleType.METRIC);\n      transaction.setTag('operation', !rule.id ? 'create' : 'edit');\n      for (const trigger of sanitizedTriggers) {\n        for (const action of trigger.actions) {\n          if (action.type === 'slack') {\n            transaction.setTag(action.type, true);\n          }\n        }\n      }\n      transaction.setData('actions', sanitizedTriggers);\n\n      const hasMetricDataset =\n        organization.features.includes('metrics-performance-alerts') ||\n        organization.features.includes('mep-rollout-flag');\n\n      this.setState({loading: true});\n      const [data, , resp] = await addOrUpdateRule(\n        this.api,\n        organization.slug,\n        project.slug,\n        {\n          ...rule,\n          ...model.getTransformedData(),\n          triggers: sanitizedTriggers,\n          resolveThreshold: isEmpty(resolveThreshold) ? null : resolveThreshold,\n          thresholdType,\n          thresholdPeriod,\n          comparisonDelta: comparisonDelta ?? null,\n          timeWindow,\n          aggregate,\n          ...(hasMetricDataset ? {queryType: DatasetMEPAlertQueryTypes[dataset]} : {}),\n          // Remove eventTypes as it is no longer requred for crash free\n          eventTypes: isCrashFreeAlert(rule.dataset) ? undefined : eventTypes,\n          dataset,\n        },\n        {\n          duplicateRule: this.isDuplicateRule ? 'true' : 'false',\n          wizardV3: 'true',\n          referrer: location?.query?.referrer,\n          sessionId,\n        }\n      );\n      // if we get a 202 back it means that we have an async task\n      // running to lookup and verify the channel id for Slack.\n      if (resp?.status === 202) {\n        // if we have a uuid in state, no need to start a new polling cycle\n        if (!uuid) {\n          this.setState({loading: true, uuid: data.uuid});\n          this.fetchStatus(model);\n        }\n      } else {\n        IndicatorStore.remove(loadingIndicator);\n        this.setState({loading: false});\n        addSuccessMessage(ruleId ? t('Updated alert rule') : t('Created alert rule'));\n        if (onSubmitSuccess) {\n          onSubmitSuccess(data, model);\n        }\n      }\n    } catch (err) {\n      IndicatorStore.remove(loadingIndicator);\n      this.setState({loading: false});\n      const errors = err?.responseJSON\n        ? Array.isArray(err?.responseJSON)\n          ? err?.responseJSON\n          : Object.values(err?.responseJSON)\n        : [];\n      const apiErrors = errors.length > 0 ? `: ${errors.join(', ')}` : '';\n      this.handleRuleSaveFailure(t('Unable to save alert%s', apiErrors));\n    }\n  };\n\n  /**\n   * Callback for when triggers change\n   *\n   * Re-validate triggers on every change and reset indicators when no errors\n   */\n  handleChangeTriggers = (triggers: Trigger[], triggerIndex?: number) => {\n    this.setState(state => {\n      let triggerErrors = state.triggerErrors;\n\n      const newTriggerErrors = this.validateTriggers(\n        triggers,\n        state.thresholdType,\n        state.resolveThreshold,\n        triggerIndex\n      );\n      triggerErrors = newTriggerErrors;\n\n      if (Array.from(newTriggerErrors).length === 0) {\n        clearIndicators();\n      }\n\n      return {triggers, triggerErrors};\n    });\n  };\n\n  handleThresholdTypeChange = (thresholdType: AlertRuleThresholdType) => {\n    const {triggers} = this.state;\n\n    const triggerErrors = this.validateTriggers(triggers, thresholdType);\n    this.setState(state => ({\n      thresholdType,\n      triggerErrors: new Map([...triggerErrors, ...state.triggerErrors]),\n    }));\n  };\n\n  handleThresholdPeriodChange = (value: number) => {\n    this.setState({thresholdPeriod: value});\n  };\n\n  handleResolveThresholdChange = (\n    resolveThreshold: UnsavedMetricRule['resolveThreshold']\n  ) => {\n    this.setState(state => {\n      const triggerErrors = this.validateTriggers(\n        state.triggers,\n        state.thresholdType,\n        resolveThreshold\n      );\n      if (Array.from(triggerErrors).length === 0) {\n        clearIndicators();\n      }\n\n      return {resolveThreshold, triggerErrors};\n    });\n  };\n\n  handleComparisonTypeChange = (value: AlertRuleComparisonType) => {\n    const comparisonDelta =\n      value === AlertRuleComparisonType.COUNT\n        ? undefined\n        : this.state.comparisonDelta ?? DEFAULT_CHANGE_COMP_DELTA;\n    const timeWindow = this.state.comparisonDelta\n      ? DEFAULT_COUNT_TIME_WINDOW\n      : DEFAULT_CHANGE_TIME_WINDOW;\n    this.setState({comparisonType: value, comparisonDelta, timeWindow});\n  };\n\n  handleDeleteRule = async () => {\n    const {params} = this.props;\n    const {orgId, projectId, ruleId} = params;\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/alert-rules/${ruleId}/`,\n        {\n          method: 'DELETE',\n        }\n      );\n      this.goBack();\n    } catch (_err) {\n      addErrorMessage(t('Error deleting rule'));\n    }\n  };\n\n  handleRuleSaveFailure = (msg: ReactNode) => {\n    addErrorMessage(msg);\n    metric.endTransaction({name: 'saveAlertRule'});\n  };\n\n  handleCancel = () => {\n    this.goBack();\n  };\n\n  handleMEPAlertDataset = (data: EventsStats | MultiSeriesEventsStats | null) => {\n    const {isMetricsData} = data ?? {};\n\n    if (\n      isMetricsData === undefined ||\n      !this.props.organization.features.includes('metrics-performance-alerts')\n    ) {\n      return;\n    }\n\n    const {dataset, showMEPAlertBanner} = this.state;\n\n    if (isMetricsData && dataset === Dataset.TRANSACTIONS) {\n      this.setState({dataset: Dataset.GENERIC_METRICS, showMEPAlertBanner: false});\n    }\n\n    if (!isMetricsData && dataset === Dataset.GENERIC_METRICS && !showMEPAlertBanner) {\n      this.setState({dataset: Dataset.TRANSACTIONS, showMEPAlertBanner: true});\n    }\n  };\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {\n      organization,\n      ruleId,\n      rule,\n      onSubmitSuccess,\n      router,\n      disableProjectSelector,\n      eventView,\n      location,\n    } = this.props;\n    const {\n      name,\n      query,\n      project,\n      timeWindow,\n      triggers,\n      aggregate,\n      environment,\n      thresholdType,\n      thresholdPeriod,\n      comparisonDelta,\n      comparisonType,\n      resolveThreshold,\n      loading,\n      eventTypes,\n      dataset,\n      selectedPresetId,\n      showMEPAlertBanner,\n    } = this.state;\n\n    const chartProps = {\n      organization,\n      projects: [project],\n      triggers,\n      location,\n      query: this.chartQuery,\n      aggregate,\n      dataset,\n      newAlertOrQuery: !ruleId || query !== rule.query,\n      handleMEPAlertDataset: this.handleMEPAlertDataset,\n      timeWindow,\n      environment,\n      resolveThreshold,\n      thresholdType,\n      comparisonDelta,\n      comparisonType,\n    };\n    const alertType = getAlertTypeFromAggregateDataset({aggregate, dataset});\n\n    const wizardBuilderChart = (\n      <TriggersChart\n        {...chartProps}\n        header={\n          <ChartHeader>\n            <AlertName>{AlertWizardAlertNames[alertType]}</AlertName>\n            {!isCrashFreeAlert(dataset) && (\n              <AlertInfo>\n                <StyledCircleIndicator size={8} />\n                <Aggregate>{aggregate}</Aggregate>\n                event.type:{eventTypes?.join(',')}\n              </AlertInfo>\n            )}\n          </ChartHeader>\n        }\n      />\n    );\n\n    const triggerForm = (disabled: boolean) => (\n      <Triggers\n        disabled={disabled}\n        projects={[project]}\n        errors={this.state.triggerErrors}\n        triggers={triggers}\n        aggregate={aggregate}\n        resolveThreshold={resolveThreshold}\n        thresholdPeriod={thresholdPeriod}\n        thresholdType={thresholdType}\n        comparisonType={comparisonType}\n        currentProject={project.slug}\n        organization={organization}\n        availableActions={this.state.availableActions}\n        onChange={this.handleChangeTriggers}\n        onThresholdTypeChange={this.handleThresholdTypeChange}\n        onThresholdPeriodChange={this.handleThresholdPeriodChange}\n        onResolveThresholdChange={this.handleResolveThresholdChange}\n      />\n    );\n\n    const ruleNameOwnerForm = (disabled: boolean) => (\n      <RuleNameOwnerForm disabled={disabled} project={project} />\n    );\n\n    const thresholdTypeForm = (disabled: boolean) => (\n      <ThresholdTypeForm\n        comparisonType={comparisonType}\n        dataset={dataset}\n        disabled={disabled}\n        onComparisonDeltaChange={value =>\n          this.handleFieldChange('comparisonDelta', value)\n        }\n        onComparisonTypeChange={this.handleComparisonTypeChange}\n        organization={organization}\n        comparisonDelta={comparisonDelta}\n      />\n    );\n\n    let showPresetSidebar: boolean =\n      dataset === Dataset.TRANSACTIONS &&\n      project.firstTransactionEvent &&\n      !this.props.ruleId;\n    if (showPresetSidebar) {\n      logExperiment({\n        key: 'MetricAlertPresetExperiment',\n        organization,\n      });\n    }\n\n    showPresetSidebar =\n      showPresetSidebar && !!organization.experiments.MetricAlertPresetExperiment;\n\n    return (\n      <Access access={['alerts:write']}>\n        {({hasAccess}) => {\n          const disabled = loading || !(isActiveSuperuser() || hasAccess);\n\n          return (\n            <Fragment>\n              {showPresetSidebar && (\n                <Side>\n                  <PresetSidebar\n                    organization={organization}\n                    project={project}\n                    onSelect={(preset, context) => {\n                      this.setPreset(preset, context);\n                    }}\n                    selectedPresetId={selectedPresetId}\n                  />\n                </Side>\n              )}\n              <Main fullWidth={!showPresetSidebar}>\n                {eventView && (\n                  <IncompatibleAlertQuery\n                    orgSlug={organization.slug}\n                    eventView={eventView}\n                  />\n                )}\n                <Form\n                  model={this.form}\n                  apiMethod={ruleId ? 'PUT' : 'POST'}\n                  apiEndpoint={`/organizations/${organization.slug}/alert-rules/${\n                    ruleId ? `${ruleId}/` : ''\n                  }`}\n                  submitDisabled={disabled}\n                  initialData={{\n                    name,\n                    dataset,\n                    eventTypes,\n                    aggregate,\n                    query,\n                    timeWindow: rule.timeWindow,\n                    environment: rule.environment || null,\n                    owner: rule.owner,\n                    projectId: project.id,\n                  }}\n                  saveOnBlur={false}\n                  onSubmit={this.handleSubmit}\n                  onSubmitSuccess={onSubmitSuccess}\n                  onCancel={this.handleCancel}\n                  onFieldChange={this.handleFieldChange}\n                  extraButton={\n                    !!rule.id ? (\n                      <Confirm\n                        disabled={disabled}\n                        message={t('Are you sure you want to delete this alert rule?')}\n                        header={t('Delete Alert Rule?')}\n                        priority=\"danger\"\n                        confirmText={t('Delete Rule')}\n                        onConfirm={this.handleDeleteRule}\n                      >\n                        <Button type=\"button\" priority=\"danger\">\n                          {t('Delete Rule')}\n                        </Button>\n                      </Confirm>\n                    ) : null\n                  }\n                  submitLabel={t('Save Rule')}\n                >\n                  <List symbol=\"colored-numeric\">\n                    <RuleConditionsForm\n                      api={this.api}\n                      project={project}\n                      organization={organization}\n                      router={router}\n                      disabled={disabled}\n                      thresholdChart={wizardBuilderChart}\n                      onFilterSearch={this.handleFilterUpdate}\n                      allowChangeEventTypes={\n                        alertType === 'custom' || dataset === Dataset.ERRORS\n                      }\n                      alertType={alertType}\n                      dataset={dataset}\n                      timeWindow={timeWindow}\n                      comparisonType={comparisonType}\n                      comparisonDelta={comparisonDelta}\n                      onComparisonDeltaChange={value =>\n                        this.handleFieldChange('comparisonDelta', value)\n                      }\n                      onTimeWindowChange={value =>\n                        this.handleFieldChange('timeWindow', value)\n                      }\n                      disableProjectSelector={disableProjectSelector}\n                      showMEPAlertBanner={showMEPAlertBanner}\n                    />\n                    <AlertListItem>{t('Set thresholds')}</AlertListItem>\n                    {thresholdTypeForm(disabled)}\n                    {triggerForm(disabled)}\n                    {ruleNameOwnerForm(disabled)}\n                  </List>\n                </Form>\n              </Main>\n            </Fragment>\n          );\n        }}\n      </Access>\n    );\n  }\n}\n\nconst Main = styled(Layout.Main)`\n  padding: ${space(2)} ${space(4)};\n`;\n\nconst Side = styled(Layout.Side)`\n  padding: ${space(4)} ${space(2)};\n  grid-row-start: 1;\n\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    border-bottom: 1px solid ${p => p.theme.gray200};\n    margin-bottom: ${space(3)};\n    padding-bottom: 0;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    border-left: 1px solid ${p => p.theme.gray200};\n    max-width: 400px;\n  }\n`;\n\nconst StyledListItem = styled(ListItem)`\n  margin: ${space(2)} 0 ${space(1)} 0;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nconst AlertListItem = styled(StyledListItem)`\n  margin-top: 0;\n`;\n\nconst ChartHeader = styled('div')`\n  padding: ${space(2)} ${space(3)} 0 ${space(3)};\n  margin-bottom: -${space(1.5)};\n`;\n\nconst AlertName = styled(HeaderTitleLegend)`\n  position: relative;\n`;\n\nconst AlertInfo = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-family: ${p => p.theme.text.family};\n  font-weight: normal;\n  color: ${p => p.theme.textColor};\n`;\n\nconst StyledCircleIndicator = styled(CircleIndicator)`\n  background: ${p => p.theme.formText};\n  height: ${space(1)};\n  margin-right: ${space(0.5)};\n`;\n\nconst Aggregate = styled('span')`\n  margin-right: ${space(1)};\n`;\n\nexport default withProjects(RuleFormContainer);\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport FormField from 'sentry/components/forms/formField';\nimport TeamSelector from 'sentry/components/forms/teamSelector';\nimport TextField from 'sentry/components/forms/textField';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Project, Team} from 'sentry/types';\n\ntype Props = {\n  disabled: boolean;\n  project: Project;\n};\n\nexport default function RuleNameOwnerForm({disabled, project}: Props) {\n  const renderRuleName = () => (\n    <StyledTextField\n      data-test-id=\"alert-name\"\n      disabled={disabled}\n      name=\"name\"\n      label={null}\n      help={null}\n      placeholder={t('Enter Alert Name')}\n      required\n      flexibleControlStateSize\n    />\n  );\n\n  const renderTeamSelect = () => (\n    <StyledFormField\n      extraMargin\n      name=\"owner\"\n      label={null}\n      help={null}\n      disabled={disabled}\n      flexibleControlStateSize\n    >\n      {({model}) => {\n        const owner = model.getValue('owner');\n        const ownerId = owner && owner.split(':')[1];\n        return (\n          <TeamSelector\n            value={ownerId}\n            project={project}\n            onChange={({value}) => model.setValue('owner', value && `team:${value}`)}\n            teamFilter={(team: Team) => team.isMember || team.id === ownerId}\n            useId\n            includeUnassigned\n            disabled={disabled}\n          />\n        );\n      }}\n    </StyledFormField>\n  );\n\n  return (\n    <Fragment>\n      <StyledListItem>{t('Establish ownership')}</StyledListItem>\n      {renderRuleName()}\n      {renderTeamSelect()}\n    </Fragment>\n  );\n}\n\nconst StyledListItem = styled(ListItem)`\n  margin: ${space(2)} 0 ${space(1)} 0;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nconst StyledTextField = styled(TextField)`\n  border-bottom: none;\n  padding: 0;\n\n  & > div {\n    padding: 0;\n    width: 100%;\n  }\n\n  margin-bottom: ${space(1)};\n`;\n\nconst StyledFormField = styled(FormField)<{extraMargin?: boolean}>`\n  padding: 0;\n\n  & > div {\n    padding: 0;\n    width: 100%;\n  }\n\n  margin-bottom: ${p => `${p.extraMargin ? '60px' : space(1)}`};\n`;\n","import styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport RadioGroup from 'sentry/components/forms/controls/radioGroup';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {COMPARISON_DELTA_OPTIONS} from 'sentry/views/alerts/rules/metric/constants';\n\nimport {isCrashFreeAlert} from './utils/isCrashFreeAlert';\nimport {AlertRuleComparisonType, Dataset} from './types';\n\ntype Props = {\n  comparisonType: AlertRuleComparisonType;\n  dataset: Dataset;\n  disabled: boolean;\n  onComparisonDeltaChange: (value: number) => void;\n  onComparisonTypeChange: (value: AlertRuleComparisonType) => void;\n  organization: Organization;\n  comparisonDelta?: number;\n};\n\nconst ThresholdTypeForm = ({\n  organization,\n  dataset,\n  disabled,\n  comparisonType,\n  onComparisonDeltaChange,\n  onComparisonTypeChange,\n  comparisonDelta,\n}: Props) => {\n  if (isCrashFreeAlert(dataset)) {\n    return null;\n  }\n\n  return (\n    <Feature features={['organizations:change-alerts']} organization={organization}>\n      <FormRow>\n        <StyledRadioGroup\n          disabled={disabled}\n          choices={[\n            [AlertRuleComparisonType.COUNT, 'Static: above or below {x}'],\n            [\n              AlertRuleComparisonType.CHANGE,\n              comparisonType === AlertRuleComparisonType.COUNT ? (\n                t('Percent Change: {x%} higher or lower compared to previous period')\n              ) : (\n                // Prevent default to avoid dropdown menu closing on click\n                <ComparisonContainer onClick={e => e.preventDefault()}>\n                  {t('Percent Change: {x%} higher or lower compared to')}\n                  <SelectControl\n                    name=\"comparisonDelta\"\n                    styles={{\n                      container: (provided: {\n                        [x: string]: string | number | boolean;\n                      }) => ({\n                        ...provided,\n                        marginLeft: space(1),\n                      }),\n                      control: (provided: {[x: string]: string | number | boolean}) => ({\n                        ...provided,\n                        minHeight: 30,\n                        minWidth: 500,\n                        maxWidth: 1000,\n                      }),\n                      valueContainer: (provided: {\n                        [x: string]: string | number | boolean;\n                      }) => ({\n                        ...provided,\n                        padding: 0,\n                      }),\n                      singleValue: (provided: {\n                        [x: string]: string | number | boolean;\n                      }) => ({\n                        ...provided,\n                      }),\n                    }}\n                    value={comparisonDelta}\n                    onChange={({value}) => onComparisonDeltaChange(value)}\n                    options={COMPARISON_DELTA_OPTIONS}\n                    required={comparisonType === AlertRuleComparisonType.CHANGE}\n                  />\n                </ComparisonContainer>\n              ),\n            ],\n          ]}\n          value={comparisonType}\n          label={t('Threshold Type')}\n          onChange={value => onComparisonTypeChange(value as AlertRuleComparisonType)}\n        />\n      </FormRow>\n    </Feature>\n  );\n};\n\nconst FormRow = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: ${space(2)};\n`;\n\nconst ComparisonContainer = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledRadioGroup = styled(RadioGroup)`\n  flex: 1;\n\n  gap: 0;\n  & > label {\n    height: 33px;\n  }\n`;\n\nexport default ThresholdTypeForm;\n","import Input from 'sentry/components/input';\nimport {t} from 'sentry/locale';\nimport {Action, ActionType, TargetType} from 'sentry/views/alerts/rules/metric/types';\n\ntype Props = {\n  action: Action;\n  disabled: boolean;\n  onChange: (value: string) => void;\n};\n\nfunction ActionSpecificTargetSelector({action, disabled, onChange}: Props) {\n  const handleChangeSpecificTargetIdentifier = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    onChange(e.target.value);\n  };\n\n  if (action.targetType !== TargetType.SPECIFIC || action.type !== ActionType.SLACK) {\n    return null;\n  }\n  return (\n    <Input\n      type=\"text\"\n      autoComplete=\"off\"\n      disabled={disabled}\n      key=\"inputChannelId\"\n      value={action.inputChannelId || ''}\n      onChange={handleChangeSpecificTargetIdentifier}\n      placeholder={t('optional: channel ID or user ID')}\n    />\n  );\n}\n\nexport default ActionSpecificTargetSelector;\n","import SelectControl from 'sentry/components/forms/selectControl';\nimport TeamSelector from 'sentry/components/forms/teamSelector';\nimport Input from 'sentry/components/input';\nimport SelectMembers from 'sentry/components/selectMembers';\nimport {Organization, Project, SelectValue} from 'sentry/types';\nimport {\n  Action,\n  ActionType,\n  MetricActionTemplate,\n  TargetType,\n} from 'sentry/views/alerts/rules/metric/types';\n\nconst getPlaceholderForType = (type: ActionType) => {\n  switch (type) {\n    case ActionType.SLACK:\n      return '@username or #channel';\n    case ActionType.MSTEAMS:\n      // no prefixes for msteams\n      return 'username or channel';\n    case ActionType.PAGERDUTY:\n      return 'service';\n    default:\n      throw Error('Not implemented');\n  }\n};\n\ntype Props = {\n  action: Action;\n  disabled: boolean;\n  loading: boolean;\n  onChange: (value: string) => void;\n  organization: Organization;\n  availableAction?: MetricActionTemplate;\n  project?: Project;\n};\n\nexport default function ActionTargetSelector(props: Props) {\n  const {action, availableAction, disabled, loading, onChange, organization, project} =\n    props;\n\n  const handleChangeTargetIdentifier = (value: SelectValue<string>) => {\n    onChange(value.value);\n  };\n\n  const handleChangeSpecificTargetIdentifier = (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    onChange(e.target.value);\n  };\n\n  switch (action.targetType) {\n    case TargetType.TEAM:\n    case TargetType.USER:\n      const isTeam = action.targetType === TargetType.TEAM;\n\n      return isTeam ? (\n        <TeamSelector\n          disabled={disabled}\n          key=\"team\"\n          project={project}\n          value={action.targetIdentifier}\n          onChange={handleChangeTargetIdentifier}\n          useId\n        />\n      ) : (\n        <SelectMembers\n          disabled={disabled}\n          key=\"member\"\n          project={project}\n          organization={organization}\n          value={action.targetIdentifier}\n          onChange={handleChangeTargetIdentifier}\n        />\n      );\n\n    case TargetType.SPECIFIC:\n      return availableAction?.options ? (\n        <SelectControl\n          isDisabled={disabled || loading}\n          value={action.targetIdentifier}\n          options={availableAction.options}\n          onChange={handleChangeTargetIdentifier}\n        />\n      ) : (\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          disabled={disabled}\n          key={action.type}\n          value={action.targetIdentifier || ''}\n          onChange={handleChangeSpecificTargetIdentifier}\n          placeholder={getPlaceholderForType(action.type)}\n        />\n      );\n\n    default:\n      return null;\n  }\n}\n","import Button, {ButtonProps} from 'sentry/components/button';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ninterface DeleteActionButtonProps extends Omit<ButtonProps, 'onClick'> {\n  index: number;\n  onClick: (triggerIndex: number, index: number, e: React.MouseEvent) => void;\n  triggerIndex: number;\n}\n\nexport default function DeleteActionButton(\n  props: DeleteActionButtonProps\n): React.ReactElement {\n  const handleClick = (e: React.MouseEvent) => {\n    const {triggerIndex, index, onClick} = props;\n    onClick(triggerIndex, index, e);\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      size=\"sm\"\n      icon={<IconDelete size=\"xs\" />}\n      aria-label={t('Remove action')}\n      {...props}\n      onClick={handleClick}\n    />\n  );\n}\n","import {Fragment, PureComponent} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport ListItem from 'sentry/components/list/listItem';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {PanelItem} from 'sentry/components/panels';\nimport {IconAdd, IconSettings} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project, SelectValue} from 'sentry/types';\nimport {uniqueId} from 'sentry/utils/guid';\nimport {removeAtArrayIndex} from 'sentry/utils/removeAtArrayIndex';\nimport {replaceAtArrayIndex} from 'sentry/utils/replaceAtArrayIndex';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport SentryAppRuleModal from 'sentry/views/alerts/rules/issue/sentryAppRuleModal';\nimport ActionSpecificTargetSelector from 'sentry/views/alerts/rules/metric/triggers/actionsPanel/actionSpecificTargetSelector';\nimport ActionTargetSelector from 'sentry/views/alerts/rules/metric/triggers/actionsPanel/actionTargetSelector';\nimport DeleteActionButton from 'sentry/views/alerts/rules/metric/triggers/actionsPanel/deleteActionButton';\nimport {\n  Action,\n  ActionLabel,\n  ActionType,\n  MetricActionTemplate,\n  TargetLabel,\n  Trigger,\n} from 'sentry/views/alerts/rules/metric/types';\n\ntype Props = {\n  availableActions: MetricActionTemplate[] | null;\n  currentProject: string;\n  disabled: boolean;\n  error: boolean;\n  loading: boolean;\n  onAdd: (triggerIndex: number, action: Action) => void;\n  onChange: (triggerIndex: number, triggers: Trigger[], actions: Action[]) => void;\n  organization: Organization;\n  projects: Project[];\n  triggers: Trigger[];\n  className?: string;\n};\n\n/**\n * When a new action is added, all of it's settings should be set to their default values.\n * @param actionConfig\n * @param dateCreated kept to maintain order of unsaved actions\n */\nconst getCleanAction = (actionConfig, dateCreated?: string): Action => {\n  return {\n    unsavedId: uniqueId(),\n    unsavedDateCreated: dateCreated ?? new Date().toISOString(),\n    type: actionConfig.type,\n    targetType:\n      actionConfig &&\n      actionConfig.allowedTargetTypes &&\n      actionConfig.allowedTargetTypes.length > 0\n        ? actionConfig.allowedTargetTypes[0]\n        : null,\n    targetIdentifier: actionConfig.sentryAppId || '',\n    inputChannelId: null,\n    integrationId: actionConfig.integrationId,\n    sentryAppId: actionConfig.sentryAppId,\n    options: actionConfig.options || null,\n  };\n};\n\n/**\n * Actions have a type (e.g. email, slack, etc), but only some have\n * an integrationId (e.g. email is null). This helper creates a unique\n * id based on the type and integrationId so that we know what action\n * a user's saved action corresponds to.\n */\nconst getActionUniqueKey = ({\n  type,\n  integrationId,\n  sentryAppId,\n}: Pick<Action, 'type' | 'integrationId' | 'sentryAppId'>) => {\n  if (integrationId) {\n    return `${type}-${integrationId}`;\n  }\n  if (sentryAppId) {\n    return `${type}-${sentryAppId}`;\n  }\n  return type;\n};\n\n/**\n * Creates a human-friendly display name for the integration based on type and\n * server provided `integrationName`\n *\n * e.g. for slack we show that it is slack and the `integrationName` is the workspace name\n */\nconst getFullActionTitle = ({\n  type,\n  integrationName,\n  sentryAppName,\n  status,\n}: Pick<\n  MetricActionTemplate,\n  'type' | 'integrationName' | 'sentryAppName' | 'status'\n>) => {\n  if (sentryAppName) {\n    if (status && status !== 'published') {\n      return `${sentryAppName} (${status})`;\n    }\n    return `${sentryAppName}`;\n  }\n\n  const label = ActionLabel[type];\n  if (integrationName) {\n    return `${label} - ${integrationName}`;\n  }\n  return label;\n};\n\n/**\n * Lists saved actions as well as control to add a new action\n */\nclass ActionsPanel extends PureComponent<Props> {\n  handleChangeKey(\n    triggerIndex: number,\n    index: number,\n    key: 'targetIdentifier' | 'inputChannelId',\n    value: string\n  ) {\n    const {triggers, onChange} = this.props;\n    const {actions} = triggers[triggerIndex];\n    const newAction = {\n      ...actions[index],\n      [key]: value,\n    };\n\n    onChange(triggerIndex, triggers, replaceAtArrayIndex(actions, index, newAction));\n  }\n\n  conditionallyRenderHelpfulBanner(triggerIndex: number, index: number) {\n    const {triggers} = this.props;\n    const {actions} = triggers[triggerIndex];\n    const newAction = {...actions[index]};\n    if (newAction.type !== 'slack') {\n      return null;\n    }\n    return (\n      <MarginlessAlert\n        type=\"info\"\n        showIcon\n        trailingItems={\n          <Button\n            href=\"https://docs.sentry.io/product/integrations/notification-incidents/slack/#rate-limiting-error\"\n            size=\"xs\"\n          >\n            {t('Learn More')}\n          </Button>\n        }\n      >\n        {t('Having rate limiting problems? Enter a channel or user ID.')}\n      </MarginlessAlert>\n    );\n  }\n\n  handleAddAction = () => {\n    const {availableActions, onAdd} = this.props;\n    const actionConfig = availableActions?.[0];\n\n    if (!actionConfig) {\n      addErrorMessage(t('There was a problem adding an action'));\n      Sentry.captureException(new Error('Unable to add an action'));\n      return;\n    }\n\n    const action: Action = getCleanAction(actionConfig);\n\n    // Add new actions to critical by default\n    const triggerIndex = 0;\n    onAdd(triggerIndex, action);\n  };\n\n  handleDeleteAction = (triggerIndex: number, index: number) => {\n    const {triggers, onChange} = this.props;\n    const {actions} = triggers[triggerIndex];\n\n    onChange(triggerIndex, triggers, removeAtArrayIndex(actions, index));\n  };\n\n  handleChangeActionLevel = (\n    triggerIndex: number,\n    index: number,\n    value: SelectValue<number>\n  ) => {\n    const {triggers, onChange} = this.props;\n    // Convert saved action to unsaved by removing id\n    const {id: _, ...action} = triggers[triggerIndex].actions[index];\n    action.unsavedId = uniqueId();\n    triggers[value.value].actions.push(action);\n    onChange(value.value, triggers, triggers[value.value].actions);\n    this.handleDeleteAction(triggerIndex, index);\n  };\n\n  handleChangeActionType = (\n    triggerIndex: number,\n    index: number,\n    value: SelectValue<ActionType>\n  ) => {\n    const {triggers, onChange, availableActions} = this.props;\n    const {actions} = triggers[triggerIndex];\n    const actionConfig = availableActions?.find(\n      availableAction => getActionUniqueKey(availableAction) === value.value\n    );\n    if (!actionConfig) {\n      addErrorMessage(t('There was a problem changing an action'));\n      Sentry.captureException(new Error('Unable to change an action type'));\n      return;\n    }\n\n    const existingDateCreated =\n      actions[index].dateCreated ?? actions[index].unsavedDateCreated;\n    const newAction: Action = getCleanAction(actionConfig, existingDateCreated);\n    onChange(triggerIndex, triggers, replaceAtArrayIndex(actions, index, newAction));\n  };\n\n  handleChangeTarget = (\n    triggerIndex: number,\n    index: number,\n    value: SelectValue<keyof typeof TargetLabel>\n  ) => {\n    const {triggers, onChange} = this.props;\n    const {actions} = triggers[triggerIndex];\n    const newAction = {\n      ...actions[index],\n      targetType: value.value,\n      targetIdentifier: '',\n    };\n\n    onChange(triggerIndex, triggers, replaceAtArrayIndex(actions, index, newAction));\n  };\n\n  /**\n   * Update the Trigger's Action fields from the SentryAppRuleModal together\n   * only after the user clicks \"Save Changes\".\n   * @param formData Form data\n   */\n  updateParentFromSentryAppRule = (\n    triggerIndex: number,\n    actionIndex: number,\n    formData: {[key: string]: string}\n  ): void => {\n    const {triggers, onChange} = this.props;\n    const {actions} = triggers[triggerIndex];\n    const newAction = {\n      ...actions[actionIndex],\n      ...formData,\n    };\n\n    onChange(\n      triggerIndex,\n      triggers,\n      replaceAtArrayIndex(actions, actionIndex, newAction)\n    );\n  };\n\n  render() {\n    const {\n      availableActions,\n      currentProject,\n      disabled,\n      loading,\n      organization,\n      projects,\n      triggers,\n    } = this.props;\n\n    const project = projects.find(({slug}) => slug === currentProject);\n    const items = availableActions?.map(availableAction => ({\n      value: getActionUniqueKey(availableAction),\n      label: getFullActionTitle(availableAction),\n    }));\n\n    const levels = [\n      {value: 0, label: 'Critical Status'},\n      {value: 1, label: 'Warning Status'},\n    ];\n\n    // Create single array of unsaved and saved trigger actions\n    // Sorted by date created ascending\n    const actions = triggers\n      .flatMap((trigger, triggerIndex) => {\n        return trigger.actions.map((action, actionIdx) => {\n          const availableAction = availableActions?.find(\n            a => getActionUniqueKey(a) === getActionUniqueKey(action)\n          );\n          return {\n            dateCreated: new Date(\n              action.dateCreated ?? action.unsavedDateCreated\n            ).getTime(),\n            triggerIndex,\n            action,\n            actionIdx,\n            availableAction,\n          };\n        });\n      })\n      .sort((a, b) => a.dateCreated - b.dateCreated);\n\n    return (\n      <Fragment>\n        <PerformActionsListItem>{t('Set actions')}</PerformActionsListItem>\n        {loading && <LoadingIndicator />}\n        {actions.map(({action, actionIdx, triggerIndex, availableAction}) => {\n          const actionDisabled =\n            triggers[triggerIndex].actions[actionIdx]?.disabled || disabled;\n          return (\n            <div key={action.id ?? action.unsavedId}>\n              <RuleRowContainer>\n                <PanelItemGrid>\n                  <PanelItemSelects>\n                    <SelectControl\n                      name=\"select-level\"\n                      aria-label={t('Select a status level')}\n                      isDisabled={disabled || loading}\n                      placeholder={t('Select Level')}\n                      onChange={this.handleChangeActionLevel.bind(\n                        this,\n                        triggerIndex,\n                        actionIdx\n                      )}\n                      value={triggerIndex}\n                      options={levels}\n                    />\n                    <SelectControl\n                      name=\"select-action\"\n                      aria-label={t('Select an Action')}\n                      isDisabled={disabled || loading}\n                      placeholder={t('Select Action')}\n                      onChange={this.handleChangeActionType.bind(\n                        this,\n                        triggerIndex,\n                        actionIdx\n                      )}\n                      value={getActionUniqueKey(action)}\n                      options={items ?? []}\n                    />\n\n                    {availableAction && availableAction.allowedTargetTypes.length > 1 ? (\n                      <SelectControl\n                        isDisabled={disabled || loading}\n                        value={action.targetType}\n                        options={availableAction?.allowedTargetTypes?.map(\n                          allowedType => ({\n                            value: allowedType,\n                            label: TargetLabel[allowedType],\n                          })\n                        )}\n                        onChange={this.handleChangeTarget.bind(\n                          this,\n                          triggerIndex,\n                          actionIdx\n                        )}\n                      />\n                    ) : availableAction &&\n                      availableAction.type === 'sentry_app' &&\n                      availableAction.settings ? (\n                      <Button\n                        icon={<IconSettings />}\n                        type=\"button\"\n                        disabled={actionDisabled}\n                        onClick={() => {\n                          openModal(\n                            deps => (\n                              <SentryAppRuleModal\n                                {...deps}\n                                // Using ! for keys that will exist for sentryapps\n                                sentryAppInstallationUuid={\n                                  availableAction.sentryAppInstallationUuid!\n                                }\n                                config={availableAction.settings!}\n                                appName={availableAction.sentryAppName!}\n                                onSubmitSuccess={this.updateParentFromSentryAppRule.bind(\n                                  this,\n                                  triggerIndex,\n                                  actionIdx\n                                )}\n                                resetValues={\n                                  triggers[triggerIndex].actions[actionIdx] || {}\n                                }\n                              />\n                            ),\n                            {allowClickClose: false}\n                          );\n                        }}\n                      >\n                        {t('Settings')}\n                      </Button>\n                    ) : null}\n                    <ActionTargetSelector\n                      action={action}\n                      availableAction={availableAction}\n                      disabled={disabled}\n                      loading={loading}\n                      onChange={this.handleChangeKey.bind(\n                        this,\n                        triggerIndex,\n                        actionIdx,\n                        'targetIdentifier'\n                      )}\n                      organization={organization}\n                      project={project}\n                    />\n                    <ActionSpecificTargetSelector\n                      action={action}\n                      disabled={disabled}\n                      onChange={this.handleChangeKey.bind(\n                        this,\n                        triggerIndex,\n                        actionIdx,\n                        'inputChannelId'\n                      )}\n                    />\n                  </PanelItemSelects>\n                  <DeleteActionButton\n                    triggerIndex={triggerIndex}\n                    index={actionIdx}\n                    onClick={this.handleDeleteAction}\n                    disabled={disabled}\n                  />\n                </PanelItemGrid>\n              </RuleRowContainer>\n              {this.conditionallyRenderHelpfulBanner(triggerIndex, actionIdx)}\n            </div>\n          );\n        })}\n        <ActionSection>\n          <Button\n            type=\"button\"\n            disabled={disabled || loading}\n            icon={<IconAdd isCircled color=\"gray300\" />}\n            onClick={this.handleAddAction}\n          >\n            {t('Add Action')}\n          </Button>\n        </ActionSection>\n      </Fragment>\n    );\n  }\n}\n\nconst ActionsPanelWithSpace = styled(ActionsPanel)`\n  margin-top: ${space(4)};\n`;\n\nconst ActionSection = styled('div')`\n  margin-top: ${space(1)};\n  margin-bottom: ${space(3)};\n`;\n\nconst PanelItemGrid = styled(PanelItem)`\n  display: flex;\n  align-items: center;\n  border-bottom: 0;\n  padding: ${space(1)};\n`;\n\nconst PanelItemSelects = styled('div')`\n  display: flex;\n  width: 100%;\n  margin-right: ${space(1)};\n  > * {\n    flex: 0 1 200px;\n\n    &:not(:last-child) {\n      margin-right: ${space(1)};\n    }\n  }\n`;\n\nconst RuleRowContainer = styled('div')`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border: 1px ${p => p.theme.border} solid;\n  border-radius: ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0 0;\n  &:last-child {\n    border-radius: ${p => p.theme.borderRadius};\n  }\n`;\n\nconst StyledListItem = styled(ListItem)`\n  margin: ${space(2)} 0 ${space(3)} 0;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nconst PerformActionsListItem = styled(StyledListItem)`\n  margin-bottom: 0;\n  line-height: 1.3;\n`;\n\nconst MarginlessAlert = styled(Alert)`\n  border-radius: 0 0 ${p => p.theme.borderRadius} ${p => p.theme.borderRadius};\n  border: 1px ${p => p.theme.border} solid;\n  border-top-width: 0;\n  margin: 0;\n  padding: ${space(1)} ${space(1)};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nexport default withOrganization(ActionsPanelWithSpace);\n","import {Fragment, PureComponent} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport capitalize from 'lodash/capitalize';\nimport isEqual from 'lodash/isEqual';\nimport maxBy from 'lodash/maxBy';\nimport minBy from 'lodash/minBy';\n\nimport {fetchTotalCount} from 'sentry/actionCreators/events';\nimport {Client} from 'sentry/api';\nimport EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {LineChartSeries} from 'sentry/components/charts/lineChart';\nimport OptionSelector from 'sentry/components/charts/optionSelector';\nimport SessionsRequest from 'sentry/components/charts/sessionsRequest';\nimport {\n  ChartControls,\n  InlineContainer,\n  SectionHeading,\n  SectionValue,\n} from 'sentry/components/charts/styles';\nimport LoadingMask from 'sentry/components/loadingMask';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport type {\n  EventsStats,\n  MultiSeriesEventsStats,\n  Organization,\n  Project,\n} from 'sentry/types';\nimport type {Series} from 'sentry/types/echarts';\nimport {\n  getCrashFreeRateSeries,\n  MINUTES_THRESHOLD_TO_DISPLAY_SECONDS,\n} from 'sentry/utils/sessions';\nimport withApi from 'sentry/utils/withApi';\nimport {COMPARISON_DELTA_OPTIONS} from 'sentry/views/alerts/rules/metric/constants';\nimport {isSessionAggregate, SESSION_AGGREGATE_TO_FIELD} from 'sentry/views/alerts/utils';\nimport {getComparisonMarkLines} from 'sentry/views/alerts/utils/getComparisonMarkLines';\nimport {AlertWizardAlertNames} from 'sentry/views/alerts/wizard/options';\nimport {getAlertTypeFromAggregateDataset} from 'sentry/views/alerts/wizard/utils';\n\nimport {\n  AlertRuleComparisonType,\n  Dataset,\n  MetricRule,\n  SessionsAggregate,\n  TimePeriod,\n  TimeWindow,\n  Trigger,\n} from '../../types';\nimport {getMetricDatasetQueryExtras} from '../../utils/getMetricDatasetQueryExtras';\n\nimport ThresholdsChart from './thresholdsChart';\n\ntype Props = {\n  aggregate: MetricRule['aggregate'];\n  api: Client;\n  comparisonType: AlertRuleComparisonType;\n  dataset: MetricRule['dataset'];\n  environment: string | null;\n  handleMEPAlertDataset: (data: EventsStats | MultiSeriesEventsStats | null) => void;\n  location: Location;\n  newAlertOrQuery: boolean;\n  organization: Organization;\n  projects: Project[];\n  query: MetricRule['query'];\n  resolveThreshold: MetricRule['resolveThreshold'];\n  thresholdType: MetricRule['thresholdType'];\n  timeWindow: MetricRule['timeWindow'];\n  triggers: Trigger[];\n  comparisonDelta?: number;\n  header?: React.ReactNode;\n};\n\nconst TIME_PERIOD_MAP: Record<TimePeriod, string> = {\n  [TimePeriod.SIX_HOURS]: t('Last 6 hours'),\n  [TimePeriod.ONE_DAY]: t('Last 24 hours'),\n  [TimePeriod.THREE_DAYS]: t('Last 3 days'),\n  [TimePeriod.SEVEN_DAYS]: t('Last 7 days'),\n  [TimePeriod.FOURTEEN_DAYS]: t('Last 14 days'),\n  [TimePeriod.THIRTY_DAYS]: t('Last 30 days'),\n};\n\n/**\n * Just to avoid repeating it\n */\nconst MOST_TIME_PERIODS: readonly TimePeriod[] = [\n  TimePeriod.ONE_DAY,\n  TimePeriod.THREE_DAYS,\n  TimePeriod.SEVEN_DAYS,\n  TimePeriod.FOURTEEN_DAYS,\n  TimePeriod.THIRTY_DAYS,\n];\n\n/**\n * TimeWindow determines data available in TimePeriod\n * If TimeWindow is small, lower TimePeriod to limit data points\n */\nconst AVAILABLE_TIME_PERIODS: Record<TimeWindow, readonly TimePeriod[]> = {\n  [TimeWindow.ONE_MINUTE]: [\n    TimePeriod.SIX_HOURS,\n    TimePeriod.ONE_DAY,\n    TimePeriod.THREE_DAYS,\n    TimePeriod.SEVEN_DAYS,\n  ],\n  [TimeWindow.FIVE_MINUTES]: MOST_TIME_PERIODS,\n  [TimeWindow.TEN_MINUTES]: MOST_TIME_PERIODS,\n  [TimeWindow.FIFTEEN_MINUTES]: MOST_TIME_PERIODS,\n  [TimeWindow.THIRTY_MINUTES]: MOST_TIME_PERIODS,\n  [TimeWindow.ONE_HOUR]: MOST_TIME_PERIODS,\n  [TimeWindow.TWO_HOURS]: MOST_TIME_PERIODS,\n  [TimeWindow.FOUR_HOURS]: [\n    TimePeriod.THREE_DAYS,\n    TimePeriod.SEVEN_DAYS,\n    TimePeriod.FOURTEEN_DAYS,\n    TimePeriod.THIRTY_DAYS,\n  ],\n  [TimeWindow.ONE_DAY]: [TimePeriod.THIRTY_DAYS],\n};\n\nconst TIME_WINDOW_TO_SESSION_INTERVAL = {\n  [TimeWindow.THIRTY_MINUTES]: '30m',\n  [TimeWindow.ONE_HOUR]: '1h',\n  [TimeWindow.TWO_HOURS]: '2h',\n  [TimeWindow.FOUR_HOURS]: '4h',\n  [TimeWindow.ONE_DAY]: '1d',\n};\n\nconst SESSION_AGGREGATE_TO_HEADING = {\n  [SessionsAggregate.CRASH_FREE_SESSIONS]: t('Total Sessions'),\n  [SessionsAggregate.CRASH_FREE_USERS]: t('Total Users'),\n};\n\ntype State = {\n  statsPeriod: TimePeriod;\n  totalCount: number | null;\n};\n\n/**\n * This is a chart to be used in Metric Alert rules that fetches events based on\n * query, timewindow, and aggregations.\n */\nclass TriggersChart extends PureComponent<Props, State> {\n  state: State = {\n    statsPeriod: TimePeriod.SEVEN_DAYS,\n    totalCount: null,\n  };\n\n  componentDidMount() {\n    if (!isSessionAggregate(this.props.aggregate)) {\n      this.fetchTotalCount();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const {query, environment, timeWindow, aggregate, projects} = this.props;\n    const {statsPeriod} = this.state;\n    if (\n      !isSessionAggregate(aggregate) &&\n      (!isEqual(prevProps.projects, projects) ||\n        prevProps.environment !== environment ||\n        prevProps.query !== query ||\n        !isEqual(prevProps.timeWindow, timeWindow) ||\n        !isEqual(prevState.statsPeriod, statsPeriod))\n    ) {\n      this.fetchTotalCount();\n    }\n  }\n\n  get availableTimePeriods() {\n    // We need to special case sessions, because sub-hour windows are available\n    // only when time period is six hours or less (backend limitation)\n    if (isSessionAggregate(this.props.aggregate)) {\n      return {\n        ...AVAILABLE_TIME_PERIODS,\n        [TimeWindow.THIRTY_MINUTES]: [TimePeriod.SIX_HOURS],\n      };\n    }\n\n    return AVAILABLE_TIME_PERIODS;\n  }\n\n  handleStatsPeriodChange = (timePeriod: string) => {\n    this.setState({statsPeriod: timePeriod as TimePeriod});\n  };\n\n  getStatsPeriod = () => {\n    const {statsPeriod} = this.state;\n    const {timeWindow} = this.props;\n    const statsPeriodOptions = this.availableTimePeriods[timeWindow];\n    const period = statsPeriodOptions.includes(statsPeriod)\n      ? statsPeriod\n      : statsPeriodOptions[statsPeriodOptions.length - 1];\n    return period;\n  };\n\n  get comparisonSeriesName() {\n    return capitalize(\n      COMPARISON_DELTA_OPTIONS.find(({value}) => value === this.props.comparisonDelta)\n        ?.label || ''\n    );\n  }\n\n  async fetchTotalCount() {\n    const {api, organization, environment, projects, query} = this.props;\n    const statsPeriod = this.getStatsPeriod();\n    try {\n      const totalCount = await fetchTotalCount(api, organization.slug, {\n        field: [],\n        project: projects.map(({id}) => id),\n        query,\n        statsPeriod,\n        environment: environment ? [environment] : [],\n      });\n      this.setState({totalCount});\n    } catch (e) {\n      this.setState({totalCount: null});\n    }\n  }\n\n  renderChart(\n    timeseriesData: Series[] = [],\n    isLoading: boolean,\n    isReloading: boolean,\n    comparisonData?: Series[],\n    comparisonMarkLines?: LineChartSeries[],\n    minutesThresholdToDisplaySeconds?: number\n  ) {\n    const {\n      triggers,\n      resolveThreshold,\n      thresholdType,\n      header,\n      timeWindow,\n      aggregate,\n      comparisonType,\n    } = this.props;\n    const {statsPeriod, totalCount} = this.state;\n    const statsPeriodOptions = this.availableTimePeriods[timeWindow];\n    const period = this.getStatsPeriod();\n    return (\n      <Fragment>\n        {header}\n        <TransparentLoadingMask visible={isReloading} />\n        {isLoading ? (\n          <ChartPlaceholder />\n        ) : (\n          <ThresholdsChart\n            period={statsPeriod}\n            minValue={minBy(timeseriesData[0]?.data, ({value}) => value)?.value}\n            maxValue={maxBy(timeseriesData[0]?.data, ({value}) => value)?.value}\n            data={timeseriesData}\n            comparisonData={comparisonData ?? []}\n            comparisonSeriesName={this.comparisonSeriesName}\n            comparisonMarkLines={comparisonMarkLines ?? []}\n            hideThresholdLines={comparisonType === AlertRuleComparisonType.CHANGE}\n            triggers={triggers}\n            resolveThreshold={resolveThreshold}\n            thresholdType={thresholdType}\n            aggregate={aggregate}\n            minutesThresholdToDisplaySeconds={minutesThresholdToDisplaySeconds}\n          />\n        )}\n        <ChartControls>\n          <InlineContainer data-test-id=\"alert-total-events\">\n            <SectionHeading>\n              {isSessionAggregate(aggregate)\n                ? SESSION_AGGREGATE_TO_HEADING[aggregate]\n                : t('Total Events')}\n            </SectionHeading>\n            <SectionValue>\n              {totalCount !== null ? totalCount.toLocaleString() : '\\u2014'}\n            </SectionValue>\n          </InlineContainer>\n          <InlineContainer>\n            <OptionSelector\n              options={statsPeriodOptions.map(timePeriod => ({\n                label: TIME_PERIOD_MAP[timePeriod],\n                value: timePeriod,\n                disabled: isLoading || isReloading,\n              }))}\n              selected={period}\n              onChange={this.handleStatsPeriodChange}\n              title={t('Display')}\n            />\n          </InlineContainer>\n        </ChartControls>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {\n      api,\n      organization,\n      projects,\n      timeWindow,\n      query,\n      location,\n      aggregate,\n      dataset,\n      newAlertOrQuery,\n      handleMEPAlertDataset,\n      environment,\n      comparisonDelta,\n      triggers,\n      thresholdType,\n    } = this.props;\n\n    const period = this.getStatsPeriod();\n    const renderComparisonStats = Boolean(\n      organization.features.includes('change-alerts') && comparisonDelta\n    );\n\n    const queryExtras = getMetricDatasetQueryExtras({\n      organization,\n      location,\n      dataset,\n      newAlertOrQuery,\n    });\n\n    return isSessionAggregate(aggregate) ? (\n      <SessionsRequest\n        api={api}\n        organization={organization}\n        project={projects.map(({id}) => Number(id))}\n        environment={environment ? [environment] : undefined}\n        statsPeriod={period}\n        query={query}\n        interval={TIME_WINDOW_TO_SESSION_INTERVAL[timeWindow]}\n        field={SESSION_AGGREGATE_TO_FIELD[aggregate]}\n        groupBy={['session.status']}\n      >\n        {({loading, reloading, response}) => {\n          const {groups, intervals} = response || {};\n          const sessionTimeSeries = [\n            {\n              seriesName:\n                AlertWizardAlertNames[\n                  getAlertTypeFromAggregateDataset({aggregate, dataset: Dataset.SESSIONS})\n                ],\n              data: getCrashFreeRateSeries(\n                groups,\n                intervals,\n                SESSION_AGGREGATE_TO_FIELD[aggregate]\n              ),\n            },\n          ];\n\n          return this.renderChart(\n            sessionTimeSeries,\n            loading,\n            reloading,\n            undefined,\n            undefined,\n            MINUTES_THRESHOLD_TO_DISPLAY_SECONDS\n          );\n        }}\n      </SessionsRequest>\n    ) : (\n      <EventsRequest\n        api={api}\n        organization={organization}\n        query={query}\n        environment={environment ? [environment] : undefined}\n        project={projects.map(({id}) => Number(id))}\n        interval={`${timeWindow}m`}\n        comparisonDelta={comparisonDelta && comparisonDelta * 60}\n        period={period}\n        yAxis={aggregate}\n        includePrevious={false}\n        currentSeriesNames={[aggregate]}\n        partial={false}\n        queryExtras={queryExtras}\n        dataLoadedCallback={handleMEPAlertDataset}\n      >\n        {({loading, reloading, timeseriesData, comparisonTimeseriesData}) => {\n          let comparisonMarkLines: LineChartSeries[] = [];\n          if (renderComparisonStats && comparisonTimeseriesData) {\n            comparisonMarkLines = getComparisonMarkLines(\n              timeseriesData,\n              comparisonTimeseriesData,\n              timeWindow,\n              triggers,\n              thresholdType\n            );\n          }\n\n          return this.renderChart(\n            timeseriesData,\n            loading,\n            reloading,\n            comparisonTimeseriesData,\n            comparisonMarkLines\n          );\n        }}\n      </EventsRequest>\n    );\n  }\n}\n\nexport default withApi(TriggersChart);\n\nconst TransparentLoadingMask = styled(LoadingMask)<{visible: boolean}>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nconst ChartPlaceholder = styled(Placeholder)`\n  /* Height and margin should add up to graph size (200px) */\n  margin: 0 0 ${space(2)};\n  height: 184px;\n`;\n","import {PureComponent} from 'react';\nimport color from 'color';\nimport type {TooltipComponentFormatterCallbackParams} from 'echarts';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nimport {AreaChart, AreaChartSeries} from 'sentry/components/charts/areaChart';\nimport Graphic from 'sentry/components/charts/components/graphic';\nimport {defaultFormatAxisLabel} from 'sentry/components/charts/components/tooltip';\nimport {LineChartSeries} from 'sentry/components/charts/lineChart';\nimport LineSeries from 'sentry/components/charts/series/lineSeries';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport CHART_PALETTE from 'sentry/constants/chartPalette';\nimport space from 'sentry/styles/space';\nimport {PageFilters} from 'sentry/types';\nimport {ReactEchartsRef, Series} from 'sentry/types/echarts';\nimport theme from 'sentry/utils/theme';\nimport {\n  ALERT_CHART_MIN_MAX_BUFFER,\n  alertAxisFormatter,\n  alertTooltipValueFormatter,\n  isSessionAggregate,\n  shouldScaleAlertChart,\n} from 'sentry/views/alerts/utils';\nimport {getChangeStatus} from 'sentry/views/alerts/utils/getChangeStatus';\n\nimport {\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  MetricRule,\n  Trigger,\n} from '../../types';\n\ntype DefaultProps = {\n  comparisonData: Series[];\n  comparisonMarkLines: LineChartSeries[];\n  data: Series[];\n};\n\ntype Props = DefaultProps & {\n  aggregate: string;\n  hideThresholdLines: boolean;\n  resolveThreshold: MetricRule['resolveThreshold'];\n  thresholdType: MetricRule['thresholdType'];\n  triggers: Trigger[];\n  comparisonSeriesName?: string;\n  maxValue?: number;\n  minValue?: number;\n  minutesThresholdToDisplaySeconds?: number;\n} & Partial<PageFilters['datetime']>;\n\ntype State = {\n  height: number;\n  width: number;\n  yAxisMax: number | null;\n  yAxisMin: number | null;\n};\n\nconst CHART_GRID = {\n  left: space(2),\n  right: space(2),\n  top: space(4),\n  bottom: space(2),\n};\n\n// Colors to use for trigger thresholds\nconst COLOR = {\n  RESOLUTION_FILL: color(theme.green200).alpha(0.1).rgb().string(),\n  CRITICAL_FILL: color(theme.red300).alpha(0.25).rgb().string(),\n  WARNING_FILL: color(theme.yellow200).alpha(0.1).rgb().string(),\n};\n\n/**\n * This chart displays shaded regions that represent different Trigger thresholds in a\n * Metric Alert rule.\n */\nexport default class ThresholdsChart extends PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    data: [],\n    comparisonData: [],\n    comparisonMarkLines: [],\n  };\n\n  state: State = {\n    width: -1,\n    height: -1,\n    yAxisMax: null,\n    yAxisMin: null,\n  };\n\n  componentDidMount() {\n    this.handleUpdateChartAxis();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      this.props.triggers !== prevProps.triggers ||\n      this.props.data !== prevProps.data ||\n      this.props.comparisonData !== prevProps.comparisonData ||\n      this.props.comparisonMarkLines !== prevProps.comparisonMarkLines\n    ) {\n      this.handleUpdateChartAxis();\n    }\n  }\n\n  ref: null | ReactEchartsRef = null;\n\n  // If we have ref to chart and data, try to update chart axis so that\n  // alertThreshold or resolveThreshold is visible in chart\n  handleUpdateChartAxis = () => {\n    const {triggers, resolveThreshold, hideThresholdLines} = this.props;\n    const chartRef = this.ref?.getEchartsInstance?.();\n    if (hideThresholdLines) {\n      return;\n    }\n\n    if (chartRef) {\n      const thresholds = [\n        resolveThreshold || null,\n        ...triggers.map(t => t.alertThreshold || null),\n      ].filter(threshold => threshold !== null) as number[];\n      this.updateChartAxis(Math.min(...thresholds), Math.max(...thresholds));\n    }\n  };\n\n  /**\n   * Updates the chart so that yAxis is within bounds of our max value\n   */\n  updateChartAxis = debounce((minThreshold: number, maxThreshold: number) => {\n    const {minValue, maxValue, aggregate} = this.props;\n    const shouldScale = shouldScaleAlertChart(aggregate);\n    let yAxisMax =\n      shouldScale && maxValue\n        ? this.clampMaxValue(Math.ceil(maxValue * ALERT_CHART_MIN_MAX_BUFFER))\n        : null;\n    let yAxisMin =\n      shouldScale && minValue ? Math.floor(minValue / ALERT_CHART_MIN_MAX_BUFFER) : 0;\n\n    if (typeof maxValue === 'number' && maxThreshold > maxValue) {\n      yAxisMax = maxThreshold;\n    }\n    if (typeof minValue === 'number' && minThreshold < minValue) {\n      yAxisMin = Math.floor(minThreshold / ALERT_CHART_MIN_MAX_BUFFER);\n    }\n\n    // We need to force update after we set a new yAxis min/max because `convertToPixel`\n    // can return a negative position (probably because yAxisMin/yAxisMax is not synced with chart yet)\n    this.setState({yAxisMax, yAxisMin}, this.forceUpdate);\n  }, 150);\n\n  /**\n   * Syncs component state with the chart's width/heights\n   */\n  updateDimensions = () => {\n    const chartRef = this.ref?.getEchartsInstance?.();\n    if (!chartRef || !chartRef.getWidth?.()) {\n      return;\n    }\n\n    const width = chartRef.getWidth();\n    const height = chartRef.getHeight();\n    if (width !== this.state.width || height !== this.state.height) {\n      this.setState({\n        width,\n        height,\n      });\n    }\n  };\n\n  handleRef = (ref: ReactEchartsRef): void => {\n    // When chart initially renders, we want to update state with its width, as well as initialize starting\n    // locations (on y axis) for the draggable lines\n    if (ref && !this.ref) {\n      this.ref = ref;\n      this.updateDimensions();\n      this.handleUpdateChartAxis();\n    }\n\n    if (!ref) {\n      this.ref = null;\n    }\n  };\n\n  /**\n   * Draws the boundary lines and shaded areas for the chart.\n   *\n   * May need to refactor so that they are aware of other trigger thresholds.\n   *\n   * e.g. draw warning from threshold -> critical threshold instead of the entire height of chart\n   */\n  getThresholdLine = (\n    trigger: Trigger,\n    type: 'alertThreshold' | 'resolveThreshold',\n    isResolution: boolean\n  ) => {\n    const {thresholdType, resolveThreshold, maxValue, hideThresholdLines} = this.props;\n    const position =\n      type === 'alertThreshold'\n        ? this.getChartPixelForThreshold(trigger[type])\n        : this.getChartPixelForThreshold(resolveThreshold);\n    const isInverted = thresholdType === AlertRuleThresholdType.BELOW;\n    const chartRef = this.ref?.getEchartsInstance?.();\n\n    if (\n      typeof position !== 'number' ||\n      isNaN(position) ||\n      !this.state.height ||\n      !chartRef ||\n      hideThresholdLines\n    ) {\n      return [];\n    }\n\n    const yAxisPixelPosition = chartRef.convertToPixel(\n      {yAxisIndex: 0},\n      `${this.state.yAxisMin}`\n    );\n    const yAxisPosition = typeof yAxisPixelPosition === 'number' ? yAxisPixelPosition : 0;\n    // As the yAxis gets larger we want to start our line/area further to the right\n    // Handle case where the graph max is 1 and includes decimals\n    const yAxisMax =\n      (Math.round(Math.max(maxValue ?? 1, this.state.yAxisMax ?? 1)) * 100) / 100;\n    const yAxisSize = 15 + (yAxisMax <= 1 ? 15 : `${yAxisMax ?? ''}`.length * 8);\n    // Shave off the right margin and yAxisSize from the width to get the actual area we want to render content in\n    const graphAreaWidth =\n      this.state.width - parseInt(CHART_GRID.right.slice(0, -2), 10) - yAxisSize;\n    // Distance from the top of the chart to save for the legend\n    const legendPadding = 20;\n    // Shave off the left margin\n    const graphAreaMargin = 7;\n\n    const isCritical = trigger.label === AlertRuleTriggerType.CRITICAL;\n    const LINE_STYLE = {\n      stroke: isResolution ? theme.green300 : isCritical ? theme.red300 : theme.yellow300,\n      lineDash: [2],\n    };\n\n    return [\n      // This line is used as a \"border\" for the shaded region\n      // and represents the threshold value.\n      {\n        type: 'line',\n        // Resolution is considered \"off\" if it is -1\n        invisible: position === null,\n        draggable: false,\n        position: [yAxisSize, position],\n        shape: {y1: 1, y2: 1, x1: graphAreaMargin, x2: graphAreaWidth},\n        style: LINE_STYLE,\n        silent: true,\n        z: 100,\n      },\n\n      // Shaded area for incident/resolutions to show user when they can expect to be alerted\n      // (or when they will be considered as resolved)\n      //\n      // Resolution is considered \"off\" if it is -1\n      ...(position !== null\n        ? [\n            {\n              type: 'rect',\n              draggable: false,\n              silent: true,\n\n              position:\n                isResolution !== isInverted\n                  ? [yAxisSize + graphAreaMargin, position + 1]\n                  : [yAxisSize + graphAreaMargin, legendPadding],\n              shape: {\n                width: graphAreaWidth - graphAreaMargin,\n                height:\n                  isResolution !== isInverted\n                    ? yAxisPosition - position\n                    : position - legendPadding,\n              },\n\n              style: {\n                fill: isResolution\n                  ? COLOR.RESOLUTION_FILL\n                  : isCritical\n                  ? COLOR.CRITICAL_FILL\n                  : COLOR.WARNING_FILL,\n              },\n\n              // This needs to be below the draggable line\n              z: 100,\n            },\n          ]\n        : []),\n    ];\n  };\n\n  getChartPixelForThreshold = (threshold: number | '' | null) => {\n    const chartRef = this.ref?.getEchartsInstance?.();\n    return (\n      threshold !== '' &&\n      chartRef &&\n      chartRef.convertToPixel({yAxisIndex: 0}, `${threshold}`)\n    );\n  };\n\n  clampMaxValue(value: number) {\n    // When we apply top buffer to the crash free percentage (99.7% * 1.03), it\n    // can cross 100%, so we clamp it\n    if (isSessionAggregate(this.props.aggregate) && value > 100) {\n      return 100;\n    }\n\n    return value;\n  }\n\n  render() {\n    const {\n      data,\n      triggers,\n      period,\n      aggregate,\n      comparisonData,\n      comparisonSeriesName,\n      comparisonMarkLines,\n      minutesThresholdToDisplaySeconds,\n      thresholdType,\n    } = this.props;\n\n    const dataWithoutRecentBucket: AreaChartSeries[] = data?.map(\n      ({data: eventData, ...restOfData}) => ({\n        ...restOfData,\n        data: eventData.slice(0, -1),\n      })\n    );\n\n    const comparisonDataWithoutRecentBucket = comparisonData?.map(\n      ({data: eventData, ...restOfData}) => ({\n        ...restOfData,\n        data: eventData.slice(0, -1),\n      })\n    );\n\n    const chartOptions = {\n      tooltip: {\n        // use the main aggregate for all series (main, min, max, avg, comparison)\n        // to format all values similarly\n        valueFormatter: (value: number) =>\n          alertTooltipValueFormatter(value, aggregate, aggregate),\n\n        formatAxisLabel: (\n          value: number,\n          isTimestamp: boolean,\n          utc: boolean,\n          showTimeInTooltip: boolean,\n          addSecondsToTimeFormat: boolean,\n          bucketSize: number | undefined,\n          seriesParamsOrParam: TooltipComponentFormatterCallbackParams\n        ) => {\n          const date = defaultFormatAxisLabel(\n            value,\n            isTimestamp,\n            utc,\n            showTimeInTooltip,\n            addSecondsToTimeFormat,\n            bucketSize\n          );\n\n          const seriesParams = Array.isArray(seriesParamsOrParam)\n            ? seriesParamsOrParam\n            : [seriesParamsOrParam];\n\n          const pointY = (\n            seriesParams.length > 1 ? seriesParams[0].data[1] : undefined\n          ) as number | undefined;\n\n          const comparisonSeries =\n            seriesParams.length > 1\n              ? seriesParams.find(({seriesName: _sn}) => _sn === comparisonSeriesName)\n              : undefined;\n\n          const comparisonPointY = comparisonSeries?.data[1] as number | undefined;\n\n          if (\n            comparisonPointY === undefined ||\n            pointY === undefined ||\n            comparisonPointY === 0\n          ) {\n            return `<span>${date}</span>`;\n          }\n\n          const changePercentage = ((pointY - comparisonPointY) * 100) / comparisonPointY;\n\n          const changeStatus = getChangeStatus(changePercentage, thresholdType, triggers);\n\n          const changeStatusColor =\n            changeStatus === AlertRuleTriggerType.CRITICAL\n              ? theme.red300\n              : changeStatus === AlertRuleTriggerType.WARNING\n              ? theme.yellow300\n              : theme.green300;\n\n          return `<span>${date}<span style=\"color:${changeStatusColor};margin-left:10px;\">\n            ${Math.sign(changePercentage) === 1 ? '+' : '-'}${Math.abs(\n            changePercentage\n          ).toFixed(2)}%</span></span>`;\n        },\n      },\n      yAxis: {\n        min: this.state.yAxisMin ?? undefined,\n        max: this.state.yAxisMax ?? undefined,\n        axisLabel: {\n          formatter: (value: number) =>\n            alertAxisFormatter(value, data[0].seriesName, aggregate),\n        },\n      },\n    };\n\n    return (\n      <AreaChart\n        isGroupedByDate\n        showTimeInTooltip\n        minutesThresholdToDisplaySeconds={minutesThresholdToDisplaySeconds}\n        period={DEFAULT_STATS_PERIOD || period}\n        forwardedRef={this.handleRef}\n        grid={CHART_GRID}\n        {...chartOptions}\n        graphic={Graphic({\n          elements: flatten(\n            triggers.map((trigger: Trigger) => [\n              ...this.getThresholdLine(trigger, 'alertThreshold', false),\n              ...this.getThresholdLine(trigger, 'resolveThreshold', true),\n            ])\n          ),\n        })}\n        colors={CHART_PALETTE[0]}\n        series={[...dataWithoutRecentBucket, ...comparisonMarkLines]}\n        additionalSeries={comparisonDataWithoutRecentBucket.map(\n          ({data: _data, ...otherSeriesProps}) =>\n            LineSeries({\n              name: comparisonSeriesName,\n              data: _data.map(({name, value}) => [name, value]),\n              lineStyle: {color: theme.gray200, type: 'dashed', width: 1},\n              itemStyle: {color: theme.gray200},\n              animation: false,\n              animationThreshold: 1,\n              animationDuration: 0,\n              ...otherSeriesProps,\n            })\n        )}\n        onFinished={() => {\n          // We want to do this whenever the chart finishes re-rendering so that we can update the dimensions of\n          // any graphics related to the triggers (e.g. the threshold areas + boundaries)\n          this.updateDimensions();\n        }}\n      />\n    );\n  }\n}\n","import {Component, Fragment, PureComponent} from 'react';\nimport styled from '@emotion/styled';\n\nimport {fetchOrgMembers} from 'sentry/actionCreators/members';\nimport {Client} from 'sentry/api';\nimport Field from 'sentry/components/forms/field';\nimport {IconDiamond} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Config, Organization, Project} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withConfig from 'sentry/utils/withConfig';\nimport {getThresholdUnits} from 'sentry/views/alerts/rules/metric/constants';\nimport ThresholdControl from 'sentry/views/alerts/rules/metric/triggers/thresholdControl';\n\nimport {isSessionAggregate} from '../../../utils';\nimport {\n  AlertRuleComparisonType,\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  ThresholdControlValue,\n  Trigger,\n  UnsavedMetricRule,\n  UnsavedTrigger,\n} from '../types';\n\ntype Props = {\n  aggregate: UnsavedMetricRule['aggregate'];\n  api: Client;\n  comparisonType: AlertRuleComparisonType;\n  config: Config;\n\n  disabled: boolean;\n  fieldHelp: React.ReactNode;\n  isCritical: boolean;\n  onChange: (trigger: Trigger, changeObj: Partial<Trigger>) => void;\n  onThresholdPeriodChange: (value: number) => void;\n  onThresholdTypeChange: (thresholdType: AlertRuleThresholdType) => void;\n  organization: Organization;\n  placeholder: string;\n  projects: Project[];\n  resolveThreshold: UnsavedMetricRule['resolveThreshold'];\n  thresholdPeriod: UnsavedMetricRule['thresholdPeriod'];\n  thresholdType: UnsavedMetricRule['thresholdType'];\n  trigger: Trigger;\n\n  triggerIndex: number;\n  triggerLabel: React.ReactNode;\n  /**\n   * Map of fieldName -> errorMessage\n   */\n  error?: {[fieldName: string]: string};\n\n  hideControl?: boolean;\n};\n\nclass TriggerFormItem extends PureComponent<Props> {\n  /**\n   * Handler for threshold changes coming from slider or chart.\n   * Needs to sync state with the form.\n   */\n  handleChangeThreshold = (value: ThresholdControlValue) => {\n    const {onChange, trigger} = this.props;\n\n    onChange(\n      {\n        ...trigger,\n        alertThreshold: value.threshold,\n      },\n      {alertThreshold: value.threshold}\n    );\n  };\n\n  render() {\n    const {\n      disabled,\n      error,\n      trigger,\n      isCritical,\n      thresholdType,\n      thresholdPeriod,\n      hideControl,\n      comparisonType,\n      fieldHelp,\n      triggerLabel,\n      placeholder,\n      onThresholdTypeChange,\n      onThresholdPeriodChange,\n    } = this.props;\n\n    return (\n      <StyledField\n        label={triggerLabel}\n        help={fieldHelp}\n        required={isCritical}\n        error={error && error.alertThreshold}\n      >\n        <ThresholdControl\n          disabled={disabled}\n          disableThresholdType={!isCritical}\n          type={trigger.label}\n          thresholdType={thresholdType}\n          thresholdPeriod={thresholdPeriod}\n          hideControl={hideControl}\n          threshold={trigger.alertThreshold}\n          comparisonType={comparisonType}\n          placeholder={placeholder}\n          onChange={this.handleChangeThreshold}\n          onThresholdTypeChange={onThresholdTypeChange}\n          onThresholdPeriodChange={onThresholdPeriodChange}\n        />\n      </StyledField>\n    );\n  }\n}\n\ntype TriggerFormContainerProps = Omit<\n  React.ComponentProps<typeof TriggerFormItem>,\n  | 'onChange'\n  | 'isCritical'\n  | 'error'\n  | 'triggerIndex'\n  | 'trigger'\n  | 'fieldHelp'\n  | 'triggerHelp'\n  | 'triggerLabel'\n  | 'placeholder'\n> & {\n  onChange: (triggerIndex: number, trigger: Trigger, changeObj: Partial<Trigger>) => void;\n  onResolveThresholdChange: (\n    resolveThreshold: UnsavedMetricRule['resolveThreshold']\n  ) => void;\n  triggers: Trigger[];\n  errors?: Map<number, {[fieldName: string]: string}>;\n};\n\nclass TriggerFormContainer extends Component<TriggerFormContainerProps> {\n  componentDidMount() {\n    const {api, organization} = this.props;\n\n    fetchOrgMembers(api, organization.slug);\n  }\n\n  handleChangeTrigger =\n    (triggerIndex: number) => (trigger: Trigger, changeObj: Partial<Trigger>) => {\n      const {onChange} = this.props;\n      onChange(triggerIndex, trigger, changeObj);\n    };\n\n  handleChangeResolveTrigger = (trigger: Trigger, _: Partial<Trigger>) => {\n    const {onResolveThresholdChange} = this.props;\n    onResolveThresholdChange(trigger.alertThreshold);\n  };\n\n  getCriticalThresholdPlaceholder(\n    aggregate: string,\n    comparisonType: AlertRuleComparisonType\n  ) {\n    if (aggregate.includes('failure_rate')) {\n      return '0.05';\n    }\n\n    if (isSessionAggregate(aggregate)) {\n      return '97';\n    }\n\n    if (comparisonType === AlertRuleComparisonType.CHANGE) {\n      return '100';\n    }\n\n    return '300';\n  }\n\n  getIndicator(type: AlertRuleTriggerType) {\n    if (type === AlertRuleTriggerType.CRITICAL) {\n      return <StyledIconDiamond color=\"red300\" size=\"sm\" />;\n    }\n\n    if (type === AlertRuleTriggerType.WARNING) {\n      return <StyledIconDiamond color=\"yellow300\" size=\"sm\" />;\n    }\n\n    return <StyledIconDiamond color=\"green300\" size=\"sm\" />;\n  }\n\n  render() {\n    const {\n      api,\n      config,\n      disabled,\n      errors,\n      organization,\n      triggers,\n      thresholdType,\n      thresholdPeriod,\n      comparisonType,\n      aggregate,\n      resolveThreshold,\n      projects,\n      onThresholdTypeChange,\n      onThresholdPeriodChange,\n    } = this.props;\n\n    const resolveTrigger: UnsavedTrigger = {\n      label: AlertRuleTriggerType.RESOLVE,\n      alertThreshold: resolveThreshold,\n      actions: [],\n    };\n\n    const thresholdUnits = getThresholdUnits(aggregate, comparisonType);\n\n    return (\n      <Fragment>\n        {triggers.map((trigger, index) => {\n          const isCritical = index === 0;\n          // eslint-disable-next-line no-use-before-define\n          return (\n            <TriggerFormItem\n              key={index}\n              api={api}\n              config={config}\n              disabled={disabled}\n              error={errors && errors.get(index)}\n              trigger={trigger}\n              thresholdPeriod={thresholdPeriod}\n              thresholdType={thresholdType}\n              comparisonType={comparisonType}\n              aggregate={aggregate}\n              resolveThreshold={resolveThreshold}\n              organization={organization}\n              projects={projects}\n              triggerIndex={index}\n              isCritical={isCritical}\n              fieldHelp={null}\n              triggerLabel={\n                <TriggerLabel>\n                  {this.getIndicator(\n                    isCritical\n                      ? AlertRuleTriggerType.CRITICAL\n                      : AlertRuleTriggerType.WARNING\n                  )}\n                  {isCritical ? t('Critical') : t('Warning')}\n                </TriggerLabel>\n              }\n              placeholder={\n                isCritical\n                  ? `${this.getCriticalThresholdPlaceholder(aggregate, comparisonType)}${\n                      comparisonType === AlertRuleComparisonType.COUNT\n                        ? thresholdUnits\n                        : ''\n                    }`\n                  : t('None')\n              }\n              onChange={this.handleChangeTrigger(index)}\n              onThresholdTypeChange={onThresholdTypeChange}\n              onThresholdPeriodChange={onThresholdPeriodChange}\n            />\n          );\n        })}\n        <TriggerFormItem\n          api={api}\n          config={config}\n          disabled={disabled}\n          error={errors && errors.get(2)}\n          trigger={resolveTrigger}\n          // Flip rule thresholdType to opposite\n          thresholdPeriod={thresholdPeriod}\n          thresholdType={+!thresholdType}\n          comparisonType={comparisonType}\n          aggregate={aggregate}\n          resolveThreshold={resolveThreshold}\n          organization={organization}\n          projects={projects}\n          triggerIndex={2}\n          isCritical={false}\n          fieldHelp={null}\n          triggerLabel={\n            <TriggerLabel>\n              {this.getIndicator(AlertRuleTriggerType.RESOLVE)}\n              {t('Resolved')}\n            </TriggerLabel>\n          }\n          placeholder={t('Automatic')}\n          onChange={this.handleChangeResolveTrigger}\n          onThresholdTypeChange={onThresholdTypeChange}\n          onThresholdPeriodChange={onThresholdPeriodChange}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst TriggerLabel = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledIconDiamond = styled(IconDiamond)`\n  margin-right: ${space(0.75)};\n`;\n\nconst StyledField = styled(Field)`\n  & > label > div:first-child > span {\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nexport default withConfig(withApi(TriggerFormContainer));\n","import {Component, Fragment} from 'react';\n\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {Organization, Project} from 'sentry/types';\nimport {removeAtArrayIndex} from 'sentry/utils/removeAtArrayIndex';\nimport {replaceAtArrayIndex} from 'sentry/utils/replaceAtArrayIndex';\nimport ActionsPanel from 'sentry/views/alerts/rules/metric/triggers/actionsPanel';\nimport TriggerForm from 'sentry/views/alerts/rules/metric/triggers/form';\n\nimport {\n  Action,\n  AlertRuleComparisonType,\n  AlertRuleThresholdType,\n  MetricActionTemplate,\n  Trigger,\n  UnsavedMetricRule,\n} from '../types';\n\ntype Props = {\n  aggregate: UnsavedMetricRule['aggregate'];\n  availableActions: MetricActionTemplate[] | null;\n  comparisonType: AlertRuleComparisonType;\n  currentProject: string;\n  disabled: boolean;\n  errors: Map<number, {[fieldName: string]: string}>;\n  onChange: (\n    triggers: Trigger[],\n    triggerIndex?: number,\n    changeObj?: Partial<Trigger>\n  ) => void;\n  onResolveThresholdChange: (\n    resolveThreshold: UnsavedMetricRule['resolveThreshold']\n  ) => void;\n  onThresholdPeriodChange: (value: number) => void;\n  onThresholdTypeChange: (thresholdType: AlertRuleThresholdType) => void;\n  organization: Organization;\n  projects: Project[];\n\n  resolveThreshold: UnsavedMetricRule['resolveThreshold'];\n\n  thresholdPeriod: UnsavedMetricRule['thresholdPeriod'];\n  thresholdType: UnsavedMetricRule['thresholdType'];\n  triggers: Trigger[];\n};\n\n/**\n * A list of forms to add, edit, and delete triggers.\n */\nclass Triggers extends Component<Props> {\n  handleDeleteTrigger = (index: number) => {\n    const {triggers, onChange} = this.props;\n    const updatedTriggers = removeAtArrayIndex(triggers, index);\n\n    onChange(updatedTriggers);\n  };\n\n  handleChangeTrigger = (\n    triggerIndex: number,\n    trigger: Trigger,\n    changeObj: Partial<Trigger>\n  ) => {\n    const {triggers, onChange} = this.props;\n    const updatedTriggers = replaceAtArrayIndex(triggers, triggerIndex, trigger);\n    onChange(updatedTriggers, triggerIndex, changeObj);\n  };\n\n  handleAddAction = (triggerIndex: number, action: Action) => {\n    const {onChange, triggers} = this.props;\n    const trigger = triggers[triggerIndex];\n    const actions = [...trigger.actions, action];\n    const updatedTriggers = replaceAtArrayIndex(triggers, triggerIndex, {\n      ...trigger,\n      actions,\n    });\n    onChange(updatedTriggers, triggerIndex, {actions});\n  };\n\n  handleChangeActions = (\n    triggerIndex: number,\n    triggers: Trigger[],\n    actions: Action[]\n  ): void => {\n    const {onChange} = this.props;\n    const trigger = triggers[triggerIndex];\n    const updatedTriggers = replaceAtArrayIndex(triggers, triggerIndex, {\n      ...trigger,\n      actions,\n    });\n    onChange(updatedTriggers, triggerIndex, {actions});\n  };\n\n  render() {\n    const {\n      availableActions,\n      currentProject,\n      errors,\n      organization,\n      projects,\n      triggers,\n      disabled,\n      aggregate,\n      thresholdType,\n      thresholdPeriod,\n      comparisonType,\n      resolveThreshold,\n      onThresholdTypeChange,\n      onResolveThresholdChange,\n      onThresholdPeriodChange,\n    } = this.props;\n\n    // Note we only support 2 triggers max\n    return (\n      <Fragment>\n        <Panel>\n          <PanelBody>\n            <TriggerForm\n              disabled={disabled}\n              errors={errors}\n              organization={organization}\n              projects={projects}\n              triggers={triggers}\n              aggregate={aggregate}\n              resolveThreshold={resolveThreshold}\n              thresholdType={thresholdType}\n              thresholdPeriod={thresholdPeriod}\n              comparisonType={comparisonType}\n              onChange={this.handleChangeTrigger}\n              onThresholdTypeChange={onThresholdTypeChange}\n              onResolveThresholdChange={onResolveThresholdChange}\n              onThresholdPeriodChange={onThresholdPeriodChange}\n            />\n          </PanelBody>\n        </Panel>\n\n        <ActionsPanel\n          disabled={disabled}\n          loading={availableActions === null}\n          error={false}\n          availableActions={availableActions}\n          currentProject={currentProject}\n          organization={organization}\n          projects={projects}\n          triggers={triggers}\n          onChange={this.handleChangeActions}\n          onAdd={this.handleAddAction}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Triggers;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport Input from 'sentry/components/input';\nimport NumberDragControl from 'sentry/components/numberDragControl';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  AlertRuleComparisonType,\n  AlertRuleThresholdType,\n  ThresholdControlValue,\n} from 'sentry/views/alerts/rules/metric/types';\n\ntype Props = ThresholdControlValue & {\n  comparisonType: AlertRuleComparisonType;\n  disableThresholdType: boolean;\n  disabled: boolean;\n  onChange: (value: ThresholdControlValue, e: React.FormEvent) => void;\n  onThresholdPeriodChange: (value: number) => void;\n  onThresholdTypeChange: (thresholdType: AlertRuleThresholdType) => void;\n  placeholder: string;\n  thresholdPeriod: number | null;\n  type: string;\n  hideControl?: boolean;\n};\n\ntype State = {\n  currentValue: string | null;\n};\n\nclass ThresholdControl extends Component<Props, State> {\n  state: State = {\n    currentValue: null,\n  };\n\n  handleThresholdChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = e.target;\n\n    // Only allow number and partial number inputs\n    if (!/^[0-9]*\\.?[0-9]*$/.test(value)) {\n      return;\n    }\n\n    const {onChange, thresholdType} = this.props;\n\n    // Empty input\n    if (value === '') {\n      this.setState({currentValue: null});\n      onChange({thresholdType, threshold: ''}, e);\n      return;\n    }\n\n    // Only call onChange if the new number is valid, and not partially typed\n    // (eg writing out the decimal '5.')\n    if (/\\.+0*$/.test(value)) {\n      this.setState({currentValue: value});\n      return;\n    }\n\n    const numberValue = Number(value);\n\n    this.setState({currentValue: null});\n    onChange({thresholdType, threshold: numberValue}, e);\n  };\n\n  /**\n   * Coerce the currentValue to a number and trigger the onChange.\n   */\n  handleThresholdBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (this.state.currentValue === null) {\n      return;\n    }\n\n    const {onChange, thresholdType} = this.props;\n    onChange({thresholdType, threshold: Number(this.state.currentValue)}, e);\n    this.setState({currentValue: null});\n  };\n\n  handleTypeChange = ({value}) => {\n    const {onThresholdTypeChange} = this.props;\n    onThresholdTypeChange(value);\n  };\n\n  handleDragChange = (delta: number, e: React.MouseEvent) => {\n    const {onChange, thresholdType, threshold} = this.props;\n    const currentValue = threshold || 0;\n    onChange({thresholdType, threshold: currentValue + delta}, e);\n  };\n\n  handleThresholdPeriodChange = ({value}) => {\n    this.props.onThresholdPeriodChange(value);\n  };\n\n  render() {\n    const {currentValue} = this.state;\n    const {\n      thresholdPeriod,\n      thresholdType,\n      comparisonType,\n      hideControl,\n      threshold,\n      placeholder,\n      type,\n      onChange: _,\n      onThresholdTypeChange: __,\n      disabled,\n      disableThresholdType,\n    } = this.props;\n\n    return (\n      <Wrapper>\n        <Container comparisonType={comparisonType}>\n          <SelectContainer>\n            <SelectControl\n              isDisabled={disabled || disableThresholdType}\n              name={`${type}ThresholdType`}\n              value={thresholdType}\n              options={[\n                {\n                  value: AlertRuleThresholdType.BELOW,\n                  label:\n                    comparisonType === AlertRuleComparisonType.COUNT\n                      ? hideControl\n                        ? t('When below Critical or Warning')\n                        : t('Below')\n                      : hideControl\n                      ? t('When lower than Critical or Warning')\n                      : t('Lower than'),\n                },\n                {\n                  value: AlertRuleThresholdType.ABOVE,\n                  label:\n                    comparisonType === AlertRuleComparisonType.COUNT\n                      ? hideControl\n                        ? t('When above Critical or Warning')\n                        : t('Above')\n                      : hideControl\n                      ? t('When higher than Critical or Warning')\n                      : t('Higher than'),\n                },\n              ]}\n              components={disableThresholdType ? {DropdownIndicator: null} : undefined}\n              styles={\n                disableThresholdType\n                  ? {\n                      control: provided => ({\n                        ...provided,\n                        cursor: 'not-allowed',\n                        pointerEvents: 'auto',\n                      }),\n                    }\n                  : undefined\n              }\n              onChange={this.handleTypeChange}\n            />\n          </SelectContainer>\n          {!hideControl && (\n            <ThresholdContainer comparisonType={comparisonType}>\n              <ThresholdInput>\n                <StyledInput\n                  disabled={disabled}\n                  name={`${type}Threshold`}\n                  data-test-id={`${type}-threshold`}\n                  placeholder={placeholder}\n                  value={currentValue ?? threshold ?? ''}\n                  onChange={this.handleThresholdChange}\n                  onBlur={this.handleThresholdBlur}\n                  // Disable lastpass autocomplete\n                  data-lpignore=\"true\"\n                />\n                <DragContainer>\n                  <Tooltip\n                    title={tct(\n                      'Drag to adjust threshold[break]You can hold shift to fine tune',\n                      {\n                        break: <br />,\n                      }\n                    )}\n                  >\n                    <NumberDragControl\n                      step={5}\n                      axis=\"y\"\n                      onChange={this.handleDragChange}\n                    />\n                  </Tooltip>\n                </DragContainer>\n              </ThresholdInput>\n              {comparisonType === AlertRuleComparisonType.CHANGE && (\n                <PercentWrapper>%</PercentWrapper>\n              )}\n            </ThresholdContainer>\n          )}\n        </Container>\n        {!hideControl && (\n          <Feature features={['metric-alert-threshold-period']}>\n            <SelectContainer>\n              <SelectControl\n                isDisabled={disabled}\n                name=\"thresholdPeriod\"\n                value={thresholdPeriod}\n                options={[1, 2, 5, 10, 20].map(value => ({\n                  value,\n                  label: tn('For %s minute', 'For %s minutes', value),\n                }))}\n                onChange={this.handleThresholdPeriodChange}\n              />\n            </SelectContainer>\n          </Feature>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst Container = styled('div')<{comparisonType: AlertRuleComparisonType}>`\n  flex: 2;\n  display: flex;\n  align-items: center;\n  flex-direction: ${p =>\n    p.comparisonType === AlertRuleComparisonType.COUNT ? 'row' : 'row-reverse'};\n  gap: ${space(1)};\n`;\n\nconst SelectContainer = styled('div')`\n  flex: 1;\n`;\n\nconst ThresholdContainer = styled('div')<{comparisonType: AlertRuleComparisonType}>`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledInput = styled(Input)`\n  /* Match the height of the select controls */\n  height: 40px;\n`;\n\nconst ThresholdInput = styled('div')`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst PercentWrapper = styled('div')`\n  margin-left: ${space(1)};\n`;\n\nconst DragContainer = styled('div')`\n  position: absolute;\n  top: 4px;\n  right: 12px;\n`;\n\nexport default ThresholdControl;\n","import {convertDatasetEventTypesToSource} from 'sentry/views/alerts/utils';\n\nimport {DATASET_EVENT_TYPE_FILTERS, DATASOURCE_EVENT_TYPE_FILTERS} from '../constants';\nimport {Dataset, Datasource, EventTypes, MetricRule} from '../types';\n\nexport function extractEventTypeFilterFromRule(metricRule: MetricRule) {\n  const {dataset, eventTypes} = metricRule;\n  return getEventTypeFilter(dataset, eventTypes);\n}\n\nexport function getEventTypeFilter(\n  dataset: Dataset,\n  eventTypes: EventTypes[] | undefined\n) {\n  if (eventTypes) {\n    return DATASOURCE_EVENT_TYPE_FILTERS[\n      convertDatasetEventTypesToSource(dataset, eventTypes) ?? Datasource.ERROR\n    ];\n  }\n  return DATASET_EVENT_TYPE_FILTERS[dataset ?? Dataset.ERRORS];\n}\n","import {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {getMEPAlertsDataset} from 'sentry/views/alerts/wizard/options';\n\nimport {MetricRule} from '../types';\n\nexport function getMetricDatasetQueryExtras({\n  organization,\n  location,\n  dataset,\n  newAlertOrQuery,\n}: {\n  dataset: MetricRule['dataset'];\n  newAlertOrQuery: boolean;\n  organization: Organization;\n  location?: Location;\n}) {\n  const hasMetricDataset =\n    organization.features.includes('metrics-performance-alerts') ||\n    organization.features.includes('mep-rollout-flag');\n  const disableMetricDataset =\n    decodeScalar(location?.query?.disableMetricDataset) === 'true';\n\n  const queryExtras: Record<string, string> =\n    hasMetricDataset && !disableMetricDataset\n      ? {dataset: getMEPAlertsDataset(dataset, newAlertOrQuery)}\n      : {};\n\n  return queryExtras;\n}\n","import {defined} from 'sentry/utils';\n\n/**\n * A threshold has a value if it is not one of the following:\n *\n * '', null, undefined\n *\n *\n */\nexport default function hasThresholdValue(value: number | '' | null): value is number {\n  return defined(value) && value !== '';\n}\n","import {Dataset} from '../types';\n\n/**\n * Currently we can tell if an alert is a crash free alert by the dataset,\n * but this may become more complicated soon\n */\nexport function isCrashFreeAlert(dataset?: Dataset): boolean {\n  return dataset !== undefined && [Dataset.SESSIONS, Dataset.METRICS].includes(dataset);\n}\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport findKey from 'lodash/findKey';\n\nimport FormField from 'sentry/components/forms/formField';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {\n  AggregationKeyWithAlias,\n  AggregationRefinement,\n  explodeFieldString,\n  generateFieldAsString,\n} from 'sentry/utils/discover/fields';\nimport {\n  Dataset,\n  EventTypes,\n  SessionsAggregate,\n} from 'sentry/views/alerts/rules/metric/types';\nimport {\n  AlertType,\n  AlertWizardAlertNames,\n  AlertWizardRuleTemplates,\n  WizardRuleTemplate,\n} from 'sentry/views/alerts/wizard/options';\nimport {QueryField} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValueKind} from 'sentry/views/eventsV2/table/types';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\n\nimport {getFieldOptionConfig} from './metricField';\n\ntype WizardAggregateFunctionValue = {\n  function: [\n    AggregationKeyWithAlias,\n    string,\n    AggregationRefinement,\n    AggregationRefinement\n  ];\n  kind: 'function';\n  alias?: string;\n};\n\ntype WizardAggregateFieldValue = {\n  field: string;\n  kind: 'field';\n  alias?: string;\n};\n\ntype MenuOption = {label: string; value: AlertType};\n\ntype Props = Omit<FormField['props'], 'children'> & {\n  organization: Organization;\n  alertType?: AlertType;\n  /**\n   * Optionally set a width for each column of selector\n   */\n  columnWidth?: number;\n  inFieldLabels?: boolean;\n};\n\nconst menuOptions: {label: string; options: Array<MenuOption>}[] = [\n  {\n    label: t('ERRORS'),\n    options: [\n      {\n        label: AlertWizardAlertNames.num_errors,\n        value: 'num_errors',\n      },\n      {\n        label: AlertWizardAlertNames.users_experiencing_errors,\n        value: 'users_experiencing_errors',\n      },\n    ],\n  },\n\n  {\n    label: t('SESSIONS'),\n    options: [\n      {\n        label: AlertWizardAlertNames.crash_free_sessions,\n        value: 'crash_free_sessions',\n      },\n      {\n        label: AlertWizardAlertNames.crash_free_users,\n        value: 'crash_free_users',\n      },\n    ],\n  },\n\n  {\n    label: t('PERFORMANCE'),\n    options: [\n      {\n        label: AlertWizardAlertNames.throughput,\n        value: 'throughput',\n      },\n      {\n        label: AlertWizardAlertNames.trans_duration,\n        value: 'trans_duration',\n      },\n      {\n        label: AlertWizardAlertNames.apdex,\n        value: 'apdex',\n      },\n      {\n        label: AlertWizardAlertNames.failure_rate,\n        value: 'failure_rate',\n      },\n      {\n        label: AlertWizardAlertNames.lcp,\n        value: 'lcp',\n      },\n      {\n        label: AlertWizardAlertNames.fid,\n        value: 'fid',\n      },\n      {\n        label: AlertWizardAlertNames.cls,\n        value: 'cls',\n      },\n    ],\n  },\n\n  {\n    label: t('CUSTOM'),\n    options: [\n      {\n        label: AlertWizardAlertNames.custom,\n        value: 'custom',\n      },\n    ],\n  },\n];\n\nexport default function WizardField({\n  organization,\n  columnWidth,\n  inFieldLabels,\n  alertType,\n  ...fieldProps\n}: Props) {\n  const matchTemplateAggregate = (\n    template: WizardRuleTemplate,\n    aggregate: string\n  ): boolean => {\n    const templateFieldValue = explodeFieldString(template.aggregate) as\n      | WizardAggregateFieldValue\n      | WizardAggregateFunctionValue;\n    const aggregateFieldValue = explodeFieldString(aggregate) as\n      | WizardAggregateFieldValue\n      | WizardAggregateFunctionValue;\n\n    if (template.aggregate === aggregate) {\n      return true;\n    }\n\n    if (\n      templateFieldValue.kind !== 'function' ||\n      aggregateFieldValue.kind !== 'function'\n    ) {\n      return false;\n    }\n\n    if (\n      templateFieldValue.function?.[0] === 'apdex' &&\n      aggregateFieldValue.function?.[0] === 'apdex'\n    ) {\n      return true;\n    }\n\n    return templateFieldValue.function?.[1] && aggregateFieldValue.function?.[1]\n      ? templateFieldValue.function?.[1] === aggregateFieldValue.function?.[1]\n      : templateFieldValue.function?.[0] === aggregateFieldValue.function?.[0];\n  };\n\n  const matchTemplateDataset = (\n    template: WizardRuleTemplate,\n    dataset: Dataset\n  ): boolean =>\n    template.dataset === dataset ||\n    (organization.features.includes('alert-crash-free-metrics') &&\n      (template.aggregate === SessionsAggregate.CRASH_FREE_SESSIONS ||\n        template.aggregate === SessionsAggregate.CRASH_FREE_USERS) &&\n      dataset === Dataset.METRICS);\n\n  const matchTemplateEventTypes = (\n    template: WizardRuleTemplate,\n    eventTypes: EventTypes[],\n    aggregate: string\n  ): boolean =>\n    aggregate === SessionsAggregate.CRASH_FREE_SESSIONS ||\n    aggregate === SessionsAggregate.CRASH_FREE_USERS ||\n    eventTypes.includes(template.eventTypes);\n\n  return (\n    <FormField {...fieldProps}>\n      {({onChange, model, disabled}) => {\n        const aggregate = model.getValue('aggregate');\n        const dataset: Dataset = model.getValue('dataset');\n        const eventTypes = [...(model.getValue('eventTypes') ?? [])];\n\n        const selectedTemplate: AlertType =\n          alertType === 'custom'\n            ? alertType\n            : (findKey(\n                AlertWizardRuleTemplates,\n                template =>\n                  matchTemplateAggregate(template, aggregate) &&\n                  matchTemplateDataset(template, dataset) &&\n                  matchTemplateEventTypes(template, eventTypes, aggregate)\n              ) as AlertType) || 'num_errors';\n\n        const {fieldOptionsConfig, hidePrimarySelector, hideParameterSelector} =\n          getFieldOptionConfig({\n            dataset: dataset as Dataset,\n            alertType,\n          });\n        const fieldOptions = generateFieldOptions({organization, ...fieldOptionsConfig});\n        const fieldValue = explodeFieldString(aggregate ?? '');\n\n        const fieldKey =\n          fieldValue?.kind === FieldValueKind.FUNCTION\n            ? `function:${fieldValue.function[0]}`\n            : '';\n\n        const selectedField = fieldOptions[fieldKey]?.value;\n        const numParameters: number =\n          selectedField?.kind === FieldValueKind.FUNCTION\n            ? selectedField.meta.parameters.length\n            : 0;\n\n        const gridColumns =\n          1 +\n          numParameters -\n          (hideParameterSelector ? 1 : 0) -\n          (hidePrimarySelector ? 1 : 0);\n\n        return (\n          <Container hideGap={gridColumns < 1}>\n            <SelectControl\n              value={selectedTemplate}\n              options={menuOptions}\n              onChange={(option: MenuOption) => {\n                const template = AlertWizardRuleTemplates[option.value];\n\n                model.setValue('aggregate', template.aggregate);\n                model.setValue('dataset', template.dataset);\n                model.setValue('eventTypes', [template.eventTypes]);\n              }}\n            />\n            <StyledQueryField\n              filterPrimaryOptions={option =>\n                option.value.kind === FieldValueKind.FUNCTION\n              }\n              fieldOptions={fieldOptions}\n              fieldValue={fieldValue}\n              onChange={v => onChange(generateFieldAsString(v), {})}\n              columnWidth={columnWidth}\n              gridColumns={gridColumns}\n              inFieldLabels={inFieldLabels}\n              shouldRenderTag={false}\n              disabled={disabled}\n              hideParameterSelector={hideParameterSelector}\n              hidePrimarySelector={hidePrimarySelector}\n            />\n          </Container>\n        );\n      }}\n    </FormField>\n  );\n}\n\nconst Container = styled('div')<{hideGap: boolean}>`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  gap: ${p => (p.hideGap ? space(0) : space(1))};\n`;\n\nconst StyledQueryField = styled(QueryField)<{gridColumns: number; columnWidth?: number}>`\n  ${p =>\n    p.columnWidth &&\n    css`\n      width: ${p.gridColumns * p.columnWidth}px;\n    `}\n`;\n","export const CHANGE_ALERT_CONDITION_IDS = [\n  'sentry.rules.conditions.event_frequency.EventFrequencyCondition',\n  'sentry.rules.conditions.event_frequency.EventUniqueUserFrequencyCondition',\n  'sentry.rules.conditions.event_frequency.EventFrequencyPercentCondition',\n];\n\nexport const CHANGE_ALERT_PLACEHOLDERS_LABELS = {\n  'sentry.rules.conditions.event_frequency.EventFrequencyCondition':\n    'Number of events in an issue is...',\n  'sentry.rules.conditions.event_frequency.EventUniqueUserFrequencyCondition':\n    'Number of users affected by an issue is...',\n  'sentry.rules.conditions.event_frequency.EventFrequencyPercentCondition':\n    'Percent of sessions affected by an issue is...',\n};\n\nexport const COMPARISON_TYPE_CHOICE_VALUES = {\n  count: 'more than {value} in {interval}',\n  percent: '{value}% higher in {interval} compared to {comparisonInterval} ago',\n};\nexport const COMPARISON_TYPE_CHOICES: [string, string][] = [\n  ['count', COMPARISON_TYPE_CHOICE_VALUES.count],\n  ['percent', COMPARISON_TYPE_CHOICE_VALUES.percent],\n];\nexport const COMPARISON_INTERVAL_CHOICES: [string, string][] = [\n  ['5m', '5 minutes'],\n  ['15m', '15 minutes'],\n  ['1h', 'one hour'],\n  ['1d', 'one day'],\n  ['1w', 'one week'],\n  ['30d', '30 days'],\n];\n","import {\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  Trigger,\n} from 'sentry/views/alerts/rules/metric/types';\n\nexport const getChangeStatus = (\n  value: number,\n  thresholdType: AlertRuleThresholdType,\n  triggers: Trigger[]\n): string => {\n  const criticalTrigger = triggers?.find(\n    trig => trig.label === AlertRuleTriggerType.CRITICAL\n  );\n  const warningTrigger = triggers?.find(\n    trig => trig.label === AlertRuleTriggerType.WARNING\n  );\n  const criticalTriggerAlertThreshold =\n    typeof criticalTrigger?.alertThreshold === 'number'\n      ? criticalTrigger.alertThreshold\n      : undefined;\n  const warningTriggerAlertThreshold =\n    typeof warningTrigger?.alertThreshold === 'number'\n      ? warningTrigger.alertThreshold\n      : undefined;\n\n  // Need to catch the critical threshold cases before warning threshold cases\n  if (\n    thresholdType === AlertRuleThresholdType.ABOVE &&\n    criticalTriggerAlertThreshold &&\n    value >= criticalTriggerAlertThreshold\n  ) {\n    return AlertRuleTriggerType.CRITICAL;\n  }\n  if (\n    thresholdType === AlertRuleThresholdType.ABOVE &&\n    warningTriggerAlertThreshold &&\n    value >= warningTriggerAlertThreshold\n  ) {\n    return AlertRuleTriggerType.WARNING;\n  }\n  // When threshold is below(lower than in comparison alerts) the % diff value is negative\n  // It crosses the threshold if its abs value is greater than threshold\n  // -80% change crosses below 60% threshold -1 * (-80) > 60\n  if (\n    thresholdType === AlertRuleThresholdType.BELOW &&\n    criticalTriggerAlertThreshold &&\n    -1 * value >= criticalTriggerAlertThreshold\n  ) {\n    return AlertRuleTriggerType.CRITICAL;\n  }\n  if (\n    thresholdType === AlertRuleThresholdType.BELOW &&\n    warningTriggerAlertThreshold &&\n    -1 * value >= warningTriggerAlertThreshold\n  ) {\n    return AlertRuleTriggerType.WARNING;\n  }\n\n  return '';\n};\n","import MarkLine from 'sentry/components/charts/components/markLine';\nimport {LineChartSeries} from 'sentry/components/charts/lineChart';\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {MINUTE} from 'sentry/utils/formatters';\nimport theme from 'sentry/utils/theme';\nimport {\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  Trigger,\n} from 'sentry/views/alerts/rules/metric/types';\nimport {getChangeStatus} from 'sentry/views/alerts/utils/getChangeStatus';\n\nexport const getComparisonMarkLines = (\n  timeseriesData: Series[] = [],\n  comparisonTimeseriesData: Series[] = [],\n  timeWindow: number,\n  triggers: Trigger[],\n  thresholdType: AlertRuleThresholdType\n): LineChartSeries[] => {\n  const changeStatuses: {name: number | string; status: string}[] = [];\n\n  if (\n    timeseriesData?.[0]?.data !== undefined &&\n    timeseriesData[0].data.length > 1 &&\n    comparisonTimeseriesData?.[0]?.data !== undefined &&\n    comparisonTimeseriesData[0].data.length > 1\n  ) {\n    const changeData = comparisonTimeseriesData[0].data;\n    const baseData = timeseriesData[0].data;\n\n    if (triggers.some(({alertThreshold}) => typeof alertThreshold === 'number')) {\n      const lastPointLimit =\n        (baseData[changeData.length - 1].name as number) - timeWindow * MINUTE;\n      changeData.forEach(({name, value: comparisonValue}, idx) => {\n        const baseValue = baseData[idx].value;\n        const comparisonPercentage =\n          comparisonValue === 0\n            ? baseValue === 0\n              ? 0\n              : Infinity\n            : ((baseValue - comparisonValue) / comparisonValue) * 100;\n        const status = getChangeStatus(comparisonPercentage, thresholdType, triggers);\n        if (\n          idx === 0 ||\n          idx === changeData.length - 1 ||\n          status !== changeStatuses[changeStatuses.length - 1].status\n        ) {\n          changeStatuses.push({name, status});\n        }\n      });\n\n      return changeStatuses.slice(0, -1).map(({name, status}, idx) => ({\n        seriesName: t('status'),\n        type: 'line',\n        markLine: MarkLine({\n          silent: true,\n          lineStyle: {\n            color:\n              status === AlertRuleTriggerType.CRITICAL\n                ? theme.red300\n                : status === AlertRuleTriggerType.WARNING\n                ? theme.yellow300\n                : theme.green300,\n            type: 'solid',\n            width: 4,\n          },\n          data: [\n            [\n              {coord: [name, 0]},\n              {\n                coord: [\n                  Math.min(changeStatuses[idx + 1].name as number, lastPointLimit),\n                  0,\n                ],\n              },\n            ],\n          ],\n        }),\n        data: [],\n      }));\n    }\n  }\n\n  return [];\n};\n","import {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {\n  Dataset,\n  EventTypes,\n  SessionsAggregate,\n} from 'sentry/views/alerts/rules/metric/types';\n\nexport type AlertType =\n  | 'issues'\n  | 'num_errors'\n  | 'users_experiencing_errors'\n  | 'throughput'\n  | 'trans_duration'\n  | 'apdex'\n  | 'failure_rate'\n  | 'lcp'\n  | 'fid'\n  | 'cls'\n  | 'custom'\n  | 'crash_free_sessions'\n  | 'crash_free_users';\n\nexport enum MEPAlertsQueryType {\n  ERROR = 0,\n  PERFORMANCE = 1,\n  CRASH_RATE = 2,\n}\n\nexport enum MEPAlertsDataset {\n  DISCOVER = 'discover',\n  METRICS = 'metrics',\n  METRICS_ENHANCED = 'metricsEnhanced',\n}\n\nexport type MetricAlertType = Exclude<AlertType, 'issues'>;\n\nexport const DatasetMEPAlertQueryTypes: Record<Dataset, MEPAlertsQueryType> = {\n  [Dataset.ERRORS]: MEPAlertsQueryType.ERROR,\n  [Dataset.TRANSACTIONS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.GENERIC_METRICS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.METRICS]: MEPAlertsQueryType.CRASH_RATE,\n  [Dataset.SESSIONS]: MEPAlertsQueryType.CRASH_RATE,\n};\n\nexport const AlertWizardAlertNames: Record<AlertType, string> = {\n  issues: t('Issues'),\n  num_errors: t('Number of Errors'),\n  users_experiencing_errors: t('Users Experiencing Errors'),\n  throughput: t('Throughput'),\n  trans_duration: t('Transaction Duration'),\n  apdex: t('Apdex'),\n  failure_rate: t('Failure Rate'),\n  lcp: t('Largest Contentful Paint'),\n  fid: t('First Input Delay'),\n  cls: t('Cumulative Layout Shift'),\n  custom: t('Custom Metric'),\n  crash_free_sessions: t('Crash Free Session Rate'),\n  crash_free_users: t('Crash Free User Rate'),\n};\n\ntype AlertWizardCategory = {\n  categoryHeading: string;\n  options: AlertType[];\n};\nexport const getAlertWizardCategories = (org: Organization): AlertWizardCategory[] => [\n  {\n    categoryHeading: t('Errors'),\n    options: ['issues', 'num_errors', 'users_experiencing_errors'],\n  },\n  ...(org.features.includes('crash-rate-alerts')\n    ? [\n        {\n          categoryHeading: t('Sessions'),\n          options: ['crash_free_sessions', 'crash_free_users'] as AlertType[],\n        },\n      ]\n    : []),\n  {\n    categoryHeading: t('Performance'),\n    options: [\n      'throughput',\n      'trans_duration',\n      'apdex',\n      'failure_rate',\n      'lcp',\n      'fid',\n      'cls',\n    ],\n  },\n  {\n    categoryHeading: t('Other'),\n    options: ['custom'],\n  },\n];\n\nexport type WizardRuleTemplate = {\n  aggregate: string;\n  dataset: Dataset;\n  eventTypes: EventTypes;\n};\n\nexport const AlertWizardRuleTemplates: Record<\n  MetricAlertType,\n  Readonly<WizardRuleTemplate>\n> = {\n  num_errors: {\n    aggregate: 'count()',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  users_experiencing_errors: {\n    aggregate: 'count_unique(user)',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  throughput: {\n    aggregate: 'count()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  trans_duration: {\n    aggregate: 'p95(transaction.duration)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  apdex: {\n    aggregate: 'apdex(300)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  failure_rate: {\n    aggregate: 'failure_rate()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  lcp: {\n    aggregate: 'p95(measurements.lcp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  fid: {\n    aggregate: 'p95(measurements.fid)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  cls: {\n    aggregate: 'p95(measurements.cls)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  custom: {\n    aggregate: 'p95(measurements.fp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  crash_free_sessions: {\n    aggregate: SessionsAggregate.CRASH_FREE_SESSIONS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.SESSION,\n  },\n  crash_free_users: {\n    aggregate: SessionsAggregate.CRASH_FREE_USERS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.USER,\n  },\n};\n\nexport const DEFAULT_WIZARD_TEMPLATE = AlertWizardRuleTemplates.num_errors;\n\nexport const hidePrimarySelectorSet = new Set<AlertType>([\n  'num_errors',\n  'users_experiencing_errors',\n  'throughput',\n  'apdex',\n  'failure_rate',\n  'crash_free_sessions',\n  'crash_free_users',\n]);\n\nexport const hideParameterSelectorSet = new Set<AlertType>([\n  'trans_duration',\n  'lcp',\n  'fid',\n  'cls',\n]);\n\nexport function getMEPAlertsDataset(\n  dataset: Dataset,\n  newAlert: boolean\n): MEPAlertsDataset {\n  // Dataset.ERRORS overrides all cases\n  if (dataset === Dataset.ERRORS) {\n    return MEPAlertsDataset.DISCOVER;\n  }\n\n  if (newAlert) {\n    return MEPAlertsDataset.METRICS_ENHANCED;\n  }\n\n  if (dataset === Dataset.GENERIC_METRICS) {\n    return MEPAlertsDataset.METRICS;\n  }\n\n  return MEPAlertsDataset.DISCOVER;\n}\n","import {Dataset, SessionsAggregate} from 'sentry/views/alerts/rules/metric/types';\n\nimport {MetricAlertType, WizardRuleTemplate} from './options';\n\n// A set of unique identifiers to be able to tie aggregate and dataset back to a wizard alert type\nconst alertTypeIdentifiers: Record<Dataset, Partial<Record<MetricAlertType, string>>> = {\n  [Dataset.ERRORS]: {\n    num_errors: 'count()',\n    users_experiencing_errors: 'count_unique(user)',\n  },\n  [Dataset.TRANSACTIONS]: {\n    throughput: 'count()',\n    trans_duration: 'transaction.duration',\n    apdex: 'apdex',\n    failure_rate: 'failure_rate()',\n    lcp: 'measurements.lcp',\n    fid: 'measurements.fid',\n    cls: 'measurements.cls',\n  },\n  [Dataset.GENERIC_METRICS]: {\n    throughput: 'count()',\n    trans_duration: 'transaction.duration',\n    apdex: 'apdex',\n    failure_rate: 'failure_rate()',\n    lcp: 'measurements.lcp',\n    fid: 'measurements.fid',\n    cls: 'measurements.cls',\n  },\n  [Dataset.SESSIONS]: {\n    crash_free_sessions: SessionsAggregate.CRASH_FREE_SESSIONS,\n    crash_free_users: SessionsAggregate.CRASH_FREE_USERS,\n  },\n  [Dataset.METRICS]: {\n    crash_free_sessions: SessionsAggregate.CRASH_FREE_SESSIONS,\n    crash_free_users: SessionsAggregate.CRASH_FREE_USERS,\n  },\n};\n\n/**\n * Given an aggregate and dataset object, will return the corresponding wizard alert type\n * e.g. {aggregate: 'count()', dataset: 'events'} will yield 'num_errors'\n * @param template\n */\nexport function getAlertTypeFromAggregateDataset({\n  aggregate,\n  dataset,\n}: Pick<WizardRuleTemplate, 'aggregate' | 'dataset'>): MetricAlertType {\n  const identifierForDataset = alertTypeIdentifiers[dataset];\n  const matchingAlertTypeEntry = Object.entries(identifierForDataset).find(\n    ([_alertType, identifier]) => identifier && aggregate.includes(identifier)\n  );\n  const alertType =\n    matchingAlertTypeEntry && (matchingAlertTypeEntry[0] as MetricAlertType);\n  return alertType ? alertType : 'custom';\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["Graphic","props","PureComponent","isEqual","omitBy","doEventsRequest","addErrorMessage","LoadingPanel","canIncludePreviousPeriod","getPreviousSeriesName","isMultiSeriesStats","t","defined","stripEquationPrefix","propNamesToIgnore","omitIgnoredProps","_value","key","includes","EventsRequest","reloading","loading","errored","timeseriesData","fetchedWithPrevious","api","confirmedQuery","onError","expired","name","hideError","setState","state","errorMessage","undefined","append","clear","resp","responseJSON","detail","unmounting","includePrevious","dataLoadedCallback","data","period","hasPreviousPeriod","dataMiddleIndex","Math","floor","length","current","slice","previous","componentDidMount","fetchData","componentDidUpdate","prevProps","componentWillUnmount","calculateTotalsPerTimestamp","getName","timestamp","map","i","countArray","value","reduce","acc","count","transformPreviousPeriodData","seriesName","_timestamp","_countArray","stack","transformAggregatedTimeseries","transformTimeseriesData","countsForTimestamp","transformComparisonTimeseriesData","comparisonCount","processData","response","seriesIndex","isMetricsData","totals","includeTransformedData","includeTimeAggregation","timeAggregationSeriesName","currentSeriesNames","previousSeriesNames","comparisonDelta","getData","transformedData","transformedComparisonData","previousData","timeAggregatedData","timeframe","start","end","processedData","comparisonData","allData","originalData","originalPreviousData","render","children","showLoading","topEvents","seriesAdditionalInfo","sortedTimeseriesData","Object","keys","index","seriesData","order","sort","a","b","results","item","previousTimeseriesData","some","transformedTimeseriesData","transformedComparisonTimeseriesData","allTimeseriesData","originalTimeseriesData","timeseriesTotals","originalPreviousTimeseriesData","comparisonTimeseriesData","interval","limit","query","Fragment","useMemo","FeatureBadge","CompactSelect","Truncate","OptionSelector","options","onChange","selected","title","featureType","multiple","rest","mappedOptions","opt","label","String","onValueChange","option","o","isOptionDisabled","disabled","borderless","prefix","StyledFeatureBadge","Component","IconArrow","space","trackAnalyticsEvent","NumberDragControl","isClicked","axis","step","shiftStep","isX","event","button","eventName","eventKey","organization_id","currentTarget","requestPointerLock","document","exitPointerLock","delta","movementX","movementY","deltaOne","ceil","deltaStep","shiftKey","Wrapper","p","isActive","theme","gray500","gray300","backgroundSecondary","debounce","SelectControl","IdBadge","Tooltip","MemberListStore","callIfFunction","withApi","getSearchKeyForUser","user","email","toLowerCase","SelectMembers","inputValue","memberListLoading","isLoaded","listen","id","renderUserBadge","searchKey","actor","type","createMentionableUser","newValue","onInputChange","cb","organization","requestPromise","slug","then","err","usersInProject","getMentionableUsers","usersInProjectById","Promise","resolve","reject","queryMembers","result","members","filter","indexOf","createUnmentionableUser","unlisteners","forEach","getAll","placeholder","styles","filterText","handleLoadOptions","handleInputChange","handleChange","find","provided","svg","color","isSelected","white","DisabledLabel","StyledSelectControl","MailActionTargetType","AssigneeTargetType","MOBILE_VITAL_DETAILS","WEB_VITAL_DETAILS","measurementsFromDetails","details","fromEntries","entries","MOBILE_MEASUREMENTS","WEB_MEASUREMENTS","getMeasurements","Measurements","measurements","measurementType","MobileVital","WebVital","FP","acronym","description","poorThreshold","FCP","LCP","FID","CLS","TTFB","RequestTime","AppStartCold","AppStartWarm","FramesTotal","FramesSlow","FramesFrozen","FramesSlowRate","FramesFrozenRate","StallCount","StallTotalTime","StallLongestTime","StallPercentage","Browser","findLastIndex","replaceRouterParams","recreateRoute","to","routes","params","location","stepBack","paths","path","lastRootIndex","routeIndex","baseRoute","search","hash","fullRoute","join","routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","Breadcrumbs","BuilderBreadCrumbs","alertName","crumbs","preservePageFilters","push","StyledBreadcrumbs","browserHistory","components","classNames","cloneDeep","omit","set","addLoadingMessage","addSuccessMessage","updateOnboardingTask","Access","Alert","Button","Confirm","Field","FieldHelp","Form","FormField","SelectField","TeamSelector","Input","Layout","List","ListItem","LoadingMask","Panel","PanelBody","ALL_ENVIRONMENTS_KEY","IconChevron","tct","OnboardingTaskKey","metric","trackAdvancedAnalyticsEvent","getDisplayName","isActiveSuperuser","withOrganization","withProjects","CHANGE_ALERT_CONDITION_IDS","CHANGE_ALERT_PLACEHOLDERS_LABELS","AsyncView","RuleNodeList","SetupAlertIntegrationButton","FREQUENCY_OPTIONS","ACTION_MATCH_OPTIONS","ACTION_MATCH_OPTIONS_MIGRATED","defaultRule","actionMatch","filterMatch","actions","conditions","filters","frequency","environment","POLLING_MAX_TIME_LIMIT","isSavedAlertRule","rule","hasOwnProperty","IssueRuleEditor","quitTime","Date","now","uuid","project","origRule","status","error","window","clearTimeout","pollingTimeout","setTimeout","pollHandler","detailedError","handleRuleSaveFailure","ruleId","isNew","handleRuleSuccess","router","task","ALERT_RULE","endTransaction","pathname","endpoint","transaction","startTransaction","setTag","action","splitActionId","split","actionName","setData","includeAllArgs","method","duplicateRule","isDuplicateRule","wizardV3","fetchStatus","__all__","replace","field","val","prop","prevState","clonedState","idx","configuration","configs","c","hasChangeAlerts","features","formFields","formField","initial","choices","newRule","getInitialValue","newTypeList","project_id","splice","handleAddRow","ruleIndex","handleDeleteRow","handlePropertyChange","handleResetRow","isRuleNameEmpty","trim","owner","ownerValue","createFromDuplicate","duplicateRuleId","_prevProps","fetchEnvironments","getTitle","ruleName","getDefaultState","userTeamIds","defaultState","environments","projectTeamIds","Set","teams","userTeamId","has","getEndpoints","orgId","endpoints","visibility","onRequestSuccess","stateKey","onChangeTitle","onLoadAllEndpointsSuccess","errors","catch","_err","msg","getConditions","condition","renderLoading","renderBody","renderError","renderRuleName","target","handleValidateRuleName","renderTeamSelect","ownerId","getTeamId","handleOwnerChange","team","isMember","renderIdBadge","consistentWidth","renderEnvironmentSelect","environmentOptions","env","padding","border","hasError","onBlur","handleEnvironmentChange","renderProjectSelect","_selectedProject","projects","hasOpenMembership","myProjects","hasAccess","allProjects","myProjectOptions","myProject","leadingItems","openMembershipProjects","allProject","projectOptions","model","selectedProject","getValue","container","marginBottom","nextSelectedProject","SingleValue","containerProps","renderActionInterval","ownership","handleCancel","handleSubmit","projectId","handleDeleteRule","when","selector","control","minHeight","height","handleChangeConditionProperty","handleAddCondition","handleResetCondition","handleDeleteCondition","if","handleChangeFilterProperty","handleAddFilter","handleResetFilter","handleDeleteFilter","handleChangeActionProperty","handleAddAction","handleResetAction","handleDeleteAction","StyledForm","ConditionsPanel","StyledAlert","StyledListItem","fontSizeExtraLarge","StyledFieldHelp","SetConditionsListItem","Step","StepContainer","StepContent","StepConnector","gray200","StepLead","ChevronContainer","Badge","purple300","borderRadius","fontSizeMedium","EmbeddedWrapper","EmbeddedSelectField","SemiTransparentLoadingMask","SettingsContainer","StyledField","extraMargin","Main","PanelItem","MemberTeamFields","attribute","ruleData","newData","targetIdentifier","optionRecord","memberValue","teamValue","teamSelected","targetType","memberSelected","selectControlStyles","handleChangeActorType","handleChangeActorId","PanelItemGrid","useCallback","useEffect","openModal","ExternalLink","releaseHealth","IconDelete","IconSettings","SentryAppRuleModal","TicketRuleModal","EVENT_FREQUENCY_PERCENT_CONDITION","NumberField","fieldConfig","onPropertyChange","isNaN","Number","e","AssigneeFilterFields","onMemberTeamChange","isInitialized","Unassigned","Team","Member","MailActionFields","IssueOwners","ReleaseMembers","ChoiceField","onReset","initialVal","resetsForm","TextField","RuleNode","node","onDelete","handleDelete","handleMemberTeamChange","getField","fieldProps","renderRow","parts","part","test","match","inputs","conditionallyRenderHelpfulBanner","platform","link","issueOwners","ownershipSettings","fallthrough","updateParentFromTicketRule","formData","fetchedFieldOptionsCache","dynamic_form_fields","updateParentFromSentryAppRule","actionType","sentryAppInstallationUuid","ticketRule","sentryAppRule","deps","ticketType","Boolean","prompt","allowClickClose","InlineInput","InlineNumberInput","InlineSelectControl","Separator","RuleRow","RuleRowContainer","innerBorder","Rule","DeleteButton","MarginlessAlert","fontSizeSmall","COMPARISON_INTERVAL_CHOICES","COMPARISON_TYPE_CHOICE_VALUES","COMPARISON_TYPE_CHOICES","AlertRuleComparisonType","itemIdx","nodes","items","n","changeAlertNode","comparisonType","comparisonInterval","PERCENT","propertyChangeTimeout","onAddRow","onResetRow","onDeleteRow","selectType","enabledNodes","enabled","createSelectOptions","grouped","curr","ticket","change","notifyIntegration","notify","_","values","getNode","obj","RuleNodes","breakpoints","medium","closeModal","SentryAppExternalForm","Header","Body","appName","config","resetValues","onSubmitSuccess","settings","Description","subText","AsyncComponent","PluginIcon","ConfigStore","detailedProject","hasAlertIntegrationInstalled","getConfig","referrerQuery","buttonProps","isSelfHosted","href","React","AbstractExternalIssueForm","IGNORED_FIELDS","integrationDetails","issueConfigFieldsCache","getConfigName","instance","names","getValidAndSavableFieldNames","integration","_success","_error","onSubmitAction","preventDefault","stopPropagation","validateForm","cleanData","getDefaultFormProps","cancelLabel","onCancel","onSubmit","onFormSubmit","submitLabel","fields","default","concat","getCleanedFields","f","linkToDocs","updatesForm","accumulator","getEndPointString","getErrors","cleanFields","fieldChoices","found","Array","isArray","renderForm","BodyText","FieldErrorLabel","errorText","isSavedRule","addOrUpdateRule","isExisting","deleteRule","AggregationKey","AlertRuleThresholdType","AlertRuleTriggerType","Dataset","Datasource","EventTypes","TimeWindow","DATA_SOURCE_TO_SET_AND_EVENT_TYPES","getQueryDatasource","isSessionAggregate","DEFAULT_COUNT_TIME_WINDOW","DEFAULT_CHANGE_TIME_WINDOW","DEFAULT_CHANGE_COMP_DELTA","DEFAULT_AGGREGATE","DEFAULT_TRANSACTION_AGGREGATE","DATASET_EVENT_TYPE_FILTERS","ERRORS","TRANSACTIONS","GENERIC_METRICS","DATASOURCE_EVENT_TYPE_FILTERS","ERROR_DEFAULT","ERROR","DEFAULT","TRANSACTION","errorFieldConfig","aggregations","Count","CountUnique","commonAggregations","Avg","Percentile","P50","P75","P95","P99","P100","allAggregations","FailureRate","Apdex","DuplicateMetricFields","DuplicateTriggerFields","DuplicateActionFields","COMPARISON_DELTA_OPTIONS","getWizardAlertFieldConfig","alertType","dataset","measurementKeys","transactionFieldConfig","createDefaultTrigger","alertThreshold","createDefaultRule","defaultRuleOptions","eventTypes","aggregate","timeWindow","thresholdPeriod","triggers","CRITICAL","WARNING","resolveThreshold","thresholdType","ABOVE","createRuleFromEventView","eventView","parsedQuery","datasetAndEventtypes","source","getYAxis","createRuleFromWizardTemplate","wizardTemplate","BELOW","ONE_HOUR","getThresholdUnits","CHANGE","useState","Link","IconClose","AGGREGATIONS","explodeFieldString","incompatibleYAxis","column","kind","eventTypeMatch","yAxisConfig","invalidFunction","function","aggregation","isNumericParameter","parameters","param","dataType","allowedParameters","invalidParameter","checkMetricAlertCompatiablity","hasProjectError","hasEnvironmentError","hasEventTypeError","hasYAxisError","IncompatibleAlertQuery","isOpen","setIsOpen","incompatibleQuery","totalErrors","eventTypeError","clone","eventTypeTransaction","eventTypeDefault","eventTypeErrorDefault","eventTypeLinks","generateQueryStringObject","errorDefault","yAxis","textColor","StyledUnorderedList","StyledCode","css","generateFieldAsString","hideParameterSelectorSet","hidePrimarySelectorSet","QueryField","FieldValueKind","generateFieldOptions","getFieldOptionConfig","hidePrimarySelector","hideParameterSelector","agg","getFieldOverrides","defaultValue","fieldKeys","fieldOptionsConfig","MetricField","columnWidth","inFieldLabels","fieldOptions","fieldValue","fieldKey","FUNCTION","selectedField","numParameters","meta","parameterColumns","v","StyledQueryField","gridColumns","PresetButton","defaultProps","priority","useTheme","LoadingIndicator","useApi","PRESET_AGGREGATES","PresetSidebar","className","preset","selectedPresetId","ctx","onSelect","PresetSidebarItem","setLoading","iconColor","charts","getColorPalette","makeContext","onClick","finally","LoadingWrapper","overlayBackgroundAlpha","StyledLoadingIndicator","StyledPresetSidebarItemContainer","fontSizeLarge","gray100","IconWrapper","backgroundColor","pick","SearchBar","WizardField","convertDatasetEventTypesToSource","DATA_SOURCE_LABELS","isCrashFreeAlert","TIME_WINDOW_MAP","ONE_MINUTE","FIVE_MINUTES","TEN_MINUTES","FIFTEEN_MINUTES","THIRTY_MINUTES","TWO_HOURS","FOUR_HOURS","ONE_DAY","RuleConditionsForm","timeWindowOptions","parseInt","searchPlaceholder","METRICS","SESSIONS","searchSupportedTags","release","renderEventTypeFilter","dataSourceOptions","formElemBaseStyle","minWidth","flex","formDataset","formEventTypes","mappedValue","optionObj","optionValue","setValue","datasetFromDataSource","renderProjectSelector","disableProjectSelector","renderInterval","onTimeWindowChange","maxWidth","margin","onFilterSearch","allowChangeEventTypes","showMEPAlertBanner","transactionTags","measurementTags","eventOmitTags","hasMetricDataset","thresholdChart","singleValue","base","onKeyDown","initialData","supportedTags","StyledListTitle","ChartPanel","AlertContainer","StyledPanelBody","SearchContainer","StyledSearchBar","FormRow","noMargin","columns","clearIndicators","fetchOrganizationTags","HeaderTitleLegend","CircleIndicator","FormModel","IndicatorStore","logExperiment","RuleNameOwnerForm","ThresholdTypeForm","Triggers","TriggersChart","getEventTypeFilter","hasThresholdValue","AlertRuleType","AlertWizardAlertNames","DatasetMEPAlertQueryTypes","getAlertTypeFromAggregateDataset","isEmpty","str","RuleFormContainer","loadingSlackIndicator","remove","resetPollingState","alertRule","triggerIndex","trigger","isValid","otherErrors","get","isBelow","_project","sessionId","session_id","_data","_onSubmitSuccess","_onSubmitError","_e","validRule","triggerErrors","validateTriggers","validTriggers","from","Map","missingFields","x","sanitizedTriggers","loadingIndicator","addMessage","METRIC","getTransformedData","queryType","referrer","apiErrors","newTriggerErrors","COUNT","goBack","chartQuery","eventTypeFilter","queryWithTypeFilter","setPreset","triggersClone","_eventTypes","availableActions","context","form","setInitialData","validateFieldInTrigger","message","_validatedField","delete","currentErrors","changedTriggerIndex","requiredFields","isValidTrigger","criticalTriggerIndex","findIndex","warningTriggerIndex","criticalTrigger","warningTrigger","isEmptyWarningThreshold","warningThreshold","criticalThreshold","chartProps","newAlertOrQuery","handleMEPAlertDataset","wizardBuilderChart","triggerForm","handleChangeTriggers","handleThresholdTypeChange","handleThresholdPeriodChange","handleResolveThresholdChange","ruleNameOwnerForm","thresholdTypeForm","handleFieldChange","handleComparisonTypeChange","showPresetSidebar","firstTransactionEvent","experiments","MetricAlertPresetExperiment","handleFilterUpdate","Side","large","AlertListItem","ChartHeader","AlertName","AlertInfo","text","family","StyledCircleIndicator","formText","Aggregate","StyledTextField","StyledFormField","Feature","RadioGroup","onComparisonDeltaChange","onComparisonTypeChange","marginLeft","valueContainer","ComparisonContainer","StyledRadioGroup","ActionType","TargetType","ActionSpecificTargetSelector","handleChangeSpecificTargetIdentifier","SPECIFIC","SLACK","inputChannelId","getPlaceholderForType","MSTEAMS","PAGERDUTY","Error","ActionTargetSelector","availableAction","handleChangeTargetIdentifier","TEAM","USER","isTeam","DeleteActionButton","handleClick","Sentry","IconAdd","uniqueId","removeAtArrayIndex","replaceAtArrayIndex","ActionLabel","TargetLabel","getCleanAction","actionConfig","dateCreated","unsavedId","unsavedDateCreated","toISOString","allowedTargetTypes","sentryAppId","integrationId","getActionUniqueKey","getFullActionTitle","integrationName","sentryAppName","ActionsPanel","onAdd","captureException","existingDateCreated","newAction","actionIndex","handleChangeKey","currentProject","levels","flatMap","actionIdx","getTime","actionDisabled","handleChangeActionLevel","bind","handleChangeActionType","allowedType","handleChangeTarget","ActionsPanelWithSpace","ActionSection","PanelItemSelects","PerformActionsListItem","capitalize","maxBy","minBy","fetchTotalCount","SessionsRequest","ChartControls","InlineContainer","SectionHeading","SectionValue","Placeholder","getCrashFreeRateSeries","MINUTES_THRESHOLD_TO_DISPLAY_SECONDS","SESSION_AGGREGATE_TO_FIELD","getComparisonMarkLines","SessionsAggregate","TimePeriod","getMetricDatasetQueryExtras","ThresholdsChart","TIME_PERIOD_MAP","SIX_HOURS","THREE_DAYS","SEVEN_DAYS","FOURTEEN_DAYS","THIRTY_DAYS","MOST_TIME_PERIODS","AVAILABLE_TIME_PERIODS","TIME_WINDOW_TO_SESSION_INTERVAL","SESSION_AGGREGATE_TO_HEADING","CRASH_FREE_SESSIONS","CRASH_FREE_USERS","statsPeriod","totalCount","timePeriod","statsPeriodOptions","availableTimePeriods","comparisonSeriesName","getStatsPeriod","renderChart","isLoading","isReloading","comparisonMarkLines","minutesThresholdToDisplaySeconds","header","toLocaleString","handleStatsPeriodChange","renderComparisonStats","queryExtras","groups","intervals","sessionTimeSeries","TransparentLoadingMask","visible","ChartPlaceholder","flatten","AreaChart","defaultFormatAxisLabel","LineSeries","DEFAULT_STATS_PERIOD","CHART_PALETTE","ALERT_CHART_MIN_MAX_BUFFER","alertAxisFormatter","alertTooltipValueFormatter","shouldScaleAlertChart","getChangeStatus","CHART_GRID","left","right","top","bottom","COLOR","RESOLUTION_FILL","green200","alpha","rgb","string","CRITICAL_FILL","red300","WARNING_FILL","yellow200","width","yAxisMax","yAxisMin","hideThresholdLines","chartRef","ref","getEchartsInstance","thresholds","threshold","updateChartAxis","min","max","minThreshold","maxThreshold","minValue","maxValue","shouldScale","clampMaxValue","forceUpdate","getWidth","getHeight","updateDimensions","handleUpdateChartAxis","isResolution","position","getChartPixelForThreshold","isInverted","yAxisPixelPosition","convertToPixel","yAxisIndex","yAxisPosition","round","yAxisSize","graphAreaWidth","legendPadding","graphAreaMargin","isCritical","LINE_STYLE","stroke","green300","yellow300","lineDash","invisible","draggable","shape","y1","y2","x1","x2","style","silent","z","fill","dataWithoutRecentBucket","eventData","restOfData","comparisonDataWithoutRecentBucket","chartOptions","tooltip","valueFormatter","formatAxisLabel","isTimestamp","utc","showTimeInTooltip","addSecondsToTimeFormat","bucketSize","seriesParamsOrParam","date","seriesParams","pointY","comparisonSeries","_sn","comparisonPointY","changePercentage","changeStatus","changeStatusColor","sign","abs","toFixed","axisLabel","formatter","handleRef","elements","getThresholdLine","otherSeriesProps","lineStyle","itemStyle","animation","animationThreshold","animationDuration","fetchOrgMembers","IconDiamond","withConfig","ThresholdControl","TriggerFormItem","hideControl","fieldHelp","triggerLabel","onThresholdTypeChange","onThresholdPeriodChange","handleChangeThreshold","TriggerFormContainer","changeObj","onResolveThresholdChange","getCriticalThresholdPlaceholder","getIndicator","resolveTrigger","RESOLVE","thresholdUnits","handleChangeTrigger","handleChangeResolveTrigger","TriggerLabel","StyledIconDiamond","TriggerForm","updatedTriggers","handleChangeActions","tn","currentValue","numberValue","__","disableThresholdType","DropdownIndicator","cursor","pointerEvents","handleTypeChange","handleThresholdChange","handleThresholdBlur","break","handleDragChange","Container","SelectContainer","ThresholdContainer","StyledInput","ThresholdInput","PercentWrapper","DragContainer","extractEventTypeFilterFromRule","metricRule","decodeScalar","getMEPAlertsDataset","disableMetricDataset","findKey","AlertWizardRuleTemplates","menuOptions","num_errors","users_experiencing_errors","crash_free_sessions","crash_free_users","throughput","trans_duration","apdex","failure_rate","lcp","fid","cls","custom","matchTemplateAggregate","template","templateFieldValue","aggregateFieldValue","matchTemplateDataset","matchTemplateEventTypes","selectedTemplate","hideGap","percent","trig","criticalTriggerAlertThreshold","warningTriggerAlertThreshold","MarkLine","MINUTE","changeStatuses","changeData","baseData","lastPointLimit","comparisonValue","baseValue","comparisonPercentage","Infinity","markLine","coord","MEPAlertsQueryType","MEPAlertsDataset","PERFORMANCE","CRASH_RATE","issues","getAlertWizardCategories","org","categoryHeading","SESSION","DEFAULT_WIZARD_TEMPLATE","newAlert","DISCOVER","METRICS_ENHANCED","alertTypeIdentifiers","identifierForDataset","matchingAlertTypeEntry","_alertType","identifier","SentryDocumentTitle","renderComponent"],"sourceRoot":""}