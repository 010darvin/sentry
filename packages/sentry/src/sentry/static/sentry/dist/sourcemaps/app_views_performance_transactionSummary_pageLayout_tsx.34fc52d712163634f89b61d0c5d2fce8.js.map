{"version":3,"file":"chunks/app_views_performance_transactionSummary_pageLayout_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/createAlertButton.tsx","webpack:///./app/components/replays/replaysFeatureBadge.tsx","webpack:///./app/utils/performance/vitals/hasMeasurementsQuery.tsx","webpack:///./app/views/alerts/rules/metric/types.tsx","webpack:///./app/views/alerts/wizard/options.tsx","webpack:///./app/views/performance/transactionSummary/header.tsx","webpack:///./app/views/performance/transactionSummary/pageLayout.tsx","webpack:///./app/views/performance/transactionSummary/teamKeyTransactionButton.tsx","webpack:///./app/views/performance/transactionSummary/transactionAnomalies/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionReplays/utils.ts","webpack:///./app/views/performance/transactionSummary/transactionThresholdButton.tsx"],"sourcesContent":["// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {navigateTo} from 'sentry/actionCreators/navigation';\nimport Access from 'sentry/components/acl/access';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport {IconSiren} from 'sentry/icons';\nimport type {SVGIconProps} from 'sentry/icons/svgIcon';\nimport {t, tct} from 'sentry/locale';\nimport type {Organization, Project} from 'sentry/types';\nimport type EventView from 'sentry/utils/discover/eventView';\nimport useApi from 'sentry/utils/useApi';\nimport {\n  AlertType,\n  AlertWizardAlertNames,\n  AlertWizardRuleTemplates,\n  DEFAULT_WIZARD_TEMPLATE,\n} from 'sentry/views/alerts/wizard/options';\n\nexport type CreateAlertFromViewButtonProps = ButtonProps & {\n  /**\n   * Discover query used to create the alert\n   */\n  eventView: EventView;\n  organization: Organization;\n  projects: Project[];\n  alertType?: AlertType;\n  className?: string;\n  /**\n   * Passed in value to override any metrics decision and switch back to transactions dataset.\n   * We currently do a few checks on metrics data on performance pages and this passes the decision onward to alerts.\n   */\n  disableMetricDataset?: boolean;\n  /**\n   * Called when the user is redirected to the alert builder\n   */\n  onClick?: () => void;\n\n  referrer?: string;\n};\n\n/**\n * Provide a button that can create an alert from an event view.\n * Emits incompatible query issues on click\n */\nfunction CreateAlertFromViewButton({\n  projects,\n  eventView,\n  organization,\n  referrer,\n  onClick,\n  alertType,\n  disableMetricDataset,\n  ...buttonProps\n}: CreateAlertFromViewButtonProps) {\n  const project = projects.find(p => p.id === `${eventView.project[0]}`);\n  const queryParams = eventView.generateQueryStringObject();\n  if (queryParams.query?.includes(`project:${project?.slug}`)) {\n    queryParams.query = (queryParams.query as string).replace(\n      `project:${project?.slug}`,\n      ''\n    );\n  }\n\n  const alertTemplate = alertType\n    ? AlertWizardRuleTemplates[alertType]\n    : DEFAULT_WIZARD_TEMPLATE;\n\n  const to = {\n    pathname: `/organizations/${organization.slug}/alerts/new/metric/`,\n    query: {\n      ...queryParams,\n      createFromDiscover: true,\n      disableMetricDataset,\n      referrer,\n      ...alertTemplate,\n      project: project?.slug,\n      aggregate: queryParams.yAxis ?? alertTemplate.aggregate,\n    },\n  };\n\n  const handleClick = () => {\n    onClick?.();\n  };\n\n  return (\n    <CreateAlertButton\n      organization={organization}\n      onClick={handleClick}\n      to={to}\n      aria-label={t('Create Alert')}\n      {...buttonProps}\n    />\n  );\n}\n\ntype CreateAlertButtonProps = {\n  organization: Organization;\n  alertOption?: keyof typeof AlertWizardAlertNames;\n  hideIcon?: boolean;\n  iconProps?: SVGIconProps;\n  /**\n   * Callback when the button is clicked.\n   * This is different from `onClick` which always overrides the default\n   * behavior when the button was clicked.\n   */\n  onEnter?: () => void;\n  projectSlug?: string;\n  referrer?: string;\n  showPermissionGuide?: boolean;\n} & WithRouterProps &\n  ButtonProps;\n\nconst CreateAlertButton = withRouter(\n  ({\n    organization,\n    projectSlug,\n    iconProps,\n    referrer,\n    router,\n    hideIcon,\n    showPermissionGuide,\n    alertOption,\n    onEnter,\n    ...buttonProps\n  }: CreateAlertButtonProps) => {\n    const api = useApi();\n    const createAlertUrl = (providedProj: string) => {\n      const alertsBaseUrl = `/organizations/${organization.slug}/alerts`;\n      const alertsArgs = [\n        `${referrer ? `referrer=${referrer}` : ''}`,\n        `${\n          providedProj && providedProj !== ':projectId' ? `project=${providedProj}` : ''\n        }`,\n        alertOption ? `alert_option=${alertOption}` : '',\n      ].filter(item => item !== '');\n\n      return `${alertsBaseUrl}/wizard/${alertsArgs.length ? '?' : ''}${alertsArgs.join(\n        '&'\n      )}`;\n    };\n\n    function handleClickWithoutProject(event: React.MouseEvent) {\n      event.preventDefault();\n      onEnter?.();\n\n      navigateTo(createAlertUrl(':projectId'), router);\n    }\n\n    async function enableAlertsMemberWrite() {\n      const settingsEndpoint = `/organizations/${organization.slug}/`;\n      addLoadingMessage();\n      try {\n        await api.requestPromise(settingsEndpoint, {\n          method: 'PUT',\n          data: {\n            alertsMemberWrite: true,\n          },\n        });\n        addSuccessMessage(t('Successfully updated organization settings'));\n      } catch (err) {\n        addErrorMessage(t('Unable to update organization settings'));\n      }\n    }\n\n    const permissionTooltipText = tct(\n      'Ask your organization owner or manager to [settingsLink:enable alerts access] for you.',\n      {settingsLink: <Link to={`/settings/${organization.slug}`} />}\n    );\n\n    const renderButton = (hasAccess: boolean) => (\n      <Button\n        disabled={!hasAccess}\n        title={!hasAccess ? permissionTooltipText : undefined}\n        icon={!hideIcon && <IconSiren {...iconProps} />}\n        to={projectSlug ? createAlertUrl(projectSlug) : undefined}\n        tooltipProps={{\n          isHoverable: true,\n          position: 'top',\n          overlayStyle: {\n            maxWidth: '270px',\n          },\n        }}\n        onClick={projectSlug ? onEnter : handleClickWithoutProject}\n        {...buttonProps}\n      >\n        {buttonProps.children ?? t('Create Alert')}\n      </Button>\n    );\n\n    const showGuide = !organization.alertsMemberWrite && !!showPermissionGuide;\n\n    return (\n      <Access organization={organization} access={['alerts:write']}>\n        {({hasAccess}) =>\n          showGuide ? (\n            <Access organization={organization} access={['org:write']}>\n              {({hasAccess: isOrgAdmin}) => (\n                <GuideAnchor\n                  target={isOrgAdmin ? 'alerts_write_owner' : 'alerts_write_member'}\n                  onFinish={isOrgAdmin ? enableAlertsMemberWrite : undefined}\n                >\n                  {renderButton(hasAccess)}\n                </GuideAnchor>\n              )}\n            </Access>\n          ) : (\n            renderButton(hasAccess)\n          )\n        }\n      </Access>\n    );\n  }\n);\n\nexport {CreateAlertFromViewButton};\nexport default CreateAlertButton;\n","import FeatureBadge from 'sentry/components/featureBadge';\n\nfunction ReplaysFeatureBadge(\n  props: Omit<React.ComponentProps<typeof FeatureBadge>, 'type'>\n) {\n  return <FeatureBadge {...props} type=\"alpha\" />;\n}\n\nexport default ReplaysFeatureBadge;\n","import omit from 'lodash/omit';\nimport pick from 'lodash/pick';\n\nimport {escapeDoubleQuotes} from 'sentry/utils';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {escapeFilterValue} from 'sentry/utils/tokenizeSearch';\nimport withApi from 'sentry/utils/withApi';\n\ntype HasMeasurementsProps = {\n  transaction: string;\n  type: 'web' | 'mobile';\n};\n\ntype RequestProps = DiscoverQueryProps & HasMeasurementsProps;\n\ntype HasMeasurements = {measurements: boolean};\n\ntype ChildrenProps = Omit<GenericChildrenProps<HasMeasurementsProps>, 'tableData'> & {\n  hasMeasurements: boolean | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getHasMeasurementsRequestPayload(props: RequestProps) {\n  const {eventView, location, transaction, type} = props;\n  const escaped = escapeDoubleQuotes(escapeFilterValue(transaction));\n  const baseApiPayload = {\n    transaction: `\"${escaped}\"`,\n    type,\n  };\n  const additionalApiPayload = pick(eventView.getEventsAPIPayload(location), [\n    'project',\n    'environment',\n  ]);\n  return Object.assign(baseApiPayload, additionalApiPayload);\n}\n\nfunction HasMeasurementsQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<HasMeasurements, HasMeasurementsProps>\n      route=\"events-has-measurements\"\n      getRequestPayload={getHasMeasurementsRequestPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({\n          hasMeasurements: tableData?.measurements ?? null,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(HasMeasurementsQuery);\n","import {t} from 'sentry/locale';\nimport {MEPAlertsQueryType} from 'sentry/views/alerts/wizard/options';\nimport type {SchemaFormConfig} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\n\nimport type {Incident} from '../../types';\n\nexport enum AlertRuleThresholdType {\n  ABOVE,\n  BELOW,\n}\n\nexport enum AlertRuleTriggerType {\n  CRITICAL = 'critical',\n  WARNING = 'warning',\n  RESOLVE = 'resolve',\n}\n\nexport enum AlertRuleComparisonType {\n  COUNT = 'count',\n  CHANGE = 'change',\n  PERCENT = 'percent',\n}\n\nexport enum Dataset {\n  ERRORS = 'events',\n  TRANSACTIONS = 'transactions',\n  /** Also used for performance alerts **/\n  GENERIC_METRICS = 'generic_metrics',\n  SESSIONS = 'sessions',\n  /** Also used for crash free alerts */\n  METRICS = 'metrics',\n}\n\nexport enum EventTypes {\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n  USER = 'user',\n  SESSION = 'session',\n}\n\nexport enum Datasource {\n  ERROR_DEFAULT = 'error_default',\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n}\n\n/**\n * This is not a real aggregate as crash-free sessions/users can be only calculated on frontend by comparing the count of sessions broken down by status\n * It is here nevertheless to shoehorn sessions dataset into existing alerts codebase\n * This will most likely be revised as we introduce the metrics dataset\n */\nexport enum SessionsAggregate {\n  CRASH_FREE_SESSIONS = 'percentage(sessions_crashed, sessions) AS _crash_rate_alert_aggregate',\n  CRASH_FREE_USERS = 'percentage(users_crashed, users) AS _crash_rate_alert_aggregate',\n}\n\nexport type UnsavedTrigger = {\n  actions: Action[];\n  alertThreshold: number | '' | null;\n  label: AlertRuleTriggerType;\n  // UnsavedTrigger can be a part of an Unsaved Alert Rule that does not have an\n  // id yet\n  alertRuleId?: string;\n};\n\nexport type ThresholdControlValue = {\n  /**\n   * Resolve threshold is optional, so it can be null\n   */\n  threshold: number | '' | null;\n  thresholdType: AlertRuleThresholdType;\n};\n\ntype SavedTrigger = Omit<UnsavedTrigger, 'actions'> & {\n  actions: Action[];\n  dateCreated: string;\n  id: string;\n};\n\nexport type Trigger = Partial<SavedTrigger> & UnsavedTrigger;\n\nexport type UnsavedMetricRule = {\n  aggregate: string;\n  dataset: Dataset;\n  environment: string | null;\n  projects: string[];\n  query: string;\n  resolveThreshold: number | '' | null;\n  thresholdPeriod: number | null;\n  thresholdType: AlertRuleThresholdType;\n  timeWindow: TimeWindow;\n  triggers: Trigger[];\n  comparisonDelta?: number | null;\n  eventTypes?: EventTypes[];\n  owner?: string | null;\n  queryType?: MEPAlertsQueryType | null;\n};\n\nexport interface SavedMetricRule extends UnsavedMetricRule {\n  dateCreated: string;\n  dateModified: string;\n  id: string;\n  name: string;\n  status: number;\n  createdBy?: {email: string; id: number; name: string} | null;\n  errors?: {detail: string}[];\n  /**\n   * Returned with the expand=latestIncident query parameter\n   */\n  latestIncident?: Incident | null;\n  originalAlertRuleId?: number | null;\n}\n\nexport type MetricRule = Partial<SavedMetricRule> & UnsavedMetricRule;\n\nexport enum TimePeriod {\n  SIX_HOURS = '6h',\n  ONE_DAY = '1d',\n  THREE_DAYS = '3d',\n  // Seven days is actually 10080m but we have a max of 10000 events\n  SEVEN_DAYS = '10000m',\n  FOURTEEN_DAYS = '14d',\n  THIRTY_DAYS = '30d',\n}\n\nexport enum TimeWindow {\n  ONE_MINUTE = 1,\n  FIVE_MINUTES = 5,\n  TEN_MINUTES = 10,\n  FIFTEEN_MINUTES = 15,\n  THIRTY_MINUTES = 30,\n  ONE_HOUR = 60,\n  TWO_HOURS = 120,\n  FOUR_HOURS = 240,\n  ONE_DAY = 1440,\n}\n\nexport enum ActionType {\n  EMAIL = 'email',\n  SLACK = 'slack',\n  PAGERDUTY = 'pagerduty',\n  MSTEAMS = 'msteams',\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const ActionLabel = {\n  // \\u200B is needed because Safari disregards autocomplete=\"off\". It's seeing \"Email\" and\n  // opening up the browser autocomplete for email. https://github.com/JedWatson/react-select/issues/3500\n  [ActionType.EMAIL]: t('Emai\\u200Bl'),\n  [ActionType.SLACK]: t('Slack'),\n  [ActionType.PAGERDUTY]: t('Pagerduty'),\n  [ActionType.MSTEAMS]: t('MS Teams'),\n  [ActionType.SENTRY_APP]: t('Notification'),\n};\n\nexport enum TargetType {\n  // A direct reference, like an email address, Slack channel, or PagerDuty service\n  SPECIFIC = 'specific',\n\n  // A specific user. This could be used to grab the user's email address.\n  USER = 'user',\n\n  // A specific team. This could be used to send an email to everyone associated with a team.\n  TEAM = 'team',\n\n  // A Sentry App instead of any of the above.\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const TargetLabel = {\n  [TargetType.USER]: t('Member'),\n  [TargetType.TEAM]: t('Team'),\n};\n\n/**\n * This is an available action template that is associated to a Trigger in a\n * Metric Alert Rule. They are defined by the available-actions API.\n */\nexport type MetricActionTemplate = {\n  /**\n   * See `TargetType`\n   */\n  allowedTargetTypes: TargetType[];\n\n  /**\n   * The integration type e.g. 'email'\n   */\n  type: ActionType;\n\n  /**\n   * Integration id for this `type`, should be passed to backend as `integrationId` when creating an action\n   */\n  integrationId?: number;\n\n  /**\n   * Name of the integration. This is a text field that differentiates integrations from the same provider from each other\n   */\n  integrationName?: string;\n\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options?: Array<{label: string; value: any}>;\n\n  /**\n   * SentryApp id for this `type`, should be passed to backend as `sentryAppId` when creating an action.\n   */\n  sentryAppId?: number;\n\n  sentryAppInstallationUuid?: string;\n  /**\n   * Name of the SentryApp. Like `integrationName`, this differentiates SentryApps from each other.\n   */\n  sentryAppName?: string;\n\n  /**\n   * Sentry App Alert Rule UI Component settings\n   */\n  settings?: SchemaFormConfig;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n\n/**\n * This is the user's configured action\n */\nexport type Action = UnsavedAction & Partial<SavedActionFields>;\n\ntype SavedActionFields = {\n  /**\n   * The id of the alert rule this action belongs to\n   */\n  alertRuleTriggerId: string;\n\n  /**\n   * date created\n   */\n  dateCreated: string;\n\n  /**\n   * A human readable description of the action generated by server\n   */\n  desc: string;\n\n  /**\n   * model id of the action\n   */\n  id: string;\n\n  /**\n   *  Could not fetch details from SentryApp. Show the rule but make it disabled.\n   */\n  disabled?: boolean;\n};\n\ntype UnsavedAction = {\n  /**\n   * An optional Slack channel or user id the user can input to avoid rate limiting issues.\n   */\n  inputChannelId: string | null;\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options: Array<{label: string; value: any}> | null;\n  /**\n   * How to identify the target. Can be email, slack channel, pagerduty service,\n   * user_id, team_id, SentryApp id, etc\n   */\n  targetIdentifier: string | null;\n\n  targetType: TargetType | null;\n\n  type: ActionType;\n  /** Used to maintain order of unsaved actions */\n  unsavedDateCreated: string;\n  unsavedId: string;\n\n  /**\n   * The id of the integration, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  integrationId?: number | null;\n\n  /**\n   * The id of the SentryApp, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  sentryAppId?: number | null;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n","import {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {\n  Dataset,\n  EventTypes,\n  SessionsAggregate,\n} from 'sentry/views/alerts/rules/metric/types';\n\nexport type AlertType =\n  | 'issues'\n  | 'num_errors'\n  | 'users_experiencing_errors'\n  | 'throughput'\n  | 'trans_duration'\n  | 'apdex'\n  | 'failure_rate'\n  | 'lcp'\n  | 'fid'\n  | 'cls'\n  | 'custom'\n  | 'crash_free_sessions'\n  | 'crash_free_users';\n\nexport enum MEPAlertsQueryType {\n  ERROR = 0,\n  PERFORMANCE = 1,\n  CRASH_RATE = 2,\n}\n\nexport enum MEPAlertsDataset {\n  DISCOVER = 'discover',\n  METRICS = 'metrics',\n  METRICS_ENHANCED = 'metricsEnhanced',\n}\n\nexport type MetricAlertType = Exclude<AlertType, 'issues'>;\n\nexport const DatasetMEPAlertQueryTypes: Record<Dataset, MEPAlertsQueryType> = {\n  [Dataset.ERRORS]: MEPAlertsQueryType.ERROR,\n  [Dataset.TRANSACTIONS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.GENERIC_METRICS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.METRICS]: MEPAlertsQueryType.CRASH_RATE,\n  [Dataset.SESSIONS]: MEPAlertsQueryType.CRASH_RATE,\n};\n\nexport const AlertWizardAlertNames: Record<AlertType, string> = {\n  issues: t('Issues'),\n  num_errors: t('Number of Errors'),\n  users_experiencing_errors: t('Users Experiencing Errors'),\n  throughput: t('Throughput'),\n  trans_duration: t('Transaction Duration'),\n  apdex: t('Apdex'),\n  failure_rate: t('Failure Rate'),\n  lcp: t('Largest Contentful Paint'),\n  fid: t('First Input Delay'),\n  cls: t('Cumulative Layout Shift'),\n  custom: t('Custom Metric'),\n  crash_free_sessions: t('Crash Free Session Rate'),\n  crash_free_users: t('Crash Free User Rate'),\n};\n\ntype AlertWizardCategory = {\n  categoryHeading: string;\n  options: AlertType[];\n};\nexport const getAlertWizardCategories = (org: Organization): AlertWizardCategory[] => [\n  {\n    categoryHeading: t('Errors'),\n    options: ['issues', 'num_errors', 'users_experiencing_errors'],\n  },\n  ...(org.features.includes('crash-rate-alerts')\n    ? [\n        {\n          categoryHeading: t('Sessions'),\n          options: ['crash_free_sessions', 'crash_free_users'] as AlertType[],\n        },\n      ]\n    : []),\n  {\n    categoryHeading: t('Performance'),\n    options: [\n      'throughput',\n      'trans_duration',\n      'apdex',\n      'failure_rate',\n      'lcp',\n      'fid',\n      'cls',\n    ],\n  },\n  {\n    categoryHeading: t('Other'),\n    options: ['custom'],\n  },\n];\n\nexport type WizardRuleTemplate = {\n  aggregate: string;\n  dataset: Dataset;\n  eventTypes: EventTypes;\n};\n\nexport const AlertWizardRuleTemplates: Record<\n  MetricAlertType,\n  Readonly<WizardRuleTemplate>\n> = {\n  num_errors: {\n    aggregate: 'count()',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  users_experiencing_errors: {\n    aggregate: 'count_unique(user)',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  throughput: {\n    aggregate: 'count()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  trans_duration: {\n    aggregate: 'p95(transaction.duration)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  apdex: {\n    aggregate: 'apdex(300)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  failure_rate: {\n    aggregate: 'failure_rate()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  lcp: {\n    aggregate: 'p95(measurements.lcp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  fid: {\n    aggregate: 'p95(measurements.fid)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  cls: {\n    aggregate: 'p95(measurements.cls)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  custom: {\n    aggregate: 'p95(measurements.fp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  crash_free_sessions: {\n    aggregate: SessionsAggregate.CRASH_FREE_SESSIONS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.SESSION,\n  },\n  crash_free_users: {\n    aggregate: SessionsAggregate.CRASH_FREE_USERS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.USER,\n  },\n};\n\nexport const DEFAULT_WIZARD_TEMPLATE = AlertWizardRuleTemplates.num_errors;\n\nexport const hidePrimarySelectorSet = new Set<AlertType>([\n  'num_errors',\n  'users_experiencing_errors',\n  'throughput',\n  'apdex',\n  'failure_rate',\n  'crash_free_sessions',\n  'crash_free_users',\n]);\n\nexport const hideParameterSelectorSet = new Set<AlertType>([\n  'trans_duration',\n  'lcp',\n  'fid',\n  'cls',\n]);\n\nexport function getMEPAlertsDataset(\n  dataset: Dataset,\n  newAlert: boolean\n): MEPAlertsDataset {\n  // Dataset.ERRORS overrides all cases\n  if (dataset === Dataset.ERRORS) {\n    return MEPAlertsDataset.DISCOVER;\n  }\n\n  if (newAlert) {\n    return MEPAlertsDataset.METRICS_ENHANCED;\n  }\n\n  if (dataset === Dataset.GENERIC_METRICS) {\n    return MEPAlertsDataset.METRICS;\n  }\n\n  return MEPAlertsDataset.DISCOVER;\n}\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {CreateAlertFromViewButton} from 'sentry/components/createAlertButton';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport IdBadge from 'sentry/components/idBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport ReplaysFeatureBadge from 'sentry/components/replays/replaysFeatureBadge';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {MetricsCardinalityContext} from 'sentry/utils/performance/contexts/metricsCardinality';\nimport HasMeasurementsQuery from 'sentry/utils/performance/vitals/hasMeasurementsQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport Breadcrumb from 'sentry/views/performance/breadcrumb';\n\nimport {getCurrentLandingDisplay, LandingDisplayField} from '../landing/utils';\nimport {getSelectedProjectPlatforms} from '../utils';\n\nimport {anomaliesRouteWithQuery} from './transactionAnomalies/utils';\nimport {eventsRouteWithQuery} from './transactionEvents/utils';\nimport {replaysRouteWithQuery} from './transactionReplays/utils';\nimport {spansRouteWithQuery} from './transactionSpans/utils';\nimport {tagsRouteWithQuery} from './transactionTags/utils';\nimport {vitalsRouteWithQuery} from './transactionVitals/utils';\nimport Tab from './tabs';\nimport TeamKeyTransactionButton from './teamKeyTransactionButton';\nimport TransactionThresholdButton from './transactionThresholdButton';\nimport {TransactionThresholdMetric} from './transactionThresholdModal';\nimport {transactionSummaryRouteWithQuery} from './utils';\n\ntype AnalyticInfo = {\n  eventKey: string;\n  eventName: string;\n};\n\nconst TAB_ANALYTICS: Partial<Record<Tab, AnalyticInfo>> = {\n  [Tab.WebVitals]: {\n    eventKey: 'performance_views.vitals.vitals_tab_clicked',\n    eventName: 'Performance Views: Vitals tab clicked',\n  },\n  [Tab.Tags]: {\n    eventKey: 'performance_views.tags.tags_tab_clicked',\n    eventName: 'Performance Views: Tags tab clicked',\n  },\n  [Tab.Events]: {\n    eventKey: 'performance_views.events.events_tab_clicked',\n    eventName: 'Performance Views: Events tab clicked',\n  },\n  [Tab.Spans]: {\n    eventKey: 'performance_views.spans.spans_tab_clicked',\n    eventName: 'Performance Views: Spans tab clicked',\n  },\n  [Tab.Anomalies]: {\n    eventKey: 'performance_views.anomalies.anomalies_tab_clicked',\n    eventName: 'Performance Views: Anomalies tab clicked',\n  },\n};\n\ntype Props = {\n  currentTab: Tab;\n  eventView: EventView;\n  hasWebVitals: 'maybe' | 'yes' | 'no';\n  location: Location;\n  organization: Organization;\n  projectId: string;\n  projects: Project[];\n  transactionName: string;\n  metricsCardinality?: MetricsCardinalityContext;\n  onChangeThreshold?: (threshold: number, metric: TransactionThresholdMetric) => void;\n};\n\nclass TransactionHeader extends Component<Props> {\n  trackTabClick = (tab: Tab) => () => {\n    const analyticKeys = TAB_ANALYTICS[tab];\n    if (!analyticKeys) {\n      return;\n    }\n\n    const {location, projects} = this.props;\n\n    trackAnalyticsEvent({\n      ...analyticKeys,\n      organization_id: this.props.organization.id,\n      project_platforms: getSelectedProjectPlatforms(location, projects),\n    });\n  };\n\n  handleCreateAlertSuccess = () => {\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.summary.create_alert_clicked',\n      eventName: 'Performance Views: Create alert clicked',\n      organization_id: this.props.organization.id,\n    });\n  };\n\n  renderCreateAlertButton() {\n    const {eventView, organization, projects, metricsCardinality} = this.props;\n\n    if (metricsCardinality?.isLoading) {\n      return <Fragment />;\n    }\n\n    return (\n      <CreateAlertFromViewButton\n        eventView={eventView}\n        organization={organization}\n        projects={projects}\n        onClick={this.handleCreateAlertSuccess}\n        referrer=\"performance\"\n        alertType=\"trans_duration\"\n        aria-label={t('Create Alert')}\n        disableMetricDataset={metricsCardinality?.outcome?.forceTransactionsOnly}\n      />\n    );\n  }\n\n  renderKeyTransactionButton() {\n    const {eventView, organization, transactionName} = this.props;\n\n    return (\n      <TeamKeyTransactionButton\n        transactionName={transactionName}\n        eventView={eventView}\n        organization={organization}\n      />\n    );\n  }\n\n  renderSettingsButton() {\n    const {organization, transactionName, eventView, onChangeThreshold} = this.props;\n\n    return (\n      <GuideAnchor target=\"project_transaction_threshold_override\" position=\"bottom\">\n        <TransactionThresholdButton\n          organization={organization}\n          transactionName={transactionName}\n          eventView={eventView}\n          onChangeThreshold={onChangeThreshold}\n        />\n      </GuideAnchor>\n    );\n  }\n\n  renderWebVitalsTab() {\n    const {\n      organization,\n      eventView,\n      location,\n      projects,\n      transactionName,\n      currentTab,\n      hasWebVitals,\n    } = this.props;\n\n    const vitalsTarget = vitalsRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: transactionName,\n      projectID: decodeScalar(location.query.project),\n      query: location.query,\n    });\n\n    const tab = (\n      <ListLink\n        data-test-id=\"web-vitals-tab\"\n        to={vitalsTarget}\n        isActive={() => currentTab === Tab.WebVitals}\n        onClick={this.trackTabClick(Tab.WebVitals)}\n      >\n        {t('Web Vitals')}\n      </ListLink>\n    );\n\n    switch (hasWebVitals) {\n      case 'maybe':\n        // need to check if the web vitals tab should be shown\n\n        // frontend projects should always show the web vitals tab\n        if (\n          getCurrentLandingDisplay(location, projects, eventView).field ===\n          LandingDisplayField.FRONTEND_PAGELOAD\n        ) {\n          return tab;\n        }\n\n        // if it is not a frontend project, then we check to see if there\n        // are any web vitals associated with the transaction recently\n        return (\n          <HasMeasurementsQuery\n            location={location}\n            orgSlug={organization.slug}\n            eventView={eventView}\n            transaction={transactionName}\n            type=\"web\"\n          >\n            {({hasMeasurements}) => (hasMeasurements ? tab : null)}\n          </HasMeasurementsQuery>\n        );\n      case 'yes':\n        // always show the web vitals tab\n        return tab;\n      case 'no':\n      default:\n        // never show the web vitals tab\n        return null;\n    }\n  }\n\n  render() {\n    const {organization, location, projectId, transactionName, currentTab, projects} =\n      this.props;\n\n    const routeQuery = {\n      orgSlug: organization.slug,\n      transaction: transactionName,\n      projectID: projectId,\n      query: location.query,\n    };\n\n    const summaryTarget = transactionSummaryRouteWithQuery(routeQuery);\n    const tagsTarget = tagsRouteWithQuery(routeQuery);\n    const eventsTarget = eventsRouteWithQuery(routeQuery);\n    const spansTarget = spansRouteWithQuery(routeQuery);\n    const anomaliesTarget = anomaliesRouteWithQuery(routeQuery);\n    const replaysTarget = replaysRouteWithQuery(routeQuery);\n\n    const project = projects.find(p => p.id === projectId);\n\n    return (\n      <Layout.Header>\n        <Layout.HeaderContent>\n          <Breadcrumb\n            organization={organization}\n            location={location}\n            transaction={{\n              project: projectId,\n              name: transactionName,\n            }}\n            tab={currentTab}\n          />\n          <Layout.Title>\n            <TransactionName>\n              {project && (\n                <IdBadge\n                  project={project}\n                  avatarSize={28}\n                  hideName\n                  avatarProps={{hasTooltip: true, tooltip: project.slug}}\n                />\n              )}\n              {transactionName}\n            </TransactionName>\n          </Layout.Title>\n        </Layout.HeaderContent>\n        <Layout.HeaderActions>\n          <ButtonBar gap={1}>\n            <Feature organization={organization} features={['incidents']}>\n              {({hasFeature}) => hasFeature && this.renderCreateAlertButton()}\n            </Feature>\n            {this.renderKeyTransactionButton()}\n            {this.renderSettingsButton()}\n          </ButtonBar>\n        </Layout.HeaderActions>\n        <Fragment>\n          <StyledNavTabs>\n            <ListLink\n              to={summaryTarget}\n              isActive={() => currentTab === Tab.TransactionSummary}\n            >\n              {t('Overview')}\n            </ListLink>\n            <ListLink\n              to={eventsTarget}\n              isActive={() => currentTab === Tab.Events}\n              onClick={this.trackTabClick(Tab.Events)}\n            >\n              {t('All Events')}\n            </ListLink>\n            <ListLink\n              to={tagsTarget}\n              isActive={() => currentTab === Tab.Tags}\n              onClick={this.trackTabClick(Tab.Tags)}\n            >\n              {t('Tags')}\n            </ListLink>\n            <Feature\n              organization={organization}\n              features={['organizations:performance-suspect-spans-view']}\n            >\n              <ListLink\n                data-test-id=\"spans-tab\"\n                to={spansTarget}\n                isActive={() => currentTab === Tab.Spans}\n                onClick={this.trackTabClick(Tab.Spans)}\n              >\n                {t('Spans')}\n              </ListLink>\n            </Feature>\n            <Feature\n              organization={organization}\n              features={['organizations:performance-anomaly-detection-ui']}\n            >\n              <ListLink\n                data-test-id=\"anomalies-tab\"\n                to={anomaliesTarget}\n                isActive={() => currentTab === Tab.Anomalies}\n                onClick={this.trackTabClick(Tab.Anomalies)}\n              >\n                {t('Anomalies')}\n                <FeatureBadge type=\"alpha\" noTooltip />\n              </ListLink>\n            </Feature>\n            {this.renderWebVitalsTab()}\n            <Feature features={['session-replay-ui']} organization={organization}>\n              <ListLink\n                data-test-id=\"replays-tab\"\n                to={replaysTarget}\n                isActive={() => currentTab === Tab.Replays}\n                onClick={this.trackTabClick(Tab.Replays)}\n              >\n                {t('Replays')}\n                <ReplaysFeatureBadge noTooltip />\n              </ListLink>\n            </Feature>\n          </StyledNavTabs>\n        </Fragment>\n      </Layout.Header>\n    );\n  }\n}\n\nconst StyledNavTabs = styled(NavTabs)`\n  margin-bottom: 0;\n  /* Makes sure the tabs are pushed into another row */\n  width: 100%;\n`;\n\nconst TransactionName = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n`;\n\nexport default TransactionHeader;\n","import {useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {useMetricsCardinalityContext} from 'sentry/utils/performance/contexts/metricsCardinality';\nimport {PerformanceEventViewProvider} from 'sentry/utils/performance/contexts/performanceEventViewContext';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {getTransactionName} from '../utils';\n\nimport TransactionHeader from './header';\nimport Tab from './tabs';\nimport {TransactionThresholdMetric} from './transactionThresholdModal';\n\nexport type ChildProps = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projectId: string;\n  projects: Project[];\n  setError: React.Dispatch<React.SetStateAction<string | undefined>>;\n  transactionName: string;\n  // These are used to trigger a reload when the threshold/metric changes.\n  transactionThreshold?: number;\n  transactionThresholdMetric?: TransactionThresholdMetric;\n};\n\ntype Props = {\n  childComponent: (props: ChildProps) => JSX.Element;\n  generateEventView: (props: {location: Location; transactionName: string}) => EventView;\n  getDocumentTitle: (name: string) => string;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  tab: Tab;\n  features?: string[];\n};\n\nfunction PageLayout(props: Props) {\n  const {\n    location,\n    organization,\n    projects,\n    tab,\n    getDocumentTitle,\n    generateEventView,\n    childComponent: ChildComponent,\n    features = [],\n  } = props;\n\n  const projectId = decodeScalar(location.query.project);\n  const transactionName = getTransactionName(location);\n  const [error, setError] = useState<string | undefined>();\n  const metricsCardinality = useMetricsCardinalityContext();\n  const [transactionThreshold, setTransactionThreshold] = useState<number | undefined>();\n  const [transactionThresholdMetric, setTransactionThresholdMetric] = useState<\n    TransactionThresholdMetric | undefined\n  >();\n\n  if (!defined(projectId) || !defined(transactionName)) {\n    redirectToPerformanceHomepage(organization, location);\n    return null;\n  }\n\n  const project = projects.find(p => p.id === projectId);\n\n  const eventView = generateEventView({location, transactionName});\n\n  return (\n    <SentryDocumentTitle\n      title={getDocumentTitle(transactionName)}\n      orgSlug={organization.slug}\n      projectSlug={project?.slug}\n    >\n      <Feature\n        features={['performance-view', ...features]}\n        organization={organization}\n        renderDisabled={NoAccess}\n      >\n        <PerformanceEventViewProvider value={{eventView}}>\n          <PageFiltersContainer\n            shouldForceProject={defined(project)}\n            forceProject={project}\n            specificProjectSlugs={defined(project) ? [project.slug] : []}\n          >\n            <StyledPageContent>\n              <NoProjectMessage organization={organization}>\n                <TransactionHeader\n                  eventView={eventView}\n                  location={location}\n                  organization={organization}\n                  projects={projects}\n                  projectId={projectId}\n                  transactionName={transactionName}\n                  currentTab={tab}\n                  hasWebVitals={tab === Tab.WebVitals ? 'yes' : 'maybe'}\n                  onChangeThreshold={(threshold, metric) => {\n                    setTransactionThreshold(threshold);\n                    setTransactionThresholdMetric(metric);\n                  }}\n                  metricsCardinality={metricsCardinality}\n                />\n                <Layout.Body>\n                  {defined(error) && (\n                    <StyledAlert type=\"error\" showIcon>\n                      {error}\n                    </StyledAlert>\n                  )}\n                  <ChildComponent\n                    location={location}\n                    organization={organization}\n                    projects={projects}\n                    eventView={eventView}\n                    projectId={projectId}\n                    transactionName={transactionName}\n                    setError={setError}\n                    transactionThreshold={transactionThreshold}\n                    transactionThresholdMetric={transactionThresholdMetric}\n                  />\n                </Layout.Body>\n              </NoProjectMessage>\n            </StyledPageContent>\n          </PageFiltersContainer>\n        </PerformanceEventViewProvider>\n      </Feature>\n    </SentryDocumentTitle>\n  );\n}\n\nexport function NoAccess() {\n  return <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>;\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nconst StyledAlert = styled(Alert)`\n  grid-column: 1/3;\n  margin: 0;\n`;\n\nexport function redirectToPerformanceHomepage(\n  organization: Organization,\n  location: Location\n) {\n  // If there is no transaction name, redirect to the Performance landing page\n  browserHistory.replace({\n    pathname: `/organizations/${organization.slug}/performance/`,\n    query: {\n      ...location.query,\n    },\n  });\n}\n\nexport default PageLayout;\n","import {Component} from 'react';\n\nimport Button from 'sentry/components/button';\nimport TeamKeyTransactionComponent, {\n  TitleProps,\n} from 'sentry/components/performance/teamKeyTransaction';\nimport * as TeamKeyTransactionManager from 'sentry/components/performance/teamKeyTransactionsManager';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconStar} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport EventView from 'sentry/utils/discover/eventView';\nimport useTeams from 'sentry/utils/useTeams';\nimport withProjects from 'sentry/utils/withProjects';\n\n/**\n * This can't be a function component because `TeamKeyTransaction` uses\n * `DropdownControl` which in turn uses passes a ref to this component.\n */\nclass TitleButton extends Component<TitleProps> {\n  render() {\n    const {isOpen, keyedTeams, ...props} = this.props;\n    const keyedTeamsCount = keyedTeams?.length ?? 0;\n    const button = (\n      <Button\n        {...props}\n        icon={keyedTeamsCount ? <IconStar color=\"yellow300\" isSolid /> : <IconStar />}\n      >\n        {keyedTeamsCount\n          ? tn('Starred for Team', 'Starred for Teams', keyedTeamsCount)\n          : t('Star for Team')}\n      </Button>\n    );\n\n    if (!isOpen && keyedTeams?.length) {\n      const teamSlugs = keyedTeams.map(({slug}) => slug).join(', ');\n      return <Tooltip title={teamSlugs}>{button}</Tooltip>;\n    }\n    return button;\n  }\n}\n\ntype BaseProps = {\n  organization: Organization;\n  transactionName: string;\n};\n\ntype Props = BaseProps &\n  TeamKeyTransactionManager.TeamKeyTransactionManagerChildrenProps & {\n    project: Project;\n  };\n\nfunction TeamKeyTransactionButton({\n  counts,\n  getKeyedTeams,\n  project,\n  transactionName,\n  ...props\n}: Props) {\n  const keyedTeams = getKeyedTeams(project.id, transactionName);\n  return (\n    <TeamKeyTransactionComponent\n      counts={counts}\n      keyedTeams={keyedTeams}\n      title={TitleButton}\n      project={project}\n      transactionName={transactionName}\n      {...props}\n    />\n  );\n}\n\ntype WrapperProps = BaseProps & {\n  eventView: EventView;\n  projects: Project[];\n};\n\nfunction TeamKeyTransactionButtonWrapper({\n  eventView,\n  organization,\n  projects,\n  ...props\n}: WrapperProps) {\n  const {teams, initiallyLoaded} = useTeams({provideUserTeams: true});\n\n  if (eventView.project.length !== 1) {\n    return <TitleButton isOpen={false} disabled keyedTeams={null} />;\n  }\n\n  const projectId = String(eventView.project[0]);\n  const project = projects.find(proj => proj.id === projectId);\n  if (!defined(project)) {\n    return <TitleButton isOpen={false} disabled keyedTeams={null} />;\n  }\n\n  return (\n    <TeamKeyTransactionManager.Provider\n      organization={organization}\n      teams={teams}\n      selectedTeams={['myteams']}\n      selectedProjects={[String(projectId)]}\n    >\n      <TeamKeyTransactionManager.Consumer>\n        {({isLoading, ...results}) => (\n          <TeamKeyTransactionButton\n            organization={organization}\n            project={project}\n            isLoading={isLoading || !initiallyLoaded}\n            {...props}\n            {...results}\n          />\n        )}\n      </TeamKeyTransactionManager.Consumer>\n    </TeamKeyTransactionManager.Provider>\n  );\n}\n\nexport default withProjects(TeamKeyTransactionButtonWrapper);\n","import {Location, Query} from 'history';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport {AnomalyConfidence} from 'sentry/utils/performance/anomalies/anomaliesQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {Theme} from 'sentry/utils/theme';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nexport function generateAnomaliesRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/anomalies/`;\n}\n\nexport const ANOMALY_FLAG = 'performance-anomaly-detection-ui';\n\nexport function anomaliesRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateAnomaliesRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport function anomalyToColor(anomalyConfidence: AnomalyConfidence, theme: Theme) {\n  // Map inside function so it's reactive to theme.\n  const map: Record<AnomalyConfidence, string> = {\n    high: theme.red300,\n    low: theme.yellow300,\n  };\n  return map[anomalyConfidence];\n}\n\nexport function generateAnomaliesEventView({\n  location,\n  transactionName,\n}: {\n  location: Location;\n  transactionName: string;\n}): EventView {\n  const query = decodeScalar(location.query.query, '');\n  const conditions = new MutableSearch(query);\n\n  conditions.setFilterValues('transaction', [transactionName]);\n\n  const eventView = EventView.fromNewQueryWithLocation(\n    {\n      id: undefined,\n      version: 2,\n      name: transactionName,\n      fields: ['tpm()'], // TODO(k-fish): Modify depending on api url later.\n      query: conditions.formatString(),\n      projects: [],\n    },\n    location\n  );\n\n  return eventView;\n}\n","import {Query} from 'history';\n\nexport function replaysRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = `/organizations/${orgSlug}/performance/summary/replays/`;\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n","import {Component} from 'react';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {IconSettings} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport EventView from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport TransactionThresholdModal, {\n  modalCss,\n  TransactionThresholdMetric,\n} from './transactionThresholdModal';\n\ntype Props = {\n  api: Client;\n  eventView: EventView;\n  organization: Organization;\n  projects: Project[];\n  transactionName: string;\n  onChangeThreshold?: (threshold: number, metric: TransactionThresholdMetric) => void;\n};\n\ntype State = {\n  loadingThreshold: boolean;\n  transactionThreshold: number | undefined;\n  transactionThresholdMetric: TransactionThresholdMetric | undefined;\n};\n\nclass TransactionThresholdButton extends Component<Props, State> {\n  state: State = {\n    transactionThreshold: undefined,\n    transactionThresholdMetric: undefined,\n    loadingThreshold: false,\n  };\n\n  componentDidMount() {\n    this.fetchTransactionThreshold();\n  }\n\n  getProject() {\n    const {projects, eventView} = this.props;\n    if (!defined(eventView)) {\n      return undefined;\n    }\n\n    const projectId = String(eventView.project[0]);\n    const project = projects.find(proj => proj.id === projectId);\n\n    return project;\n  }\n\n  fetchTransactionThreshold = () => {\n    const {api, organization, transactionName} = this.props;\n\n    const project = this.getProject();\n    if (!defined(project)) {\n      return;\n    }\n    const transactionThresholdUrl = `/organizations/${organization.slug}/project-transaction-threshold-override/`;\n\n    this.setState({loadingThreshold: true});\n\n    api\n      .requestPromise(transactionThresholdUrl, {\n        method: 'GET',\n        includeAllArgs: true,\n        query: {\n          project: project.id,\n          transaction: transactionName,\n        },\n      })\n      .then(([data]) => {\n        this.setState({\n          loadingThreshold: false,\n          transactionThreshold: data.threshold,\n          transactionThresholdMetric: data.metric,\n        });\n      })\n      .catch(() => {\n        const projectThresholdUrl = `/projects/${organization.slug}/${project.slug}/transaction-threshold/configure/`;\n        this.props.api\n          .requestPromise(projectThresholdUrl, {\n            method: 'GET',\n            includeAllArgs: true,\n            query: {\n              project: project.id,\n            },\n          })\n          .then(([data]) => {\n            this.setState({\n              loadingThreshold: false,\n              transactionThreshold: data.threshold,\n              transactionThresholdMetric: data.metric,\n            });\n          })\n          .catch(err => {\n            this.setState({loadingThreshold: false});\n            const errorMessage = err.responseJSON?.threshold ?? null;\n            addErrorMessage(errorMessage);\n          });\n      });\n  };\n\n  onChangeThreshold(threshold: number, metric: TransactionThresholdMetric) {\n    const {onChangeThreshold} = this.props;\n    this.setState({\n      transactionThreshold: threshold,\n      transactionThresholdMetric: metric,\n    });\n\n    if (defined(onChangeThreshold)) {\n      onChangeThreshold(threshold, metric);\n    }\n  }\n\n  openModal() {\n    const {organization, transactionName, eventView} = this.props;\n\n    const {transactionThreshold, transactionThresholdMetric} = this.state;\n\n    openModal(\n      modalProps => (\n        <TransactionThresholdModal\n          {...modalProps}\n          organization={organization}\n          transactionName={transactionName}\n          eventView={eventView}\n          transactionThreshold={transactionThreshold}\n          transactionThresholdMetric={transactionThresholdMetric}\n          onApply={(threshold, metric) => this.onChangeThreshold(threshold, metric)}\n        />\n      ),\n      {modalCss, backdrop: 'static'}\n    );\n  }\n\n  render() {\n    const {loadingThreshold} = this.state;\n    return (\n      <Button\n        onClick={() => this.openModal()}\n        icon={<IconSettings />}\n        disabled={loadingThreshold}\n        aria-label={t('Settings')}\n        data-test-id=\"set-transaction-threshold\"\n      />\n    );\n  }\n}\n\nexport default withApi(withProjects(TransactionThresholdButton));\n"],"names":["withRouter","addErrorMessage","addLoadingMessage","addSuccessMessage","navigateTo","Access","GuideAnchor","Button","Link","IconSiren","t","tct","useApi","AlertWizardRuleTemplates","DEFAULT_WIZARD_TEMPLATE","CreateAlertFromViewButton","projects","eventView","organization","referrer","onClick","alertType","disableMetricDataset","buttonProps","project","find","p","id","queryParams","generateQueryStringObject","query","includes","slug","replace","alertTemplate","to","pathname","createFromDiscover","aggregate","yAxis","handleClick","CreateAlertButton","projectSlug","iconProps","router","hideIcon","showPermissionGuide","alertOption","onEnter","api","createAlertUrl","providedProj","alertsBaseUrl","alertsArgs","filter","item","length","join","handleClickWithoutProject","event","preventDefault","enableAlertsMemberWrite","settingsEndpoint","requestPromise","method","data","alertsMemberWrite","err","permissionTooltipText","settingsLink","renderButton","hasAccess","undefined","isHoverable","position","overlayStyle","maxWidth","children","showGuide","isOrgAdmin","FeatureBadge","ReplaysFeatureBadge","props","omit","pick","escapeDoubleQuotes","GenericDiscoverQuery","escapeFilterValue","withApi","getHasMeasurementsRequestPayload","location","transaction","type","escaped","baseApiPayload","additionalApiPayload","getEventsAPIPayload","Object","assign","HasMeasurementsQuery","tableData","rest","hasMeasurements","measurements","AlertRuleThresholdType","AlertRuleTriggerType","AlertRuleComparisonType","Dataset","EventTypes","Datasource","SessionsAggregate","TimePeriod","TimeWindow","ActionType","ActionLabel","EMAIL","SLACK","PAGERDUTY","MSTEAMS","SENTRY_APP","TargetType","TargetLabel","USER","TEAM","MEPAlertsQueryType","MEPAlertsDataset","DatasetMEPAlertQueryTypes","ERRORS","ERROR","TRANSACTIONS","PERFORMANCE","GENERIC_METRICS","METRICS","CRASH_RATE","SESSIONS","AlertWizardAlertNames","issues","num_errors","users_experiencing_errors","throughput","trans_duration","apdex","failure_rate","lcp","fid","cls","custom","crash_free_sessions","crash_free_users","getAlertWizardCategories","org","categoryHeading","options","features","dataset","eventTypes","TRANSACTION","CRASH_FREE_SESSIONS","SESSION","CRASH_FREE_USERS","hidePrimarySelectorSet","Set","hideParameterSelectorSet","getMEPAlertsDataset","newAlert","DISCOVER","METRICS_ENHANCED","Component","Fragment","Feature","ButtonBar","IdBadge","Layout","ListLink","NavTabs","space","trackAnalyticsEvent","decodeScalar","Breadcrumb","getCurrentLandingDisplay","LandingDisplayField","getSelectedProjectPlatforms","anomaliesRouteWithQuery","eventsRouteWithQuery","replaysRouteWithQuery","spansRouteWithQuery","tagsRouteWithQuery","vitalsRouteWithQuery","Tab","TeamKeyTransactionButton","TransactionThresholdButton","transactionSummaryRouteWithQuery","TAB_ANALYTICS","WebVitals","eventKey","eventName","Tags","Events","Spans","Anomalies","TransactionHeader","tab","analyticKeys","organization_id","project_platforms","renderCreateAlertButton","metricsCardinality","isLoading","handleCreateAlertSuccess","outcome","forceTransactionsOnly","renderKeyTransactionButton","transactionName","renderSettingsButton","onChangeThreshold","renderWebVitalsTab","currentTab","hasWebVitals","vitalsTarget","orgSlug","projectID","trackTabClick","field","FRONTEND_PAGELOAD","render","projectId","routeQuery","summaryTarget","tagsTarget","eventsTarget","spansTarget","anomaliesTarget","replaysTarget","name","hasTooltip","tooltip","hasFeature","TransactionSummary","Replays","StyledNavTabs","TransactionName","useState","browserHistory","Alert","NoProjectMessage","PageFiltersContainer","SentryDocumentTitle","PageContent","defined","useMetricsCardinalityContext","PerformanceEventViewProvider","getTransactionName","PageLayout","getDocumentTitle","generateEventView","childComponent","ChildComponent","error","setError","transactionThreshold","setTransactionThreshold","transactionThresholdMetric","setTransactionThresholdMetric","redirectToPerformanceHomepage","NoAccess","threshold","metric","StyledPageContent","StyledAlert","TeamKeyTransactionComponent","TeamKeyTransactionManager","Tooltip","IconStar","tn","useTeams","withProjects","TitleButton","isOpen","keyedTeams","keyedTeamsCount","button","teamSlugs","map","counts","getKeyedTeams","TeamKeyTransactionButtonWrapper","teams","initiallyLoaded","provideUserTeams","String","proj","results","EventView","MutableSearch","generateAnomaliesRoute","ANOMALY_FLAG","environment","statsPeriod","start","end","anomalyToColor","anomalyConfidence","theme","high","red300","low","yellow300","generateAnomaliesEventView","conditions","setFilterValues","fromNewQueryWithLocation","version","fields","formatString","openModal","IconSettings","TransactionThresholdModal","modalCss","loadingThreshold","getProject","transactionThresholdUrl","setState","includeAllArgs","then","catch","projectThresholdUrl","errorMessage","responseJSON","componentDidMount","fetchTransactionThreshold","state","modalProps","backdrop"],"sourceRoot":""}