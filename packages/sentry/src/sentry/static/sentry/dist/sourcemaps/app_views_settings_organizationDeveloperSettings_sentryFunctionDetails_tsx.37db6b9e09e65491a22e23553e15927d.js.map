{"version":3,"file":"chunks/app_views_settings_organizationDeveloperSettings_sentryFunctionDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;;;;AAEA,MAAMoB,uBAAN,SAAsCP,sEAAtC,CAAgD;EAC9CQ,kBAAkB,GAAG;IACnB,MAAMC,IAAI,GAAG,MAAMD,kBAAN,EAAb;IAEA,MAAME,MAAgB,GAAG,EAAzB;;IACA,IAAID,IAAI,CAACE,OAAT,EAAkB;MAChBD,MAAM,CAACE,IAAP,CAAY,OAAZ;IACD;;IACD,IAAIH,IAAI,CAACI,OAAT,EAAkB;MAChBH,MAAM,CAACE,IAAP,CAAY,OAAZ;IACD;;IACD,IAAIH,IAAI,CAACK,SAAT,EAAoB;MAClBJ,MAAM,CAACE,IAAP,CAAY,SAAZ;IACD;;IACD,OAAOH,IAAI,CAACE,OAAZ;IACA,OAAOF,IAAI,CAACI,OAAZ;IACA,OAAOJ,IAAI,CAACK,SAAZ;IACAL,IAAI,CAACC,MAAL,GAAcA,MAAd;IAEA,MAAMK,YAA2B,GAAG,EAApC;IACA,IAAIC,CAAC,GAAG,CAAR;;IACA,OAAOP,IAAI,CAAE,qBAAoBO,CAAE,EAAxB,CAAX,EAAuC;MACrC,IAAIP,IAAI,CAAE,sBAAqBO,CAAE,EAAzB,CAAR,EAAqC;QACnCD,YAAY,CAACH,IAAb,CAAkB;UAChBK,IAAI,EAAER,IAAI,CAAE,qBAAoBO,CAAE,EAAxB,CADM;UAEhBE,KAAK,EAAET,IAAI,CAAE,sBAAqBO,CAAE,EAAzB;QAFK,CAAlB;MAID;;MACD,OAAOP,IAAI,CAAE,qBAAoBO,CAAE,EAAxB,CAAX;MACA,OAAOP,IAAI,CAAE,sBAAqBO,CAAE,EAAzB,CAAX;MACAA,CAAC;IACF;;IACDP,IAAI,CAACM,YAAL,GAAoBA,YAApB;IAEA,MAAM,EAAC,GAAGI;IAAJ,IAAcV,IAApB;IACA,OAAOU,MAAP;EACD;;AApC6C;;AA+ChD,MAAMC,UAAmB,GAAG,CAC1B;EACEH,IAAI,EAAE,MADR;EAEEI,IAAI,EAAE,QAFR;EAGEC,QAAQ,EAAE,IAHZ;EAIEC,WAAW,EAAE,yBAJf;EAKEC,KAAK,EAAE,MALT;EAMEC,IAAI,EAAE;AANR,CAD0B,EAS1B;EACER,IAAI,EAAE,QADR;EAEEI,IAAI,EAAE,QAFR;EAGEE,WAAW,EAAE,oBAHf;EAIEC,KAAK,EAAE,QAJT;EAKEC,IAAI,EAAE;AALR,CAT0B,EAgB1B;EACER,IAAI,EAAE,UADR;EAEEI,IAAI,EAAE,QAFR;EAGEE,WAAW,EAAE,iDAHf;EAIEC,KAAK,EAAE,UAJT;EAKEC,IAAI,EAAE;AALR,CAhB0B,CAA5B;;AAyBA,SAASC,qBAAT,CAA+BC,KAA/B,EAA6C;EAC3C,MAAMC,IAAI,GAAGvC,6CAAM,CAAC,IAAIkB,uBAAJ,EAAD,CAAnB;EACA,MAAM;IAACsB,KAAD;IAAQC;EAAR,IAAwBH,KAAK,CAACI,MAApC;EACA,MAAM;IAACC;EAAD,IAAmBL,KAAzB;EACA,MAAMM,MAAM,GAAGH,YAAY,GAAG,KAAH,GAAW,MAAtC;EACA,IAAII,QAAQ,GAAI,kBAAiBL,KAAM,aAAvC;;EACA,IAAIC,YAAJ,EAAkB;IAChBI,QAAQ,IAAK,GAAEJ,YAAa,GAA5B;EACD;;EACD,MAAMK,WAAW,GAAGH,cAAc,GAC9BA,cAAc,CAACI,IADe,GAE7B;AACP;AACA;AACA;AACA;AACA,KAPE;EASA,MAAM,CAAC1B,MAAD,EAAS2B,SAAT,IAAsB/C,+CAAQ,CAAC,CAAA0C,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEtB,MAAhB,KAA0B,EAA3B,CAApC;EAEAtB,gDAAS,CAAC,MAAM;IACdwC,IAAI,CAACU,OAAL,CAAaC,QAAb,CAAsB,SAAtB,EAAiC7B,MAAM,CAAC8B,QAAP,CAAgB,OAAhB,CAAjC;IACAZ,IAAI,CAACU,OAAL,CAAaC,QAAb,CAAsB,SAAtB,EAAiC7B,MAAM,CAAC8B,QAAP,CAAgB,OAAhB,CAAjC;IACAZ,IAAI,CAACU,OAAL,CAAaC,QAAb,CAAsB,WAAtB,EAAmC7B,MAAM,CAAC8B,QAAP,CAAgB,SAAhB,CAAnC;EACD,CAJQ,EAIN,CAAC9B,MAAD,CAJM,CAAT;EAMA,MAAM,CAACK,YAAD,EAAe0B,eAAf,IAAkCnD,+CAAQ,CAC9C,CAAA0C,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEU,aAAhB,KAAiC,CAAC;IAACzB,IAAI,EAAE,EAAP;IAAWC,KAAK,EAAE;EAAlB,CAAD,CADa,CAAhD;;EAIA,MAAMyB,iBAAiB,GAAGC,GAAG,IAAI;IAC/B,IAAIC,YAAY,GAAGzC,iDAAC,CAAC,eAAD,CAApB;;IACA,IAAIwC,GAAG,CAACE,MAAJ,IAAc,GAAd,IAAqBF,GAAG,CAACE,MAAJ,GAAa,GAAtC,EAA2C;MAAA;;MACzCD,YAAY,4BAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEG,YAAL,CAAkBC,MAArB,yEAA+BH,YAA3C;IACD;;IACDpD,gFAAe,CAACoD,YAAD,CAAf;EACD,CAND;;EAQA,MAAMI,mBAAmB,GAAGxC,IAAI,IAAI;IAClCd,kFAAiB,CAACS,iDAAC,CAAC,qCAAD,EAAwCK,IAAI,CAACQ,IAA7C,CAAF,CAAjB;IACA,MAAMiC,OAAO,GAAI,aAAYrB,KAAM,uCAAnC;IACA,MAAMsB,GAAG,GAAI,GAAED,OAAQ,GAAEzC,IAAI,CAAC2C,IAAK,GAAnC;;IACA,IAAIpB,cAAJ,EAAoB;MAClBrC,kFAAiB,CAACS,iDAAC,CAAC,wBAAD,EAA2BK,IAAI,CAACQ,IAAhC,CAAF,CAAjB;IACD,CAFD,MAEO;MACLtB,kFAAiB,CAACS,iDAAC,CAAC,0BAAD,EAA6BK,IAAI,CAACQ,IAAlC,CAAF,CAAjB;IACD;;IACD1B,6DAAA,CAAoB4D,GAApB;EACD,CAVD;;EAYA,SAASE,kBAAT,CAA4BnC,KAA5B,EAAmCoC,MAAnC,EAA2C;IACzC1B,IAAI,CAACU,OAAL,CAAaC,QAAb,CAAsB,MAAtB,EAA8BrB,KAA9B;EACD;;EAED,OACE;IAAA,UACE,kEAAC,qEAAD;MAAS,QAAQ,EAAE,CAAC,gCAAD,CAAnB;MAAA,WACE;QAAA,UACGc,cAAc,GAAG5B,iDAAC,CAAC,yBAAD,CAAJ,GAAkCA,iDAAC,CAAC,wBAAD;MADpD,EADF,EAIE,kEAAC,oEAAD;QACE,SAAS,EAAE6B,MADb;QAEE,WAAW,EAAEC,QAFf;QAGE,KAAK,EAAEN,IAAI,CAACU,OAHd;QAIE,WAAW,EAAE,MAAM;UACjB5C,kFAAiB,CAACU,iDAAC,CAAC,kBAAD,CAAF,CAAjB;QACD,CANH;QAOE,WAAW,EAAE;UACXgC,IAAI,EAAED,WADK;UAEXzB,MAFW;UAGXK,YAHW;UAIX,GAAGY,KAAK,CAACK;QAJE,CAPf;QAaE,aAAa,EAAEW,iBAbjB;QAcE,eAAe,EAAEM,mBAdnB;QAAA,WAgBE,iEAAC,wEAAD;UAAU,KAAK,EAAE,CAAC;YAACM,KAAK,EAAEnD,iDAAC,CAAC,yBAAD,CAAT;YAAsCoD,MAAM,EAAEpC;UAA9C,CAAD;QAAjB,EAhBF,EAiBE,kEAAC,4DAAD;UAAA,WACE,iEAAC,kEAAD;YAAA,UAAchB,iDAAC,CAAC,UAAD;UAAf,EADF,EAEE,iEAAC,gEAAD;YAAA,UACE,iEAAC,qEAAD;cAA6B,MAAM,EAAEM,MAArC;cAA6C,SAAS,EAAE2B;YAAxD;UADF,EAFF;QAAA,EAjBF,EAuBE,iEAAC,4DAAD;UAAA,UACE,iEAAC,6EAAD;YACE,YAAY,EAAEtB,YADhB;YAEE,eAAe,EAAE0B;UAFnB;QADF,EAvBF,EA6BE,kEAAC,4DAAD;UAAA,WACE,iEAAC,kEAAD;YAAA,UAAcrC,iDAAC,CAAC,uBAAD;UAAf,EADF,EAEE,iEAAC,gEAAD;YAAA,UACE,iEAAC,4DAAD;cACE,MAAM,EAAC,MADT;cAEE,KAAK,EAAC,OAFR;cAGE,eAAe,EAAC,YAHlB;cAIE,YAAY,EAAE+B,WAJhB;cAKE,QAAQ,EAAEkB,kBALZ;cAME,OAAO,EAAE;gBACPI,OAAO,EAAE;kBACPC,OAAO,EAAE;gBADF,CADF;gBAIPC,oBAAoB,EAAE;cAJf;YANX;UADF,EAFF;QAAA,EA7BF;MAAA,EAJF;IAAA;EADF,EADF;AAyDD;;AA/GQjC;;AAyHT,MAAMkC,sBAAN,SAAqC/D,wEAArC,CAAgF;EAC9EgE,YAAY,GAA+C;IACzD,MAAM;MAAC/B,YAAD;MAAeD;IAAf,IAAwB,KAAKF,KAAL,CAAWI,MAAzC;;IACA,IAAID,YAAJ,EAAkB;MAChB,OAAO,CAAC,CAAC,gBAAD,EAAoB,kBAAiBD,KAAM,cAAaC,YAAa,GAArE,CAAD,CAAP;IACD;;IACD,OAAO,EAAP;EACD;;EACDgC,UAAU,GAAG;IACX,OACE,iEAAC,qBAAD;MAAuB,cAAc,EAAE,KAAKC,KAAL,CAAW/B,cAAlD;MAAA,GAAsE,KAAKL;IAA3E,EADF;EAGD;;AAZ6E;;AAehF,iEAAeiC,sBAAf;;;;;;;;;;;;;;;;;;;;;;ACpOA;AACA;;;AASA,SAAStD,2BAAT,CAAqCqB,KAArC,EAAmD;EACjD,MAAM;IAACjB,MAAD;IAAS2B;EAAT,IAAsBV,KAA5B;;EAEA,SAASuC,QAAT,CAAkBC,QAAlB,EAAsCC,OAAtC,EAAwD;IACtD,IAAIA,OAAO,IAAI,CAAC1D,MAAM,CAAC8B,QAAP,CAAgB2B,QAAhB,CAAhB,EAA2C;MACzC9B,SAAS,CAAC3B,MAAM,CAAC2D,MAAP,CAAcF,QAAd,CAAD,CAAT;IACD,CAFD,MAEO,IAAI,CAACC,OAAD,IAAY1D,MAAM,CAAC8B,QAAP,CAAgB2B,QAAhB,CAAhB,EAA2C;MAChD9B,SAAS,CAAC3B,MAAM,CAAC4D,MAAP,CAAcC,CAAC,IAAIA,CAAC,KAAKJ,QAAzB,CAAD,CAAT;IACD;EACF;;EAED,OACE,gEAAC,+BAAD;IAAA,UACGH,yDAAA,CAAkBG,QAAQ,IACzB,gEAAC,wDAAD;MAEE,uBAAuB,EAAE,KAF3B;MAGE,eAAe,EAAE,KAHnB;MAIE,OAAO,EAAExC,KAAK,CAACjB,MAAN,CAAa8B,QAAb,CAAsB2B,QAAtB,CAJX;MAKE,QAAQ,EAAEA,QALZ;MAME,QAAQ,EAAED,QANZ;MAOE,KAAK,EAAEC,QAAQ,KAAK;IAPtB,GACOA,QADP,CADD;EADH,EADF;AAeD;;AA1BQ7D;AA4BT,iEAAeA,2BAAf;;AACA,MAAMmE,+BAA+B,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,oEAGd9C,KAAK,IAAIA,KAAK,CAAC+C,KAAN,CAAYC,WAAZ,CAAwBC,KAHnB,0DAArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;;;;AAUA,SAASvE,kCAAT,CAA4CsB,KAA5C,EAA0D;EACxD,MAAM;IAACZ,YAAD;IAAe0B;EAAf,IAAkCd,KAAxC;;EAEA,MAAMwD,SAAS,GAAG,MAAM;IACtB1C,eAAe,CAAC,CAAC,GAAG1B,YAAJ,EAAkB;MAACE,IAAI,EAAE,EAAP;MAAWC,KAAK,EAAE;IAAlB,CAAlB,CAAD,CAAf;EACD,CAFD;;EAIA,MAAMkE,gBAAgB,GAAG,CAAClE,KAAD,EAAgBmE,GAAhB,KAAgC;IACvD,MAAMC,eAAe,GAAG,CAAC,GAAGvE,YAAJ,CAAxB;;IACA,OAAOuE,eAAe,CAACC,MAAhB,IAA0BF,GAAjC,EAAsC;MACpCC,eAAe,CAAC1E,IAAhB,CAAqB;QAACK,IAAI,EAAE,EAAP;QAAWC,KAAK,EAAE;MAAlB,CAArB;IACD;;IACDoE,eAAe,CAACD,GAAD,CAAf,GAAuB,EAAC,GAAGC,eAAe,CAACD,GAAD,CAAnB;MAA0BpE,IAAI,EAAEC;IAAhC,CAAvB;IACAuB,eAAe,CAAC6C,eAAD,CAAf;EACD,CAPD;;EASA,MAAME,iBAAiB,GAAG,CAACtE,KAAD,EAAgBmE,GAAhB,KAAgC;IACxD,MAAMC,eAAe,GAAG,CAAC,GAAGvE,YAAJ,CAAxB;;IACA,OAAOuE,eAAe,CAACC,MAAhB,IAA0BF,GAAjC,EAAsC;MACpCC,eAAe,CAAC1E,IAAhB,CAAqB;QAACK,IAAI,EAAE,EAAP;QAAWC,KAAK,EAAE;MAAlB,CAArB;IACD;;IACDoE,eAAe,CAACD,GAAD,CAAf,GAAuB,EAAC,GAAGC,eAAe,CAACD,GAAD,CAAnB;MAA0BnE;IAA1B,CAAvB;IACAuB,eAAe,CAAC6C,eAAD,CAAf;EACD,CAPD;;EASA,MAAMG,YAAY,GAAIJ,GAAD,IAAiB;IACpC,MAAMC,eAAe,GAAG,CAAC,GAAGvE,YAAJ,CAAxB;IACAuE,eAAe,CAACI,MAAhB,CAAuBL,GAAvB,EAA4B,CAA5B;IACA5C,eAAe,CAAC6C,eAAD,CAAf;EACD,CAJD;;EAMA,OACE;IAAA,WACE,iEAAC,iEAAD;MAAA,WACGlF,gDAAC,CAAC,uBAAD,CADJ,EAEE,gEAAC,eAAD;QACE,IAAI,EAAC,IADP;QAEE,IAAI,EAAC,QAFP;QAGE,IAAI,EAAE,gEAAC,iDAAD;UAAS,SAAS;QAAlB,EAHR;QAIE,cAAYA,gDAAC,CAAC,0BAAD,CAJf;QAKE,OAAO,EAAE+E;MALX,EAFF;IAAA,EADF,EAWE,iEAAC,eAAD;MAAA,WACE,iEAAC,0BAAD;QAAA,WACE,gEAAC,SAAD;UAAA,UAAY/E,gDAAC,CAAC,MAAD;QAAb,EADF,EAEE,gEAAC,cAAD;UAAA,UAAiBA,gDAAC,CAAC,OAAD;QAAlB,EAFF;MAAA,EADF,EAKGW,YAAY,CAACyD,GAAb,CAAiB,CAACmB,WAAD,EAAc3E,CAAd,KAAoB;QACpC,OACE,iEAAC,0BAAD;UAAA,WACE,gEAAC,+DAAD;YACE,IAAI,EAAG,qBAAoBA,CAAE,EAD/B;YAEE,IAAI,EAAC,MAFP;YAGE,QAAQ,EAAE,KAHZ;YAIE,MAAM,EAAE,KAJV;YAKE,YAAY,EAAE2E,WAAW,CAAC1E,IAL5B;YAME,KAAK,EAAE0E,WAAW,CAAC1E,IANrB;YAOE,OAAO,MAPT;YAQE,QAAQ,EAAEsD,CAAC,IAAIa,gBAAgB,CAACb,CAAD,EAAIvD,CAAJ;UARjC,EADF,EAWE,gEAAC,+DAAD;YACE,IAAI,EAAG,sBAAqBA,CAAE,EADhC;YAEE,IAAI,EAAC,MAFP;YAGE,QAAQ,EAAE,KAHZ;YAIE,MAAM,EAAE,KAJV;YAKE,YAAY,EAAE2E,WAAW,CAACzE,KAL5B;YAME,KAAK,EAAEyE,WAAW,CAACzE,KANrB;YAOE,OAAO,MAPT;YAQE,QAAQ,EAAEqD,CAAC,IAAIiB,iBAAiB,CAACjB,CAAD,EAAIvD,CAAJ;UARlC,EAXF,EAqBE,gEAAC,YAAD;YAAA,UACE,gEAAC,eAAD;cACE,IAAI,EAAC,IADP;cAEE,IAAI,EAAE,gEAAC,oDAAD,KAFR;cAGE,IAAI,EAAC,QAHP;cAIE,cAAYiE,kDAAG,CAAC,iCAAD,EAAoC;gBAACjE;cAAD,CAApC,CAJjB;cAKE,OAAO,EAAE,MAAMyE,YAAY,CAACzE,CAAD;YAL7B;UADF,EArBF;QAAA,GAAiCA,CAAjC,CADF;MAiCD,CAlCA,CALH;IAAA,EAXF;EAAA,EADF;AAuDD;;AAtFQX;AAwFT,iEAAeA,kCAAf;;AAEA,MAAMuF,0BAA0B,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAhC;;AAKA,MAAMC,eAAe,GAAG,8EAAOhB,gEAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAArB;;AAIA,MAAMiB,SAAS,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,gCAECZ,+DAAK,CAAC,CAAD,CAFN,qBAGIA,+DAAK,CAAC,CAAD,CAHT,aAIJa,CAAC,IAAIA,CAAC,CAACrB,KAAF,CAAQsB,OAJT,yBAAf;;AAOA,MAAMC,cAAc,GAAG,8EAAOH,SAAP;EAAA;AAAA,MAAH,kBACFZ,+DAAK,CAAC,CAAD,CADH,yBAApB;;AAIA,MAAMgB,YAAY,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,mDAGChB,+DAAK,CAAC,CAAD,CAHN,yBAAlB;;AAMA,MAAMiB,eAAe,GAAG,8EAAOjG,+DAAP;EAAA;AAAA,MAAH,aACRgF,+DAAK,CAAC,CAAD,CADG,yBAArB","sources":["webpack:///./app/views/settings/organizationDeveloperSettings/sentryFunctionDetails.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryFunctionSubscriptions.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryFunctionsEnvironmentVariables.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport Editor from '@monaco-editor/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Feature from 'sentry/components/acl/feature';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport FormModel from 'sentry/components/forms/model';\nimport {Field} from 'sentry/components/forms/type';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {SentryFunction} from 'sentry/types';\n\nimport SentryFunctionEnvironmentVariables from './sentryFunctionsEnvironmentVariables';\nimport SentryFunctionSubscriptions from './sentryFunctionSubscriptions';\n\nclass SentryFunctionFormModel extends FormModel {\n  getTransformedData() {\n    const data = super.getTransformedData() as Record<string, any>;\n\n    const events: string[] = [];\n    if (data.onIssue) {\n      events.push('issue');\n    }\n    if (data.onError) {\n      events.push('error');\n    }\n    if (data.onComment) {\n      events.push('comment');\n    }\n    delete data.onIssue;\n    delete data.onError;\n    delete data.onComment;\n    data.events = events;\n\n    const envVariables: EnvVariable[] = [];\n    let i = 0;\n    while (data[`env-variable-name-${i}`]) {\n      if (data[`env-variable-value-${i}`]) {\n        envVariables.push({\n          name: data[`env-variable-name-${i}`],\n          value: data[`env-variable-value-${i}`],\n        });\n      }\n      delete data[`env-variable-name-${i}`];\n      delete data[`env-variable-value-${i}`];\n      i++;\n    }\n    data.envVariables = envVariables;\n\n    const {...output} = data;\n    return output;\n  }\n}\n\ntype Props = {\n  sentryFunction?: SentryFunction;\n} & WrapperProps;\n\ntype EnvVariable = {\n  name: string;\n  value: string;\n};\nconst formFields: Field[] = [\n  {\n    name: 'name',\n    type: 'string',\n    required: true,\n    placeholder: 'e.g. My Sentry Function',\n    label: 'Name',\n    help: 'Human readable name of your Sentry Function',\n  },\n  {\n    name: 'author',\n    type: 'string',\n    placeholder: 'e.g. Acme Software',\n    label: 'Author',\n    help: 'The company or person who built and maintains this Sentry Function.',\n  },\n  {\n    name: 'overview',\n    type: 'string',\n    placeholder: 'e.g. This Sentry Function does something useful',\n    label: 'Overview',\n    help: 'A short description of your Sentry Function.',\n  },\n];\n\nfunction SentryFunctionDetails(props: Props) {\n  const form = useRef(new SentryFunctionFormModel());\n  const {orgId, functionSlug} = props.params;\n  const {sentryFunction} = props;\n  const method = functionSlug ? 'PUT' : 'POST';\n  let endpoint = `/organizations/${orgId}/functions/`;\n  if (functionSlug) {\n    endpoint += `${functionSlug}/`;\n  }\n  const defaultCode = sentryFunction\n    ? sentryFunction.code\n    : `exports.yourFunction = (req, res) => {\n    let message = req.query.message || req.body.message || 'Hello World!';\n    console.log('Query: ' + req.query);\n    console.log('Body: ' + req.body);\n    res.status(200).send(message);\n  };`;\n\n  const [events, setEvents] = useState(sentryFunction?.events || []);\n\n  useEffect(() => {\n    form.current.setValue('onIssue', events.includes('issue'));\n    form.current.setValue('onError', events.includes('error'));\n    form.current.setValue('onComment', events.includes('comment'));\n  }, [events]);\n\n  const [envVariables, setEnvVariables] = useState(\n    sentryFunction?.env_variables || [{name: '', value: ''}]\n  );\n\n  const handleSubmitError = err => {\n    let errorMessage = t('Unknown Error');\n    if (err.status >= 400 && err.status < 500) {\n      errorMessage = err?.responseJSON.detail ?? errorMessage;\n    }\n    addErrorMessage(errorMessage);\n  };\n\n  const handleSubmitSuccess = data => {\n    addSuccessMessage(t('Sentry Function successfully saved.', data.name));\n    const baseUrl = `/settings/${orgId}/developer-settings/sentry-functions/`;\n    const url = `${baseUrl}${data.slug}/`;\n    if (sentryFunction) {\n      addSuccessMessage(t('%s successfully saved.', data.name));\n    } else {\n      addSuccessMessage(t('%s successfully created.', data.name));\n    }\n    browserHistory.push(url);\n  };\n\n  function handleEditorChange(value, _event) {\n    form.current.setValue('code', value);\n  }\n\n  return (\n    <div>\n      <Feature features={['organizations:sentry-functions']}>\n        <h2>\n          {sentryFunction ? t('Editing Sentry Function') : t('Create Sentry Function')}\n        </h2>\n        <Form\n          apiMethod={method}\n          apiEndpoint={endpoint}\n          model={form.current}\n          onPreSubmit={() => {\n            addLoadingMessage(t('Saving changes..'));\n          }}\n          initialData={{\n            code: defaultCode,\n            events,\n            envVariables,\n            ...props.sentryFunction,\n          }}\n          onSubmitError={handleSubmitError}\n          onSubmitSuccess={handleSubmitSuccess}\n        >\n          <JsonForm forms={[{title: t('Sentry Function Details'), fields: formFields}]} />\n          <Panel>\n            <PanelHeader>{t('Webhooks')}</PanelHeader>\n            <PanelBody>\n              <SentryFunctionSubscriptions events={events} setEvents={setEvents} />\n            </PanelBody>\n          </Panel>\n          <Panel>\n            <SentryFunctionEnvironmentVariables\n              envVariables={envVariables}\n              setEnvVariables={setEnvVariables}\n            />\n          </Panel>\n          <Panel>\n            <PanelHeader>{t('Write your Code Below')}</PanelHeader>\n            <PanelBody>\n              <Editor\n                height=\"40vh\"\n                theme=\"light\"\n                defaultLanguage=\"javascript\"\n                defaultValue={defaultCode}\n                onChange={handleEditorChange}\n                options={{\n                  minimap: {\n                    enabled: false,\n                  },\n                  scrollBeyondLastLine: false,\n                }}\n              />\n            </PanelBody>\n          </Panel>\n        </Form>\n      </Feature>\n    </div>\n  );\n}\n\ntype WrapperState = {\n  sentryFunction?: SentryFunction;\n} & AsyncComponent['state'];\n\ntype WrapperProps = {\n  params: {orgId: string; functionSlug?: string};\n} & AsyncComponent['props'];\n\nclass SentryFunctionsWrapper extends AsyncComponent<WrapperProps, WrapperState> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {functionSlug, orgId} = this.props.params;\n    if (functionSlug) {\n      return [['sentryFunction', `/organizations/${orgId}/functions/${functionSlug}/`]];\n    }\n    return [];\n  }\n  renderBody() {\n    return (\n      <SentryFunctionDetails sentryFunction={this.state.sentryFunction} {...this.props} />\n    );\n  }\n}\n\nexport default SentryFunctionsWrapper;\n","import styled from '@emotion/styled';\n\nimport {EVENT_CHOICES} from './constants';\nimport SubscriptionBox from './subscriptionBox';\n\ntype Resource = typeof EVENT_CHOICES[number];\n\ntype Props = {\n  events: string[];\n  setEvents: (events: string[]) => void;\n};\n\nfunction SentryFunctionSubscriptions(props: Props) {\n  const {events, setEvents} = props;\n\n  function onChange(resource: Resource, checked: boolean) {\n    if (checked && !events.includes(resource)) {\n      setEvents(events.concat(resource));\n    } else if (!checked && events.includes(resource)) {\n      setEvents(events.filter(e => e !== resource));\n    }\n  }\n\n  return (\n    <SentryFunctionsSubscriptionGrid>\n      {EVENT_CHOICES.map(resource => (\n        <SubscriptionBox\n          key={resource}\n          disabledFromPermissions={false}\n          webhookDisabled={false}\n          checked={props.events.includes(resource)}\n          resource={resource}\n          onChange={onChange}\n          isNew={resource === 'comment'}\n        />\n      ))}\n    </SentryFunctionsSubscriptionGrid>\n  );\n}\n\nexport default SentryFunctionSubscriptions;\nconst SentryFunctionsSubscriptionGrid = styled('div')`\n  display: grid;\n  grid-template: auto / 1fr 1fr 1fr;\n  @media (max-width: ${props => props.theme.breakpoints.large}) {\n    grid-template: 1fr 1fr 1fr / auto;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {InputField} from 'sentry/components/forms';\nimport {PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconAdd, IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  envVariables: {\n    name: string;\n    value: string;\n  }[];\n  setEnvVariables: (envVariables) => void;\n};\n\nfunction SentryFunctionEnvironmentVariables(props: Props) {\n  const {envVariables, setEnvVariables} = props;\n\n  const addEnvVar = () => {\n    setEnvVariables([...envVariables, {name: '', value: ''}]);\n  };\n\n  const handleNameChange = (value: string, pos: number) => {\n    const newEnvVariables = [...envVariables];\n    while (newEnvVariables.length <= pos) {\n      newEnvVariables.push({name: '', value: ''});\n    }\n    newEnvVariables[pos] = {...newEnvVariables[pos], name: value};\n    setEnvVariables(newEnvVariables);\n  };\n\n  const handleValueChange = (value: string, pos: number) => {\n    const newEnvVariables = [...envVariables];\n    while (newEnvVariables.length <= pos) {\n      newEnvVariables.push({name: '', value: ''});\n    }\n    newEnvVariables[pos] = {...newEnvVariables[pos], value};\n    setEnvVariables(newEnvVariables);\n  };\n\n  const removeEnvVar = (pos: number) => {\n    const newEnvVariables = [...envVariables];\n    newEnvVariables.splice(pos, 1);\n    setEnvVariables(newEnvVariables);\n  };\n\n  return (\n    <div>\n      <PanelHeader>\n        {t('Environment Variables')}\n        <StyledAddButton\n          size=\"sm\"\n          type=\"button\"\n          icon={<IconAdd isCircled />}\n          aria-label={t('Add Environment Variable')}\n          onClick={addEnvVar}\n        />\n      </PanelHeader>\n      <StyledPanelBody>\n        <EnvironmentVariableWrapper>\n          <EnvHeader>{t('Name')}</EnvHeader>\n          <EnvHeaderRight>{t('Value')}</EnvHeaderRight>\n        </EnvironmentVariableWrapper>\n        {envVariables.map((envVariable, i) => {\n          return (\n            <EnvironmentVariableWrapper key={i}>\n              <InputField\n                name={`env-variable-name-${i}`}\n                type=\"text\"\n                required={false}\n                inline={false}\n                defaultValue={envVariable.name}\n                value={envVariable.name}\n                stacked\n                onChange={e => handleNameChange(e, i)}\n              />\n              <InputField\n                name={`env-variable-value-${i}`}\n                type=\"text\"\n                required={false}\n                inline={false}\n                defaultValue={envVariable.value}\n                value={envVariable.value}\n                stacked\n                onChange={e => handleValueChange(e, i)}\n              />\n              <ButtonHolder>\n                <StyledAddButton\n                  size=\"sm\"\n                  icon={<IconDelete />}\n                  type=\"button\"\n                  aria-label={tct('Remove Environment Variable [i]', {i})}\n                  onClick={() => removeEnvVar(i)}\n                />\n              </ButtonHolder>\n            </EnvironmentVariableWrapper>\n          );\n        })}\n      </StyledPanelBody>\n    </div>\n  );\n}\n\nexport default SentryFunctionEnvironmentVariables;\n\nconst EnvironmentVariableWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1.5fr min-content;\n`;\n\nconst StyledAddButton = styled(Button)`\n  float: right;\n`;\n\nconst EnvHeader = styled('div')`\n  text-align: left;\n  margin-top: ${space(2)};\n  margin-bottom: ${space(1)};\n  color: ${p => p.theme.gray400};\n`;\n\nconst EnvHeaderRight = styled(EnvHeader)`\n  margin-left: -${space(2)};\n`;\n\nconst ButtonHolder = styled('div')`\n  align-items: center;\n  display: flex;\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPanelBody = styled(PanelBody)`\n  padding: ${space(2)};\n`;\n"],"names":["React","useEffect","useRef","useState","browserHistory","Editor","addErrorMessage","addLoadingMessage","addSuccessMessage","Feature","AsyncComponent","Form","JsonForm","FormModel","Panel","PanelBody","PanelHeader","t","SentryFunctionEnvironmentVariables","SentryFunctionSubscriptions","SentryFunctionFormModel","getTransformedData","data","events","onIssue","push","onError","onComment","envVariables","i","name","value","output","formFields","type","required","placeholder","label","help","SentryFunctionDetails","props","form","orgId","functionSlug","params","sentryFunction","method","endpoint","defaultCode","code","setEvents","current","setValue","includes","setEnvVariables","env_variables","handleSubmitError","err","errorMessage","status","responseJSON","detail","handleSubmitSuccess","baseUrl","url","slug","handleEditorChange","_event","title","fields","minimap","enabled","scrollBeyondLastLine","SentryFunctionsWrapper","getEndpoints","renderBody","state","EVENT_CHOICES","SubscriptionBox","onChange","resource","checked","concat","filter","e","map","SentryFunctionsSubscriptionGrid","theme","breakpoints","large","Button","InputField","IconAdd","IconDelete","tct","space","addEnvVar","handleNameChange","pos","newEnvVariables","length","handleValueChange","removeEnvVar","splice","envVariable","EnvironmentVariableWrapper","StyledAddButton","EnvHeader","p","gray400","EnvHeaderRight","ButtonHolder","StyledPanelBody"],"sourceRoot":""}