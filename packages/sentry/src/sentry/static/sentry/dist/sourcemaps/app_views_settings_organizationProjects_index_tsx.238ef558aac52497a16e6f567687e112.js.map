{"version":3,"file":"chunks/app_views_settings_organizationProjects_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsProjectItem.tsx","webpack:///./app/views/settings/organizationProjects/index.tsx","webpack:///./app/views/settings/organizationProjects/projectStatsGraph.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport BookmarkStar from 'sentry/components/projects/bookmarkStar';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n};\n\nfunction ProjectItem({project, organization}: Props) {\n  const [isBookmarked, setBookmarked] = useState(project.isBookmarked);\n\n  return (\n    <Wrapper>\n      <BookmarkStar\n        organization={organization}\n        project={project}\n        isBookmarked={isBookmarked}\n        onToggle={state => setBookmarked(state)}\n      />\n      <ProjectBadge\n        to={`/settings/${organization.slug}/projects/${project.slug}/`}\n        avatarSize={18}\n        project={project}\n      />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  align-items: center;\n  gap: ${space(1.5)};\n`;\n\nexport default ProjectItem;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Button from 'sentry/components/button';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {sortProjects} from 'sentry/utils';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport ProjectListItem from 'sentry/views/settings/components/settingsProjectItem';\n\nimport ProjectStatsGraph from './projectStatsGraph';\n\nconst ITEMS_PER_PAGE = 50;\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype ProjectStats = Record<string, Required<Project['stats']>>;\n\ntype State = AsyncView['state'] & {\n  projectList: Project[] | null;\n  projectListPageLinks: string | null;\n  projectStats: ProjectStats | null;\n};\n\nclass OrganizationProjects extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n    const {location} = this.props;\n    const query = decodeScalar(location.query.query);\n    return [\n      [\n        'projectList',\n        `/organizations/${orgId}/projects/`,\n        {\n          query: {\n            query,\n            per_page: ITEMS_PER_PAGE,\n          },\n        },\n      ],\n      [\n        'projectStats',\n        `/organizations/${orgId}/stats/`,\n        {\n          query: {\n            since: new Date().getTime() / 1000 - 3600 * 24,\n            stat: 'generated',\n            group: 'project',\n            per_page: ITEMS_PER_PAGE,\n          },\n        },\n      ],\n    ];\n  }\n\n  getTitle(): string {\n    const {organization} = this.props;\n    return routeTitleGen(t('Projects'), organization.slug, false);\n  }\n\n  renderLoading(): React.ReactNode {\n    return this.renderBody();\n  }\n\n  renderBody(): React.ReactNode {\n    const {projectList, projectListPageLinks, projectStats} = this.state;\n    const {organization} = this.props;\n    const canCreateProjects = new Set(organization.access).has('project:admin');\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"sm\"\n        disabled={!canCreateProjects}\n        title={\n          !canCreateProjects\n            ? t('You do not have permission to create projects')\n            : undefined\n        }\n        to={`/organizations/${organization.slug}/projects/new/`}\n        icon={<IconAdd size=\"xs\" isCircled />}\n      >\n        {t('Create Project')}\n      </Button>\n    );\n\n    return (\n      <Fragment>\n        <SettingsPageHeader title=\"Projects\" action={action} />\n        <SearchWrapper>\n          {this.renderSearchInput({\n            updateRoute: true,\n            placeholder: t('Search Projects'),\n            className: 'search',\n          })}\n        </SearchWrapper>\n        <Panel>\n          <PanelHeader>{t('Projects')}</PanelHeader>\n          <PanelBody>\n            {projectList ? (\n              sortProjects(projectList).map(project => (\n                <GridPanelItem key={project.id}>\n                  <ProjectListItemWrapper>\n                    <ProjectListItem project={project} organization={organization} />\n                  </ProjectListItemWrapper>\n                  <ProjectStatsGraphWrapper>\n                    {projectStats ? (\n                      <ProjectStatsGraph\n                        key={project.id}\n                        project={project}\n                        stats={projectStats[project.id]}\n                      />\n                    ) : (\n                      <Placeholder height=\"25px\" />\n                    )}\n                  </ProjectStatsGraphWrapper>\n                </GridPanelItem>\n              ))\n            ) : (\n              <LoadingIndicator />\n            )}\n            {projectList && projectList.length === 0 && (\n              <EmptyMessage>{t('No projects found.')}</EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n        {projectListPageLinks && (\n          <Pagination pageLinks={projectListPageLinks} {...this.props} />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationProjects);\n\nconst SearchWrapper = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst GridPanelItem = styled(PanelItem)`\n  display: flex;\n  align-items: center;\n  padding: 0;\n`;\n\nconst ProjectListItemWrapper = styled('div')`\n  padding: ${space(2)};\n  flex: 1;\n`;\n\nconst ProjectStatsGraphWrapper = styled('div')`\n  padding: ${space(2)};\n  width: 25%;\n  margin-left: ${space(2)};\n`;\n","import {Fragment} from 'react';\nimport LazyLoad from 'react-lazyload';\n\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\n\ntype Props = {\n  project: Project;\n  stats?: Project['stats'];\n};\n\nconst ProjectStatsGraph = ({project, stats}: Props) => {\n  stats = stats || project.stats || [];\n  const series: Series[] = [\n    {\n      seriesName: t('Events'),\n      data: stats.map(point => ({name: point[0] * 1000, value: point[1]})),\n    },\n  ];\n\n  return (\n    <Fragment>\n      {series && (\n        <LazyLoad height={25} debounce={50}>\n          <MiniBarChart isGroupedByDate showTimeInTooltip series={series} height={25} />\n        </LazyLoad>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProjectStatsGraph;\n"],"names":["routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","useState","ProjectBadge","BookmarkStar","space","ProjectItem","project","organization","isBookmarked","setBookmarked","state","slug","Wrapper","Fragment","Button","LoadingIndicator","Pagination","Panel","PanelBody","PanelHeader","PanelItem","Placeholder","IconAdd","t","sortProjects","decodeScalar","withOrganization","EmptyMessage","SettingsPageHeader","ProjectListItem","ProjectStatsGraph","ITEMS_PER_PAGE","OrganizationProjects","getEndpoints","orgId","props","params","location","query","per_page","since","Date","getTime","stat","group","renderLoading","renderBody","projectList","projectListPageLinks","projectStats","canCreateProjects","Set","access","has","action","undefined","renderSearchInput","updateRoute","placeholder","className","map","id","length","SearchWrapper","GridPanelItem","ProjectListItemWrapper","ProjectStatsGraphWrapper","LazyLoad","MiniBarChart","stats","series","seriesName","data","point","name","value"],"sourceRoot":""}