{"version":3,"file":"chunks/app_components_modals_dashboardWidgetLibraryModal_index_tsx-app_utils_discover_charts_tsx-app-ff394d.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;;;;AAYA,SAASc,2BAAT,OAUU;EAAA,IAV2B;IACnCC,MADmC;IAEnCC,IAFmC;IAGnCC,MAHmC;IAInCC,SAJmC;IAKnCC,YALmC;IAMnCC,YANmC;IAOnCC,sBAPmC;IAQnCC,UARmC;IASnCC;EATmC,CAU3B;EACR,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCxB,+CAAQ,CACpDoB,sBAAsB,GAAGA,sBAAH,GAA4B,EADE,CAAtD;EAGA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwB1B,+CAAQ,CAAC,KAAD,CAAtC;;EAEA,SAAS2B,YAAT,GAAwB;IACtBL,WAAW,CAAC,CAAC,GAAGL,SAAS,CAACW,OAAd,EAAuB,GAAGL,eAAe,CAACM,GAAhB,CAAoBvB,+EAApB,CAA1B,CAAD,CAAX;IACAe,UAAU;EACX;;EAED,MAAMS,SAAS,GAAGb,SAAS,CAACW,OAAV,CAAkBG,MAAlB,GAA2BR,eAAe,CAACQ,MAA3C,GAAoDxB,wEAAtE;EAEA,OACE,kEAAC,2CAAD;IAAA,WACE,iEAAC,MAAD;MAAQ,WAAW,MAAnB;MAAA,UACE;QAAA,UAAKJ,gDAAC,CAAC,eAAD;MAAN;IADF,EADF,EAIE,kEAAC,IAAD;MAAA,WACE,iEAAC,0DAAD;QACE,SAAS,EAAEQ,wDADb;QAEE,YAAY,EAAEO,YAFhB;QAGE,SAAS,EAAED,SAHb;QAIE,eAAe,EAAEM,eAJnB;QAKE,YAAY,EAAEJ,YALhB;QAME,WAAW,EAAEG;MANf,EADF,EASE,iEAAC,oDAAD;QACE,eAAe,EAAEC,eADnB;QAEE,OAAO,EAAEE,OAFX;QAGE,kBAAkB,EAAED,kBAHtB;QAIE,UAAU,EAAEE,UAJd;QAKE,YAAY,EAAER;MALhB,EATF;IAAA,EAJF,EAqBE,iEAAC,MAAD;MAAA,UACE,kEAAC,kDAAD;QAAW,GAAG,EAAE,CAAhB;QAAA,WACE,iEAAC,+CAAD;UACE,QAAQ,MADV;UAEE,IAAI,EAAC,2DAFP;UAAA,UAIGf,gDAAC,CAAC,eAAD;QAJJ,EADF,EAOE,iEAAC,iEAAD;UACE,KAAK,EAAEC,kDAAG,CACR,+FADQ,EAER;YACE6B,UAAU,EAAE1B,wEADd;YAEE2B,eAAe,EACbjB,SAAS,CAACW,OAAV,CAAkBG,MAAlB,GAA2BR,eAAe,CAACQ,MAA3C,GAAoDxB,wEAAWA;UAHnE,CAFQ,CADZ;UASE,QAAQ,EAAE,CAAC,CAAC,CAACuB,SATf;UAAA,UAWE,iEAAC,YAAD;YACE,gBAAa,iBADf;YAEE,QAAQ,EAAC,SAFX;YAGE,QAAQ,EAAEA,SAHZ;YAIE,IAAI,EAAC,QAJP;YAKE,OAAO,EAAE,MAAM;cACb,IAAI,CAAC,CAAC,CAACP,eAAe,CAACQ,MAAvB,EAA+B;gBAC7BL,UAAU,CAAC,IAAD,CAAV;gBACA;cACD;;cACDrB,8FAA2B,CAAC,qCAAD,EAAwC;gBACjEa,YADiE;gBAEjEiB,WAAW,EAAEZ,eAAe,CAACQ;cAFoC,CAAxC,CAA3B;cAIAR,eAAe,CAACa,OAAhB,CAAwBC,cAAc,IAAI;gBACxChC,8FAA2B,CACzB,4CADyB,EAEzB;kBACEa,YADF;kBAEEoB,KAAK,EAAED,cAAc,CAACC;gBAFxB,CAFyB,CAA3B;cAOD,CARD;cASAX,YAAY;YACb,CAxBH;YAAA,UA0BGJ,eAAe,CAACQ,MAAhB,GACG3B,kDAAG,CAAC,oBAAD,EAAuB;cAACmC,UAAU,EAAEhB,eAAe,CAACQ;YAA7B,CAAvB,CADN,GAEG5B,gDAAC,CAAC,KAAD;UA5BP;QAXF,EAPF;MAAA;IADF,EArBF;EAAA,EADF;AA4ED;;AAnGQU;AAqGF,MAAM2B,QAAQ,GAAG;EAAH;EAAA;AAAA,KAAd;;AAMP,MAAMC,YAAY,GAAG,8EAAOjC,+CAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAlB;;AAIA,iEAAeK,2BAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5IA;AAGA;AACA;AACA;AAEA;AACA;AAIA;;;;AAUA,SAASH,yBAAT,OAMU;EAAA,IANyB;IACjCa,eADiC;IAEjCE,OAFiC;IAGjCP,YAHiC;IAIjCM,kBAJiC;IAKjCE;EALiC,CAMzB;EACR,IAAIqB,cAAc,GAAGF,yFAArB;;EACA,IAAI,CAAC,CAAC,CAAC3B,YAAY,CAAC8B,QAAb,CAAsBC,QAAtB,CAA+B,qBAA/B,CAAP,EAA8D;IAC5DF,cAAc,GAAGA,cAAc,CAACG,MAAf,CACfC,MAAM,IAAI,CAAC,CAAC,EAAEA,MAAM,CAACC,UAAP,KAAsBR,+EAAxB,CADG,CAAjB;EAGD;;EACD,OACE,iEAAC,2CAAD;IAAA,WACGnB,OAAO,IAAI,CAAC,CAAC,CAACF,eAAe,CAACQ,MAA9B,GACC,gEAAC,+DAAD;MAAO,IAAI,EAAC,OAAZ;MAAA,UACG5B,gDAAC,CACA,gHADA;IADJ,EADD,GAMG,IAPN,EAQE,gEAAC,iBAAD;MAAA,UACG4C,cAAc,CAAClB,GAAf,CAAmB,CAACyB,UAAD,EAAaC,KAAb,KAAuB;QACzC,OACE,gEAAC,0FAAD;UACE,gBAAe,uBAAsBA,KAAM,EAD7C;UAGE,MAAM,EAAED,UAHV;UAIE,eAAe,EAAE/B,eAJnB;UAKE,kBAAkB,EAAEC,kBALtB;UAME,UAAU,EAAEE;QANd,GAEO4B,UAAU,CAAChB,KAFlB,CADF;MAUD,CAXA;IADH,EARF;EAAA,EADF;AAyBD;;AAtCQ5B;;AAwCT,MAAM8C,iBAAiB,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,wHAIVb,+DAAK,CAAC,GAAD,CAJK,kBAKPA,+DAAK,CAAC,CAAD,CALE,+EAAvB;;AAYA,iEAAejC,yBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAEA;;;AAEO,IAAKC,GAAZ;;WAAYA;EAAAA;EAAAA;GAAAA,QAAAA;;AAcL,SAASC,aAAT,OAOG;EAAA,IAPoB;IAC5BoD,SAD4B;IAE5B9C,YAF4B;IAG5BD,SAH4B;IAI5BM,eAJ4B;IAK5BJ,YAL4B;IAM5BG;EAN4B,CAOpB;EACR,OACE,kEAAC,eAAD;IAAiB,MAAM,EAAE0C,SAAzB;IAAA,WACE,iEAAC,YAAD;MACE,KAAK,EAAErD,GAAG,CAACsD,MADb;MAEE,OAAO,EAAE,MAAM;QACb,IAAID,SAAS,KAAKrD,GAAG,CAACsD,MAAtB,EAA8B;UAC5B;QACD;;QACD5D,8FAA2B,CAAC,4CAAD,EAA+C;UACxEa,YADwE;UAExEgD,EAAE,EAAEvD,GAAG,CAACsD;QAFgE,CAA/C,CAA3B;QAIAR,wFAA2B,CAAC;UAC1BvC,YAD0B;UAE1BD,SAF0B;UAG1BM,eAH0B;UAI1B4B,MAAM,EAAEhC,YAJkB;UAK1BgD,MAAM,EAAEN,0FALkB;UAM1BQ,kBAAkB,EAAE/C;QANM,CAAD,CAA3B;MAQD,CAlBH;MAAA,UAoBGnB,gDAAC,CAAC,eAAD;IApBJ,EADF,EAuBE,kEAAC,aAAD;MACE,KAAK,EAAEQ,GAAG,CAACqB,OADb;MAEE,gBAAa,aAFf;MAGE,OAAO,EAAE,MAAM;QACb,IAAIgC,SAAS,KAAKrD,GAAG,CAACqB,OAAtB,EAA+B;UAC7B;QACD;;QACD3B,8FAA2B,CAAC,4CAAD,EAA+C;UACxEa,YADwE;UAExEgD,EAAE,EAAEvD,GAAG,CAACqB;QAFgE,CAA/C,CAA3B;QAIA8B,8DAAqB;;QACrB,IAAIF,qDAAO,CAACtC,WAAD,CAAX,EAA0B;UACxBoC,4FAA+B,CAAC;YAC9BxC,YAD8B;YAE9BD,SAF8B;YAG9BE,YAH8B;YAI9BC,sBAAsB,EAAEG,eAJM;YAK9BD;UAL8B,CAAD,CAA/B;QAOD;MACF,CArBH;MAAA,WAuBGnB,gDAAC,CAAC,gBAAD,CAvBJ,EAwBG4D,2DAAkB,MAAM,iEAAC,sEAAD;QAAc,IAAI,EAAC;MAAnB,EAxB3B;IAAA,EAvBF;EAAA,EADF;AAoDD;AA5DenD;;AA8DhB,MAAM0D,eAAe,GAAG,8EAAO7D,kDAAP;EAAA;AAAA,MAAH,uCAEFkC,+DAAK,CAAC,CAAD,CAFH,yBAArB;;AAKA,MAAM4B,aAAa,GAAG,8EAAO/D,+CAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAnB;;AAKA,MAAMgE,YAAY,GAAG,8EAAOhE,+CAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAlB;;;;;;;;;;;;;;;;AC9GA,MAAMiE,qBAAqB,GAAG,iCAA9B;AAEO,SAASV,kBAAT,GAAuC;EAC5C,MAAMW,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqBH,qBAArB,CAAf;EACA,OAAOC,MAAM,KAAK,IAAX,IAAmB,CAACG,QAAQ,CAACH,MAAD,EAAS,EAAT,CAAR,IAAwB,CAAzB,IAA8B,CAAxD;AACD;AACM,SAASZ,qBAAT,GAAiC;EACtC,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqBH,qBAArB,CAAf;EACAE,YAAY,CAACG,OAAb,CACEL,qBADF,EAEEC,MAAM,KAAK,IAAX,GAAkB,GAAlB,GAAyB,GAAE,CAACG,QAAQ,CAACH,MAAD,EAAS,EAAT,CAAR,IAAwB,CAAzB,IAA8B,CAAE,EAF7D;AAID;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVD;AAEA;AAEA;AAWA;AACA;AACA;AACA;;AACO,SAASc,gBAAT,CACLC,KADK,EAGG;EAAA,IADRC,UACQ,uEAD4B,QAC5B;;EACR,IAAI,CAAC9B,qDAAO,CAAC6B,KAAD,CAAZ,EAAqB;IACnB,OAAO,QAAP;EACD;;EACD,OAAOE,wCAAwC,CAACF,KAAD,EAAQC,UAAR,CAA/C;AACD;AAED;AACA;AACA;;AACO,SAASC,wCAAT,CACLF,KADK,EAELG,IAFK,EAGG;EACR,IAAI,CAAChC,qDAAO,CAAC6B,KAAD,CAAZ,EAAqB;IACnB,OAAO,QAAP;EACD;;EACD,QAAQG,IAAR;IACE,KAAK,SAAL;IACA,KAAK,QAAL;MACE,OAAOH,KAAK,CAACI,cAAN,EAAP;;IACF,KAAK,YAAL;MACE,OAAOX,yEAAgB,CAACO,KAAD,EAAQ,CAAR,CAAvB;;IACF,KAAK,UAAL;MACE,OAAON,oEAAW,CAACM,KAAK,GAAG,IAAT,EAAe,CAAf,EAAkB,IAAlB,CAAlB;;IACF,KAAK,MAAL;MACE,OAAOV,8DAAgB,CAACU,KAAD,CAAvB;;IACF;MACE,OAAOA,KAAK,CAACK,QAAN,EAAP;EAXJ;AAaD;AAED;AACA;AACA;AACA;;AACO,SAASC,kBAAT,CACLN,KADK,EAELC,UAFK,EAKG;EAAA,IAFRM,YAEQ,uEAFgB,KAEhB;EAAA,IADRC,YACQ;EACR,OAAOC,0CAA0C,CAC/CT,KAD+C,EAE/CC,UAF+C,EAG/CM,YAH+C,EAI/CC,YAJ+C,CAAjD;AAMD;AAED;AACA;AACA;;AACO,SAASC,0CAAT,CACLT,KADK,EAELG,IAFK,EAKG;EAAA,IAFRI,YAEQ,uEAFgB,KAEhB;EAAA,IADRC,YACQ;;EACR,QAAQL,IAAR;IACE,KAAK,SAAL;IACA,KAAK,QAAL;MACE,OAAOI,YAAY,GAAGf,gFAAuB,CAACQ,KAAD,CAA1B,GAAoCA,KAAK,CAACI,cAAN,EAAvD;;IACF,KAAK,YAAL;MACE,OAAOX,yEAAgB,CAACO,KAAD,EAAQ,CAAR,CAAvB;;IACF,KAAK,UAAL;MACE,OAAOU,YAAY,CAACV,KAAD,EAAQQ,YAAR,CAAnB;;IACF,KAAK,MAAL;MACE,OAAOlB,8DAAgB,CAACU,KAAD,EAAQ,CAAR,CAAvB;;IACF;MACE,OAAOA,KAAK,CAACK,QAAN,EAAP;EAXJ;AAaD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASK,YAAT,CAAsBV,KAAtB,EAAqCQ,YAArC,EAAoE;EAAA;;EACzE,iBAAAA,YAAY,UAAZ,+CAAAA,YAAY,GAAKG,kBAAkB,CAACX,KAAD,CAAnC;;EACA,IAAIA,KAAK,KAAK,CAAd,EAAiB;IACf,OAAO,GAAP;EACD;;EACD,QAAQQ,YAAR;IACE,KAAKV,yDAAL;MAAW;QACT,MAAMc,KAAK,GAAG,CAACZ,KAAK,GAAGF,yDAAT,EAAee,OAAf,CAAuB,CAAvB,CAAd;QACA,OAAOnG,gDAAC,CAAC,MAAD,EAASkG,KAAT,CAAR;MACD;;IACD,KAAKrB,wDAAL;MAAU;QACR,MAAMqB,KAAK,GAAG,CAACZ,KAAK,GAAGT,wDAAT,EAAcsB,OAAd,CAAsB,CAAtB,CAAd;QACA,OAAOnG,gDAAC,CAAC,KAAD,EAAQkG,KAAR,CAAR;MACD;;IACD,KAAKjB,yDAAL;MAAW;QACT,MAAMiB,KAAK,GAAG,CAACZ,KAAK,GAAGL,yDAAT,EAAekB,OAAf,CAAuB,CAAvB,CAAd;QACA,OAAOnG,gDAAC,CAAC,MAAD,EAASkG,KAAT,CAAR;MACD;;IACD,KAAKhB,2DAAL;MAAa;QACX,MAAMgB,KAAK,GAAG,CAACZ,KAAK,GAAGJ,2DAAT,EAAiBiB,OAAjB,CAAyB,CAAzB,CAAd;QACA,OAAOnG,gDAAC,CAAC,OAAD,EAAUkG,KAAV,CAAR;MACD;;IACD,KAAKf,2DAAL;MAAa;QACX,MAAMe,KAAK,GAAG,CAACZ,KAAK,GAAGH,2DAAT,EAAiBgB,OAAjB,CAAyB,CAAzB,CAAd;QACA,OAAOnG,gDAAC,CAAC,KAAD,EAAQkG,KAAR,CAAR;MACD;;IACD;MACE,MAAMA,KAAK,GAAGZ,KAAK,CAACa,OAAN,CAAc,CAAd,CAAd;MACA,OAAOnG,gDAAC,CAAC,MAAD,EAASkG,KAAT,CAAR;EAvBJ;AAyBD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASE,sBAAT,CAAgCC,MAAhC,EAAkDC,MAAlD,EAAkF;EAAA;;EACvF,IAAIC,KAAJ;;EACA,gBAAIF,MAAM,CAAC,CAAD,CAAV,qCAAI,SAAWG,IAAf,EAAqB;IAAA;;IACnB,IAAIC,SAAS,GAAGJ,MAAM,CAAC,CAAD,CAAtB;IACA,IAAIK,SAAJ;IACAL,MAAM,CAACpE,OAAP,CAAe,OAAqB0E,GAArB,KAA6B;MAAA;;MAAA,IAA5B;QAACC,UAAD;QAAaJ;MAAb,CAA4B;;MAC1C,IAAI,CAAAF,MAAM,SAAN,IAAAA,MAAM,WAAN,gCAAAA,MAAM,CAAEO,QAAR,sEAAmBD,UAAnB,OAAmC,KAAnC,IAA4CJ,IAAI,CAAC5E,MAArD,EAA6D;QAAA;;QAC3D6E,SAAS,GAAGJ,MAAM,CAACM,GAAD,CAAlB;QACA,cAAAD,SAAS,UAAT,yCAAAA,SAAS,GAAKL,MAAM,CAACM,GAAD,CAApB;MACD;IACF,CALD;;IAMA,mBAAID,SAAJ,wCAAI,YAAWF,IAAf,EAAqB;MACnB,MAAMM,GAAG,GAAGC,IAAI,CAACD,GAAL,CACV,GAAGJ,SAAS,CAACF,IAAV,CAAe9E,GAAf,CAAmB;QAAA,IAAC;UAAC4D;QAAD,CAAD;QAAA,OAAaA,KAAb;MAAA,CAAnB,EAAuCvC,MAAvC,CAA8CuC,KAAK,IAAI,CAAC,CAACA,KAAzD,CADO,CAAZ;MAGA,MAAM0B,GAAG,GAAGD,IAAI,CAACC,GAAL,CACV,GAAGP,SAAS,CAACD,IAAV,CAAe9E,GAAf,CAAmB;QAAA,IAAC;UAAC4D;QAAD,CAAD;QAAA,OAAaA,KAAb;MAAA,CAAnB,EAAuCvC,MAAvC,CAA8CuC,KAAK,IAAI,CAAC,CAACA,KAAzD,CADO,CAAZ;MAGAiB,KAAK,GAAG;QAACO,GAAD;QAAME;MAAN,CAAR;IACD;EACF;;EACD,OAAOT,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACO,SAASU,eAAT,CACLZ,MADK,EAELC,MAFK,EAGG;EACR,IAAIR,YAAY,GAAG,CAAnB;EACA,MAAMS,KAAK,GAAGH,sBAAsB,CAACC,MAAD,EAASC,MAAT,CAApC;;EACA,IAAIC,KAAJ,EAAW;IACT,MAAMW,GAAG,GAAG,CAACX,KAAK,CAACO,GAAN,GAAYP,KAAK,CAACS,GAAnB,IAA0B,CAAtC;IACAlB,YAAY,GAAGG,kBAAkB,CAAC,CAACM,KAAK,CAACO,GAAN,GAAYP,KAAK,CAACS,GAAnB,IAA0B,CAA3B,CAAjC,CAFS,CAEuD;;IAEhE,MAAMG,WAAW,GAAG,CAACD,GAAG,GAAGpB,YAAP,EAAqBK,OAArB,CAA6B,CAA7B,EAAgCvE,MAApD;;IACA,IAAIuF,WAAW,GAAG,CAAlB,EAAqB;MACnBrB,YAAY,GAAGG,kBAAkB,CAACiB,GAAD,CAAjC;IACD;EACF;;EACD,OAAOpB,YAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACO,SAASG,kBAAT,CAA4BX,KAA5B,EAA2C;EAChD,IAAIA,KAAK,IAAIF,yDAAb,EAAmB;IACjB,OAAOA,yDAAP;EACD;;EACD,IAAIE,KAAK,IAAIT,wDAAb,EAAkB;IAChB,OAAOA,wDAAP;EACD;;EACD,IAAIS,KAAK,IAAIL,yDAAb,EAAmB;IACjB,OAAOA,yDAAP;EACD;;EACD,IAAIK,KAAK,IAAIJ,2DAAb,EAAqB;IACnB,OAAOA,2DAAP;EACD;;EACD,IAAII,KAAK,IAAIH,2DAAb,EAAqB;IACnB,OAAOA,2DAAP;EACD;;EACD,OAAO,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACvND;AAEA;AAEA;;;AAMA;AACA;AACA;AACA,MAAMoC,WAAW,GACfC,gBADkB;EAAA;;EAAA,gBAGlB,cAAcJ,4CAAd,CAEE;IAMAK,MAAM,GAAG;MACP,MAAM;QAACC,OAAD;QAAU,GAAGC;MAAb,IAAsB,KAAKA,KAAjC;MACA,OACE,gEAAC,gBAAD;QACQD,OAAO,EAAEA,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAa,KAAKE,OAAL,CAAaF,OADzC;QACkD,GAAGC;MADrD,EADF;IAKD;;EAbD,CALgB,2GAMM,eAAcL,uEAAc,CAACE,gBAAD,CAAmB,GANrD,6GAOM;IACpBE,OAAO,EAAEL,kEAAmBQ;EADR,CAPN;AAAA,CAApB;;AAqBA,iEAAeN,WAAf;;;;;;;;;;;;;;;;;;;AClCA;AACA;AAEA;AAMO,MAAM7E,eAAgD,GAAG,CAC9D;EACEsF,EAAE,EAAE,uBADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,uBAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,6DAAD,CAHhB;EAIEkI,WAAW,EAAEH,oDAJf;EAKE9E,UAAU,EAAER,uDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,wBAFd;IAGEC,MAAM,EAAE,CACN,2BADM,EAEN,2BAFM,EAGN,2BAHM,CAHV;IAQEC,UAAU,EAAE,CACV,2BADU,EAEV,2BAFU,EAGV,2BAHU,CARd;IAaEC,OAAO,EAAE,EAbX;IAcEC,OAAO,EAAE;EAdX,CADO;AAPX,CAD8D,EA2B9D;EACEZ,EAAE,EAAE,8BADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,8BAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,6CAAD,CAHhB;EAIEkI,WAAW,EAAEH,qDAJf;EAKE9E,UAAU,EAAER,uDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,wBAFd;IAGEC,MAAM,EAAE,CAAC,aAAD,EAAgB,SAAhB,CAHV;IAIEC,UAAU,EAAE,CAAC,SAAD,CAJd;IAKEC,OAAO,EAAE,CAAC,aAAD,CALX;IAMEC,OAAO,EAAE;EANX,CADO;AAPX,CA3B8D,EA6C9D;EACEZ,EAAE,EAAE,6BADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,iCAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,qDAAD,CAHhB;EAIEkI,WAAW,EAAEH,oDAJf;EAKE9E,UAAU,EAAER,sDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEQ,KAAK,EAAE,CAPT;EAQEP,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,EAFd;IAGEC,MAAM,EAAE,CAAC,qBAAD,EAAwB,SAAxB,CAHV;IAIEC,UAAU,EAAE,CAAC,qBAAD,CAJd;IAKEC,OAAO,EAAE,CAAC,SAAD,CALX;IAMEC,OAAO,EAAE;EANX,CADO;AARX,CA7C8D,EAgE9D;EACEZ,EAAE,EAAE,gBADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,gBAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,4DAAD,CAHhB;EAIEkI,WAAW,EAAEH,qDAJf;EAKE9E,UAAU,EAAER,sDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,EAFd;IAGEC,MAAM,EAAE,CAAC,gBAAD,EAAmB,cAAnB,CAHV;IAIEC,UAAU,EAAE,CAAC,cAAD,CAJd;IAKEC,OAAO,EAAE,CAAC,gBAAD,CALX;IAMEC,OAAO,EAAE;EANX,CADO;AAPX,CAhE8D,EAkF9D;EACEZ,EAAE,EAAE,aADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,gBAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,iDAAD,CAHhB;EAIEkI,WAAW,EAAEH,yDAJf;EAKE9E,UAAU,EAAER,uDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,sBAFd;IAGEC,MAAM,EAAE,CAAC,uBAAD,CAHV;IAIEC,UAAU,EAAE,CAAC,uBAAD,CAJd;IAKEC,OAAO,EAAE,EALX;IAMEC,OAAO,EAAE;EANX,CADO;AAPX,CAlF8D,EAoG9D;EACEZ,EAAE,EAAE,iBADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,iBAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,oDAAD,CAHhB;EAIEkI,WAAW,EAAEH,0DAJf;EAKE9E,UAAU,EAAER,uDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,EAFd;IAGEC,MAAM,EAAE,CAAC,2BAAD,CAHV;IAIEC,UAAU,EAAE,CAAC,2BAAD,CAJd;IAKEC,OAAO,EAAE,EALX;IAMEC,OAAO,EAAE;EANX,CADO;AAPX,CApG8D,EAsH9D;EACEZ,EAAE,EAAE,cADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,4BAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,qEAAD,CAHhB;EAIEkI,WAAW,EAAEH,mDAJf;EAKE9E,UAAU,EAAER,uDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,wBAFd;IAGEC,MAAM,EAAE,CACN,uEADM,EAEN,4EAFM,CAHV;IAOEC,UAAU,EAAE,CACV,uEADU,EAEV,4EAFU,CAPd;IAWEC,OAAO,EAAE,EAXX;IAYEC,OAAO,EAAE;EAZX,CADO;AAPX,CAtH8D,EA8I9D;EACEZ,EAAE,EAAE,kBADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,mBAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,kDAAD,CAHhB;EAIEkI,WAAW,EAAEH,qDAJf;EAKE9E,UAAU,EAAER,oDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,6BAFd;IAGEC,MAAM,EAAE,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,EAAgC,OAAhC,CAHV;IAIEC,UAAU,EAAE,EAJd;IAKEC,OAAO,EAAE,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,EAAgC,OAAhC,CALX;IAMEC,OAAO,EAAE;EANX,CADO;AAPX,CA9I8D,EAgK9D;EACEZ,EAAE,EAAE,eADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,2BAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,+CAAD,CAHhB;EAIEkI,WAAW,EAAEH,qDAJf;EAKE9E,UAAU,EAAER,uDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,sBAFd;IAGEC,MAAM,EAAE,CAAC,YAAD,EAAe,SAAf,CAHV;IAIEC,UAAU,EAAE,CAAC,SAAD,CAJd;IAKEC,OAAO,EAAE,CAAC,YAAD,CALX;IAMEC,OAAO,EAAE;EANX,CADO;AAPX,CAhK8D,EAkL9D;EACEZ,EAAE,EAAE,gBADN;EAEE7F,KAAK,EAAEnC,gDAAC,CAAC,0BAAD,CAFV;EAGEiI,WAAW,EAAEjI,gDAAC,CAAC,+CAAD,CAHhB;EAIEkI,WAAW,EAAEH,oDAJf;EAKE9E,UAAU,EAAER,uDALd;EAME4F,QAAQ,EAAE,IANZ;EAOEC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,EADR;IAEEC,UAAU,EAAE,kBAFd;IAGEC,MAAM,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAHV;IAIEC,UAAU,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAJd;IAKEC,OAAO,EAAE,EALX;IAMEC,OAAO,EAAE;EANX,CADO;AAPX,CAlL8D,CAAzD;AAsMA,SAASO,8BAAT,GAA2E;EAChF,OAAOzG,eAAe,CAAChB,GAAhB,CAAoBsB,MAAM,IAAI;IACnC,IAAIA,MAAM,CAACkF,WAAP,KAAuBH,qDAA3B,EAA8C;MAC5C,OAAO,EACL,GAAG/E,MADE;QAELkF,WAAW,EAAEH,oDAFR;QAGLc,KAAK,EAAEf,8DAAKA;MAHP,CAAP;IAKD;;IACD,OAAO9E,MAAP;EACD,CATM,CAAP;AAUD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1ND;AAGA;AACA;AACA;AACA;AACA;AAEA;;;AAYO,SAAS8G,aAAT,CAAuB5B,WAAvB,EAAiD;EACtD,QAAQA,WAAR;IACE,KAAKH,qDAAL;MACE,OAAO2B,kDAAP;;IACF,KAAK3B,yDAAL;MACE,OAAOyB,mDAAP;;IACF,KAAKzB,0DAAL;MACE,OAAO4B,oDAAP;;IACF,KAAK5B,mDAAL;MACE,OAAO8B,mEAAP;;IACF,KAAK9B,qDAAL;MACE,OAAOwB,mDAAP;;IACF,KAAKxB,oDAAL;MACE,OAAO6B,qEAAP;;IACF,KAAK7B,oDAAL;IACA;MACE,OAAO0B,mDAAP;EAfJ;AAiBD;;AAED,SAAS9G,iBAAT,OAKU;EAAA,IALiB;IACzBvB,eADyB;IAEzB4B,MAFyB;IAGzB3B,kBAHyB;IAIzB,CAAC,cAAD,GAAkB0I;EAJO,CAKjB;EACR,MAAM,CAAClD,QAAD,EAAWmD,WAAX,IAA0BnK,+CAAQ,CAACuB,eAAe,CAAC0B,QAAhB,CAAyBE,MAAzB,CAAD,CAAxC;EACA,MAAMiH,IAAI,GAAGH,aAAa,CAAC9G,MAAM,CAACkF,WAAR,CAA1B;EAEA,OACE,iEAAC,WAAD;IACE,gBAAc6B,UADhB;IAEE,QAAQ,EAAElD,QAFZ;IAGE,OAAO,EAAE,MAAM;MACb,IAAIA,QAAJ,EAAc;QACZ,MAAMqD,cAAc,GAAG9I,eAAe,CAAC2B,MAAhB,CACrBb,cAAc,IAAIc,MAAM,KAAKd,cADR,CAAvB;QAGAb,kBAAkB,CAAC6I,cAAD,CAAlB;MACD,CALD,MAKO;QACL,MAAMA,cAAc,GAAG9I,eAAe,CAAC+I,KAAhB,GAAwBC,MAAxB,CAA+BpH,MAA/B,CAAvB;QACA3B,kBAAkB,CAAC6I,cAAD,CAAlB;MACD;;MACDF,WAAW,CAAC,CAAC,CAAC,CAACnD,QAAJ,CAAX;IACD,CAdH;IAAA,UAgBE,kEAAC,+DAAD;MAAA,WACE,kEAAC,cAAD;QAAA,WACE,iEAAC,IAAD;UAAM,IAAI,EAAC;QAAX,EADF,EAEE,iEAAC,KAAD;UAAA,UAAQ7D,MAAM,CAACb;QAAf,EAFF;MAAA,EADF,EAKE,iEAAC,WAAD;QAAA,UAAca,MAAM,CAACiF;MAArB,EALF;IAAA;EAhBF,EADF;AA0BD;;AAnCQtF;;AAqCT,MAAM0H,KAAK,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,kBACO7H,+DAAK,CAAC,CAAD,CADZ,6CAIA8H,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,OAJb,yBAAX;;AAOA,MAAMC,cAAc,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,aACPjI,+DAAK,CAAC,GAAD,CADE,OACOA,+DAAK,CAAC,CAAD,CADZ,sBAEAA,+DAAK,CAAC,GAAD,CAFL,yDAApB;;AAOA,MAAMkI,WAAW,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,eACFlI,+DAAK,CAAC,CAAD,CADH,OACUA,+DAAK,CAAC,GAAD,CADf,kDAIN8H,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQI,OAJP,yBAAjB;;AAWA,MAAMC,WAAW,GAAG,8EAAOvB,2DAAP;EAAA;AAAA,MAAH,YACLiB,CAAC,IACTA,CAAC,CAACzD,QAAF,GAAc,aAAYyD,CAAC,CAACC,KAAF,CAAQM,MAAO,EAAzC,GAA8C,aAAYP,CAAC,CAACC,KAAF,CAAQO,MAAO,EAF5D,cAGLR,CAAC,IAAKA,CAAC,CAACzD,QAAF,GAAa,MAAb,GAAsB,CAHvB,yGAAjB;;AASA,iEAAelE,iBAAf;;;;;;;;;;AChHA,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack:///./app/components/modals/dashboardWidgetLibraryModal/index.tsx","webpack:///./app/components/modals/dashboardWidgetLibraryModal/libraryTab.tsx","webpack:///./app/components/modals/dashboardWidgetLibraryModal/tabsButtonBar.tsx","webpack:///./app/components/modals/dashboardWidgetLibraryModal/utils.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./app/utils/withProject.tsx","webpack:///./app/views/dashboardsV2/widgetLibrary/data.tsx","webpack:///./app/views/dashboardsV2/widgetLibrary/widgetCard.tsx","webpack:///../node_modules/lodash/_baseExtremum.js","webpack:///../node_modules/lodash/_baseGt.js"],"sourcesContent":["import {Fragment, useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {assignTempId} from 'sentry/views/dashboardsV2/layoutUtils';\nimport {DashboardDetails, MAX_WIDGETS, Widget} from 'sentry/views/dashboardsV2/types';\nimport {WidgetTemplate} from 'sentry/views/dashboardsV2/widgetLibrary/data';\n\nimport Button from '../../button';\nimport ButtonBar from '../../buttonBar';\n\nimport DashboardWidgetLibraryTab from './libraryTab';\nimport {TAB, TabsButtonBar} from './tabsButtonBar';\n\nexport type DashboardWidgetLibraryModalOptions = {\n  dashboard: DashboardDetails;\n  onAddWidget: (widgets: Widget[]) => void;\n  organization: Organization;\n  customWidget?: Widget;\n  initialSelectedWidgets?: WidgetTemplate[];\n};\n\ntype Props = ModalRenderProps & DashboardWidgetLibraryModalOptions;\n\nfunction DashboardWidgetLibraryModal({\n  Header,\n  Body,\n  Footer,\n  dashboard,\n  organization,\n  customWidget,\n  initialSelectedWidgets,\n  closeModal,\n  onAddWidget,\n}: Props) {\n  const [selectedWidgets, setSelectedWidgets] = useState<WidgetTemplate[]>(\n    initialSelectedWidgets ? initialSelectedWidgets : []\n  );\n  const [errored, setErrored] = useState(false);\n\n  function handleSubmit() {\n    onAddWidget([...dashboard.widgets, ...selectedWidgets.map(assignTempId)]);\n    closeModal();\n  }\n\n  const overLimit = dashboard.widgets.length + selectedWidgets.length > MAX_WIDGETS;\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{t('Add Widget(s)')}</h4>\n      </Header>\n      <Body>\n        <TabsButtonBar\n          activeTab={TAB.Library}\n          organization={organization}\n          dashboard={dashboard}\n          selectedWidgets={selectedWidgets}\n          customWidget={customWidget}\n          onAddWidget={onAddWidget}\n        />\n        <DashboardWidgetLibraryTab\n          selectedWidgets={selectedWidgets}\n          errored={errored}\n          setSelectedWidgets={setSelectedWidgets}\n          setErrored={setErrored}\n          organization={organization}\n        />\n      </Body>\n      <Footer>\n        <ButtonBar gap={1}>\n          <Button\n            external\n            href=\"https://docs.sentry.io/product/dashboards/widget-library/\"\n          >\n            {t('Read the docs')}\n          </Button>\n          <Tooltip\n            title={tct(\n              'Exceeds max widgets ([maxWidgets]) per dashboard. Plese unselect [unselectWidgets] widget(s).',\n              {\n                maxWidgets: MAX_WIDGETS,\n                unselectWidgets:\n                  dashboard.widgets.length + selectedWidgets.length - MAX_WIDGETS,\n              }\n            )}\n            disabled={!!!overLimit}\n          >\n            <StyledButton\n              data-test-id=\"confirm-widgets\"\n              priority=\"primary\"\n              disabled={overLimit}\n              type=\"button\"\n              onClick={() => {\n                if (!!!selectedWidgets.length) {\n                  setErrored(true);\n                  return;\n                }\n                trackAdvancedAnalyticsEvent('dashboards_views.widget_library.add', {\n                  organization,\n                  num_widgets: selectedWidgets.length,\n                });\n                selectedWidgets.forEach(selectedWidget => {\n                  trackAdvancedAnalyticsEvent(\n                    'dashboards_views.widget_library.add_widget',\n                    {\n                      organization,\n                      title: selectedWidget.title,\n                    }\n                  );\n                });\n                handleSubmit();\n              }}\n            >\n              {selectedWidgets.length\n                ? tct('Add ([numWidgets])', {numWidgets: selectedWidgets.length})\n                : t('Add')}\n            </StyledButton>\n          </Tooltip>\n        </ButtonBar>\n      </Footer>\n    </Fragment>\n  );\n}\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 700px;\n  margin: 70px auto;\n`;\n\nconst StyledButton = styled(Button)`\n  min-width: 90px;\n`;\n\nexport default DashboardWidgetLibraryModal;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {WidgetType} from 'sentry/views/dashboardsV2/types';\nimport {\n  DEFAULT_WIDGETS,\n  WidgetTemplate,\n} from 'sentry/views/dashboardsV2/widgetLibrary/data';\nimport WidgetLibraryCard from 'sentry/views/dashboardsV2/widgetLibrary/widgetCard';\n\ntype Props = {\n  errored: boolean;\n  organization: Organization;\n  selectedWidgets: WidgetTemplate[];\n  setErrored: (errored: boolean) => void;\n  setSelectedWidgets: (widgets: WidgetTemplate[]) => void;\n};\n\nfunction DashboardWidgetLibraryTab({\n  selectedWidgets,\n  errored,\n  organization,\n  setSelectedWidgets,\n  setErrored,\n}: Props) {\n  let defaultWidgets = DEFAULT_WIDGETS;\n  if (!!!organization.features.includes('dashboards-releases')) {\n    defaultWidgets = defaultWidgets.filter(\n      widget => !!!(widget.widgetType === WidgetType.RELEASE)\n    );\n  }\n  return (\n    <Fragment>\n      {errored && !!!selectedWidgets.length ? (\n        <Alert type=\"error\">\n          {t(\n            'Please select at least one Widget from our Library. Alternatively, you can build a custom widget from scratch.'\n          )}\n        </Alert>\n      ) : null}\n      <WidgetLibraryGrid>\n        {defaultWidgets.map((widgetCard, index) => {\n          return (\n            <WidgetLibraryCard\n              data-test-id={`widget-library-card-${index}`}\n              key={widgetCard.title}\n              widget={widgetCard}\n              selectedWidgets={selectedWidgets}\n              setSelectedWidgets={setSelectedWidgets}\n              setErrored={setErrored}\n            />\n          );\n        })}\n      </WidgetLibraryGrid>\n    </Fragment>\n  );\n}\n\nconst WidgetLibraryGrid = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(100px, 1fr));\n  grid-template-rows: repeat(2, max-content);\n  row-gap: ${space(1.5)};\n  column-gap: ${space(2)};\n  /* 700px is the max width of the modal */\n  @media (max-width: 700px) {\n    grid-template-columns: auto;\n  }\n`;\n\nexport default DashboardWidgetLibraryTab;\n","import styled from '@emotion/styled';\n\nimport {\n  openAddDashboardWidgetModal,\n  openDashboardWidgetLibraryModal,\n} from 'sentry/actionCreators/modal';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {\n  DashboardDetails,\n  DashboardWidgetSource,\n  Widget,\n} from 'sentry/views/dashboardsV2/types';\nimport {WidgetTemplate} from 'sentry/views/dashboardsV2/widgetLibrary/data';\n\nimport Button from '../../button';\nimport ButtonBar from '../../buttonBar';\n\nimport {setWidgetLibraryVisit, shouldShowNewBadge} from './utils';\n\nexport enum TAB {\n  Library = 'library',\n  Custom = 'custom',\n}\n\ntype Props = {\n  activeTab: TAB;\n  dashboard: DashboardDetails;\n  organization: Organization;\n  customWidget?: Widget;\n  onAddWidget?: (widgets: Widget[]) => void;\n  selectedWidgets?: WidgetTemplate[];\n};\n\nexport function TabsButtonBar({\n  activeTab,\n  organization,\n  dashboard,\n  selectedWidgets,\n  customWidget,\n  onAddWidget,\n}: Props) {\n  return (\n    <StyledButtonBar active={activeTab}>\n      <CustomButton\n        barId={TAB.Custom}\n        onClick={() => {\n          if (activeTab === TAB.Custom) {\n            return;\n          }\n          trackAdvancedAnalyticsEvent('dashboards_views.widget_library.switch_tab', {\n            organization,\n            to: TAB.Custom,\n          });\n          openAddDashboardWidgetModal({\n            organization,\n            dashboard,\n            selectedWidgets,\n            widget: customWidget,\n            source: DashboardWidgetSource.LIBRARY,\n            onAddLibraryWidget: onAddWidget,\n          });\n        }}\n      >\n        {t('Custom Widget')}\n      </CustomButton>\n      <LibraryButton\n        barId={TAB.Library}\n        data-test-id=\"library-tab\"\n        onClick={() => {\n          if (activeTab === TAB.Library) {\n            return;\n          }\n          trackAdvancedAnalyticsEvent('dashboards_views.widget_library.switch_tab', {\n            organization,\n            to: TAB.Library,\n          });\n          setWidgetLibraryVisit();\n          if (defined(onAddWidget)) {\n            openDashboardWidgetLibraryModal({\n              organization,\n              dashboard,\n              customWidget,\n              initialSelectedWidgets: selectedWidgets,\n              onAddWidget,\n            });\n          }\n        }}\n      >\n        {t('Widget Library')}\n        {shouldShowNewBadge() && <FeatureBadge type=\"new\" />}\n      </LibraryButton>\n    </StyledButtonBar>\n  );\n}\n\nconst StyledButtonBar = styled(ButtonBar)`\n  display: inline-flex;\n  margin-bottom: ${space(2)};\n`;\n\nconst LibraryButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n\nconst CustomButton = styled(Button)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  line-height: 17px;\n`;\n","const WIDGET_LIBRARY_VISITS = 'dashboard-widget-library-visits';\n\nexport function shouldShowNewBadge(): boolean {\n  const visits = localStorage.getItem(WIDGET_LIBRARY_VISITS);\n  return visits === null || (parseInt(visits, 10) || 0) < 5;\n}\nexport function setWidgetLibraryVisit() {\n  const visits = localStorage.getItem(WIDGET_LIBRARY_VISITS);\n  localStorage.setItem(\n    WIDGET_LIBRARY_VISITS,\n    visits === null ? '1' : `${(parseInt(visits, 10) || 0) + 1}`\n  );\n}\n","import {LegendComponentOption} from 'echarts';\n\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport {AggregationOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(\n  value: number | null,\n  outputType: AggregationOutputType = 'number'\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  return tooltipFormatterUsingAggregateOutputType(value, outputType);\n}\n\n/**\n * Formatter for chart tooltips that takes the aggregate output type directly\n */\nexport function tooltipFormatterUsingAggregateOutputType(\n  value: number | null,\n  type: string\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    case 'size':\n      return formatBytesBase2(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  outputType: AggregationOutputType,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  return axisLabelFormatterUsingAggregateOutputType(\n    value,\n    outputType,\n    abbreviation,\n    durationUnit\n  );\n}\n\n/**\n * Formatter for chart axis labels that takes the aggregate output type directly\n */\nexport function axisLabelFormatterUsingAggregateOutputType(\n  value: number,\n  type: string,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value, durationUnit);\n    case 'size':\n      return formatBytesBase2(value, 0);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number, durationUnit?: number): string {\n  durationUnit ??= categorizeDuration(value);\n  if (value === 0) {\n    return '0';\n  }\n  switch (durationUnit) {\n    case WEEK: {\n      const label = (value / WEEK).toFixed(0);\n      return t('%swk', label);\n    }\n    case DAY: {\n      const label = (value / DAY).toFixed(0);\n      return t('%sd', label);\n    }\n    case HOUR: {\n      const label = (value / HOUR).toFixed(0);\n      return t('%shr', label);\n    }\n    case MINUTE: {\n      const label = (value / MINUTE).toFixed(0);\n      return t('%smin', label);\n    }\n    case SECOND: {\n      const label = (value / SECOND).toFixed(0);\n      return t('%ss', label);\n    }\n    default:\n      const label = value.toFixed(0);\n      return t('%sms', label);\n  }\n}\n\n/**\n * Given an array of series and an eCharts legend object,\n * finds the range of y values (min and max) based on which series is selected in the legend\n * Assumes series[0] > series[1] > ...\n * @param series Array of eCharts series\n * @param legend eCharts legend object\n * @returns\n */\nexport function findRangeOfMultiSeries(series: Series[], legend?: LegendComponentOption) {\n  let range: {max: number; min: number} | undefined;\n  if (series[0]?.data) {\n    let minSeries = series[0];\n    let maxSeries;\n    series.forEach(({seriesName, data}, idx) => {\n      if (legend?.selected?.[seriesName] !== false && data.length) {\n        minSeries = series[idx];\n        maxSeries ??= series[idx];\n      }\n    });\n    if (maxSeries?.data) {\n      const max = Math.max(\n        ...maxSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      const min = Math.min(\n        ...minSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      range = {max, min};\n    }\n  }\n  return range;\n}\n\n/**\n * Given a eCharts series and legend, returns the unit to be used on the yAxis for a duration chart\n * @param series eCharts series array\n * @param legend eCharts legend object\n * @returns\n */\nexport function getDurationUnit(\n  series: Series[],\n  legend?: LegendComponentOption\n): number {\n  let durationUnit = 0;\n  const range = findRangeOfMultiSeries(series, legend);\n  if (range) {\n    const avg = (range.max + range.min) / 2;\n    durationUnit = categorizeDuration((range.max - range.min) / 5); // avg of 5 yAxis ticks per chart\n\n    const numOfDigits = (avg / durationUnit).toFixed(0).length;\n    if (numOfDigits > 6) {\n      durationUnit = categorizeDuration(avg);\n    }\n  }\n  return durationUnit;\n}\n\n/**\n * Categorizes the duration by Second, Minute, Hour, etc\n * Ex) categorizeDuration(1200) = MINUTE\n * @param value Duration in ms\n */\nexport function categorizeDuration(value): number {\n  if (value >= WEEK) {\n    return WEEK;\n  }\n  if (value >= DAY) {\n    return DAY;\n  }\n  if (value >= HOUR) {\n    return HOUR;\n  }\n  if (value >= MINUTE) {\n    return MINUTE;\n  }\n  if (value >= SECOND) {\n    return SECOND;\n  }\n  return 1;\n}\n","import {Component} from 'react';\n\nimport SentryTypes from 'sentry/sentryTypes';\nimport {Project} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedProjectProps = {\n  project?: Project;\n};\n\n/**\n * Currently wraps component with project from context\n */\nconst withProject = <P extends InjectedProjectProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends Component<\n    Omit<P, keyof InjectedProjectProps> & Partial<InjectedProjectProps>\n  > {\n    static displayName = `withProject(${getDisplayName(WrappedComponent)})`;\n    static contextTypes = {\n      project: SentryTypes.Project,\n    };\n\n    render() {\n      const {project, ...props} = this.props;\n      return (\n        <WrappedComponent\n          {...({project: project ?? this.context.project, ...props} as P)}\n        />\n      );\n    }\n  };\n\nexport default withProject;\n","import {t} from 'sentry/locale';\nimport {TOP_N} from 'sentry/utils/discover/types';\n\nimport {DisplayType, Widget, WidgetType} from '../types';\n\nexport type WidgetTemplate = Widget & {\n  description: string;\n};\n\nexport const DEFAULT_WIDGETS: Readonly<Array<WidgetTemplate>> = [\n  {\n    id: 'duration-distribution',\n    title: t('Duration Distribution'),\n    description: t('Compare transaction durations across different percentiles.'),\n    displayType: DisplayType.LINE,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'event.type:transaction',\n        fields: [\n          'p50(transaction.duration)',\n          'p75(transaction.duration)',\n          'p95(transaction.duration)',\n        ],\n        aggregates: [\n          'p50(transaction.duration)',\n          'p75(transaction.duration)',\n          'p95(transaction.duration)',\n        ],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'high-throughput-transactions',\n    title: t('High Throughput Transactions'),\n    description: t('Top 5 transactions with the largest volume.'),\n    displayType: DisplayType.TOP_N,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'event.type:transaction',\n        fields: ['transaction', 'count()'],\n        aggregates: ['count()'],\n        columns: ['transaction'],\n        orderby: '-count()',\n      },\n    ],\n  },\n  {\n    id: 'crash-rates-recent-releases',\n    title: t('Crash Rates for Recent Releases'),\n    description: t('Percentage of crashed sessions for latest releases.'),\n    displayType: DisplayType.LINE,\n    widgetType: WidgetType.RELEASE,\n    interval: '5m',\n    limit: 8,\n    queries: [\n      {\n        name: '',\n        conditions: '',\n        fields: ['crash_rate(session)', 'release'],\n        aggregates: ['crash_rate(session)'],\n        columns: ['release'],\n        orderby: '-release',\n      },\n    ],\n  },\n  {\n    id: 'session-health',\n    title: t('Session Health'),\n    description: t('Number of abnormal, crashed, errored and healthy sessions.'),\n    displayType: DisplayType.TABLE,\n    widgetType: WidgetType.RELEASE,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: '',\n        fields: ['session.status', 'sum(session)'],\n        aggregates: ['sum(session)'],\n        columns: ['session.status'],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'lcp-country',\n    title: t('LCP by Country'),\n    description: t('Density map showing page load times by country.'),\n    displayType: DisplayType.WORLD_MAP,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'has:geo.country_code',\n        fields: ['p75(measurements.lcp)'],\n        aggregates: ['p75(measurements.lcp)'],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'miserable-users',\n    title: t('Miserable Users'),\n    description: t('Unique users who have experienced slow load times.'),\n    displayType: DisplayType.BIG_NUMBER,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: '',\n        fields: ['count_miserable(user,300)'],\n        aggregates: ['count_miserable(user,300)'],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'slow-vs-fast',\n    title: t('Slow vs. Fast Transactions'),\n    description: t('Percentage breakdown of transaction durations over and under 300ms.'),\n    displayType: DisplayType.BAR,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'event.type:transaction',\n        fields: [\n          'equation|(count_if(transaction.duration,greater,300) / count()) * 100',\n          'equation|(count_if(transaction.duration,lessOrEquals,300) / count()) * 100',\n        ],\n        aggregates: [\n          'equation|(count_if(transaction.duration,greater,300) / count()) * 100',\n          'equation|(count_if(transaction.duration,lessOrEquals,300) / count()) * 100',\n        ],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'issue-for-review',\n    title: t('Issues For Review'),\n    description: t('Most recently seen unresolved issues for review.'),\n    displayType: DisplayType.TABLE,\n    widgetType: WidgetType.ISSUE,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'is:unresolved is:for_review',\n        fields: ['issue', 'assignee', 'events', 'title'],\n        aggregates: [],\n        columns: ['issue', 'assignee', 'events', 'title'],\n        orderby: 'date',\n      },\n    ],\n  },\n  {\n    id: 'top-unhandled',\n    title: t('Top Unhandled Error Types'),\n    description: t('Most frequently encountered unhandled errors.'),\n    displayType: DisplayType.TOP_N,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'error.unhandled:true',\n        fields: ['error.type', 'count()'],\n        aggregates: ['count()'],\n        columns: ['error.type'],\n        orderby: '-count()',\n      },\n    ],\n  },\n  {\n    id: 'users-affected',\n    title: t('Users Affected by Errors'),\n    description: t('Footprint of unique users affected by errors.'),\n    displayType: DisplayType.LINE,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'event.type:error',\n        fields: ['count_unique(user)', 'count()'],\n        aggregates: ['count_unique(user)', 'count()'],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n];\n\nexport function getTopNConvertedDefaultWidgets(): Readonly<Array<WidgetTemplate>> {\n  return DEFAULT_WIDGETS.map(widget => {\n    if (widget.displayType === DisplayType.TOP_N) {\n      return {\n        ...widget,\n        displayType: DisplayType.AREA,\n        limit: TOP_N,\n      };\n    }\n    return widget;\n  });\n}\n","import {useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {IconArrow, IconGlobe, IconGraph, IconMenu, IconNumber} from 'sentry/icons';\nimport {IconGraphArea} from 'sentry/icons/iconGraphArea';\nimport {IconGraphBar} from 'sentry/icons/iconGraphBar';\nimport space from 'sentry/styles/space';\n\nimport {DisplayType} from '../types';\n\nimport {WidgetTemplate} from './data';\n\ntype Props = {\n  selectedWidgets: WidgetTemplate[];\n  setErrored: (errored: boolean) => void;\n  setSelectedWidgets: (widgets: WidgetTemplate[]) => void;\n  widget: WidgetTemplate;\n  ['data-test-id']?: string;\n};\n\nexport function getWidgetIcon(displayType: DisplayType) {\n  switch (displayType) {\n    case DisplayType.TABLE:\n      return IconMenu;\n    case DisplayType.WORLD_MAP:\n      return IconGlobe;\n    case DisplayType.BIG_NUMBER:\n      return IconNumber;\n    case DisplayType.BAR:\n      return IconGraphBar;\n    case DisplayType.TOP_N:\n      return IconArrow;\n    case DisplayType.AREA:\n      return IconGraphArea;\n    case DisplayType.LINE:\n    default:\n      return IconGraph;\n  }\n}\n\nfunction WidgetLibraryCard({\n  selectedWidgets,\n  widget,\n  setSelectedWidgets,\n  ['data-test-id']: dataTestId,\n}: Props) {\n  const [selected, setSelected] = useState(selectedWidgets.includes(widget));\n  const Icon = getWidgetIcon(widget.displayType);\n\n  return (\n    <StyledPanel\n      data-test-id={dataTestId}\n      selected={selected}\n      onClick={() => {\n        if (selected) {\n          const updatedWidgets = selectedWidgets.filter(\n            selectedWidget => widget !== selectedWidget\n          );\n          setSelectedWidgets(updatedWidgets);\n        } else {\n          const updatedWidgets = selectedWidgets.slice().concat(widget);\n          setSelectedWidgets(updatedWidgets);\n        }\n        setSelected(!!!selected);\n      }}\n    >\n      <PanelBody>\n        <TitleContainer>\n          <Icon size=\"xs\" />\n          <Title>{widget.title}</Title>\n        </TitleContainer>\n        <Description>{widget.description}</Description>\n      </PanelBody>\n    </StyledPanel>\n  );\n}\n\nconst Title = styled('div')`\n  padding-left: ${space(1)};\n  font-size: 16px;\n  line-height: 140%;\n  color: ${p => p.theme.gray500};\n`;\n\nconst TitleContainer = styled('div')`\n  padding: ${space(1.5)} ${space(2)};\n  padding-bottom: ${space(0.5)};\n  display: flex;\n  align-items: center;\n`;\n\nconst Description = styled('div')`\n  padding: 0 ${space(1)} ${space(1.5)} 36px;\n  font-size: 14px;\n  line-height: 21px;\n  color: ${p => p.theme.gray300};\n`;\n\ntype PanelProps = {\n  selected?: boolean;\n};\n\nconst StyledPanel = styled(Panel)<PanelProps>`\n  border: ${p =>\n    p.selected ? `2px solid ${p.theme.active}` : `1px solid ${p.theme.border}`};\n  margin: ${p => (p.selected ? '-1px' : 0)};\n  box-sizing: border-box;\n  box-shadow: 0px 2px 1px rgba(0, 0, 0, 0.08);\n  cursor: pointer;\n`;\n\nexport default WidgetLibraryCard;\n","var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n"],"names":["Fragment","useState","css","Tooltip","t","tct","trackAdvancedAnalyticsEvent","assignTempId","MAX_WIDGETS","Button","ButtonBar","DashboardWidgetLibraryTab","TAB","TabsButtonBar","DashboardWidgetLibraryModal","Header","Body","Footer","dashboard","organization","customWidget","initialSelectedWidgets","closeModal","onAddWidget","selectedWidgets","setSelectedWidgets","errored","setErrored","handleSubmit","widgets","map","overLimit","length","Library","maxWidgets","unselectWidgets","num_widgets","forEach","selectedWidget","title","numWidgets","modalCss","StyledButton","Alert","space","WidgetType","DEFAULT_WIDGETS","WidgetLibraryCard","defaultWidgets","features","includes","filter","widget","widgetType","RELEASE","widgetCard","index","WidgetLibraryGrid","openAddDashboardWidgetModal","openDashboardWidgetLibraryModal","FeatureBadge","defined","DashboardWidgetSource","setWidgetLibraryVisit","shouldShowNewBadge","activeTab","Custom","to","source","LIBRARY","onAddLibraryWidget","StyledButtonBar","LibraryButton","CustomButton","WIDGET_LIBRARY_VISITS","visits","localStorage","getItem","parseInt","setItem","formatBytesBase2","DAY","formatAbbreviatedNumber","formatPercentage","getDuration","HOUR","MINUTE","SECOND","WEEK","tooltipFormatter","value","outputType","tooltipFormatterUsingAggregateOutputType","type","toLocaleString","toString","axisLabelFormatter","abbreviation","durationUnit","axisLabelFormatterUsingAggregateOutputType","axisDuration","categorizeDuration","label","toFixed","findRangeOfMultiSeries","series","legend","range","data","minSeries","maxSeries","idx","seriesName","selected","max","Math","min","getDurationUnit","avg","numOfDigits","Component","SentryTypes","getDisplayName","withProject","WrappedComponent","render","project","props","context","Project","TOP_N","DisplayType","id","description","displayType","LINE","DISCOVER","interval","queries","name","conditions","fields","aggregates","columns","orderby","limit","TABLE","WORLD_MAP","BIG_NUMBER","BAR","ISSUE","getTopNConvertedDefaultWidgets","AREA","Panel","PanelBody","IconArrow","IconGlobe","IconGraph","IconMenu","IconNumber","IconGraphArea","IconGraphBar","getWidgetIcon","dataTestId","setSelected","Icon","updatedWidgets","slice","concat","Title","p","theme","gray500","TitleContainer","Description","gray300","StyledPanel","active","border"],"sourceRoot":""}