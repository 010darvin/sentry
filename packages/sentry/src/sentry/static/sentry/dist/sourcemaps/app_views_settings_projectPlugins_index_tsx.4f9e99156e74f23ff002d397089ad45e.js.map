{"version":3,"file":"chunks/app_views_settings_projectPlugins_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/plugins.tsx","webpack:///./app/stores/pluginsStore.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/withPlugins.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectPlugins/index.tsx","webpack:///./app/views/settings/projectPlugins/projectPluginRow.tsx","webpack:///./app/views/settings/projectPlugins/projectPlugins.tsx"],"sourcesContent":["import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {Client, RequestOptions} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport PluginsStore from 'sentry/stores/pluginsStore';\nimport {Plugin} from 'sentry/types';\n\nconst activeFetch = {};\n// PluginsStore always exists, so api client should be independent of component lifecycle\nconst api = new Client();\n\ntype Slugs = {\n  /**\n   * Organization slug\n   */\n  orgId: string;\n\n  /**\n   * Plugin slug\n   */\n  pluginId: string;\n\n  /**\n   * Project slug\n   */\n  projectId: string;\n};\n\ntype DoUpdateParams = Slugs & {\n  update: Partial<Plugin>;\n} & Partial<RequestOptions>;\n\nfunction doUpdate({orgId, projectId, pluginId, update, ...params}: DoUpdateParams) {\n  PluginsStore.onUpdate(pluginId, update);\n  const request = api.requestPromise(\n    `/projects/${orgId}/${projectId}/plugins/${pluginId}/`,\n    {\n      ...params,\n    }\n  );\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(() => {\n      PluginsStore.onUpdateSuccess(pluginId, update);\n    })\n    .catch(resp => {\n      const err =\n        resp && resp.responseJSON && typeof resp.responseJSON.detail === 'string'\n          ? new Error(resp.responseJSON.detail)\n          : new Error('Unable to update plugin');\n      PluginsStore.onUpdateError(pluginId, update, err);\n    });\n\n  return request;\n}\n\ntype FetchPluginsOptions = {\n  /**\n   * Reset will set loading state = true\n   */\n  resetLoading?: boolean;\n};\n\n/**\n * Fetches list of available plugins for a project\n */\nexport function fetchPlugins(\n  {orgId, projectId}: Pick<Slugs, 'orgId' | 'projectId'>,\n  options?: FetchPluginsOptions\n): Promise<Plugin[]> {\n  const path = `/projects/${orgId}/${projectId}/plugins/`;\n\n  // Make sure we throttle fetches\n  if (activeFetch[path]) {\n    return activeFetch[path];\n  }\n\n  PluginsStore.onFetchAll(options);\n  const request = api.requestPromise(path, {\n    method: 'GET',\n    includeAllArgs: true,\n  });\n\n  activeFetch[path] = request;\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(([data, _, resp]) => {\n      PluginsStore.onFetchAllSuccess(data, {\n        pageLinks: resp?.getResponseHeader('Link') ?? undefined,\n      });\n\n      return data;\n    })\n    .catch(err => {\n      PluginsStore.onFetchAllError(err);\n      throw new Error('Unable to fetch plugins');\n    })\n    .then(() => (activeFetch[path] = null));\n\n  return request;\n}\n\ntype EnableDisablePluginParams = Slugs;\n\n/**\n * Enables a plugin\n */\nexport function enablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Enabling...'));\n  return doUpdate({...params, update: {enabled: true}, method: 'POST'})\n    .then(() => addSuccessMessage(t('Plugin was enabled')))\n    .catch(() => addErrorMessage(t('Unable to enable plugin')));\n}\n\n/**\n * Disables a plugin\n */\nexport function disablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Disabling...'));\n  return doUpdate({...params, update: {enabled: false}, method: 'DELETE'})\n    .then(() => addSuccessMessage(t('Plugin was disabled')))\n    .catch(() => addErrorMessage(t('Unable to disable plugin')));\n}\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport {Plugin} from 'sentry/types';\n\ninterface InternalDefinition {\n  plugins: Map<string, Plugin> | null;\n  state: {\n    error: Error | null;\n    loading: boolean;\n    pageLinks: string | null;\n    plugins: Plugin[];\n  };\n  updating: Map<string, Plugin>;\n}\n\ninterface PluginStoreDefinition extends StoreDefinition, InternalDefinition {\n  onFetchAll: (options?: {resetLoading?: boolean}) => void;\n  onFetchAllError: (err) => void;\n  onFetchAllSuccess: (data: Plugin[], links: {pageLinks?: string}) => void;\n\n  onUpdate: (id: string, updateObj: Partial<Plugin>) => void;\n  onUpdateError: (id: string, _updateObj: Partial<Plugin>, err) => void;\n  onUpdateSuccess: (id: string, _updateObj: Partial<Plugin>) => void;\n}\n\nconst defaultState = {\n  loading: true,\n  plugins: [],\n  error: null,\n  pageLinks: null,\n};\n\nconst storeConfig: PluginStoreDefinition = {\n  plugins: null,\n  state: {...defaultState},\n  updating: new Map(),\n\n  reset() {\n    // reset our state\n    this.plugins = null;\n    this.state = {...defaultState};\n    this.updating = new Map();\n    return this.state;\n  },\n\n  getInitialState() {\n    return this.getState();\n  },\n\n  getState() {\n    const {plugins: _plugins, ...state} = this.state;\n\n    return {\n      ...state,\n      plugins: this.plugins ? Array.from(this.plugins.values()) : [],\n    };\n  },\n\n  init() {\n    this.reset();\n  },\n\n  triggerState() {\n    this.trigger(this.getState());\n  },\n\n  onFetchAll({resetLoading} = {}) {\n    if (resetLoading) {\n      this.state.loading = true;\n      this.state.error = null;\n      this.plugins = null;\n    }\n\n    this.triggerState();\n  },\n\n  onFetchAllSuccess(data, {pageLinks}) {\n    this.plugins = new Map(data.map(plugin => [plugin.id, plugin]));\n    this.state.pageLinks = pageLinks || null;\n    this.state.loading = false;\n    this.triggerState();\n  },\n\n  onFetchAllError(err) {\n    this.plugins = null;\n    this.state.loading = false;\n    this.state.error = err;\n    this.triggerState();\n  },\n\n  onUpdate(id: string, updateObj: Partial<Plugin>) {\n    if (!this.plugins) {\n      return;\n    }\n\n    const plugin = this.plugins.get(id);\n    if (!plugin) {\n      return;\n    }\n    const newPlugin = {\n      ...plugin,\n      ...updateObj,\n    };\n\n    this.plugins.set(id, newPlugin);\n    this.updating.set(id, plugin);\n    this.triggerState();\n  },\n\n  onUpdateSuccess(id: string, _updateObj: Partial<Plugin>) {\n    this.updating.delete(id);\n  },\n\n  onUpdateError(id: string, _updateObj: Partial<Plugin>, err) {\n    const origPlugin = this.updating.get(id);\n    if (!origPlugin || !this.plugins) {\n      return;\n    }\n\n    this.plugins.set(id, origPlugin);\n    this.updating.delete(id);\n    this.state.error = err;\n    this.triggerState();\n  },\n};\n\nconst PluginStore = createStore(storeConfig);\nexport default PluginStore;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import {Component} from 'react';\n\nimport {fetchPlugins} from 'sentry/actionCreators/plugins';\nimport PluginsStore from 'sentry/stores/pluginsStore';\nimport {Organization, Plugin, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProject from 'sentry/utils/withProject';\n\ntype WithPluginProps = {\n  organization: Organization;\n  project?: Project;\n};\n\ntype State = {\n  loading: boolean;\n  plugins: Plugin[];\n};\n\n/**\n * Higher order component that fetches list of plugins and\n * passes PluginsStore to component as `plugins`\n */\nfunction withPlugins<P extends WithPluginProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithPlugins extends Component<Omit<P, keyof 'plugins'> & WithPluginProps, State> {\n    static displayName = `withPlugins(${getDisplayName(WrappedComponent)})`;\n    state = {plugins: [], loading: true};\n\n    componentDidMount() {\n      this.fetchPlugins();\n    }\n\n    componentDidUpdate(prevProps, _prevState, prevContext) {\n      const {organization, project} = this.props;\n\n      // Only fetch plugins when a org slug or project slug has changed\n      const prevOrg = prevProps.organization || prevContext?.organization;\n      const prevProject = prevProps.project || prevContext?.project;\n\n      // If previous org/project is undefined then it means:\n      // the HoC has mounted, `fetchPlugins` has been called (via cDM), and\n      // store was updated. We don't need to fetchPlugins again (or it will cause an infinite loop)\n      //\n      // This is for the unusual case where component is mounted and receives a new org/project prop\n      // e.g. when switching projects via breadcrumbs in settings.\n      if (!defined(prevProject) || !defined(prevOrg)) {\n        return;\n      }\n\n      const isOrgSame = prevOrg.slug === organization.slug;\n      const isProjectSame = prevProject.slug === project?.slug;\n\n      // Don't do anything if org and project are the same\n      if (isOrgSame && isProjectSame) {\n        return;\n      }\n\n      this.fetchPlugins();\n    }\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = PluginsStore.listen(({plugins, loading}: State) => {\n      // State is destructured as store updates contain additional keys\n      // that are not exposed by this HoC\n      this.setState({plugins, loading});\n    }, undefined);\n\n    fetchPlugins() {\n      const {organization, project} = this.props;\n\n      if (!project || !organization) {\n        return;\n      }\n\n      fetchPlugins({projectId: project.slug, orgId: organization.slug});\n    }\n\n    render() {\n      return (\n        <WrappedComponent {...(this.props as P & WithPluginProps)} plugins={this.state} />\n      );\n    }\n  }\n  return withOrganization(withProject(WithPlugins));\n}\n\nexport default withPlugins;\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Component, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {disablePlugin, enablePlugin, fetchPlugins} from 'sentry/actionCreators/plugins';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Organization, Plugin, Project} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\nimport withPlugins from 'sentry/utils/withPlugins';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\nimport ProjectPlugins from './projectPlugins';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n  plugins: {\n    error: React.ComponentProps<typeof ProjectPlugins>['error'];\n    loading: boolean;\n    plugins: Plugin[];\n  };\n  project: Project;\n};\n\nclass ProjectPluginsContainer extends Component<Props> {\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    const plugins = await fetchPlugins(this.props.params);\n    const installCount = plugins.filter(\n      plugin => plugin.hasConfiguration && plugin.enabled\n    ).length;\n    trackIntegrationAnalytics(\n      'integrations.index_viewed',\n      {\n        integrations_installed: installCount,\n        view: 'legacy_integrations',\n        organization: this.props.organization,\n      },\n      {startSession: true}\n    );\n  };\n\n  handleChange = (pluginId: string, shouldEnable: boolean) => {\n    const {projectId, orgId} = this.props.params;\n    const actionCreator = shouldEnable ? enablePlugin : disablePlugin;\n    actionCreator({projectId, orgId, pluginId});\n  };\n\n  render() {\n    const {loading, error, plugins} = this.props.plugins || {};\n    const {orgId} = this.props.params;\n\n    const title = t('Legacy Integrations');\n\n    return (\n      <Fragment>\n        <SentryDocumentTitle title={title} orgSlug={orgId} />\n        <SettingsPageHeader title={title} />\n        <PermissionAlert />\n\n        <ProjectPlugins\n          {...this.props}\n          onChange={this.handleChange}\n          loading={loading}\n          error={error}\n          plugins={plugins}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default withPlugins(ProjectPluginsContainer);\n","import {PureComponent} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport Switch from 'sentry/components/switchButton';\nimport {t} from 'sentry/locale';\nimport PluginIcon from 'sentry/plugins/components/pluginIcon';\nimport {Organization, Plugin, Project} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst grayText = css`\n  color: #979ba0;\n`;\n\ntype Props = {\n  onChange: (id: string, enabled: boolean) => void;\n  organization: Organization;\n  project: Project;\n} & Plugin &\n  Pick<RouteComponentProps<{}, {}>, 'params' | 'routes'>;\n\nclass ProjectPluginRow extends PureComponent<Props> {\n  handleChange = () => {\n    const {onChange, id, enabled} = this.props;\n    onChange(id, !enabled);\n    const eventKey = !enabled ? 'integrations.enabled' : 'integrations.disabled';\n    trackIntegrationAnalytics(eventKey, {\n      integration: id,\n      integration_type: 'plugin',\n      view: 'legacy_integrations',\n      organization: this.props.organization,\n    });\n  };\n\n  render() {\n    const {id, name, slug, version, author, hasConfiguration, enabled, canDisable} =\n      this.props;\n\n    const configureUrl = recreateRoute(id, this.props);\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => {\n          const LinkOrSpan = hasAccess ? Link : 'span';\n\n          return (\n            <PluginItem key={id} className={slug}>\n              <PluginInfo>\n                <StyledPluginIcon size={48} pluginId={id} />\n                <PluginDescription>\n                  <PluginName>\n                    {`${name} `}\n                    {getDynamicText({\n                      value: (\n                        <Version>{version ? `v${version}` : <em>{t('n/a')}</em>}</Version>\n                      ),\n                      fixed: <Version>v10</Version>,\n                    })}\n                  </PluginName>\n                  <div>\n                    {author && (\n                      <ExternalLink css={grayText} href={author.url}>\n                        {author.name}\n                      </ExternalLink>\n                    )}\n                    {hasConfiguration && (\n                      <span>\n                        {' '}\n                        &middot;{' '}\n                        <LinkOrSpan css={grayText} to={configureUrl}>\n                          {t('Configure plugin')}\n                        </LinkOrSpan>\n                      </span>\n                    )}\n                  </div>\n                </PluginDescription>\n              </PluginInfo>\n              <Switch\n                size=\"lg\"\n                isDisabled={!hasAccess || !canDisable}\n                isActive={enabled}\n                toggle={this.handleChange}\n              />\n            </PluginItem>\n          );\n        }}\n      </Access>\n    );\n  }\n}\n\nexport default withOrganization(ProjectPluginRow);\n\nconst PluginItem = styled('div')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst PluginDescription = styled('div')`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst PluginInfo = styled('div')`\n  display: flex;\n  flex: 1;\n  line-height: 24px;\n`;\n\nconst PluginName = styled('div')`\n  font-size: 16px;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: 16px;\n`;\n\n// Keeping these colors the same from old integrations page\nconst Version = styled('span')`\n  color: #babec2;\n`;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport Access from 'sentry/components/acl/access';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {Plugin, Project} from 'sentry/types';\nimport RouteError from 'sentry/views/routeError';\n\nimport ProjectPluginRow from './projectPluginRow';\n\ntype Props = {\n  error: React.ComponentProps<typeof RouteError>['error'];\n  loading: boolean;\n  onChange: React.ComponentProps<typeof ProjectPluginRow>['onChange'];\n  plugins: Plugin[];\n  project: Project;\n} & RouteComponentProps<{orgId: string}, {}>;\n\nclass ProjectPlugins extends Component<Props> {\n  render() {\n    const {plugins, loading, error, onChange, routes, params, project} = this.props;\n    const {orgId} = this.props.params;\n    const hasError = error;\n    const isLoading = !hasError && loading;\n\n    if (hasError) {\n      return <RouteError error={error} />;\n    }\n\n    if (isLoading) {\n      return <LoadingIndicator />;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>\n          <div>{t('Legacy Integration')}</div>\n          <div>{t('Enabled')}</div>\n        </PanelHeader>\n        <PanelBody>\n          <PanelAlert type=\"warning\">\n            <Access access={['org:integrations']}>\n              {({hasAccess}) =>\n                hasAccess\n                  ? tct(\n                      \"Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available. Visit the [link:organization integrations] settings to manage them.\",\n                      {\n                        link: <Link to={`/settings/${orgId}/integrations`} />,\n                      }\n                    )\n                  : t(\n                      \"Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available.\"\n                    )\n              }\n            </Access>\n          </PanelAlert>\n\n          {plugins\n            .filter(p => {\n              return !p.isHidden;\n            })\n            .map(plugin => (\n              <PanelItem key={plugin.id}>\n                <ProjectPluginRow\n                  params={params}\n                  routes={routes}\n                  project={project}\n                  {...plugin}\n                  onChange={onChange}\n                />\n              </PanelItem>\n            ))}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default ProjectPlugins;\n"],"names":["addErrorMessage","addLoadingMessage","addSuccessMessage","Client","t","PluginsStore","activeFetch","api","doUpdate","orgId","projectId","pluginId","update","params","onUpdate","request","requestPromise","then","onUpdateSuccess","catch","resp","err","responseJSON","detail","Error","onUpdateError","fetchPlugins","options","path","onFetchAll","method","includeAllArgs","data","_","onFetchAllSuccess","pageLinks","getResponseHeader","undefined","onFetchAllError","enablePlugin","enabled","disablePlugin","createStore","defaultState","loading","plugins","error","storeConfig","state","updating","Map","reset","getInitialState","getState","_plugins","Array","from","values","init","triggerState","trigger","resetLoading","map","plugin","id","updateObj","get","newPlugin","set","_updateObj","delete","origPlugin","PluginStore","findLastIndex","replaceRouterParams","recreateRoute","to","routes","location","stepBack","paths","lastRootIndex","routeIndex","indexOf","slice","baseRoute","search","hash","fullRoute","join","Component","defined","getDisplayName","withOrganization","withProject","withPlugins","WrappedComponent","WithPlugins","listen","setState","componentDidMount","componentDidUpdate","prevProps","_prevState","prevContext","organization","project","props","prevOrg","prevProject","isOrgSame","slug","isProjectSame","componentWillUnmount","unsubscribe","render","Access","Alert","PermissionAlert","access","hasAccess","Fragment","SentryDocumentTitle","trackIntegrationAnalytics","SettingsPageHeader","ProjectPlugins","ProjectPluginsContainer","installCount","filter","hasConfiguration","length","integrations_installed","view","startSession","shouldEnable","actionCreator","fetchData","title","handleChange","PureComponent","css","ExternalLink","Link","Switch","PluginIcon","getDynamicText","grayText","ProjectPluginRow","onChange","eventKey","integration","integration_type","name","version","author","canDisable","configureUrl","LinkOrSpan","value","fixed","url","PluginItem","PluginDescription","PluginInfo","PluginName","StyledPluginIcon","Version","LoadingIndicator","Panel","PanelAlert","PanelBody","PanelHeader","PanelItem","tct","RouteError","hasError","isLoading","link","p","isHidden"],"sourceRoot":""}