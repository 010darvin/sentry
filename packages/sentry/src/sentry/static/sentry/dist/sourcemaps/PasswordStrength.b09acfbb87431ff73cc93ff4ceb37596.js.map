{"version":3,"file":"chunks/PasswordStrength.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AACA,MAAMQ,SAAS,GAAG,CAAlB;;AAiBA,MAAMC,gBAAgB,GAAG,QAIZ;EAAA,IAJa;IACxBC,KADwB;IAExBC,MAAM,GAAG,CAAC,WAAD,EAAc,WAAd,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,aAA7C,CAFe;IAGxBC,MAAM,GAAG,CAACL,iEAAD,EAAeA,iEAAf,EAA6BA,oEAA7B,EAA8CA,mEAA9C,EAA8DA,mEAA9D;EAHe,CAIb;;EACX,IAAIG,KAAK,KAAK,EAAd,EAAkB;IAChB,OAAO,IAAP;EACD;;EAED,MAAMM,MAAM,GAAGZ,6CAAM,CAACM,KAAD,CAArB;;EAEA,IAAI,CAACM,MAAL,EAAa;IACX,OAAO,IAAP;EACD;;EAED,MAAM;IAACC;EAAD,IAAUD,MAAhB;EACA,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAY,CAACH,KAAK,GAAG,CAAT,IAAcT,SAAf,GAA4B,GAAvC,CAAhB;EAEA,MAAMa,MAAM,gBAAGnB,mDAAH,gBACIU,MAAM,CAACK,KAAD,CADV,aAEDC,OAFC,0CAAZ;EAKA,OACE,iEAAC,2CAAD;IAAA,WACE,gEAAC,gBAAD;MACE,IAAI,EAAC,aADP;MAEE,iBAAeD,KAFjB;MAGE,iBAAe,CAHjB;MAIE,iBAAe,GAJjB;MAAA,UAME,gEAAC,mBAAD;QAAqB,GAAG,EAAEI;MAA1B;IANF,EADF,EASE,gEAAC,aAAD;MAAA,UACGhB,kDAAG,CAAC,uBAAD,EAA0B;QAC5BiB,SAAS,EAAE,gEAAC,SAAD;UAAA,UAAYX,MAAM,CAACM,KAAD;QAAlB;MADiB,CAA1B;IADN,EATF;EAAA,EADF;AAiBD,CAxCD;;AAAMR;;AA0CN,MAAMc,gBAAgB,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,gBACNhB,kEADM,sEAAtB;;AAOA,MAAMkB,mBAAmB,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAzB;;AAIA,MAAMC,aAAa,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,gCAEHpB,+DAAK,CAAC,IAAD,CAFF,aAGRC,kEAHQ,yBAAnB;;AAMA,MAAMqB,SAAS,GAAG,8EAAO,QAAP;EAAA;AAAA,MAAH,WACJC,CAAC,IAAIA,CAAC,CAACtB,KAAF,CAAQuB,KADT,yBAAf;;AAIA,iEAAerB,gBAAf;AAEA;AACA;AACA;AACA;AACA;;AACO,MAAMsB,QAAQ,GAAG;EAAA,IAAC;IAACC,KAAD;IAAQC;EAAR,CAAD;EAAA,OACtBA,OAAO,IACPD,KADA,IAEAA,KAAK,CAACE,gBAAN,CACE,OADF,EAEE/B,sDAAQ,CAACgC,CAAC,IAAI;IACZlC,iDAAM,CAAC,gEAAC,gBAAD;MAAkB,KAAK,EAAEkC,CAAC,CAACC,MAAF,CAAS1B;IAAlC,EAAD,EAA8CuB,OAA9C,CAAN;EACD,CAFO,CAFV,CAHsB;AAAA,CAAjB","sources":["webpack:///./app/components/passwordStrength.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {render} from 'react-dom';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport throttle from 'lodash/throttle';\nimport zxcvbn from 'zxcvbn';\n\nimport {tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport theme from 'sentry/utils/theme';\n\n/**\n * NOTE: Do not import this component synchronously. The zxcvbn library is\n * relatively large. This component should be loaded async as a split chunk.\n */\n\n/**\n * The maximum score that zxcvbn reports\n */\nconst MAX_SCORE = 5;\n\ntype Props = {\n  /**\n   * The password value.\n   */\n  value: string;\n  /**\n   * The color to make the progress bar for each strength level. 5 levels.\n   */\n  colors?: [string, string, string, string, string];\n  /**\n   * A set of labels to display for each password strength level. 5 levels.\n   */\n  labels?: [string, string, string, string, string];\n};\n\nconst PasswordStrength = ({\n  value,\n  labels = ['Very Weak', 'Very Weak', 'Weak', 'Strong', 'Very Strong'],\n  colors = [theme.red300, theme.red300, theme.yellow300, theme.green300, theme.green300],\n}: Props) => {\n  if (value === '') {\n    return null;\n  }\n\n  const result = zxcvbn(value);\n\n  if (!result) {\n    return null;\n  }\n\n  const {score} = result;\n  const percent = Math.round(((score + 1) / MAX_SCORE) * 100);\n\n  const styles = css`\n    background: ${colors[score]};\n    width: ${percent}%;\n  `;\n\n  return (\n    <Fragment>\n      <StrengthProgress\n        role=\"progressbar\"\n        aria-valuenow={score}\n        aria-valuemin={0}\n        aria-valuemax={100}\n      >\n        <StrengthProgressBar css={styles} />\n      </StrengthProgress>\n      <StrengthLabel>\n        {tct('Strength: [textScore]', {\n          textScore: <ScoreText>{labels[score]}</ScoreText>,\n        })}\n      </StrengthLabel>\n    </Fragment>\n  );\n};\n\nconst StrengthProgress = styled('div')`\n  background: ${theme.gray200};\n  height: 8px;\n  border-radius: 2px;\n  overflow: hidden;\n`;\n\nconst StrengthProgressBar = styled('div')`\n  height: 100%;\n`;\n\nconst StrengthLabel = styled('div')`\n  font-size: 0.8em;\n  margin-top: ${space(0.25)};\n  color: ${theme.gray400};\n`;\n\nconst ScoreText = styled('strong')`\n  color: ${p => p.theme.black};\n`;\n\nexport default PasswordStrength;\n\n/**\n * This is a shim that allows the password strength component to be used\n * outside of our main react application. Mostly useful since all of our\n * registration pages aren't in the react app.\n */\nexport const attachTo = ({input, element}) =>\n  element &&\n  input &&\n  input.addEventListener(\n    'input',\n    throttle(e => {\n      render(<PasswordStrength value={e.target.value} />, element);\n    })\n  );\n"],"names":["Fragment","render","css","throttle","zxcvbn","tct","space","theme","MAX_SCORE","PasswordStrength","value","labels","colors","red300","yellow300","green300","result","score","percent","Math","round","styles","textScore","StrengthProgress","gray200","StrengthProgressBar","StrengthLabel","gray400","ScoreText","p","black","attachTo","input","element","addEventListener","e","target"],"sourceRoot":""}