{"version":3,"file":"chunks/app_components_modals_widgetViewerModal_utils_tsx-app_views_dashboardsV2_widgetCard_widgetCar-7a3063.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/metrics.tsx","webpack:///./app/actionCreators/sessions.tsx","webpack:///./app/components/charts/simpleTableChart.tsx","webpack:///./app/components/dashboards/widgetQueriesForm.tsx","webpack:///./app/components/dashboards/widgetQueryFields.tsx","webpack:///./app/components/modals/widgetViewerModal/utils.tsx","webpack:///./app/utils/dashboards/issueFieldRenderers.tsx","webpack:///./app/views/dashboardsV2/datasetConfig/base.tsx","webpack:///./app/views/dashboardsV2/datasetConfig/errorsAndTransactions.tsx","webpack:///./app/views/dashboardsV2/datasetConfig/issues.tsx","webpack:///./app/views/dashboardsV2/datasetConfig/releases.tsx","webpack:///./app/views/dashboardsV2/utils.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/buildStep.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/filterResultsStep/eventsSearchBar.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/filterResultsStep/issuesSearchBar.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/filterResultsStep/releaseSearchBar.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/sortByStep/index.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/sortByStep/sortBySelectors.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/issueWidget/utils.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/utils.tsx","webpack:///./app/views/dashboardsV2/widgetCard/chart.tsx","webpack:///./app/views/dashboardsV2/widgetCard/dashboardsMEPContext.tsx","webpack:///./app/views/dashboardsV2/widgetCard/genericWidgetQueries.tsx","webpack:///./app/views/dashboardsV2/widgetCard/issueWidgetCard.tsx","webpack:///./app/views/dashboardsV2/widgetCard/issueWidgetQueries.tsx","webpack:///./app/views/dashboardsV2/widgetCard/releaseWidgetQueries.tsx","webpack:///./app/views/dashboardsV2/widgetCard/transformSessionsResponseToSeries.tsx","webpack:///./app/views/dashboardsV2/widgetCard/transformSessionsResponseToTable.tsx","webpack:///./app/views/dashboardsV2/widgetCard/widgetCardChartContainer.tsx","webpack:///./app/views/dashboardsV2/widgetCard/widgetQueries.tsx"],"sourcesContent":["import {Client, ResponseMeta} from 'sentry/api';\nimport {getInterval} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {DateString, MetricsApiResponse, Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport type DoMetricsRequestOptions = {\n  field: string[];\n  orgSlug: Organization['slug'];\n  cursor?: string;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  groupBy?: string[];\n  includeAllArgs?: boolean;\n  includeSeries?: number;\n  includeTotals?: number;\n  interval?: string;\n  limit?: number;\n  orderBy?: string;\n  project?: Readonly<number[]>;\n  query?: string;\n  start?: DateString;\n  statsPeriod?: string | null;\n  statsPeriodEnd?: string;\n  statsPeriodStart?: string;\n};\n\nexport const doMetricsRequest = (\n  api: Client,\n  {\n    field,\n    orgSlug,\n    cursor,\n    environment,\n    groupBy,\n    includeSeries,\n    includeTotals,\n    interval,\n    limit,\n    orderBy,\n    project,\n    query,\n    includeAllArgs = false,\n    statsPeriodStart,\n    statsPeriodEnd,\n    ...dateTime\n  }: DoMetricsRequestOptions\n): Promise<MetricsApiResponse | [MetricsApiResponse, string, ResponseMeta]> => {\n  const {start, end, statsPeriod} = normalizeDateTimeParams(dateTime, {\n    allowEmptyPeriod: true,\n  });\n\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      field: field.filter(f => !!f),\n      cursor,\n      end,\n      environment,\n      groupBy: groupBy?.filter(g => !!g),\n      includeSeries,\n      includeTotals,\n      interval: interval || getInterval({start, end, period: statsPeriod}),\n      query: query || undefined,\n      per_page: limit,\n      project,\n      orderBy,\n      start,\n      statsPeriod,\n      statsPeriodStart,\n      statsPeriodEnd,\n    }).filter(([, value]) => defined(value) && value !== '')\n  );\n\n  const pathname = `/organizations/${orgSlug}/metrics/data/`;\n\n  return api.requestPromise(pathname, {includeAllArgs, query: urlQuery});\n};\n","import {Client} from 'sentry/api';\nimport {getInterval} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {DateString, Organization, SessionApiResponse} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport type DoSessionsRequestOptions = {\n  field: string[];\n  orgSlug: Organization['slug'];\n  cursor?: string;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  groupBy?: string[];\n  includeAllArgs?: boolean;\n  interval?: string;\n  limit?: number;\n  orderBy?: string;\n  project?: Readonly<number[]>;\n  query?: string;\n  start?: DateString;\n  statsPeriod?: string | null;\n  statsPeriodEnd?: string;\n  statsPeriodStart?: string;\n};\n\nexport const doSessionsRequest = (\n  api: Client,\n  {\n    field,\n    orgSlug,\n    cursor,\n    environment,\n    groupBy,\n    interval,\n    project,\n    orderBy,\n    query,\n    includeAllArgs = false,\n    statsPeriodStart,\n    statsPeriodEnd,\n    limit,\n    ...dateTime\n  }: DoSessionsRequestOptions\n): Promise<SessionApiResponse> => {\n  const {start, end, statsPeriod} = normalizeDateTimeParams(dateTime, {\n    allowEmptyPeriod: true,\n  });\n\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      field: field.filter(f => !!f),\n      cursor,\n      end,\n      environment,\n      groupBy: groupBy?.filter(g => !!g),\n      interval: interval || getInterval({start, end, period: statsPeriod}),\n      orderBy,\n      per_page: limit,\n      query: query || undefined,\n      project,\n      start,\n      statsPeriod,\n      statsPeriodStart,\n      statsPeriodEnd,\n    }).filter(([, value]) => defined(value) && value !== '')\n  );\n\n  return api.requestPromise(`/organizations/${orgSlug}/sessions/`, {\n    includeAllArgs,\n    query: urlQuery,\n  });\n};\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport PanelTable, {\n  PanelTableHeader,\n  PanelTableProps,\n} from 'sentry/components/panels/panelTable';\nimport Tooltip from 'sentry/components/tooltip';\nimport Truncate from 'sentry/components/truncate';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableData, TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport EventView, {MetaType} from 'sentry/utils/discover/eventView';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {fieldAlignment} from 'sentry/utils/discover/fields';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport TopResultsIndicator from 'sentry/views/eventsV2/table/topResultsIndicator';\nimport {decodeColumnOrder} from 'sentry/views/eventsV2/utils';\n\ntype Props = {\n  eventView: EventView;\n  fieldAliases: string[];\n  fields: string[];\n  loading: boolean;\n  location: Location;\n  organization: Organization;\n  title: string;\n  className?: string;\n  data?: TableData['data'];\n  fieldHeaderMap?: Record<string, string>;\n  getCustomFieldRenderer?: (\n    field: string,\n    meta: MetaType,\n    organization?: Organization\n  ) => ReturnType<typeof getFieldRenderer> | null;\n  loader?: PanelTableProps['loader'];\n  metadata?: TableData['meta'];\n  stickyHeaders?: boolean;\n  topResultsIndicators?: number;\n};\n\nfunction SimpleTableChart({\n  className,\n  loading,\n  eventView,\n  fields,\n  metadata,\n  data,\n  title,\n  fieldHeaderMap,\n  stickyHeaders,\n  getCustomFieldRenderer,\n  organization,\n  topResultsIndicators,\n  location,\n  fieldAliases,\n  loader,\n}: Props) {\n  function renderRow(\n    index: number,\n    row: TableDataRow,\n    tableMeta: NonNullable<TableData['meta']>,\n    columns: ReturnType<typeof decodeColumnOrder>\n  ) {\n    return columns.map((column, columnIndex) => {\n      const fieldRenderer =\n        getCustomFieldRenderer?.(column.key, tableMeta, organization) ??\n        getFieldRenderer(column.key, tableMeta);\n\n      const unit = tableMeta.units?.[column.key];\n      return (\n        <TableCell key={`${index}-${columnIndex}:${column.name}`}>\n          {topResultsIndicators && columnIndex === 0 && (\n            <TopResultsIndicator count={topResultsIndicators} index={index} />\n          )}\n          {fieldRenderer(row, {organization, location, eventView, unit})}\n        </TableCell>\n      );\n    });\n  }\n\n  const meta = metadata ?? {};\n  const usingEvents = organization.features.includes(\n    'discover-frontend-use-events-endpoint'\n  );\n  const columns = decodeColumnOrder(\n    fields.map((field, index) => ({field, alias: fieldAliases[index]})),\n    usingEvents\n  );\n\n  return (\n    <Fragment>\n      {title && <h4>{title}</h4>}\n      <StyledPanelTable\n        className={className}\n        isLoading={loading}\n        loader={loader}\n        headers={columns.map((column, index) => {\n          const align = fieldAlignment(column.name, column.type, meta);\n          const header =\n            column.column.alias || (fieldHeaderMap?.[column.key] ?? column.name);\n          return (\n            <HeadCell key={index} align={align}>\n              <Tooltip title={header}>\n                <StyledTruncate value={header} maxLength={30} expandable={false} />\n              </Tooltip>\n            </HeadCell>\n          );\n        })}\n        isEmpty={!data?.length}\n        stickyHeaders={stickyHeaders}\n        disablePadding\n      >\n        {data?.map((row, index) => renderRow(index, row, meta, columns))}\n      </StyledPanelTable>\n    </Fragment>\n  );\n}\n\nconst StyledTruncate = styled(Truncate)`\n  white-space: nowrap;\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  border-radius: 0;\n  border-left: 0;\n  border-right: 0;\n  border-bottom: 0;\n\n  margin: 0;\n  ${/* sc-selector */ PanelTableHeader} {\n    height: min-content;\n  }\n`;\n\ntype HeadCellProps = {\n  align: string | undefined;\n};\nconst HeadCell = styled('div')<HeadCellProps>`\n  ${(p: HeadCellProps) => (p.align ? `text-align: ${p.align};` : '')}\n  padding: ${space(1)} ${space(3)};\n`;\n\nexport const TableCell = styled('div')`\n  padding: ${space(1)} ${space(3)};\n`;\n\nexport default withOrganization(SimpleTableChart);\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport Button from 'sentry/components/button';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport Field from 'sentry/components/forms/field';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport Input from 'sentry/components/input';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {IconAdd, IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters, SelectValue} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {\n  explodeField,\n  generateFieldAsString,\n  getColumnsAndAggregatesAsStrings,\n  isEquation,\n  stripDerivedMetricsPrefix,\n  stripEquationPrefix,\n} from 'sentry/utils/discover/fields';\nimport {Widget, WidgetQuery, WidgetType} from 'sentry/views/dashboardsV2/types';\nimport {ReleaseSearchBar} from 'sentry/views/dashboardsV2/widgetBuilder/buildSteps/filterResultsStep/releaseSearchBar';\nimport {\n  DISABLED_SORT,\n  TAG_SORT_DENY_LIST,\n} from 'sentry/views/dashboardsV2/widgetBuilder/releaseWidget/fields';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\n\nimport WidgetQueryFields from './widgetQueryFields';\n\nexport const generateOrderOptions = ({\n  aggregates,\n  columns,\n  widgetType,\n  widgetBuilderNewDesign = false,\n}: {\n  aggregates: string[];\n  columns: string[];\n  widgetType: WidgetType;\n  widgetBuilderNewDesign?: boolean;\n}): SelectValue<string>[] => {\n  const isRelease = widgetType === WidgetType.RELEASE;\n  const options: SelectValue<string>[] = [];\n  let equations = 0;\n  (isRelease\n    ? [...aggregates.map(stripDerivedMetricsPrefix), ...columns]\n    : [...aggregates, ...columns]\n  )\n    .filter(field => !!field)\n    .filter(field => !DISABLED_SORT.includes(field))\n    .filter(field => (isRelease ? !TAG_SORT_DENY_LIST.includes(field) : true))\n    .forEach(field => {\n      let alias;\n      const label = stripEquationPrefix(field);\n      // Equations are referenced via a standard alias following this pattern\n      if (isEquation(field)) {\n        alias = `equation[${equations}]`;\n        equations += 1;\n      }\n\n      if (widgetBuilderNewDesign) {\n        options.push({label, value: alias ?? field});\n        return;\n      }\n\n      options.push({\n        label: t('%s asc', label),\n        value: alias ?? field,\n      });\n\n      options.push({\n        label: t('%s desc', label),\n        value: `-${alias ?? field}`,\n      });\n    });\n\n  return options;\n};\n\ntype Props = {\n  canAddSearchConditions: boolean;\n  displayType: Widget['displayType'];\n  fieldOptions: ReturnType<typeof generateFieldOptions>;\n  handleAddSearchConditions: () => void;\n  handleDeleteQuery: (queryIndex: number) => void;\n  onChange: (queryIndex: number, widgetQuery: WidgetQuery) => void;\n  organization: Organization;\n  queries: WidgetQuery[];\n  selection: PageFilters;\n  errors?: Array<Record<string, any>>;\n  widgetType?: Widget['widgetType'];\n};\n\n/**\n * Contain widget queries interactions and signal changes via the onChange\n * callback. This component's state should live in the parent.\n */\nclass WidgetQueriesForm extends Component<Props> {\n  componentWillUnmount() {\n    window.clearTimeout(this.blurTimeout);\n  }\n\n  blurTimeout: number | undefined = undefined;\n\n  // Handle scalar field values changing.\n  handleFieldChange = (queryIndex: number, field: string) => {\n    const {queries, onChange} = this.props;\n    const widgetQuery = queries[queryIndex];\n\n    return function handleChange(value: string) {\n      const newQuery = {...widgetQuery, [field]: value};\n      onChange(queryIndex, newQuery);\n    };\n  };\n\n  getFirstQueryError(key: string) {\n    const {errors} = this.props;\n\n    if (!errors) {\n      return undefined;\n    }\n\n    return errors.find(queryError => queryError && queryError[key]);\n  }\n\n  renderSearchBar(widgetQuery: WidgetQuery, queryIndex: number) {\n    const {organization, selection, widgetType} = this.props;\n\n    return widgetType === WidgetType.RELEASE ? (\n      <ReleaseSearchBar\n        organization={organization}\n        widgetQuery={widgetQuery}\n        onClose={field => {\n          this.handleFieldChange(queryIndex, 'conditions')(field);\n        }}\n        pageFilters={selection}\n      />\n    ) : (\n      <StyledSearchBar\n        searchSource=\"widget_builder\"\n        organization={organization}\n        projectIds={selection.projects}\n        query={widgetQuery.conditions}\n        fields={[]}\n        onClose={field => {\n          this.handleFieldChange(queryIndex, 'conditions')(field);\n        }}\n        useFormWrapper={false}\n        maxQueryLength={MAX_QUERY_LENGTH}\n      />\n    );\n  }\n\n  render() {\n    const {\n      organization,\n      errors,\n      queries,\n      canAddSearchConditions,\n      handleAddSearchConditions,\n      handleDeleteQuery,\n      displayType,\n      fieldOptions,\n      onChange,\n      widgetType = WidgetType.DISCOVER,\n    } = this.props;\n\n    const hideLegendAlias = ['table', 'world_map', 'big_number'].includes(displayType);\n    const query = queries[0];\n    const explodedFields = defined(query.fields)\n      ? query.fields.map(field => explodeField({field}))\n      : [...query.columns, ...query.aggregates].map(field => explodeField({field}));\n\n    return (\n      <QueryWrapper>\n        {queries.map((widgetQuery, queryIndex) => {\n          return (\n            <Field\n              key={queryIndex}\n              label={queryIndex === 0 ? t('Query') : null}\n              inline={false}\n              style={{paddingBottom: `8px`}}\n              flexibleControlStateSize\n              stacked\n              error={errors?.[queryIndex].conditions}\n            >\n              <SearchConditionsWrapper>\n                {this.renderSearchBar(widgetQuery, queryIndex)}\n                {!hideLegendAlias && (\n                  <LegendAliasInput\n                    type=\"text\"\n                    name=\"name\"\n                    required\n                    value={widgetQuery.name}\n                    placeholder={t('Legend Alias')}\n                    onChange={event =>\n                      this.handleFieldChange(queryIndex, 'name')(event.target.value)\n                    }\n                  />\n                )}\n                {queries.length > 1 && (\n                  <Button\n                    size=\"zero\"\n                    borderless\n                    onClick={event => {\n                      event.preventDefault();\n                      handleDeleteQuery(queryIndex);\n                    }}\n                    icon={<IconDelete />}\n                    title={t('Remove query')}\n                    aria-label={t('Remove query')}\n                  />\n                )}\n              </SearchConditionsWrapper>\n            </Field>\n          );\n        })}\n        {canAddSearchConditions && (\n          <Button\n            size=\"sm\"\n            icon={<IconAdd isCircled />}\n            onClick={(event: React.MouseEvent) => {\n              event.preventDefault();\n              handleAddSearchConditions();\n            }}\n          >\n            {t('Add Query')}\n          </Button>\n        )}\n        <WidgetQueryFields\n          widgetType={widgetType}\n          displayType={displayType}\n          fieldOptions={fieldOptions}\n          errors={this.getFirstQueryError('fields')}\n          fields={explodedFields}\n          organization={organization}\n          onChange={fields => {\n            const {aggregates, columns} = getColumnsAndAggregatesAsStrings(fields);\n            const fieldStrings = fields.map(field => generateFieldAsString(field));\n\n            queries.forEach((widgetQuery, queryIndex) => {\n              const newQuery = cloneDeep(widgetQuery);\n              newQuery.fields = fieldStrings;\n              newQuery.aggregates = aggregates;\n              newQuery.columns = columns;\n              if (defined(widgetQuery.orderby)) {\n                const descending = widgetQuery.orderby.startsWith('-');\n                const orderby = widgetQuery.orderby.replace('-', '');\n                const prevFieldStrings = defined(widgetQuery.fields)\n                  ? widgetQuery.fields\n                  : [...widgetQuery.columns, ...widgetQuery.aggregates];\n                if (!aggregates.includes(orderby) && widgetQuery.orderby !== '') {\n                  if (prevFieldStrings.length === fields.length) {\n                    // The Field that was used in orderby has changed. Get the new field.\n                    newQuery.orderby = `${descending ? '-' : ''}${\n                      aggregates[prevFieldStrings.indexOf(orderby)]\n                    }`;\n                  } else {\n                    newQuery.orderby = '';\n                  }\n                }\n              }\n              onChange(queryIndex, newQuery);\n            });\n          }}\n        />\n        {['table', 'top_n'].includes(displayType) && (\n          <Field\n            label={t('Sort by')}\n            inline={false}\n            flexibleControlStateSize\n            stacked\n            error={this.getFirstQueryError('orderby')?.orderby}\n            style={{marginBottom: space(1)}}\n          >\n            <SelectControl\n              value={queries[0].orderby}\n              name=\"orderby\"\n              options={generateOrderOptions({\n                widgetType,\n                columns: queries[0].columns,\n                aggregates: queries[0].aggregates,\n              })}\n              onChange={(option: SelectValue<string>) =>\n                this.handleFieldChange(0, 'orderby')(option.value)\n              }\n            />\n          </Field>\n        )}\n      </QueryWrapper>\n    );\n  }\n}\n\nconst QueryWrapper = styled('div')`\n  position: relative;\n`;\n\nexport const SearchConditionsWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n\n  > * + * {\n    margin-left: ${space(1)};\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  flex-grow: 1;\n`;\n\nconst LegendAliasInput = styled(Input)`\n  width: 33%;\n`;\n\nexport default WidgetQueriesForm;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Field from 'sentry/components/forms/field';\nimport {IconAdd, IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {\n  aggregateFunctionOutputType,\n  isLegalYAxisType,\n  QueryFieldValue,\n} from 'sentry/utils/discover/fields';\nimport {DisplayType, Widget, WidgetType} from 'sentry/views/dashboardsV2/types';\nimport ColumnEditCollection from 'sentry/views/eventsV2/table/columnEditCollection';\nimport {FieldValueOption, QueryField} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValueKind} from 'sentry/views/eventsV2/table/types';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\n\ntype Props = {\n  /**\n   * The widget display type. Used to render different fieldsets.\n   */\n  displayType: Widget['displayType'];\n  fieldOptions: ReturnType<typeof generateFieldOptions>;\n  /**\n   * The field list for the widget.\n   */\n  fields: QueryFieldValue[];\n  /**\n   * Fired when fields are added/removed/modified/reordered.\n   */\n  onChange: (fields: QueryFieldValue[]) => void;\n  /**\n   * Any errors that need to be rendered.\n   */\n  organization: Organization;\n  widgetType: Widget['widgetType'];\n  errors?: Record<string, any>;\n  style?: React.CSSProperties;\n};\n\nfunction WidgetQueryFields({\n  widgetType,\n  displayType,\n  errors,\n  fields,\n  fieldOptions,\n  organization,\n  onChange,\n  style,\n}: Props) {\n  const isReleaseWidget = widgetType === WidgetType.RELEASE;\n\n  // Handle new fields being added.\n  function handleAdd(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const newFields = [\n      ...fields,\n      {kind: FieldValueKind.FIELD, field: ''} as QueryFieldValue,\n    ];\n    onChange(newFields);\n  }\n\n  function handleAddEquation(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const newFields = [\n      ...fields,\n      {kind: FieldValueKind.EQUATION, field: ''} as QueryFieldValue,\n    ];\n    onChange(newFields);\n  }\n\n  function handleRemove(event: React.MouseEvent, fieldIndex: number) {\n    event.preventDefault();\n\n    const newFields = [...fields];\n    newFields.splice(fieldIndex, 1);\n    onChange(newFields);\n  }\n\n  function handleChangeField(value: QueryFieldValue, fieldIndex: number) {\n    const newFields = [...fields];\n    newFields[fieldIndex] = value;\n    onChange(newFields);\n  }\n\n  function handleTopNChangeField(value: QueryFieldValue) {\n    const newFields = [...fields];\n    newFields[fields.length - 1] = value;\n    onChange(newFields);\n  }\n\n  function handleTopNColumnChange(columns: QueryFieldValue[]) {\n    const newFields = [...columns, fields[fields.length - 1]];\n    onChange(newFields);\n  }\n\n  function handleColumnChange(columns: QueryFieldValue[]) {\n    onChange(columns);\n  }\n\n  // Any function/field choice for Big Number widgets is legal since the\n  // data source is from an endpoint that is not timeseries-based.\n  // The function/field choice for World Map widget will need to be numeric-like.\n  // Column builder for Table widget is already handled above.\n  const doNotValidateYAxis = displayType === 'big_number';\n\n  const filterPrimaryOptions = option => {\n    if (widgetType === WidgetType.RELEASE) {\n      if (displayType === DisplayType.TABLE) {\n        return [\n          FieldValueKind.FUNCTION,\n          FieldValueKind.TAG,\n          FieldValueKind.NUMERIC_METRICS,\n        ].includes(option.value.kind);\n      }\n      if (displayType === DisplayType.TOP_N) {\n        return option.value.kind === FieldValueKind.TAG;\n      }\n    }\n\n    // Only validate function names for timeseries widgets and\n    // world map widgets.\n    if (!doNotValidateYAxis && option.value.kind === FieldValueKind.FUNCTION) {\n      const primaryOutput = aggregateFunctionOutputType(\n        option.value.meta.name,\n        undefined\n      );\n      if (primaryOutput) {\n        // If a function returns a specific type, then validate it.\n        return isLegalYAxisType(primaryOutput);\n      }\n    }\n\n    return [FieldValueKind.FUNCTION, FieldValueKind.NUMERIC_METRICS].includes(\n      option.value.kind\n    );\n  };\n\n  const filterMetricsOptions = option => {\n    return [FieldValueKind.FUNCTION, FieldValueKind.NUMERIC_METRICS].includes(\n      option.value.kind\n    );\n  };\n\n  const filterAggregateParameters =\n    (fieldValue: QueryFieldValue) => (option: FieldValueOption) => {\n      // Only validate function parameters for timeseries widgets and\n      // world map widgets.\n      if (doNotValidateYAxis) {\n        return true;\n      }\n\n      if (fieldValue.kind !== FieldValueKind.FUNCTION) {\n        return true;\n      }\n\n      if (isReleaseWidget || option.value.kind === FieldValueKind.METRICS) {\n        return true;\n      }\n\n      const functionName = fieldValue.function[0];\n      const primaryOutput = aggregateFunctionOutputType(\n        functionName as string,\n        option.value.meta.name\n      );\n      if (primaryOutput) {\n        return isLegalYAxisType(primaryOutput);\n      }\n\n      if (\n        option.value.kind === FieldValueKind.FUNCTION ||\n        option.value.kind === FieldValueKind.EQUATION\n      ) {\n        // Functions and equations are not legal options as an aggregate/function parameter.\n        return false;\n      }\n\n      return isLegalYAxisType(option.value.meta.dataType);\n    };\n\n  const hideAddYAxisButton =\n    (['world_map', 'big_number'].includes(displayType) && fields.length === 1) ||\n    (['line', 'area', 'stacked_area', 'bar'].includes(displayType) &&\n      fields.length === 3);\n\n  const canDelete = fields.length > 1;\n\n  if (displayType === 'table') {\n    return (\n      <Field\n        data-test-id=\"columns\"\n        label={t('Columns')}\n        inline={false}\n        style={{padding: `${space(1)} 0`, ...(style ?? {})}}\n        error={errors?.fields}\n        flexibleControlStateSize\n        stacked\n        required\n      >\n        <StyledColumnEditCollection\n          columns={fields}\n          onChange={handleColumnChange}\n          fieldOptions={fieldOptions}\n          organization={organization}\n          filterPrimaryOptions={isReleaseWidget ? filterPrimaryOptions : undefined}\n          source={widgetType}\n        />\n      </Field>\n    );\n  }\n\n  if (displayType === 'top_n') {\n    const fieldValue = fields[fields.length - 1];\n    const columns = fields.slice(0, fields.length - 1);\n\n    return (\n      <Fragment>\n        <Field\n          data-test-id=\"columns\"\n          label={t('Columns')}\n          inline={false}\n          style={{padding: `${space(1)} 0`, ...(style ?? {})}}\n          error={errors?.fields}\n          flexibleControlStateSize\n          stacked\n          required\n        >\n          <StyledColumnEditCollection\n            columns={columns}\n            onChange={handleTopNColumnChange}\n            fieldOptions={fieldOptions}\n            organization={organization}\n            filterPrimaryOptions={isReleaseWidget ? filterPrimaryOptions : undefined}\n            source={widgetType}\n          />\n        </Field>\n        <Field\n          data-test-id=\"y-axis\"\n          label={t('Y-Axis')}\n          inline={false}\n          style={{padding: `${space(2)} 0 24px 0`, ...(style ?? {})}}\n          flexibleControlStateSize\n          error={errors?.fields}\n          required\n          stacked\n        >\n          <QueryFieldWrapper key={`${fieldValue}:0`}>\n            <QueryField\n              fieldValue={fieldValue}\n              fieldOptions={\n                isReleaseWidget ? fieldOptions : generateFieldOptions({organization})\n              }\n              onChange={value => handleTopNChangeField(value)}\n              filterPrimaryOptions={\n                isReleaseWidget ? filterMetricsOptions : filterPrimaryOptions\n              }\n              filterAggregateParameters={filterAggregateParameters(fieldValue)}\n            />\n          </QueryFieldWrapper>\n        </Field>\n      </Fragment>\n    );\n  }\n\n  return (\n    <Field\n      data-test-id=\"y-axis\"\n      label={t('Y-Axis')}\n      inline={false}\n      style={{padding: `${space(2)} 0 24px 0`, ...(style ?? {})}}\n      flexibleControlStateSize\n      error={errors?.fields}\n      required\n      stacked\n    >\n      {fields.map((field, i) => {\n        return (\n          <QueryFieldWrapper key={`${field}:${i}`}>\n            <QueryField\n              fieldValue={field}\n              fieldOptions={fieldOptions}\n              onChange={value => handleChangeField(value, i)}\n              filterPrimaryOptions={filterPrimaryOptions}\n              filterAggregateParameters={filterAggregateParameters(field)}\n              otherColumns={fields}\n            />\n            {(canDelete || field.kind === 'equation') && (\n              <Button\n                size=\"zero\"\n                borderless\n                onClick={event => handleRemove(event, i)}\n                icon={<IconDelete />}\n                title={t('Remove this Y-Axis')}\n                aria-label={t('Remove this Y-Axis')}\n              />\n            )}\n          </QueryFieldWrapper>\n        );\n      })}\n      {!hideAddYAxisButton && (\n        <Actions>\n          <Button size=\"sm\" icon={<IconAdd isCircled />} onClick={handleAdd}>\n            {t('Add Overlay')}\n          </Button>\n          {!isReleaseWidget && (\n            <Button\n              size=\"sm\"\n              aria-label={t('Add an Equation')}\n              onClick={handleAddEquation}\n              icon={<IconAdd isCircled />}\n            >\n              {t('Add an Equation')}\n            </Button>\n          )}\n        </Actions>\n      )}\n    </Field>\n  );\n}\n\nconst StyledColumnEditCollection = styled(ColumnEditCollection)`\n  margin-top: ${space(1)};\n`;\n\nexport const QueryFieldWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(1)};\n\n  > * + * {\n    margin-left: ${space(1)};\n  }\n`;\n\nconst Actions = styled('div')`\n  grid-column: 2 / 3;\n\n  & button {\n    margin-right: ${space(1)};\n  }\n`;\n\nexport default WidgetQueryFields;\n","// Widget Viewer specific query params so we don't interfere with other params like GSH\nexport enum WidgetViewerQueryField {\n  SORT = 'sort',\n  QUERY = 'query',\n  LEGEND = 'legend',\n  PAGE = 'page',\n  CURSOR = 'cursor',\n  WIDTH = 'width',\n  START = 'viewerStart',\n  END = 'viewerEnd',\n}\n\nexport function isWidgetViewerPath(pathname: string) {\n  return pathname.match(/\\/widget\\/[0-9]+\\/$/);\n}\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport AssigneeSelector from 'sentry/components/assigneeSelector';\nimport Count from 'sentry/components/count';\nimport Link from 'sentry/components/links/link';\nimport {getRelativeSummary} from 'sentry/components/organizations/timeRangeSelector/utils';\nimport Tooltip from 'sentry/components/tooltip';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport EventView, {EventData} from 'sentry/utils/discover/eventView';\nimport {FieldKey} from 'sentry/views/dashboardsV2/widgetBuilder/issueWidget/fields';\n\nimport {Container, FieldShortId, OverflowLink} from '../discover/styles';\n\n/**\n * Types, functions and definitions for rendering fields in discover results.\n */\ntype RenderFunctionBaggage = {\n  location: Location;\n  organization: Organization;\n  eventView?: EventView;\n};\n\ntype FieldFormatterRenderFunctionPartial = (\n  data: EventData,\n  baggage: RenderFunctionBaggage\n) => React.ReactNode;\n\ntype SpecialFieldRenderFunc = (\n  data: EventData,\n  baggage: RenderFunctionBaggage\n) => React.ReactNode;\n\ntype SpecialField = {\n  renderFunc: SpecialFieldRenderFunc;\n  sortField: string | null;\n};\n\ntype SpecialFields = {\n  assignee: SpecialField;\n  count: SpecialField;\n  events: SpecialField;\n  issue: SpecialField;\n  lifetimeCount: SpecialField;\n  lifetimeEvents: SpecialField;\n  lifetimeUserCount: SpecialField;\n  lifetimeUsers: SpecialField;\n  links: SpecialField;\n  userCount: SpecialField;\n  users: SpecialField;\n};\n\n/**\n * \"Special fields\" either do not map 1:1 to an single column in the event database,\n * or they require custom UI formatting that can't be handled by the datatype formatters.\n */\nconst SPECIAL_FIELDS: SpecialFields = {\n  issue: {\n    sortField: null,\n    renderFunc: (data, {organization}) => {\n      const issueID = data['issue.id'];\n\n      if (!issueID) {\n        return (\n          <Container>\n            <FieldShortId shortId={`${data.issue}`} />\n          </Container>\n        );\n      }\n\n      const target = {\n        pathname: `/organizations/${organization.slug}/issues/${issueID}/`,\n      };\n\n      return (\n        <Container>\n          <OverflowLink to={target} aria-label={issueID}>\n            <FieldShortId shortId={`${data.issue}`} />\n          </OverflowLink>\n        </Container>\n      );\n    },\n  },\n  assignee: {\n    sortField: null,\n    renderFunc: data => {\n      const memberList = MemberListStore.getAll();\n      return (\n        <ActorContainer>\n          <AssigneeSelector id={data.id} memberList={memberList} noDropdown />\n        </ActorContainer>\n      );\n    },\n  },\n  lifetimeEvents: {\n    sortField: null,\n    renderFunc: (data, {organization}) =>\n      issuesCountRenderer(data, organization, 'lifetimeEvents'),\n  },\n  lifetimeUsers: {\n    sortField: null,\n    renderFunc: (data, {organization}) =>\n      issuesCountRenderer(data, organization, 'lifetimeUsers'),\n  },\n  events: {\n    sortField: 'freq',\n    renderFunc: (data, {organization}) =>\n      issuesCountRenderer(data, organization, 'events'),\n  },\n  users: {\n    sortField: 'user',\n    renderFunc: (data, {organization}) =>\n      issuesCountRenderer(data, organization, 'users'),\n  },\n  lifetimeCount: {\n    sortField: null,\n    renderFunc: (data, {organization}) =>\n      issuesCountRenderer(data, organization, 'lifetimeEvents'),\n  },\n  lifetimeUserCount: {\n    sortField: null,\n    renderFunc: (data, {organization}) =>\n      issuesCountRenderer(data, organization, 'lifetimeUsers'),\n  },\n  count: {\n    sortField: null,\n    renderFunc: (data, {organization}) =>\n      issuesCountRenderer(data, organization, 'events'),\n  },\n  userCount: {\n    sortField: null,\n    renderFunc: (data, {organization}) =>\n      issuesCountRenderer(data, organization, 'users'),\n  },\n  links: {\n    sortField: null,\n    renderFunc: ({links}) => <LinksContainer dangerouslySetInnerHTML={{__html: links}} />,\n  },\n};\n\nconst issuesCountRenderer = (\n  data: EventData,\n  organization: Organization,\n  field: 'events' | 'users' | 'lifetimeEvents' | 'lifetimeUsers'\n) => {\n  const {start, end, period} = data;\n  const isUserField = !!/user/i.exec(field.toLowerCase());\n  const primaryCount = data[field];\n  const count = data[isUserField ? 'users' : 'events'];\n  const lifetimeCount = data[isUserField ? 'lifetimeUsers' : 'lifetimeEvents'];\n  const filteredCount = data[isUserField ? 'filteredUsers' : 'filteredEvents'];\n  const discoverLink = getDiscoverUrl(data, organization);\n  const filteredDiscoverLink = getDiscoverUrl(data, organization, true);\n  const selectionDateString =\n    !!start && !!end\n      ? 'time range'\n      : getRelativeSummary(period || DEFAULT_STATS_PERIOD).toLowerCase();\n  return (\n    <Container>\n      <Tooltip\n        isHoverable\n        skipWrapper\n        overlayStyle={{padding: 0}}\n        title={\n          <div>\n            {filteredCount ? (\n              <Fragment>\n                <StyledLink to={filteredDiscoverLink}>\n                  {t('Matching search filters')}\n                  <WrappedCount value={filteredCount} />\n                </StyledLink>\n                <Divider />\n              </Fragment>\n            ) : null}\n            <StyledLink to={discoverLink}>\n              {t(`Total in ${selectionDateString}`)}\n              <WrappedCount value={count} />\n            </StyledLink>\n            <Divider />\n            <StyledContent>\n              {t('Since issue began')}\n              <WrappedCount value={lifetimeCount} />\n            </StyledContent>\n          </div>\n        }\n      >\n        <span>\n          {['events', 'users'].includes(field) && filteredCount ? (\n            <Fragment>\n              <Count value={filteredCount} />\n              <SecondaryCount value={primaryCount} />\n            </Fragment>\n          ) : (\n            <Count value={primaryCount} />\n          )}\n        </span>\n      </Tooltip>\n    </Container>\n  );\n};\n\nconst getDiscoverUrl = (\n  data: EventData,\n  organization: Organization,\n  filtered?: boolean\n) => {\n  const commonQuery = {projects: [Number(data.projectId)]};\n  const discoverView = EventView.fromSavedQuery({\n    ...commonQuery,\n    id: undefined,\n    start: data.start,\n    end: data.end,\n    range: data.period,\n    name: data.title,\n    fields: ['title', 'release', 'environment', 'user', 'timestamp'],\n    orderby: '-timestamp',\n    query: `issue.id:${data.id}${filtered ? data.discoverSearchQuery : ''}`,\n    version: 2,\n  });\n  return discoverView.getResultsViewUrlTarget(organization.slug);\n};\n\nexport function getSortField(field: string): string | null {\n  if (SPECIAL_FIELDS.hasOwnProperty(field)) {\n    return SPECIAL_FIELDS[field as keyof typeof SPECIAL_FIELDS].sortField;\n  }\n  switch (field) {\n    case FieldKey.LAST_SEEN:\n      return 'date';\n    case FieldKey.FIRST_SEEN:\n      return 'new';\n    default:\n      return null;\n  }\n}\n\nconst contentStyle = css`\n  width: 100%;\n  justify-content: space-between;\n  display: flex;\n  padding: 6px 10px;\n`;\n\nconst StyledContent = styled('div')`\n  ${contentStyle};\n`;\n\nconst StyledLink = styled(Link)`\n  ${contentStyle};\n  color: ${p => p.theme.gray400};\n  &:hover {\n    color: ${p => p.theme.gray400};\n    background: ${p => p.theme.hover};\n  }\n`;\n\nconst SecondaryCount = styled(Count)`\n  :before {\n    content: '/';\n    padding-left: ${space(0.25)};\n    padding-right: 2px;\n  }\n`;\n\nconst WrappedCount = styled(({value, ...p}) => (\n  <div {...p}>\n    <Count value={value} />\n  </div>\n))`\n  text-align: right;\n  font-weight: bold;\n  font-variant-numeric: tabular-nums;\n  padding-left: ${space(2)};\n  color: ${p => p.theme.subText};\n`;\n\nconst Divider = styled('div')`\n  height: 1px;\n  overflow: hidden;\n  background-color: ${p => p.theme.innerBorder};\n`;\n\nconst ActorContainer = styled('div')`\n  display: flex;\n  justify-content: left;\n  margin-left: 18px;\n  /* IconUser is the only one with 20px. We are setting 24px here to make the height consistent */\n  height: 24px;\n  :hover {\n    cursor: default;\n  }\n`;\n\nconst LinksContainer = styled('span')`\n  white-space: nowrap;\n`;\n\n/**\n * Get the field renderer for the named field and metadata\n *\n * @param {String} field name\n * @param {object} metadata mapping.\n * @returns {Function}\n */\nexport function getIssueFieldRenderer(\n  field: string\n): FieldFormatterRenderFunctionPartial | null {\n  if (SPECIAL_FIELDS.hasOwnProperty(field)) {\n    return SPECIAL_FIELDS[field].renderFunc;\n  }\n\n  // Return null if there is no field renderer for this field\n  // Should check the discover field renderer for this field\n  return null;\n}\n","import trimStart from 'lodash/trimStart';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {SearchBarProps} from 'sentry/components/events/searchBar';\nimport {Organization, PageFilters, SelectValue, TagCollection} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\nimport {TableData} from 'sentry/utils/discover/discoverQuery';\nimport {MetaType} from 'sentry/utils/discover/eventView';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {isEquation, QueryFieldValue} from 'sentry/utils/discover/fields';\nimport {FieldValueOption} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValue} from 'sentry/views/eventsV2/table/types';\n\nimport {DisplayType, Widget, WidgetQuery, WidgetType} from '../types';\nimport {getNumEquations} from '../utils';\n\nimport {ErrorsAndTransactionsConfig} from './errorsAndTransactions';\nimport {IssuesConfig} from './issues';\nimport {ReleasesConfig} from './releases';\n\nexport type WidgetBuilderSearchBarProps = {\n  onClose: SearchBarProps['onClose'];\n  onSearch: SearchBarProps['onSearch'];\n  organization: Organization;\n  pageFilters: PageFilters;\n  widgetQuery: WidgetQuery;\n};\n\nexport interface DatasetConfig<SeriesResponse, TableResponse> {\n  /**\n   * Dataset specific search bar for the 'Filter' step in the\n   * widget builder.\n   */\n  SearchBar: (props: WidgetBuilderSearchBarProps) => JSX.Element;\n  /**\n   * Default query to display when dataset is selected in the\n   * Widget Builder.\n   */\n  defaultWidgetQuery: WidgetQuery;\n  enableEquations: boolean;\n  /**\n   * Field options to display in the Column selectors for\n   * Table display type.\n   */\n  getTableFieldOptions: (\n    organization: Organization,\n    tags?: TagCollection,\n    customMeasurements?: CustomMeasurementCollection\n  ) => Record<string, SelectValue<FieldValue>>;\n  /**\n   * List of supported display types for dataset.\n   */\n  supportedDisplayTypes: DisplayType[];\n  /**\n   * Transforms table API results into format that is used by\n   * table and big number components.\n   */\n  transformTable: (\n    data: TableResponse,\n    widgetQuery: WidgetQuery,\n    organization: Organization,\n    pageFilters: PageFilters\n  ) => TableData;\n  /**\n   * Configure enabling/disabling sort/direction options with an\n   * optional message for why it is disabled.\n   */\n  disableSortOptions?: (widgetQuery: WidgetQuery) => {\n    disableSort: boolean;\n    disableSortDirection: boolean;\n    disableSortReason?: string;\n  };\n  /**\n   * Used for mapping column names to more desirable\n   * values in tables.\n   */\n  fieldHeaderMap?: Record<string, string>;\n  /**\n   * Filter the options available to the parameters list\n   * of an aggregate function in QueryField component on the\n   * Widget Builder.\n   */\n  filterAggregateParams?: (\n    option: FieldValueOption,\n    fieldValue?: QueryFieldValue\n  ) => boolean;\n  /**\n   * Refine the options available in the sort options for timeseries\n   * displays on the 'Sort by' step of the Widget Builder.\n   */\n  filterSeriesSortOptions?: (\n    columns: Set<string>\n  ) => (option: FieldValueOption) => boolean;\n  /**\n   * Filter the primary options available in a table widget\n   * columns on the Widget Builder.\n   */\n  filterTableOptions?: (option: FieldValueOption) => boolean;\n  /**\n   * Filter the options available to the parameters list\n   * of an aggregate function in QueryField component on the\n   * Widget Builder.\n   */\n  filterYAxisAggregateParams?: (\n    fieldValue: QueryFieldValue,\n    displayType: DisplayType\n  ) => (option: FieldValueOption) => boolean;\n  filterYAxisOptions?: (\n    displayType: DisplayType\n  ) => (option: FieldValueOption) => boolean;\n  /**\n   * Used to select custom renderers for field types.\n   */\n  getCustomFieldRenderer?: (\n    field: string,\n    meta: MetaType,\n    organization?: Organization\n  ) => ReturnType<typeof getFieldRenderer> | null;\n  /**\n   * Field options to display in the Group by selector.\n   */\n  getGroupByFieldOptions?: (\n    organization: Organization,\n    tags?: TagCollection\n  ) => Record<string, SelectValue<FieldValue>>;\n  /**\n   * Generate the request promises for fetching\n   * series data.\n   */\n  getSeriesRequest?: (\n    api: Client,\n    widget: Widget,\n    queryIndex: number,\n    organization: Organization,\n    pageFilters: PageFilters,\n    referrer?: string\n  ) => Promise<[SeriesResponse, string | undefined, ResponseMeta | undefined]>;\n  /**\n   * Get the result type of the series. ie duration, size, percentage, etc\n   */\n  getSeriesResultType?: (\n    data: SeriesResponse,\n    widgetQuery: WidgetQuery\n  ) => string | undefined;\n  /**\n   * Generate the request promises for fetching\n   * tabular data.\n   */\n  getTableRequest?: (\n    api: Client,\n    query: WidgetQuery,\n    organization: Organization,\n    pageFilters: PageFilters,\n    limit?: number,\n    cursor?: string,\n    referrer?: string\n  ) => Promise<[TableResponse, string | undefined, ResponseMeta | undefined]>;\n  /**\n   * Generate the list of sort options for table\n   * displays on the 'Sort by' step of the Widget Builder.\n   */\n  getTableSortOptions?: (\n    organization: Organization,\n    widgetQuery: WidgetQuery\n  ) => SelectValue<string>[];\n  /**\n   * Generate the list of sort options for timeseries\n   * displays on the 'Sort by' step of the Widget Builder.\n   */\n  getTimeseriesSortOptions?: (\n    organization: Organization,\n    widgetQuery: WidgetQuery,\n    tags?: TagCollection\n  ) => Record<string, SelectValue<FieldValue>>;\n  /**\n   * Generate the request promises for fetching\n   * world map data.\n   */\n  getWorldMapRequest?: (\n    api: Client,\n    query: WidgetQuery,\n    organization: Organization,\n    pageFilters: PageFilters,\n    limit?: number,\n    cursor?: string,\n    referrer?: string\n  ) => ReturnType<Client['requestPromise']>;\n  /**\n   * Apply dataset specific overrides to the logic that handles\n   * column updates for tables in the Widget Builder.\n   */\n  handleColumnFieldChangeOverride?: (widgetQuery: WidgetQuery) => WidgetQuery;\n  /**\n   * Called on column or y-axis change in the Widget Builder\n   * to reset the orderby of the widget query.\n   */\n  handleOrderByReset?: (widgetQuery: WidgetQuery, newFields: string[]) => WidgetQuery;\n  /**\n   * Transforms timeseries API results into series data that is\n   * ingestable by echarts for timeseries visualizations.\n   */\n  transformSeries?: (\n    data: SeriesResponse,\n    widgetQuery: WidgetQuery,\n    organization: Organization\n  ) => Series[];\n}\n\nexport function getDatasetConfig<T extends WidgetType | undefined>(\n  widgetType: T\n): T extends WidgetType.ISSUE\n  ? typeof IssuesConfig\n  : T extends WidgetType.RELEASE\n  ? typeof ReleasesConfig\n  : typeof ErrorsAndTransactionsConfig;\n\nexport function getDatasetConfig(\n  widgetType?: WidgetType\n): typeof IssuesConfig | typeof ReleasesConfig | typeof ErrorsAndTransactionsConfig {\n  switch (widgetType) {\n    case WidgetType.ISSUE:\n      return IssuesConfig;\n    case WidgetType.RELEASE:\n      return ReleasesConfig;\n    case WidgetType.DISCOVER:\n    default:\n      return ErrorsAndTransactionsConfig;\n  }\n}\n\n/**\n * A generic orderby reset helper function that updates the query's\n * orderby based on new selected fields.\n */\nexport function handleOrderByReset(\n  widgetQuery: WidgetQuery,\n  newFields: string[]\n): WidgetQuery {\n  const rawOrderby = trimStart(widgetQuery.orderby, '-');\n  const isDescending = widgetQuery.orderby.startsWith('-');\n  const orderbyPrefix = isDescending ? '-' : '';\n\n  if (!newFields.includes(rawOrderby) && widgetQuery.orderby !== '') {\n    const isFromAggregates = widgetQuery.aggregates.includes(rawOrderby);\n    const isCustomEquation = isEquation(rawOrderby);\n    const isUsedInGrouping = widgetQuery.columns.includes(rawOrderby);\n\n    const keepCurrentOrderby = isFromAggregates || isCustomEquation || isUsedInGrouping;\n    const firstAggregateAlias = isEquation(widgetQuery.aggregates[0] ?? '')\n      ? `equation[${getNumEquations(widgetQuery.aggregates) - 1}]`\n      : newFields[0];\n\n    widgetQuery.orderby =\n      (keepCurrentOrderby && widgetQuery.orderby) ||\n      `${orderbyPrefix}${firstAggregateAlias}`;\n  }\n  return widgetQuery;\n}\n","import trimStart from 'lodash/trimStart';\n\nimport {doEventsRequest} from 'sentry/actionCreators/events';\nimport {Client} from 'sentry/api';\nimport {isMultiSeriesStats} from 'sentry/components/charts/utils';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {\n  EventsStats,\n  MultiSeriesEventsStats,\n  Organization,\n  PageFilters,\n  SelectValue,\n  TagCollection,\n} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\nimport {EventsTableData, TableData} from 'sentry/utils/discover/discoverQuery';\nimport {MetaType} from 'sentry/utils/discover/eventView';\nimport {\n  getFieldRenderer,\n  RenderFunctionBaggage,\n} from 'sentry/utils/discover/fieldRenderers';\nimport {\n  errorsAndTransactionsAggregateFunctionOutputType,\n  getAggregateAlias,\n  isEquation,\n  isEquationAlias,\n  isLegalYAxisType,\n  QueryFieldValue,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  stripEquationPrefix,\n} from 'sentry/utils/discover/fields';\nimport {\n  DiscoverQueryRequestParams,\n  doDiscoverQuery,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {Container} from 'sentry/utils/discover/styles';\nimport {TOP_N} from 'sentry/utils/discover/types';\nimport {\n  eventDetailsRouteWithEventView,\n  generateEventSlug,\n} from 'sentry/utils/discover/urls';\nimport {getShortEventId} from 'sentry/utils/events';\nimport {getMeasurements} from 'sentry/utils/measurements/measurements';\nimport {FieldValueOption} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValue, FieldValueKind} from 'sentry/views/eventsV2/table/types';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayType, Widget, WidgetQuery} from '../types';\nimport {\n  eventViewFromWidget,\n  getDashboardsMEPQueryParams,\n  getNumEquations,\n  getWidgetInterval,\n} from '../utils';\nimport {EventsSearchBar} from '../widgetBuilder/buildSteps/filterResultsStep/eventsSearchBar';\nimport {CUSTOM_EQUATION_VALUE} from '../widgetBuilder/buildSteps/sortByStep';\nimport {\n  flattenMultiSeriesDataWithGrouping,\n  transformSeries,\n} from '../widgetCard/widgetQueries';\n\nimport {DatasetConfig, handleOrderByReset} from './base';\n\nconst DEFAULT_WIDGET_QUERY: WidgetQuery = {\n  name: '',\n  fields: ['count()'],\n  columns: [],\n  fieldAliases: [],\n  aggregates: ['count()'],\n  conditions: '',\n  orderby: '-count()',\n};\n\ntype SeriesWithOrdering = [order: number, series: Series];\n\nexport const ErrorsAndTransactionsConfig: DatasetConfig<\n  EventsStats | MultiSeriesEventsStats,\n  TableData | EventsTableData\n> = {\n  defaultWidgetQuery: DEFAULT_WIDGET_QUERY,\n  enableEquations: true,\n  getCustomFieldRenderer: getCustomEventsFieldRenderer,\n  SearchBar: EventsSearchBar,\n  filterSeriesSortOptions,\n  filterYAxisAggregateParams,\n  filterYAxisOptions,\n  getTableFieldOptions: getEventsTableFieldOptions,\n  getTimeseriesSortOptions,\n  getTableSortOptions,\n  getGroupByFieldOptions: getEventsTableFieldOptions,\n  handleOrderByReset,\n  supportedDisplayTypes: [\n    DisplayType.AREA,\n    DisplayType.BAR,\n    DisplayType.BIG_NUMBER,\n    DisplayType.LINE,\n    DisplayType.TABLE,\n    DisplayType.TOP_N,\n    DisplayType.WORLD_MAP,\n  ],\n  getTableRequest: (\n    api: Client,\n    query: WidgetQuery,\n    organization: Organization,\n    pageFilters: PageFilters,\n    limit?: number,\n    cursor?: string,\n    referrer?: string\n  ) => {\n    const shouldUseEvents = organization.features.includes(\n      'discover-frontend-use-events-endpoint'\n    );\n    const url = shouldUseEvents\n      ? `/organizations/${organization.slug}/events/`\n      : `/organizations/${organization.slug}/eventsv2/`;\n    return getEventsRequest(\n      url,\n      api,\n      query,\n      organization,\n      pageFilters,\n      limit,\n      cursor,\n      referrer\n    );\n  },\n  getSeriesRequest: getEventsSeriesRequest,\n  getWorldMapRequest: (\n    api: Client,\n    query: WidgetQuery,\n    organization: Organization,\n    pageFilters: PageFilters,\n    limit?: number,\n    cursor?: string,\n    referrer?: string\n  ) => {\n    return getEventsRequest(\n      `/organizations/${organization.slug}/events-geo/`,\n      api,\n      query,\n      organization,\n      pageFilters,\n      limit,\n      cursor,\n      referrer\n    );\n  },\n  transformSeries: transformEventsResponseToSeries,\n  transformTable: transformEventsResponseToTable,\n  filterTableOptions,\n  filterAggregateParams,\n  getSeriesResultType,\n};\n\nfunction getTableSortOptions(_organization: Organization, widgetQuery: WidgetQuery) {\n  const {columns, aggregates} = widgetQuery;\n  const options: SelectValue<string>[] = [];\n  let equations = 0;\n  [...aggregates, ...columns]\n    .filter(field => !!field)\n    .forEach(field => {\n      let alias;\n      const label = stripEquationPrefix(field);\n      // Equations are referenced via a standard alias following this pattern\n      if (isEquation(field)) {\n        alias = `equation[${equations}]`;\n        equations += 1;\n      }\n\n      options.push({label, value: alias ?? field});\n    });\n\n  return options;\n}\n\nfunction filterSeriesSortOptions(columns: Set<string>) {\n  return (option: FieldValueOption) => {\n    if (\n      option.value.kind === FieldValueKind.FUNCTION ||\n      option.value.kind === FieldValueKind.EQUATION\n    ) {\n      return true;\n    }\n\n    return (\n      columns.has(option.value.meta.name) ||\n      option.value.meta.name === CUSTOM_EQUATION_VALUE\n    );\n  };\n}\n\nfunction getTimeseriesSortOptions(\n  organization: Organization,\n  widgetQuery: WidgetQuery,\n  tags?: TagCollection\n) {\n  const options: Record<string, SelectValue<FieldValue>> = {};\n  options[`field:${CUSTOM_EQUATION_VALUE}`] = {\n    label: 'Custom Equation',\n    value: {\n      kind: FieldValueKind.EQUATION,\n      meta: {name: CUSTOM_EQUATION_VALUE},\n    },\n  };\n\n  let equations = 0;\n  [...widgetQuery.aggregates, ...widgetQuery.columns]\n    .filter(field => !!field)\n    .forEach(field => {\n      let alias;\n      const label = stripEquationPrefix(field);\n      // Equations are referenced via a standard alias following this pattern\n      if (isEquation(field)) {\n        alias = `equation[${equations}]`;\n        equations += 1;\n        options[`equation:${alias}`] = {\n          label,\n          value: {\n            kind: FieldValueKind.EQUATION,\n            meta: {\n              name: alias ?? field,\n            },\n          },\n        };\n      }\n    });\n\n  const fieldOptions = getEventsTableFieldOptions(organization, tags);\n\n  return {...options, ...fieldOptions};\n}\n\nfunction getEventsTableFieldOptions(\n  organization: Organization,\n  tags?: TagCollection,\n  customMeasurements?: CustomMeasurementCollection\n) {\n  const measurements = getMeasurements();\n\n  return generateFieldOptions({\n    organization,\n    tagKeys: Object.values(tags ?? {}).map(({key}) => key),\n    measurementKeys: Object.values(measurements).map(({key}) => key),\n    spanOperationBreakdownKeys: SPAN_OP_BREAKDOWN_FIELDS,\n    customMeasurements:\n      organization.features.includes('dashboards-mep') ||\n      organization.features.includes('mep-rollout-flag')\n        ? Object.values(customMeasurements ?? {}).map(({key, functions}) => ({\n            key,\n            functions,\n          }))\n        : undefined,\n  });\n}\n\nfunction transformEventsResponseToTable(\n  data: TableData | EventsTableData,\n  _widgetQuery: WidgetQuery,\n  organization: Organization\n): TableData {\n  let tableData = data;\n  const shouldUseEvents = organization.features.includes(\n    'discover-frontend-use-events-endpoint'\n  );\n  // events api uses a different response format so we need to construct tableData differently\n  if (shouldUseEvents) {\n    const {fields, ...otherMeta} = (data as EventsTableData).meta ?? {};\n    tableData = {\n      ...data,\n      meta: {...fields, ...otherMeta},\n    } as TableData;\n  }\n  return tableData as TableData;\n}\n\nfunction filterYAxisAggregateParams(\n  fieldValue: QueryFieldValue,\n  displayType: DisplayType\n) {\n  return (option: FieldValueOption) => {\n    // Only validate function parameters for timeseries widgets and\n    // world map widgets.\n    if (displayType === DisplayType.BIG_NUMBER) {\n      return true;\n    }\n\n    if (fieldValue.kind !== FieldValueKind.FUNCTION) {\n      return true;\n    }\n\n    const functionName = fieldValue.function[0];\n    const primaryOutput = errorsAndTransactionsAggregateFunctionOutputType(\n      functionName as string,\n      option.value.meta.name\n    );\n    if (primaryOutput) {\n      return isLegalYAxisType(primaryOutput);\n    }\n\n    if (\n      option.value.kind === FieldValueKind.FUNCTION ||\n      option.value.kind === FieldValueKind.EQUATION\n    ) {\n      // Functions and equations are not legal options as an aggregate/function parameter.\n      return false;\n    }\n\n    return isLegalYAxisType(option.value.meta.dataType);\n  };\n}\n\nfunction filterYAxisOptions(displayType: DisplayType) {\n  return (option: FieldValueOption) => {\n    // Only validate function names for timeseries widgets and\n    // world map widgets.\n    if (\n      !(displayType === DisplayType.BIG_NUMBER) &&\n      option.value.kind === FieldValueKind.FUNCTION\n    ) {\n      const primaryOutput = errorsAndTransactionsAggregateFunctionOutputType(\n        option.value.meta.name,\n        undefined\n      );\n      if (primaryOutput) {\n        // If a function returns a specific type, then validate it.\n        return isLegalYAxisType(primaryOutput);\n      }\n    }\n\n    return option.value.kind === FieldValueKind.FUNCTION;\n  };\n}\n\nfunction transformEventsResponseToSeries(\n  data: EventsStats | MultiSeriesEventsStats,\n  widgetQuery: WidgetQuery,\n  organization: Organization\n): Series[] {\n  let output: Series[] = [];\n  const queryAlias = widgetQuery.name;\n\n  const widgetBuilderNewDesign =\n    organization.features.includes('new-widget-builder-experience-design') || false;\n\n  if (isMultiSeriesStats(data)) {\n    let seriesWithOrdering: SeriesWithOrdering[] = [];\n    const isMultiSeriesDataWithGrouping =\n      widgetQuery.aggregates.length > 1 && widgetQuery.columns.length;\n\n    // Convert multi-series results into chartable series. Multi series results\n    // are created when multiple yAxis are used. Convert the timeseries\n    // data into a multi-series data set.  As the server will have\n    // replied with a map like: {[titleString: string]: EventsStats}\n    if (widgetBuilderNewDesign && isMultiSeriesDataWithGrouping) {\n      seriesWithOrdering = flattenMultiSeriesDataWithGrouping(data, queryAlias);\n    } else {\n      seriesWithOrdering = Object.keys(data).map((seriesName: string) => {\n        const prefixedName = queryAlias ? `${queryAlias} : ${seriesName}` : seriesName;\n        const seriesData: EventsStats = data[seriesName];\n        return [\n          seriesData.order || 0,\n          transformSeries(seriesData, prefixedName, seriesName),\n        ];\n      });\n    }\n\n    output = [\n      ...seriesWithOrdering\n        .sort((itemA, itemB) => itemA[0] - itemB[0])\n        .map(item => item[1]),\n    ];\n  } else {\n    const field = widgetQuery.aggregates[0];\n    const prefixedName = queryAlias ? `${queryAlias} : ${field}` : field;\n    const transformed = transformSeries(data, prefixedName, field);\n    output.push(transformed);\n  }\n\n  return output;\n}\n\n// Get the series result type from the EventsStats meta\nfunction getSeriesResultType(\n  data: EventsStats | MultiSeriesEventsStats,\n  widgetQuery: WidgetQuery\n) {\n  const field = widgetQuery.aggregates[0];\n  // Need to use getAggregateAlias since events-stats still uses aggregate alias format\n  if (isMultiSeriesStats(data)) {\n    return data[Object.keys(data)[0]].meta?.fields[getAggregateAlias(field)];\n  }\n  return data.meta?.fields[getAggregateAlias(field)];\n}\n\nfunction renderEventIdAsLinkable(data, {eventView, organization}: RenderFunctionBaggage) {\n  const id: string | unknown = data?.id;\n  if (!eventView || typeof id !== 'string') {\n    return null;\n  }\n\n  const eventSlug = generateEventSlug(data);\n\n  const target = eventDetailsRouteWithEventView({\n    orgSlug: organization.slug,\n    eventSlug,\n    eventView,\n  });\n\n  return (\n    <Tooltip title={t('View Event')}>\n      <Link data-test-id=\"view-event\" to={target}>\n        <Container>{getShortEventId(id)}</Container>\n      </Link>\n    </Tooltip>\n  );\n}\n\nfunction renderTraceAsLinkable(\n  data,\n  {eventView, organization, location}: RenderFunctionBaggage\n) {\n  const id: string | unknown = data?.trace;\n  if (!eventView || typeof id !== 'string') {\n    return null;\n  }\n  const dateSelection = eventView.normalizeDateSelection(location);\n  const target = getTraceDetailsUrl(organization, String(data.trace), dateSelection, {});\n\n  return (\n    <Tooltip title={t('View Trace')}>\n      <Link data-test-id=\"view-trace\" to={target}>\n        <Container>{getShortEventId(id)}</Container>\n      </Link>\n    </Tooltip>\n  );\n}\n\nexport function getCustomEventsFieldRenderer(\n  field: string,\n  meta: MetaType,\n  organization?: Organization\n) {\n  const isAlias = !organization?.features.includes(\n    'discover-frontend-use-events-endpoint'\n  );\n\n  if (field === 'id') {\n    return renderEventIdAsLinkable;\n  }\n\n  if (field === 'trace') {\n    return renderTraceAsLinkable;\n  }\n\n  return getFieldRenderer(field, meta, isAlias);\n}\n\nfunction getEventsRequest(\n  url: string,\n  api: Client,\n  query: WidgetQuery,\n  organization: Organization,\n  pageFilters: PageFilters,\n  limit?: number,\n  cursor?: string,\n  referrer?: string\n) {\n  const isMEPEnabled = organization.features.includes('dashboards-mep');\n\n  const eventView = eventViewFromWidget('', query, pageFilters);\n\n  const params: DiscoverQueryRequestParams = {\n    per_page: limit,\n    cursor,\n    referrer,\n    ...getDashboardsMEPQueryParams(isMEPEnabled),\n  };\n\n  if (query.orderby) {\n    params.sort = typeof query.orderby === 'string' ? [query.orderby] : query.orderby;\n  }\n\n  // TODO: eventually need to replace this with just EventsTableData as we deprecate eventsv2\n  return doDiscoverQuery<TableData | EventsTableData>(api, url, {\n    ...eventView.generateQueryStringObject(),\n    ...params,\n  });\n}\n\nfunction getEventsSeriesRequest(\n  api: Client,\n  widget: Widget,\n  queryIndex: number,\n  organization: Organization,\n  pageFilters: PageFilters,\n  referrer?: string\n) {\n  const widgetQuery = widget.queries[queryIndex];\n  const {displayType, limit} = widget;\n  const {environments, projects} = pageFilters;\n  const {start, end, period: statsPeriod} = pageFilters.datetime;\n  const interval = getWidgetInterval(displayType, {start, end, period: statsPeriod});\n  const isMEPEnabled = organization.features.includes('dashboards-mep');\n  let requestData;\n  if (displayType === DisplayType.TOP_N) {\n    requestData = {\n      organization,\n      interval,\n      start,\n      end,\n      project: projects,\n      environment: environments,\n      period: statsPeriod,\n      query: widgetQuery.conditions,\n      yAxis: widgetQuery.aggregates[widgetQuery.aggregates.length - 1],\n      includePrevious: false,\n      referrer,\n      partial: true,\n      field: [...widgetQuery.columns, ...widgetQuery.aggregates],\n      queryExtras: getDashboardsMEPQueryParams(isMEPEnabled),\n      includeAllArgs: true,\n      topEvents: TOP_N,\n    };\n    if (widgetQuery.orderby) {\n      requestData.orderby = widgetQuery.orderby;\n    }\n  } else {\n    requestData = {\n      organization,\n      interval,\n      start,\n      end,\n      project: projects,\n      environment: environments,\n      period: statsPeriod,\n      query: widgetQuery.conditions,\n      yAxis: widgetQuery.aggregates,\n      orderby: widgetQuery.orderby,\n      includePrevious: false,\n      referrer,\n      partial: true,\n      queryExtras: getDashboardsMEPQueryParams(isMEPEnabled),\n      includeAllArgs: true,\n    };\n    if (widgetQuery.columns?.length !== 0) {\n      requestData.topEvents = limit ?? TOP_N;\n      requestData.field = [...widgetQuery.columns, ...widgetQuery.aggregates];\n\n      // Compare field and orderby as aliases to ensure requestData has\n      // the orderby selected\n      // If the orderby is an equation alias, do not inject it\n      const orderby = trimStart(widgetQuery.orderby, '-');\n      if (\n        widgetQuery.orderby &&\n        !isEquationAlias(orderby) &&\n        !requestData.field.includes(orderby)\n      ) {\n        requestData.field.push(orderby);\n      }\n\n      // The \"Other\" series is only included when there is one\n      // y-axis and one widgetQuery\n      requestData.excludeOther =\n        widgetQuery.aggregates.length !== 1 || widget.queries.length !== 1;\n\n      if (isEquation(trimStart(widgetQuery.orderby, '-'))) {\n        const nextEquationIndex = getNumEquations(widgetQuery.aggregates);\n        const isDescending = widgetQuery.orderby.startsWith('-');\n        const prefix = isDescending ? '-' : '';\n\n        // Construct the alias form of the equation and inject it into the request\n        requestData.orderby = `${prefix}equation[${nextEquationIndex}]`;\n        requestData.field = [\n          ...widgetQuery.columns,\n          ...widgetQuery.aggregates,\n          trimStart(widgetQuery.orderby, '-'),\n        ];\n      }\n    }\n  }\n\n  return doEventsRequest<true>(api, requestData);\n}\n\n// Custom Measurements aren't selectable as columns/yaxis without using an aggregate\nfunction filterTableOptions(option: FieldValueOption) {\n  return option.value.kind !== FieldValueKind.CUSTOM_MEASUREMENT;\n}\n\n// Checks fieldValue to see what function is being used and only allow supported custom measurements\nfunction filterAggregateParams(option: FieldValueOption, fieldValue?: QueryFieldValue) {\n  if (\n    option.value.kind === FieldValueKind.CUSTOM_MEASUREMENT &&\n    fieldValue?.kind === 'function' &&\n    fieldValue?.function &&\n    !option.value.meta.functions.includes(fieldValue.function[0])\n  ) {\n    return false;\n  }\n  return true;\n}\n","import {Client} from 'sentry/api';\nimport {joinQuery, parseSearch, Token} from 'sentry/components/searchSyntax/parser';\nimport {t} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport {Group, Organization, PageFilters} from 'sentry/types';\nimport {getIssueFieldRenderer} from 'sentry/utils/dashboards/issueFieldRenderers';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport {TableData, TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {\n  DISCOVER_EXCLUSION_FIELDS,\n  getSortLabel,\n  IssueSortOptions,\n} from 'sentry/views/issueList/utils';\n\nimport {DEFAULT_TABLE_LIMIT, DisplayType, WidgetQuery} from '../types';\nimport {IssuesSearchBar} from '../widgetBuilder/buildSteps/filterResultsStep/issuesSearchBar';\nimport {ISSUE_FIELD_TO_HEADER_MAP} from '../widgetBuilder/issueWidget/fields';\nimport {\n  generateIssueWidgetFieldOptions,\n  ISSUE_WIDGET_SORT_OPTIONS,\n} from '../widgetBuilder/issueWidget/utils';\n\nimport {DatasetConfig} from './base';\n\nconst DEFAULT_WIDGET_QUERY: WidgetQuery = {\n  name: '',\n  fields: ['issue', 'assignee', 'title'] as string[],\n  columns: ['issue', 'assignee', 'title'],\n  fieldAliases: [],\n  aggregates: [],\n  conditions: '',\n  orderby: IssueSortOptions.DATE,\n};\n\nconst DEFAULT_SORT = IssueSortOptions.DATE;\nconst DEFAULT_EXPAND = ['owners'];\n\ntype EndpointParams = Partial<PageFilters['datetime']> & {\n  environment: string[];\n  project: number[];\n  collapse?: string[];\n  cursor?: string;\n  expand?: string[];\n  groupStatsPeriod?: string | null;\n  limit?: number;\n  page?: number | string;\n  query?: string;\n  sort?: string;\n  statsPeriod?: string | null;\n};\n\nexport const IssuesConfig: DatasetConfig<never, Group[]> = {\n  defaultWidgetQuery: DEFAULT_WIDGET_QUERY,\n  enableEquations: false,\n  disableSortOptions,\n  getTableRequest,\n  getCustomFieldRenderer: getIssueFieldRenderer,\n  SearchBar: IssuesSearchBar,\n  getTableSortOptions,\n  getTableFieldOptions: (_organization: Organization) =>\n    generateIssueWidgetFieldOptions(),\n  fieldHeaderMap: ISSUE_FIELD_TO_HEADER_MAP,\n  supportedDisplayTypes: [DisplayType.TABLE],\n  transformTable: transformIssuesResponseToTable,\n};\n\nfunction disableSortOptions(_widgetQuery: WidgetQuery) {\n  return {\n    disableSort: false,\n    disableSortDirection: true,\n    disableSortReason: t('Issues dataset does not yet support descending order'),\n  };\n}\n\nfunction getTableSortOptions(organization: Organization, _widgetQuery: WidgetQuery) {\n  const sortOptions = [...ISSUE_WIDGET_SORT_OPTIONS];\n  if (organization.features.includes('issue-list-trend-sort')) {\n    sortOptions.push(IssueSortOptions.TREND);\n  }\n  return sortOptions.map(sortOption => ({\n    label: getSortLabel(sortOption),\n    value: sortOption,\n  }));\n}\n\nexport function transformIssuesResponseToTable(\n  data: Group[],\n  widgetQuery: WidgetQuery,\n  _organization: Organization,\n  pageFilters: PageFilters\n): TableData {\n  GroupStore.add(data);\n  const transformedTableResults: TableDataRow[] = [];\n  data.forEach(\n    ({\n      id,\n      shortId,\n      title,\n      lifetime,\n      filtered,\n      count,\n      userCount,\n      project,\n      annotations,\n      ...resultProps\n    }) => {\n      const transformedResultProps: Omit<TableDataRow, 'id'> = {};\n      Object.keys(resultProps)\n        .filter(key => ['number', 'string'].includes(typeof resultProps[key]))\n        .forEach(key => {\n          transformedResultProps[key] = resultProps[key];\n        });\n\n      const transformedTableResult: TableDataRow = {\n        ...transformedResultProps,\n        events: count,\n        users: userCount,\n        id,\n        'issue.id': id,\n        issue: shortId,\n        title,\n        project: project.slug,\n        links: annotations?.join(', '),\n      };\n\n      // Get lifetime stats\n      if (lifetime) {\n        transformedTableResult.lifetimeEvents = lifetime?.count;\n        transformedTableResult.lifetimeUsers = lifetime?.userCount;\n      }\n      // Get filtered stats\n      if (filtered) {\n        transformedTableResult.filteredEvents = filtered?.count;\n        transformedTableResult.filteredUsers = filtered?.userCount;\n      }\n\n      // Discover Url properties\n      const query = widgetQuery.conditions;\n      const parsedResult = parseSearch(query);\n      const filteredTerms = parsedResult?.filter(\n        p => !(p.type === Token.Filter && DISCOVER_EXCLUSION_FIELDS.includes(p.key.text))\n      );\n\n      transformedTableResult.discoverSearchQuery = joinQuery(filteredTerms, true);\n      transformedTableResult.projectId = project.id;\n\n      const {period, start, end} = pageFilters.datetime || {};\n      if (start && end) {\n        transformedTableResult.start = getUtcDateString(start);\n        transformedTableResult.end = getUtcDateString(end);\n      }\n      transformedTableResult.period = period ?? '';\n      transformedTableResults.push(transformedTableResult);\n    }\n  );\n  return {data: transformedTableResults} as TableData;\n}\n\nfunction getTableRequest(\n  api: Client,\n  query: WidgetQuery,\n  organization: Organization,\n  pageFilters: PageFilters,\n  limit?: number,\n  cursor?: string\n) {\n  const groupListUrl = `/organizations/${organization.slug}/issues/`;\n\n  const params: EndpointParams = {\n    project: pageFilters.projects ?? [],\n    environment: pageFilters.environments ?? [],\n    query: query.conditions,\n    sort: query.orderby || DEFAULT_SORT,\n    expand: DEFAULT_EXPAND,\n    limit: limit ?? DEFAULT_TABLE_LIMIT,\n    cursor,\n  };\n\n  if (pageFilters.datetime.period) {\n    params.statsPeriod = pageFilters.datetime.period;\n  }\n  if (pageFilters.datetime.end) {\n    params.end = getUtcDateString(pageFilters.datetime.end);\n  }\n  if (pageFilters.datetime.start) {\n    params.start = getUtcDateString(pageFilters.datetime.start);\n  }\n  if (pageFilters.datetime.utc) {\n    params.utc = pageFilters.datetime.utc;\n  }\n\n  return api.requestPromise(groupListUrl, {\n    includeAllArgs: true,\n    method: 'GET',\n    data: {\n      ...params,\n    },\n  });\n}\n","import omit from 'lodash/omit';\nimport trimStart from 'lodash/trimStart';\n\nimport {doMetricsRequest} from 'sentry/actionCreators/metrics';\nimport {doSessionsRequest} from 'sentry/actionCreators/sessions';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {\n  MetricsApiResponse,\n  Organization,\n  PageFilters,\n  SelectValue,\n  SessionApiResponse,\n  SessionField,\n  SessionsMeta,\n} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport {statsPeriodToDays} from 'sentry/utils/dates';\nimport {TableData} from 'sentry/utils/discover/discoverQuery';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {QueryFieldValue} from 'sentry/utils/discover/fields';\nimport {FieldValueOption} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValue, FieldValueKind} from 'sentry/views/eventsV2/table/types';\n\nimport {DisplayType, Widget, WidgetQuery} from '../types';\nimport {getWidgetInterval} from '../utils';\nimport {ReleaseSearchBar} from '../widgetBuilder/buildSteps/filterResultsStep/releaseSearchBar';\nimport {\n  DERIVED_STATUS_METRICS_PATTERN,\n  DerivedStatusFields,\n  DISABLED_SORT,\n  FIELD_TO_METRICS_EXPRESSION,\n  generateReleaseWidgetFieldOptions,\n  SESSIONS_FIELDS,\n  SESSIONS_TAGS,\n  TAG_SORT_DENY_LIST,\n} from '../widgetBuilder/releaseWidget/fields';\nimport {\n  derivedMetricsToField,\n  requiresCustomReleaseSorting,\n  resolveDerivedStatusFields,\n} from '../widgetCard/releaseWidgetQueries';\nimport {getSeriesName} from '../widgetCard/transformSessionsResponseToSeries';\nimport {\n  changeObjectValuesToTypes,\n  getDerivedMetrics,\n  mapDerivedMetricsToFields,\n} from '../widgetCard/transformSessionsResponseToTable';\n\nimport {DatasetConfig, handleOrderByReset} from './base';\n\nconst DEFAULT_WIDGET_QUERY: WidgetQuery = {\n  name: '',\n  fields: [`crash_free_rate(${SessionField.SESSION})`],\n  columns: [],\n  fieldAliases: [],\n  aggregates: [`crash_free_rate(${SessionField.SESSION})`],\n  conditions: '',\n  orderby: `-crash_free_rate(${SessionField.SESSION})`,\n};\n\nconst METRICS_BACKED_SESSIONS_START_DATE = new Date('2022-07-12');\n\nexport const ReleasesConfig: DatasetConfig<\n  SessionApiResponse | MetricsApiResponse,\n  SessionApiResponse | MetricsApiResponse\n> = {\n  defaultWidgetQuery: DEFAULT_WIDGET_QUERY,\n  enableEquations: false,\n  disableSortOptions,\n  getTableRequest: (\n    api: Client,\n    query: WidgetQuery,\n    organization: Organization,\n    pageFilters: PageFilters,\n    limit?: number,\n    cursor?: string\n  ) =>\n    getReleasesRequest(\n      0,\n      1,\n      api,\n      query,\n      organization,\n      pageFilters,\n      undefined,\n      limit,\n      cursor\n    ),\n  getSeriesRequest: getReleasesSeriesRequest,\n  getTableSortOptions,\n  getTimeseriesSortOptions,\n  filterTableOptions: filterPrimaryReleaseTableOptions,\n  filterAggregateParams,\n  filterYAxisAggregateParams: (_fieldValue: QueryFieldValue, _displayType: DisplayType) =>\n    filterAggregateParams,\n  filterYAxisOptions,\n  getCustomFieldRenderer: (field, meta) => getFieldRenderer(field, meta, false),\n  SearchBar: ReleaseSearchBar,\n  getTableFieldOptions: getReleasesTableFieldOptions,\n  getGroupByFieldOptions: (_organization: Organization) =>\n    generateReleaseWidgetFieldOptions([] as SessionsMeta[], SESSIONS_TAGS),\n  handleColumnFieldChangeOverride,\n  handleOrderByReset: handleReleasesTableOrderByReset,\n  filterSeriesSortOptions,\n  supportedDisplayTypes: [\n    DisplayType.AREA,\n    DisplayType.BAR,\n    DisplayType.BIG_NUMBER,\n    DisplayType.LINE,\n    DisplayType.TABLE,\n    DisplayType.TOP_N,\n  ],\n  transformSeries: transformSessionsResponseToSeries,\n  transformTable: transformSessionsResponseToTable,\n};\n\nfunction disableSortOptions(widgetQuery: WidgetQuery) {\n  const {columns} = widgetQuery;\n  if (columns.includes('session.status')) {\n    return {\n      disableSort: true,\n      disableSortDirection: true,\n      disableSortReason: t('Sorting currently not supported with session.status'),\n    };\n  }\n  return {\n    disableSort: false,\n    disableSortDirection: false,\n  };\n}\n\nfunction getTableSortOptions(_organization: Organization, widgetQuery: WidgetQuery) {\n  const {columns, aggregates} = widgetQuery;\n  const options: SelectValue<string>[] = [];\n  [...aggregates, ...columns]\n    .filter(field => !!field)\n    .filter(field => !DISABLED_SORT.includes(field))\n    .filter(field => !TAG_SORT_DENY_LIST.includes(field))\n    .forEach(field => {\n      options.push({label: field, value: field});\n    });\n\n  return options;\n}\n\nfunction getTimeseriesSortOptions(_organization: Organization, widgetQuery: WidgetQuery) {\n  const columnSet = new Set(widgetQuery.columns);\n  const releaseFieldOptions = generateReleaseWidgetFieldOptions(\n    Object.values(SESSIONS_FIELDS),\n    SESSIONS_TAGS\n  );\n  const options: Record<string, SelectValue<FieldValue>> = {};\n  Object.entries(releaseFieldOptions).forEach(([key, option]) => {\n    if (['count_healthy', 'count_errored'].includes(option.value.meta.name)) {\n      return;\n    }\n    if (option.value.kind === FieldValueKind.FIELD) {\n      // Only allow sorting by release tag\n      if (option.value.meta.name === 'release' && columnSet.has(option.value.meta.name)) {\n        options[key] = option;\n      }\n      return;\n    }\n    options[key] = option;\n  });\n  return options;\n}\n\nfunction filterSeriesSortOptions(columns: Set<string>) {\n  return (option: FieldValueOption) => {\n    if (['count_healthy', 'count_errored'].includes(option.value.meta.name)) {\n      return false;\n    }\n    if (option.value.kind === FieldValueKind.FIELD) {\n      // Only allow sorting by release tag\n      return columns.has(option.value.meta.name) && option.value.meta.name === 'release';\n    }\n    return filterPrimaryReleaseTableOptions(option);\n  };\n}\n\nfunction getReleasesSeriesRequest(\n  api: Client,\n  widget: Widget,\n  queryIndex: number,\n  organization: Organization,\n  pageFilters: PageFilters\n) {\n  const query = widget.queries[queryIndex];\n  const {displayType, limit} = widget;\n\n  const {datetime} = pageFilters;\n  const {start, end, period} = datetime;\n\n  const isCustomReleaseSorting = requiresCustomReleaseSorting(query);\n\n  const includeTotals = query.columns.length > 0 ? 1 : 0;\n  const interval = getWidgetInterval(\n    displayType,\n    {start, end, period},\n    '5m',\n    // requesting low fidelity for release sort because metrics api can't return 100 rows of high fidelity series data\n    isCustomReleaseSorting ? 'low' : undefined\n  );\n\n  return getReleasesRequest(\n    1,\n    includeTotals,\n    api,\n    query,\n    organization,\n    pageFilters,\n    interval,\n    limit\n  );\n}\n\nfunction filterPrimaryReleaseTableOptions(option: FieldValueOption) {\n  return [\n    FieldValueKind.FUNCTION,\n    FieldValueKind.FIELD,\n    FieldValueKind.NUMERIC_METRICS,\n  ].includes(option.value.kind);\n}\n\nfunction filterAggregateParams(option: FieldValueOption) {\n  return option.value.kind === FieldValueKind.METRICS;\n}\n\nfunction filterYAxisOptions(_displayType: DisplayType) {\n  return (option: FieldValueOption) => {\n    return [FieldValueKind.FUNCTION, FieldValueKind.NUMERIC_METRICS].includes(\n      option.value.kind\n    );\n  };\n}\n\nfunction handleReleasesTableOrderByReset(widgetQuery: WidgetQuery, newFields: string[]) {\n  const disableSortBy = widgetQuery.columns.includes('session.status');\n  if (disableSortBy) {\n    widgetQuery.orderby = '';\n  }\n  return handleOrderByReset(widgetQuery, newFields);\n}\n\nfunction handleColumnFieldChangeOverride(widgetQuery: WidgetQuery): WidgetQuery {\n  if (widgetQuery.aggregates.length === 0) {\n    // Release Health widgets require an aggregate in tables\n    const defaultReleaseHealthAggregate = `crash_free_rate(${SessionField.SESSION})`;\n    widgetQuery.aggregates = [defaultReleaseHealthAggregate];\n    widgetQuery.fields = widgetQuery.fields\n      ? [...widgetQuery.fields, defaultReleaseHealthAggregate]\n      : [defaultReleaseHealthAggregate];\n  }\n  return widgetQuery;\n}\n\nfunction getReleasesTableFieldOptions(_organization: Organization) {\n  return generateReleaseWidgetFieldOptions(Object.values(SESSIONS_FIELDS), SESSIONS_TAGS);\n}\n\nexport function transformSessionsResponseToTable(\n  data: SessionApiResponse | MetricsApiResponse,\n  widgetQuery: WidgetQuery\n): TableData {\n  const useSessionAPI = widgetQuery.columns.includes('session.status');\n  const {derivedStatusFields, injectedFields} = resolveDerivedStatusFields(\n    widgetQuery.aggregates,\n    widgetQuery.orderby,\n    useSessionAPI\n  );\n  const rows = data.groups.map((group, index) => ({\n    id: String(index),\n    ...mapDerivedMetricsToFields(group.by),\n    // if `sum(session)` or `count_unique(user)` are not\n    // requested as a part of the payload for\n    // derived status metrics through the Sessions API,\n    // they are injected into the payload and need to be\n    // stripped.\n    ...omit(mapDerivedMetricsToFields(group.totals), injectedFields),\n    // if session.status is a groupby, some post processing\n    // is needed to calculate the status derived metrics\n    // from grouped results of `sum(session)` or `count_unique(user)`\n    ...getDerivedMetrics(group.by, group.totals, derivedStatusFields),\n  }));\n\n  const singleRow = rows[0];\n  const meta = {\n    ...changeObjectValuesToTypes(omit(singleRow, 'id')),\n  };\n  return {meta, data: rows};\n}\n\nexport function transformSessionsResponseToSeries(\n  data: SessionApiResponse | MetricsApiResponse,\n  widgetQuery: WidgetQuery\n) {\n  if (data === null) {\n    return [];\n  }\n\n  const queryAlias = widgetQuery.name;\n\n  const useSessionAPI = widgetQuery.columns.includes('session.status');\n  const {derivedStatusFields: requestedStatusMetrics, injectedFields} =\n    resolveDerivedStatusFields(\n      widgetQuery.aggregates,\n      widgetQuery.orderby,\n      useSessionAPI\n    );\n\n  const results: Series[] = [];\n\n  if (!data.groups.length) {\n    return [\n      {\n        seriesName: `(${t('no results')})`,\n        data: data.intervals.map(interval => ({\n          name: interval,\n          value: 0,\n        })),\n      },\n    ];\n  }\n\n  data.groups.forEach(group => {\n    Object.keys(group.series).forEach(field => {\n      // if `sum(session)` or `count_unique(user)` are not\n      // requested as a part of the payload for\n      // derived status metrics through the Sessions API,\n      // they are injected into the payload and need to be\n      // stripped.\n      if (!!!injectedFields.includes(derivedMetricsToField(field))) {\n        results.push({\n          seriesName: getSeriesName(field, group, queryAlias),\n          data: data.intervals.map((interval, index) => ({\n            name: interval,\n            value: group.series[field][index] ?? 0,\n          })),\n        });\n      }\n    });\n    // if session.status is a groupby, some post processing\n    // is needed to calculate the status derived metrics\n    // from grouped results of `sum(session)` or `count_unique(user)`\n    if (requestedStatusMetrics.length && defined(group.by['session.status'])) {\n      requestedStatusMetrics.forEach(status => {\n        const result = status.match(DERIVED_STATUS_METRICS_PATTERN);\n        if (result) {\n          let metricField: string | undefined = undefined;\n          if (group.by['session.status'] === result[1]) {\n            if (result[2] === 'session') {\n              metricField = 'sum(session)';\n            } else if (result[2] === 'user') {\n              metricField = 'count_unique(user)';\n            }\n          }\n          results.push({\n            seriesName: getSeriesName(status, group, queryAlias),\n            data: data.intervals.map((interval, index) => ({\n              name: interval,\n              value: metricField ? group.series[metricField][index] ?? 0 : 0,\n            })),\n          });\n        }\n      });\n    }\n  });\n\n  return results;\n}\n\nfunction fieldsToDerivedMetrics(field: string): string {\n  return FIELD_TO_METRICS_EXPRESSION[field] ?? field;\n}\n\nfunction getReleasesRequest(\n  includeSeries: number,\n  includeTotals: number,\n  api: Client,\n  query: WidgetQuery,\n  organization: Organization,\n  pageFilters: PageFilters,\n  interval?: string,\n  limit?: number,\n  cursor?: string\n) {\n  const {environments, projects, datetime} = pageFilters;\n  const {start, end, period} = datetime;\n\n  let showIncompleteDataAlert: boolean = false;\n\n  if (start) {\n    let startDate: Date | undefined = undefined;\n    if (typeof start === 'string') {\n      startDate = new Date(start);\n    } else {\n      startDate = start;\n    }\n    showIncompleteDataAlert = startDate < METRICS_BACKED_SESSIONS_START_DATE;\n  } else if (period) {\n    const periodInDays = statsPeriodToDays(period);\n    const current = new Date();\n    const prior = new Date(new Date().setDate(current.getDate() - periodInDays));\n    showIncompleteDataAlert = prior < METRICS_BACKED_SESSIONS_START_DATE;\n  }\n\n  if (showIncompleteDataAlert) {\n    return Promise.reject(\n      new Error(\n        t(\n          'Releases data is only available from Jul 12. Please retry your query with a more recent date range.'\n        )\n      )\n    );\n  }\n\n  // Only time we need to use sessions API is when session.status is requested\n  // as a group by.\n  const useSessionAPI = query.columns.includes('session.status');\n  const isCustomReleaseSorting = requiresCustomReleaseSorting(query);\n  const isDescending = query.orderby.startsWith('-');\n  const rawOrderby = trimStart(query.orderby, '-');\n  const unsupportedOrderby =\n    DISABLED_SORT.includes(rawOrderby) || useSessionAPI || rawOrderby === 'release';\n  const columns = query.columns;\n\n  // Temporary solution to support sorting on releases when querying the\n  // Metrics API:\n  //\n  // We first request the top 50 recent releases from postgres. Note that the\n  // release request is based on the project and environment selected in the\n  // page filters.\n  //\n  // We then construct a massive OR condition and append it to any specified\n  // filter condition. We also maintain an ordered array of release versions\n  // to order the results returned from the metrics endpoint.\n  //\n  // Also note that we request a limit of 100 on the metrics endpoint, this\n  // is because in a query, the limit should be applied after the results are\n  // sorted based on the release version. The larger number of rows we\n  // request, the more accurate our results are going to be.\n  //\n  // After the results are sorted, we truncate the data to the requested\n  // limit. This will result in a few edge cases:\n  //\n  //   1. low to high sort may not show releases at the beginning of the\n  //      selected period if there are more than 50 releases in the selected\n  //      period.\n  //\n  //   2. if a recent release is not returned due to the 100 row limit\n  //      imposed on the metrics query the user won't see it on the\n  //      table/chart/\n  //\n\n  const {aggregates, injectedFields} = resolveDerivedStatusFields(\n    query.aggregates,\n    query.orderby,\n    useSessionAPI\n  );\n  let requestData;\n  let requester;\n  if (useSessionAPI) {\n    const sessionAggregates = aggregates.filter(\n      agg => !!!Object.values(DerivedStatusFields).includes(agg as DerivedStatusFields)\n    );\n    requestData = {\n      field: sessionAggregates,\n      orgSlug: organization.slug,\n      end,\n      environment: environments,\n      groupBy: columns,\n      limit: undefined,\n      orderBy: '', // Orderby not supported with session.status\n      interval,\n      project: projects,\n      query: query.conditions,\n      start,\n      statsPeriod: period,\n      includeAllArgs: true,\n      cursor,\n    };\n    requester = doSessionsRequest;\n  } else {\n    requestData = {\n      field: aggregates.map(fieldsToDerivedMetrics),\n      orgSlug: organization.slug,\n      end,\n      environment: environments,\n      groupBy: columns.map(fieldsToDerivedMetrics),\n      limit: columns.length === 0 ? 1 : isCustomReleaseSorting ? 100 : limit,\n      orderBy: unsupportedOrderby\n        ? ''\n        : isDescending\n        ? `-${fieldsToDerivedMetrics(rawOrderby)}`\n        : fieldsToDerivedMetrics(rawOrderby),\n      interval,\n      project: projects,\n      query: query.conditions,\n      start,\n      statsPeriod: period,\n      includeAllArgs: true,\n      cursor,\n      includeSeries,\n      includeTotals,\n    };\n    requester = doMetricsRequest;\n\n    if (\n      rawOrderby &&\n      !!!unsupportedOrderby &&\n      !!!aggregates.includes(rawOrderby) &&\n      !!!columns.includes(rawOrderby)\n    ) {\n      requestData.field = [...requestData.field, fieldsToDerivedMetrics(rawOrderby)];\n      if (!!!injectedFields.includes(rawOrderby)) {\n        injectedFields.push(rawOrderby);\n      }\n    }\n  }\n\n  return requester(api, requestData);\n}\n","import {browserHistory} from 'react-router';\nimport {Location, Query} from 'history';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport trimStart from 'lodash/trimStart';\nimport * as qs from 'query-string';\n\nimport WidgetArea from 'sentry-images/dashboard/widget-area.svg';\nimport WidgetBar from 'sentry-images/dashboard/widget-bar.svg';\nimport WidgetBigNumber from 'sentry-images/dashboard/widget-big-number.svg';\nimport WidgetLine from 'sentry-images/dashboard/widget-line-1.svg';\nimport WidgetTable from 'sentry-images/dashboard/widget-table.svg';\nimport WidgetWorldMap from 'sentry-images/dashboard/widget-world-map.svg';\n\nimport {parseArithmetic} from 'sentry/components/arithmeticInput/parser';\nimport {\n  Fidelity,\n  getDiffInMinutes,\n  getInterval,\n  SIX_HOURS,\n  TWENTY_FOUR_HOURS,\n} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeString} from 'sentry/components/organizations/pageFilters/parse';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getUtcDateString, parsePeriodToHours} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  getAggregateAlias,\n  getAggregateArg,\n  getColumnsAndAggregates,\n  isEquation,\n  isMeasurement,\n  stripEquationPrefix,\n} from 'sentry/utils/discover/fields';\nimport {DisplayModes} from 'sentry/utils/discover/types';\nimport {getMeasurements} from 'sentry/utils/measurements/measurements';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {\n  DashboardDetails,\n  DashboardFilterKeys,\n  DashboardFilters,\n  DisplayType,\n  Widget,\n  WidgetQuery,\n  WidgetType,\n} from 'sentry/views/dashboardsV2/types';\n\nexport type ValidationError = {\n  [key: string]: string | string[] | ValidationError[] | ValidationError;\n};\n\nexport type FlatValidationError = {\n  [key: string]: string | FlatValidationError[] | FlatValidationError;\n};\n\nexport function cloneDashboard(dashboard: DashboardDetails): DashboardDetails {\n  return cloneDeep(dashboard);\n}\n\nexport function eventViewFromWidget(\n  title: string,\n  query: WidgetQuery,\n  selection: PageFilters,\n  widgetDisplayType?: DisplayType\n): EventView {\n  const {start, end, period: statsPeriod} = selection.datetime;\n  const {projects, environments} = selection;\n\n  // World Map requires an additional column (geo.country_code) to display in discover when navigating from the widget\n  const fields =\n    widgetDisplayType === DisplayType.WORLD_MAP &&\n    !query.columns.includes('geo.country_code')\n      ? ['geo.country_code', ...query.columns, ...query.aggregates]\n      : [...query.columns, ...query.aggregates];\n  const conditions =\n    widgetDisplayType === DisplayType.WORLD_MAP &&\n    !query.conditions.includes('has:geo.country_code')\n      ? `${query.conditions} has:geo.country_code`.trim()\n      : query.conditions;\n\n  const {orderby} = query;\n  // Need to convert orderby to aggregate alias because eventView still uses aggregate alias format\n  const aggregateAliasOrderBy = orderby\n    ? `${orderby.startsWith('-') ? '-' : ''}${getAggregateAlias(trimStart(orderby, '-'))}`\n    : orderby;\n  return EventView.fromSavedQuery({\n    id: undefined,\n    name: title,\n    version: 2,\n    fields,\n    query: conditions,\n    orderby: aggregateAliasOrderBy,\n    projects,\n    range: statsPeriod ?? undefined,\n    start: start ? getUtcDateString(start) : undefined,\n    end: end ? getUtcDateString(end) : undefined,\n    environment: environments,\n  });\n}\n\nfunction coerceStringToArray(value?: string | string[] | null) {\n  return typeof value === 'string' ? [value] : value;\n}\n\nexport function constructWidgetFromQuery(query?: Query): Widget | undefined {\n  if (query) {\n    const queryNames = coerceStringToArray(query.queryNames);\n    const queryConditions = coerceStringToArray(query.queryConditions);\n    const queryFields = coerceStringToArray(query.queryFields);\n    const queries: WidgetQuery[] = [];\n    if (\n      queryConditions &&\n      queryNames &&\n      queryFields &&\n      typeof query.queryOrderby === 'string'\n    ) {\n      const {columns, aggregates} = getColumnsAndAggregates(queryFields);\n      queryConditions.forEach((condition, index) => {\n        queries.push({\n          name: queryNames[index],\n          conditions: condition,\n          fields: queryFields,\n          columns,\n          aggregates,\n          orderby: query.queryOrderby as string,\n        });\n      });\n    }\n    if (query.title && query.displayType && query.interval && queries.length > 0) {\n      const newWidget: Widget = {\n        ...(pick(query, ['title', 'displayType', 'interval']) as {\n          displayType: DisplayType;\n          interval: string;\n          title: string;\n        }),\n        widgetType: WidgetType.DISCOVER,\n        queries,\n      };\n      return newWidget;\n    }\n  }\n  return undefined;\n}\n\nexport function miniWidget(displayType: DisplayType): string {\n  switch (displayType) {\n    case DisplayType.BAR:\n      return WidgetBar;\n    case DisplayType.AREA:\n    case DisplayType.TOP_N:\n      return WidgetArea;\n    case DisplayType.BIG_NUMBER:\n      return WidgetBigNumber;\n    case DisplayType.TABLE:\n      return WidgetTable;\n    case DisplayType.WORLD_MAP:\n      return WidgetWorldMap;\n    case DisplayType.LINE:\n    default:\n      return WidgetLine;\n  }\n}\n\nexport function getWidgetInterval(\n  displayType: DisplayType,\n  datetimeObj: Partial<PageFilters['datetime']>,\n  widgetInterval?: string,\n  fidelity?: Fidelity\n): string {\n  // Don't fetch more than 66 bins as we're plotting on a small area.\n  const MAX_BIN_COUNT = 66;\n\n  // Bars charts are daily totals to aligned with discover. It also makes them\n  // usefully different from line/area charts until we expose the interval control, or remove it.\n  let interval = displayType === 'bar' ? '1d' : widgetInterval;\n  if (!interval) {\n    // Default to 5 minutes\n    interval = '5m';\n  }\n  const desiredPeriod = parsePeriodToHours(interval);\n  const selectedRange = getDiffInMinutes(datetimeObj);\n\n  if (fidelity) {\n    // Primarily to support lower fidelity for Release Health widgets\n    // the sort on releases and hit the metrics API endpoint.\n    interval = getInterval(datetimeObj, fidelity);\n    if (selectedRange > SIX_HOURS && selectedRange <= TWENTY_FOUR_HOURS) {\n      interval = '1h';\n    }\n    return displayType === 'bar' ? '1d' : interval;\n  }\n\n  // selectedRange is in minutes, desiredPeriod is in hours\n  // convert desiredPeriod to minutes\n  if (selectedRange / (desiredPeriod * 60) > MAX_BIN_COUNT) {\n    const highInterval = getInterval(datetimeObj, 'high');\n    // Only return high fidelity interval if desired interval is higher fidelity\n    if (desiredPeriod < parsePeriodToHours(highInterval)) {\n      return highInterval;\n    }\n  }\n  return interval;\n}\n\nexport function getFieldsFromEquations(fields: string[]): string[] {\n  // Gather all fields and functions used in equations and prepend them to the provided fields\n  const termsSet: Set<string> = new Set();\n  fields.filter(isEquation).forEach(field => {\n    const parsed = parseArithmetic(stripEquationPrefix(field)).tc;\n    parsed.fields.forEach(({term}) => termsSet.add(term as string));\n    parsed.functions.forEach(({term}) => termsSet.add(term as string));\n  });\n  return Array.from(termsSet);\n}\n\nexport function getWidgetDiscoverUrl(\n  widget: Widget,\n  selection: PageFilters,\n  organization: Organization,\n  index: number = 0,\n  isMetricsData: boolean = false\n) {\n  const eventView = eventViewFromWidget(\n    widget.title,\n    widget.queries[index],\n    selection,\n    widget.displayType\n  );\n  const discoverLocation = eventView.getResultsViewUrlTarget(organization.slug);\n\n  // Pull a max of 3 valid Y-Axis from the widget\n  const yAxisOptions = eventView.getYAxisOptions().map(({value}) => value);\n  discoverLocation.query.yAxis = [\n    ...new Set(\n      widget.queries[0].aggregates.filter(aggregate => yAxisOptions.includes(aggregate))\n    ),\n  ].slice(0, 3);\n\n  // Visualization specific transforms\n  switch (widget.displayType) {\n    case DisplayType.WORLD_MAP:\n      discoverLocation.query.display = DisplayModes.WORLDMAP;\n      break;\n    case DisplayType.BAR:\n      discoverLocation.query.display = DisplayModes.BAR;\n      break;\n    case DisplayType.TOP_N:\n      discoverLocation.query.display = DisplayModes.TOP5;\n      // Last field is used as the yAxis\n      const aggregates = widget.queries[0].aggregates;\n      discoverLocation.query.yAxis = aggregates[aggregates.length - 1];\n      if (aggregates.slice(0, -1).includes(aggregates[aggregates.length - 1])) {\n        discoverLocation.query.field = aggregates.slice(0, -1);\n      }\n      break;\n    default:\n      break;\n  }\n\n  // Equation fields need to have their terms explicitly selected as columns in the discover table\n  const fields = discoverLocation.query.field;\n  const query = widget.queries[0];\n  const queryFields = defined(query.fields)\n    ? query.fields\n    : [...query.columns, ...query.aggregates];\n  const equationFields = getFieldsFromEquations(queryFields);\n  // Updates fields by adding any individual terms from equation fields as a column\n  equationFields.forEach(term => {\n    if (Array.isArray(fields) && !fields.includes(term)) {\n      fields.unshift(term);\n    }\n  });\n\n  if (isMetricsData) {\n    discoverLocation.query.fromMetric = 'true';\n  }\n\n  // Construct and return the discover url\n  const discoverPath = `${discoverLocation.pathname}?${qs.stringify({\n    ...discoverLocation.query,\n  })}`;\n  return discoverPath;\n}\n\nexport function getWidgetIssueUrl(\n  widget: Widget,\n  selection: PageFilters,\n  organization: Organization\n) {\n  const {start, end, utc, period} = selection.datetime;\n  const datetime =\n    start && end\n      ? {start: getUtcDateString(start), end: getUtcDateString(end), utc}\n      : {statsPeriod: period};\n  const issuesLocation = `/organizations/${organization.slug}/issues/?${qs.stringify({\n    query: widget.queries?.[0]?.conditions,\n    sort: widget.queries?.[0]?.orderby,\n    ...datetime,\n    project: selection.projects,\n    environment: selection.environments,\n  })}`;\n  return issuesLocation;\n}\n\nexport function getWidgetReleasesUrl(\n  _widget: Widget,\n  selection: PageFilters,\n  organization: Organization\n) {\n  const {start, end, utc, period} = selection.datetime;\n  const datetime =\n    start && end\n      ? {start: getUtcDateString(start), end: getUtcDateString(end), utc}\n      : {statsPeriod: period};\n  const releasesLocation = `/organizations/${organization.slug}/releases/?${qs.stringify({\n    ...datetime,\n    project: selection.projects,\n    environment: selection.environments,\n  })}`;\n  return releasesLocation;\n}\n\nexport function flattenErrors(\n  data: ValidationError | string,\n  update: FlatValidationError\n): FlatValidationError {\n  if (typeof data === 'string') {\n    update.error = data;\n  } else {\n    Object.keys(data).forEach((key: string) => {\n      const value = data[key];\n      if (typeof value === 'string') {\n        update[key] = value;\n        return;\n      }\n      // Recurse into nested objects.\n      if (Array.isArray(value) && typeof value[0] === 'string') {\n        update[key] = value[0];\n        return;\n      }\n      if (Array.isArray(value) && typeof value[0] === 'object') {\n        (value as ValidationError[]).map(item => flattenErrors(item, update));\n      } else {\n        flattenErrors(value as ValidationError, update);\n      }\n    });\n  }\n  return update;\n}\n\nexport function getDashboardsMEPQueryParams(isMEPEnabled: boolean) {\n  return isMEPEnabled\n    ? {\n        dataset: 'metricsEnhanced',\n      }\n    : {};\n}\n\nexport function getNumEquations(possibleEquations: string[]) {\n  return possibleEquations.filter(isEquation).length;\n}\n\nexport function isCustomMeasurement(field: string) {\n  const definedMeasurements = Object.keys(getMeasurements());\n  return isMeasurement(field) && !definedMeasurements.includes(field);\n}\n\nexport function isCustomMeasurementWidget(widget: Widget) {\n  return (\n    widget.widgetType === WidgetType.DISCOVER &&\n    widget.queries.some(({aggregates, columns, fields}) => {\n      const aggregateArgs = aggregates.reduce((acc: string[], aggregate) => {\n        // Should be ok to use getAggregateArg. getAggregateArg only returns the first arg\n        // but there aren't any custom measurement aggregates that use custom measurements\n        // outside of the first arg.\n        const aggregateArg = getAggregateArg(aggregate);\n        if (aggregateArg) {\n          acc.push(aggregateArg);\n        }\n        return acc;\n      }, []);\n      return [...aggregateArgs, ...columns, ...(fields ?? [])].some(field =>\n        isCustomMeasurement(field)\n      );\n    })\n  );\n}\n\nexport function getCustomMeasurementQueryParams() {\n  return {\n    dataset: 'metrics',\n  };\n}\n\nexport function isWidgetUsingTransactionName(widget: Widget) {\n  return (\n    widget.widgetType === WidgetType.DISCOVER &&\n    widget.queries.some(({aggregates, columns, fields}) => {\n      const aggregateArgs = aggregates.reduce((acc: string[], aggregate) => {\n        const aggregateArg = getAggregateArg(aggregate);\n        if (aggregateArg) {\n          acc.push(aggregateArg);\n        }\n        return acc;\n      }, []);\n      return [...aggregateArgs, ...columns, ...(fields ?? [])].some(\n        field => field === 'transaction'\n      );\n    })\n  );\n}\n\nexport function hasSavedPageFilters(dashboard: DashboardDetails) {\n  return !(\n    isEmpty(dashboard.projects) &&\n    dashboard.environment === undefined &&\n    dashboard.start === undefined &&\n    dashboard.end === undefined &&\n    dashboard.period === undefined\n  );\n}\n\nexport function hasUnsavedFilterChanges(\n  initialDashboard: DashboardDetails,\n  location: Location\n) {\n  // Use Sets to compare the filter fields that are arrays\n  type Filters = {\n    end?: string;\n    environment?: Set<string>;\n    period?: string;\n    projects?: Set<number>;\n    release?: Set<string>;\n    start?: string;\n    utc?: boolean;\n  };\n\n  const savedFilters: Filters = {\n    projects: new Set(initialDashboard.projects),\n    environment: new Set(initialDashboard.environment),\n    period: initialDashboard.period,\n    start: normalizeDateTimeString(initialDashboard.start),\n    end: normalizeDateTimeString(initialDashboard.end),\n    utc: initialDashboard.utc,\n  };\n  let currentFilters = {\n    ...getCurrentPageFilters(location),\n  } as unknown as Filters;\n  currentFilters = {\n    ...currentFilters,\n    projects: new Set(currentFilters.projects),\n    environment: new Set(currentFilters.environment),\n  };\n\n  if (defined(location.query?.release)) {\n    // Release is only included in the comparison if it exists in the query\n    // params, otherwise the dashboard should be using its saved state\n    savedFilters.release = new Set(initialDashboard.filters?.release);\n    currentFilters.release = new Set(location.query?.release);\n  }\n\n  return !isEqual(savedFilters, currentFilters);\n}\n\nexport function getSavedFiltersAsPageFilters(dashboard: DashboardDetails): PageFilters {\n  return {\n    datetime: {\n      end: dashboard.end || null,\n      period: dashboard.period || null,\n      start: dashboard.start || null,\n      utc: null,\n    },\n    environments: dashboard.environment || [],\n    projects: dashboard.projects || [],\n  };\n}\n\nexport function getSavedPageFilters(dashboard: DashboardDetails) {\n  return {\n    project: dashboard.projects,\n    environment: dashboard.environment,\n    statsPeriod: dashboard.period,\n    start: normalizeDateTimeString(dashboard.start),\n    end: normalizeDateTimeString(dashboard.end),\n    utc: dashboard.utc,\n  };\n}\n\nexport function resetPageFilters(dashboard: DashboardDetails, location: Location) {\n  browserHistory.replace({\n    ...location,\n    query: getSavedPageFilters(dashboard),\n  });\n}\n\nexport function getCurrentPageFilters(\n  location: Location\n): Pick<\n  DashboardDetails,\n  'projects' | 'environment' | 'period' | 'start' | 'end' | 'utc'\n> {\n  const {project, environment, statsPeriod, start, end, utc} = location.query ?? {};\n  return {\n    // Ensure projects and environment are sent as arrays, or undefined in the request\n    // location.query will return a string if there's only one value\n    projects:\n      project === undefined || project === null\n        ? []\n        : typeof project === 'string'\n        ? [Number(project)]\n        : project.map(Number),\n    environment:\n      typeof environment === 'string' ? [environment] : environment ?? undefined,\n    period: statsPeriod as string | undefined,\n    start: defined(start) ? normalizeDateTimeString(start as string) : undefined,\n    end: defined(end) ? normalizeDateTimeString(end as string) : undefined,\n    utc: defined(utc) ? utc === 'true' : undefined,\n  };\n}\n\nexport function getDashboardFiltersFromURL(location: Location): DashboardFilters | null {\n  const dashboardFilters: DashboardFilters = {};\n  Object.values(DashboardFilterKeys).forEach(key => {\n    if (defined(location.query?.[key])) {\n      dashboardFilters[key] = decodeList(location.query?.[key]);\n    }\n  });\n  return !isEmpty(dashboardFilters) ? dashboardFilters : null;\n}\n","import styled from '@emotion/styled';\n\nimport ListItem from 'sentry/components/list/listItem';\nimport space from 'sentry/styles/space';\n\ninterface Props {\n  children: React.ReactNode;\n  description: string;\n  title: string;\n  required?: boolean;\n}\n\nexport function BuildStep({title, description, required = false, children}: Props) {\n  return (\n    <Wrapper>\n      <Heading>\n        {title}\n        {required && <RequiredBadge />}\n      </Heading>\n      <SubHeading>{description}</SubHeading>\n      <Content>{children}</Content>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(ListItem)`\n  display: grid;\n`;\n\nconst Heading = styled('h5')`\n  margin-bottom: 0;\n  color: ${p => p.theme.gray500};\n`;\n\nconst SubHeading = styled('small')`\n  color: ${p => p.theme.gray300};\n  padding: ${space(0.25)} ${space(2)} ${space(2)} 0;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    padding-top: ${space(1)};\n    margin-left: -${space(4)};\n  }\n`;\n\nconst Content = styled('div')`\n  display: grid;\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    margin-left: -${space(4)};\n  }\n`;\n\nconst RequiredBadge = styled('div')`\n  background: ${p => p.theme.red300};\n  opacity: 0.6;\n  width: 5px;\n  height: 5px;\n  border-radius: 5px;\n  margin-left: ${space(0.5)};\n  display: inline-block;\n  vertical-align: super;\n`;\n","import styled from '@emotion/styled';\n\nimport SearchBar, {SearchBarProps} from 'sentry/components/events/searchBar';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {Organization, PageFilters, SavedSearchType} from 'sentry/types';\nimport {WidgetQuery} from 'sentry/views/dashboardsV2/types';\nimport {\n  MAX_MENU_HEIGHT,\n  MAX_SEARCH_ITEMS,\n} from 'sentry/views/dashboardsV2/widgetBuilder/utils';\n\ninterface Props {\n  onClose: SearchBarProps['onClose'];\n  organization: Organization;\n  pageFilters: PageFilters;\n  widgetQuery: WidgetQuery;\n}\n\nexport function EventsSearchBar({\n  organization,\n  pageFilters,\n  onClose,\n  widgetQuery,\n}: Props) {\n  const projectIds = pageFilters.projects;\n\n  return (\n    <Search\n      searchSource=\"widget_builder\"\n      organization={organization}\n      projectIds={projectIds}\n      query={widgetQuery.conditions}\n      fields={[]}\n      onClose={onClose}\n      useFormWrapper={false}\n      maxQueryLength={MAX_QUERY_LENGTH}\n      maxSearchItems={MAX_SEARCH_ITEMS}\n      maxMenuHeight={MAX_MENU_HEIGHT}\n      savedSearchType={SavedSearchType.EVENT}\n    />\n  );\n}\n\nconst Search = styled(SearchBar)`\n  flex-grow: 1;\n`;\n","import {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport {SearchBarProps} from 'sentry/components/events/searchBar';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, SavedSearchType, TagCollection} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport useApi from 'sentry/utils/useApi';\nimport withIssueTags from 'sentry/utils/withIssueTags';\nimport {WidgetQuery} from 'sentry/views/dashboardsV2/types';\nimport {\n  MAX_MENU_HEIGHT,\n  MAX_SEARCH_ITEMS,\n} from 'sentry/views/dashboardsV2/widgetBuilder/utils';\nimport IssueListSearchBar from 'sentry/views/issueList/searchBar';\n\ninterface Props {\n  onClose: SearchBarProps['onClose'];\n  organization: Organization;\n  pageFilters: PageFilters;\n  tags: TagCollection;\n  widgetQuery: WidgetQuery;\n}\n\nfunction IssuesSearchBarContainer({\n  tags,\n  onClose,\n  widgetQuery,\n  organization,\n  pageFilters,\n}: Props) {\n  const api = useApi();\n  function tagValueLoader(key: string, search: string) {\n    const orgId = organization.slug;\n    const projectIds = pageFilters.projects.map(id => id.toString());\n    const endpointParams = {\n      start: getUtcDateString(pageFilters.datetime.start),\n      end: getUtcDateString(pageFilters.datetime.end),\n      statsPeriod: pageFilters.datetime.period,\n    };\n\n    return fetchTagValues(api, orgId, key, search, projectIds, endpointParams);\n  }\n\n  return (\n    <ClassNames>\n      {({css}) => (\n        <StyledIssueListSearchBar\n          searchSource=\"widget_builder\"\n          query={widgetQuery.conditions || ''}\n          sort=\"\"\n          onClose={onClose}\n          excludeEnvironment\n          supportedTags={tags}\n          placeholder={t('Search for issues, status, assigned, and more')}\n          tagValueLoader={tagValueLoader}\n          onSidebarToggle={() => undefined}\n          maxSearchItems={MAX_SEARCH_ITEMS}\n          savedSearchType={SavedSearchType.ISSUE}\n          dropdownClassName={css`\n            max-height: ${MAX_MENU_HEIGHT}px;\n            overflow-y: auto;\n          `}\n        />\n      )}\n    </ClassNames>\n  );\n}\n\nconst IssuesSearchBar = withIssueTags(IssuesSearchBarContainer);\n\nexport {IssuesSearchBar};\n\nconst StyledIssueListSearchBar = styled(IssueListSearchBar)`\n  flex-grow: 1;\n  button:not([aria-label='Clear search']) {\n    display: none;\n  }\n`;\n","import {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport memoize from 'lodash/memoize';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport {SearchBarProps} from 'sentry/components/events/searchBar';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {MAX_QUERY_LENGTH, NEGATION_OPERATOR, SEARCH_WILDCARD} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, SavedSearchType, Tag, TagValue} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport {WidgetQuery} from 'sentry/views/dashboardsV2/types';\nimport {\n  MAX_MENU_HEIGHT,\n  MAX_SEARCH_ITEMS,\n} from 'sentry/views/dashboardsV2/widgetBuilder/utils';\n\nimport {SESSION_STATUSES, SESSIONS_FILTER_TAGS} from '../../releaseWidget/fields';\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\ninterface Props {\n  onClose: SearchBarProps['onClose'];\n  organization: Organization;\n  pageFilters: PageFilters;\n  widgetQuery: WidgetQuery;\n}\n\nexport function ReleaseSearchBar({\n  organization,\n  pageFilters,\n  widgetQuery,\n  onClose,\n}: Props) {\n  const orgSlug = organization.slug;\n  const projectIds = pageFilters.projects;\n\n  const api = useApi();\n\n  /**\n   * Prepare query string (e.g. strip special characters like negation operator)\n   */\n  function prepareQuery(searchQuery: string) {\n    return searchQuery.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n  }\n\n  function getTagValues(tag: Tag, searchQuery: string): Promise<string[]> {\n    if (tag.name === 'session.status') {\n      return Promise.resolve(SESSION_STATUSES);\n    }\n    const projectIdStrings = projectIds?.map(String);\n    return fetchTagValues(\n      api,\n      orgSlug,\n      tag.key,\n      searchQuery,\n      projectIdStrings,\n      undefined,\n      true\n    ).then(\n      tagValues => (tagValues as TagValue[]).map(({value}) => value),\n      () => {\n        throw new Error('Unable to fetch tag values');\n      }\n    );\n  }\n\n  const supportedTags = Object.values(SESSIONS_FILTER_TAGS).reduce((acc, key) => {\n    acc[key] = {key, name: key};\n    return acc;\n  }, {});\n\n  return (\n    <ClassNames>\n      {({css}) => (\n        <SearchBar\n          onGetTagValues={memoize(\n            getTagValues,\n            ({key}, searchQuery) => `${key}-${searchQuery}`\n          )}\n          supportedTags={supportedTags}\n          placeholder={t('Search for release version, session status, and more')}\n          prepareQuery={prepareQuery}\n          dropdownClassName={css`\n            max-height: ${MAX_MENU_HEIGHT ?? 300}px;\n            overflow-y: auto;\n          `}\n          onClose={onClose}\n          maxQueryLength={MAX_QUERY_LENGTH}\n          maxSearchItems={MAX_SEARCH_ITEMS}\n          searchSource=\"widget_builder\"\n          query={widgetQuery.conditions}\n          savedSearchType={SavedSearchType.SESSION}\n          hasRecentSearches\n        />\n      )}\n    </ClassNames>\n  );\n}\n\nconst SearchBar = styled(SmartSearchBar)`\n  flex-grow: 1;\n`;\n","import {useEffect} from 'react';\nimport styled from '@emotion/styled';\nimport trimStart from 'lodash/trimStart';\n\nimport Field from 'sentry/components/forms/field';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, SelectValue, TagCollection} from 'sentry/types';\nimport {getDatasetConfig} from 'sentry/views/dashboardsV2/datasetConfig/base';\nimport {DisplayType, WidgetQuery, WidgetType} from 'sentry/views/dashboardsV2/types';\nimport {\n  DataSet,\n  getResultsLimit,\n  SortDirection,\n} from 'sentry/views/dashboardsV2/widgetBuilder/utils';\n\nimport {BuildStep} from '../buildStep';\n\nimport {SortBySelectors} from './sortBySelectors';\n\nexport const CUSTOM_EQUATION_VALUE = 'custom-equation';\n\ninterface Props {\n  dataSet: DataSet;\n  displayType: DisplayType;\n  onLimitChange: (newLimit: number) => void;\n  onSortByChange: (newSortBy: string) => void;\n  organization: Organization;\n  queries: WidgetQuery[];\n  tags: TagCollection;\n  widgetBuilderNewDesign: boolean;\n  widgetType: WidgetType;\n  error?: string;\n  limit?: number;\n}\n\nexport function SortByStep({\n  displayType,\n  onSortByChange,\n  queries,\n  widgetType,\n  error,\n  limit,\n  onLimitChange,\n  tags,\n}: Props) {\n  const datasetConfig = getDatasetConfig(widgetType);\n\n  let disableSort = false;\n  let disableSortDirection = false;\n  let disableSortReason: string | undefined = undefined;\n\n  if (datasetConfig.disableSortOptions) {\n    ({disableSort, disableSortDirection, disableSortReason} =\n      datasetConfig.disableSortOptions(queries[0]));\n  }\n\n  const orderBy = queries[0].orderby;\n  const strippedOrderBy = trimStart(orderBy, '-');\n  const maxLimit = getResultsLimit(queries.length, queries[0].aggregates.length);\n\n  const isTimeseriesChart = [\n    DisplayType.LINE,\n    DisplayType.BAR,\n    DisplayType.AREA,\n  ].includes(displayType);\n\n  useEffect(() => {\n    if (!limit) {\n      return;\n    }\n    if (limit > maxLimit) {\n      onLimitChange(maxLimit);\n    }\n  }, [limit, maxLimit, onLimitChange]);\n\n  return (\n    <BuildStep\n      title={\n        displayType === DisplayType.TABLE ? t('Sort by a column') : t('Sort by a y-axis')\n      }\n      description={\n        displayType === DisplayType.TABLE\n          ? t(\"Choose one of the columns you've created to sort by.\")\n          : t(\"Choose one of the y-axis you've created to sort by.\")\n      }\n    >\n      <Tooltip\n        title={disableSortReason}\n        disabled={!(disableSortDirection && disableSort)}\n      >\n        <Field inline={false} error={error} flexibleControlStateSize stacked>\n          {[DisplayType.AREA, DisplayType.BAR, DisplayType.LINE].includes(displayType) &&\n            limit && (\n              <ResultsLimitSelector\n                disabled={disableSortDirection && disableSort}\n                name=\"resultsLimit\"\n                menuPlacement=\"auto\"\n                options={[...Array(maxLimit).keys()].map(resultLimit => {\n                  const value = resultLimit + 1;\n                  return {\n                    label: tn('Limit to %s result', 'Limit to %s results', value),\n                    value,\n                  };\n                })}\n                value={limit}\n                onChange={(option: SelectValue<number>) => {\n                  onLimitChange(option.value);\n                }}\n              />\n            )}\n          <SortBySelectors\n            displayType={displayType}\n            widgetType={widgetType}\n            hasGroupBy={isTimeseriesChart && !!queries[0].columns.length}\n            disableSortReason={disableSortReason}\n            disableSort={disableSort}\n            disableSortDirection={disableSortDirection}\n            widgetQuery={queries[0]}\n            values={{\n              sortDirection:\n                orderBy[0] === '-'\n                  ? SortDirection.HIGH_TO_LOW\n                  : SortDirection.LOW_TO_HIGH,\n              sortBy: strippedOrderBy,\n            }}\n            onChange={({sortDirection, sortBy}) => {\n              const newOrderBy =\n                sortDirection === SortDirection.HIGH_TO_LOW ? `-${sortBy}` : sortBy;\n              onSortByChange(newOrderBy);\n            }}\n            tags={tags}\n          />\n        </Field>\n      </Tooltip>\n    </BuildStep>\n  );\n}\n\nconst ResultsLimitSelector = styled(SelectControl)`\n  margin-bottom: ${space(1)};\n`;\n","import React, {useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport trimStart from 'lodash/trimStart';\nimport uniqBy from 'lodash/uniqBy';\n\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {SelectValue, TagCollection} from 'sentry/types';\nimport {\n  EQUATION_PREFIX,\n  explodeField,\n  generateFieldAsString,\n  getEquation,\n  isEquation,\n  isEquationAlias,\n} from 'sentry/utils/discover/fields';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport {getDatasetConfig} from 'sentry/views/dashboardsV2/datasetConfig/base';\nimport {DisplayType, WidgetQuery, WidgetType} from 'sentry/views/dashboardsV2/types';\nimport {\n  SortDirection,\n  sortDirections,\n} from 'sentry/views/dashboardsV2/widgetBuilder/utils';\nimport ArithmeticInput from 'sentry/views/eventsV2/table/arithmeticInput';\nimport {QueryField} from 'sentry/views/eventsV2/table/queryField';\n\nimport {CUSTOM_EQUATION_VALUE} from '.';\n\ninterface Values {\n  sortBy: string;\n  sortDirection: SortDirection;\n}\n\ninterface Props {\n  displayType: DisplayType;\n  onChange: (values: Values) => void;\n  tags: TagCollection;\n  values: Values;\n  widgetQuery: WidgetQuery;\n  widgetType: WidgetType;\n  disableSort?: boolean;\n  disableSortDirection?: boolean;\n  disableSortReason?: string;\n  hasGroupBy?: boolean;\n}\n\nexport function SortBySelectors({\n  values,\n  widgetType,\n  onChange,\n  disableSortReason,\n  disableSort,\n  disableSortDirection,\n  widgetQuery,\n  displayType,\n}: Props) {\n  const datasetConfig = getDatasetConfig(widgetType);\n  const organization = useOrganization();\n  const columnSet = new Set(widgetQuery.columns);\n  const [showCustomEquation, setShowCustomEquation] = useState(false);\n  const [customEquation, setCustomEquation] = useState<Values>({\n    sortBy: `${EQUATION_PREFIX}`,\n    sortDirection: values.sortDirection,\n  });\n  useEffect(() => {\n    const isSortingByEquation = isEquation(trimStart(values.sortBy, '-'));\n    if (isSortingByEquation) {\n      setCustomEquation({\n        sortBy: trimStart(values.sortBy, '-'),\n        sortDirection: values.sortDirection,\n      });\n    }\n    setShowCustomEquation(isSortingByEquation);\n  }, [values.sortBy, values.sortDirection]);\n\n  return (\n    <Wrapper>\n      <Tooltip\n        title={disableSortReason}\n        disabled={!disableSortDirection || (disableSortDirection && disableSort)}\n      >\n        <SelectControl\n          name=\"sortDirection\"\n          aria-label=\"Sort direction\"\n          menuPlacement=\"auto\"\n          disabled={disableSortDirection}\n          options={Object.keys(sortDirections).map(value => ({\n            label: sortDirections[value],\n            value,\n          }))}\n          value={values.sortDirection}\n          onChange={(option: SelectValue<SortDirection>) => {\n            onChange({\n              sortBy: values.sortBy,\n              sortDirection: option.value,\n            });\n          }}\n        />\n      </Tooltip>\n      <Tooltip\n        title={disableSortReason}\n        disabled={!disableSort || (disableSortDirection && disableSort)}\n      >\n        {displayType === DisplayType.TABLE ? (\n          <SelectControl\n            name=\"sortBy\"\n            aria-label=\"Sort by\"\n            menuPlacement=\"auto\"\n            disabled={disableSort}\n            placeholder={`${t('Select a column')}\\u{2026}`}\n            value={values.sortBy}\n            options={uniqBy(\n              datasetConfig.getTableSortOptions!(organization, widgetQuery),\n              ({value}) => value\n            )}\n            onChange={(option: SelectValue<string>) => {\n              onChange({\n                sortBy: option.value,\n                sortDirection: values.sortDirection,\n              });\n            }}\n          />\n        ) : (\n          <QueryField\n            disabled={disableSort}\n            fieldValue={\n              showCustomEquation\n                ? explodeField({field: CUSTOM_EQUATION_VALUE})\n                : explodeField({field: values.sortBy})\n            }\n            fieldOptions={datasetConfig.getTimeseriesSortOptions!(\n              organization,\n              widgetQuery\n            )}\n            filterPrimaryOptions={\n              datasetConfig.filterSeriesSortOptions\n                ? datasetConfig.filterSeriesSortOptions(columnSet)\n                : undefined\n            }\n            filterAggregateParameters={datasetConfig.filterAggregateParams}\n            onChange={value => {\n              if (value.alias && isEquationAlias(value.alias)) {\n                onChange({\n                  sortBy: value.alias,\n                  sortDirection: values.sortDirection,\n                });\n                return;\n              }\n\n              const parsedValue = generateFieldAsString(value);\n              const isSortingByCustomEquation = isEquation(parsedValue);\n              setShowCustomEquation(isSortingByCustomEquation);\n              if (isSortingByCustomEquation) {\n                onChange(customEquation);\n                return;\n              }\n\n              onChange({\n                sortBy: parsedValue,\n                sortDirection: values.sortDirection,\n              });\n            }}\n          />\n        )}\n      </Tooltip>\n      {showCustomEquation && (\n        <ArithmeticInputWrapper>\n          <ArithmeticInput\n            name=\"arithmetic\"\n            type=\"text\"\n            required\n            placeholder={t('Enter Equation')}\n            value={getEquation(customEquation.sortBy)}\n            onUpdate={value => {\n              const newValue = {\n                sortBy: `${EQUATION_PREFIX}${value}`,\n                sortDirection: values.sortDirection,\n              };\n              onChange(newValue);\n              setCustomEquation(newValue);\n            }}\n            hideFieldOptions\n          />\n        </ArithmeticInputWrapper>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 200px 1fr;\n  }\n`;\n\nconst ArithmeticInputWrapper = styled('div')`\n  grid-column: 1/-1;\n`;\n","import {SelectValue} from 'sentry/types';\nimport {FieldValue, FieldValueKind} from 'sentry/views/eventsV2/table/types';\nimport {getSortLabel, IssueSortOptions} from 'sentry/views/issueList/utils';\n\nimport {ColumnType, ISSUE_FIELDS} from './fields';\n\nexport function generateIssueWidgetFieldOptions(\n  issueFields: Record<string, ColumnType> = ISSUE_FIELDS\n) {\n  const fieldKeys = Object.keys(issueFields).sort();\n  const fieldOptions: Record<string, SelectValue<FieldValue>> = {};\n\n  fieldKeys.forEach(field => {\n    fieldOptions[`field:${field}`] = {\n      label: field,\n      value: {\n        kind: FieldValueKind.FIELD,\n        meta: {\n          name: field,\n          dataType: issueFields[field],\n        },\n      },\n    };\n  });\n\n  return fieldOptions;\n}\n\nexport const ISSUE_WIDGET_SORT_OPTIONS = [\n  IssueSortOptions.DATE,\n  IssueSortOptions.NEW,\n  IssueSortOptions.FREQ,\n  IssueSortOptions.PRIORITY,\n  IssueSortOptions.USER,\n];\n\nexport function generateIssueWidgetOrderOptions(\n  includeRelativeChange: boolean\n): SelectValue<string>[] {\n  const sortOptions = [...ISSUE_WIDGET_SORT_OPTIONS];\n  if (includeRelativeChange) {\n    sortOptions.push(IssueSortOptions.TREND);\n  }\n  return sortOptions.map(sortOption => ({\n    label: getSortLabel(sortOption),\n    value: sortOption,\n  }));\n}\n","import cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport trimStart from 'lodash/trimStart';\n\nimport {generateOrderOptions} from 'sentry/components/dashboards/widgetQueriesForm';\nimport {t} from 'sentry/locale';\nimport {OrganizationSummary, TagCollection} from 'sentry/types';\nimport {\n  aggregateFunctionOutputType,\n  aggregateOutputType,\n  getEquationAliasIndex,\n  isEquation,\n  isEquationAlias,\n  isLegalYAxisType,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  stripDerivedMetricsPrefix,\n} from 'sentry/utils/discover/fields';\nimport {MeasurementCollection} from 'sentry/utils/measurements/measurements';\nimport {\n  DisplayType,\n  Widget,\n  WidgetQuery,\n  WidgetType,\n} from 'sentry/views/dashboardsV2/types';\nimport {FieldValueOption} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValueKind} from 'sentry/views/eventsV2/table/types';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\nimport {IssueSortOptions} from 'sentry/views/issueList/utils';\n\nimport {FlatValidationError, getNumEquations, ValidationError} from '../utils';\n\n// Used in the widget builder to limit the number of lines plotted in the chart\nexport const DEFAULT_RESULTS_LIMIT = 5;\nconst RESULTS_LIMIT = 10;\n\n// Both dashboards and widgets use the 'new' keyword when creating\nexport const NEW_DASHBOARD_ID = 'new';\n\nexport enum DataSet {\n  EVENTS = 'events',\n  ISSUES = 'issues',\n  RELEASES = 'releases',\n}\n\nexport enum SortDirection {\n  HIGH_TO_LOW = 'high_to_low',\n  LOW_TO_HIGH = 'low_to_high',\n}\n\nexport const sortDirections = {\n  [SortDirection.HIGH_TO_LOW]: t('High to low'),\n  [SortDirection.LOW_TO_HIGH]: t('Low to high'),\n};\n\nexport const displayTypes = {\n  [DisplayType.AREA]: t('Area Chart'),\n  [DisplayType.BAR]: t('Bar Chart'),\n  [DisplayType.LINE]: t('Line Chart'),\n  [DisplayType.TABLE]: t('Table'),\n  [DisplayType.WORLD_MAP]: t('World Map'),\n  [DisplayType.BIG_NUMBER]: t('Big Number'),\n};\n\nexport function mapErrors(\n  data: ValidationError,\n  update: FlatValidationError\n): FlatValidationError {\n  Object.keys(data).forEach((key: string) => {\n    const value = data[key];\n    if (typeof value === 'string') {\n      update[key] = value;\n      return;\n    }\n    // Recurse into nested objects.\n    if (Array.isArray(value) && typeof value[0] === 'string') {\n      update[key] = value[0];\n      return;\n    }\n    if (Array.isArray(value) && typeof value[0] === 'object') {\n      update[key] = (value as ValidationError[]).map(item => mapErrors(item, {}));\n    } else {\n      update[key] = mapErrors(value as ValidationError, {});\n    }\n  });\n\n  return update;\n}\n\nexport function normalizeQueries({\n  displayType,\n  queries,\n  widgetType,\n  widgetBuilderNewDesign = false,\n}: {\n  displayType: DisplayType;\n  queries: Widget['queries'];\n  widgetBuilderNewDesign?: boolean;\n  widgetType?: Widget['widgetType'];\n}): Widget['queries'] {\n  const isTimeseriesChart = getIsTimeseriesChart(displayType);\n  const isTabularChart = [DisplayType.TABLE, DisplayType.TOP_N].includes(displayType);\n  queries = cloneDeep(queries);\n\n  if (\n    [DisplayType.TABLE, DisplayType.WORLD_MAP, DisplayType.BIG_NUMBER].includes(\n      displayType\n    )\n  ) {\n    // Some display types may only support at most 1 query.\n    queries = queries.slice(0, 1);\n  } else if (isTimeseriesChart) {\n    // Timeseries charts supports at most 3 queries.\n    queries = queries.slice(0, 3);\n  }\n\n  if (widgetBuilderNewDesign) {\n    queries = queries.map(query => {\n      const {fields = [], columns} = query;\n\n      if (isTabularChart) {\n        // If the groupBy field has values, port everything over to the columnEditCollect field.\n        query.fields = [...new Set([...fields, ...columns])];\n      } else {\n        // If columnEditCollect has field values , port everything over to the groupBy field.\n        query.fields = fields.filter(field => !columns.includes(field));\n      }\n\n      if (\n        getIsTimeseriesChart(displayType) &&\n        !query.columns.filter(column => !!column).length\n      ) {\n        // The orderby is only applicable for timeseries charts when there's a\n        // grouping selected, if all fields are empty then we also reset the orderby\n        query.orderby = '';\n        return query;\n      }\n\n      const queryOrderBy =\n        widgetType === WidgetType.RELEASE\n          ? stripDerivedMetricsPrefix(queries[0].orderby)\n          : queries[0].orderby;\n      const rawOrderBy = trimStart(queryOrderBy, '-');\n\n      const resetOrderBy =\n        // Raw Equation from Top N only applies to timeseries\n        (isTabularChart && isEquation(rawOrderBy)) ||\n        // Not contained as tag, field, or function\n        (!isEquation(rawOrderBy) &&\n          !isEquationAlias(rawOrderBy) &&\n          ![...query.columns, ...query.aggregates].includes(rawOrderBy)) ||\n        // Equation alias and not contained\n        (isEquationAlias(rawOrderBy) &&\n          getEquationAliasIndex(rawOrderBy) >\n            getNumEquations([...query.columns, ...query.aggregates]) - 1);\n      const orderBy =\n        (!resetOrderBy && trimStart(queryOrderBy, '-')) ||\n        (widgetType === WidgetType.ISSUE\n          ? IssueSortOptions.DATE\n          : generateOrderOptions({\n              widgetType: widgetType ?? WidgetType.DISCOVER,\n              widgetBuilderNewDesign,\n              columns: queries[0].columns,\n              aggregates: queries[0].aggregates,\n            })[0].value);\n\n      // A widget should be descending if:\n      // - There is no orderby, so we're defaulting to desc\n      // - Not an issues widget since issues doesn't support descending and\n      //   the original ordering was descending\n      const isDescending =\n        !query.orderby ||\n        (widgetType !== WidgetType.ISSUE && queryOrderBy.startsWith('-'));\n\n      query.orderby = isDescending ? `-${String(orderBy)}` : String(orderBy);\n\n      return query;\n    });\n  }\n\n  if (isTabularChart) {\n    return queries;\n  }\n\n  // Filter out non-aggregate fields\n  queries = queries.map(query => {\n    let aggregates = query.aggregates;\n\n    if (isTimeseriesChart || displayType === DisplayType.WORLD_MAP) {\n      // Filter out fields that will not generate numeric output types\n      aggregates = aggregates.filter(aggregate =>\n        isLegalYAxisType(aggregateOutputType(aggregate))\n      );\n    }\n\n    if (isTimeseriesChart && aggregates.length && aggregates.length > 3) {\n      // Timeseries charts supports at most 3 fields.\n      aggregates = aggregates.slice(0, 3);\n    }\n\n    return {\n      ...query,\n      fields: aggregates.length ? aggregates : ['count()'],\n      columns: widgetBuilderNewDesign && query.columns ? query.columns : [],\n      aggregates: aggregates.length ? aggregates : ['count()'],\n    };\n  });\n\n  if (isTimeseriesChart) {\n    // For timeseries widget, all queries must share identical set of fields.\n\n    const referenceAggregates = [...queries[0].aggregates];\n\n    queryLoop: for (const query of queries) {\n      if (referenceAggregates.length >= 3) {\n        break;\n      }\n\n      if (isEqual(referenceAggregates, query.aggregates)) {\n        continue;\n      }\n\n      for (const aggregate of query.aggregates) {\n        if (referenceAggregates.length >= 3) {\n          break queryLoop;\n        }\n\n        if (!referenceAggregates.includes(aggregate)) {\n          referenceAggregates.push(aggregate);\n        }\n      }\n    }\n\n    queries = queries.map(query => {\n      return {\n        ...query,\n        columns: widgetBuilderNewDesign && query.columns ? query.columns : [],\n        aggregates: referenceAggregates,\n        fields: referenceAggregates,\n      };\n    });\n  }\n\n  if ([DisplayType.WORLD_MAP, DisplayType.BIG_NUMBER].includes(displayType)) {\n    // For world map chart, cap fields of the queries to only one field.\n    queries = queries.map(query => {\n      return {\n        ...query,\n        fields: query.aggregates.slice(0, 1),\n        aggregates: query.aggregates.slice(0, 1),\n        orderby: '',\n        columns: [],\n      };\n    });\n  }\n\n  return queries;\n}\n\nexport function getParsedDefaultWidgetQuery(query = ''): WidgetQuery | undefined {\n  // \"any\" was needed here because it doesn't pass in getsentry\n  const urlSeachParams = new URLSearchParams(query) as any;\n  const parsedQuery = Object.fromEntries(urlSeachParams.entries());\n\n  if (!Object.keys(parsedQuery).length) {\n    return undefined;\n  }\n\n  const columns = parsedQuery.columns ? getFields(parsedQuery.columns) : [];\n  const aggregates = parsedQuery.aggregates ? getFields(parsedQuery.aggregates) : [];\n  const fields = [...columns, ...aggregates];\n\n  return {\n    ...parsedQuery,\n    fields,\n    columns,\n    aggregates,\n  } as WidgetQuery;\n}\n\nexport function getFields(fieldsString: string): string[] {\n  // Use a negative lookahead to avoid splitting on commas inside equation fields\n  return fieldsString.split(/,(?![^(]*\\))/g);\n}\n\nexport function getAmendedFieldOptions({\n  measurements,\n  organization,\n  tags,\n}: {\n  measurements: MeasurementCollection;\n  organization: OrganizationSummary;\n  tags: TagCollection;\n}) {\n  return generateFieldOptions({\n    organization,\n    tagKeys: Object.values(tags).map(({key}) => key),\n    measurementKeys: Object.values(measurements).map(({key}) => key),\n    spanOperationBreakdownKeys: SPAN_OP_BREAKDOWN_FIELDS,\n  });\n}\n\n// Extract metric names from aggregation functions present in the widget queries\nexport function getMetricFields(queries: WidgetQuery[]) {\n  return queries.reduce((acc, query) => {\n    for (const field of [...query.aggregates, ...query.columns]) {\n      const fieldParameter = /\\(([^)]*)\\)/.exec(field)?.[1];\n      if (fieldParameter && !acc.includes(fieldParameter)) {\n        acc.push(fieldParameter);\n      }\n    }\n\n    return acc;\n  }, [] as string[]);\n}\n\n// Used to limit the number of results of the \"filter your results\" fields dropdown\nexport const MAX_SEARCH_ITEMS = 5;\n\n// Used to set the max height of the smartSearchBar menu\nexport const MAX_MENU_HEIGHT = 250;\n\n// Any function/field choice for Big Number widgets is legal since the\n// data source is from an endpoint that is not timeseries-based.\n// The function/field choice for World Map widget will need to be numeric-like.\n// Column builder for Table widget is already handled above.\nexport function doNotValidateYAxis(displayType: DisplayType) {\n  return displayType === DisplayType.BIG_NUMBER;\n}\n\nexport function filterPrimaryOptions({\n  option,\n  widgetType,\n  displayType,\n}: {\n  displayType: DisplayType;\n  option: FieldValueOption;\n  widgetType?: WidgetType;\n}) {\n  if (widgetType === WidgetType.RELEASE) {\n    if (displayType === DisplayType.TABLE) {\n      return [\n        FieldValueKind.FUNCTION,\n        FieldValueKind.FIELD,\n        FieldValueKind.NUMERIC_METRICS,\n      ].includes(option.value.kind);\n    }\n    if (displayType === DisplayType.TOP_N) {\n      return option.value.kind === FieldValueKind.TAG;\n    }\n  }\n\n  // Only validate function names for timeseries widgets and\n  // world map widgets.\n  if (!doNotValidateYAxis(displayType) && option.value.kind === FieldValueKind.FUNCTION) {\n    const primaryOutput = aggregateFunctionOutputType(option.value.meta.name, undefined);\n    if (primaryOutput) {\n      // If a function returns a specific type, then validate it.\n      return isLegalYAxisType(primaryOutput);\n    }\n  }\n\n  return [FieldValueKind.FUNCTION, FieldValueKind.NUMERIC_METRICS].includes(\n    option.value.kind\n  );\n}\n\nexport function getResultsLimit(numQueries: number, numYAxes: number) {\n  if (numQueries === 0 || numYAxes === 0) {\n    return DEFAULT_RESULTS_LIMIT;\n  }\n\n  return Math.floor(RESULTS_LIMIT / (numQueries * numYAxes));\n}\n\nexport function getIsTimeseriesChart(displayType: DisplayType) {\n  return [DisplayType.LINE, DisplayType.AREA, DisplayType.BAR].includes(displayType);\n}\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport {withTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {DataZoomComponentOption, LegendComponentOption} from 'echarts';\nimport {Location} from 'history';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\n\nimport {AreaChart} from 'sentry/components/charts/areaChart';\nimport {BarChart} from 'sentry/components/charts/barChart';\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport {LineChart} from 'sentry/components/charts/lineChart';\nimport SimpleTableChart from 'sentry/components/charts/simpleTableChart';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {getSeriesSelection, processTableResults} from 'sentry/components/charts/utils';\nimport {WorldMapChart} from 'sentry/components/charts/worldMapChart';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Placeholder, {PlaceholderProps} from 'sentry/components/placeholder';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconWarning} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {EChartDataZoomHandler, EChartEventHandler} from 'sentry/types/echarts';\nimport {\n  axisLabelFormatter,\n  axisLabelFormatterUsingAggregateOutputType,\n  tooltipFormatter,\n} from 'sentry/utils/discover/charts';\nimport {getFieldFormatter} from 'sentry/utils/discover/fieldRenderers';\nimport {\n  aggregateOutputType,\n  AggregationOutputType,\n  getAggregateArg,\n  getEquation,\n  getMeasurementSlug,\n  isEquation,\n  maybeEquationAlias,\n  stripDerivedMetricsPrefix,\n  stripEquationPrefix,\n} from 'sentry/utils/discover/fields';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {Theme} from 'sentry/utils/theme';\nimport {eventViewFromWidget} from 'sentry/views/dashboardsV2/utils';\n\nimport {getDatasetConfig} from '../datasetConfig/base';\nimport {DisplayType, Widget, WidgetType} from '../types';\n\nimport {GenericWidgetQueriesChildrenProps} from './genericWidgetQueries';\n\nconst OTHER = 'Other';\nexport const SLIDER_HEIGHT = 60;\n\nexport type AugmentedEChartDataZoomHandler = (\n  params: Parameters<EChartDataZoomHandler>[0] & {\n    seriesEnd: string | number;\n    seriesStart: string | number;\n  },\n  instance: Parameters<EChartDataZoomHandler>[1]\n) => void;\n\ntype TableResultProps = Pick<\n  GenericWidgetQueriesChildrenProps,\n  'errorMessage' | 'loading' | 'tableResults'\n>;\n\ntype WidgetCardChartProps = Pick<\n  GenericWidgetQueriesChildrenProps,\n  'timeseriesResults' | 'tableResults' | 'errorMessage' | 'loading'\n> & {\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n  selection: PageFilters;\n  theme: Theme;\n  widget: Widget;\n  chartZoomOptions?: DataZoomComponentOption;\n  expandNumbers?: boolean;\n  isMobile?: boolean;\n  legendOptions?: LegendComponentOption;\n  noPadding?: boolean;\n  onLegendSelectChanged?: EChartEventHandler<{\n    name: string;\n    selected: Record<string, boolean>;\n    type: 'legendselectchanged';\n  }>;\n  onZoom?: AugmentedEChartDataZoomHandler;\n  showSlider?: boolean;\n  timeseriesResultsType?: string;\n  windowWidth?: number;\n};\n\ntype State = {\n  // For tracking height of the container wrapping BigNumber widgets\n  // so we can dynamically scale font-size\n  containerHeight: number;\n};\n\nclass WidgetCardChart extends Component<WidgetCardChartProps, State> {\n  state = {containerHeight: 0};\n\n  shouldComponentUpdate(nextProps: WidgetCardChartProps, nextState: State): boolean {\n    if (\n      this.props.widget.displayType === DisplayType.BIG_NUMBER &&\n      nextProps.widget.displayType === DisplayType.BIG_NUMBER &&\n      (this.props.windowWidth !== nextProps.windowWidth ||\n        !isEqual(this.props.widget?.layout, nextProps.widget?.layout))\n    ) {\n      return true;\n    }\n\n    // Widget title changes should not update the WidgetCardChart component tree\n    const currentProps = {\n      ...omit(this.props, ['windowWidth']),\n      widget: {\n        ...this.props.widget,\n        title: '',\n      },\n    };\n\n    nextProps = {\n      ...omit(nextProps, ['windowWidth']),\n      widget: {\n        ...nextProps.widget,\n        title: '',\n      },\n    };\n\n    return !isEqual(currentProps, nextProps) || !isEqual(this.state, nextState);\n  }\n\n  tableResultComponent({\n    loading,\n    errorMessage,\n    tableResults,\n  }: TableResultProps): React.ReactNode {\n    const {location, widget, organization, selection} = this.props;\n    if (errorMessage) {\n      return (\n        <StyledErrorPanel>\n          <IconWarning color=\"gray500\" size=\"lg\" />\n        </StyledErrorPanel>\n      );\n    }\n\n    if (typeof tableResults === 'undefined') {\n      // Align height to other charts.\n      return <LoadingPlaceholder />;\n    }\n\n    const datasetConfig = getDatasetConfig(widget.widgetType);\n\n    return tableResults.map((result, i) => {\n      const fields = widget.queries[i]?.fields?.map(stripDerivedMetricsPrefix) ?? [];\n      const fieldAliases = widget.queries[i]?.fieldAliases ?? [];\n      const eventView = eventViewFromWidget(\n        widget.title,\n        widget.queries[0],\n        selection,\n        widget.displayType\n      );\n\n      return (\n        <StyledSimpleTableChart\n          key={`table:${result.title}`}\n          eventView={eventView}\n          fieldAliases={fieldAliases}\n          location={location}\n          fields={fields}\n          title={tableResults.length > 1 ? result.title : ''}\n          loading={loading}\n          loader={<LoadingPlaceholder />}\n          metadata={result.meta}\n          data={result.data}\n          organization={organization}\n          stickyHeaders\n          getCustomFieldRenderer={datasetConfig.getCustomFieldRenderer}\n        />\n      );\n    });\n  }\n\n  bigNumberComponent({\n    loading,\n    errorMessage,\n    tableResults,\n  }: TableResultProps): React.ReactNode {\n    if (errorMessage) {\n      return (\n        <StyledErrorPanel>\n          <IconWarning color=\"gray500\" size=\"lg\" />\n        </StyledErrorPanel>\n      );\n    }\n\n    if (typeof tableResults === 'undefined' || loading) {\n      return <BigNumber>{'\\u2014'}</BigNumber>;\n    }\n\n    const {containerHeight} = this.state;\n    const {location, organization, widget, isMobile, expandNumbers} = this.props;\n    const isAlias =\n      !organization.features.includes('discover-frontend-use-events-endpoint') &&\n      widget.widgetType !== WidgetType.RELEASE;\n\n    return tableResults.map(result => {\n      const tableMeta = {...result.meta};\n      const fields = Object.keys(tableMeta);\n\n      const field = fields[0];\n\n      // Change tableMeta for the field from integer to string since we will be rendering with toLocaleString\n      const shouldExpandInteger = !!expandNumbers && tableMeta[field] === 'integer';\n      if (shouldExpandInteger) {\n        tableMeta[field] = 'string';\n      }\n\n      if (!field || !result.data?.length) {\n        return <BigNumber key={`big_number:${result.title}`}>{'\\u2014'}</BigNumber>;\n      }\n\n      const dataRow = result.data[0];\n      const fieldRenderer = getFieldFormatter(field, tableMeta, isAlias);\n\n      const unit = tableMeta.units?.[field];\n      const rendered = fieldRenderer(\n        shouldExpandInteger ? {[field]: dataRow[field].toLocaleString()} : dataRow,\n        {location, organization, unit}\n      );\n\n      const isModalWidget = !!!(widget.id || widget.tempId);\n      if (\n        !!!organization.features.includes('dashboard-grid-layout') ||\n        isModalWidget ||\n        isMobile\n      ) {\n        return <BigNumber key={`big_number:${result.title}`}>{rendered}</BigNumber>;\n      }\n\n      // The font size is the container height, minus the top and bottom padding\n      const fontSize = !!!expandNumbers\n        ? containerHeight - parseInt(space(1), 10) - parseInt(space(3), 10)\n        : `max(min(8vw, 90px), ${space(4)})`;\n\n      return (\n        <BigNumber\n          key={`big_number:${result.title}`}\n          style={{\n            fontSize,\n            ...(!!expandNumbers\n              ? {padding: `${space(1)} ${space(3)} 0 ${space(3)}`}\n              : {}),\n          }}\n        >\n          <Tooltip title={rendered} showOnlyOnOverflow>\n            {rendered}\n          </Tooltip>\n        </BigNumber>\n      );\n    });\n  }\n\n  chartComponent(chartProps): React.ReactNode {\n    const {organization, widget} = this.props;\n    const stacked =\n      organization.features.includes('new-widget-builder-experience-design') &&\n      widget.queries[0].columns.length > 0;\n\n    switch (widget.displayType) {\n      case 'bar':\n        return <BarChart {...chartProps} stacked={stacked} />;\n      case 'area':\n      case 'top_n':\n        return <AreaChart stacked {...chartProps} />;\n      case 'world_map':\n        return <WorldMapChart {...chartProps} />;\n      case 'line':\n      default:\n        return <LineChart {...chartProps} />;\n    }\n  }\n\n  render() {\n    const {\n      theme,\n      tableResults,\n      timeseriesResults,\n      errorMessage,\n      loading,\n      widget,\n      organization,\n      onZoom,\n      legendOptions,\n      expandNumbers,\n      showSlider,\n      noPadding,\n      chartZoomOptions,\n      timeseriesResultsType,\n    } = this.props;\n\n    if (widget.displayType === 'table') {\n      return getDynamicText({\n        value: (\n          <TransitionChart loading={loading} reloading={loading}>\n            <LoadingScreen loading={loading} />\n            {this.tableResultComponent({tableResults, loading, errorMessage})}\n          </TransitionChart>\n        ),\n        fixed: <Placeholder height=\"200px\" testId=\"skeleton-ui\" />,\n      });\n    }\n\n    if (widget.displayType === 'big_number') {\n      return (\n        <TransitionChart loading={loading} reloading={loading}>\n          <LoadingScreen loading={loading} />\n          <BigNumberResizeWrapper\n            ref={el => {\n              if (el !== null && !!!expandNumbers) {\n                const {height} = el.getBoundingClientRect();\n                if (height !== this.state.containerHeight) {\n                  this.setState({containerHeight: height});\n                }\n              }\n            }}\n          >\n            {this.bigNumberComponent({tableResults, loading, errorMessage})}\n          </BigNumberResizeWrapper>\n        </TransitionChart>\n      );\n    }\n\n    if (errorMessage) {\n      return (\n        <StyledErrorPanel>\n          <IconWarning color=\"gray500\" size=\"lg\" />\n        </StyledErrorPanel>\n      );\n    }\n\n    const {location, router, selection, onLegendSelectChanged} = this.props;\n    const {start, end, period, utc} = selection.datetime;\n\n    // Only allow height resizing for widgets that are on a dashboard\n    const autoHeightResize = Boolean(\n      organization.features.includes('dashboard-grid-layout') &&\n        (widget.id || widget.tempId)\n    );\n\n    if (widget.displayType === 'world_map') {\n      const {data, title} = processTableResults(tableResults);\n      const series = [\n        {\n          seriesName: title,\n          data,\n        },\n      ];\n\n      return (\n        <TransitionChart loading={loading} reloading={loading}>\n          <LoadingScreen loading={loading} />\n          <ChartWrapper autoHeightResize={autoHeightResize}>\n            {getDynamicText({\n              value: this.chartComponent({\n                series,\n                autoHeightResize,\n              }),\n              fixed: <Placeholder height=\"200px\" testId=\"skeleton-ui\" />,\n            })}\n          </ChartWrapper>\n        </TransitionChart>\n      );\n    }\n\n    const legend = {\n      left: 0,\n      top: 0,\n      selected: getSeriesSelection(location),\n      formatter: (seriesName: string) => {\n        const arg = getAggregateArg(seriesName);\n        if (arg !== null) {\n          const slug = getMeasurementSlug(arg);\n          if (slug !== null) {\n            seriesName = slug.toUpperCase();\n          }\n        }\n        if (maybeEquationAlias(seriesName)) {\n          seriesName = stripEquationPrefix(seriesName);\n        }\n        return seriesName;\n      },\n      ...legendOptions,\n    };\n\n    const axisField = widget.queries[0]?.aggregates?.[0] ?? 'count()';\n    const axisLabel = isEquation(axisField) ? getEquation(axisField) : axisField;\n    const chartOptions = {\n      autoHeightResize,\n      grid: {\n        left: 0,\n        right: 4,\n        top: '40px',\n        bottom: showSlider ? SLIDER_HEIGHT : 0,\n      },\n      seriesOptions: {\n        showSymbol: false,\n      },\n      tooltip: {\n        trigger: 'axis',\n        valueFormatter: (value: number, seriesName: string) =>\n          timeseriesResultsType\n            ? tooltipFormatter(value, timeseriesResultsType as AggregationOutputType)\n            : tooltipFormatter(value, aggregateOutputType(seriesName)),\n      },\n      yAxis: {\n        axisLabel: {\n          color: theme.chartLabel,\n          formatter: (value: number) =>\n            timeseriesResultsType\n              ? axisLabelFormatterUsingAggregateOutputType(value, timeseriesResultsType)\n              : axisLabelFormatter(value, aggregateOutputType(axisLabel)),\n        },\n      },\n    };\n\n    return (\n      <ChartZoom\n        router={router}\n        period={period}\n        start={start}\n        end={end}\n        utc={utc}\n        showSlider={showSlider}\n        chartZoomOptions={chartZoomOptions}\n      >\n        {zoomRenderProps => {\n          if (errorMessage) {\n            return (\n              <StyledErrorPanel>\n                <IconWarning color=\"gray500\" size=\"lg\" />\n              </StyledErrorPanel>\n            );\n          }\n\n          const otherRegex = new RegExp(`(?:.* : ${OTHER}$)|^${OTHER}$`);\n          const shouldColorOther = timeseriesResults?.some(\n            ({seriesName}) => seriesName && seriesName.match(otherRegex)\n          );\n          const colors = timeseriesResults\n            ? theme.charts.getColorPalette(\n                timeseriesResults.length - (shouldColorOther ? 3 : 2)\n              )\n            : [];\n          // TODO(wmak): Need to change this when updating dashboards to support variable topEvents\n          if (shouldColorOther) {\n            colors[colors.length] = theme.chartOther;\n          }\n\n          // Create a list of series based on the order of the fields,\n          const series = timeseriesResults\n            ? timeseriesResults.map((values, i: number) => {\n                let seriesName = '';\n                if (values.seriesName !== undefined) {\n                  seriesName = isEquation(values.seriesName)\n                    ? getEquation(values.seriesName)\n                    : values.seriesName;\n                }\n                return {\n                  ...values,\n                  seriesName,\n                  color: colors[i],\n                };\n              })\n            : [];\n\n          const seriesStart = series[0]?.data[0]?.name;\n          const seriesEnd = series[0]?.data[series[0].data.length - 1]?.name;\n          return (\n            <TransitionChart loading={loading} reloading={loading}>\n              <LoadingScreen loading={loading} />\n              <ChartWrapper autoHeightResize={autoHeightResize} noPadding={noPadding}>\n                {getDynamicText({\n                  value: this.chartComponent({\n                    ...zoomRenderProps,\n                    ...chartOptions,\n                    // Override default datazoom behaviour for updating Global Selection Header\n                    ...(onZoom\n                      ? {\n                          onDataZoom: (evt, chartProps) =>\n                            // Need to pass seriesStart and seriesEnd to onZoom since slider zooms\n                            // callback with percentage instead of datetime values. Passing seriesStart\n                            // and seriesEnd allows calculating datetime values with percentage.\n                            onZoom({...evt, seriesStart, seriesEnd}, chartProps),\n                        }\n                      : {}),\n                    legend,\n                    series,\n                    onLegendSelectChanged,\n                  }),\n                  fixed: <Placeholder height=\"200px\" testId=\"skeleton-ui\" />,\n                })}\n              </ChartWrapper>\n            </TransitionChart>\n          );\n        }}\n      </ChartZoom>\n    );\n  }\n}\n\nexport default withTheme(WidgetCardChart);\n\nconst StyledTransparentLoadingMask = styled(props => (\n  <TransparentLoadingMask {...props} maskBackgroundColor=\"transparent\" />\n))`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LoadingScreen = ({loading}: {loading: boolean}) => {\n  if (!loading) {\n    return null;\n  }\n  return (\n    <StyledTransparentLoadingMask visible={loading}>\n      <LoadingIndicator mini />\n    </StyledTransparentLoadingMask>\n  );\n};\n\nconst LoadingPlaceholder = styled(({className}: PlaceholderProps) => (\n  <Placeholder height=\"200px\" className={className} />\n))`\n  background-color: ${p => p.theme.surface200};\n`;\n\nconst BigNumberResizeWrapper = styled('div')`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst BigNumber = styled('div')`\n  line-height: 1;\n  display: inline-flex;\n  flex: 1;\n  width: 100%;\n  min-height: 0;\n  font-size: 32px;\n  color: ${p => p.theme.headingColor};\n  padding: ${space(1)} ${space(3)} ${space(3)} ${space(3)};\n\n  * {\n    text-align: left !important;\n  }\n`;\n\nconst ChartWrapper = styled('div')<{autoHeightResize: boolean; noPadding?: boolean}>`\n  ${p => p.autoHeightResize && 'height: 100%;'}\n  padding: ${p => (!!p.noPadding ? `0` : `0 ${space(3)} ${space(3)}`)};\n`;\n\nconst StyledSimpleTableChart = styled(SimpleTableChart)`\n  margin-top: ${space(1.5)};\n  border-bottom-left-radius: ${p => p.theme.borderRadius};\n  border-bottom-right-radius: ${p => p.theme.borderRadius};\n  font-size: ${p => p.theme.fontSizeMedium};\n  box-shadow: none;\n`;\n\nconst StyledErrorPanel = styled(ErrorPanel)`\n  padding: ${space(2)};\n`;\n","import {ReactNode, useState} from 'react';\n\nimport {createDefinedContext} from 'sentry/utils/performance/contexts/utils';\n\ninterface DashboardsMEPContextInterface {\n  setIsMetricsData: (value?: boolean) => void;\n  isMetricsData?: boolean;\n}\n\nconst [_DashboardsMEPProvider, useDashboardsMEPContext, DashboardsMEPContext] =\n  createDefinedContext<DashboardsMEPContextInterface>({\n    name: 'DashboardsMEPContext',\n  });\n\nconst DashboardsMEPConsumer = DashboardsMEPContext.Consumer;\n\nfunction DashboardsMEPProvider({children}: {children: ReactNode}) {\n  const [isMetricsData, setIsMetricsData] = useState<boolean | undefined>(undefined); // undefined means not initialized\n\n  return (\n    <_DashboardsMEPProvider\n      value={{\n        isMetricsData,\n        setIsMetricsData,\n      }}\n    >\n      {children}\n    </_DashboardsMEPProvider>\n  );\n}\n\nexport {\n  DashboardsMEPContext,\n  DashboardsMEPProvider,\n  DashboardsMEPConsumer,\n  useDashboardsMEPContext,\n};\n","import {Component} from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {isSelectionEqual} from 'sentry/components/organizations/pageFilters/utils';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {TableDataWithTitle} from 'sentry/utils/discover/discoverQuery';\n\nimport {DatasetConfig} from '../datasetConfig/base';\nimport {\n  DashboardFilters,\n  DEFAULT_TABLE_LIMIT,\n  DisplayType,\n  Widget,\n  WidgetQuery,\n} from '../types';\n\nfunction getReferrer(displayType: DisplayType) {\n  let referrer: string = '';\n\n  if (displayType === DisplayType.TABLE) {\n    referrer = 'api.dashboards.tablewidget';\n  } else if (displayType === DisplayType.BIG_NUMBER) {\n    referrer = 'api.dashboards.bignumberwidget';\n  } else if (displayType === DisplayType.WORLD_MAP) {\n    referrer = 'api.dashboards.worldmapwidget';\n  } else {\n    referrer = `api.dashboards.widget.${displayType}-chart`;\n  }\n\n  return referrer;\n}\n\nexport type OnDataFetchedProps = {\n  pageLinks?: string;\n  tableResults?: TableDataWithTitle[];\n  timeseriesResults?: Series[];\n  timeseriesResultsType?: string;\n  totalIssuesCount?: string;\n};\n\nexport type GenericWidgetQueriesChildrenProps = {\n  loading: boolean;\n  errorMessage?: string;\n  pageLinks?: string;\n  tableResults?: TableDataWithTitle[];\n  timeseriesResults?: Series[];\n  timeseriesResultsType?: string;\n  totalCount?: string;\n};\n\nexport type GenericWidgetQueriesProps<SeriesResponse, TableResponse> = {\n  api: Client;\n  children: (props: GenericWidgetQueriesChildrenProps) => JSX.Element;\n  config: DatasetConfig<SeriesResponse, TableResponse>;\n  organization: Organization;\n  selection: PageFilters;\n  widget: Widget;\n  afterFetchSeriesData?: (result: SeriesResponse) => void;\n  afterFetchTableData?: (\n    result: TableResponse,\n    response?: ResponseMeta\n  ) => void | {totalIssuesCount?: string};\n  cursor?: string;\n  customDidUpdateComparator?: (\n    prevProps: GenericWidgetQueriesProps<SeriesResponse, TableResponse>,\n    nextProps: GenericWidgetQueriesProps<SeriesResponse, TableResponse>\n  ) => boolean;\n  dashboardFilters?: DashboardFilters;\n  limit?: number;\n  loading?: boolean;\n  onDataFetched?: ({\n    tableResults,\n    timeseriesResults,\n    totalIssuesCount,\n    pageLinks,\n    timeseriesResultsType,\n  }: OnDataFetchedProps) => void;\n};\n\ntype State<SeriesResponse> = {\n  loading: boolean;\n  errorMessage?: GenericWidgetQueriesChildrenProps['errorMessage'];\n  pageLinks?: GenericWidgetQueriesChildrenProps['pageLinks'];\n  queryFetchID?: symbol;\n  rawResults?: SeriesResponse[];\n  tableResults?: GenericWidgetQueriesChildrenProps['tableResults'];\n  timeseriesResults?: GenericWidgetQueriesChildrenProps['timeseriesResults'];\n  timeseriesResultsType?: string;\n};\n\nclass GenericWidgetQueries<SeriesResponse, TableResponse> extends Component<\n  GenericWidgetQueriesProps<SeriesResponse, TableResponse>,\n  State<SeriesResponse>\n> {\n  state: State<SeriesResponse> = {\n    loading: true,\n    queryFetchID: undefined,\n    errorMessage: undefined,\n    timeseriesResults: undefined,\n    rawResults: undefined,\n    tableResults: undefined,\n    pageLinks: undefined,\n    timeseriesResultsType: undefined,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    if (!this.props.loading) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(\n    prevProps: GenericWidgetQueriesProps<SeriesResponse, TableResponse>\n  ) {\n    const {selection, widget, cursor, organization, config, customDidUpdateComparator} =\n      this.props;\n\n    // We do not fetch data whenever the query name changes.\n    // Also don't count empty fields when checking for field changes\n    const [prevWidgetQueryNames, prevWidgetQueries] = prevProps.widget.queries\n      .map((query: WidgetQuery) => {\n        query.aggregates = query.aggregates.filter(field => !!field);\n        query.columns = query.columns.filter(field => !!field);\n        return query;\n      })\n      .reduce(\n        ([names, queries]: [string[], Omit<WidgetQuery, 'name'>[]], {name, ...rest}) => {\n          names.push(name);\n          queries.push(rest);\n          return [names, queries];\n        },\n        [[], []]\n      );\n\n    const [widgetQueryNames, widgetQueries] = widget.queries\n      .map((query: WidgetQuery) => {\n        query.aggregates = query.aggregates.filter(\n          field => !!field && field !== 'equation|'\n        );\n        query.columns = query.columns.filter(field => !!field && field !== 'equation|');\n        return query;\n      })\n      .reduce(\n        ([names, queries]: [string[], Omit<WidgetQuery, 'name'>[]], {name, ...rest}) => {\n          names.push(name);\n          queries.push(rest);\n          return [names, queries];\n        },\n        [[], []]\n      );\n\n    if (\n      customDidUpdateComparator\n        ? customDidUpdateComparator(prevProps, this.props)\n        : widget.limit !== prevProps.widget.limit ||\n          !isEqual(widget.displayType, prevProps.widget.displayType) ||\n          !isEqual(widget.interval, prevProps.widget.interval) ||\n          !isEqual(widgetQueries, prevWidgetQueries) ||\n          !isEqual(this.props.dashboardFilters, prevProps.dashboardFilters) ||\n          !isSelectionEqual(selection, prevProps.selection) ||\n          cursor !== prevProps.cursor\n    ) {\n      this.fetchData();\n      return;\n    }\n\n    if (\n      !this.state.loading &&\n      !isEqual(prevWidgetQueryNames, widgetQueryNames) &&\n      this.state.rawResults?.length === widget.queries.length\n    ) {\n      // If the query names has changed, then update timeseries labels\n\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState(prevState => {\n        const timeseriesResults = widget.queries.reduce((acc: Series[], query, index) => {\n          return acc.concat(\n            config.transformSeries!(prevState.rawResults![index], query, organization)\n          );\n        }, []);\n\n        return {...prevState, timeseriesResults};\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  private _isMounted: boolean = false;\n\n  applyDashboardFilters(widget: Widget): Widget {\n    const {dashboardFilters} = this.props;\n\n    let dashboardFilterConditions = '';\n    if (dashboardFilters) {\n      for (const [key, activeFilters] of Object.entries(dashboardFilters)) {\n        if (activeFilters.length === 1) {\n          dashboardFilterConditions += `${key}:${activeFilters[0]} `;\n        } else if (activeFilters.length > 1) {\n          dashboardFilterConditions += `${key}:[${activeFilters.join(',')}] `;\n        }\n      }\n    }\n\n    widget.queries.forEach(query => {\n      query.conditions =\n        query.conditions +\n        (dashboardFilterConditions === '' ? '' : ` ${dashboardFilterConditions}`);\n    });\n\n    return widget;\n  }\n\n  async fetchTableData(queryFetchID: symbol) {\n    const {\n      widget: originalWidget,\n      limit,\n      config,\n      api,\n      organization,\n      selection,\n      cursor,\n      afterFetchTableData,\n      onDataFetched,\n    } = this.props;\n    const widget = this.applyDashboardFilters(cloneDeep(originalWidget));\n    const responses = await Promise.all(\n      widget.queries.map(query => {\n        let requestLimit: number | undefined = limit ?? DEFAULT_TABLE_LIMIT;\n        let requestCreator = config.getTableRequest;\n        if (widget.displayType === DisplayType.WORLD_MAP) {\n          requestLimit = undefined;\n          requestCreator = config.getWorldMapRequest;\n        }\n\n        if (!requestCreator) {\n          throw new Error(\n            t('This display type is not supported by the selected dataset.')\n          );\n        }\n\n        return requestCreator(\n          api,\n          query,\n          organization,\n          selection,\n          requestLimit,\n          cursor,\n          getReferrer(widget.displayType)\n        );\n      })\n    );\n\n    let transformedTableResults: TableDataWithTitle[] = [];\n    let responsePageLinks: string | undefined;\n    let afterTableFetchData: OnDataFetchedProps | undefined;\n    responses.forEach(([data, _textstatus, resp], i) => {\n      afterTableFetchData = afterFetchTableData?.(data, resp) ?? {};\n      // Cast so we can add the title.\n      const transformedData = config.transformTable(\n        data,\n        widget.queries[0],\n        organization,\n        selection\n      ) as TableDataWithTitle;\n      transformedData.title = widget.queries[i]?.name ?? '';\n\n      // Overwrite the local var to work around state being stale in tests.\n      transformedTableResults = [...transformedTableResults, transformedData];\n\n      // There is some inconsistency with the capitalization of \"link\" in response headers\n      responsePageLinks =\n        (resp?.getResponseHeader('Link') || resp?.getResponseHeader('link')) ?? undefined;\n    });\n\n    if (this._isMounted && this.state.queryFetchID === queryFetchID) {\n      onDataFetched?.({\n        tableResults: transformedTableResults,\n        pageLinks: responsePageLinks,\n        ...afterTableFetchData,\n      });\n      this.setState({\n        tableResults: transformedTableResults,\n        pageLinks: responsePageLinks,\n      });\n    }\n  }\n\n  async fetchSeriesData(queryFetchID: symbol) {\n    const {\n      widget: originalWidget,\n      config,\n      api,\n      organization,\n      selection,\n      afterFetchSeriesData,\n      onDataFetched,\n    } = this.props;\n    const widget = this.applyDashboardFilters(cloneDeep(originalWidget));\n\n    const responses = await Promise.all(\n      widget.queries.map((_query, index) => {\n        return config.getSeriesRequest!(\n          api,\n          widget,\n          index,\n          organization,\n          selection,\n          getReferrer(widget.displayType)\n        );\n      })\n    );\n    const rawResultsClone = cloneDeep(this.state.rawResults) ?? [];\n    const transformedTimeseriesResults: Series[] = [];\n    responses.forEach(([data], requestIndex) => {\n      afterFetchSeriesData?.(data);\n      rawResultsClone[requestIndex] = data;\n      const transformedResult = config.transformSeries!(\n        data,\n        widget.queries[requestIndex],\n        organization\n      );\n      // When charting timeseriesData on echarts, color association to a timeseries result\n      // is order sensitive, ie series at index i on the timeseries array will use color at\n      // index i on the color array. This means that on multi series results, we need to make\n      // sure that the order of series in our results do not change between fetches to avoid\n      // coloring inconsistencies between renders.\n      transformedResult.forEach((result, resultIndex) => {\n        transformedTimeseriesResults[\n          requestIndex * transformedResult.length + resultIndex\n        ] = result;\n      });\n    });\n\n    // Get series result type\n    // Only used by custom measurements in errorsAndTransactions at the moment\n    const timeseriesResultsType = config.getSeriesResultType?.(\n      responses[0][0],\n      widget.queries[0]\n    );\n\n    if (this._isMounted && this.state.queryFetchID === queryFetchID) {\n      onDataFetched?.({\n        timeseriesResults: transformedTimeseriesResults,\n        timeseriesResultsType,\n      });\n      this.setState({\n        timeseriesResults: transformedTimeseriesResults,\n        rawResults: rawResultsClone,\n        timeseriesResultsType,\n      });\n    }\n  }\n\n  async fetchData() {\n    const {widget} = this.props;\n\n    const queryFetchID = Symbol('queryFetchID');\n    this.setState({\n      loading: true,\n      tableResults: undefined,\n      timeseriesResults: undefined,\n      errorMessage: undefined,\n      queryFetchID,\n    });\n\n    try {\n      if (\n        [DisplayType.TABLE, DisplayType.BIG_NUMBER, DisplayType.WORLD_MAP].includes(\n          widget.displayType\n        )\n      ) {\n        await this.fetchTableData(queryFetchID);\n      } else {\n        await this.fetchSeriesData(queryFetchID);\n      }\n    } catch (err) {\n      if (this._isMounted) {\n        this.setState({\n          errorMessage:\n            err?.responseJSON?.detail || err?.message || t('An unknown error occurred.'),\n        });\n      }\n    } finally {\n      if (this._isMounted) {\n        this.setState({loading: false});\n      }\n    }\n  }\n\n  render() {\n    const {children} = this.props;\n    const {\n      loading,\n      tableResults,\n      timeseriesResults,\n      errorMessage,\n      pageLinks,\n      timeseriesResultsType,\n    } = this.state;\n\n    return children({\n      loading,\n      tableResults,\n      timeseriesResults,\n      errorMessage,\n      pageLinks,\n      timeseriesResultsType,\n    });\n  }\n}\n\nexport default GenericWidgetQueries;\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport SimpleTableChart from 'sentry/components/charts/simpleTableChart';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconWarning} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {eventViewFromWidget} from 'sentry/views/dashboardsV2/utils';\n\nimport {getDatasetConfig} from '../datasetConfig/base';\nimport {Widget, WidgetType} from '../types';\nimport {ISSUE_FIELDS} from '../widgetBuilder/issueWidget/fields';\n\ntype Props = {\n  loading: boolean;\n  location: Location;\n  organization: Organization;\n  selection: PageFilters;\n  transformedResults: TableDataRow[];\n  widget: Widget;\n  errorMessage?: string;\n};\n\nexport function IssueWidgetCard({\n  organization,\n  selection,\n  widget,\n  errorMessage,\n  loading,\n  transformedResults,\n  location,\n}: Props) {\n  const datasetConfig = getDatasetConfig(WidgetType.ISSUE);\n\n  if (errorMessage) {\n    return (\n      <ErrorPanel>\n        <IconWarning color=\"gray500\" size=\"lg\" />\n      </ErrorPanel>\n    );\n  }\n\n  if (loading) {\n    // Align height to other charts.\n    return <LoadingPlaceholder height=\"200px\" />;\n  }\n\n  const query = widget.queries[0];\n  const queryFields = defined(query.fields)\n    ? query.fields\n    : [...query.columns, ...query.aggregates];\n  const fieldAliases = query.fieldAliases ?? [];\n  const eventView = eventViewFromWidget(\n    widget.title,\n    widget.queries[0],\n    selection,\n    widget.displayType\n  );\n\n  return (\n    <StyledSimpleTableChart\n      location={location}\n      title=\"\"\n      eventView={eventView}\n      fields={queryFields}\n      fieldAliases={fieldAliases}\n      loading={loading}\n      metadata={ISSUE_FIELDS}\n      data={transformedResults}\n      organization={organization}\n      getCustomFieldRenderer={datasetConfig.getCustomFieldRenderer}\n      fieldHeaderMap={datasetConfig.fieldHeaderMap}\n      stickyHeaders\n    />\n  );\n}\n\nconst LoadingPlaceholder = styled(Placeholder)`\n  background-color: ${p => p.theme.surface200};\n`;\n\nconst StyledSimpleTableChart = styled(SimpleTableChart)`\n  margin-top: ${space(1.5)};\n  border-bottom-left-radius: ${p => p.theme.borderRadius};\n  border-bottom-right-radius: ${p => p.theme.borderRadius};\n  font-size: ${p => p.theme.fontSizeMedium};\n  box-shadow: none;\n`;\n","import {useEffect, useState} from 'react';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport {Group, Organization, PageFilters} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nimport {IssuesConfig} from '../datasetConfig/issues';\nimport {DashboardFilters, Widget} from '../types';\n\nimport GenericWidgetQueries, {\n  GenericWidgetQueriesChildrenProps,\n  OnDataFetchedProps,\n} from './genericWidgetQueries';\n\ntype Props = {\n  api: Client;\n  children: (props: GenericWidgetQueriesChildrenProps) => JSX.Element;\n  organization: Organization;\n  selection: PageFilters;\n  widget: Widget;\n  cursor?: string;\n  dashboardFilters?: DashboardFilters;\n  limit?: number;\n  onDataFetched?: (results: OnDataFetchedProps) => void;\n};\n\nfunction IssueWidgetQueries({\n  children,\n  api,\n  organization,\n  selection,\n  widget,\n  cursor,\n  limit,\n  dashboardFilters,\n  onDataFetched,\n}: Props) {\n  const [memberListStoreLoaded, setMemberListStoreLoaded] = useState(false);\n\n  useEffect(() => {\n    setMemberListStoreLoaded(MemberListStore.isLoaded());\n    const unlistener = MemberListStore.listen(() => {\n      setMemberListStoreLoaded(MemberListStore.isLoaded());\n    }, undefined);\n    return () => unlistener();\n  }, []);\n\n  const config = IssuesConfig;\n\n  const afterFetchTableData = (_rawResult: Group[], response?: ResponseMeta) => {\n    return {totalIssuesCount: response?.getResponseHeader('X-Hits') ?? undefined};\n  };\n\n  return getDynamicText({\n    value: (\n      <GenericWidgetQueries<never, Group[]>\n        config={config}\n        api={api}\n        organization={organization}\n        selection={selection}\n        widget={widget}\n        cursor={cursor}\n        limit={limit}\n        dashboardFilters={dashboardFilters}\n        onDataFetched={onDataFetched}\n        afterFetchTableData={afterFetchTableData}\n      >\n        {({loading, ...rest}) =>\n          children({\n            loading: loading || !memberListStoreLoaded,\n            ...rest,\n          })\n        }\n      </GenericWidgetQueries>\n    ),\n    fixed: <div />,\n  });\n}\n\nexport default IssueWidgetQueries;\n","import {Component} from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport trimStart from 'lodash/trimStart';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {isSelectionEqual} from 'sentry/components/organizations/pageFilters/utils';\nimport {t} from 'sentry/locale';\nimport {\n  MetricsApiResponse,\n  Organization,\n  PageFilters,\n  Release,\n  SessionApiResponse,\n} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {TableDataWithTitle} from 'sentry/utils/discover/discoverQuery';\nimport {stripDerivedMetricsPrefix} from 'sentry/utils/discover/fields';\nimport {TOP_N} from 'sentry/utils/discover/types';\n\nimport {ReleasesConfig} from '../datasetConfig/releases';\nimport {\n  DashboardFilters,\n  DEFAULT_TABLE_LIMIT,\n  DisplayType,\n  Widget,\n  WidgetQuery,\n} from '../types';\nimport {\n  DERIVED_STATUS_METRICS_PATTERN,\n  DerivedStatusFields,\n  DISABLED_SORT,\n  METRICS_EXPRESSION_TO_FIELD,\n} from '../widgetBuilder/releaseWidget/fields';\n\nimport GenericWidgetQueries, {\n  GenericWidgetQueriesChildrenProps,\n  GenericWidgetQueriesProps,\n} from './genericWidgetQueries';\n\ntype Props = {\n  api: Client;\n  children: (props: GenericWidgetQueriesChildrenProps) => JSX.Element;\n  organization: Organization;\n  selection: PageFilters;\n  widget: Widget;\n  cursor?: string;\n  dashboardFilters?: DashboardFilters;\n  limit?: number;\n  onDataFetched?: (results: {\n    tableResults?: TableDataWithTitle[];\n    timeseriesResults?: Series[];\n  }) => void;\n};\n\ntype State = {\n  loading: boolean;\n  errorMessage?: string;\n  releases?: Release[];\n};\n\nexport function derivedMetricsToField(field: string): string {\n  return METRICS_EXPRESSION_TO_FIELD[field] ?? field;\n}\n\nfunction getReleasesQuery(releases: Release[]): {\n  releaseQueryString: string;\n  releasesUsed: string[];\n} {\n  let releaseCondition = '';\n  const releasesArray: string[] = [];\n  releaseCondition += 'release:[' + releases[0].version;\n  releasesArray.push(releases[0].version);\n  for (let i = 1; i < releases.length; i++) {\n    releaseCondition += ',' + releases[i].version;\n    releasesArray.push(releases[i].version);\n  }\n  releaseCondition += ']';\n  if (releases.length < 10) {\n    return {releaseQueryString: releaseCondition, releasesUsed: releasesArray};\n  }\n  if (releases.length > 10 && releaseCondition.length > 1500) {\n    return getReleasesQuery(releases.slice(0, -10));\n  }\n  return {releaseQueryString: releaseCondition, releasesUsed: releasesArray};\n}\n\n/**\n * Given a list of requested fields, this function returns\n * 'aggregates' which is a list of aggregate functions that\n * can be passed to either Metrics or Sessions endpoints,\n * 'derivedStatusFields' which need to be requested from the\n * Metrics endpoint and 'injectFields' which are fields not\n * requested but required to calculate the value of a derived\n * status field so will need to be stripped away in post processing.\n */\nexport function resolveDerivedStatusFields(\n  fields: string[],\n  orderby: string,\n  useSessionAPI: boolean\n): {\n  aggregates: string[];\n  derivedStatusFields: string[];\n  injectedFields: string[];\n} {\n  const aggregates = fields.map(stripDerivedMetricsPrefix);\n  const derivedStatusFields = aggregates.filter(agg =>\n    Object.values(DerivedStatusFields).includes(agg as DerivedStatusFields)\n  );\n\n  const injectedFields: string[] = [];\n\n  const rawOrderby = trimStart(orderby, '-');\n  const unsupportedOrderby =\n    DISABLED_SORT.includes(rawOrderby) || useSessionAPI || rawOrderby === 'release';\n\n  if (rawOrderby && !!!unsupportedOrderby && !!!fields.includes(rawOrderby)) {\n    if (!!!injectedFields.includes(rawOrderby)) {\n      injectedFields.push(rawOrderby);\n    }\n  }\n\n  if (!!!useSessionAPI) {\n    return {aggregates, derivedStatusFields, injectedFields};\n  }\n\n  derivedStatusFields.forEach(field => {\n    const result = field.match(DERIVED_STATUS_METRICS_PATTERN);\n    if (result) {\n      if (result[2] === 'user' && !!!aggregates.includes('count_unique(user)')) {\n        injectedFields.push('count_unique(user)');\n        aggregates.push('count_unique(user)');\n      }\n      if (result[2] === 'session' && !!!aggregates.includes('sum(session)')) {\n        injectedFields.push('sum(session)');\n        aggregates.push('sum(session)');\n      }\n    }\n  });\n\n  return {aggregates, derivedStatusFields, injectedFields};\n}\n\nexport function requiresCustomReleaseSorting(query: WidgetQuery): boolean {\n  const useMetricsAPI = !!!query.columns.includes('session.status');\n  const rawOrderby = trimStart(query.orderby, '-');\n  return useMetricsAPI && rawOrderby === 'release';\n}\n\nclass ReleaseWidgetQueries extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    errorMessage: undefined,\n    releases: undefined,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    if (requiresCustomReleaseSorting(this.props.widget.queries[0])) {\n      this.fetchReleases();\n      return;\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  config = ReleasesConfig;\n  private _isMounted: boolean = false;\n\n  fetchReleases = async () => {\n    this.setState({loading: true, errorMessage: undefined});\n    const {selection, api, organization} = this.props;\n    const {environments, projects} = selection;\n\n    try {\n      const releases = await api.requestPromise(\n        `/organizations/${organization.slug}/releases/`,\n        {\n          method: 'GET',\n          data: {\n            sort: 'date',\n            project: projects,\n            per_page: 50,\n            environment: environments,\n          },\n        }\n      );\n      if (!this._isMounted) {\n        return;\n      }\n      this.setState({releases, loading: false});\n    } catch (error) {\n      if (!this._isMounted) {\n        return;\n      }\n\n      const message = error.responseJSON\n        ? error.responseJSON.error\n        : t('Error sorting by releases');\n      this.setState({errorMessage: message, loading: false});\n      addErrorMessage(message);\n    }\n  };\n\n  get limit() {\n    const {limit} = this.props;\n\n    switch (this.props.widget.displayType) {\n      case DisplayType.TOP_N:\n        return TOP_N;\n      case DisplayType.TABLE:\n        return limit ?? DEFAULT_TABLE_LIMIT;\n      case DisplayType.BIG_NUMBER:\n        return 1;\n      default:\n        return limit ?? 20; // TODO(dam): Can be changed to undefined once [INGEST-1079] is resolved\n    }\n  }\n\n  customDidUpdateComparator = (\n    prevProps: GenericWidgetQueriesProps<\n      SessionApiResponse | MetricsApiResponse,\n      SessionApiResponse | MetricsApiResponse\n    >,\n    nextProps: GenericWidgetQueriesProps<\n      SessionApiResponse | MetricsApiResponse,\n      SessionApiResponse | MetricsApiResponse\n    >\n  ) => {\n    const {loading, limit, widget, cursor, organization, selection, dashboardFilters} =\n      nextProps;\n    const ignoredWidgetProps = [\n      'queries',\n      'title',\n      'id',\n      'layout',\n      'tempId',\n      'widgetType',\n    ];\n    const ignoredQueryProps = ['name', 'fields', 'aggregates', 'columns'];\n    return (\n      limit !== prevProps.limit ||\n      organization.slug !== prevProps.organization.slug ||\n      !isEqual(dashboardFilters, prevProps.dashboardFilters) ||\n      !isSelectionEqual(selection, prevProps.selection) ||\n      // If the widget changed (ignore unimportant fields, + queries as they are handled lower)\n      !isEqual(\n        omit(widget, ignoredWidgetProps),\n        omit(prevProps.widget, ignoredWidgetProps)\n      ) ||\n      // If the queries changed (ignore unimportant name, + fields as they are handled lower)\n      !isEqual(\n        widget.queries.map(q => omit(q, ignoredQueryProps)),\n        prevProps.widget.queries.map(q => omit(q, ignoredQueryProps))\n      ) ||\n      // If the fields changed (ignore falsy/empty fields -> they can happen after clicking on Add Overlay)\n      !isEqual(\n        widget.queries.flatMap(q => q.fields?.filter(field => !!field)),\n        prevProps.widget.queries.flatMap(q => q.fields?.filter(field => !!field))\n      ) ||\n      !isEqual(\n        widget.queries.flatMap(q => q.aggregates.filter(aggregate => !!aggregate)),\n        prevProps.widget.queries.flatMap(q =>\n          q.aggregates.filter(aggregate => !!aggregate)\n        )\n      ) ||\n      !isEqual(\n        widget.queries.flatMap(q => q.columns.filter(column => !!column)),\n        prevProps.widget.queries.flatMap(q => q.columns.filter(column => !!column))\n      ) ||\n      loading !== prevProps.loading ||\n      cursor !== prevProps.cursor\n    );\n  };\n\n  transformWidget = (initialWidget: Widget): Widget => {\n    const {releases} = this.state;\n    const widget = cloneDeep(initialWidget);\n\n    const isCustomReleaseSorting = requiresCustomReleaseSorting(widget.queries[0]);\n    const isDescending = widget.queries[0].orderby.startsWith('-');\n    const useSessionAPI = widget.queries[0].columns.includes('session.status');\n\n    let releaseCondition = '';\n    const releasesArray: string[] = [];\n    if (isCustomReleaseSorting) {\n      if (releases && releases.length === 1) {\n        releaseCondition += `release:${releases[0].version}`;\n        releasesArray.push(releases[0].version);\n      }\n      if (releases && releases.length > 1) {\n        const {releaseQueryString, releasesUsed} = getReleasesQuery(releases);\n        releaseCondition += releaseQueryString;\n        releasesArray.push(...releasesUsed);\n\n        if (!!!isDescending) {\n          releasesArray.reverse();\n        }\n      }\n    }\n\n    if (!useSessionAPI) {\n      widget.queries.forEach(query => {\n        query.conditions =\n          query.conditions + (releaseCondition === '' ? '' : ` ${releaseCondition}`);\n      });\n    }\n\n    return widget;\n  };\n\n  afterFetchData = (data: SessionApiResponse | MetricsApiResponse) => {\n    const {widget} = this.props;\n    const {releases} = this.state;\n\n    const isDescending = widget.queries[0].orderby.startsWith('-');\n\n    const releasesArray: string[] = [];\n    if (requiresCustomReleaseSorting(widget.queries[0])) {\n      if (releases && releases.length === 1) {\n        releasesArray.push(releases[0].version);\n      }\n      if (releases && releases.length > 1) {\n        const {releasesUsed} = getReleasesQuery(releases);\n        releasesArray.push(...releasesUsed);\n\n        if (!!!isDescending) {\n          releasesArray.reverse();\n        }\n      }\n    }\n\n    if (releasesArray.length) {\n      data.groups.sort(function (group1, group2) {\n        const release1 = group1.by.release;\n        const release2 = group2.by.release;\n        return releasesArray.indexOf(release1) - releasesArray.indexOf(release2);\n      });\n      data.groups = data.groups.slice(0, this.limit);\n    }\n  };\n\n  render() {\n    const {\n      api,\n      children,\n      organization,\n      selection,\n      widget,\n      cursor,\n      dashboardFilters,\n      onDataFetched,\n    } = this.props;\n    const config = ReleasesConfig;\n\n    return (\n      <GenericWidgetQueries<\n        SessionApiResponse | MetricsApiResponse,\n        SessionApiResponse | MetricsApiResponse\n      >\n        config={config}\n        api={api}\n        organization={organization}\n        selection={selection}\n        widget={this.transformWidget(widget)}\n        dashboardFilters={dashboardFilters}\n        cursor={cursor}\n        limit={this.limit}\n        onDataFetched={onDataFetched}\n        loading={\n          requiresCustomReleaseSorting(widget.queries[0])\n            ? !this.state.releases\n            : undefined\n        }\n        customDidUpdateComparator={this.customDidUpdateComparator}\n        afterFetchTableData={this.afterFetchData}\n        afterFetchSeriesData={this.afterFetchData}\n      >\n        {({errorMessage, ...rest}) =>\n          children({\n            errorMessage: this.state.errorMessage ?? errorMessage,\n            ...rest,\n          })\n        }\n      </GenericWidgetQueries>\n    );\n  }\n}\n\nexport default ReleaseWidgetQueries;\n","import {t} from 'sentry/locale';\nimport {MetricsApiResponse, SessionApiResponse} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\n\nimport {DERIVED_STATUS_METRICS_PATTERN} from '../widgetBuilder/releaseWidget/fields';\n\nimport {derivedMetricsToField} from './releaseWidgetQueries';\n\nexport function getSeriesName(\n  field: string,\n  group: SessionApiResponse['groups'][number],\n  queryAlias?: string\n) {\n  const groupName = Object.entries(group.by)\n    .map(([_, value]) => `${value}`)\n    .join(', ');\n  const seriesName = groupName\n    ? `${groupName} : ${derivedMetricsToField(field)}`\n    : derivedMetricsToField(field);\n  return `${queryAlias ? `${queryAlias} > ` : ''}${seriesName}`;\n}\n\nexport function transformSessionsResponseToSeries(\n  response: SessionApiResponse | MetricsApiResponse | null,\n  requestedStatusMetrics: string[],\n  injectedFields: string[],\n  queryAlias?: string\n): Series[] {\n  if (response === null) {\n    return [];\n  }\n\n  const results: Series[] = [];\n\n  if (!response.groups.length) {\n    return [\n      {\n        seriesName: `(${t('no results')})`,\n        data: response.intervals.map(interval => ({\n          name: interval,\n          value: 0,\n        })),\n      },\n    ];\n  }\n\n  response.groups.forEach(group => {\n    Object.keys(group.series).forEach(field => {\n      // if `sum(session)` or `count_unique(user)` are not\n      // requested as a part of the payload for\n      // derived status metrics through the Sessions API,\n      // they are injected into the payload and need to be\n      // stripped.\n      if (!!!injectedFields.includes(derivedMetricsToField(field))) {\n        results.push({\n          seriesName: getSeriesName(field, group, queryAlias),\n          data: response.intervals.map((interval, index) => ({\n            name: interval,\n            value: group.series[field][index] ?? 0,\n          })),\n        });\n      }\n    });\n    // if session.status is a groupby, some post processing\n    // is needed to calculate the status derived metrics\n    // from grouped results of `sum(session)` or `count_unique(user)`\n    if (requestedStatusMetrics.length && defined(group.by['session.status'])) {\n      requestedStatusMetrics.forEach(status => {\n        const result = status.match(DERIVED_STATUS_METRICS_PATTERN);\n        if (result) {\n          let metricField: string | undefined = undefined;\n          if (group.by['session.status'] === result[1]) {\n            if (result[2] === 'session') {\n              metricField = 'sum(session)';\n            } else if (result[2] === 'user') {\n              metricField = 'count_unique(user)';\n            }\n          }\n          results.push({\n            seriesName: getSeriesName(status, group, queryAlias),\n            data: response.intervals.map((interval, index) => ({\n              name: interval,\n              value: metricField ? group.series[metricField][index] ?? 0 : 0,\n            })),\n          });\n        }\n      });\n    }\n  });\n\n  return results;\n}\n","import omit from 'lodash/omit';\n\nimport {MetricsApiResponse, SessionApiResponse} from 'sentry/types';\nimport {TableData} from 'sentry/utils/discover/discoverQuery';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DERIVED_STATUS_METRICS_PATTERN,\n  SESSIONS_TAGS,\n} from 'sentry/views/dashboardsV2/widgetBuilder/releaseWidget/fields';\n\nimport {derivedMetricsToField} from './releaseWidgetQueries';\n\nexport function changeObjectValuesToTypes(\n  obj: Record<string, number | string | null> | undefined\n) {\n  return Object.keys(obj ?? {}).reduce((acc, key) => {\n    acc[key] = SESSIONS_TAGS.includes(key) ? 'string' : aggregateOutputType(key);\n    return acc;\n  }, {});\n}\n\nexport function mapDerivedMetricsToFields(results: Record<string, number | null>) {\n  const mappedResults: Record<string, number | null> = {};\n  for (const [key, value] of Object.entries(results)) {\n    mappedResults[derivedMetricsToField(key)] = value;\n  }\n  return mappedResults;\n}\n\nexport function getDerivedMetrics(groupBy, totals, requestedStatusMetrics) {\n  const derivedTotals = {};\n  if (!requestedStatusMetrics.length) {\n    return derivedTotals;\n  }\n  if (groupBy['session.status'] === undefined) {\n    return derivedTotals;\n  }\n  requestedStatusMetrics.forEach(status => {\n    const result = status.match(DERIVED_STATUS_METRICS_PATTERN);\n    if (result) {\n      if (groupBy['session.status'] === result[1]) {\n        if (result[2] === 'session') {\n          derivedTotals[status] = totals['sum(session)'];\n        } else if (result[2] === 'user') {\n          derivedTotals[status] = totals['count_unique(user)'];\n        }\n      } else {\n        derivedTotals[status] = 0;\n      }\n    }\n  });\n  return derivedTotals;\n}\n\nexport function transformSessionsResponseToTable(\n  response: SessionApiResponse | MetricsApiResponse | null,\n  requestedStatusMetrics: string[],\n  injectedFields: string[]\n): TableData {\n  const data =\n    response?.groups.map((group, index) => ({\n      id: String(index),\n      ...mapDerivedMetricsToFields(group.by),\n      // if `sum(session)` or `count_unique(user)` are not\n      // requested as a part of the payload for\n      // derived status metrics through the Sessions API,\n      // they are injected into the payload and need to be\n      // stripped.\n      ...omit(mapDerivedMetricsToFields(group.totals), injectedFields),\n      // if session.status is a groupby, some post processing\n      // is needed to calculate the status derived metrics\n      // from grouped results of `sum(session)` or `count_unique(user)`\n      ...getDerivedMetrics(group.by, group.totals, requestedStatusMetrics),\n    })) ?? [];\n\n  const singleRow = data[0];\n  // TODO(metrics): these should come from the API in the future\n  const meta = {\n    ...changeObjectValuesToTypes(omit(singleRow, 'id')),\n  };\n\n  return {meta, data};\n}\n","import {Fragment} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport type {DataZoomComponentOption} from 'echarts';\nimport {LegendComponentOption} from 'echarts';\n\nimport {Client} from 'sentry/api';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {EChartEventHandler, Series} from 'sentry/types/echarts';\nimport {TableDataWithTitle} from 'sentry/utils/discover/discoverQuery';\n\nimport {DashboardFilters, Widget, WidgetType} from '../types';\n\nimport WidgetCardChart, {AugmentedEChartDataZoomHandler} from './chart';\nimport {IssueWidgetCard} from './issueWidgetCard';\nimport IssueWidgetQueries from './issueWidgetQueries';\nimport ReleaseWidgetQueries from './releaseWidgetQueries';\nimport WidgetQueries from './widgetQueries';\n\ntype Props = WithRouterProps & {\n  api: Client;\n  organization: Organization;\n  selection: PageFilters;\n  widget: Widget;\n  chartZoomOptions?: DataZoomComponentOption;\n  dashboardFilters?: DashboardFilters;\n  expandNumbers?: boolean;\n  isMobile?: boolean;\n  legendOptions?: LegendComponentOption;\n  noPadding?: boolean;\n  onDataFetched?: (results: {\n    pageLinks?: string;\n    tableResults?: TableDataWithTitle[];\n    timeseriesResults?: Series[];\n    timeseriesResultsType?: string;\n    totalIssuesCount?: string;\n  }) => void;\n  onLegendSelectChanged?: EChartEventHandler<{\n    name: string;\n    selected: Record<string, boolean>;\n    type: 'legendselectchanged';\n  }>;\n  onZoom?: AugmentedEChartDataZoomHandler;\n  renderErrorMessage?: (errorMessage?: string) => React.ReactNode;\n  showSlider?: boolean;\n  tableItemLimit?: number;\n  windowWidth?: number;\n};\n\nexport function WidgetCardChartContainer({\n  location,\n  router,\n  api,\n  organization,\n  selection,\n  widget,\n  dashboardFilters,\n  isMobile,\n  renderErrorMessage,\n  tableItemLimit,\n  windowWidth,\n  onZoom,\n  onLegendSelectChanged,\n  legendOptions,\n  expandNumbers,\n  onDataFetched,\n  showSlider,\n  noPadding,\n  chartZoomOptions,\n}: Props) {\n  if (widget.widgetType === WidgetType.ISSUE) {\n    return (\n      <IssueWidgetQueries\n        api={api}\n        organization={organization}\n        widget={widget}\n        selection={selection}\n        limit={tableItemLimit}\n        onDataFetched={onDataFetched}\n        dashboardFilters={dashboardFilters}\n      >\n        {({tableResults, errorMessage, loading}) => {\n          return (\n            <Fragment>\n              {typeof renderErrorMessage === 'function'\n                ? renderErrorMessage(errorMessage)\n                : null}\n              <LoadingScreen loading={loading} />\n              <IssueWidgetCard\n                transformedResults={tableResults?.[0].data ?? []}\n                loading={loading}\n                errorMessage={errorMessage}\n                widget={widget}\n                organization={organization}\n                location={location}\n                selection={selection}\n              />\n            </Fragment>\n          );\n        }}\n      </IssueWidgetQueries>\n    );\n  }\n\n  if (widget.widgetType === WidgetType.RELEASE) {\n    return (\n      <ReleaseWidgetQueries\n        api={api}\n        organization={organization}\n        widget={widget}\n        selection={selection}\n        limit={widget.limit ?? tableItemLimit}\n        onDataFetched={onDataFetched}\n        dashboardFilters={dashboardFilters}\n      >\n        {({tableResults, timeseriesResults, errorMessage, loading}) => {\n          return (\n            <Fragment>\n              {typeof renderErrorMessage === 'function'\n                ? renderErrorMessage(errorMessage)\n                : null}\n              <WidgetCardChart\n                timeseriesResults={timeseriesResults}\n                tableResults={tableResults}\n                errorMessage={errorMessage}\n                loading={loading}\n                location={location}\n                widget={widget}\n                selection={selection}\n                router={router}\n                organization={organization}\n                isMobile={isMobile}\n                windowWidth={windowWidth}\n                expandNumbers={expandNumbers}\n                onZoom={onZoom}\n                showSlider={showSlider}\n                noPadding={noPadding}\n                chartZoomOptions={chartZoomOptions}\n              />\n            </Fragment>\n          );\n        }}\n      </ReleaseWidgetQueries>\n    );\n  }\n\n  return (\n    <WidgetQueries\n      api={api}\n      organization={organization}\n      widget={widget}\n      selection={selection}\n      limit={tableItemLimit}\n      onDataFetched={onDataFetched}\n      dashboardFilters={dashboardFilters}\n    >\n      {({\n        tableResults,\n        timeseriesResults,\n        errorMessage,\n        loading,\n        timeseriesResultsType,\n      }) => {\n        return (\n          <Fragment>\n            {typeof renderErrorMessage === 'function'\n              ? renderErrorMessage(errorMessage)\n              : null}\n            <WidgetCardChart\n              timeseriesResults={timeseriesResults}\n              tableResults={tableResults}\n              errorMessage={errorMessage}\n              loading={loading}\n              location={location}\n              widget={widget}\n              selection={selection}\n              router={router}\n              organization={organization}\n              isMobile={isMobile}\n              windowWidth={windowWidth}\n              onZoom={onZoom}\n              onLegendSelectChanged={onLegendSelectChanged}\n              legendOptions={legendOptions}\n              expandNumbers={expandNumbers}\n              showSlider={showSlider}\n              noPadding={noPadding}\n              chartZoomOptions={chartZoomOptions}\n              timeseriesResultsType={timeseriesResultsType}\n            />\n          </Fragment>\n        );\n      }}\n    </WidgetQueries>\n  );\n}\n\nexport default withRouter(WidgetCardChartContainer);\n\nconst StyledTransparentLoadingMask = styled(props => (\n  <TransparentLoadingMask {...props} maskBackgroundColor=\"transparent\" />\n))`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LoadingScreen = ({loading}: {loading: boolean}) => {\n  if (!loading) {\n    return null;\n  }\n  return (\n    <StyledTransparentLoadingMask visible={loading}>\n      <LoadingIndicator mini />\n    </StyledTransparentLoadingMask>\n  );\n};\n","import {useContext} from 'react';\nimport omit from 'lodash/omit';\n\nimport {Client} from 'sentry/api';\nimport {isMultiSeriesStats} from 'sentry/components/charts/utils';\nimport {\n  EventsStats,\n  MultiSeriesEventsStats,\n  Organization,\n  PageFilters,\n} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {EventsTableData, TableData} from 'sentry/utils/discover/discoverQuery';\nimport {DURATION_UNITS, SIZE_UNITS} from 'sentry/utils/discover/fieldRenderers';\nimport {getAggregateAlias} from 'sentry/utils/discover/fields';\n\nimport {ErrorsAndTransactionsConfig} from '../datasetConfig/errorsAndTransactions';\nimport {DashboardFilters, Widget} from '../types';\n\nimport {DashboardsMEPContext} from './dashboardsMEPContext';\nimport GenericWidgetQueries, {\n  GenericWidgetQueriesChildrenProps,\n  OnDataFetchedProps,\n} from './genericWidgetQueries';\n\ntype SeriesResult = EventsStats | MultiSeriesEventsStats;\ntype TableResult = TableData | EventsTableData;\n\ntype SeriesWithOrdering = [order: number, series: Series];\n\nexport function transformSeries(\n  stats: EventsStats,\n  seriesName: string,\n  field: string\n): Series {\n  const unit = stats.meta?.units?.[getAggregateAlias(field)];\n  // Scale series values to milliseconds or bytes depending on units from meta\n  const scale = (unit && (DURATION_UNITS[unit] ?? SIZE_UNITS[unit])) ?? 1;\n  return {\n    seriesName,\n    data:\n      stats?.data?.map(([timestamp, counts]) => {\n        return {\n          name: timestamp * 1000,\n          value: counts.reduce((acc, {count}) => acc + count, 0) * scale,\n        };\n      }) ?? [],\n  };\n}\n\n/**\n * Multiseries data with a grouping needs to be \"flattened\" because the aggregate data\n * are stored under the group names. These names need to be combined with the aggregate\n * names to show a series.\n *\n * e.g. count() and count_unique() grouped by environment\n * {\n *    \"local\": {\n *      \"count()\": {...},\n *      \"count_unique()\": {...}\n *    },\n *    \"prod\": {\n *      \"count()\": {...},\n *      \"count_unique()\": {...}\n *    }\n * }\n */\nexport function flattenMultiSeriesDataWithGrouping(\n  result: SeriesResult,\n  queryAlias: string\n): SeriesWithOrdering[] {\n  const seriesWithOrdering: SeriesWithOrdering[] = [];\n  const groupNames = Object.keys(result);\n\n  groupNames.forEach(groupName => {\n    // Each group contains an order key which we should ignore\n    const aggregateNames = Object.keys(omit(result[groupName], 'order'));\n\n    aggregateNames.forEach(aggregate => {\n      const seriesName = `${groupName} : ${aggregate}`;\n      const prefixedName = queryAlias ? `${queryAlias} > ${seriesName}` : seriesName;\n      const seriesData: EventsStats = result[groupName][aggregate];\n\n      seriesWithOrdering.push([\n        result[groupName].order || 0,\n        transformSeries(seriesData, prefixedName, seriesName),\n      ]);\n    });\n  });\n\n  return seriesWithOrdering;\n}\n\nexport function getIsMetricsDataFromSeriesResponse(\n  result: SeriesResult\n): boolean | undefined {\n  const multiIsMetricsData = Object.values(result)\n    .map(({isMetricsData}) => isMetricsData)\n    // One non-metrics series will cause all of them to be marked as such\n    .reduce((acc, value) => (acc === false ? false : value), undefined);\n\n  return isMultiSeriesStats(result) ? multiIsMetricsData : result.isMetricsData;\n}\n\ntype Props = {\n  api: Client;\n  children: (props: GenericWidgetQueriesChildrenProps) => JSX.Element;\n  organization: Organization;\n  selection: PageFilters;\n  widget: Widget;\n  cursor?: string;\n  dashboardFilters?: DashboardFilters;\n  limit?: number;\n  onDataFetched?: (results: OnDataFetchedProps) => void;\n};\n\nfunction WidgetQueries({\n  api,\n  children,\n  organization,\n  selection,\n  widget,\n  dashboardFilters,\n  cursor,\n  limit,\n  onDataFetched,\n}: Props) {\n  const config = ErrorsAndTransactionsConfig;\n  const context = useContext(DashboardsMEPContext);\n\n  let setIsMetricsData: undefined | ((value?: boolean) => void);\n\n  if (context) {\n    setIsMetricsData = context.setIsMetricsData;\n  }\n\n  const isSeriesMetricsDataResults: boolean[] = [];\n  const afterFetchSeriesData = (rawResults: SeriesResult) => {\n    if (rawResults.data) {\n      rawResults = rawResults as EventsStats;\n      if (rawResults.isMetricsData !== undefined) {\n        isSeriesMetricsDataResults.push(rawResults.isMetricsData);\n      }\n    } else {\n      Object.keys(rawResults).forEach(key => {\n        const rawResult: EventsStats = rawResults[key];\n        if (rawResult.isMetricsData !== undefined) {\n          isSeriesMetricsDataResults.push(rawResult.isMetricsData);\n        }\n      });\n    }\n    // If one of the queries is sampled, then mark the whole thing as sampled\n    setIsMetricsData?.(!isSeriesMetricsDataResults.includes(false));\n  };\n\n  const isTableMetricsDataResults: boolean[] = [];\n  const afterFetchTableData = (rawResults: TableResult) => {\n    if (rawResults.meta?.isMetricsData !== undefined) {\n      isTableMetricsDataResults.push(rawResults.meta.isMetricsData);\n    }\n    // If one of the queries is sampled, then mark the whole thing as sampled\n    setIsMetricsData?.(!isTableMetricsDataResults.includes(false));\n  };\n\n  return (\n    <GenericWidgetQueries<SeriesResult, TableResult>\n      config={config}\n      api={api}\n      organization={organization}\n      selection={selection}\n      widget={widget}\n      cursor={cursor}\n      limit={limit}\n      dashboardFilters={dashboardFilters}\n      onDataFetched={onDataFetched}\n      afterFetchSeriesData={afterFetchSeriesData}\n      afterFetchTableData={afterFetchTableData}\n    >\n      {children}\n    </GenericWidgetQueries>\n  );\n}\n\nexport default WidgetQueries;\n"],"names":["getInterval","normalizeDateTimeParams","defined","doMetricsRequest","api","field","orgSlug","cursor","environment","groupBy","includeSeries","includeTotals","interval","limit","orderBy","project","query","includeAllArgs","statsPeriodStart","statsPeriodEnd","dateTime","start","end","statsPeriod","allowEmptyPeriod","urlQuery","Object","fromEntries","entries","filter","f","g","period","undefined","per_page","value","pathname","requestPromise","doSessionsRequest","Fragment","PanelTable","PanelTableHeader","Tooltip","Truncate","space","getFieldRenderer","fieldAlignment","withOrganization","TopResultsIndicator","decodeColumnOrder","SimpleTableChart","className","loading","eventView","fields","metadata","data","title","fieldHeaderMap","stickyHeaders","getCustomFieldRenderer","organization","topResultsIndicators","location","fieldAliases","loader","renderRow","index","row","tableMeta","columns","map","column","columnIndex","fieldRenderer","key","unit","units","name","meta","usingEvents","features","includes","alias","align","type","header","length","StyledTruncate","StyledPanelTable","HeadCell","p","TableCell","Component","cloneDeep","Button","SearchBar","Field","SelectControl","Input","MAX_QUERY_LENGTH","IconAdd","IconDelete","t","explodeField","generateFieldAsString","getColumnsAndAggregatesAsStrings","isEquation","stripDerivedMetricsPrefix","stripEquationPrefix","WidgetType","ReleaseSearchBar","DISABLED_SORT","TAG_SORT_DENY_LIST","WidgetQueryFields","generateOrderOptions","aggregates","widgetType","widgetBuilderNewDesign","isRelease","RELEASE","options","equations","forEach","label","push","WidgetQueriesForm","queryIndex","queries","onChange","props","widgetQuery","handleChange","newQuery","componentWillUnmount","window","clearTimeout","blurTimeout","getFirstQueryError","errors","find","queryError","renderSearchBar","selection","handleFieldChange","projects","conditions","render","canAddSearchConditions","handleAddSearchConditions","handleDeleteQuery","displayType","fieldOptions","DISCOVER","hideLegendAlias","explodedFields","paddingBottom","event","target","preventDefault","fieldStrings","orderby","descending","startsWith","replace","prevFieldStrings","indexOf","marginBottom","option","QueryWrapper","SearchConditionsWrapper","StyledSearchBar","LegendAliasInput","aggregateFunctionOutputType","isLegalYAxisType","DisplayType","ColumnEditCollection","QueryField","FieldValueKind","generateFieldOptions","style","isReleaseWidget","handleAdd","newFields","kind","FIELD","handleAddEquation","EQUATION","handleRemove","fieldIndex","splice","handleChangeField","handleTopNChangeField","handleTopNColumnChange","handleColumnChange","doNotValidateYAxis","filterPrimaryOptions","TABLE","FUNCTION","TAG","NUMERIC_METRICS","TOP_N","primaryOutput","filterMetricsOptions","filterAggregateParameters","fieldValue","METRICS","functionName","function","dataType","hideAddYAxisButton","canDelete","padding","slice","i","StyledColumnEditCollection","QueryFieldWrapper","Actions","WidgetViewerQueryField","isWidgetViewerPath","match","css","AssigneeSelector","Count","Link","getRelativeSummary","DEFAULT_STATS_PERIOD","MemberListStore","EventView","FieldKey","Container","FieldShortId","OverflowLink","SPECIAL_FIELDS","issue","sortField","renderFunc","issueID","slug","assignee","memberList","getAll","id","lifetimeEvents","issuesCountRenderer","lifetimeUsers","events","users","lifetimeCount","lifetimeUserCount","count","userCount","links","__html","isUserField","exec","toLowerCase","primaryCount","filteredCount","discoverLink","getDiscoverUrl","filteredDiscoverLink","selectionDateString","filtered","commonQuery","Number","projectId","discoverView","fromSavedQuery","range","discoverSearchQuery","version","getResultsViewUrlTarget","getSortField","hasOwnProperty","LAST_SEEN","FIRST_SEEN","contentStyle","StyledContent","StyledLink","theme","gray400","hover","SecondaryCount","WrappedCount","subText","Divider","innerBorder","ActorContainer","LinksContainer","getIssueFieldRenderer","trimStart","getNumEquations","ErrorsAndTransactionsConfig","IssuesConfig","ReleasesConfig","getDatasetConfig","ISSUE","handleOrderByReset","rawOrderby","isDescending","orderbyPrefix","isFromAggregates","isCustomEquation","isUsedInGrouping","keepCurrentOrderby","firstAggregateAlias","doEventsRequest","isMultiSeriesStats","errorsAndTransactionsAggregateFunctionOutputType","getAggregateAlias","isEquationAlias","SPAN_OP_BREAKDOWN_FIELDS","doDiscoverQuery","eventDetailsRouteWithEventView","generateEventSlug","getShortEventId","getMeasurements","getTraceDetailsUrl","eventViewFromWidget","getDashboardsMEPQueryParams","getWidgetInterval","EventsSearchBar","CUSTOM_EQUATION_VALUE","flattenMultiSeriesDataWithGrouping","transformSeries","DEFAULT_WIDGET_QUERY","defaultWidgetQuery","enableEquations","getCustomEventsFieldRenderer","filterSeriesSortOptions","filterYAxisAggregateParams","filterYAxisOptions","getTableFieldOptions","getEventsTableFieldOptions","getTimeseriesSortOptions","getTableSortOptions","getGroupByFieldOptions","supportedDisplayTypes","AREA","BAR","BIG_NUMBER","LINE","WORLD_MAP","getTableRequest","pageFilters","referrer","shouldUseEvents","url","getEventsRequest","getSeriesRequest","getEventsSeriesRequest","getWorldMapRequest","transformEventsResponseToSeries","transformTable","transformEventsResponseToTable","filterTableOptions","filterAggregateParams","getSeriesResultType","_organization","has","tags","customMeasurements","measurements","tagKeys","values","measurementKeys","spanOperationBreakdownKeys","functions","_widgetQuery","tableData","otherMeta","output","queryAlias","seriesWithOrdering","isMultiSeriesDataWithGrouping","keys","seriesName","prefixedName","seriesData","order","sort","itemA","itemB","item","transformed","renderEventIdAsLinkable","eventSlug","renderTraceAsLinkable","trace","dateSelection","normalizeDateSelection","String","isAlias","isMEPEnabled","params","generateQueryStringObject","widget","environments","datetime","requestData","yAxis","includePrevious","partial","queryExtras","topEvents","excludeOther","nextEquationIndex","prefix","CUSTOM_MEASUREMENT","joinQuery","parseSearch","Token","GroupStore","getUtcDateString","DISCOVER_EXCLUSION_FIELDS","getSortLabel","IssueSortOptions","DEFAULT_TABLE_LIMIT","IssuesSearchBar","ISSUE_FIELD_TO_HEADER_MAP","generateIssueWidgetFieldOptions","ISSUE_WIDGET_SORT_OPTIONS","DATE","DEFAULT_SORT","DEFAULT_EXPAND","disableSortOptions","transformIssuesResponseToTable","disableSort","disableSortDirection","disableSortReason","sortOptions","TREND","sortOption","add","transformedTableResults","shortId","lifetime","annotations","resultProps","transformedResultProps","transformedTableResult","join","filteredEvents","filteredUsers","parsedResult","filteredTerms","Filter","text","groupListUrl","expand","utc","method","omit","SessionField","statsPeriodToDays","DERIVED_STATUS_METRICS_PATTERN","DerivedStatusFields","FIELD_TO_METRICS_EXPRESSION","generateReleaseWidgetFieldOptions","SESSIONS_FIELDS","SESSIONS_TAGS","derivedMetricsToField","requiresCustomReleaseSorting","resolveDerivedStatusFields","getSeriesName","changeObjectValuesToTypes","getDerivedMetrics","mapDerivedMetricsToFields","SESSION","METRICS_BACKED_SESSIONS_START_DATE","Date","getReleasesRequest","getReleasesSeriesRequest","filterPrimaryReleaseTableOptions","_fieldValue","_displayType","getReleasesTableFieldOptions","handleColumnFieldChangeOverride","handleReleasesTableOrderByReset","transformSessionsResponseToSeries","transformSessionsResponseToTable","columnSet","Set","releaseFieldOptions","isCustomReleaseSorting","disableSortBy","defaultReleaseHealthAggregate","useSessionAPI","derivedStatusFields","injectedFields","rows","groups","group","by","totals","singleRow","requestedStatusMetrics","results","intervals","series","status","result","metricField","fieldsToDerivedMetrics","showIncompleteDataAlert","startDate","periodInDays","current","prior","setDate","getDate","Promise","reject","Error","unsupportedOrderby","requester","sessionAggregates","agg","browserHistory","isEmpty","isEqual","pick","qs","WidgetArea","WidgetBar","WidgetBigNumber","WidgetLine","WidgetTable","WidgetWorldMap","parseArithmetic","getDiffInMinutes","SIX_HOURS","TWENTY_FOUR_HOURS","normalizeDateTimeString","parsePeriodToHours","getAggregateArg","getColumnsAndAggregates","isMeasurement","DisplayModes","decodeList","DashboardFilterKeys","cloneDashboard","dashboard","widgetDisplayType","trim","aggregateAliasOrderBy","coerceStringToArray","constructWidgetFromQuery","queryNames","queryConditions","queryFields","queryOrderby","condition","newWidget","miniWidget","datetimeObj","widgetInterval","fidelity","MAX_BIN_COUNT","desiredPeriod","selectedRange","highInterval","getFieldsFromEquations","termsSet","parsed","tc","term","Array","from","getWidgetDiscoverUrl","isMetricsData","discoverLocation","yAxisOptions","getYAxisOptions","aggregate","display","WORLDMAP","TOP5","equationFields","isArray","unshift","fromMetric","discoverPath","stringify","getWidgetIssueUrl","issuesLocation","getWidgetReleasesUrl","_widget","releasesLocation","flattenErrors","update","error","dataset","possibleEquations","isCustomMeasurement","definedMeasurements","isCustomMeasurementWidget","some","aggregateArgs","reduce","acc","aggregateArg","getCustomMeasurementQueryParams","isWidgetUsingTransactionName","hasSavedPageFilters","hasUnsavedFilterChanges","initialDashboard","savedFilters","currentFilters","getCurrentPageFilters","release","filters","getSavedFiltersAsPageFilters","getSavedPageFilters","resetPageFilters","getDashboardFiltersFromURL","dashboardFilters","ListItem","BuildStep","description","required","children","Wrapper","Heading","gray500","SubHeading","gray300","breakpoints","small","Content","RequiredBadge","red300","SavedSearchType","MAX_MENU_HEIGHT","MAX_SEARCH_ITEMS","onClose","projectIds","EVENT","Search","ClassNames","fetchTagValues","useApi","withIssueTags","IssueListSearchBar","IssuesSearchBarContainer","tagValueLoader","search","orgId","toString","endpointParams","StyledIssueListSearchBar","memoize","SmartSearchBar","NEGATION_OPERATOR","SEARCH_WILDCARD","SESSION_STATUSES","SESSIONS_FILTER_TAGS","SEARCH_SPECIAL_CHARS_REGEXP","RegExp","prepareQuery","searchQuery","getTagValues","tag","resolve","projectIdStrings","then","tagValues","supportedTags","useEffect","tn","getResultsLimit","SortDirection","SortBySelectors","SortByStep","onSortByChange","onLimitChange","datasetConfig","strippedOrderBy","maxLimit","isTimeseriesChart","resultLimit","sortDirection","HIGH_TO_LOW","LOW_TO_HIGH","sortBy","newOrderBy","ResultsLimitSelector","React","useState","uniqBy","EQUATION_PREFIX","getEquation","useOrganization","sortDirections","ArithmeticInput","showCustomEquation","setShowCustomEquation","customEquation","setCustomEquation","isSortingByEquation","parsedValue","isSortingByCustomEquation","newValue","ArithmeticInputWrapper","ISSUE_FIELDS","issueFields","fieldKeys","NEW","FREQ","PRIORITY","USER","generateIssueWidgetOrderOptions","includeRelativeChange","aggregateOutputType","getEquationAliasIndex","DEFAULT_RESULTS_LIMIT","RESULTS_LIMIT","NEW_DASHBOARD_ID","DataSet","displayTypes","mapErrors","normalizeQueries","getIsTimeseriesChart","isTabularChart","queryOrderBy","rawOrderBy","resetOrderBy","referenceAggregates","queryLoop","getParsedDefaultWidgetQuery","urlSeachParams","URLSearchParams","parsedQuery","getFields","fieldsString","split","getAmendedFieldOptions","getMetricFields","fieldParameter","numQueries","numYAxes","Math","floor","withTheme","AreaChart","BarChart","ChartZoom","ErrorPanel","LineChart","TransitionChart","TransparentLoadingMask","getSeriesSelection","processTableResults","WorldMapChart","LoadingIndicator","Placeholder","IconWarning","axisLabelFormatter","axisLabelFormatterUsingAggregateOutputType","tooltipFormatter","getFieldFormatter","getMeasurementSlug","maybeEquationAlias","getDynamicText","OTHER","SLIDER_HEIGHT","WidgetCardChart","containerHeight","shouldComponentUpdate","nextProps","nextState","windowWidth","layout","currentProps","state","tableResultComponent","errorMessage","tableResults","bigNumberComponent","isMobile","expandNumbers","shouldExpandInteger","dataRow","rendered","toLocaleString","isModalWidget","tempId","fontSize","parseInt","chartComponent","chartProps","stacked","timeseriesResults","onZoom","legendOptions","showSlider","noPadding","chartZoomOptions","timeseriesResultsType","fixed","el","height","getBoundingClientRect","setState","router","onLegendSelectChanged","autoHeightResize","Boolean","legend","left","top","selected","formatter","arg","toUpperCase","axisField","axisLabel","chartOptions","grid","right","bottom","seriesOptions","showSymbol","tooltip","trigger","valueFormatter","color","chartLabel","zoomRenderProps","otherRegex","shouldColorOther","colors","charts","getColorPalette","chartOther","seriesStart","seriesEnd","onDataZoom","evt","StyledTransparentLoadingMask","LoadingScreen","LoadingPlaceholder","surface200","BigNumberResizeWrapper","BigNumber","headingColor","ChartWrapper","StyledSimpleTableChart","borderRadius","fontSizeMedium","StyledErrorPanel","createDefinedContext","_DashboardsMEPProvider","useDashboardsMEPContext","DashboardsMEPContext","DashboardsMEPConsumer","Consumer","DashboardsMEPProvider","setIsMetricsData","isSelectionEqual","getReferrer","GenericWidgetQueries","queryFetchID","rawResults","pageLinks","componentDidMount","_isMounted","fetchData","componentDidUpdate","prevProps","config","customDidUpdateComparator","prevWidgetQueryNames","prevWidgetQueries","names","rest","widgetQueryNames","widgetQueries","prevState","concat","applyDashboardFilters","dashboardFilterConditions","activeFilters","fetchTableData","originalWidget","afterFetchTableData","onDataFetched","responses","all","requestLimit","requestCreator","responsePageLinks","afterTableFetchData","_textstatus","resp","transformedData","getResponseHeader","fetchSeriesData","afterFetchSeriesData","_query","rawResultsClone","transformedTimeseriesResults","requestIndex","transformedResult","resultIndex","Symbol","err","responseJSON","detail","message","IssueWidgetCard","transformedResults","IssueWidgetQueries","memberListStoreLoaded","setMemberListStoreLoaded","isLoaded","unlistener","listen","_rawResult","response","totalIssuesCount","addErrorMessage","METRICS_EXPRESSION_TO_FIELD","getReleasesQuery","releases","releaseCondition","releasesArray","releaseQueryString","releasesUsed","useMetricsAPI","ReleaseWidgetQueries","ignoredWidgetProps","ignoredQueryProps","q","flatMap","initialWidget","reverse","group1","group2","release1","release2","fetchReleases","transformWidget","afterFetchData","groupName","_","obj","mappedResults","derivedTotals","withRouter","WidgetQueries","WidgetCardChartContainer","renderErrorMessage","tableItemLimit","useContext","DURATION_UNITS","SIZE_UNITS","stats","scale","timestamp","counts","groupNames","aggregateNames","getIsMetricsDataFromSeriesResponse","multiIsMetricsData","context","isSeriesMetricsDataResults","rawResult","isTableMetricsDataResults"],"sourceRoot":""}