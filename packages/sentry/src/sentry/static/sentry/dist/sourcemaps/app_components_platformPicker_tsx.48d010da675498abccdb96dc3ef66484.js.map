{"version":3,"file":"chunks/app_components_platformPicker_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/platformPicker.tsx"],"sourcesContent":["import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport {PlatformIcon} from 'platformicons';\n\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport categoryList, {filterAliases, PlatformKey} from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {IconClose, IconProject, IconSearch} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {inputStyles} from 'sentry/styles/input';\nimport space from 'sentry/styles/space';\nimport {Organization, PlatformIntegration} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nconst PLATFORM_CATEGORIES = [...categoryList, {id: 'all', name: t('All')}] as const;\n\nconst PlatformList = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\ntype Category = typeof PLATFORM_CATEGORIES[number]['id'];\n\ninterface PlatformPickerProps {\n  setPlatform: (key: PlatformKey | null) => void;\n  defaultCategory?: Category;\n  listClassName?: string;\n  listProps?: React.HTMLAttributes<HTMLDivElement>;\n  noAutoFilter?: boolean;\n  organization?: Organization;\n  platform?: string | null;\n  showOther?: boolean;\n  source?: string;\n}\n\ntype State = {\n  category: Category;\n  filter: string;\n};\n\nclass PlatformPicker extends Component<PlatformPickerProps, State> {\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state: State = {\n    category: this.props.defaultCategory ?? PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const filter = this.state.filter.toLowerCase();\n\n    const subsetMatch = (platform: PlatformIntegration) =>\n      platform.id.includes(filter) ||\n      platform.name.toLowerCase().includes(filter) ||\n      filterAliases[platform.id as PlatformKey]?.some(alias => alias.includes(filter));\n\n    const categoryMatch = (platform: PlatformIntegration) =>\n      category === 'all' ||\n      (currentCategory?.platforms as undefined | string[])?.includes(platform.id);\n\n    const filtered = platforms\n      .filter(this.state.filter ? subsetMatch : categoryMatch)\n      .sort((a, b) => a.id.localeCompare(b.id));\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      trackAdvancedAnalyticsEvent('growth.platformpicker_search', {\n        search: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n        source: this.props.source,\n        organization: this.props.organization ?? null,\n      });\n    }\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={(e: React.MouseEvent) => {\n                  trackAdvancedAnalyticsEvent('growth.platformpicker_category', {\n                    category: id,\n                    source: this.props.source,\n                    organization: this.props.organization ?? null,\n                  });\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <SearchBar>\n            <IconSearch size=\"xs\" />\n            <input\n              type=\"text\"\n              value={filter}\n              placeholder={t('Filter Platforms')}\n              onChange={e => this.setState({filter: e.target.value}, this.logSearch)}\n            />\n          </SearchBar>\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => (\n            <PlatformCard\n              data-test-id={`platform-${platform.id}`}\n              key={platform.id}\n              platform={platform}\n              selected={this.props.platform === platform.id}\n              onClear={(e: React.MouseEvent) => {\n                setPlatform(null);\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                trackAdvancedAnalyticsEvent('growth.select_platform', {\n                  platform_id: platform.id,\n                  source: this.props.source,\n                  organization: this.props.organization ?? null,\n                });\n                setPlatform(platform.id as PlatformKey);\n              }}\n            />\n          ))}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: 1fr minmax(0, 300px);\n  align-items: start;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst SearchBar = styled('div')`\n  ${p => inputStyles(p)};\n  padding: 0 8px;\n  color: ${p => p.theme.subText};\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  margin-top: -${space(0.75)};\n\n  input {\n    border: none;\n    background: none;\n    padding: 2px 4px;\n    width: 100%;\n    /* Ensure a consistent line height to keep the input the desired height */\n    line-height: 24px;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n  white-space: nowrap;\n\n  > li {\n    float: none;\n    display: inline-block;\n  }\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin: ${space(2)};\n`;\n\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  min-height: 0;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\n\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xs',\n};\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIcon\n      platform={platform.id}\n      size={56}\n      radius={5}\n      withLanguageIcon\n      format=\"lg\"\n    />\n\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} aria-label={t('Clear')} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  cursor: pointer;\n  background: ${p => p.selected && p.theme.alert.info.backgroundLight};\n\n  &:hover {\n    background: ${p => p.theme.alert.muted.backgroundLight};\n  }\n\n  h3 {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    color: ${p => (p.selected ? p.theme.textColor : p.theme.subText)};\n    text-align: center;\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    text-transform: uppercase;\n    margin: 0;\n    padding: 0 ${space(0.5)};\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n"],"names":["Component","Link","RouterLink","withRouter","classNames","omit","qs","ListLink","_classNames","className","activeClassName","props","isActive","to","query","index","router","queryData","parse","undefined","target","pathname","render","children","disabled","carriedProps","getClassName","StyledLi","shouldForwardProp","prop","p","theme","Fragment","debounce","PlatformIcon","Button","ExternalLink","NavTabs","DEFAULT_DEBOUNCE_DURATION","categoryList","filterAliases","platforms","IconClose","IconProject","IconSearch","t","tct","inputStyles","space","trackAdvancedAnalyticsEvent","EmptyMessage","PLATFORM_CATEGORIES","id","name","PlatformList","PlatformPicker","category","defaultCategory","filter","noAutoFilter","platform","split","state","search","toLowerCase","num_results","platformList","length","source","organization","currentCategory","find","subsetMatch","includes","some","alias","categoryMatch","filtered","sort","a","b","localeCompare","showOther","setPlatform","listProps","listClassName","map","e","setState","preventDefault","value","logSearch","stopPropagation","platform_id","NavContainer","border","SearchBar","subText","CategoryNav","StyledPlatformIcon","ClearButton","background","textColor","defaultProps","icon","borderless","size","PlatformCard","selected","onClear","alert","info","backgroundLight","muted","fontSizeExtraSmall"],"sourceRoot":""}