{"version":3,"file":"chunks/app_views_alerts_list_incidents_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/views/alerts/list/incidents/index.tsx","webpack:///./app/views/alerts/list/incidents/row.tsx","webpack:///./app/views/alerts/list/onboarding.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  image: React.ReactNode;\n  className?: string;\n};\n\nfunction OnboardingPanel({className, image, children}: Props) {\n  return (\n    <Panel className={className}>\n      <Container>\n        <IlloBox>{image}</IlloBox>\n        <StyledBox>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')`\n  z-index: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","import {Fragment, useEffect} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {promptsCheck, promptsUpdate} from 'sentry/actionCreators/prompts';\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport CreateAlertButton from 'sentry/components/createAlertButton';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport Projects from 'sentry/utils/projects';\n\nimport FilterBar from '../../filterBar';\nimport {Incident} from '../../types';\nimport {getQueryStatus, getTeamParams} from '../../utils';\nimport AlertHeader from '../header';\nimport Onboarding from '../onboarding';\n\nimport AlertListRow from './row';\n\nconst DOCS_URL =\n  'https://docs.sentry.io/workflow/alerts-notifications/alerts/?_ga=2.21848383.580096147.1592364314-1444595810.1582160976';\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  organization: Organization;\n};\n\ntype State = {\n  incidentList: Incident[];\n  /**\n   * User has not yet seen the 'alert_stream' welcome prompt for this\n   * organization.\n   */\n  firstVisitShown?: boolean;\n  /**\n   * Is there at least one alert rule configured for the currently selected\n   * projects?\n   */\n  hasAlertRule?: boolean;\n};\n\nclass IncidentsList extends AsyncComponent<Props, State & AsyncComponent['state']> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {params, location} = this.props;\n    const {query} = location;\n    const status = getQueryStatus(query.status);\n\n    return [\n      [\n        'incidentList',\n        `/organizations/${params?.orgId}/incidents/`,\n        {\n          query: {\n            ...query,\n            status: status === 'all' ? undefined : status,\n            team: getTeamParams(query.team),\n            expand: ['original_alert_rule'],\n          },\n        },\n      ],\n    ];\n  }\n\n  /**\n   * If our incidentList is empty, determine if we've configured alert rules or\n   * if the user has seen the welcome prompt.\n   */\n  async onLoadAllEndpointsSuccess() {\n    const {incidentList} = this.state;\n\n    if (!incidentList || incidentList.length !== 0) {\n      this.setState({hasAlertRule: true, firstVisitShown: false});\n      return;\n    }\n\n    this.setState({loading: true});\n\n    // Check if they have rules or not, to know which empty state message to\n    // display\n    const {params, location, organization} = this.props;\n\n    const alertRules = await this.api.requestPromise(\n      `/organizations/${params?.orgId}/alert-rules/`,\n      {\n        method: 'GET',\n        query: location.query,\n      }\n    );\n    const hasAlertRule = alertRules.length > 0;\n\n    // We've already configured alert rules, no need to check if we should show\n    // the \"first time welcome\" prompt\n    if (hasAlertRule) {\n      this.setState({hasAlertRule, firstVisitShown: false, loading: false});\n      return;\n    }\n\n    // Check if they have already seen the prompt for the alert stream\n    const prompt = await promptsCheck(this.api, {\n      organizationId: organization.id,\n      feature: 'alert_stream',\n    });\n\n    const firstVisitShown = !prompt?.dismissedTime;\n\n    if (firstVisitShown) {\n      // Prompt has not been seen, mark the prompt as seen immediately so they\n      // don't see it again\n      promptsUpdate(this.api, {\n        feature: 'alert_stream',\n        organizationId: organization.id,\n        status: 'dismissed',\n      });\n    }\n\n    this.setState({hasAlertRule, firstVisitShown, loading: false});\n  }\n\n  get projectsFromIncidents() {\n    const {incidentList} = this.state;\n\n    return [...new Set(incidentList?.map(({projects}) => projects).flat())];\n  }\n\n  handleChangeSearch = (title: string) => {\n    const {router, location} = this.props;\n    const {cursor: _cursor, page: _page, ...currentQuery} = location.query;\n    router.push({\n      pathname: location.pathname,\n      query: {\n        ...currentQuery,\n        title,\n      },\n    });\n  };\n\n  handleChangeFilter = (activeFilters: string[]) => {\n    const {router, location} = this.props;\n    const {cursor: _cursor, page: _page, ...currentQuery} = location.query;\n\n    router.push({\n      pathname: location.pathname,\n      query: {\n        ...currentQuery,\n        // Preserve empty team query parameter\n        team: activeFilters.length > 0 ? activeFilters : '',\n      },\n    });\n  };\n\n  handleChangeStatus = (value: string): void => {\n    const {router, location} = this.props;\n    const {cursor: _cursor, page: _page, ...currentQuery} = location.query;\n\n    router.push({\n      pathname: location.pathname,\n      query: {\n        ...currentQuery,\n        status: value === 'all' ? undefined : value,\n      },\n    });\n  };\n\n  tryRenderOnboarding() {\n    const {firstVisitShown} = this.state;\n    const {organization} = this.props;\n\n    if (!firstVisitShown) {\n      return null;\n    }\n\n    const actions = (\n      <Fragment>\n        <Button size=\"sm\" external href={DOCS_URL}>\n          {t('View Features')}\n        </Button>\n        <CreateAlertButton\n          organization={organization}\n          iconProps={{size: 'xs'}}\n          size=\"sm\"\n          priority=\"primary\"\n          referrer=\"alert_stream\"\n        >\n          {t('Create Alert')}\n        </CreateAlertButton>\n      </Fragment>\n    );\n\n    return <Onboarding actions={actions} />;\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderList() {\n    const {loading, incidentList, incidentListPageLinks, hasAlertRule} = this.state;\n    const {\n      params: {orgId},\n      organization,\n    } = this.props;\n\n    const checkingForAlertRules =\n      incidentList?.length === 0 && hasAlertRule === undefined;\n    const showLoadingIndicator = loading || checkingForAlertRules;\n\n    return (\n      <Fragment>\n        {this.tryRenderOnboarding() ?? (\n          <StyledPanelTable\n            isLoading={showLoadingIndicator}\n            isEmpty={incidentList?.length === 0}\n            emptyMessage={t('No incidents exist for the current query.')}\n            emptyAction={\n              <EmptyStateAction>\n                {tct('Learn more about [link:Metric Alerts]', {\n                  link: <ExternalLink href={DOCS_URL} />,\n                })}\n              </EmptyStateAction>\n            }\n            headers={[\n              t('Alert Rule'),\n              t('Triggered'),\n              t('Duration'),\n              t('Project'),\n              t('Alert ID'),\n              t('Team'),\n            ]}\n          >\n            <Projects orgId={orgId} slugs={this.projectsFromIncidents}>\n              {({initiallyLoaded, projects}) =>\n                incidentList.map(incident => (\n                  <AlertListRow\n                    key={incident.id}\n                    projectsLoaded={initiallyLoaded}\n                    projects={projects as Project[]}\n                    incident={incident}\n                    organization={organization}\n                  />\n                ))\n              }\n            </Projects>\n          </StyledPanelTable>\n        )}\n        <Pagination pageLinks={incidentListPageLinks} />\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {params, organization, router, location} = this.props;\n    const {orgId} = params;\n\n    return (\n      <SentryDocumentTitle title={t('Alerts')} orgSlug={orgId}>\n        <PageFiltersContainer>\n          <AlertHeader\n            organization={organization}\n            router={router}\n            activeTab=\"stream\"\n            projectSlugs={this.projectsFromIncidents}\n          />\n          <Layout.Body>\n            <Layout.Main fullWidth>\n              {!this.tryRenderOnboarding() && (\n                <Fragment>\n                  <StyledAlert showIcon>\n                    {t('This page only shows metric alerts.')}\n                  </StyledAlert>\n                  <FilterBar\n                    location={location}\n                    onChangeFilter={this.handleChangeFilter}\n                    onChangeSearch={this.handleChangeSearch}\n                    onChangeStatus={this.handleChangeStatus}\n                    hasStatusFilters\n                  />\n                </Fragment>\n              )}\n              {this.renderList()}\n            </Layout.Main>\n          </Layout.Body>\n        </PageFiltersContainer>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nfunction IncidentsListContainer(props: Props) {\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('alert_stream.viewed', {\n      organization: props.organization,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderDisabled = () => (\n    <Layout.Body>\n      <Layout.Main fullWidth>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </Layout.Main>\n    </Layout.Body>\n  );\n\n  return (\n    <Feature\n      features={['incidents']}\n      hookName=\"feature-disabled:alerts-page\"\n      renderDisabled={renderDisabled}\n    >\n      <IncidentsList {...props} />\n    </Feature>\n  );\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin-bottom: ${space(1.5)};\n`;\n\nconst EmptyStateAction = styled('p')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default IncidentsListContainer;\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport ActorAvatar from 'sentry/components/avatar/actorAvatar';\nimport Duration from 'sentry/components/duration';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport IdBadge from 'sentry/components/idBadge';\nimport Link from 'sentry/components/links/link';\nimport Tag from 'sentry/components/tag';\nimport TimeSince from 'sentry/components/timeSince';\nimport {t} from 'sentry/locale';\nimport TeamStore from 'sentry/stores/teamStore';\nimport space from 'sentry/styles/space';\nimport {Actor, Organization, Project} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {Incident, IncidentStatus} from 'sentry/views/alerts/types';\nimport {alertDetailsLink} from 'sentry/views/alerts/utils';\n\ntype Props = {\n  incident: Incident;\n  organization: Organization;\n  projects: Project[];\n  projectsLoaded: boolean;\n};\n\nfunction AlertListRow({incident, projectsLoaded, projects, organization}: Props) {\n  const slug = incident.projects[0];\n  const started = moment(incident.dateStarted);\n  const duration = moment\n    .duration(moment(incident.dateClosed || new Date()).diff(started))\n    .as('seconds');\n\n  const project = useMemo(() => projects.find(p => p.slug === slug), [slug, projects]);\n\n  const alertLink = {\n    pathname: alertDetailsLink(organization, incident),\n    query: {alert: incident.identifier},\n  };\n  const ownerId = incident.alertRule.owner?.split(':')[1];\n  let teamName = '';\n  if (ownerId) {\n    teamName = TeamStore.getById(ownerId)?.name ?? '';\n  }\n  const teamActor = ownerId\n    ? {type: 'team' as Actor['type'], id: ownerId, name: teamName}\n    : null;\n\n  return (\n    <ErrorBoundary>\n      <Title data-test-id=\"alert-title\">\n        <Link to={alertLink}>{incident.title}</Link>\n      </Title>\n\n      <NoWrapNumeric>\n        {getDynamicText({\n          value: <TimeSince date={incident.dateStarted} extraShort />,\n          fixed: '1w ago',\n        })}\n      </NoWrapNumeric>\n      <NoWrapNumeric>\n        {incident.status === IncidentStatus.CLOSED ? (\n          <Duration seconds={getDynamicText({value: duration, fixed: 1200})} />\n        ) : (\n          <Tag type=\"warning\">{t('Still Active')}</Tag>\n        )}\n      </NoWrapNumeric>\n\n      <ProjectBadge avatarSize={18} project={!projectsLoaded ? {slug} : project} />\n      <NoWrapNumeric>#{incident.id}</NoWrapNumeric>\n\n      <FlexCenter>\n        {teamActor ? (\n          <Fragment>\n            <StyledActorAvatar actor={teamActor} size={24} hasTooltip={false} />{' '}\n            <TeamWrapper>{teamActor.name}</TeamWrapper>\n          </Fragment>\n        ) : (\n          '-'\n        )}\n      </FlexCenter>\n    </ErrorBoundary>\n  );\n}\n\nconst Title = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n  min-width: 130px;\n`;\n\nconst NoWrapNumeric = styled('div')`\n  white-space: nowrap;\n  font-variant-numeric: tabular-nums;\n`;\n\nconst ProjectBadge = styled(IdBadge)`\n  flex-shrink: 0;\n`;\n\nconst FlexCenter = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n  display: flex;\n  align-items: center;\n`;\n\nconst TeamWrapper = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n`;\n\nconst StyledActorAvatar = styled(ActorAvatar)`\n  margin-right: ${space(1)};\n`;\n\nexport default AlertListRow;\n","import styled from '@emotion/styled';\n\nimport emptyStateImg from 'sentry-images/spot/alerts-empty-state.svg';\n\nimport ButtonBar from 'sentry/components/buttonBar';\nimport OnboardingPanel from 'sentry/components/onboardingPanel';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  actions: React.ReactNode;\n};\n\nfunction Onboarding({actions}: Props) {\n  return (\n    <OnboardingPanel image={<AlertsImage src={emptyStateImg} />}>\n      <h3>{t('More signal, less noise')}</h3>\n      <p>\n        {t(\n          'Not every error is worth an email. Set your own rules for alerts you need, with information that helps.'\n        )}\n      </p>\n      <ButtonList gap={1}>{actions}</ButtonList>\n    </OnboardingPanel>\n  );\n}\n\nconst AlertsImage = styled('img')`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    user-select: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 220px;\n    margin-top: auto;\n    margin-bottom: auto;\n    transform: translateX(-50%);\n    left: 50%;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    transform: translateX(-60%);\n    width: 280px;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    transform: translateX(-75%);\n    width: 320px;\n  }\n`;\n\nconst ButtonList = styled(ButtonBar)`\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n`;\n\nexport default Onboarding;\n"],"names":["Panel","space","OnboardingPanel","className","image","children","Container","p","theme","breakpoints","small","medium","StyledBox","IlloBox","Fragment","useEffect","promptsCheck","promptsUpdate","Feature","Alert","AsyncComponent","Button","CreateAlertButton","Layout","ExternalLink","PageFiltersContainer","Pagination","PanelTable","SentryDocumentTitle","t","tct","trackAdvancedAnalyticsEvent","Projects","FilterBar","getQueryStatus","getTeamParams","AlertHeader","Onboarding","AlertListRow","DOCS_URL","IncidentsList","title","router","location","props","cursor","_cursor","page","_page","currentQuery","query","push","pathname","activeFilters","team","length","value","status","undefined","getEndpoints","params","orgId","expand","onLoadAllEndpointsSuccess","incidentList","state","setState","hasAlertRule","firstVisitShown","loading","organization","alertRules","api","requestPromise","method","prompt","organizationId","id","feature","dismissedTime","projectsFromIncidents","Set","map","projects","flat","tryRenderOnboarding","actions","size","renderLoading","renderBody","renderList","incidentListPageLinks","checkingForAlertRules","showLoadingIndicator","link","initiallyLoaded","incident","handleChangeFilter","handleChangeSearch","handleChangeStatus","IncidentsListContainer","renderDisabled","StyledPanelTable","fontSizeMedium","StyledAlert","EmptyStateAction","fontSizeLarge","useMemo","moment","ActorAvatar","Duration","ErrorBoundary","IdBadge","Link","Tag","TimeSince","TeamStore","getDynamicText","IncidentStatus","alertDetailsLink","projectsLoaded","slug","started","dateStarted","duration","dateClosed","Date","diff","as","project","find","alertLink","alert","identifier","ownerId","alertRule","owner","split","teamName","getById","name","teamActor","type","fixed","CLOSED","Title","overflowEllipsis","NoWrapNumeric","ProjectBadge","FlexCenter","TeamWrapper","StyledActorAvatar","emptyStateImg","ButtonBar","AlertsImage","large","xlarge","ButtonList"],"sourceRoot":""}