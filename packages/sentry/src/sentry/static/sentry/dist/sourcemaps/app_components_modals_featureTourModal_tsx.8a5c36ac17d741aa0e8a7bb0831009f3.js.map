{"version":3,"file":"chunks/app_components_modals_featureTourModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/modals/featureTourModal.tsx"],"sourcesContent":["import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps, openModal} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\n\nexport type TourStep = {\n  body: React.ReactNode;\n  title: string;\n  actions?: React.ReactNode;\n  image?: React.ReactNode;\n};\n\ntype ChildProps = {\n  showModal: () => void;\n};\n\ntype Props = {\n  children: (props: ChildProps) => React.ReactNode;\n  /**\n   * The list of tour steps.\n   * The FeatureTourModal will manage state on the active step.\n   */\n  steps: TourStep[];\n  /**\n   * Customize the text shown on the done button.\n   */\n  doneText?: string;\n  /**\n   * Provide a URL for the done state to open in a new tab.\n   */\n  doneUrl?: string;\n  /**\n   * Triggered when the tour is advanced.\n   */\n  onAdvance?: (currentIndex: number, durationOpen: number) => void;\n  /**\n   * Triggered when the tour is closed by completion or IconClose\n   */\n  onCloseModal?: (currentIndex: number, durationOpen: number) => void;\n};\n\ntype State = {\n  /**\n   * The last known step\n   */\n  current: number;\n\n  /**\n   * The timestamp when the modal was shown.\n   * Used to calculate how long the modal was open\n   */\n  openedAt: number;\n};\n\nconst defaultProps = {\n  doneText: t('Done'),\n};\n\n/**\n * Provide a showModal action to the child function that lets\n * a tour be triggered.\n *\n * Once active this component will track when the tour was started and keep\n * a last known step state. Ideally the state would live entirely in this component.\n * However, once the modal has been opened state changes in this component don't\n * trigger re-renders in the modal contents. This requires a bit of duplicate state\n * to be managed around the current step.\n */\nclass FeatureTourModal extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    openedAt: 0,\n    current: 0,\n  };\n\n  // Record the step change and call the callback this component was given.\n  handleAdvance = (current: number, duration: number) => {\n    this.setState({current});\n    callIfFunction(this.props.onAdvance, current, duration);\n  };\n\n  handleShow = () => {\n    this.setState({openedAt: Date.now()}, () => {\n      const modalProps = {\n        steps: this.props.steps,\n        onAdvance: this.handleAdvance,\n        openedAt: this.state.openedAt,\n        doneText: this.props.doneText,\n        doneUrl: this.props.doneUrl,\n      };\n      openModal(deps => <ModalContents {...deps} {...modalProps} />, {\n        onClose: this.handleClose,\n      });\n    });\n  };\n\n  handleClose = () => {\n    // The bootstrap modal and modal store both call this callback.\n    // We use the state flag to deduplicate actions to upstream components.\n    if (this.state.openedAt === 0) {\n      return;\n    }\n    const {onCloseModal} = this.props;\n\n    const duration = Date.now() - this.state.openedAt;\n    callIfFunction(onCloseModal, this.state.current, duration);\n\n    // Reset the state now that the modal is closed, used to deduplicate close actions.\n    this.setState({openedAt: 0, current: 0});\n  };\n\n  render() {\n    const {children} = this.props;\n    return <Fragment>{children({showModal: this.handleShow})}</Fragment>;\n  }\n}\n\nexport default FeatureTourModal;\n\ntype ContentsProps = ModalRenderProps &\n  Pick<Props, 'steps' | 'doneText' | 'doneUrl' | 'onAdvance'> &\n  Pick<State, 'openedAt'>;\n\ntype ContentsState = {\n  current: number;\n  openedAt: number;\n};\n\nclass ModalContents extends Component<ContentsProps, ContentsState> {\n  static defaultProps = defaultProps;\n\n  state: ContentsState = {\n    current: 0,\n    openedAt: Date.now(),\n  };\n\n  handleAdvance = () => {\n    const {onAdvance, openedAt} = this.props;\n    this.setState(\n      prevState => ({current: prevState.current + 1}),\n      () => {\n        const duration = Date.now() - openedAt;\n        callIfFunction(onAdvance, this.state.current, duration);\n      }\n    );\n  };\n\n  render() {\n    const {Body, steps, doneText, doneUrl, closeModal} = this.props;\n    const {current} = this.state;\n\n    const step = steps[current] !== undefined ? steps[current] : steps[steps.length - 1];\n    const hasNext = steps[current + 1] !== undefined;\n\n    return (\n      <Body data-test-id=\"feature-tour\">\n        <CloseButton\n          borderless\n          size=\"zero\"\n          onClick={closeModal}\n          icon={<IconClose />}\n          aria-label={t('Close tour')}\n        />\n        <TourContent>\n          {step.image}\n          <TourHeader>{step.title}</TourHeader>\n          {step.body}\n          <TourButtonBar gap={1}>\n            {step.actions && step.actions}\n            {hasNext && (\n              <Button priority=\"primary\" onClick={this.handleAdvance}>\n                {t('Next')}\n              </Button>\n            )}\n            {!hasNext && (\n              <Button\n                external\n                href={doneUrl}\n                onClick={closeModal}\n                priority=\"primary\"\n                aria-label={t('Complete tour')}\n              >\n                {doneText}\n              </Button>\n            )}\n          </TourButtonBar>\n          <StepCounter>{t('%s of %s', current + 1, steps.length)}</StepCounter>\n        </TourContent>\n      </Body>\n    );\n  }\n}\n\nconst CloseButton = styled(Button)`\n  position: absolute;\n  top: -${space(2)};\n  right: -${space(1)};\n`;\n\nconst TourContent = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: ${space(3)} ${space(4)} ${space(1)} ${space(4)};\n`;\n\nconst TourHeader = styled('h4')`\n  margin-bottom: ${space(1)};\n`;\n\nconst TourButtonBar = styled(ButtonBar)`\n  margin-bottom: ${space(3)};\n`;\n\nconst StepCounter = styled('div')`\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: bold;\n  color: ${p => p.theme.gray300};\n`;\n\n// Styled components that can be used to build tour content.\nexport const TourText = styled('p')`\n  text-align: center;\n  margin-bottom: ${space(4)};\n`;\n\nexport const TourImage = styled('img')`\n  height: 200px;\n  margin-bottom: ${space(4)};\n\n  /** override styles in less files */\n  max-width: 380px !important;\n  box-shadow: none !important;\n  border: 0 !important;\n  border-radius: 0 !important;\n`;\n"],"names":["Component","Fragment","openModal","Button","ButtonBar","IconClose","t","space","callIfFunction","defaultProps","doneText","FeatureTourModal","openedAt","current","duration","setState","props","onAdvance","Date","now","modalProps","steps","handleAdvance","state","doneUrl","deps","onClose","handleClose","onCloseModal","render","children","showModal","handleShow","ModalContents","prevState","Body","closeModal","step","undefined","length","hasNext","image","title","body","actions","CloseButton","TourContent","TourHeader","TourButtonBar","StepCounter","p","theme","fontSizeSmall","gray300","TourText","TourImage"],"sourceRoot":""}