{"version":3,"file":"chunks/app_components_links_listLink_tsx-app_views_performance_vitalDetail_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/createAlertButton.tsx","webpack:///./app/components/events/searchBar.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/performance/vitalsAlert/constants.tsx","webpack:///./app/utils/measurements/measurements.tsx","webpack:///./app/utils/performance/vitals/vitalsDetailsTableQuery.tsx","webpack:///./app/utils/withTags.tsx","webpack:///./app/views/alerts/rules/metric/types.tsx","webpack:///./app/views/alerts/wizard/options.tsx","webpack:///./app/views/performance/vitalDetail/index.tsx","webpack:///./app/views/performance/vitalDetail/table.tsx","webpack:///./app/views/performance/vitalDetail/vitalChart.tsx","webpack:///./app/views/performance/vitalDetail/vitalDetailContent.tsx","webpack:///./app/views/performance/vitalDetail/vitalInfo.tsx","webpack:///./app/views/performance/vitalDetail/vitalsComparison.tsx"],"sourcesContent":["// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {navigateTo} from 'sentry/actionCreators/navigation';\nimport Access from 'sentry/components/acl/access';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport {IconSiren} from 'sentry/icons';\nimport type {SVGIconProps} from 'sentry/icons/svgIcon';\nimport {t, tct} from 'sentry/locale';\nimport type {Organization, Project} from 'sentry/types';\nimport type EventView from 'sentry/utils/discover/eventView';\nimport useApi from 'sentry/utils/useApi';\nimport {\n  AlertType,\n  AlertWizardAlertNames,\n  AlertWizardRuleTemplates,\n  DEFAULT_WIZARD_TEMPLATE,\n} from 'sentry/views/alerts/wizard/options';\n\nexport type CreateAlertFromViewButtonProps = ButtonProps & {\n  /**\n   * Discover query used to create the alert\n   */\n  eventView: EventView;\n  organization: Organization;\n  projects: Project[];\n  alertType?: AlertType;\n  className?: string;\n  /**\n   * Passed in value to override any metrics decision and switch back to transactions dataset.\n   * We currently do a few checks on metrics data on performance pages and this passes the decision onward to alerts.\n   */\n  disableMetricDataset?: boolean;\n  /**\n   * Called when the user is redirected to the alert builder\n   */\n  onClick?: () => void;\n\n  referrer?: string;\n};\n\n/**\n * Provide a button that can create an alert from an event view.\n * Emits incompatible query issues on click\n */\nfunction CreateAlertFromViewButton({\n  projects,\n  eventView,\n  organization,\n  referrer,\n  onClick,\n  alertType,\n  disableMetricDataset,\n  ...buttonProps\n}: CreateAlertFromViewButtonProps) {\n  const project = projects.find(p => p.id === `${eventView.project[0]}`);\n  const queryParams = eventView.generateQueryStringObject();\n  if (queryParams.query?.includes(`project:${project?.slug}`)) {\n    queryParams.query = (queryParams.query as string).replace(\n      `project:${project?.slug}`,\n      ''\n    );\n  }\n\n  const alertTemplate = alertType\n    ? AlertWizardRuleTemplates[alertType]\n    : DEFAULT_WIZARD_TEMPLATE;\n\n  const to = {\n    pathname: `/organizations/${organization.slug}/alerts/new/metric/`,\n    query: {\n      ...queryParams,\n      createFromDiscover: true,\n      disableMetricDataset,\n      referrer,\n      ...alertTemplate,\n      project: project?.slug,\n      aggregate: queryParams.yAxis ?? alertTemplate.aggregate,\n    },\n  };\n\n  const handleClick = () => {\n    onClick?.();\n  };\n\n  return (\n    <CreateAlertButton\n      organization={organization}\n      onClick={handleClick}\n      to={to}\n      aria-label={t('Create Alert')}\n      {...buttonProps}\n    />\n  );\n}\n\ntype CreateAlertButtonProps = {\n  organization: Organization;\n  alertOption?: keyof typeof AlertWizardAlertNames;\n  hideIcon?: boolean;\n  iconProps?: SVGIconProps;\n  /**\n   * Callback when the button is clicked.\n   * This is different from `onClick` which always overrides the default\n   * behavior when the button was clicked.\n   */\n  onEnter?: () => void;\n  projectSlug?: string;\n  referrer?: string;\n  showPermissionGuide?: boolean;\n} & WithRouterProps &\n  ButtonProps;\n\nconst CreateAlertButton = withRouter(\n  ({\n    organization,\n    projectSlug,\n    iconProps,\n    referrer,\n    router,\n    hideIcon,\n    showPermissionGuide,\n    alertOption,\n    onEnter,\n    ...buttonProps\n  }: CreateAlertButtonProps) => {\n    const api = useApi();\n    const createAlertUrl = (providedProj: string) => {\n      const alertsBaseUrl = `/organizations/${organization.slug}/alerts`;\n      const alertsArgs = [\n        `${referrer ? `referrer=${referrer}` : ''}`,\n        `${\n          providedProj && providedProj !== ':projectId' ? `project=${providedProj}` : ''\n        }`,\n        alertOption ? `alert_option=${alertOption}` : '',\n      ].filter(item => item !== '');\n\n      return `${alertsBaseUrl}/wizard/${alertsArgs.length ? '?' : ''}${alertsArgs.join(\n        '&'\n      )}`;\n    };\n\n    function handleClickWithoutProject(event: React.MouseEvent) {\n      event.preventDefault();\n      onEnter?.();\n\n      navigateTo(createAlertUrl(':projectId'), router);\n    }\n\n    async function enableAlertsMemberWrite() {\n      const settingsEndpoint = `/organizations/${organization.slug}/`;\n      addLoadingMessage();\n      try {\n        await api.requestPromise(settingsEndpoint, {\n          method: 'PUT',\n          data: {\n            alertsMemberWrite: true,\n          },\n        });\n        addSuccessMessage(t('Successfully updated organization settings'));\n      } catch (err) {\n        addErrorMessage(t('Unable to update organization settings'));\n      }\n    }\n\n    const permissionTooltipText = tct(\n      'Ask your organization owner or manager to [settingsLink:enable alerts access] for you.',\n      {settingsLink: <Link to={`/settings/${organization.slug}`} />}\n    );\n\n    const renderButton = (hasAccess: boolean) => (\n      <Button\n        disabled={!hasAccess}\n        title={!hasAccess ? permissionTooltipText : undefined}\n        icon={!hideIcon && <IconSiren {...iconProps} />}\n        to={projectSlug ? createAlertUrl(projectSlug) : undefined}\n        tooltipProps={{\n          isHoverable: true,\n          position: 'top',\n          overlayStyle: {\n            maxWidth: '270px',\n          },\n        }}\n        onClick={projectSlug ? onEnter : handleClickWithoutProject}\n        {...buttonProps}\n      >\n        {buttonProps.children ?? t('Create Alert')}\n      </Button>\n    );\n\n    const showGuide = !organization.alertsMemberWrite && !!showPermissionGuide;\n\n    return (\n      <Access organization={organization} access={['alerts:write']}>\n        {({hasAccess}) =>\n          showGuide ? (\n            <Access organization={organization} access={['org:write']}>\n              {({hasAccess: isOrgAdmin}) => (\n                <GuideAnchor\n                  target={isOrgAdmin ? 'alerts_write_owner' : 'alerts_write_member'}\n                  onFinish={isOrgAdmin ? enableAlertsMemberWrite : undefined}\n                >\n                  {renderButton(hasAccess)}\n                </GuideAnchor>\n              )}\n            </Access>\n          ) : (\n            renderButton(hasAccess)\n          )\n        }\n      </Access>\n    );\n  }\n);\n\nexport {CreateAlertFromViewButton};\nexport default CreateAlertButton;\n","import {useEffect} from 'react';\nimport assign from 'lodash/assign';\nimport flatten from 'lodash/flatten';\nimport memoize from 'lodash/memoize';\nimport omit from 'lodash/omit';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'sentry/constants';\nimport {Organization, SavedSearchType, Tag, TagCollection} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {\n  Field,\n  FIELD_TAGS,\n  isAggregateField,\n  isEquation,\n  isMeasurement,\n  SEMVER_TAGS,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  TRACING_FIELDS,\n} from 'sentry/utils/discover/fields';\nimport {FieldKey, FieldKind} from 'sentry/utils/fields';\nimport Measurements from 'sentry/utils/measurements/measurements';\nimport useApi from 'sentry/utils/useApi';\nimport withTags from 'sentry/utils/withTags';\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\n\nconst getFunctionTags = (fields: Readonly<Field[]>) =>\n  Object.fromEntries(\n    fields\n      .filter(\n        item => !Object.keys(FIELD_TAGS).includes(item.field) && !isEquation(item.field)\n      )\n      .map(item => [\n        item.field,\n        {key: item.field, name: item.field, kind: FieldKind.FUNCTION},\n      ])\n  );\n\nconst getFieldTags = () =>\n  Object.fromEntries(\n    Object.keys(FIELD_TAGS).map(key => [\n      key,\n      {\n        ...FIELD_TAGS[key],\n        kind: FieldKind.FIELD,\n      },\n    ])\n  );\n\nconst getMeasurementTags = (\n  measurements: Parameters<\n    React.ComponentProps<typeof Measurements>['children']\n  >[0]['measurements']\n) =>\n  Object.fromEntries(\n    Object.keys(measurements).map(key => [\n      key,\n      {\n        ...measurements[key],\n        kind: FieldKind.MEASUREMENT,\n      },\n    ])\n  );\n\nconst getSpanTags = () => {\n  return Object.fromEntries(\n    SPAN_OP_BREAKDOWN_FIELDS.map(key => [key, {key, name: key, kind: FieldKind.METRICS}])\n  );\n};\n\nconst getSemverTags = () =>\n  Object.fromEntries(\n    Object.keys(SEMVER_TAGS).map(key => [\n      key,\n      {\n        ...SEMVER_TAGS[key],\n        kind: FieldKind.FIELD,\n      },\n    ])\n  );\n\nexport type SearchBarProps = Omit<React.ComponentProps<typeof SmartSearchBar>, 'tags'> & {\n  organization: Organization;\n  tags: TagCollection;\n  fields?: Readonly<Field[]>;\n  includeSessionTagsValues?: boolean;\n  /**\n   * Used to define the max height of the menu in px.\n   */\n  maxMenuHeight?: number;\n  maxSearchItems?: React.ComponentProps<typeof SmartSearchBar>['maxSearchItems'];\n  omitTags?: string[];\n  projectIds?: number[] | Readonly<number[]>;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {\n    maxSearchItems,\n    organization,\n    tags,\n    omitTags,\n    fields,\n    projectIds,\n    includeSessionTagsValues,\n    maxMenuHeight,\n  } = props;\n\n  const api = useApi();\n\n  useEffect(() => {\n    // Clear memoized data on mount to make tests more consistent.\n    getEventFieldValues.cache.clear?.();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectIds]);\n\n  // Returns array of tag values that substring match `query`; invokes `callback`\n  // with data when ready\n  const getEventFieldValues = memoize(\n    (tag, query, endpointParams): Promise<string[]> => {\n      const projectIdStrings = (projectIds as Readonly<number>[])?.map(String);\n\n      if (isAggregateField(tag.key) || isMeasurement(tag.key)) {\n        // We can't really auto suggest values for aggregate fields\n        // or measurements, so we simply don't\n        return Promise.resolve([]);\n      }\n\n      return fetchTagValues(\n        api,\n        organization.slug,\n        tag.key,\n        query,\n        projectIdStrings,\n        endpointParams,\n\n        // allows searching for tags on transactions as well\n        true,\n\n        // allows searching for tags on sessions as well\n        includeSessionTagsValues\n      ).then(\n        results =>\n          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),\n        () => {\n          throw new Error('Unable to fetch event field values');\n        }\n      );\n    },\n    ({key}, query) => `${key}-${query}`\n  );\n\n  const getTagList = (\n    measurements: Parameters<\n      React.ComponentProps<typeof Measurements>['children']\n    >[0]['measurements']\n  ) => {\n    const functionTags = getFunctionTags(fields ?? []);\n    const fieldTags = getFieldTags();\n    const measurementsWithKind = getMeasurementTags(measurements);\n    const spanTags = getSpanTags();\n    const semverTags = getSemverTags();\n\n    const orgHasPerformanceView = organization.features.includes('performance-view');\n\n    const combinedTags: Record<string, Tag> = orgHasPerformanceView\n      ? Object.assign({}, measurementsWithKind, spanTags, fieldTags, functionTags)\n      : omit(fieldTags, TRACING_FIELDS);\n\n    const tagsWithKind = Object.fromEntries(\n      Object.keys(tags).map(key => [\n        key,\n        {\n          ...tags[key],\n          kind: FieldKind.TAG,\n        },\n      ])\n    );\n\n    assign(combinedTags, tagsWithKind, fieldTags, semverTags);\n\n    const sortedTagKeys = Object.keys(combinedTags);\n    sortedTagKeys.sort((a, b) => {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n\n    combinedTags.has = {\n      key: FieldKey.HAS,\n      name: 'Has property',\n      values: sortedTagKeys,\n      predefined: true,\n      kind: FieldKind.FIELD,\n    };\n\n    return omit(combinedTags, omitTags ?? []);\n  };\n\n  return (\n    <Measurements>\n      {({measurements}) => (\n        <SmartSearchBar\n          hasRecentSearches\n          savedSearchType={SavedSearchType.EVENT}\n          onGetTagValues={getEventFieldValues}\n          supportedTags={getTagList(measurements)}\n          prepareQuery={query => {\n            // Prepare query string (e.g. strip special characters like negation operator)\n            return query.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n          }}\n          maxSearchItems={maxSearchItems}\n          excludeEnvironment\n          maxMenuHeight={maxMenuHeight ?? 300}\n          {...props}\n        />\n      )}\n    </Measurements>\n  );\n}\n\nexport default withTags(SearchBar);\n","import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {VitalsKey} from './types';\n\nexport const VITALS_TYPES = ['FCP', 'LCP', 'appStartCold', 'appStartWarm'] as const;\n\n// these are industry standards determined by Google (https://web.dev/defining-core-web-vitals-thresholds/)\nexport const INDUSTRY_STANDARDS: Record<VitalsKey, number> = {\n  LCP: 2500,\n  FCP: 1800,\n  appStartCold: 5000,\n  appStartWarm: 2000,\n};\n\n// these were determined using a Looker query and might change over time\nexport const SENTRY_CUSTOMERS: Record<VitalsKey, number> = {\n  LCP: 948,\n  FCP: 760,\n  appStartCold: 2260,\n  appStartWarm: 1900,\n};\n\n// an organization must have at least this many transactions\n// of the vital we want to show\nexport const MIN_VITAL_COUNT_FOR_DISPLAY = 100;\n","import {Fragment} from 'react';\n\nimport {\n  MOBILE_VITAL_DETAILS,\n  WEB_VITAL_DETAILS,\n} from 'sentry/utils/performance/vitals/constants';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nimport {MobileVital, WebVital} from '../fields';\n\nexport type Measurement = {\n  key: string;\n  name: string;\n};\n\nexport type MeasurementCollection = Record<string, Measurement>;\n\ntype VitalType = WebVital | MobileVital;\n\nfunction measurementsFromDetails(\n  details: Partial<Record<VitalType, Vital>>\n): MeasurementCollection {\n  return Object.fromEntries(\n    Object.entries(details).map(([key, value]) => {\n      const newValue: Measurement = {\n        name: value.name,\n        key,\n      };\n      return [key, newValue];\n    })\n  );\n}\n\nconst MOBILE_MEASUREMENTS = measurementsFromDetails(MOBILE_VITAL_DETAILS);\nconst WEB_MEASUREMENTS = measurementsFromDetails(WEB_VITAL_DETAILS);\n\nexport function getMeasurements() {\n  return {...WEB_MEASUREMENTS, ...MOBILE_MEASUREMENTS};\n}\n\ntype ChildrenProps = {\n  measurements: MeasurementCollection;\n};\n\ntype Props = {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction Measurements({children}: Props) {\n  const measurements = getMeasurements();\n  return <Fragment>{children({measurements})}</Fragment>;\n}\n\nexport default Measurements;\n","import {EventsMetaType} from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\ntype BaseDataRow = {\n  [key: string]: React.ReactText;\n  count: number;\n  count_unique_user: number;\n  id: string;\n  project: string;\n  team_key_transaction: number;\n  transaction: string;\n};\n\ntype LCPDataRow = BaseDataRow & {\n  compare_numeric_aggregate_p75_measurements_lcp_greater_2500: number;\n  compare_numeric_aggregate_p75_measurements_lcp_greater_4000: number;\n  p50_measurements_lcp: number;\n  p75_measurements_lcp: number;\n  p95_measurements_lcp: number;\n};\ntype FCPDataRow = BaseDataRow & {\n  compare_numeric_aggregate_p75_measurements_fcp_greater_2500: number;\n  compare_numeric_aggregate_p75_measurements_fcp_greater_4000: number;\n  p50_measurements_fcp: number;\n  p75_measurements_fcp: number;\n  p95_measurements_fcp: number;\n};\ntype CLSDataRow = BaseDataRow & {\n  compare_numeric_aggregate_p75_measurements_cls_greater_2500: number;\n  compare_numeric_aggregate_p75_measurements_cls_greater_4000: number;\n  p50_measurements_cls: number;\n  p75_measurements_cls: number;\n  p95_measurements_cls: number;\n};\ntype FIDDataRow = BaseDataRow & {\n  compare_numeric_aggregate_p75_measurements_fid_greater_2500: number;\n  compare_numeric_aggregate_p75_measurements_fid_greater_4000: number;\n  p50_measurements_fid: number;\n  p75_measurements_fid: number;\n  p95_measurements_fid: number;\n};\n\n// TODO(perf): Fix if/once we can send column aliases along with a request\nexport type TableDataRow = LCPDataRow | FCPDataRow | CLSDataRow | FIDDataRow;\n\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: EventsMetaType;\n};\n\ntype ChildrenProps = Omit<GenericChildrenProps<TableData>, 'tableData'> & {\n  tableData: TableData | null;\n};\n\ntype QueryProps = DiscoverQueryProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction VitalsCardsDiscoverQuery(props: QueryProps) {\n  return <GenericDiscoverQuery<TableData, QueryProps> route=\"events\" {...props} />;\n}\n\nexport default withApi(VitalsCardsDiscoverQuery);\n","import {Component} from 'react';\n\nimport TagStore from 'sentry/stores/tagStore';\nimport {TagCollection} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedTagsProps = {\n  tags: TagCollection;\n};\n\ntype State = {\n  tags: TagCollection;\n};\n\n/**\n * HOC for getting *only* tags from the TagStore.\n */\nfunction withTags<P extends InjectedTagsProps>(WrappedComponent: React.ComponentType<P>) {\n  class WithTags extends Component<Omit<P, keyof InjectedTagsProps>, State> {\n    static displayName = `withTags(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      tags: TagStore.getStateTags(),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = TagStore.listen(\n      (tags: TagCollection) => this.setState({tags}),\n      undefined\n    );\n\n    render() {\n      const {tags, ...props} = this.props as P;\n      return <WrappedComponent {...({tags: tags ?? this.state.tags, ...props} as P)} />;\n    }\n  }\n\n  return WithTags;\n}\n\nexport default withTags;\n","import {t} from 'sentry/locale';\nimport {MEPAlertsQueryType} from 'sentry/views/alerts/wizard/options';\nimport type {SchemaFormConfig} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\n\nimport type {Incident} from '../../types';\n\nexport enum AlertRuleThresholdType {\n  ABOVE,\n  BELOW,\n}\n\nexport enum AlertRuleTriggerType {\n  CRITICAL = 'critical',\n  WARNING = 'warning',\n  RESOLVE = 'resolve',\n}\n\nexport enum AlertRuleComparisonType {\n  COUNT = 'count',\n  CHANGE = 'change',\n  PERCENT = 'percent',\n}\n\nexport enum Dataset {\n  ERRORS = 'events',\n  TRANSACTIONS = 'transactions',\n  /** Also used for performance alerts **/\n  GENERIC_METRICS = 'generic_metrics',\n  SESSIONS = 'sessions',\n  /** Also used for crash free alerts */\n  METRICS = 'metrics',\n}\n\nexport enum EventTypes {\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n  USER = 'user',\n  SESSION = 'session',\n}\n\nexport enum Datasource {\n  ERROR_DEFAULT = 'error_default',\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n}\n\n/**\n * This is not a real aggregate as crash-free sessions/users can be only calculated on frontend by comparing the count of sessions broken down by status\n * It is here nevertheless to shoehorn sessions dataset into existing alerts codebase\n * This will most likely be revised as we introduce the metrics dataset\n */\nexport enum SessionsAggregate {\n  CRASH_FREE_SESSIONS = 'percentage(sessions_crashed, sessions) AS _crash_rate_alert_aggregate',\n  CRASH_FREE_USERS = 'percentage(users_crashed, users) AS _crash_rate_alert_aggregate',\n}\n\nexport type UnsavedTrigger = {\n  actions: Action[];\n  alertThreshold: number | '' | null;\n  label: AlertRuleTriggerType;\n  // UnsavedTrigger can be a part of an Unsaved Alert Rule that does not have an\n  // id yet\n  alertRuleId?: string;\n};\n\nexport type ThresholdControlValue = {\n  /**\n   * Resolve threshold is optional, so it can be null\n   */\n  threshold: number | '' | null;\n  thresholdType: AlertRuleThresholdType;\n};\n\ntype SavedTrigger = Omit<UnsavedTrigger, 'actions'> & {\n  actions: Action[];\n  dateCreated: string;\n  id: string;\n};\n\nexport type Trigger = Partial<SavedTrigger> & UnsavedTrigger;\n\nexport type UnsavedMetricRule = {\n  aggregate: string;\n  dataset: Dataset;\n  environment: string | null;\n  projects: string[];\n  query: string;\n  resolveThreshold: number | '' | null;\n  thresholdPeriod: number | null;\n  thresholdType: AlertRuleThresholdType;\n  timeWindow: TimeWindow;\n  triggers: Trigger[];\n  comparisonDelta?: number | null;\n  eventTypes?: EventTypes[];\n  owner?: string | null;\n  queryType?: MEPAlertsQueryType | null;\n};\n\nexport interface SavedMetricRule extends UnsavedMetricRule {\n  dateCreated: string;\n  dateModified: string;\n  id: string;\n  name: string;\n  status: number;\n  createdBy?: {email: string; id: number; name: string} | null;\n  errors?: {detail: string}[];\n  /**\n   * Returned with the expand=latestIncident query parameter\n   */\n  latestIncident?: Incident | null;\n  originalAlertRuleId?: number | null;\n}\n\nexport type MetricRule = Partial<SavedMetricRule> & UnsavedMetricRule;\n\nexport enum TimePeriod {\n  SIX_HOURS = '6h',\n  ONE_DAY = '1d',\n  THREE_DAYS = '3d',\n  // Seven days is actually 10080m but we have a max of 10000 events\n  SEVEN_DAYS = '10000m',\n  FOURTEEN_DAYS = '14d',\n  THIRTY_DAYS = '30d',\n}\n\nexport enum TimeWindow {\n  ONE_MINUTE = 1,\n  FIVE_MINUTES = 5,\n  TEN_MINUTES = 10,\n  FIFTEEN_MINUTES = 15,\n  THIRTY_MINUTES = 30,\n  ONE_HOUR = 60,\n  TWO_HOURS = 120,\n  FOUR_HOURS = 240,\n  ONE_DAY = 1440,\n}\n\nexport enum ActionType {\n  EMAIL = 'email',\n  SLACK = 'slack',\n  PAGERDUTY = 'pagerduty',\n  MSTEAMS = 'msteams',\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const ActionLabel = {\n  // \\u200B is needed because Safari disregards autocomplete=\"off\". It's seeing \"Email\" and\n  // opening up the browser autocomplete for email. https://github.com/JedWatson/react-select/issues/3500\n  [ActionType.EMAIL]: t('Emai\\u200Bl'),\n  [ActionType.SLACK]: t('Slack'),\n  [ActionType.PAGERDUTY]: t('Pagerduty'),\n  [ActionType.MSTEAMS]: t('MS Teams'),\n  [ActionType.SENTRY_APP]: t('Notification'),\n};\n\nexport enum TargetType {\n  // A direct reference, like an email address, Slack channel, or PagerDuty service\n  SPECIFIC = 'specific',\n\n  // A specific user. This could be used to grab the user's email address.\n  USER = 'user',\n\n  // A specific team. This could be used to send an email to everyone associated with a team.\n  TEAM = 'team',\n\n  // A Sentry App instead of any of the above.\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const TargetLabel = {\n  [TargetType.USER]: t('Member'),\n  [TargetType.TEAM]: t('Team'),\n};\n\n/**\n * This is an available action template that is associated to a Trigger in a\n * Metric Alert Rule. They are defined by the available-actions API.\n */\nexport type MetricActionTemplate = {\n  /**\n   * See `TargetType`\n   */\n  allowedTargetTypes: TargetType[];\n\n  /**\n   * The integration type e.g. 'email'\n   */\n  type: ActionType;\n\n  /**\n   * Integration id for this `type`, should be passed to backend as `integrationId` when creating an action\n   */\n  integrationId?: number;\n\n  /**\n   * Name of the integration. This is a text field that differentiates integrations from the same provider from each other\n   */\n  integrationName?: string;\n\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options?: Array<{label: string; value: any}>;\n\n  /**\n   * SentryApp id for this `type`, should be passed to backend as `sentryAppId` when creating an action.\n   */\n  sentryAppId?: number;\n\n  sentryAppInstallationUuid?: string;\n  /**\n   * Name of the SentryApp. Like `integrationName`, this differentiates SentryApps from each other.\n   */\n  sentryAppName?: string;\n\n  /**\n   * Sentry App Alert Rule UI Component settings\n   */\n  settings?: SchemaFormConfig;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n\n/**\n * This is the user's configured action\n */\nexport type Action = UnsavedAction & Partial<SavedActionFields>;\n\ntype SavedActionFields = {\n  /**\n   * The id of the alert rule this action belongs to\n   */\n  alertRuleTriggerId: string;\n\n  /**\n   * date created\n   */\n  dateCreated: string;\n\n  /**\n   * A human readable description of the action generated by server\n   */\n  desc: string;\n\n  /**\n   * model id of the action\n   */\n  id: string;\n\n  /**\n   *  Could not fetch details from SentryApp. Show the rule but make it disabled.\n   */\n  disabled?: boolean;\n};\n\ntype UnsavedAction = {\n  /**\n   * An optional Slack channel or user id the user can input to avoid rate limiting issues.\n   */\n  inputChannelId: string | null;\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options: Array<{label: string; value: any}> | null;\n  /**\n   * How to identify the target. Can be email, slack channel, pagerduty service,\n   * user_id, team_id, SentryApp id, etc\n   */\n  targetIdentifier: string | null;\n\n  targetType: TargetType | null;\n\n  type: ActionType;\n  /** Used to maintain order of unsaved actions */\n  unsavedDateCreated: string;\n  unsavedId: string;\n\n  /**\n   * The id of the integration, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  integrationId?: number | null;\n\n  /**\n   * The id of the SentryApp, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  sentryAppId?: number | null;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n","import {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {\n  Dataset,\n  EventTypes,\n  SessionsAggregate,\n} from 'sentry/views/alerts/rules/metric/types';\n\nexport type AlertType =\n  | 'issues'\n  | 'num_errors'\n  | 'users_experiencing_errors'\n  | 'throughput'\n  | 'trans_duration'\n  | 'apdex'\n  | 'failure_rate'\n  | 'lcp'\n  | 'fid'\n  | 'cls'\n  | 'custom'\n  | 'crash_free_sessions'\n  | 'crash_free_users';\n\nexport enum MEPAlertsQueryType {\n  ERROR = 0,\n  PERFORMANCE = 1,\n  CRASH_RATE = 2,\n}\n\nexport enum MEPAlertsDataset {\n  DISCOVER = 'discover',\n  METRICS = 'metrics',\n  METRICS_ENHANCED = 'metricsEnhanced',\n}\n\nexport type MetricAlertType = Exclude<AlertType, 'issues'>;\n\nexport const DatasetMEPAlertQueryTypes: Record<Dataset, MEPAlertsQueryType> = {\n  [Dataset.ERRORS]: MEPAlertsQueryType.ERROR,\n  [Dataset.TRANSACTIONS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.GENERIC_METRICS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.METRICS]: MEPAlertsQueryType.CRASH_RATE,\n  [Dataset.SESSIONS]: MEPAlertsQueryType.CRASH_RATE,\n};\n\nexport const AlertWizardAlertNames: Record<AlertType, string> = {\n  issues: t('Issues'),\n  num_errors: t('Number of Errors'),\n  users_experiencing_errors: t('Users Experiencing Errors'),\n  throughput: t('Throughput'),\n  trans_duration: t('Transaction Duration'),\n  apdex: t('Apdex'),\n  failure_rate: t('Failure Rate'),\n  lcp: t('Largest Contentful Paint'),\n  fid: t('First Input Delay'),\n  cls: t('Cumulative Layout Shift'),\n  custom: t('Custom Metric'),\n  crash_free_sessions: t('Crash Free Session Rate'),\n  crash_free_users: t('Crash Free User Rate'),\n};\n\ntype AlertWizardCategory = {\n  categoryHeading: string;\n  options: AlertType[];\n};\nexport const getAlertWizardCategories = (org: Organization): AlertWizardCategory[] => [\n  {\n    categoryHeading: t('Errors'),\n    options: ['issues', 'num_errors', 'users_experiencing_errors'],\n  },\n  ...(org.features.includes('crash-rate-alerts')\n    ? [\n        {\n          categoryHeading: t('Sessions'),\n          options: ['crash_free_sessions', 'crash_free_users'] as AlertType[],\n        },\n      ]\n    : []),\n  {\n    categoryHeading: t('Performance'),\n    options: [\n      'throughput',\n      'trans_duration',\n      'apdex',\n      'failure_rate',\n      'lcp',\n      'fid',\n      'cls',\n    ],\n  },\n  {\n    categoryHeading: t('Other'),\n    options: ['custom'],\n  },\n];\n\nexport type WizardRuleTemplate = {\n  aggregate: string;\n  dataset: Dataset;\n  eventTypes: EventTypes;\n};\n\nexport const AlertWizardRuleTemplates: Record<\n  MetricAlertType,\n  Readonly<WizardRuleTemplate>\n> = {\n  num_errors: {\n    aggregate: 'count()',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  users_experiencing_errors: {\n    aggregate: 'count_unique(user)',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  throughput: {\n    aggregate: 'count()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  trans_duration: {\n    aggregate: 'p95(transaction.duration)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  apdex: {\n    aggregate: 'apdex(300)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  failure_rate: {\n    aggregate: 'failure_rate()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  lcp: {\n    aggregate: 'p95(measurements.lcp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  fid: {\n    aggregate: 'p95(measurements.fid)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  cls: {\n    aggregate: 'p95(measurements.cls)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  custom: {\n    aggregate: 'p95(measurements.fp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  crash_free_sessions: {\n    aggregate: SessionsAggregate.CRASH_FREE_SESSIONS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.SESSION,\n  },\n  crash_free_users: {\n    aggregate: SessionsAggregate.CRASH_FREE_USERS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.USER,\n  },\n};\n\nexport const DEFAULT_WIZARD_TEMPLATE = AlertWizardRuleTemplates.num_errors;\n\nexport const hidePrimarySelectorSet = new Set<AlertType>([\n  'num_errors',\n  'users_experiencing_errors',\n  'throughput',\n  'apdex',\n  'failure_rate',\n  'crash_free_sessions',\n  'crash_free_users',\n]);\n\nexport const hideParameterSelectorSet = new Set<AlertType>([\n  'trans_duration',\n  'lcp',\n  'fid',\n  'cls',\n]);\n\nexport function getMEPAlertsDataset(\n  dataset: Dataset,\n  newAlert: boolean\n): MEPAlertsDataset {\n  // Dataset.ERRORS overrides all cases\n  if (dataset === Dataset.ERRORS) {\n    return MEPAlertsDataset.DISCOVER;\n  }\n\n  if (newAlert) {\n    return MEPAlertsDataset.METRICS_ENHANCED;\n  }\n\n  if (dataset === Dataset.GENERIC_METRICS) {\n    return MEPAlertsDataset.METRICS;\n  }\n\n  return MEPAlertsDataset.DISCOVER;\n}\n","import {Component} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {loadOrganizationTags} from 'sentry/actionCreators/tags';\nimport {Client} from 'sentry/api';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {WebVital} from 'sentry/utils/fields';\nimport {PerformanceEventViewProvider} from 'sentry/utils/performance/contexts/performanceEventViewContext';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport {generatePerformanceVitalDetailView} from '../data';\nimport {\n  addRoutePerformanceContext,\n  getSelectedProjectPlatforms,\n  getTransactionName,\n} from '../utils';\n\nimport VitalDetailContent from './vitalDetailContent';\n\ntype Props = RouteComponentProps<{}, {}> & {\n  api: Client;\n  loadingProjects: boolean;\n  organization: Organization;\n  projects: Project[];\n  selection: PageFilters;\n};\n\ntype State = {\n  eventView: EventView;\n};\n\nclass VitalDetail extends Component<Props, State> {\n  state: State = {\n    eventView: generatePerformanceVitalDetailView(this.props.location),\n  };\n\n  static getDerivedStateFromProps(nextProps: Readonly<Props>, prevState: State): State {\n    return {\n      ...prevState,\n      eventView: generatePerformanceVitalDetailView(nextProps.location),\n    };\n  }\n\n  componentDidMount() {\n    const {api, organization, selection, location, projects} = this.props;\n    loadOrganizationTags(api, organization.slug, selection);\n    addRoutePerformanceContext(selection);\n\n    trackAdvancedAnalyticsEvent('performance_views.vital_detail.view', {\n      organization,\n      project_platforms: getSelectedProjectPlatforms(location, projects),\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {api, organization, selection} = this.props;\n\n    if (\n      !isEqual(prevProps.selection.projects, selection.projects) ||\n      !isEqual(prevProps.selection.datetime, selection.datetime)\n    ) {\n      loadOrganizationTags(api, organization.slug, selection);\n      addRoutePerformanceContext(selection);\n    }\n  }\n\n  getDocumentTitle(): string {\n    const name = getTransactionName(this.props.location);\n\n    const hasTransactionName = typeof name === 'string' && String(name).trim().length > 0;\n\n    if (hasTransactionName) {\n      return [String(name).trim(), t('Performance')].join(' - ');\n    }\n\n    return [t('Vital Detail'), t('Performance')].join(' - ');\n  }\n\n  render() {\n    const {organization, location, router, api} = this.props;\n    const {eventView} = this.state;\n    if (!eventView) {\n      browserHistory.replace({\n        pathname: `/organizations/${organization.slug}/performance/`,\n        query: {\n          ...location.query,\n        },\n      });\n      return null;\n    }\n\n    const vitalNameQuery = decodeScalar(location.query.vitalName);\n    const vitalName =\n      Object.values(WebVital).indexOf(vitalNameQuery as WebVital) === -1\n        ? undefined\n        : (vitalNameQuery as WebVital);\n\n    return (\n      <SentryDocumentTitle title={this.getDocumentTitle()} orgSlug={organization.slug}>\n        <PerformanceEventViewProvider value={{eventView: this.state.eventView}}>\n          <PageFiltersContainer>\n            <StyledPageContent>\n              <NoProjectMessage organization={organization}>\n                <VitalDetailContent\n                  location={location}\n                  organization={organization}\n                  eventView={eventView}\n                  router={router}\n                  vitalName={vitalName || WebVital.LCP}\n                  api={api}\n                />\n              </NoProjectMessage>\n            </StyledPageContent>\n          </PageFiltersContainer>\n        </PerformanceEventViewProvider>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nexport default withApi(withPageFilters(withProjects(withOrganization(VitalDetail))));\n","import {Component, Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location, LocationDescriptorObject} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumn,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport Pagination from 'sentry/components/pagination';\nimport Tag from 'sentry/components/tag';\nimport {IconStar} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView, {\n  EventData,\n  EventsMetaType,\n  isFieldSortable,\n} from 'sentry/utils/discover/eventView';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {fieldAlignment, getAggregateAlias, Sort} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport VitalsDetailsTableQuery, {\n  TableData,\n  TableDataRow,\n} from 'sentry/utils/performance/vitals/vitalsDetailsTableQuery';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport CellAction, {Actions, updateQuery} from 'sentry/views/eventsV2/table/cellAction';\nimport {TableColumn} from 'sentry/views/eventsV2/table/types';\n\nimport {DisplayModes} from '../transactionSummary/transactionOverview/charts';\nimport {\n  normalizeSearchConditionsWithTransactionName,\n  TransactionFilterOptions,\n  transactionSummaryRouteWithQuery,\n} from '../transactionSummary/utils';\nimport {getSelectedProjectPlatforms} from '../utils';\n\nimport {\n  getVitalDetailTableMehStatusFunction,\n  getVitalDetailTablePoorStatusFunction,\n  vitalAbbreviations,\n  vitalNameFromLocation,\n  VitalState,\n  vitalStateColors,\n} from './utils';\n\nconst COLUMN_TITLES = ['Transaction', 'Project', 'Unique Users', 'Count'];\n\nconst getTableColumnTitle = (index: number, vitalName: WebVital) => {\n  const abbrev = vitalAbbreviations[vitalName];\n  const titles = [\n    ...COLUMN_TITLES,\n    `p50(${abbrev})`,\n    `p75(${abbrev})`,\n    `p95(${abbrev})`,\n    `Status`,\n  ];\n  return titles[index];\n};\n\nexport function getProjectID(\n  eventData: EventData,\n  projects: Project[]\n): string | undefined {\n  const projectSlug = (eventData?.project as string) || undefined;\n\n  if (typeof projectSlug === undefined) {\n    return undefined;\n  }\n\n  const project = projects.find(currentProject => currentProject.slug === projectSlug);\n\n  if (!project) {\n    return undefined;\n  }\n\n  return project.id;\n}\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  setError: (msg: string | undefined) => void;\n\n  summaryConditions: string;\n};\n\ntype State = {\n  widths: number[];\n};\n\nclass Table extends Component<Props, State> {\n  state: State = {\n    widths: [],\n  };\n\n  handleCellAction = (column: TableColumn<keyof TableDataRow>) => {\n    return (action: Actions, value: React.ReactText) => {\n      const {eventView, location, organization} = this.props;\n\n      trackAnalyticsEvent({\n        eventKey: 'performance_views.overview.cellaction',\n        eventName: 'Performance Views: Cell Action Clicked',\n        organization_id: parseInt(organization.id, 10),\n        action,\n      });\n\n      const searchConditions = normalizeSearchConditionsWithTransactionName(\n        eventView.query\n      );\n\n      updateQuery(searchConditions, action, column, value);\n\n      browserHistory.push({\n        pathname: location.pathname,\n        query: {\n          ...location.query,\n          cursor: undefined,\n          query: searchConditions.formatString(),\n        },\n      });\n    };\n  };\n\n  renderBodyCell(\n    tableData: TableData | null,\n    column: TableColumn<keyof TableDataRow>,\n    dataRow: TableDataRow,\n    vitalName: WebVital\n  ): React.ReactNode {\n    const {eventView, organization, projects, location, summaryConditions} = this.props;\n\n    if (!tableData || !tableData.meta?.fields) {\n      return dataRow[column.key];\n    }\n    const tableMeta = tableData.meta?.fields;\n\n    const field = String(column.key);\n\n    if (field === getVitalDetailTablePoorStatusFunction(vitalName)) {\n      if (dataRow[field]) {\n        return (\n          <UniqueTagCell>\n            <PoorTag>{t('Poor')}</PoorTag>\n          </UniqueTagCell>\n        );\n      }\n      if (dataRow[getVitalDetailTableMehStatusFunction(vitalName)]) {\n        return (\n          <UniqueTagCell>\n            <MehTag>{t('Meh')}</MehTag>\n          </UniqueTagCell>\n        );\n      }\n      return (\n        <UniqueTagCell>\n          <GoodTag>{t('Good')}</GoodTag>\n        </UniqueTagCell>\n      );\n    }\n\n    const fieldRenderer = getFieldRenderer(field, tableMeta, false);\n    const rendered = fieldRenderer(dataRow, {organization, location});\n\n    const allowActions = [\n      Actions.ADD,\n      Actions.EXCLUDE,\n      Actions.SHOW_GREATER_THAN,\n      Actions.SHOW_LESS_THAN,\n    ];\n\n    if (field === 'transaction') {\n      const projectID = getProjectID(dataRow, projects);\n      const summaryView = eventView.clone();\n      const conditions = new MutableSearch(summaryConditions);\n      conditions.addFilterValues('has', [`${vitalName}`]);\n      summaryView.query = conditions.formatString();\n\n      const transaction = String(dataRow.transaction) || '';\n\n      const target = transactionSummaryRouteWithQuery({\n        orgSlug: organization.slug,\n        transaction,\n        query: summaryView.generateQueryStringObject(),\n        projectID,\n        showTransactions: TransactionFilterOptions.RECENT,\n        display: DisplayModes.VITALS,\n      });\n\n      return (\n        <CellAction\n          column={column}\n          dataRow={dataRow}\n          handleCellAction={this.handleCellAction(column)}\n          allowActions={allowActions}\n        >\n          <Link\n            to={target}\n            aria-label={t('See transaction summary of the transaction %s', transaction)}\n            onClick={this.handleSummaryClick}\n          >\n            {rendered}\n          </Link>\n        </CellAction>\n      );\n    }\n\n    if (field.startsWith('team_key_transaction')) {\n      return rendered;\n    }\n\n    return (\n      <CellAction\n        column={column}\n        dataRow={dataRow}\n        handleCellAction={this.handleCellAction(column)}\n        allowActions={allowActions}\n      >\n        {rendered}\n      </CellAction>\n    );\n  }\n\n  renderBodyCellWithData = (tableData: TableData | null, vitalName: WebVital) => {\n    return (\n      column: TableColumn<keyof TableDataRow>,\n      dataRow: TableDataRow\n    ): React.ReactNode => this.renderBodyCell(tableData, column, dataRow, vitalName);\n  };\n\n  renderHeadCell(\n    column: TableColumn<keyof TableDataRow>,\n    title: React.ReactNode,\n    tableMeta?: EventsMetaType['fields']\n  ): React.ReactNode {\n    const {eventView, location} = this.props;\n    // TODO: Need to map table meta keys to aggregate alias since eventView sorting still expects\n    // aggregate aliases for now. We'll need to refactor event view to get rid of all aggregate\n    // alias references and then we can remove this.\n    const aggregateAliasTableMeta: EventsMetaType['fields'] | undefined = tableMeta\n      ? {}\n      : undefined;\n    if (tableMeta) {\n      Object.keys(tableMeta).forEach(key => {\n        aggregateAliasTableMeta![getAggregateAlias(key)] = tableMeta[key];\n      });\n    }\n\n    const align = fieldAlignment(column.name, column.type, aggregateAliasTableMeta);\n    const field = {field: column.name, width: column.width};\n\n    function generateSortLink(): LocationDescriptorObject | undefined {\n      if (!aggregateAliasTableMeta) {\n        return undefined;\n      }\n\n      const nextEventView = eventView.sortOnField(field, aggregateAliasTableMeta);\n      const queryStringObject = nextEventView.generateQueryStringObject();\n\n      return {\n        ...location,\n        query: {...location.query, sort: queryStringObject.sort},\n      };\n    }\n    const currentSort = eventView.sortForField(field, aggregateAliasTableMeta);\n    const canSort = isFieldSortable(field, aggregateAliasTableMeta);\n\n    return (\n      <SortLink\n        align={align}\n        title={title || field.field}\n        direction={currentSort ? currentSort.kind : undefined}\n        canSort={canSort}\n        generateSortLink={generateSortLink}\n      />\n    );\n  }\n\n  renderHeadCellWithMeta = (\n    vitalName: WebVital,\n    tableMeta?: EventsMetaType['fields']\n  ) => {\n    return (column: TableColumn<keyof TableDataRow>, index: number): React.ReactNode =>\n      this.renderHeadCell(column, getTableColumnTitle(index, vitalName), tableMeta);\n  };\n\n  renderPrependCellWithData = (tableData: TableData | null, vitalName: WebVital) => {\n    const {eventView} = this.props;\n    const teamKeyTransactionColumn = eventView\n      .getColumns()\n      .find((col: TableColumn<React.ReactText>) => col.name === 'team_key_transaction');\n    return (isHeader: boolean, dataRow?: any) => {\n      if (teamKeyTransactionColumn) {\n        if (isHeader) {\n          const star = (\n            <IconStar\n              key=\"keyTransaction\"\n              color=\"yellow300\"\n              isSolid\n              data-test-id=\"key-transaction-header\"\n            />\n          );\n          return [\n            this.renderHeadCell(teamKeyTransactionColumn, star, tableData?.meta?.fields),\n          ];\n        }\n        return [\n          this.renderBodyCell(tableData, teamKeyTransactionColumn, dataRow, vitalName),\n        ];\n      }\n      return [];\n    };\n  };\n\n  handleSummaryClick = () => {\n    const {organization, projects, location} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.overview.navigate.summary',\n      eventName: 'Performance Views: Overview view summary',\n      organization_id: parseInt(organization.id, 10),\n      project_platforms: getSelectedProjectPlatforms(location, projects),\n    });\n  };\n\n  handleResizeColumn = (columnIndex: number, nextColumn: GridColumn) => {\n    const widths: number[] = [...this.state.widths];\n    widths[columnIndex] = nextColumn.width\n      ? Number(nextColumn.width)\n      : COL_WIDTH_UNDEFINED;\n    this.setState({widths});\n  };\n\n  getSortedEventView(vitalName: WebVital) {\n    const {eventView} = this.props;\n\n    const aggregateFieldPoor = getAggregateAlias(\n      getVitalDetailTablePoorStatusFunction(vitalName)\n    );\n    const aggregateFieldMeh = getAggregateAlias(\n      getVitalDetailTableMehStatusFunction(vitalName)\n    );\n    const isSortingByStatus = eventView.sorts.some(\n      sort =>\n        sort.field.includes(aggregateFieldPoor) || sort.field.includes(aggregateFieldMeh)\n    );\n\n    const additionalSorts: Sort[] = isSortingByStatus\n      ? []\n      : [\n          {\n            field: 'team_key_transaction',\n            kind: 'desc',\n          },\n          {\n            field: aggregateFieldPoor,\n            kind: 'desc',\n          },\n          {\n            field: aggregateFieldMeh,\n            kind: 'desc',\n          },\n        ];\n\n    return eventView.withSorts([...additionalSorts, ...eventView.sorts]);\n  }\n\n  render() {\n    const {eventView, organization, location} = this.props;\n    const {widths} = this.state;\n\n    const fakeColumnView = eventView.clone();\n    fakeColumnView.fields = [...eventView.fields];\n    const columnOrder = fakeColumnView\n      .getColumns()\n      // remove key_transactions from the column order as we'll be rendering it\n      // via a prepended column\n      .filter((col: TableColumn<React.ReactText>) => col.name !== 'team_key_transaction')\n      .slice(0, -1)\n      .map((col: TableColumn<React.ReactText>, i: number) => {\n        if (typeof widths[i] === 'number') {\n          return {...col, width: widths[i]};\n        }\n        return col;\n      });\n\n    const vitalName = vitalNameFromLocation(location);\n    const sortedEventView = this.getSortedEventView(vitalName);\n    const columnSortBy = sortedEventView.getSorts();\n\n    return (\n      <div>\n        <VitalsDetailsTableQuery\n          eventView={sortedEventView}\n          orgSlug={organization.slug}\n          location={location}\n          limit={10}\n          referrer=\"api.performance.vital-detail\"\n        >\n          {({pageLinks, isLoading, tableData}) => (\n            <Fragment>\n              <GridEditable\n                isLoading={isLoading}\n                data={tableData ? tableData.data : []}\n                columnOrder={columnOrder}\n                columnSortBy={columnSortBy}\n                grid={{\n                  onResizeColumn: this.handleResizeColumn,\n                  renderHeadCell: this.renderHeadCellWithMeta(\n                    vitalName,\n                    tableData?.meta?.fields\n                  ) as any,\n                  renderBodyCell: this.renderBodyCellWithData(\n                    tableData,\n                    vitalName\n                  ) as any,\n                  renderPrependColumns: this.renderPrependCellWithData(\n                    tableData,\n                    vitalName\n                  ) as any,\n                  prependColumnWidths: ['max-content'],\n                }}\n                location={location}\n              />\n              <Pagination pageLinks={pageLinks} />\n            </Fragment>\n          )}\n        </VitalsDetailsTableQuery>\n      </div>\n    );\n  }\n}\n\nconst UniqueTagCell = styled('div')`\n  text-align: right;\n  justify-self: flex-end;\n  flex-grow: 1;\n`;\n\nconst GoodTag = styled(Tag)`\n  div {\n    background-color: ${p => p.theme[vitalStateColors[VitalState.GOOD]]};\n  }\n  span {\n    color: ${p => p.theme.white};\n  }\n`;\n\nconst MehTag = styled(Tag)`\n  div {\n    background-color: ${p => p.theme[vitalStateColors[VitalState.MEH]]};\n  }\n  span {\n    color: ${p => p.theme.white};\n  }\n`;\n\nconst PoorTag = styled(Tag)`\n  div {\n    background-color: ${p => p.theme[vitalStateColors[VitalState.POOR]]};\n  }\n  span {\n    color: ${p => p.theme.white};\n  }\n`;\n\nexport default Table;\n","// eslint-disable-next-line no-restricted-imports\nimport {browserHistory, withRouter, WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\n\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {LineChart, LineChartProps} from 'sentry/components/charts/lineChart';\nimport ReleaseSeries from 'sentry/components/charts/releaseSeries';\nimport {ChartContainer, HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {Panel} from 'sentry/components/panels';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {DateString, OrganizationSummary} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport useApi from 'sentry/utils/useApi';\n\nimport {replaceSeriesName, transformEventStatsSmoothed} from '../trends/utils';\nimport {ViewProps} from '../types';\n\nimport {\n  getMaxOfSeries,\n  getVitalChartDefinitions,\n  getVitalChartTitle,\n  vitalNameFromLocation,\n  VitalState,\n  vitalStateColors,\n} from './utils';\n\ntype Props = WithRouterProps &\n  Omit<ViewProps, 'start' | 'end'> & {\n    end: DateString | null;\n    interval: string;\n    organization: OrganizationSummary;\n    start: DateString | null;\n  };\n\nfunction VitalChart({\n  project,\n  environment,\n  location,\n  organization,\n  query,\n  statsPeriod,\n  router,\n  start,\n  end,\n  interval,\n}: Props) {\n  const api = useApi();\n  const theme = useTheme();\n\n  const vitalName = vitalNameFromLocation(location);\n  const yAxis = `p75(${vitalName})`;\n\n  const {utc, legend, vitalPoor, markLines, chartOptions} = getVitalChartDefinitions({\n    theme,\n    location,\n    yAxis,\n    vital: vitalName,\n  });\n\n  function handleLegendSelectChanged(legendChange: {\n    name: string;\n    selected: Record<string, boolean>;\n    type: string;\n  }) {\n    const {selected} = legendChange;\n    const unselected = Object.keys(selected).filter(key => !selected[key]);\n\n    const to = {\n      ...location,\n      query: {\n        ...location.query,\n        unselectedSeries: unselected,\n      },\n    };\n    browserHistory.push(to);\n  }\n\n  return (\n    <Panel>\n      <ChartContainer>\n        <HeaderTitleLegend>\n          {getVitalChartTitle(vitalName)}\n          <QuestionTooltip\n            size=\"sm\"\n            position=\"top\"\n            title={t(`The durations shown should fall under the vital threshold.`)}\n          />\n        </HeaderTitleLegend>\n        <ChartZoom router={router} period={statsPeriod} start={start} end={end} utc={utc}>\n          {zoomRenderProps => (\n            <EventsRequest\n              api={api}\n              organization={organization}\n              period={statsPeriod}\n              project={project}\n              environment={environment}\n              start={start}\n              end={end}\n              interval={interval}\n              showLoading={false}\n              query={query}\n              includePrevious={false}\n              yAxis={[yAxis]}\n              partial\n            >\n              {({timeseriesData: results, errored, loading, reloading}) => {\n                if (errored) {\n                  return (\n                    <ErrorPanel>\n                      <IconWarning color=\"gray500\" size=\"lg\" />\n                    </ErrorPanel>\n                  );\n                }\n\n                const colors =\n                  (results && theme.charts.getColorPalette(results.length - 2)) || [];\n\n                const {smoothedResults} = transformEventStatsSmoothed(results);\n\n                const smoothedSeries = smoothedResults\n                  ? smoothedResults.map(({seriesName, ...rest}, i: number) => {\n                      return {\n                        seriesName: replaceSeriesName(seriesName) || 'p75',\n                        ...rest,\n                        color: colors[i],\n                        lineStyle: {\n                          opacity: 1,\n                          width: 2,\n                        },\n                      };\n                    })\n                  : [];\n\n                const seriesMax = getMaxOfSeries(smoothedSeries);\n                const yAxisMax = Math.max(seriesMax, vitalPoor);\n                chartOptions.yAxis!.max = yAxisMax * 1.1;\n\n                return (\n                  <ReleaseSeries\n                    start={start}\n                    end={end}\n                    period={statsPeriod}\n                    utc={utc}\n                    projects={project}\n                    environments={environment}\n                  >\n                    {({releaseSeries}) => (\n                      <TransitionChart loading={loading} reloading={reloading}>\n                        <TransparentLoadingMask visible={reloading} />\n                        {getDynamicText({\n                          value: (\n                            <LineChart\n                              {...zoomRenderProps}\n                              {...chartOptions}\n                              legend={legend}\n                              onLegendSelectChanged={handleLegendSelectChanged}\n                              series={[...markLines, ...releaseSeries, ...smoothedSeries]}\n                            />\n                          ),\n                          fixed: 'Web Vitals Chart',\n                        })}\n                      </TransitionChart>\n                    )}\n                  </ReleaseSeries>\n                );\n              }}\n            </EventsRequest>\n          )}\n        </ChartZoom>\n      </ChartContainer>\n    </Panel>\n  );\n}\n\nexport default withRouter(VitalChart);\n\nexport type _VitalChartProps = {\n  field: string;\n  grid: LineChartProps['grid'];\n  loading: boolean;\n  reloading: boolean;\n  data?: Series[];\n  height?: number;\n  utc?: boolean;\n  vitalFields?: {\n    goodCountField: string;\n    mehCountField: string;\n    poorCountField: string;\n  };\n};\n\nfunction fieldToVitalType(\n  seriesName: string,\n  vitalFields: _VitalChartProps['vitalFields']\n): VitalState | undefined {\n  if (seriesName === vitalFields?.poorCountField.replace('equation|', '')) {\n    return VitalState.POOR;\n  }\n  if (seriesName === vitalFields?.mehCountField.replace('equation|', '')) {\n    return VitalState.MEH;\n  }\n  if (seriesName === vitalFields?.goodCountField.replace('equation|', '')) {\n    return VitalState.GOOD;\n  }\n\n  return undefined;\n}\n\nexport function _VitalChart(props: _VitalChartProps) {\n  const {\n    field: yAxis,\n    data: _results,\n    loading,\n    reloading,\n    height,\n    grid,\n    utc,\n    vitalFields,\n  } = props;\n  const theme = useTheme();\n\n  if (!_results || !vitalFields) {\n    return null;\n  }\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    grid,\n    seriesOptions: {\n      showSymbol: false,\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: (value: number, seriesName?: string) => {\n        return tooltipFormatter(\n          value,\n          aggregateOutputType(vitalFields[0] === WebVital.CLS ? seriesName : yAxis)\n        );\n      },\n    },\n    xAxis: {\n      show: false,\n    },\n    xAxes: undefined,\n    yAxis: {\n      axisLabel: {\n        color: theme.chartLabel,\n        showMaxLabel: false,\n        formatter: (value: number) =>\n          axisLabelFormatter(value, aggregateOutputType(yAxis)),\n      },\n    },\n    utc,\n    isGroupedByDate: true,\n    showTimeInTooltip: true,\n  };\n\n  const results = _results.filter(s => !!fieldToVitalType(s.seriesName, vitalFields));\n\n  const smoothedSeries = results?.length\n    ? results.map(({seriesName, ...rest}) => {\n        const adjustedSeries = fieldToVitalType(seriesName, vitalFields) || 'count';\n        return {\n          seriesName: adjustedSeries,\n          ...rest,\n          color: theme[vitalStateColors[adjustedSeries]],\n          lineStyle: {\n            opacity: 1,\n            width: 2,\n          },\n        };\n      })\n    : [];\n\n  return (\n    <div>\n      <TransitionChart loading={loading} reloading={reloading}>\n        <TransparentLoadingMask visible={reloading} />\n        {getDynamicText({\n          value: (\n            <LineChart\n              height={height}\n              {...chartOptions}\n              onLegendSelectChanged={() => {}}\n              series={[...smoothedSeries]}\n              isGroupedByDate\n            />\n          ),\n          fixed: 'Web Vitals Chart',\n        })}\n      </TransitionChart>\n    </div>\n  );\n}\n","import {Fragment, useState} from 'react';\nimport {browserHistory, InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {getInterval} from 'sentry/components/charts/utils';\nimport {CreateAlertFromViewButton} from 'sentry/components/createAlertButton';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport DropdownMenuControl from 'sentry/components/dropdownMenuControl';\nimport {MenuItemProps} from 'sentry/components/dropdownMenuItem';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport * as TeamKeyTransactionManager from 'sentry/components/performance/teamKeyTransactionsManager';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {IconCheckmark, IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {WebVital} from 'sentry/utils/fields';\nimport {Browser} from 'sentry/utils/performance/vitals/constants';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport Teams from 'sentry/utils/teams';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport Breadcrumb from '../breadcrumb';\nimport {getTransactionSearchQuery} from '../utils';\n\nimport Table from './table';\nimport {\n  vitalAbbreviations,\n  vitalAlertTypes,\n  vitalDescription,\n  vitalMap,\n  vitalSupportedBrowsers,\n} from './utils';\nimport VitalChart from './vitalChart';\nimport VitalInfo from './vitalInfo';\nimport VitalsComparison from './vitalsComparison';\n\nconst FRONTEND_VITALS = [WebVital.FCP, WebVital.LCP, WebVital.FID, WebVital.CLS];\n\ntype Props = {\n  api: Client;\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  router: InjectedRouter;\n  vitalName: WebVital;\n};\n\nfunction getSummaryConditions(query: string) {\n  const parsed = new MutableSearch(query);\n  parsed.freeText = [];\n\n  return parsed.formatString();\n}\n\nfunction VitalDetailContent(props: Props) {\n  const [error, setError] = useState<string | undefined>(undefined);\n\n  function handleSearch(query: string) {\n    const {location} = props;\n\n    const queryParams = normalizeDateTimeParams({\n      ...(location.query || {}),\n      query,\n    });\n\n    // do not propagate pagination when making a new search\n    const searchQueryParams = omit(queryParams, 'cursor');\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: searchQueryParams,\n    });\n  }\n\n  function renderCreateAlertButton() {\n    const {eventView, organization, projects, vitalName} = props;\n\n    return (\n      <CreateAlertFromViewButton\n        eventView={eventView}\n        organization={organization}\n        projects={projects}\n        aria-label={t('Create Alert')}\n        alertType={vitalAlertTypes[vitalName]}\n        referrer=\"performance\"\n      />\n    );\n  }\n\n  function renderVitalSwitcher() {\n    const {vitalName, location, organization} = props;\n\n    const position = FRONTEND_VITALS.indexOf(vitalName);\n\n    if (position < 0) {\n      return null;\n    }\n\n    const items: MenuItemProps[] = FRONTEND_VITALS.reduce(\n      (acc: MenuItemProps[], newVitalName) => {\n        const itemProps = {\n          key: newVitalName,\n          label: vitalAbbreviations[newVitalName],\n          onAction: function switchWebVital() {\n            browserHistory.push({\n              pathname: location.pathname,\n              query: {\n                ...location.query,\n                vitalName: newVitalName,\n                cursor: undefined,\n              },\n            });\n\n            trackAdvancedAnalyticsEvent('performance_views.vital_detail.switch_vital', {\n              organization,\n              from_vital: vitalAbbreviations[vitalName] ?? 'undefined',\n              to_vital: vitalAbbreviations[newVitalName] ?? 'undefined',\n            });\n          },\n        };\n\n        if (vitalName === newVitalName) {\n          acc.unshift(itemProps);\n        } else {\n          acc.push(itemProps);\n        }\n\n        return acc;\n      },\n      []\n    );\n\n    return (\n      <DropdownMenuControl\n        items={items}\n        triggerLabel={vitalAbbreviations[vitalName]}\n        triggerProps={{\n          'aria-label': `Web Vitals: ${vitalAbbreviations[vitalName]}`,\n          prefix: t('Web Vitals'),\n        }}\n        placement=\"bottom left\"\n      />\n    );\n  }\n\n  function renderError() {\n    if (!error) {\n      return null;\n    }\n\n    return (\n      <Alert type=\"error\" showIcon>\n        {error}\n      </Alert>\n    );\n  }\n\n  function renderContent(vital: WebVital) {\n    const {location, organization, eventView, projects} = props;\n\n    const {fields, start, end, statsPeriod, environment, project} = eventView;\n\n    const query = decodeScalar(location.query.query, '');\n    const orgSlug = organization.slug;\n    const localDateStart = start ? getUtcToLocalDateObject(start) : null;\n    const localDateEnd = end ? getUtcToLocalDateObject(end) : null;\n    const interval = getInterval(\n      {start: localDateStart, end: localDateEnd, period: statsPeriod},\n      'high'\n    );\n    const filterString = getTransactionSearchQuery(location);\n    const summaryConditions = getSummaryConditions(filterString);\n\n    return (\n      <Fragment>\n        <FilterActions>\n          <PageFilterBar condensed>\n            <ProjectPageFilter />\n            <EnvironmentPageFilter />\n            <DatePageFilter alignDropdown=\"left\" />\n          </PageFilterBar>\n          <SearchBar\n            searchSource=\"performance_vitals\"\n            organization={organization}\n            projectIds={project}\n            query={query}\n            fields={fields}\n            onSearch={handleSearch}\n          />\n        </FilterActions>\n        {organization.experiments.VitalsAlertExperiment ? (\n          <VitalsComparison\n            {...{\n              organization,\n              location,\n              vital,\n              project,\n              end,\n              environment,\n              statsPeriod,\n              start,\n            }}\n          />\n        ) : null}\n        <VitalChart\n          organization={organization}\n          query={query}\n          project={project}\n          environment={environment}\n          start={localDateStart}\n          end={localDateEnd}\n          statsPeriod={statsPeriod}\n          interval={interval}\n        />\n        <StyledVitalInfo>\n          <VitalInfo\n            orgSlug={orgSlug}\n            location={location}\n            vital={vital}\n            project={project}\n            environment={environment}\n            start={start}\n            end={end}\n            statsPeriod={statsPeriod}\n          />\n        </StyledVitalInfo>\n\n        <Teams provideUserTeams>\n          {({teams, initiallyLoaded}) =>\n            initiallyLoaded ? (\n              <TeamKeyTransactionManager.Provider\n                organization={organization}\n                teams={teams}\n                selectedTeams={['myteams']}\n                selectedProjects={project.map(String)}\n              >\n                <Table\n                  eventView={eventView}\n                  projects={projects}\n                  organization={organization}\n                  location={location}\n                  setError={setError}\n                  summaryConditions={summaryConditions}\n                />\n              </TeamKeyTransactionManager.Provider>\n            ) : (\n              <LoadingIndicator />\n            )\n          }\n        </Teams>\n      </Fragment>\n    );\n  }\n\n  const {location, organization, vitalName} = props;\n\n  const vital = vitalName || WebVital.LCP;\n\n  return (\n    <Fragment>\n      <Layout.Header>\n        <Layout.HeaderContent>\n          <Breadcrumb organization={organization} location={location} vitalName={vital} />\n          <Layout.Title>{vitalMap[vital]}</Layout.Title>\n        </Layout.HeaderContent>\n        <Layout.HeaderActions>\n          <ButtonBar gap={1}>\n            {renderVitalSwitcher()}\n            <Feature organization={organization} features={['incidents']}>\n              {({hasFeature}) => hasFeature && renderCreateAlertButton()}\n            </Feature>\n          </ButtonBar>\n        </Layout.HeaderActions>\n      </Layout.Header>\n      <Layout.Body>\n        {renderError()}\n        <Layout.Main fullWidth>\n          <StyledDescription>{vitalDescription[vitalName]}</StyledDescription>\n          <SupportedBrowsers>\n            {Object.values(Browser).map(browser => (\n              <BrowserItem key={browser}>\n                {vitalSupportedBrowsers[vitalName]?.includes(browser) ? (\n                  <IconCheckmark color=\"green300\" size=\"sm\" />\n                ) : (\n                  <IconClose color=\"red300\" size=\"sm\" />\n                )}\n                {browser}\n              </BrowserItem>\n            ))}\n          </SupportedBrowsers>\n          {renderContent(vital)}\n        </Layout.Main>\n      </Layout.Body>\n    </Fragment>\n  );\n}\n\nexport default withProjects(VitalDetailContent);\n\nconst StyledDescription = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-bottom: ${space(3)};\n`;\n\nconst StyledVitalInfo = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst SupportedBrowsers = styled('div')`\n  display: inline-flex;\n  gap: ${space(2)};\n  margin-bottom: ${space(3)};\n`;\n\nconst BrowserItem = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: auto 1fr;\n  }\n`;\n","import {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {WebVital} from 'sentry/utils/fields';\nimport VitalsCardDiscoverQuery from 'sentry/utils/performance/vitals/vitalsCardsDiscoverQuery';\n\nimport {VitalBar} from '../landing/vitalsCards';\n\ntype ViewProps = Pick<\n  EventView,\n  'environment' | 'project' | 'start' | 'end' | 'statsPeriod'\n>;\n\ntype Props = ViewProps & {\n  location: Location;\n  orgSlug: Organization['slug'];\n  vital: WebVital | WebVital[];\n  hideBar?: boolean;\n  hideDurationDetail?: boolean;\n  hideStates?: boolean;\n  hideVitalPercentNames?: boolean;\n  hideVitalThresholds?: boolean;\n  isLoading?: boolean;\n  p75AllTransactions?: number;\n};\n\nfunction VitalInfo({\n  vital,\n  location,\n  isLoading,\n  hideBar,\n  hideStates,\n  hideVitalPercentNames,\n  hideVitalThresholds,\n  hideDurationDetail,\n}: Props) {\n  const vitals = Array.isArray(vital) ? vital : [vital];\n  const contentCommonProps = {\n    vital,\n    showBar: !hideBar,\n    showStates: !hideStates,\n    showVitalPercentNames: !hideVitalPercentNames,\n    showVitalThresholds: !hideVitalThresholds,\n    showDurationDetail: !hideDurationDetail,\n  };\n\n  return (\n    <VitalsCardDiscoverQuery location={location} vitals={vitals}>\n      {({isLoading: loading, vitalsData}) => (\n        <VitalBar\n          {...contentCommonProps}\n          isLoading={isLoading || loading}\n          data={vitalsData}\n        />\n      )}\n    </VitalsCardDiscoverQuery>\n  );\n}\n\nexport default VitalInfo;\n","import React, {useEffect} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {\n  INDUSTRY_STANDARDS,\n  MIN_VITAL_COUNT_FOR_DISPLAY,\n  SENTRY_CUSTOMERS,\n} from 'sentry/components/performance/vitalsAlert/constants';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport Tag from 'sentry/components/tag';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {WebVital} from 'sentry/utils/fields';\nimport VitalsCardDiscoverQuery from 'sentry/utils/performance/vitals/vitalsCardsDiscoverQuery';\nimport {webVitalMeh, webVitalPoor} from 'sentry/views/performance/vitalDetail/utils';\n\ntype Score = 'poor' | 'meh' | 'good';\n\ntype ViewProps = Pick<\n  EventView,\n  'environment' | 'project' | 'start' | 'end' | 'statsPeriod'\n>;\n\ntype Props = ViewProps & {\n  location: Location;\n  organization: Organization;\n  vital: WebVital | WebVital[];\n};\n\nconst SUPPORTED_VITALS = ['measurements.fcp', 'measurements.lcp'];\n\nfunction getScore(vital: WebVital, value: number): Score {\n  const poorScore = webVitalPoor[vital];\n  const mehScore = webVitalMeh[vital];\n  if (value > poorScore) {\n    return 'poor';\n  }\n  if (value > mehScore) {\n    return 'meh';\n  }\n  return 'good';\n}\n\nfunction getIndicatorString(score: Score) {\n  switch (score) {\n    case 'poor':\n      return t('Poor');\n    case 'meh':\n      return t('Meh');\n    default:\n      return t('Good');\n  }\n}\n\nfunction getTagLevel(score: Score) {\n  switch (score) {\n    case 'poor':\n      return 'error';\n    case 'meh':\n      return 'warning';\n    default:\n      return 'success';\n  }\n}\n\nfunction MetricsCard({\n  title,\n  vital,\n  value,\n  tooltip,\n}: {\n  title: string;\n  tooltip: string;\n  value: number;\n  vital: WebVital;\n}) {\n  // round to 2 decimals if <10s, otherwise use just 1 decimal\n  const score = getScore(vital, value);\n  const numDecimals = value >= 10_000 ? 1 : 2;\n  const timeInSeconds = value / 1000.0;\n  return (\n    <MetricsCardWrapper>\n      <MetricsTitle>\n        {title} (p75) <StyledQuestionTooltip title={tooltip} size=\"xs\" />\n      </MetricsTitle>\n      <ScoreWrapper>\n        <ScoreContent>{timeInSeconds.toFixed(numDecimals)}s</ScoreContent>\n        <TagWrapper>\n          <StyledTag type={getTagLevel(score)}>{getIndicatorString(score)}</StyledTag>\n        </TagWrapper>\n      </ScoreWrapper>\n    </MetricsCardWrapper>\n  );\n}\n\nfunction ContentWrapper({\n  organization,\n  vital,\n  children,\n  count,\n  p75,\n}: {\n  children: React.ReactNode;\n  count: number;\n  organization: Organization;\n  p75: number;\n  vital: WebVital;\n}) {\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('performance_views.vital_detail.comparison_viewed', {\n      organization,\n      vital,\n      count,\n      p75,\n    });\n  });\n  return <Container>{children}</Container>;\n}\n\nfunction VitalsComparison(props: Props) {\n  const {location, vital: _vital, organization} = props;\n  const vitals = Array.isArray(_vital) ? _vital : [_vital];\n  const vital = vitals[0];\n  if (!SUPPORTED_VITALS.includes(vital)) {\n    return null;\n  }\n  return (\n    <VitalsCardDiscoverQuery location={location} vitals={vitals}>\n      {({isLoading, vitalsData}) => {\n        if (isLoading || !vitalsData) {\n          return null;\n        }\n        const data = vitalsData[vital];\n        if (!data || !data.p75) {\n          return null;\n        }\n        const {p75} = data;\n        const lookupName = vital === 'measurements.fcp' ? 'FCP' : 'LCP';\n        const sentryStandard = SENTRY_CUSTOMERS[lookupName];\n        const industryStandard = INDUSTRY_STANDARDS[lookupName];\n        const count = vitalsData[vital].total;\n        // only show it if we hit the min number\n        if (count < MIN_VITAL_COUNT_FOR_DISPLAY) {\n          return null;\n        }\n        return (\n          <ContentWrapper {...{organization, vital, count, p75}}>\n            <MetricsCard\n              title={t('Selected Projects')}\n              vital={vital}\n              value={p75}\n              tooltip={tct(\n                \"25% of your project's transactions have an [lookupName] greater than this number. Good, Bad, Meh segmentation is based on Google industry standards.\",\n                {lookupName}\n              )}\n            />\n            <MetricsCard\n              title={t('Sentry Peers')}\n              vital={vital}\n              value={sentryStandard}\n              tooltip={tct(\n                '20% of Sentry customers have a p75 [lookupName] lower than this.',\n                {lookupName}\n              )}\n            />\n            <MetricsCard\n              title={t('Industry Standard')}\n              vital={vital}\n              value={industryStandard}\n              tooltip={tct(\n                \"Calculated as a Good [lookupName] based on Google's industry standards.\",\n                {lookupName}\n              )}\n            />\n          </ContentWrapper>\n        );\n      }}\n    </VitalsCardDiscoverQuery>\n  );\n}\n\nexport default VitalsComparison;\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: ${space(2)};\n`;\n\nconst ScoreContent = styled('h6')`\n  margin: auto;\n`;\n\nconst ScoreWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst MetricsCardWrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border: 1px ${p => p.theme.gray200};\n  border-radius: 4px;\n  border-style: solid;\n  align-items: center;\n  height: 57px;\n  padding: ${space(2)};\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledTag = styled(Tag)`\n  margin-left: ${space(1)};\n`;\n\nconst MetricsTitle = styled('span')`\n  font-size: 14px;\n`;\n\nconst TagWrapper = styled('span')`\n  margin: auto;\n`;\n\nconst StyledQuestionTooltip = styled(QuestionTooltip)`\n  position: relative;\n  top: 1px;\n`;\n"],"names":["withRouter","addErrorMessage","addLoadingMessage","addSuccessMessage","navigateTo","Access","GuideAnchor","Button","Link","IconSiren","t","tct","useApi","AlertWizardRuleTemplates","DEFAULT_WIZARD_TEMPLATE","CreateAlertFromViewButton","projects","eventView","organization","referrer","onClick","alertType","disableMetricDataset","buttonProps","project","find","p","id","queryParams","generateQueryStringObject","query","includes","slug","replace","alertTemplate","to","pathname","createFromDiscover","aggregate","yAxis","handleClick","CreateAlertButton","projectSlug","iconProps","router","hideIcon","showPermissionGuide","alertOption","onEnter","api","createAlertUrl","providedProj","alertsBaseUrl","alertsArgs","filter","item","length","join","handleClickWithoutProject","event","preventDefault","enableAlertsMemberWrite","settingsEndpoint","requestPromise","method","data","alertsMemberWrite","err","permissionTooltipText","settingsLink","renderButton","hasAccess","undefined","isHoverable","position","overlayStyle","maxWidth","children","showGuide","isOrgAdmin","useEffect","assign","flatten","memoize","omit","fetchTagValues","SmartSearchBar","NEGATION_OPERATOR","SEARCH_WILDCARD","SavedSearchType","defined","FIELD_TAGS","isAggregateField","isEquation","isMeasurement","SEMVER_TAGS","SPAN_OP_BREAKDOWN_FIELDS","TRACING_FIELDS","FieldKey","FieldKind","Measurements","withTags","SEARCH_SPECIAL_CHARS_REGEXP","RegExp","getFunctionTags","fields","Object","fromEntries","keys","field","map","key","name","kind","FUNCTION","getFieldTags","FIELD","getMeasurementTags","measurements","MEASUREMENT","getSpanTags","METRICS","getSemverTags","SearchBar","props","maxSearchItems","tags","omitTags","projectIds","includeSessionTagsValues","maxMenuHeight","getEventFieldValues","cache","clear","tag","endpointParams","projectIdStrings","String","Promise","resolve","then","results","Error","getTagList","functionTags","fieldTags","measurementsWithKind","spanTags","semverTags","orgHasPerformanceView","features","combinedTags","tagsWithKind","TAG","sortedTagKeys","sort","a","b","toLowerCase","localeCompare","has","HAS","values","predefined","EVENT","Component","RouterLink","classNames","qs","ListLink","_classNames","className","activeClassName","isActive","index","queryData","parse","target","render","disabled","carriedProps","getClassName","StyledLi","shouldForwardProp","prop","theme","VITALS_TYPES","INDUSTRY_STANDARDS","LCP","FCP","appStartCold","appStartWarm","SENTRY_CUSTOMERS","MIN_VITAL_COUNT_FOR_DISPLAY","Fragment","MOBILE_VITAL_DETAILS","WEB_VITAL_DETAILS","measurementsFromDetails","details","entries","value","newValue","MOBILE_MEASUREMENTS","WEB_MEASUREMENTS","getMeasurements","GenericDiscoverQuery","withApi","VitalsCardsDiscoverQuery","TagStore","getDisplayName","WrappedComponent","WithTags","getStateTags","listen","setState","componentWillUnmount","unsubscribe","state","AlertRuleThresholdType","AlertRuleTriggerType","AlertRuleComparisonType","Dataset","EventTypes","Datasource","SessionsAggregate","TimePeriod","TimeWindow","ActionType","ActionLabel","EMAIL","SLACK","PAGERDUTY","MSTEAMS","SENTRY_APP","TargetType","TargetLabel","USER","TEAM","MEPAlertsQueryType","MEPAlertsDataset","DatasetMEPAlertQueryTypes","ERRORS","ERROR","TRANSACTIONS","PERFORMANCE","GENERIC_METRICS","CRASH_RATE","SESSIONS","AlertWizardAlertNames","issues","num_errors","users_experiencing_errors","throughput","trans_duration","apdex","failure_rate","lcp","fid","cls","custom","crash_free_sessions","crash_free_users","getAlertWizardCategories","org","categoryHeading","options","dataset","eventTypes","TRANSACTION","CRASH_FREE_SESSIONS","SESSION","CRASH_FREE_USERS","hidePrimarySelectorSet","Set","hideParameterSelectorSet","getMEPAlertsDataset","newAlert","DISCOVER","METRICS_ENHANCED","browserHistory","isEqual","loadOrganizationTags","NoProjectMessage","PageFiltersContainer","SentryDocumentTitle","PageContent","trackAdvancedAnalyticsEvent","WebVital","PerformanceEventViewProvider","decodeScalar","withOrganization","withPageFilters","withProjects","generatePerformanceVitalDetailView","addRoutePerformanceContext","getSelectedProjectPlatforms","getTransactionName","VitalDetailContent","VitalDetail","location","getDerivedStateFromProps","nextProps","prevState","componentDidMount","selection","project_platforms","componentDidUpdate","prevProps","datetime","getDocumentTitle","hasTransactionName","trim","vitalNameQuery","vitalName","indexOf","StyledPageContent","GridEditable","COL_WIDTH_UNDEFINED","SortLink","Pagination","Tag","IconStar","trackAnalyticsEvent","isFieldSortable","getFieldRenderer","fieldAlignment","getAggregateAlias","VitalsDetailsTableQuery","MutableSearch","CellAction","Actions","updateQuery","DisplayModes","normalizeSearchConditionsWithTransactionName","TransactionFilterOptions","transactionSummaryRouteWithQuery","getVitalDetailTableMehStatusFunction","getVitalDetailTablePoorStatusFunction","vitalAbbreviations","vitalNameFromLocation","VitalState","vitalStateColors","COLUMN_TITLES","getTableColumnTitle","abbrev","titles","getProjectID","eventData","currentProject","Table","widths","column","action","eventKey","eventName","organization_id","parseInt","searchConditions","push","cursor","formatString","tableData","dataRow","renderBodyCell","tableMeta","renderHeadCell","teamKeyTransactionColumn","getColumns","col","isHeader","star","meta","columnIndex","nextColumn","width","Number","summaryConditions","fieldRenderer","rendered","allowActions","ADD","EXCLUDE","SHOW_GREATER_THAN","SHOW_LESS_THAN","projectID","summaryView","clone","conditions","addFilterValues","transaction","orgSlug","showTransactions","RECENT","display","VITALS","handleCellAction","handleSummaryClick","startsWith","title","aggregateAliasTableMeta","forEach","align","type","generateSortLink","nextEventView","sortOnField","queryStringObject","currentSort","sortForField","canSort","getSortedEventView","aggregateFieldPoor","aggregateFieldMeh","isSortingByStatus","sorts","some","additionalSorts","withSorts","fakeColumnView","columnOrder","slice","i","sortedEventView","columnSortBy","getSorts","pageLinks","isLoading","onResizeColumn","handleResizeColumn","renderHeadCellWithMeta","renderBodyCellWithData","renderPrependColumns","renderPrependCellWithData","prependColumnWidths","UniqueTagCell","GoodTag","GOOD","white","MehTag","MEH","PoorTag","POOR","useTheme","ChartZoom","ErrorPanel","EventsRequest","LineChart","ReleaseSeries","ChartContainer","HeaderTitleLegend","TransitionChart","TransparentLoadingMask","Panel","QuestionTooltip","IconWarning","axisLabelFormatter","tooltipFormatter","aggregateOutputType","getDynamicText","replaceSeriesName","transformEventStatsSmoothed","getMaxOfSeries","getVitalChartDefinitions","getVitalChartTitle","VitalChart","environment","statsPeriod","start","end","interval","utc","legend","vitalPoor","markLines","chartOptions","vital","handleLegendSelectChanged","legendChange","selected","unselected","unselectedSeries","zoomRenderProps","timeseriesData","errored","loading","reloading","colors","charts","getColorPalette","smoothedResults","smoothedSeries","seriesName","rest","color","lineStyle","opacity","seriesMax","yAxisMax","Math","max","releaseSeries","fixed","fieldToVitalType","vitalFields","poorCountField","mehCountField","goodCountField","_VitalChart","_results","height","grid","seriesOptions","showSymbol","tooltip","trigger","valueFormatter","CLS","xAxis","show","xAxes","axisLabel","chartLabel","showMaxLabel","formatter","isGroupedByDate","showTimeInTooltip","s","adjustedSeries","useState","Feature","Alert","ButtonBar","getInterval","DatePageFilter","DropdownMenuControl","EnvironmentPageFilter","Layout","LoadingIndicator","PageFilterBar","normalizeDateTimeParams","TeamKeyTransactionManager","ProjectPageFilter","IconCheckmark","IconClose","space","getUtcToLocalDateObject","Browser","Teams","Breadcrumb","getTransactionSearchQuery","vitalAlertTypes","vitalDescription","vitalMap","vitalSupportedBrowsers","VitalInfo","VitalsComparison","FRONTEND_VITALS","FID","getSummaryConditions","parsed","freeText","error","setError","handleSearch","searchQueryParams","renderCreateAlertButton","renderVitalSwitcher","items","reduce","acc","newVitalName","itemProps","label","onAction","switchWebVital","from_vital","to_vital","unshift","prefix","renderError","renderContent","localDateStart","localDateEnd","period","filterString","experiments","VitalsAlertExperiment","teams","initiallyLoaded","hasFeature","browser","StyledDescription","fontSizeMedium","StyledVitalInfo","SupportedBrowsers","BrowserItem","FilterActions","breakpoints","small","VitalsCardDiscoverQuery","VitalBar","hideBar","hideStates","hideVitalPercentNames","hideVitalThresholds","hideDurationDetail","vitals","Array","isArray","contentCommonProps","showBar","showStates","showVitalPercentNames","showVitalThresholds","showDurationDetail","vitalsData","React","webVitalMeh","webVitalPoor","SUPPORTED_VITALS","getScore","poorScore","mehScore","getIndicatorString","score","getTagLevel","MetricsCard","numDecimals","timeInSeconds","toFixed","ContentWrapper","count","p75","_vital","lookupName","sentryStandard","industryStandard","total","Container","ScoreContent","ScoreWrapper","MetricsCardWrapper","gray200","StyledTag","MetricsTitle","TagWrapper","StyledQuestionTooltip"],"sourceRoot":""}