{"version":3,"file":"chunks/app_actionCreators_events_tsx-app_components_charts_areaChart_tsx-app_components_charts_loadi-460d62.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/events.tsx","webpack:///./app/components/charts/areaChart.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/series/areaSeries.tsx","webpack:///./app/components/events/searchBar.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/utils/getPeriod.tsx","webpack:///./app/utils/withTags.tsx","webpack:///./app/views/eventsV2/table/arithmeticInput.tsx","webpack:///./app/views/eventsV2/table/queryField.tsx"],"sourcesContent":["import {LocationDescriptor} from 'history';\nimport pick from 'lodash/pick';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {canIncludePreviousPeriod} from 'sentry/components/charts/utils';\nimport {\n  DateString,\n  EventsStats,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {LocationQuery} from 'sentry/utils/discover/eventView';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {PERFORMANCE_URL_PARAM} from 'sentry/utils/performance/constants';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\ntype Options = {\n  organization: OrganizationSummary;\n  partial: boolean;\n  comparisonDelta?: number;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  excludeOther?: boolean;\n  field?: string[];\n  generatePathname?: (org: OrganizationSummary) => string;\n  includePrevious?: boolean;\n  interval?: string;\n  limit?: number;\n  orderby?: string;\n  period?: string | null;\n  project?: Readonly<number[]>;\n  query?: string;\n  queryBatching?: QueryBatching;\n  queryExtras?: Record<string, string>;\n  referrer?: string;\n  start?: DateString;\n  team?: Readonly<string | string[]>;\n  topEvents?: number;\n  withoutZerofill?: boolean;\n  yAxis?: string | string[];\n};\n\n/**\n * Make requests to `events-stats` endpoint\n *\n * @param {Object} api API client instance\n * @param {Object} options Request parameters\n * @param {Object} options.organization Organization object\n * @param {Number[]} options.project List of project ids\n * @param {String[]} options.environment List of environments to query for\n * @param {Boolean} options.excludeOther Exclude the \"Other\" series when making a topEvents query\n * @param {String[]} options.team List of teams to query for\n * @param {String} options.period Time period to query for, in the format: <integer><units> where units are \"d\" or \"h\"\n * @param {String} options.interval Time interval to group results in, in the format: <integer><units> where units are \"d\", \"h\", \"m\", \"s\"\n * @param {Number} options.comparisonDelta Comparison delta for change alert event stats to include comparison stats\n * @param {Boolean} options.includePrevious Should request also return reqsults for previous period?\n * @param {Number} options.limit The number of rows to return\n * @param {String} options.query Search query\n * @param {QueryBatching} options.queryBatching A container for batching functions from a provider\n * @param {Record<string, string>} options.queryExtras A list of extra query parameters\n * @param {(org: OrganizationSummary) => string} options.generatePathname A function that returns an override for the pathname\n */\nexport const doEventsRequest = <IncludeAllArgsType extends boolean = false>(\n  api: Client,\n  {\n    organization,\n    project,\n    environment,\n    team,\n    period,\n    start,\n    end,\n    interval,\n    comparisonDelta,\n    includePrevious,\n    query,\n    yAxis,\n    field,\n    topEvents,\n    orderby,\n    partial,\n    withoutZerofill,\n    referrer,\n    queryBatching,\n    generatePathname,\n    queryExtras,\n    excludeOther,\n    includeAllArgs,\n  }: {includeAllArgs?: IncludeAllArgsType} & Options\n): IncludeAllArgsType extends true\n  ? Promise<\n      [EventsStats | MultiSeriesEventsStats, string | undefined, ResponseMeta | undefined]\n    >\n  : Promise<EventsStats | MultiSeriesEventsStats> => {\n  const pathname =\n    generatePathname?.(organization) ??\n    `/organizations/${organization.slug}/events-stats/`;\n\n  const shouldDoublePeriod = canIncludePreviousPeriod(includePrevious, period);\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      interval,\n      comparisonDelta,\n      project,\n      environment,\n      team,\n      query,\n      yAxis,\n      field,\n      topEvents,\n      orderby,\n      partial: partial ? '1' : undefined,\n      withoutZerofill: withoutZerofill ? '1' : undefined,\n      referrer: referrer ? referrer : 'api.organization-event-stats',\n      excludeOther: excludeOther ? '1' : undefined,\n    }).filter(([, value]) => typeof value !== 'undefined')\n  );\n\n  // Doubling period for absolute dates is not accurate unless starting and\n  // ending times are the same (at least for daily intervals). This is\n  // the tradeoff for now.\n  const periodObj = getPeriod({period, start, end}, {shouldDoublePeriod});\n\n  const queryObject = {\n    includeAllArgs,\n    query: {\n      ...urlQuery,\n      ...periodObj,\n      ...queryExtras,\n    },\n  };\n\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, pathname, queryObject);\n  }\n\n  return api.requestPromise<IncludeAllArgsType>(pathname, queryObject);\n};\n\nexport type EventQuery = {\n  field: string[];\n  query: string;\n  environment?: string[];\n  equation?: string[];\n  noPagination?: boolean;\n  per_page?: number;\n  project?: string | string[];\n  referrer?: string;\n  sort?: string | string[];\n  team?: string | string[];\n};\n\nexport type TagSegment = {\n  count: number;\n  name: string;\n  url: LocationDescriptor;\n  value: string;\n  isOther?: boolean;\n  key?: string;\n};\n\nexport type Tag = {\n  key: string;\n  topValues: Array<TagSegment>;\n};\n\n/**\n * Fetches tag facets for a query\n */\nexport function fetchTagFacets(\n  api: Client,\n  orgSlug: string,\n  query: EventQuery\n): Promise<Tag[]> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  return api.requestPromise(`/organizations/${orgSlug}/events-facets/`, {\n    query: queryOption,\n  });\n}\n\n/**\n * Fetches total count of events for a given query\n */\nexport function fetchTotalCount(\n  api: Client,\n  orgSlug: String,\n  query: EventQuery & LocationQuery\n): Promise<number> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  type Response = {\n    count: number;\n  };\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/events-meta/`, {\n      query: queryOption,\n    })\n    .then((res: Response) => res.count);\n}\n","import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport AreaSeries from './series/areaSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type AreaChartSeries = Series & Omit<LineSeriesOption, 'data' | 'name'>;\n\nexport interface AreaChartProps extends Omit<ChartProps, 'series'> {\n  series: AreaChartSeries[];\n  stacked?: boolean;\n}\n\nexport function AreaChart({series, stacked, colors, ...props}: AreaChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      data-test-id=\"area-chart\"\n      colors={colors}\n      series={series.map(({seriesName, data, ...otherSeriesProps}, i) =>\n        AreaSeries({\n          stack: stacked ? 'area' : undefined,\n          name: seriesName,\n          data: data.map(({name, value}) => [name, value]),\n          lineStyle: {\n            color: colors?.[i],\n            opacity: 1,\n            width: 0.4,\n          },\n          areaStyle: {\n            color: colors?.[i],\n            opacity: 1.0,\n          },\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n          ...otherSeriesProps,\n        })\n      )}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import type {LineSeriesOption} from 'echarts';\n\nimport LineSeries from 'sentry/components/charts/series/lineSeries';\n\nexport default function AreaSeries(props: LineSeriesOption = {}): LineSeriesOption {\n  return LineSeries({\n    ...props,\n  });\n}\n","import {useEffect} from 'react';\nimport assign from 'lodash/assign';\nimport flatten from 'lodash/flatten';\nimport memoize from 'lodash/memoize';\nimport omit from 'lodash/omit';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'sentry/constants';\nimport {Organization, SavedSearchType, Tag, TagCollection} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {\n  Field,\n  FIELD_TAGS,\n  isAggregateField,\n  isEquation,\n  isMeasurement,\n  SEMVER_TAGS,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  TRACING_FIELDS,\n} from 'sentry/utils/discover/fields';\nimport {FieldKey, FieldKind} from 'sentry/utils/fields';\nimport Measurements from 'sentry/utils/measurements/measurements';\nimport useApi from 'sentry/utils/useApi';\nimport withTags from 'sentry/utils/withTags';\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\n\nconst getFunctionTags = (fields: Readonly<Field[]>) =>\n  Object.fromEntries(\n    fields\n      .filter(\n        item => !Object.keys(FIELD_TAGS).includes(item.field) && !isEquation(item.field)\n      )\n      .map(item => [\n        item.field,\n        {key: item.field, name: item.field, kind: FieldKind.FUNCTION},\n      ])\n  );\n\nconst getFieldTags = () =>\n  Object.fromEntries(\n    Object.keys(FIELD_TAGS).map(key => [\n      key,\n      {\n        ...FIELD_TAGS[key],\n        kind: FieldKind.FIELD,\n      },\n    ])\n  );\n\nconst getMeasurementTags = (\n  measurements: Parameters<\n    React.ComponentProps<typeof Measurements>['children']\n  >[0]['measurements']\n) =>\n  Object.fromEntries(\n    Object.keys(measurements).map(key => [\n      key,\n      {\n        ...measurements[key],\n        kind: FieldKind.MEASUREMENT,\n      },\n    ])\n  );\n\nconst getSpanTags = () => {\n  return Object.fromEntries(\n    SPAN_OP_BREAKDOWN_FIELDS.map(key => [key, {key, name: key, kind: FieldKind.METRICS}])\n  );\n};\n\nconst getSemverTags = () =>\n  Object.fromEntries(\n    Object.keys(SEMVER_TAGS).map(key => [\n      key,\n      {\n        ...SEMVER_TAGS[key],\n        kind: FieldKind.FIELD,\n      },\n    ])\n  );\n\nexport type SearchBarProps = Omit<React.ComponentProps<typeof SmartSearchBar>, 'tags'> & {\n  organization: Organization;\n  tags: TagCollection;\n  fields?: Readonly<Field[]>;\n  includeSessionTagsValues?: boolean;\n  /**\n   * Used to define the max height of the menu in px.\n   */\n  maxMenuHeight?: number;\n  maxSearchItems?: React.ComponentProps<typeof SmartSearchBar>['maxSearchItems'];\n  omitTags?: string[];\n  projectIds?: number[] | Readonly<number[]>;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {\n    maxSearchItems,\n    organization,\n    tags,\n    omitTags,\n    fields,\n    projectIds,\n    includeSessionTagsValues,\n    maxMenuHeight,\n  } = props;\n\n  const api = useApi();\n\n  useEffect(() => {\n    // Clear memoized data on mount to make tests more consistent.\n    getEventFieldValues.cache.clear?.();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectIds]);\n\n  // Returns array of tag values that substring match `query`; invokes `callback`\n  // with data when ready\n  const getEventFieldValues = memoize(\n    (tag, query, endpointParams): Promise<string[]> => {\n      const projectIdStrings = (projectIds as Readonly<number>[])?.map(String);\n\n      if (isAggregateField(tag.key) || isMeasurement(tag.key)) {\n        // We can't really auto suggest values for aggregate fields\n        // or measurements, so we simply don't\n        return Promise.resolve([]);\n      }\n\n      return fetchTagValues(\n        api,\n        organization.slug,\n        tag.key,\n        query,\n        projectIdStrings,\n        endpointParams,\n\n        // allows searching for tags on transactions as well\n        true,\n\n        // allows searching for tags on sessions as well\n        includeSessionTagsValues\n      ).then(\n        results =>\n          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),\n        () => {\n          throw new Error('Unable to fetch event field values');\n        }\n      );\n    },\n    ({key}, query) => `${key}-${query}`\n  );\n\n  const getTagList = (\n    measurements: Parameters<\n      React.ComponentProps<typeof Measurements>['children']\n    >[0]['measurements']\n  ) => {\n    const functionTags = getFunctionTags(fields ?? []);\n    const fieldTags = getFieldTags();\n    const measurementsWithKind = getMeasurementTags(measurements);\n    const spanTags = getSpanTags();\n    const semverTags = getSemverTags();\n\n    const orgHasPerformanceView = organization.features.includes('performance-view');\n\n    const combinedTags: Record<string, Tag> = orgHasPerformanceView\n      ? Object.assign({}, measurementsWithKind, spanTags, fieldTags, functionTags)\n      : omit(fieldTags, TRACING_FIELDS);\n\n    const tagsWithKind = Object.fromEntries(\n      Object.keys(tags).map(key => [\n        key,\n        {\n          ...tags[key],\n          kind: FieldKind.TAG,\n        },\n      ])\n    );\n\n    assign(combinedTags, tagsWithKind, fieldTags, semverTags);\n\n    const sortedTagKeys = Object.keys(combinedTags);\n    sortedTagKeys.sort((a, b) => {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n\n    combinedTags.has = {\n      key: FieldKey.HAS,\n      name: 'Has property',\n      values: sortedTagKeys,\n      predefined: true,\n      kind: FieldKind.FIELD,\n    };\n\n    return omit(combinedTags, omitTags ?? []);\n  };\n\n  return (\n    <Measurements>\n      {({measurements}) => (\n        <SmartSearchBar\n          hasRecentSearches\n          savedSearchType={SavedSearchType.EVENT}\n          onGetTagValues={getEventFieldValues}\n          supportedTags={getTagList(measurements)}\n          prepareQuery={query => {\n            // Prepare query string (e.g. strip special characters like negation operator)\n            return query.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n          }}\n          maxSearchItems={maxSearchItems}\n          excludeEnvironment\n          maxMenuHeight={maxMenuHeight ?? 300}\n          {...props}\n        />\n      )}\n    </Measurements>\n  );\n}\n\nexport default withTags(SearchBar);\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import moment from 'moment';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DateString} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\n\ntype DateObject = {\n  /**\n   * Ending date object\n   */\n  end?: DateString;\n  /**\n   * Relative period string in format \"<int><unit>\" (e.g. 4d for 4 days)\n   */\n  period?: string | null;\n  /**\n   * Starting date object\n   */\n  start?: DateString;\n};\n\ntype Options = {\n  /**\n   * Doubles the given period (useful for getting previous period data)\n   */\n  shouldDoublePeriod?: boolean;\n};\n\n/**\n * Gets the period to query with if we need to double the initial period in order\n * to get data for the previous period\n *\n * Returns an object with either a period or start/end dates ({statsPeriod: string} or {start: string, end: string})\n */\nexport function getPeriod(\n  {period, start, end}: DateObject,\n  {shouldDoublePeriod}: Options = {}\n) {\n  if (!period && !start && !end) {\n    period = DEFAULT_STATS_PERIOD;\n  }\n\n  // you can not specify both relative and absolute periods\n  // relative period takes precedence\n  if (period) {\n    if (!shouldDoublePeriod) {\n      return {statsPeriod: period};\n    }\n    const [, periodNumber, periodLength] = period.match(/([0-9]+)([mhdw])/)!;\n\n    return {statsPeriod: `${parseInt(periodNumber, 10) * 2}${periodLength}`};\n  }\n\n  if (!start || !end) {\n    throw new Error('start and end required');\n  }\n\n  const formattedStart = getUtcDateString(start);\n  const formattedEnd = getUtcDateString(end);\n\n  if (shouldDoublePeriod) {\n    // get duration of end - start and double\n    const diff = moment(end).diff(moment(start));\n\n    const previousPeriodStart = moment(start).subtract(diff);\n\n    // This is not as accurate as having 2 start/end objs\n    return {\n      start: getUtcDateString(previousPeriodStart),\n      end: formattedEnd,\n    };\n  }\n\n  return {\n    start: formattedStart,\n    end: formattedEnd,\n  };\n}\n","import {Component} from 'react';\n\nimport TagStore from 'sentry/stores/tagStore';\nimport {TagCollection} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedTagsProps = {\n  tags: TagCollection;\n};\n\ntype State = {\n  tags: TagCollection;\n};\n\n/**\n * HOC for getting *only* tags from the TagStore.\n */\nfunction withTags<P extends InjectedTagsProps>(WrappedComponent: React.ComponentType<P>) {\n  class WithTags extends Component<Omit<P, keyof InjectedTagsProps>, State> {\n    static displayName = `withTags(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      tags: TagStore.getStateTags(),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = TagStore.listen(\n      (tags: TagCollection) => this.setState({tags}),\n      undefined\n    );\n\n    render() {\n      const {tags, ...props} = this.props as P;\n      return <WrappedComponent {...({tags: tags ?? this.state.tags, ...props} as P)} />;\n    }\n  }\n\n  return WithTags;\n}\n\nexport default withTags;\n","import {createRef, Fragment, PureComponent} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport Input, {InputProps} from 'sentry/components/input';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  Column,\n  generateFieldAsString,\n  isLegalEquationColumn,\n} from 'sentry/utils/discover/fields';\n\nconst NONE_SELECTED = -1;\n\ntype DropdownOption = {\n  active: boolean;\n  kind: 'field' | 'operator';\n  value: string;\n};\n\ntype DropdownOptionGroup = {\n  options: DropdownOption[];\n  title: string;\n};\n\ntype DefaultProps = {\n  options: Column[];\n};\n\ntype Props = DefaultProps &\n  InputProps & {\n    onUpdate: (value: string) => void;\n    value: string;\n    hideFieldOptions?: boolean;\n  };\n\ntype State = {\n  activeSelection: number;\n  dropdownOptionGroups: DropdownOptionGroup[];\n  dropdownVisible: boolean;\n  partialTerm: string | null;\n  query: string;\n  rawOptions: Column[];\n};\n\nexport default class ArithmeticInput extends PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    options: [],\n  };\n\n  static getDerivedStateFromProps(props: Readonly<Props>, state: State): State {\n    const changed = !isEqual(state.rawOptions, props.options);\n\n    if (changed) {\n      return {\n        ...state,\n        rawOptions: props.options,\n        dropdownOptionGroups: makeOptions(\n          props.options,\n          state.partialTerm,\n          props.hideFieldOptions\n        ),\n        activeSelection: NONE_SELECTED,\n      };\n    }\n\n    return {...state};\n  }\n\n  state: State = {\n    query: this.props.value,\n    partialTerm: null,\n    rawOptions: this.props.options,\n    dropdownVisible: false,\n    dropdownOptionGroups: makeOptions(\n      this.props.options,\n      null,\n      this.props.hideFieldOptions\n    ),\n    activeSelection: NONE_SELECTED,\n  };\n\n  input = createRef<HTMLInputElement>();\n\n  blur = () => {\n    this.input.current?.blur();\n  };\n\n  focus = (position: number) => {\n    this.input.current?.focus();\n    this.input.current?.setSelectionRange(position, position);\n  };\n\n  getCursorPosition(): number {\n    return this.input.current?.selectionStart ?? -1;\n  }\n\n  splitQuery() {\n    const {query} = this.state;\n    const currentPosition = this.getCursorPosition();\n\n    // The current term is delimited by whitespaces. So if no spaces are found,\n    // the entire string is taken to be 1 term.\n    //\n    // TODO: add support for when there are no spaces\n\n    const matches = [...query.substring(0, currentPosition).matchAll(/\\s|^/g)];\n    const match = matches[matches.length - 1];\n    const startOfTerm = match[0] === '' ? 0 : (match.index || 0) + 1;\n\n    const cursorOffset = query.slice(currentPosition).search(/\\s|$/);\n    const endOfTerm = currentPosition + (cursorOffset === -1 ? 0 : cursorOffset);\n\n    return {\n      startOfTerm,\n      endOfTerm,\n      prefix: query.substring(0, startOfTerm),\n      term: query.substring(startOfTerm, endOfTerm),\n      suffix: query.substring(endOfTerm),\n    };\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const query = event.target.value.replace('\\n', '');\n    this.setState({query}, this.updateAutocompleteOptions);\n  };\n\n  handleClick = () => {\n    this.updateAutocompleteOptions();\n  };\n\n  handleFocus = () => {\n    this.setState({dropdownVisible: true});\n  };\n\n  handleBlur = () => {\n    this.props.onUpdate(this.state.query);\n    this.setState({dropdownVisible: false});\n  };\n\n  getSelection(selection: number): DropdownOption | null {\n    const {dropdownOptionGroups} = this.state;\n\n    for (const group of dropdownOptionGroups) {\n      if (selection >= group.options.length) {\n        selection -= group.options.length;\n        continue;\n      }\n\n      return group.options[selection];\n    }\n\n    return null;\n  }\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const {key} = event;\n\n    const {options, hideFieldOptions} = this.props;\n    const {activeSelection, partialTerm} = this.state;\n    const startedSelection = activeSelection >= 0;\n\n    // handle arrow navigation\n    if (key === 'ArrowDown' || key === 'ArrowUp') {\n      event.preventDefault();\n\n      const newOptionGroups = makeOptions(options, partialTerm, hideFieldOptions);\n      const flattenedOptions = newOptionGroups.map(group => group.options).flat();\n      if (flattenedOptions.length === 0) {\n        return;\n      }\n\n      let newSelection;\n      if (!startedSelection) {\n        newSelection = key === 'ArrowUp' ? flattenedOptions.length - 1 : 0;\n      } else {\n        newSelection =\n          key === 'ArrowUp'\n            ? (activeSelection - 1 + flattenedOptions.length) % flattenedOptions.length\n            : (activeSelection + 1) % flattenedOptions.length;\n      }\n      // This is modifying the `active` value of the references so make sure to\n      // use `newOptionGroups` at the end.\n      flattenedOptions[newSelection].active = true;\n\n      this.setState({\n        activeSelection: newSelection,\n        dropdownOptionGroups: newOptionGroups,\n      });\n      return;\n    }\n\n    // handle selection\n    if (startedSelection && (key === 'Tab' || key === 'Enter')) {\n      event.preventDefault();\n\n      const selection = this.getSelection(activeSelection);\n      if (selection) {\n        this.handleSelect(selection);\n      }\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.blur();\n      return;\n    }\n  };\n\n  handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    // Other keys are managed at handleKeyDown function\n    if (event.key !== 'Escape') {\n      return;\n    }\n\n    event.preventDefault();\n\n    const {activeSelection} = this.state;\n    const startedSelection = activeSelection >= 0;\n\n    if (!startedSelection) {\n      this.blur();\n      return;\n    }\n  };\n\n  handleSelect = (option: DropdownOption) => {\n    const {prefix, suffix} = this.splitQuery();\n\n    this.setState(\n      {\n        // make sure to insert a space after the autocompleted term\n        query: `${prefix}${option.value} ${suffix}`,\n        activeSelection: NONE_SELECTED,\n      },\n      () => {\n        // updating the query will cause the input to lose focus\n        // and make sure to move the cursor behind the space after\n        // the end of the autocompleted term\n        this.focus(prefix.length + option.value.length + 1);\n        this.updateAutocompleteOptions();\n      }\n    );\n  };\n\n  updateAutocompleteOptions() {\n    const {options, hideFieldOptions} = this.props;\n\n    const {term} = this.splitQuery();\n    const partialTerm = term || null;\n\n    this.setState({\n      dropdownOptionGroups: makeOptions(options, partialTerm, hideFieldOptions),\n      partialTerm,\n    });\n  }\n\n  render() {\n    const {onUpdate: _onUpdate, options: _options, ...props} = this.props;\n    const {dropdownVisible, dropdownOptionGroups} = this.state;\n    return (\n      <Container isOpen={dropdownVisible}>\n        <StyledInput\n          {...props}\n          ref={this.input}\n          autoComplete=\"off\"\n          className=\"form-control\"\n          value={this.state.query}\n          onClick={this.handleClick}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          onKeyDown={this.handleKeyDown}\n          spellCheck={false}\n        />\n        <TermDropdown\n          isOpen={dropdownVisible}\n          optionGroups={dropdownOptionGroups}\n          handleSelect={this.handleSelect}\n        />\n      </Container>\n    );\n  }\n}\n\nconst Container = styled('div')<{isOpen: boolean}>`\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: inset ${p => p.theme.dropShadowLight};\n  background: ${p => p.theme.background};\n  position: relative;\n\n  border-radius: ${p =>\n    p.isOpen\n      ? `${p.theme.borderRadius} ${p.theme.borderRadius} 0 0`\n      : p.theme.borderRadius};\n\n  .show-sidebar & {\n    background: ${p => p.theme.backgroundSecondary};\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  height: 40px;\n  padding: 7px 10px;\n  border: 0;\n  box-shadow: none;\n\n  &:hover,\n  &:focus {\n    border: 0;\n    box-shadow: none;\n  }\n`;\n\ntype TermDropdownProps = {\n  handleSelect: (option: DropdownOption) => void;\n  isOpen: boolean;\n  optionGroups: DropdownOptionGroup[];\n};\n\nfunction TermDropdown({isOpen, optionGroups, handleSelect}: TermDropdownProps) {\n  return (\n    <DropdownContainer isOpen={isOpen}>\n      <DropdownItemsList>\n        {optionGroups.map(group => {\n          const {title, options} = group;\n          return (\n            <Fragment key={title}>\n              <ListItem>\n                <DropdownTitle>{title}</DropdownTitle>\n              </ListItem>\n              {options.map(option => {\n                return (\n                  <DropdownListItem\n                    key={option.value}\n                    className={option.active ? 'active' : undefined}\n                    onClick={() => handleSelect(option)}\n                    // prevent the blur event on the input from firing\n                    onMouseDown={event => event.preventDefault()}\n                    // scroll into view if it is the active element\n                    ref={element =>\n                      option.active && element?.scrollIntoView?.({block: 'nearest'})\n                    }\n                  >\n                    <DropdownItemTitleWrapper>{option.value}</DropdownItemTitleWrapper>\n                  </DropdownListItem>\n                );\n              })}\n              {options.length === 0 && <Info>{t('No items found')}</Info>}\n            </Fragment>\n          );\n        })}\n      </DropdownItemsList>\n    </DropdownContainer>\n  );\n}\n\nfunction makeFieldOptions(\n  columns: Column[],\n  partialTerm: string | null\n): DropdownOptionGroup {\n  const fieldValues = new Set<string>();\n  const options = columns\n    .filter(({kind}) => kind !== 'equation')\n    .filter(isLegalEquationColumn)\n    .map(option => ({\n      kind: 'field' as const,\n      active: false,\n      value: generateFieldAsString(option),\n    }))\n    .filter(({value}) => {\n      if (fieldValues.has(value)) {\n        return false;\n      }\n      fieldValues.add(value);\n      return true;\n    })\n    .filter(({value}) => (partialTerm ? value.includes(partialTerm) : true));\n\n  return {\n    title: 'Fields',\n    options,\n  };\n}\n\nfunction makeOperatorOptions(partialTerm: string | null): DropdownOptionGroup {\n  const options = ['+', '-', '*', '/', '(', ')']\n    .filter(operator => (partialTerm ? operator.includes(partialTerm) : true))\n    .map(operator => ({\n      kind: 'operator' as const,\n      active: false,\n      value: operator,\n    }));\n\n  return {\n    title: 'Operators',\n    options,\n  };\n}\n\nfunction makeOptions(\n  columns: Column[],\n  partialTerm: string | null,\n  hideFieldOptions?: boolean\n): DropdownOptionGroup[] {\n  if (hideFieldOptions) {\n    return [makeOperatorOptions(partialTerm)];\n  }\n\n  return [makeFieldOptions(columns, partialTerm), makeOperatorOptions(partialTerm)];\n}\n\nconst DropdownContainer = styled('div')<{isOpen: boolean}>`\n  /* Container has a border that we need to account for */\n  display: ${p => (p.isOpen ? 'block' : 'none')};\n  position: absolute;\n  top: 100%;\n  left: -1px;\n  right: -1px;\n  z-index: ${p => p.theme.zIndex.dropdown};\n  background: ${p => p.theme.background};\n  box-shadow: ${p => p.theme.dropShadowLight};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadiusBottom};\n  max-height: 300px;\n  overflow-y: auto;\n`;\n\nconst DropdownItemsList = styled('ul')`\n  padding-left: 0;\n  list-style: none;\n  margin-bottom: 0;\n`;\n\nconst ListItem = styled('li')`\n  &:not(:last-child) {\n    border-bottom: 1px solid ${p => p.theme.innerBorder};\n  }\n`;\n\nconst DropdownTitle = styled('header')`\n  display: flex;\n  align-items: center;\n\n  background-color: ${p => p.theme.backgroundSecondary};\n  color: ${p => p.theme.gray300};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  margin: 0;\n  padding: ${space(1)} ${space(2)};\n\n  & > svg {\n    margin-right: ${space(1)};\n  }\n`;\n\nconst DropdownListItem = styled(ListItem)`\n  scroll-margin: 40px 0;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1)} ${space(2)};\n  cursor: pointer;\n\n  &:hover,\n  &.active {\n    background: ${p => p.theme.hover};\n  }\n`;\n\nconst DropdownItemTitleWrapper = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0;\n  line-height: ${p => p.theme.text.lineHeightHeading};\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst Info = styled('div')`\n  display: flex;\n  padding: ${space(1)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray300};\n\n  &:not(:last-child) {\n    border-bottom: 1px solid ${p => p.theme.innerBorder};\n  }\n`;\n","import {Component, createRef} from 'react';\nimport {components, SingleValueProps} from 'react-select';\nimport styled from '@emotion/styled';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\nimport Input, {InputProps} from 'sentry/components/input';\nimport Tag from 'sentry/components/tag';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {pulse} from 'sentry/styles/animations';\nimport space from 'sentry/styles/space';\nimport {SelectValue} from 'sentry/types';\nimport {\n  AggregateParameter,\n  AggregationKeyWithAlias,\n  AGGREGATIONS,\n  Column,\n  ColumnType,\n  DEPRECATED_FIELDS,\n  QueryFieldValue,\n  ValidateColumnTypes,\n} from 'sentry/utils/discover/fields';\nimport {SESSIONS_OPERATIONS} from 'sentry/views/dashboardsV2/widgetBuilder/releaseWidget/fields';\n\nimport ArithmeticInput from './arithmeticInput';\nimport {FieldValue, FieldValueColumns, FieldValueKind} from './types';\n\nexport type FieldValueOption = SelectValue<FieldValue>;\n\ntype FieldOptions = Record<string, FieldValueOption>;\n\n// Intermediate type that combines the current column\n// data with the AggregateParameter type.\ntype ParameterDescription =\n  | {\n      dataType: ColumnType;\n      kind: 'value';\n      required: boolean;\n      value: string;\n      placeholder?: string;\n    }\n  | {\n      kind: 'column';\n      options: FieldValueOption[];\n      required: boolean;\n      value: FieldValue | null;\n    }\n  | {\n      dataType: string;\n      kind: 'dropdown';\n      options: SelectValue<string>[];\n      required: boolean;\n      value: string;\n      placeholder?: string;\n    };\n\ntype Props = {\n  fieldOptions: FieldOptions;\n  fieldValue: QueryFieldValue;\n  onChange: (fieldValue: QueryFieldValue) => void;\n  className?: string;\n  disabled?: boolean;\n  error?: string;\n  /**\n   * Function to filter the options that are used as parameters for function/aggregate.\n   */\n  filterAggregateParameters?: (\n    option: FieldValueOption,\n    fieldValue?: QueryFieldValue\n  ) => boolean;\n  /**\n   * Filter the options in the primary selector. Useful if you only want to\n   * show a subset of selectable items.\n   *\n   * NOTE: This is different from passing an already filtered fieldOptions\n   * list, as tag items in the list may be used as parameters to functions.\n   */\n  filterPrimaryOptions?: (option: FieldValueOption) => boolean;\n  /**\n   * The number of columns to render. Columns that do not have a parameter will\n   * render an empty parameter placeholder. Leave blank to avoid adding spacers.\n   */\n  gridColumns?: number;\n  hideParameterSelector?: boolean;\n  hidePrimarySelector?: boolean;\n  /**\n   * Whether or not to add labels inside of the input fields, currently only\n   * used for the metric alert builder.\n   */\n  inFieldLabels?: boolean;\n  /**\n   * This will be displayed in the select if there are no fields\n   */\n  noFieldsMessage?: string;\n  otherColumns?: Column[];\n  placeholder?: string;\n  /**\n   * Whether or not to add the tag explaining the FieldValueKind of each field\n   */\n  shouldRenderTag?: boolean;\n  skipParameterPlaceholder?: boolean;\n  takeFocus?: boolean;\n};\n\n// Type for completing generics in react-select\ntype OptionType = {\n  label: string;\n  value: FieldValue;\n};\n\nclass QueryField extends Component<Props> {\n  FieldSelectComponents = {\n    SingleValue: ({data, ...props}: SingleValueProps<OptionType>) => {\n      return (\n        <components.SingleValue data={data} {...props}>\n          <span data-test-id=\"label\">{data.label}</span>\n          {data.value && this.renderTag(data.value.kind, data.label)}\n        </components.SingleValue>\n      );\n    },\n  };\n\n  FieldSelectStyles = {\n    singleValue(provided: React.CSSProperties) {\n      const custom = {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      };\n      return {...provided, ...custom};\n    },\n  };\n\n  handleFieldChange = (selected?: FieldValueOption | null) => {\n    if (!selected) {\n      return;\n    }\n    const {value} = selected;\n    const current = this.props.fieldValue;\n    let fieldValue: QueryFieldValue = cloneDeep(this.props.fieldValue);\n\n    switch (value.kind) {\n      case FieldValueKind.TAG:\n      case FieldValueKind.MEASUREMENT:\n      case FieldValueKind.CUSTOM_MEASUREMENT:\n      case FieldValueKind.BREAKDOWN:\n      case FieldValueKind.FIELD:\n        fieldValue = {kind: 'field', field: value.meta.name};\n        break;\n      case FieldValueKind.NUMERIC_METRICS:\n        fieldValue = {\n          kind: 'calculatedField',\n          field: value.meta.name,\n        };\n        break;\n      case FieldValueKind.FUNCTION:\n        if (current.kind === 'function') {\n          fieldValue = {\n            kind: 'function',\n            function: [\n              value.meta.name as AggregationKeyWithAlias,\n              current.function[1],\n              current.function[2],\n              current.function[3],\n            ],\n          };\n        } else {\n          fieldValue = {\n            kind: 'function',\n            function: [\n              value.meta.name as AggregationKeyWithAlias,\n              '',\n              undefined,\n              undefined,\n            ],\n          };\n        }\n        break;\n      case FieldValueKind.EQUATION:\n        fieldValue = {\n          kind: 'equation',\n          field: value.meta.name,\n          alias: value.meta.name,\n        };\n        break;\n      default:\n        throw new Error('Invalid field type found in column picker');\n    }\n\n    if (value.kind === FieldValueKind.FUNCTION) {\n      value.meta.parameters.forEach((param: AggregateParameter, i: number) => {\n        if (fieldValue.kind !== 'function') {\n          return;\n        }\n        if (param.kind === 'column') {\n          const field = this.getFieldOrTagOrMeasurementValue(fieldValue.function[i + 1]);\n          if (field === null) {\n            fieldValue.function[i + 1] = param.defaultValue || '';\n          } else if (\n            (field.kind === FieldValueKind.FIELD ||\n              field.kind === FieldValueKind.TAG ||\n              field.kind === FieldValueKind.MEASUREMENT ||\n              field.kind === FieldValueKind.CUSTOM_MEASUREMENT ||\n              field.kind === FieldValueKind.METRICS ||\n              field.kind === FieldValueKind.BREAKDOWN) &&\n            validateColumnTypes(param.columnTypes as ValidateColumnTypes, field)\n          ) {\n            // New function accepts current field.\n            fieldValue.function[i + 1] = field.meta.name;\n          } else {\n            // field does not fit within new function requirements, use the default.\n            fieldValue.function[i + 1] = param.defaultValue || '';\n            fieldValue.function[i + 2] = undefined;\n            fieldValue.function[i + 3] = undefined;\n          }\n        } else {\n          fieldValue.function[i + 1] = param.defaultValue || '';\n        }\n      });\n\n      if (fieldValue.kind === 'function') {\n        if (value.meta.parameters.length === 0) {\n          fieldValue.function = [fieldValue.function[0], '', undefined, undefined];\n        } else if (value.meta.parameters.length === 1) {\n          fieldValue.function[2] = undefined;\n          fieldValue.function[3] = undefined;\n        } else if (value.meta.parameters.length === 2) {\n          fieldValue.function[3] = undefined;\n        }\n      }\n    }\n\n    this.triggerChange(fieldValue);\n  };\n\n  handleEquationChange = (value: string) => {\n    const newColumn = cloneDeep(this.props.fieldValue);\n    if (newColumn.kind === FieldValueKind.EQUATION) {\n      newColumn.field = value;\n    }\n    this.triggerChange(newColumn);\n  };\n\n  handleFieldParameterChange = ({value}) => {\n    const newColumn = cloneDeep(this.props.fieldValue);\n    if (newColumn.kind === 'function') {\n      newColumn.function[1] = value.meta.name;\n    }\n    this.triggerChange(newColumn);\n  };\n\n  handleDropdownParameterChange = (index: number) => {\n    return (value: SelectValue<string>) => {\n      const newColumn = cloneDeep(this.props.fieldValue);\n      if (newColumn.kind === 'function') {\n        newColumn.function[index] = value.value;\n      }\n      this.triggerChange(newColumn);\n    };\n  };\n\n  handleScalarParameterChange = (index: number) => {\n    return (value: string) => {\n      const newColumn = cloneDeep(this.props.fieldValue);\n      if (newColumn.kind === 'function') {\n        newColumn.function[index] = value;\n      }\n      this.triggerChange(newColumn);\n    };\n  };\n\n  triggerChange(fieldValue: QueryFieldValue) {\n    this.props.onChange(fieldValue);\n  }\n\n  getFieldOrTagOrMeasurementValue(\n    name: string | undefined,\n    functions: string[] = []\n  ): FieldValue | null {\n    const {fieldOptions} = this.props;\n    if (name === undefined) {\n      return null;\n    }\n\n    const fieldName = `field:${name}`;\n    if (fieldOptions[fieldName]) {\n      return fieldOptions[fieldName].value;\n    }\n\n    const measurementName = `measurement:${name}`;\n    if (fieldOptions[measurementName]) {\n      return fieldOptions[measurementName].value;\n    }\n\n    const spanOperationBreakdownName = `span_op_breakdown:${name}`;\n    if (fieldOptions[spanOperationBreakdownName]) {\n      return fieldOptions[spanOperationBreakdownName].value;\n    }\n\n    const equationName = `equation:${name}`;\n    if (fieldOptions[equationName]) {\n      return fieldOptions[equationName].value;\n    }\n\n    const tagName =\n      name.indexOf('tags[') === 0\n        ? `tag:${name.replace(/tags\\[(.*?)\\]/, '$1')}`\n        : `tag:${name}`;\n\n    if (fieldOptions[tagName]) {\n      return fieldOptions[tagName].value;\n    }\n\n    if (name.length > 0) {\n      // Custom Measurement. Probably not appearing in field options because\n      // no metrics found within selected time range\n      if (name.startsWith('measurements.')) {\n        return {\n          kind: FieldValueKind.CUSTOM_MEASUREMENT,\n          meta: {\n            name,\n            dataType: 'number',\n            functions,\n          },\n        };\n      }\n      // Likely a tag that was deleted but left behind in a saved query\n      // Cook up a tag option so select control works.\n      return {\n        kind: FieldValueKind.TAG,\n        meta: {\n          name,\n          dataType: 'string',\n          unknown: true,\n        },\n      };\n    }\n    return null;\n  }\n\n  getFieldData() {\n    let field: FieldValue | null = null;\n\n    const {fieldValue} = this.props;\n    let {fieldOptions} = this.props;\n\n    if (fieldValue?.kind === 'function') {\n      const funcName = `function:${fieldValue.function[0]}`;\n      if (fieldOptions[funcName] !== undefined) {\n        field = fieldOptions[funcName].value;\n      }\n    }\n\n    if (fieldValue?.kind === 'field' || fieldValue?.kind === 'calculatedField') {\n      field = this.getFieldOrTagOrMeasurementValue(fieldValue.field);\n      fieldOptions = this.appendFieldIfUnknown(fieldOptions, field);\n    }\n\n    let parameterDescriptions: ParameterDescription[] = [];\n    // Generate options and values for each parameter.\n    if (\n      field &&\n      field.kind === FieldValueKind.FUNCTION &&\n      field.meta.parameters.length > 0 &&\n      fieldValue?.kind === FieldValueKind.FUNCTION\n    ) {\n      parameterDescriptions = field.meta.parameters.map(\n        (param, index: number): ParameterDescription => {\n          if (param.kind === 'column') {\n            const fieldParameter = this.getFieldOrTagOrMeasurementValue(\n              fieldValue.function[1],\n              [fieldValue.function[0]]\n            );\n            fieldOptions = this.appendFieldIfUnknown(fieldOptions, fieldParameter);\n            return {\n              kind: 'column',\n              value: fieldParameter,\n              required: param.required,\n              options: Object.values(fieldOptions).filter(\n                ({value}) =>\n                  (value.kind === FieldValueKind.FIELD ||\n                    value.kind === FieldValueKind.TAG ||\n                    value.kind === FieldValueKind.MEASUREMENT ||\n                    value.kind === FieldValueKind.CUSTOM_MEASUREMENT ||\n                    value.kind === FieldValueKind.METRICS ||\n                    value.kind === FieldValueKind.BREAKDOWN) &&\n                  validateColumnTypes(param.columnTypes as ValidateColumnTypes, value)\n              ),\n            };\n          }\n          if (param.kind === 'dropdown') {\n            return {\n              kind: 'dropdown',\n              options: param.options,\n              dataType: param.dataType,\n              required: param.required,\n              value:\n                (fieldValue.kind === 'function' && fieldValue.function[index + 1]) ||\n                param.defaultValue ||\n                '',\n            };\n          }\n\n          return {\n            kind: 'value',\n            value:\n              (fieldValue.kind === 'function' && fieldValue.function[index + 1]) ||\n              param.defaultValue ||\n              '',\n            dataType: param.dataType,\n            required: param.required,\n            placeholder: param.placeholder,\n          };\n        }\n      );\n    }\n    return {field, fieldOptions, parameterDescriptions};\n  }\n\n  appendFieldIfUnknown(\n    fieldOptions: FieldOptions,\n    field: FieldValue | null\n  ): FieldOptions {\n    if (!field) {\n      return fieldOptions;\n    }\n\n    if (field && field.kind === FieldValueKind.TAG && field.meta.unknown) {\n      // Clone the options so we don't mutate other rows.\n      fieldOptions = Object.assign({}, fieldOptions);\n      fieldOptions[field.meta.name] = {label: field.meta.name, value: field};\n    } else if (field && field.kind === FieldValueKind.CUSTOM_MEASUREMENT) {\n      fieldOptions = Object.assign({}, fieldOptions);\n      fieldOptions[`measurement:${field.meta.name}`] = {\n        label: field.meta.name,\n        value: field,\n      };\n    }\n\n    return fieldOptions;\n  }\n\n  renderParameterInputs(parameters: ParameterDescription[]): React.ReactNode[] {\n    const {\n      disabled,\n      inFieldLabels,\n      filterAggregateParameters,\n      hideParameterSelector,\n      skipParameterPlaceholder,\n      fieldValue,\n    } = this.props;\n\n    const inputs = parameters.map((descriptor: ParameterDescription, index: number) => {\n      if (descriptor.kind === 'column' && descriptor.options.length > 0) {\n        if (hideParameterSelector) {\n          return null;\n        }\n        const aggregateParameters = filterAggregateParameters\n          ? descriptor.options.filter(option =>\n              filterAggregateParameters(option, fieldValue)\n            )\n          : descriptor.options;\n\n        aggregateParameters.forEach(opt => {\n          opt.trailingItems = this.renderTag(opt.value.kind, String(opt.label));\n        });\n\n        return (\n          <SelectControl\n            key=\"select\"\n            name=\"parameter\"\n            menuPlacement=\"auto\"\n            placeholder={t('Select value')}\n            options={aggregateParameters}\n            value={descriptor.value}\n            required={descriptor.required}\n            onChange={this.handleFieldParameterChange}\n            inFieldLabel={inFieldLabels ? t('Parameter: ') : undefined}\n            disabled={disabled}\n            styles={!inFieldLabels ? this.FieldSelectStyles : undefined}\n            components={this.FieldSelectComponents}\n          />\n        );\n      }\n      if (descriptor.kind === 'value') {\n        const inputProps = {\n          required: descriptor.required,\n          value: descriptor.value,\n          onUpdate: this.handleScalarParameterChange(index + 1),\n          placeholder: descriptor.placeholder,\n          disabled,\n        };\n        switch (descriptor.dataType) {\n          case 'number':\n            return (\n              <BufferedInput\n                name=\"refinement\"\n                key=\"parameter:number\"\n                type=\"text\"\n                inputMode=\"numeric\"\n                pattern=\"[0-9]*(\\.[0-9]*)?\"\n                {...inputProps}\n              />\n            );\n          case 'integer':\n            return (\n              <BufferedInput\n                name=\"refinement\"\n                key=\"parameter:integer\"\n                type=\"text\"\n                inputMode=\"numeric\"\n                pattern=\"[0-9]*\"\n                {...inputProps}\n              />\n            );\n          default:\n            return (\n              <BufferedInput\n                name=\"refinement\"\n                key=\"parameter:text\"\n                type=\"text\"\n                {...inputProps}\n              />\n            );\n        }\n      }\n      if (descriptor.kind === 'dropdown') {\n        return (\n          <SelectControl\n            key=\"dropdown\"\n            name=\"dropdown\"\n            menuPlacement=\"auto\"\n            placeholder={t('Select value')}\n            options={descriptor.options}\n            value={descriptor.value}\n            required={descriptor.required}\n            onChange={this.handleDropdownParameterChange(index + 1)}\n            inFieldLabel={inFieldLabels ? t('Parameter: ') : undefined}\n            disabled={disabled}\n          />\n        );\n      }\n      throw new Error(`Unknown parameter type encountered for ${this.props.fieldValue}`);\n    });\n\n    if (skipParameterPlaceholder) {\n      return inputs;\n    }\n\n    // Add enough disabled inputs to fill the grid up.\n    // We always have 1 input.\n    const {gridColumns} = this.props;\n    const requiredInputs = (gridColumns ?? inputs.length + 1) - inputs.length - 1;\n    if (gridColumns !== undefined && requiredInputs > 0) {\n      for (let i = 0; i < requiredInputs; i++) {\n        inputs.push(<BlankSpace key={i} />);\n      }\n    }\n\n    return inputs;\n  }\n\n  renderTag(kind: FieldValueKind, label: string) {\n    const {shouldRenderTag} = this.props;\n    if (shouldRenderTag === false) {\n      return null;\n    }\n    let text, tagType;\n    switch (kind) {\n      case FieldValueKind.FUNCTION:\n        text = 'f(x)';\n        tagType = 'success';\n        break;\n      case FieldValueKind.CUSTOM_MEASUREMENT:\n      case FieldValueKind.MEASUREMENT:\n        text = 'field';\n        tagType = 'highlight';\n        break;\n      case FieldValueKind.BREAKDOWN:\n        text = 'field';\n        tagType = 'highlight';\n        break;\n      case FieldValueKind.TAG:\n        text = kind;\n        tagType = 'warning';\n        break;\n      case FieldValueKind.NUMERIC_METRICS:\n        text = 'f(x)';\n        tagType = 'success';\n        break;\n      case FieldValueKind.FIELD:\n      case FieldValueKind.METRICS:\n        text = DEPRECATED_FIELDS.includes(label) ? 'deprecated' : 'field';\n        tagType = 'highlight';\n        break;\n      default:\n        text = kind;\n    }\n    return <Tag type={tagType}>{text}</Tag>;\n  }\n\n  render() {\n    const {\n      className,\n      takeFocus,\n      filterPrimaryOptions,\n      fieldValue,\n      inFieldLabels,\n      disabled,\n      error,\n      hidePrimarySelector,\n      gridColumns,\n      otherColumns,\n      placeholder,\n      noFieldsMessage,\n      skipParameterPlaceholder,\n    } = this.props;\n    const {field, fieldOptions, parameterDescriptions} = this.getFieldData();\n\n    const allFieldOptions = filterPrimaryOptions\n      ? Object.values(fieldOptions).filter(filterPrimaryOptions)\n      : Object.values(fieldOptions);\n\n    allFieldOptions.forEach(opt => {\n      opt.trailingItems = this.renderTag(opt.value.kind, String(opt.label));\n    });\n\n    const selectProps: ControlProps<FieldValueOption> = {\n      name: 'field',\n      options: Object.values(allFieldOptions),\n      placeholder: placeholder ?? t('(Required)'),\n      value: field,\n      onChange: this.handleFieldChange,\n      inFieldLabel: inFieldLabels ? t('Function: ') : undefined,\n      disabled,\n      noOptionsMessage: () => noFieldsMessage,\n      menuPlacement: 'auto',\n    };\n    if (takeFocus && field === null) {\n      selectProps.autoFocus = true;\n    }\n\n    const parameters = this.renderParameterInputs(parameterDescriptions);\n\n    if (fieldValue?.kind === FieldValueKind.EQUATION) {\n      return (\n        <Container\n          className={className}\n          gridColumns={1}\n          tripleLayout={false}\n          error={error !== undefined}\n        >\n          <ArithmeticInput\n            name=\"arithmetic\"\n            key=\"parameter:text\"\n            type=\"text\"\n            required\n            value={fieldValue.field}\n            onUpdate={this.handleEquationChange}\n            options={otherColumns}\n            placeholder={t('Equation')}\n          />\n          {error ? (\n            <ArithmeticError title={error}>\n              <IconWarning color=\"red300\" />\n            </ArithmeticError>\n          ) : null}\n        </Container>\n      );\n    }\n\n    // if there's more than 2 parameters, set gridColumns to 2 so they go onto the next line instead\n    const containerColumns =\n      parameters.length > 2 ? 2 : gridColumns ? gridColumns : parameters.length + 1;\n\n    let gridColumnsQuantity: undefined | number = undefined;\n\n    if (skipParameterPlaceholder) {\n      // if the selected field is a function and has parameters, we would like to display each value in separate columns.\n      // Otherwise the field should be displayed in a column, taking up all available space and not displaying the \"no parameter\" field\n      if (fieldValue.kind !== 'function') {\n        gridColumnsQuantity = 1;\n      } else {\n        const operation =\n          AGGREGATIONS[fieldValue.function[0]] ??\n          SESSIONS_OPERATIONS[fieldValue.function[0]];\n        if (operation.parameters.length > 0) {\n          if (containerColumns === 3 && operation.parameters.length === 1) {\n            gridColumnsQuantity = 2;\n          } else {\n            gridColumnsQuantity = containerColumns;\n          }\n        } else {\n          gridColumnsQuantity = 1;\n        }\n      }\n    }\n\n    return (\n      <Container\n        className={className}\n        gridColumns={gridColumnsQuantity ?? containerColumns}\n        tripleLayout={gridColumns === 3 && parameters.length > 2}\n      >\n        {!hidePrimarySelector && (\n          <SelectControl\n            {...selectProps}\n            styles={!inFieldLabels ? this.FieldSelectStyles : undefined}\n            components={this.FieldSelectComponents}\n          />\n        )}\n        {parameters}\n      </Container>\n    );\n  }\n}\n\nfunction validateColumnTypes(\n  columnTypes: ValidateColumnTypes,\n  input: FieldValueColumns\n): boolean {\n  if (typeof columnTypes === 'function') {\n    return columnTypes({name: input.meta.name, dataType: input.meta.dataType});\n  }\n\n  return (columnTypes as string[]).includes(input.meta.dataType);\n}\n\nconst Container = styled('div')<{\n  gridColumns: number;\n  tripleLayout: boolean;\n  error?: boolean;\n}>`\n  display: grid;\n  ${p =>\n    p.tripleLayout\n      ? `grid-template-columns: 1fr 2fr;`\n      : `grid-template-columns: repeat(${p.gridColumns}, 1fr) ${p.error ? 'auto' : ''};`}\n  gap: ${space(1)};\n  align-items: center;\n\n  flex-grow: 1;\n`;\n\ninterface BufferedInputProps extends InputProps {\n  onUpdate: (value: string) => void;\n  value: string;\n}\ntype InputState = {value: string};\n\n/**\n * Because controlled inputs fire onChange on every key stroke,\n * we can't update the QueryField that often as it would re-render\n * the input elements causing focus to be lost.\n *\n * Using a buffered input lets us throttle rendering and enforce data\n * constraints better.\n */\nclass BufferedInput extends Component<BufferedInputProps, InputState> {\n  constructor(props: BufferedInputProps) {\n    super(props);\n    this.input = createRef();\n  }\n\n  state: InputState = {\n    value: this.props.value,\n  };\n\n  private input: React.RefObject<HTMLInputElement>;\n\n  get isValid() {\n    if (!this.input.current) {\n      return true;\n    }\n    return this.input.current.validity.valid;\n  }\n\n  handleBlur = () => {\n    if (this.props.required && this.state.value === '') {\n      // Handle empty strings separately because we don't pass required\n      // to input elements, causing isValid to return true\n      this.setState({value: this.props.value});\n    } else if (this.isValid) {\n      this.props.onUpdate(this.state.value);\n    } else {\n      this.setState({value: this.props.value});\n    }\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (this.isValid) {\n      this.setState({value: event.target.value});\n    }\n  };\n\n  render() {\n    const {onUpdate: _, ...props} = this.props;\n    return (\n      <StyledInput\n        {...props}\n        ref={this.input}\n        className=\"form-control\"\n        value={this.state.value}\n        onChange={this.handleChange}\n        onBlur={this.handleBlur}\n      />\n    );\n  }\n}\n\n// Set a min-width to allow shrinkage in grid.\nconst StyledInput = styled(Input)`\n  /* Match the height of the select boxes */\n  height: 41px;\n  min-width: 50px;\n`;\n\nconst BlankSpace = styled('div')`\n  /* Match the height of the select boxes */\n  height: 41px;\n  min-width: 50px;\n  background: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:after {\n    font-size: ${p => p.theme.fontSizeMedium};\n    content: '${t('No parameter')}';\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nconst ArithmeticError = styled(Tooltip)`\n  color: ${p => p.theme.red300};\n  animation: ${() => pulse(1.15)} 1s ease infinite;\n  display: flex;\n`;\n\nexport {QueryField};\n"],"names":["pick","canIncludePreviousPeriod","getPeriod","PERFORMANCE_URL_PARAM","doEventsRequest","api","organization","project","environment","team","period","start","end","interval","comparisonDelta","includePrevious","query","yAxis","field","topEvents","orderby","partial","withoutZerofill","referrer","queryBatching","generatePathname","queryExtras","excludeOther","includeAllArgs","pathname","slug","shouldDoublePeriod","urlQuery","Object","fromEntries","entries","undefined","filter","value","periodObj","queryObject","batchRequest","requestPromise","fetchTagFacets","orgSlug","urlParams","values","queryOption","fetchTotalCount","then","res","count","AreaSeries","BaseChart","AreaChart","series","stacked","colors","props","map","i","seriesName","data","otherSeriesProps","stack","name","lineStyle","color","opacity","width","areaStyle","animation","animationThreshold","animationDuration","LoadingMask","LoadingPanel","height","_height","p","defaultProps","LineSeries","useEffect","assign","flatten","memoize","omit","fetchTagValues","SmartSearchBar","NEGATION_OPERATOR","SEARCH_WILDCARD","SavedSearchType","defined","FIELD_TAGS","isAggregateField","isEquation","isMeasurement","SEMVER_TAGS","SPAN_OP_BREAKDOWN_FIELDS","TRACING_FIELDS","FieldKey","FieldKind","Measurements","useApi","withTags","SEARCH_SPECIAL_CHARS_REGEXP","RegExp","getFunctionTags","fields","item","keys","includes","key","kind","FUNCTION","getFieldTags","FIELD","getMeasurementTags","measurements","MEASUREMENT","getSpanTags","METRICS","getSemverTags","SearchBar","maxSearchItems","tags","omitTags","projectIds","includeSessionTagsValues","maxMenuHeight","getEventFieldValues","cache","clear","tag","endpointParams","projectIdStrings","String","Promise","resolve","results","Error","getTagList","functionTags","fieldTags","measurementsWithKind","spanTags","semverTags","orgHasPerformanceView","features","combinedTags","tagsWithKind","TAG","sortedTagKeys","sort","a","b","toLowerCase","localeCompare","has","HAS","predefined","EVENT","replace","theme","backgroundSecondary","borderRadius","moment","DEFAULT_STATS_PERIOD","getUtcDateString","statsPeriod","periodNumber","periodLength","match","parseInt","formattedStart","formattedEnd","diff","previousPeriodStart","subtract","Component","TagStore","getDisplayName","WrappedComponent","WithTags","getStateTags","listen","setState","componentWillUnmount","unsubscribe","render","state","createRef","Fragment","PureComponent","isEqual","Input","t","space","generateFieldAsString","isLegalEquationColumn","NONE_SELECTED","ArithmeticInput","partialTerm","rawOptions","options","dropdownVisible","dropdownOptionGroups","makeOptions","hideFieldOptions","activeSelection","input","current","blur","position","focus","setSelectionRange","event","target","updateAutocompleteOptions","onUpdate","startedSelection","preventDefault","newOptionGroups","flattenedOptions","group","flat","length","newSelection","active","selection","getSelection","handleSelect","option","prefix","suffix","splitQuery","getDerivedStateFromProps","changed","getCursorPosition","selectionStart","currentPosition","matches","substring","matchAll","startOfTerm","index","cursorOffset","slice","search","endOfTerm","term","_onUpdate","_options","handleClick","handleChange","handleBlur","handleFocus","handleKeyDown","Container","border","dropShadowLight","background","isOpen","StyledInput","TermDropdown","optionGroups","title","element","scrollIntoView","block","makeFieldOptions","columns","fieldValues","Set","add","makeOperatorOptions","operator","DropdownContainer","zIndex","dropdown","borderRadiusBottom","DropdownItemsList","ListItem","innerBorder","DropdownTitle","gray300","fontSizeMedium","DropdownListItem","fontSizeLarge","hover","DropdownItemTitleWrapper","textColor","text","lineHeightHeading","overflowEllipsis","Info","components","cloneDeep","SelectControl","Tag","Tooltip","IconWarning","pulse","AGGREGATIONS","DEPRECATED_FIELDS","SESSIONS_OPERATIONS","FieldValueKind","QueryField","SingleValue","label","renderTag","singleValue","provided","custom","display","justifyContent","alignItems","selected","fieldValue","CUSTOM_MEASUREMENT","BREAKDOWN","meta","NUMERIC_METRICS","function","EQUATION","alias","parameters","forEach","param","getFieldOrTagOrMeasurementValue","defaultValue","validateColumnTypes","columnTypes","triggerChange","newColumn","onChange","functions","fieldOptions","fieldName","measurementName","spanOperationBreakdownName","equationName","tagName","indexOf","startsWith","dataType","unknown","getFieldData","funcName","appendFieldIfUnknown","parameterDescriptions","fieldParameter","required","placeholder","renderParameterInputs","disabled","inFieldLabels","filterAggregateParameters","hideParameterSelector","skipParameterPlaceholder","inputs","descriptor","aggregateParameters","opt","trailingItems","handleFieldParameterChange","FieldSelectStyles","FieldSelectComponents","inputProps","handleScalarParameterChange","handleDropdownParameterChange","gridColumns","requiredInputs","push","shouldRenderTag","tagType","className","takeFocus","filterPrimaryOptions","error","hidePrimarySelector","otherColumns","noFieldsMessage","allFieldOptions","selectProps","handleFieldChange","inFieldLabel","noOptionsMessage","menuPlacement","autoFocus","handleEquationChange","containerColumns","gridColumnsQuantity","operation","tripleLayout","BufferedInput","constructor","isValid","validity","valid","_","BlankSpace","ArithmeticError","red300"],"sourceRoot":""}