{"version":3,"file":"chunks/app_views_settings_components_settingsNavigation_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/settings/components/settingsNavItem.tsx","webpack:///./app/views/settings/components/settingsNavigation.tsx","webpack:///./app/views/settings/components/settingsNavigationGroup.tsx"],"sourcesContent":["import {Fragment, ReactElement} from 'react';\nimport {Link as RouterLink} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Badge from 'sentry/components/badge';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  label: React.ReactNode;\n  to: React.ComponentProps<RouterLink>['to'];\n  badge?: string | number | null | ReactElement;\n  id?: string;\n  index?: boolean;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\nconst SettingsNavItem = ({badge, label, index, id, ...props}: Props) => {\n  const LabelHook = HookOrDefault({\n    hookName: 'sidebar:item-label',\n    defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n  });\n\n  let renderedBadge: React.ReactNode;\n\n  if (badge === 'new') {\n    renderedBadge = <FeatureBadge type=\"new\" />;\n  } else if (badge === 'beta') {\n    renderedBadge = <FeatureBadge type=\"beta\" />;\n  } else if (badge === 'warning') {\n    renderedBadge = (\n      <Tooltip title={t('This setting needs review')} position=\"right\">\n        <StyledBadge text={badge} type=\"warning\" />\n      </Tooltip>\n    );\n  } else if (typeof badge === 'string' || typeof badge === 'number') {\n    renderedBadge = <StyledBadge text={badge} />;\n  } else {\n    renderedBadge = badge;\n  }\n\n  return (\n    <StyledNavItem onlyActiveOnIndex={index} activeClassName=\"active\" {...props}>\n      <LabelHook id={id}>{label}</LabelHook>\n      {badge ? renderedBadge : null}\n    </StyledNavItem>\n  );\n};\n\nconst StyledNavItem = styled(RouterLink)`\n  display: block;\n  color: ${p => p.theme.gray300};\n  font-size: 14px;\n  line-height: 30px;\n  position: relative;\n\n  &.active {\n    color: ${p => p.theme.textColor};\n\n    &:before {\n      background: ${p => p.theme.active};\n    }\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n    outline: none;\n  }\n\n  &.focus-visible {\n    outline: none;\n    background: ${p => p.theme.backgroundSecondary};\n    padding-left: 15px;\n    margin-left: -15px;\n    border-radius: 3px;\n\n    &:before {\n      left: -15px;\n    }\n  }\n\n  &:before {\n    position: absolute;\n    content: '';\n    display: block;\n    top: 4px;\n    left: -30px;\n    height: 20px;\n    width: 4px;\n    background: transparent;\n    border-radius: 0 2px 2px 0;\n  }\n`;\n\nconst StyledBadge = styled(Badge)`\n  font-weight: 400;\n  height: auto;\n  line-height: 1;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: 3px ${space(0.75)};\n`;\n\nexport default SettingsNavItem;\n","import {cloneElement, Component} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport space from 'sentry/styles/space';\nimport SettingsNavigationGroup from 'sentry/views/settings/components/settingsNavigationGroup';\nimport {NavigationProps, NavigationSection} from 'sentry/views/settings/types';\n\ntype DefaultProps = {\n  /**\n   * Additional navigation configuration driven by hooks\n   */\n  hookConfigs: NavigationSection[];\n  /**\n   * Additional navigation elements driven from hooks\n   */\n  hooks: React.ReactElement[];\n  /**\n   * How far from the top of the page should the navigation be when stickied.\n   */\n  stickyTop: string;\n};\n\ntype Props = DefaultProps &\n  NavigationProps & {\n    /**\n     * The configuration for this navigation panel\n     */\n    navigationObjects: NavigationSection[];\n  };\n\nclass SettingsNavigation extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    hooks: [],\n    hookConfigs: [],\n    stickyTop: '69px',\n  };\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      scope.setExtra('url', window.location.href);\n      Sentry.captureException(error);\n    });\n  }\n\n  render() {\n    const {navigationObjects, hooks, hookConfigs, stickyTop, ...otherProps} = this.props;\n    const navWithHooks = navigationObjects.concat(hookConfigs);\n\n    return (\n      <PositionStickyWrapper stickyTop={stickyTop}>\n        {navWithHooks.map(config => (\n          <SettingsNavigationGroup key={config.name} {...otherProps} {...config} />\n        ))}\n        {hooks.map((Hook, i) => cloneElement(Hook, {key: `hook-${i}`}))}\n      </PositionStickyWrapper>\n    );\n  }\n}\n\nconst PositionStickyWrapper = styled('div')<{stickyTop: string}>`\n  padding: ${space(4)};\n  padding-right: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    position: sticky;\n    top: ${p => p.stickyTop};\n    overflow: scroll;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n`;\n\nexport default SettingsNavigation;\n","import styled from '@emotion/styled';\n\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport SettingsNavItem from 'sentry/views/settings/components/settingsNavItem';\nimport {NavigationGroupProps} from 'sentry/views/settings/types';\n\nconst SettingsNavigationGroup = (props: NavigationGroupProps) => {\n  const {organization, project, name, items} = props;\n\n  const navLinks = items.map(({path, title, index, show, badge, id, recordAnalytics}) => {\n    if (typeof show === 'function' && !show(props)) {\n      return null;\n    }\n    if (typeof show !== 'undefined' && !show) {\n      return null;\n    }\n    const badgeResult = typeof badge === 'function' ? badge(props) : null;\n    const to = replaceRouterParams(path, {\n      ...(organization ? {orgId: organization.slug} : {}),\n      ...(project ? {projectId: project.slug} : {}),\n    });\n\n    const handleClick = () => {\n      // only call the analytics event if the URL is changing\n      if (recordAnalytics && to !== window.location.pathname) {\n        trackAnalyticsEvent({\n          organization_id: organization ? organization.id : null,\n          project_id: project && project.id,\n          eventName: 'Sidebar Item Clicked',\n          eventKey: 'sidebar.item_clicked',\n          sidebar_item_id: id,\n          dest: path,\n        });\n      }\n    };\n\n    return (\n      <SettingsNavItem\n        key={title}\n        to={to}\n        label={title}\n        index={index}\n        badge={badgeResult}\n        id={id}\n        onClick={handleClick}\n      />\n    );\n  });\n\n  if (!navLinks.some(link => link !== null)) {\n    return null;\n  }\n\n  return (\n    <NavSection data-test-id={name}>\n      <SettingsHeading>{name}</SettingsHeading>\n      {navLinks}\n    </NavSection>\n  );\n};\n\nconst NavSection = styled('div')`\n  margin-bottom: 20px;\n`;\n\nconst SettingsHeading = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n`;\n\nexport default SettingsNavigationGroup;\n"],"names":["Fragment","Link","RouterLink","Badge","FeatureBadge","HookOrDefault","Tooltip","t","space","SettingsNavItem","badge","label","index","id","props","LabelHook","hookName","defaultComponent","children","renderedBadge","StyledNavItem","p","theme","gray300","textColor","active","backgroundSecondary","StyledBadge","fontSizeExtraSmall","cloneElement","Component","Sentry","SettingsNavigationGroup","SettingsNavigation","componentDidCatch","error","errorInfo","withScope","scope","Object","keys","forEach","key","setExtra","window","location","href","captureException","render","navigationObjects","hooks","hookConfigs","stickyTop","otherProps","navWithHooks","concat","map","config","name","Hook","i","PositionStickyWrapper","breakpoints","small","trackAnalyticsEvent","replaceRouterParams","organization","project","items","navLinks","path","title","show","recordAnalytics","badgeResult","to","orgId","slug","projectId","handleClick","pathname","organization_id","project_id","eventName","eventKey","sidebar_item_id","dest","some","link","NavSection","SettingsHeading","subText"],"sourceRoot":""}