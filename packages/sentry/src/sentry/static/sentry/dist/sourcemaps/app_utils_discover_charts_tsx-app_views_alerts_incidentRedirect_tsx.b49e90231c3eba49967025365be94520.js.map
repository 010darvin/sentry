{"version":3,"file":"chunks/app_utils_discover_charts_tsx-app_views_alerts_incidentRedirect_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/discover/charts.tsx","webpack:///./app/views/alerts/incidentRedirect.tsx","webpack:///./app/views/alerts/utils/apiCalls.tsx"],"sourcesContent":["import {LegendComponentOption} from 'echarts';\n\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport {AggregationOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(\n  value: number | null,\n  outputType: AggregationOutputType = 'number'\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  return tooltipFormatterUsingAggregateOutputType(value, outputType);\n}\n\n/**\n * Formatter for chart tooltips that takes the aggregate output type directly\n */\nexport function tooltipFormatterUsingAggregateOutputType(\n  value: number | null,\n  type: string\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    case 'size':\n      return formatBytesBase2(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  outputType: AggregationOutputType,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  return axisLabelFormatterUsingAggregateOutputType(\n    value,\n    outputType,\n    abbreviation,\n    durationUnit\n  );\n}\n\n/**\n * Formatter for chart axis labels that takes the aggregate output type directly\n */\nexport function axisLabelFormatterUsingAggregateOutputType(\n  value: number,\n  type: string,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value, durationUnit);\n    case 'size':\n      return formatBytesBase2(value, 0);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number, durationUnit?: number): string {\n  durationUnit ??= categorizeDuration(value);\n  if (value === 0) {\n    return '0';\n  }\n  switch (durationUnit) {\n    case WEEK: {\n      const label = (value / WEEK).toFixed(0);\n      return t('%swk', label);\n    }\n    case DAY: {\n      const label = (value / DAY).toFixed(0);\n      return t('%sd', label);\n    }\n    case HOUR: {\n      const label = (value / HOUR).toFixed(0);\n      return t('%shr', label);\n    }\n    case MINUTE: {\n      const label = (value / MINUTE).toFixed(0);\n      return t('%smin', label);\n    }\n    case SECOND: {\n      const label = (value / SECOND).toFixed(0);\n      return t('%ss', label);\n    }\n    default:\n      const label = value.toFixed(0);\n      return t('%sms', label);\n  }\n}\n\n/**\n * Given an array of series and an eCharts legend object,\n * finds the range of y values (min and max) based on which series is selected in the legend\n * Assumes series[0] > series[1] > ...\n * @param series Array of eCharts series\n * @param legend eCharts legend object\n * @returns\n */\nexport function findRangeOfMultiSeries(series: Series[], legend?: LegendComponentOption) {\n  let range: {max: number; min: number} | undefined;\n  if (series[0]?.data) {\n    let minSeries = series[0];\n    let maxSeries;\n    series.forEach(({seriesName, data}, idx) => {\n      if (legend?.selected?.[seriesName] !== false && data.length) {\n        minSeries = series[idx];\n        maxSeries ??= series[idx];\n      }\n    });\n    if (maxSeries?.data) {\n      const max = Math.max(\n        ...maxSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      const min = Math.min(\n        ...minSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      range = {max, min};\n    }\n  }\n  return range;\n}\n\n/**\n * Given a eCharts series and legend, returns the unit to be used on the yAxis for a duration chart\n * @param series eCharts series array\n * @param legend eCharts legend object\n * @returns\n */\nexport function getDurationUnit(\n  series: Series[],\n  legend?: LegendComponentOption\n): number {\n  let durationUnit = 0;\n  const range = findRangeOfMultiSeries(series, legend);\n  if (range) {\n    const avg = (range.max + range.min) / 2;\n    durationUnit = categorizeDuration((range.max - range.min) / 5); // avg of 5 yAxis ticks per chart\n\n    const numOfDigits = (avg / durationUnit).toFixed(0).length;\n    if (numOfDigits > 6) {\n      durationUnit = categorizeDuration(avg);\n    }\n  }\n  return durationUnit;\n}\n\n/**\n * Categorizes the duration by Second, Minute, Hour, etc\n * Ex) categorizeDuration(1200) = MINUTE\n * @param value Duration in ms\n */\nexport function categorizeDuration(value): number {\n  if (value >= WEEK) {\n    return WEEK;\n  }\n  if (value >= DAY) {\n    return DAY;\n  }\n  if (value >= HOUR) {\n    return HOUR;\n  }\n  if (value >= MINUTE) {\n    return MINUTE;\n  }\n  if (value >= SECOND) {\n    return SECOND;\n  }\n  return 1;\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport useApi from 'sentry/utils/useApi';\n\nimport {fetchIncident} from './utils/apiCalls';\nimport {alertDetailsLink} from './utils';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{alertId: string; orgId: string}, {}>;\n\n/**\n * Reirects from an incident to the incident's metric alert details page\n */\nfunction IncidentRedirect({organization, params}: Props) {\n  const api = useApi();\n  const [hasError, setHasError] = useState(false);\n\n  const track = useCallback(() => {\n    trackAdvancedAnalyticsEvent('alert_details.viewed', {\n      organization,\n      alert_id: parseInt(params.alertId, 10),\n    });\n  }, [organization, params.alertId]);\n\n  const fetchData = useCallback(async () => {\n    setHasError(false);\n\n    try {\n      const incident = await fetchIncident(api, params.orgId, params.alertId);\n      browserHistory.replace({\n        pathname: alertDetailsLink(organization, incident),\n        query: {alert: incident.identifier},\n      });\n    } catch (err) {\n      setHasError(true);\n    }\n  }, [setHasError, api, params.orgId, params.alertId, organization]);\n\n  useEffect(() => {\n    fetchData();\n    track();\n  }, [fetchData, track]);\n\n  if (hasError) {\n    return <LoadingError onRetry={fetchData} />;\n  }\n\n  return <LoadingIndicator />;\n}\n\nexport default IncidentRedirect;\n","import {Client} from 'sentry/api';\nimport {MetricRule} from 'sentry/views/alerts/rules/metric/types';\n\nimport type {Incident} from '../types';\n\n// Use this api for requests that are getting cancelled\nconst uncancellableApi = new Client();\n\nexport function fetchAlertRule(\n  orgId: string,\n  ruleId: string,\n  query?: Record<string, string>\n): Promise<MetricRule> {\n  return uncancellableApi.requestPromise(\n    `/organizations/${orgId}/alert-rules/${ruleId}/`,\n    {query}\n  );\n}\n\nexport function fetchIncidentsForRule(\n  orgId: string,\n  alertRule: string,\n  start: string,\n  end: string\n): Promise<Incident[]> {\n  return uncancellableApi.requestPromise(`/organizations/${orgId}/incidents/`, {\n    query: {\n      project: '-1',\n      alertRule,\n      includeSnapshots: true,\n      start,\n      end,\n      expand: ['activities', 'seen_by', 'original_alert_rule'],\n    },\n  });\n}\n\nexport function fetchIncident(\n  api: Client,\n  orgId: string,\n  alertId: string\n): Promise<Incident> {\n  return api.requestPromise(`/organizations/${orgId}/incidents/${alertId}/`);\n}\n"],"names":["t","defined","formatBytesBase2","DAY","formatAbbreviatedNumber","formatPercentage","getDuration","HOUR","MINUTE","SECOND","WEEK","tooltipFormatter","value","outputType","tooltipFormatterUsingAggregateOutputType","type","toLocaleString","toString","axisLabelFormatter","abbreviation","durationUnit","axisLabelFormatterUsingAggregateOutputType","axisDuration","categorizeDuration","label","toFixed","findRangeOfMultiSeries","series","legend","range","data","minSeries","maxSeries","forEach","idx","seriesName","selected","length","max","Math","map","filter","min","getDurationUnit","avg","numOfDigits","useCallback","useEffect","useState","browserHistory","LoadingError","LoadingIndicator","trackAdvancedAnalyticsEvent","useApi","fetchIncident","alertDetailsLink","IncidentRedirect","organization","params","api","hasError","setHasError","track","alert_id","parseInt","alertId","fetchData","incident","orgId","replace","pathname","query","alert","identifier","err","Client","uncancellableApi","fetchAlertRule","ruleId","requestPromise","fetchIncidentsForRule","alertRule","start","end","project","includeSnapshots","expand"],"sourceRoot":""}