{"version":3,"file":"chunks/app_components_forms_controls_multipleCheckbox_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAIA;;;;AAEA,MAAME,uBAAuB,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAA7B;;AAKA,MAAMC,KAAK,GAAG,8EAAO,OAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAX;;AAQA,MAAMC,aAAa,GAAG,8EAAO,MAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAnB;;AAaA,MAAMC,gBAAN,SAA+BL,4CAA/B,CAAgD;EAAA;IAAA;;IAAA,oGACnC,CAACM,aAAD,EAAiCC,CAAjC,KAA4E;MACrF,MAAM;QAACC,KAAD;QAAQC;MAAR,IAAoB,KAAKC,KAA/B;MACA,IAAIC,QAAuB,GAAG,EAA9B;;MAEA,IAAI,OAAOF,QAAP,KAAoB,UAAxB,EAAoC;QAClC;MACD;;MAED,IAAIF,CAAC,CAACK,MAAF,CAASC,OAAb,EAAsB;QACpBF,QAAQ,GAAGH,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWF,aAAX,CAAH,GAA+B,CAACE,KAAD,CAA/C;MACD,CAFD,MAEO;QACLG,QAAQ,GAAGH,KAAK,CAACM,MAAN,CAAaC,CAAC,IAAIA,CAAC,KAAKT,aAAxB,CAAX;MACD;;MAEDG,QAAQ,CAACE,QAAD,EAAWJ,CAAX,CAAR;IACD,CAhB6C;EAAA;;EAkB9CS,MAAM,GAAG;IACP,MAAM;MAACC,QAAD;MAAWC,OAAX;MAAoBV;IAApB,IAA6B,KAAKE,KAAxC;IAEA,OACE,gEAAC,uBAAD;MAAA,UACGQ,OAAO,CAACC,GAAR,CAAY;QAAA,IAAC,CAACC,WAAD,EAAcC,WAAd,CAAD;QAAA,OACX,gEAAC,cAAD;UAAA,UACE,iEAAC,KAAD;YAAA,WACE;cACE,IAAI,EAAC,UADP;cAEE,KAAK,EAAED,WAFT;cAGE,QAAQ,EAAE,KAAKX,QAAL,CAAca,IAAd,CAAmB,IAAnB,EAAyBF,WAAzB,CAHZ;cAIE,QAAQ,EAAEH,QAJZ;cAKE,OAAO,EAAEhB,qDAAO,CAACO,KAAD,CAAP,IAAkBA,KAAK,CAACe,OAAN,CAAcH,WAAd,MAA+B,CAAC;YAL7D,EADF,EAQE,gEAAC,aAAD;cAAA,UAAgBC;YAAhB,EARF;UAAA;QADF,GAAqBD,WAArB,CADW;MAAA,CAAZ;IADH,EADF;EAkBD;;AAvC6C;;AAA1Cf;AA0CN,iEAAeA,gBAAf;;AAEA,MAAMmB,cAAc,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,mCAGGC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,WAAR,CAAoBC,KAH5B,sCAMGH,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,WAAR,CAAoBE,MAN5B,0CASGJ,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,WAAR,CAAoBG,KAT5B,qCAApB","sources":["webpack:///./app/components/forms/controls/multipleCheckbox.tsx"],"sourcesContent":["import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Choices} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\ntype SelectedValue = (string | number)[];\n\ntype Props = {\n  choices: Choices;\n  value: (string | number)[];\n  disabled?: boolean;\n  onChange?: (value: SelectedValue, event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nclass MultipleCheckbox extends Component<Props> {\n  onChange = (selectedValue: string | number, e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value, onChange} = this.props;\n    let newValue: SelectedValue = [];\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <LabelContainer key={choiceValue}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </LabelContainer>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n\nexport default MultipleCheckbox;\n\nconst LabelContainer = styled('div')`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    width: 50%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    width: 33.333%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    width: 25%;\n  }\n`;\n"],"names":["Component","defined","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","selectedValue","e","value","onChange","props","newValue","target","checked","filter","v","render","disabled","choices","map","choiceValue","choiceLabel","bind","indexOf","LabelContainer","p","theme","breakpoints","small","medium","large"],"sourceRoot":""}