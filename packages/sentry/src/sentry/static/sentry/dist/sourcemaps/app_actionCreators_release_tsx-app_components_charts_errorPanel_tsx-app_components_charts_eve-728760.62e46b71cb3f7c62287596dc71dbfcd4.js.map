{"version":3,"file":"chunks/app_actionCreators_release_tsx-app_components_charts_errorPanel_tsx-app_components_charts_eve-728760.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/events.tsx","webpack:///./app/actionCreators/release.tsx","webpack:///./app/actions/releaseActions.tsx","webpack:///./app/components/charts/errorPanel.tsx","webpack:///./app/components/charts/eventsRequest.tsx","webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/discover/discoverFeature.tsx","webpack:///./app/components/discoverButton.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/components/notAvailable.tsx","webpack:///./app/stores/releaseStore.tsx","webpack:///./app/utils/getPeriod.tsx","webpack:///./app/views/performance/styles.tsx"],"sourcesContent":["import {LocationDescriptor} from 'history';\nimport pick from 'lodash/pick';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {canIncludePreviousPeriod} from 'sentry/components/charts/utils';\nimport {\n  DateString,\n  EventsStats,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {LocationQuery} from 'sentry/utils/discover/eventView';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {PERFORMANCE_URL_PARAM} from 'sentry/utils/performance/constants';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\ntype Options = {\n  organization: OrganizationSummary;\n  partial: boolean;\n  comparisonDelta?: number;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  excludeOther?: boolean;\n  field?: string[];\n  generatePathname?: (org: OrganizationSummary) => string;\n  includePrevious?: boolean;\n  interval?: string;\n  limit?: number;\n  orderby?: string;\n  period?: string | null;\n  project?: Readonly<number[]>;\n  query?: string;\n  queryBatching?: QueryBatching;\n  queryExtras?: Record<string, string>;\n  referrer?: string;\n  start?: DateString;\n  team?: Readonly<string | string[]>;\n  topEvents?: number;\n  withoutZerofill?: boolean;\n  yAxis?: string | string[];\n};\n\n/**\n * Make requests to `events-stats` endpoint\n *\n * @param {Object} api API client instance\n * @param {Object} options Request parameters\n * @param {Object} options.organization Organization object\n * @param {Number[]} options.project List of project ids\n * @param {String[]} options.environment List of environments to query for\n * @param {Boolean} options.excludeOther Exclude the \"Other\" series when making a topEvents query\n * @param {String[]} options.team List of teams to query for\n * @param {String} options.period Time period to query for, in the format: <integer><units> where units are \"d\" or \"h\"\n * @param {String} options.interval Time interval to group results in, in the format: <integer><units> where units are \"d\", \"h\", \"m\", \"s\"\n * @param {Number} options.comparisonDelta Comparison delta for change alert event stats to include comparison stats\n * @param {Boolean} options.includePrevious Should request also return reqsults for previous period?\n * @param {Number} options.limit The number of rows to return\n * @param {String} options.query Search query\n * @param {QueryBatching} options.queryBatching A container for batching functions from a provider\n * @param {Record<string, string>} options.queryExtras A list of extra query parameters\n * @param {(org: OrganizationSummary) => string} options.generatePathname A function that returns an override for the pathname\n */\nexport const doEventsRequest = <IncludeAllArgsType extends boolean = false>(\n  api: Client,\n  {\n    organization,\n    project,\n    environment,\n    team,\n    period,\n    start,\n    end,\n    interval,\n    comparisonDelta,\n    includePrevious,\n    query,\n    yAxis,\n    field,\n    topEvents,\n    orderby,\n    partial,\n    withoutZerofill,\n    referrer,\n    queryBatching,\n    generatePathname,\n    queryExtras,\n    excludeOther,\n    includeAllArgs,\n  }: {includeAllArgs?: IncludeAllArgsType} & Options\n): IncludeAllArgsType extends true\n  ? Promise<\n      [EventsStats | MultiSeriesEventsStats, string | undefined, ResponseMeta | undefined]\n    >\n  : Promise<EventsStats | MultiSeriesEventsStats> => {\n  const pathname =\n    generatePathname?.(organization) ??\n    `/organizations/${organization.slug}/events-stats/`;\n\n  const shouldDoublePeriod = canIncludePreviousPeriod(includePrevious, period);\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      interval,\n      comparisonDelta,\n      project,\n      environment,\n      team,\n      query,\n      yAxis,\n      field,\n      topEvents,\n      orderby,\n      partial: partial ? '1' : undefined,\n      withoutZerofill: withoutZerofill ? '1' : undefined,\n      referrer: referrer ? referrer : 'api.organization-event-stats',\n      excludeOther: excludeOther ? '1' : undefined,\n    }).filter(([, value]) => typeof value !== 'undefined')\n  );\n\n  // Doubling period for absolute dates is not accurate unless starting and\n  // ending times are the same (at least for daily intervals). This is\n  // the tradeoff for now.\n  const periodObj = getPeriod({period, start, end}, {shouldDoublePeriod});\n\n  const queryObject = {\n    includeAllArgs,\n    query: {\n      ...urlQuery,\n      ...periodObj,\n      ...queryExtras,\n    },\n  };\n\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, pathname, queryObject);\n  }\n\n  return api.requestPromise<IncludeAllArgsType>(pathname, queryObject);\n};\n\nexport type EventQuery = {\n  field: string[];\n  query: string;\n  environment?: string[];\n  equation?: string[];\n  noPagination?: boolean;\n  per_page?: number;\n  project?: string | string[];\n  referrer?: string;\n  sort?: string | string[];\n  team?: string | string[];\n};\n\nexport type TagSegment = {\n  count: number;\n  name: string;\n  url: LocationDescriptor;\n  value: string;\n  isOther?: boolean;\n  key?: string;\n};\n\nexport type Tag = {\n  key: string;\n  topValues: Array<TagSegment>;\n};\n\n/**\n * Fetches tag facets for a query\n */\nexport function fetchTagFacets(\n  api: Client,\n  orgSlug: string,\n  query: EventQuery\n): Promise<Tag[]> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  return api.requestPromise(`/organizations/${orgSlug}/events-facets/`, {\n    query: queryOption,\n  });\n}\n\n/**\n * Fetches total count of events for a given query\n */\nexport function fetchTotalCount(\n  api: Client,\n  orgSlug: String,\n  query: EventQuery & LocationQuery\n): Promise<number> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  type Response = {\n    count: number;\n  };\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/events-meta/`, {\n      query: queryOption,\n    })\n    .then((res: Response) => res.count);\n}\n","import * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport ReleaseActions from 'sentry/actions/releaseActions';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport ReleaseStore, {getReleaseStoreKey} from 'sentry/stores/releaseStore';\nimport {Deploy, Release, ReleaseStatus} from 'sentry/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n  projectSlug: string;\n  releaseVersion: string;\n};\n\nexport function getProjectRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/projects/${orgSlug}/${projectSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/`;\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRelease for the same\n  // release to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  ReleaseStore.state.releaseLoading[getReleaseStoreKey(projectSlug, releaseVersion)] =\n    true;\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getRelease-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function getReleaseDeploys(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/organizations/${orgSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/deploys/`;\n\n  // HACK(leedongwei): Same as above\n  ReleaseStore.state.deploysLoading[getReleaseStoreKey(projectSlug, releaseVersion)] =\n    true;\n  ReleaseActions.loadDeploys(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Deploy[]) => {\n      ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadDeploysError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getReleaseDeploys-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function archiveRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Archiving Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Archived,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully archived.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be archived.')\n      );\n      throw error;\n    });\n}\n\nexport function restoreRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Restoring Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Active,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully restored.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be restored.')\n      );\n      throw error;\n    });\n}\n","import {createActions} from 'reflux';\n\nconst ReleaseActions = createActions([\n  'loadRelease', // Singular as it loads 1 release\n  'loadReleaseError',\n  'loadReleaseSuccess',\n  'loadDeploys', // Plural as it loads all deploys related to a release\n  'loadDeploysError',\n  'loadDeploysSuccess',\n]);\n\nexport default ReleaseActions;\n","import styled from '@emotion/styled';\n\nconst ErrorPanel = styled('div')<{height?: string}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height || '200px'};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nexport default ErrorPanel;\n","import {PureComponent} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omitBy from 'lodash/omitBy';\n\nimport {doEventsRequest} from 'sentry/actionCreators/events';\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\nimport {\n  canIncludePreviousPeriod,\n  getPreviousSeriesName,\n  isMultiSeriesStats,\n} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {\n  DateString,\n  EventsStats,\n  EventsStatsData,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport {stripEquationPrefix} from 'sentry/utils/discover/fields';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\nexport type TimeSeriesData = {\n  allTimeseriesData?: EventsStatsData;\n  comparisonTimeseriesData?: Series[];\n  originalPreviousTimeseriesData?: EventsStatsData | null;\n  originalTimeseriesData?: EventsStatsData;\n  previousTimeseriesData?: Series[] | null;\n  timeAggregatedData?: Series | {};\n  timeframe?: {end: number; start: number};\n  // timeseries data\n  timeseriesData?: Series[];\n  timeseriesTotals?: {count: number};\n};\n\ntype LoadingStatus = {\n  /**\n   * Whether there was an error retrieving data\n   */\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  errorMessage?: string;\n};\n\n// Can hold additional data from the root an events stat object (eg. start, end, order, isMetricsData).\ninterface AdditionalSeriesInfo {\n  isMetricsData?: boolean;\n}\n\nexport type RenderProps = LoadingStatus &\n  TimeSeriesData & {\n    results?: Series[]; // Chart with multiple series.\n    seriesAdditionalInfo?: Record<string, AdditionalSeriesInfo>;\n  };\n\ntype DefaultProps = {\n  /**\n   * Include data for previous period\n   */\n  includePrevious: boolean;\n  /**\n   * Transform the response data to be something ingestible by charts\n   */\n  includeTransformedData: boolean;\n  /**\n   * Interval to group results in\n   *\n   * e.g. 1d, 1h, 1m, 1s\n   */\n  interval: string;\n  /**\n   * number of rows to return\n   */\n  limit: number;\n  /**\n   * The query string to search events by\n   */\n  query: string;\n  /**\n   * Time delta for comparing intervals of alert metrics, in seconds\n   */\n  comparisonDelta?: number;\n  /**\n   * Absolute end date for query\n   */\n  end?: DateString;\n  /**\n   * Relative time period for query.\n   *\n   * Use `start` and `end` for absolute dates.\n   *\n   * e.g. 24h, 7d, 30d\n   */\n  period?: string | null;\n  /**\n   * Absolute start date for query\n   */\n  start?: DateString;\n};\n\ntype EventsRequestPartialProps = {\n  /**\n   * API client instance\n   */\n  api: Client;\n  children: (renderProps: RenderProps) => React.ReactNode;\n  organization: OrganizationSummary;\n  /**\n   * Whether or not to include the last partial bucket. This happens for example when the\n   * current time is 11:26 and the last bucket ranges from 11:25-11:30. This means that\n   * the last bucket contains 1 minute worth of data while the rest contains 5 minutes.\n   *\n   * This flag indicates whether or not this last bucket should be included in the result.\n   */\n  partial: boolean;\n  /**\n   * Discover needs confirmation to run >30 day >10 project queries,\n   * optional and when not passed confirmation is not required.\n   */\n  confirmedQuery?: boolean;\n  /**\n   * Name used for display current series dataset tooltip\n   */\n  currentSeriesNames?: string[];\n  /**\n   * Optional callback to further process raw events request response data\n   */\n  dataLoadedCallback?: (any: EventsStats | MultiSeriesEventsStats | null) => void;\n  /**\n   * List of environments to query\n   */\n  environment?: Readonly<string[]>;\n  /**\n   * Is query out of retention\n   */\n  expired?: boolean;\n  /**\n   * List of fields to group with when doing a topEvents request.\n   */\n  field?: string[];\n  /**\n   * Allows overriding the pathname.\n   */\n  generatePathname?: (org: OrganizationSummary) => string;\n  /**\n   * Hide error toast (used for pages which also query eventsV2). Stops error appearing as a toast.\n   */\n  hideError?: boolean;\n  /**\n   * Initial loading state\n   */\n  loading?: boolean;\n  /**\n   * Query name used for displaying error toast if it is out of retention\n   */\n  name?: string;\n  /**\n   * A way to control error if error handling is not owned by the toast.\n   */\n  onError?: (error: string) => void;\n  /**\n   * How to order results when getting top events.\n   */\n  orderby?: string;\n  previousSeriesNames?: string[];\n  /**\n   * List of project ids to query\n   */\n  project?: Readonly<number[]>;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * A unique name for what's triggering this request, see organization_events_stats for an allowlist\n   */\n  referrer?: string;\n  /**\n   * Should loading be shown.\n   */\n  showLoading?: boolean;\n  /**\n   * List of team ids to query\n   */\n  team?: Readonly<string | string[]>;\n  /**\n   * The number of top results to get. When set a multi-series result will be returned\n   * in the `results` child render function.\n   */\n  topEvents?: number;\n  /**\n   * Whether or not to zerofill results\n   */\n  withoutZerofill?: boolean;\n  /**\n   * The yAxis being plotted. If multiple yAxis are requested,\n   * the child render function will be called with `results`\n   */\n  yAxis?: string | string[];\n};\n\ntype TimeAggregationProps =\n  | {includeTimeAggregation: true; timeAggregationSeriesName: string}\n  | {includeTimeAggregation?: false; timeAggregationSeriesName?: undefined};\n\nexport type EventsRequestProps = DefaultProps &\n  TimeAggregationProps &\n  EventsRequestPartialProps;\n\ntype EventsRequestState = {\n  errored: boolean;\n  fetchedWithPrevious: boolean;\n  reloading: boolean;\n  timeseriesData: null | EventsStats | MultiSeriesEventsStats;\n  errorMessage?: string;\n};\n\nconst propNamesToIgnore = [\n  'api',\n  'children',\n  'organization',\n  'loading',\n  'queryBatching',\n  'generatePathname',\n];\nconst omitIgnoredProps = (props: EventsRequestProps) =>\n  omitBy(props, (_value, key) => propNamesToIgnore.includes(key));\n\nclass EventsRequest extends PureComponent<EventsRequestProps, EventsRequestState> {\n  static defaultProps: DefaultProps = {\n    period: undefined,\n    start: null,\n    end: null,\n    interval: '1d',\n    comparisonDelta: undefined,\n    limit: 15,\n    query: '',\n    includePrevious: true,\n    includeTransformedData: true,\n  };\n\n  state: EventsRequestState = {\n    reloading: !!this.props.loading,\n    errored: false,\n    timeseriesData: null,\n    fetchedWithPrevious: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: EventsRequestProps) {\n    if (isEqual(omitIgnoredProps(prevProps), omitIgnoredProps(this.props))) {\n      return;\n    }\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  private unmounting: boolean = false;\n\n  fetchData = async () => {\n    const {api, confirmedQuery, onError, expired, name, hideError, ...props} = this.props;\n    let timeseriesData: EventsStats | MultiSeriesEventsStats | null = null;\n\n    if (confirmedQuery === false) {\n      return;\n    }\n\n    this.setState(state => ({\n      reloading: state.timeseriesData !== null,\n      errored: false,\n      errorMessage: undefined,\n    }));\n\n    let errorMessage;\n    if (expired) {\n      errorMessage = t(\n        '%s has an invalid date range. Please try a more recent date range.',\n        name\n      );\n      addErrorMessage(errorMessage, {append: true});\n\n      this.setState({\n        errored: true,\n        errorMessage,\n      });\n    } else {\n      try {\n        api.clear();\n        timeseriesData = await doEventsRequest(api, props);\n      } catch (resp) {\n        if (resp && resp.responseJSON && resp.responseJSON.detail) {\n          errorMessage = resp.responseJSON.detail;\n        } else {\n          errorMessage = t('Error loading chart data');\n        }\n        if (!hideError) {\n          addErrorMessage(errorMessage);\n        }\n        if (onError) {\n          onError(errorMessage);\n        }\n        this.setState({\n          errored: true,\n          errorMessage,\n        });\n      }\n    }\n\n    if (this.unmounting) {\n      return;\n    }\n\n    this.setState({\n      reloading: false,\n      timeseriesData,\n      fetchedWithPrevious: props.includePrevious,\n    });\n    if (props.dataLoadedCallback) {\n      props.dataLoadedCallback(timeseriesData);\n    }\n  };\n\n  /**\n   * Retrieves dataset for the current period (since data can potentially\n   * contain previous period's data), as well as the previous period if\n   * possible.\n   *\n   * Returns `null` if data does not exist\n   */\n  getData = (\n    data: EventsStatsData\n  ): {current: EventsStatsData; previous: EventsStatsData | null} => {\n    const {fetchedWithPrevious} = this.state;\n    const {period, includePrevious} = this.props;\n\n    const hasPreviousPeriod =\n      fetchedWithPrevious || canIncludePreviousPeriod(includePrevious, period);\n    // Take the floor just in case, but data should always be divisible by 2\n    const dataMiddleIndex = Math.floor(data.length / 2);\n    return {\n      current: hasPreviousPeriod ? data.slice(dataMiddleIndex) : data,\n      previous: hasPreviousPeriod ? data.slice(0, dataMiddleIndex) : null,\n    };\n  };\n\n  // This aggregates all values per `timestamp`\n  calculateTotalsPerTimestamp(\n    data: EventsStatsData,\n    getName: (\n      timestamp: number,\n      countArray: {count: number}[],\n      i: number\n    ) => number = timestamp => timestamp * 1000\n  ): SeriesDataUnit[] {\n    return data.map(([timestamp, countArray], i) => ({\n      name: getName(timestamp, countArray, i),\n      value: countArray.reduce((acc, {count}) => acc + count, 0),\n    }));\n  }\n\n  /**\n   * Get previous period data, but transform timestamps so that data fits unto\n   * the current period's data axis\n   */\n  transformPreviousPeriodData(\n    current: EventsStatsData,\n    previous: EventsStatsData | null,\n    seriesName?: string\n  ): Series | null {\n    // Need the current period data array so we can take the timestamp\n    // so we can be sure the data lines up\n    if (!previous) {\n      return null;\n    }\n\n    return {\n      seriesName: seriesName ?? 'Previous',\n      data: this.calculateTotalsPerTimestamp(\n        previous,\n        (_timestamp, _countArray, i) => current[i][0] * 1000\n      ),\n      stack: 'previous',\n    };\n  }\n\n  /**\n   * Aggregate all counts for each time stamp\n   */\n  transformAggregatedTimeseries(data: EventsStatsData, seriesName: string = ''): Series {\n    return {\n      seriesName,\n      data: this.calculateTotalsPerTimestamp(data),\n    };\n  }\n\n  /**\n   * Transforms query response into timeseries data to be used in a chart\n   */\n  transformTimeseriesData(data: EventsStatsData, seriesName?: string): Series[] {\n    return [\n      {\n        seriesName: seriesName || 'Current',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce((acc, {count}) => acc + count, 0),\n        })),\n      },\n    ];\n  }\n\n  /**\n   * Transforms comparisonCount in query response into timeseries data to be used in a comparison chart for change alerts\n   */\n  transformComparisonTimeseriesData(data: EventsStatsData): Series[] {\n    return [\n      {\n        seriesName: 'comparisonCount()',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce(\n            (acc, {comparisonCount}) => acc + (comparisonCount ?? 0),\n            0\n          ),\n        })),\n      },\n    ];\n  }\n\n  processData(response: EventsStats, seriesIndex: number = 0, seriesName?: string) {\n    const {data, isMetricsData, totals} = response;\n    const {\n      includeTransformedData,\n      includeTimeAggregation,\n      timeAggregationSeriesName,\n      currentSeriesNames,\n      previousSeriesNames,\n      comparisonDelta,\n    } = this.props;\n    const {current, previous} = this.getData(data);\n    const transformedData = includeTransformedData\n      ? this.transformTimeseriesData(\n          current,\n          seriesName ?? currentSeriesNames?.[seriesIndex]\n        )\n      : [];\n    const transformedComparisonData =\n      includeTransformedData && comparisonDelta\n        ? this.transformComparisonTimeseriesData(current)\n        : [];\n    const previousData = includeTransformedData\n      ? this.transformPreviousPeriodData(\n          current,\n          previous,\n          (seriesName ? getPreviousSeriesName(seriesName) : undefined) ??\n            previousSeriesNames?.[seriesIndex]\n        )\n      : null;\n    const timeAggregatedData = includeTimeAggregation\n      ? this.transformAggregatedTimeseries(current, timeAggregationSeriesName || '')\n      : {};\n    const timeframe =\n      response.start && response.end\n        ? !previous\n          ? {\n              start: response.start * 1000,\n              end: response.end * 1000,\n            }\n          : {\n              // Find the midpoint of start & end since previous includes 2x data\n              start: (response.start + response.end) * 500,\n              end: response.end * 1000,\n            }\n        : undefined;\n\n    const processedData = {\n      data: transformedData,\n      comparisonData: transformedComparisonData,\n      allData: data,\n      originalData: current,\n      totals,\n      isMetricsData,\n      originalPreviousData: previous,\n      previousData,\n      timeAggregatedData,\n      timeframe,\n    };\n\n    return processedData;\n  }\n\n  render() {\n    const {children, showLoading, ...props} = this.props;\n    const {topEvents} = this.props;\n    const {timeseriesData, reloading, errored, errorMessage} = this.state;\n    // Is \"loading\" if data is null\n    const loading = this.props.loading || timeseriesData === null;\n\n    if (showLoading && loading) {\n      return <LoadingPanel data-test-id=\"events-request-loading\" />;\n    }\n    if (isMultiSeriesStats(timeseriesData, defined(topEvents))) {\n      // Convert multi-series results into chartable series. Multi series results\n      // are created when multiple yAxis are used or a topEvents request is made.\n      // Convert the timeseries data into a multi-series result set.\n      // As the server will have replied with a map like:\n      // {[titleString: string]: EventsStats}\n      let timeframe: {end: number; start: number} | undefined = undefined;\n      const seriesAdditionalInfo: Record<string, AdditionalSeriesInfo> = {};\n      const sortedTimeseriesData = Object.keys(timeseriesData)\n        .map(\n          (\n            seriesName: string,\n            index: number\n          ): [number, Series, Series | null, AdditionalSeriesInfo] => {\n            const seriesData: EventsStats = timeseriesData[seriesName];\n            const processedData = this.processData(\n              seriesData,\n              index,\n              stripEquationPrefix(seriesName)\n            );\n            if (!timeframe) {\n              timeframe = processedData.timeframe;\n            }\n            if (processedData.isMetricsData) {\n              seriesAdditionalInfo[seriesName] = {\n                isMetricsData: processedData.isMetricsData,\n              };\n            }\n            return [\n              seriesData.order || 0,\n              processedData.data[0],\n              processedData.previousData,\n              {isMetricsData: processedData.isMetricsData},\n            ];\n          }\n        )\n        .sort((a, b) => a[0] - b[0]);\n      const results: Series[] = sortedTimeseriesData.map(item => {\n        return item[1];\n      });\n      const previousTimeseriesData: Series[] | undefined = sortedTimeseriesData.some(\n        item => item[2] === null\n      )\n        ? undefined\n        : sortedTimeseriesData.map(item => {\n            return item[2] as Series;\n          });\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        results,\n        timeframe,\n        previousTimeseriesData,\n        seriesAdditionalInfo,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    if (timeseriesData) {\n      const {\n        data: transformedTimeseriesData,\n        comparisonData: transformedComparisonTimeseriesData,\n        allData: allTimeseriesData,\n        originalData: originalTimeseriesData,\n        totals: timeseriesTotals,\n        originalPreviousData: originalPreviousTimeseriesData,\n        previousData: previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        isMetricsData,\n      } = this.processData(timeseriesData);\n\n      const seriesAdditionalInfo = {\n        [this.props.currentSeriesNames?.[0] ?? 'current']: {isMetricsData},\n      };\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        // meta data,\n        seriesAdditionalInfo,\n        // timeseries data\n        timeseriesData: transformedTimeseriesData,\n        comparisonTimeseriesData: transformedComparisonTimeseriesData,\n        allTimeseriesData,\n        originalTimeseriesData,\n        timeseriesTotals,\n        originalPreviousTimeseriesData,\n        previousTimeseriesData: previousTimeseriesData\n          ? [previousTimeseriesData]\n          : previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    return children({\n      loading,\n      reloading,\n      errored,\n      errorMessage,\n      ...props,\n    });\n  }\n}\nexport default EventsRequest;\n","import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type LineChartSeries = Series &\n  Omit<LineSeriesOption, 'data' | 'name'> & {\n    dataArray?: LineSeriesOption['data'];\n  };\n\nexport interface LineChartProps extends Omit<ChartProps, 'series'> {\n  series: LineChartSeries[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  children: ({hasFeature: boolean}) => React.ReactNode;\n};\n\n/**\n * Provide a component that passes a prop to indicate if the current\n * organization doesn't have access to discover results.\n */\nfunction DiscoverFeature({children}: Props) {\n  const noFeatureMessage = t('Requires discover feature.');\n\n  const renderDisabled = p => (\n    <Hovercard\n      body={\n        <FeatureDisabled\n          features={p.features}\n          hideHelpToggle\n          message={noFeatureMessage}\n          featureName={noFeatureMessage}\n        />\n      }\n    >\n      {p.children(p)}\n    </Hovercard>\n  );\n\n  return (\n    <Feature\n      hookName=\"feature-disabled:open-discover\"\n      features={['organizations:discover-basic']}\n      renderDisabled={renderDisabled}\n    >\n      {({hasFeature}) => children({hasFeature})}\n    </Feature>\n  );\n}\n\nexport default DiscoverFeature;\n","import Button, {ButtonProps} from 'sentry/components/button';\nimport DiscoverFeature from 'sentry/components/discover/discoverFeature';\nimport {t} from 'sentry/locale';\n\ntype DiscoverButtonProps = Omit<ButtonProps, 'aria-label'>;\n\n/**\n * Provide a button that turns itself off if the current organization\n * doesn't have access to discover results.\n */\nfunction DiscoverButton({children, ...buttonProps}: DiscoverButtonProps) {\n  return (\n    <DiscoverFeature>\n      {({hasFeature}) => (\n        <Button\n          disabled={!hasFeature}\n          aria-label={t('Open in Discover')}\n          {...buttonProps}\n        >\n          {children}\n        </Button>\n      )}\n    </DiscoverFeature>\n  );\n}\n\nexport default DiscoverButton;\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\n\ntype Props = {\n  className?: string;\n  tooltip?: React.ReactNode;\n};\n\nfunction NotAvailable({tooltip, className}: Props) {\n  return (\n    <Tooltip title={tooltip} skipWrapper disabled={tooltip === undefined}>\n      <Wrapper className={className}>{'\\u2014'}</Wrapper>\n    </Tooltip>\n  );\n}\n\nconst Wrapper = styled('div')`\n  color: ${p => p.theme.gray200};\n`;\n\nexport default NotAvailable;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport OrganizationActions from 'sentry/actions/organizationActions';\nimport ReleaseActions from 'sentry/actions/releaseActions';\nimport {Deploy, Organization, Release} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ntype StoreRelease = Map<string, Release>;\ntype StoreDeploys = Map<string, Array<Deploy>>;\ntype StoreLoading = Map<string, boolean>;\ntype StoreError = Map<string, Error>;\n\ninterface ReleaseStoreDefinition extends StoreDefinition {\n  get(\n    projectSlug: string,\n    releaseVersion: string\n  ): {\n    deploys: Array<Deploy> | undefined;\n    deploysError: Error | undefined;\n    deploysLoading: boolean | undefined;\n    release: Release | undefined;\n    releaseError: Error | undefined;\n    releaseLoading: boolean | undefined;\n  };\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  state: {\n    deploys: StoreDeploys;\n    deploysError: StoreError;\n    deploysLoading: StoreLoading;\n    orgSlug: string | undefined;\n    release: StoreRelease;\n    releaseError: StoreError;\n    releaseLoading: StoreLoading;\n  };\n  updateOrganization(org: Organization): void;\n}\n\nexport const getReleaseStoreKey = (projectSlug: string, releaseVersion: string) =>\n  `${projectSlug}${releaseVersion}`;\n\nconst storeConfig: ReleaseStoreDefinition = {\n  state: {\n    orgSlug: undefined,\n    release: new Map() as StoreRelease,\n    releaseLoading: new Map() as StoreLoading,\n    releaseError: new Map() as StoreError,\n    deploys: new Map() as StoreDeploys,\n    deploysLoading: new Map() as StoreLoading,\n    deploysError: new Map() as StoreError,\n  },\n\n  listenables: ReleaseActions,\n  unsubscribeListeners: [],\n\n  init() {\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationActions.update, this.updateOrganization)\n    );\n    this.reset();\n  },\n\n  reset() {\n    this.state = {\n      orgSlug: undefined,\n      release: new Map() as StoreRelease,\n      releaseLoading: new Map() as StoreLoading,\n      releaseError: new Map() as StoreError,\n      deploys: new Map() as StoreDeploys,\n      deploysLoading: new Map() as StoreLoading,\n      deploysError: new Map() as StoreError,\n    };\n    this.trigger(this.state);\n  },\n\n  updateOrganization(org: Organization) {\n    this.reset();\n    this.state.orgSlug = org.slug;\n    this.trigger(this.state);\n  },\n\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: true,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {release, releaseLoading, releaseError, ...state} = this.state;\n    this.state = {\n      ...state,\n      release: {\n        ...release,\n        [releaseKey]: data,\n      },\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: true,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploys, deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploys: {\n        ...deploys,\n        [releaseKey]: data,\n      },\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  get(projectSlug: string, releaseVersion: string) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n\n    return {\n      release: this.state.release[releaseKey],\n      releaseLoading: this.state.releaseLoading[releaseKey],\n      releaseError: this.state.releaseError[releaseKey],\n      deploys: this.state.deploys[releaseKey],\n      deploysLoading: this.state.deploysLoading[releaseKey],\n      deploysError: this.state.deploysError[releaseKey],\n    };\n  },\n};\n\nconst ReleaseStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ReleaseStore;\n","import moment from 'moment';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DateString} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\n\ntype DateObject = {\n  /**\n   * Ending date object\n   */\n  end?: DateString;\n  /**\n   * Relative period string in format \"<int><unit>\" (e.g. 4d for 4 days)\n   */\n  period?: string | null;\n  /**\n   * Starting date object\n   */\n  start?: DateString;\n};\n\ntype Options = {\n  /**\n   * Doubles the given period (useful for getting previous period data)\n   */\n  shouldDoublePeriod?: boolean;\n};\n\n/**\n * Gets the period to query with if we need to double the initial period in order\n * to get data for the previous period\n *\n * Returns an object with either a period or start/end dates ({statsPeriod: string} or {start: string, end: string})\n */\nexport function getPeriod(\n  {period, start, end}: DateObject,\n  {shouldDoublePeriod}: Options = {}\n) {\n  if (!period && !start && !end) {\n    period = DEFAULT_STATS_PERIOD;\n  }\n\n  // you can not specify both relative and absolute periods\n  // relative period takes precedence\n  if (period) {\n    if (!shouldDoublePeriod) {\n      return {statsPeriod: period};\n    }\n    const [, periodNumber, periodLength] = period.match(/([0-9]+)([mhdw])/)!;\n\n    return {statsPeriod: `${parseInt(periodNumber, 10) * 2}${periodLength}`};\n  }\n\n  if (!start || !end) {\n    throw new Error('start and end required');\n  }\n\n  const formattedStart = getUtcDateString(start);\n  const formattedEnd = getUtcDateString(end);\n\n  if (shouldDoublePeriod) {\n    // get duration of end - start and double\n    const diff = moment(end).diff(moment(start));\n\n    const previousPeriodStart = moment(start).subtract(diff);\n\n    // This is not as accurate as having 2 start/end objs\n    return {\n      start: getUtcDateString(previousPeriodStart),\n      end: formattedEnd,\n    };\n  }\n\n  return {\n    start: formattedStart,\n    end: formattedEnd,\n  };\n}\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nexport const GridCell = styled('div')`\n  font-size: 14px;\n`;\n\nexport const GridCellNumber = styled(GridCell)`\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n  flex-grow: 1;\n`;\n\nexport const DoubleHeaderContainer = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  padding: ${space(2)} ${space(3)} ${space(1)} ${space(3)};\n  gap: ${space(3)};\n`;\n\nexport const ErrorPanel = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: 200px;\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n"],"names":["pick","canIncludePreviousPeriod","getPeriod","PERFORMANCE_URL_PARAM","doEventsRequest","api","organization","project","environment","team","period","start","end","interval","comparisonDelta","includePrevious","query","yAxis","field","topEvents","orderby","partial","withoutZerofill","referrer","queryBatching","generatePathname","queryExtras","excludeOther","includeAllArgs","pathname","slug","shouldDoublePeriod","urlQuery","Object","fromEntries","entries","undefined","filter","value","periodObj","queryObject","batchRequest","requestPromise","fetchTagFacets","orgSlug","urlParams","values","queryOption","fetchTotalCount","then","res","count","Sentry","addErrorMessage","addLoadingMessage","addSuccessMessage","ReleaseActions","t","ReleaseStore","getReleaseStoreKey","ReleaseStatus","getProjectRelease","params","projectSlug","releaseVersion","path","encodeURIComponent","state","releaseLoading","loadRelease","method","loadReleaseSuccess","catch","err","status","loadReleaseError","withScope","scope","setLevel","setFingerprint","captureException","getReleaseDeploys","deploysLoading","loadDeploys","loadDeploysSuccess","loadDeploysError","archiveRelease","data","Archived","projects","version","release","error","responseJSON","detail","restoreRelease","Active","createActions","ErrorPanel","p","height","theme","gray300","fontSizeExtraLarge","PureComponent","isEqual","omitBy","LoadingPanel","getPreviousSeriesName","isMultiSeriesStats","defined","stripEquationPrefix","propNamesToIgnore","omitIgnoredProps","props","_value","key","includes","EventsRequest","reloading","loading","errored","timeseriesData","fetchedWithPrevious","confirmedQuery","onError","expired","name","hideError","setState","errorMessage","append","clear","resp","unmounting","dataLoadedCallback","hasPreviousPeriod","dataMiddleIndex","Math","floor","length","current","slice","previous","componentDidMount","fetchData","componentDidUpdate","prevProps","componentWillUnmount","calculateTotalsPerTimestamp","getName","timestamp","map","i","countArray","reduce","acc","transformPreviousPeriodData","seriesName","_timestamp","_countArray","stack","transformAggregatedTimeseries","transformTimeseriesData","countsForTimestamp","transformComparisonTimeseriesData","comparisonCount","processData","response","seriesIndex","isMetricsData","totals","includeTransformedData","includeTimeAggregation","timeAggregationSeriesName","currentSeriesNames","previousSeriesNames","getData","transformedData","transformedComparisonData","previousData","timeAggregatedData","timeframe","processedData","comparisonData","allData","originalData","originalPreviousData","render","children","showLoading","seriesAdditionalInfo","sortedTimeseriesData","keys","index","seriesData","order","sort","a","b","results","item","previousTimeseriesData","some","transformedTimeseriesData","transformedComparisonTimeseriesData","allTimeseriesData","originalTimeseriesData","timeseriesTotals","originalPreviousTimeseriesData","comparisonTimeseriesData","limit","LineSeries","BaseChart","LineChart","series","seriesOptions","dataArray","options","animation","animationThreshold","animationDuration","LoadingMask","_height","defaultProps","Feature","FeatureDisabled","Hovercard","DiscoverFeature","noFeatureMessage","renderDisabled","features","hasFeature","Button","DiscoverButton","buttonProps","backgroundSecondary","borderRadius","Tooltip","NotAvailable","tooltip","className","Wrapper","gray200","createStore","OrganizationActions","makeSafeRefluxStore","storeConfig","Map","releaseError","deploys","deploysError","listenables","unsubscribeListeners","init","push","listenTo","update","updateOrganization","reset","trigger","org","releaseKey","get","moment","DEFAULT_STATS_PERIOD","getUtcDateString","statsPeriod","periodNumber","periodLength","match","parseInt","Error","formattedStart","formattedEnd","diff","previousPeriodStart","subtract","space","GridCell","GridCellNumber","DoubleHeaderContainer"],"sourceRoot":""}