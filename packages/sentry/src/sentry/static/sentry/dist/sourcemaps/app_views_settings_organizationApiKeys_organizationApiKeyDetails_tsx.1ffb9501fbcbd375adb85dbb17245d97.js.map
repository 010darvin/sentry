{"version":3,"file":"chunks/app_views_settings_organizationApiKeys_organizationApiKeyDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationApiKeys/organizationApiKeyDetails.tsx"],"sourcesContent":["import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport FormField from 'sentry/components/forms/formField';\nimport TextareaField from 'sentry/components/forms/textareaField';\nimport TextField from 'sentry/components/forms/textField';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {API_ACCESS_SCOPES} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {Choices, Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport {DeprecatedApiKey} from './types';\n\nconst API_CHOICES: Choices = API_ACCESS_SCOPES.map(s => [s, s]);\n\ntype RouteParams = {\n  apiKey: string;\n  orgId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n};\n\ntype State = AsyncView['state'] & {\n  apiKey: DeprecatedApiKey;\n};\n\nclass OrganizationApiKeyDetails extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      [\n        'apiKey',\n        `/organizations/${this.props.params.orgId}/api-keys/${this.props.params.apiKey}/`,\n      ],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Edit API Key'), this.props.organization.slug, false);\n  }\n\n  handleSubmitSuccess = () => {\n    addSuccessMessage('Saved changes');\n\n    // Go back to API list\n    browserHistory.push(\n      recreateRoute('', {\n        stepBack: -1,\n        routes: this.props.routes,\n        params: this.props.params,\n      })\n    );\n  };\n\n  handleSubmitError = () => {\n    addErrorMessage('Unable to save changes. Please try again.');\n  };\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title={t('Edit API Key')} />\n\n        <Panel>\n          <PanelHeader>{t('API Key')}</PanelHeader>\n          <ApiForm\n            apiMethod=\"PUT\"\n            apiEndpoint={`/organizations/${this.props.params.orgId}/api-keys/${this.props.params.apiKey}/`}\n            initialData={this.state.apiKey}\n            onSubmitSuccess={this.handleSubmitSuccess}\n            onSubmitError={this.handleSubmitError}\n            onCancel={() =>\n              browserHistory.push(\n                recreateRoute('', {\n                  stepBack: -1,\n                  routes: this.props.routes,\n                  params: this.props.params,\n                })\n              )\n            }\n          >\n            <PanelBody>\n              <TextField label={t('Label')} name=\"label\" />\n              <TextField label={t('API Key')} name=\"key\" disabled />\n\n              <FormField name=\"scope_list\" label={t('Scopes')} inline={false} required>\n                {({value, onChange}) => (\n                  <MultipleCheckbox\n                    value={value}\n                    onChange={onChange}\n                    choices={API_CHOICES}\n                  />\n                )}\n              </FormField>\n\n              <TextareaField\n                label={t('Allowed Domains')}\n                name=\"allowed_origins\"\n                placeholder=\"e.g. example.com or https://example.com\"\n                help=\"Separate multiple entries with a newline\"\n              />\n            </PanelBody>\n          </ApiForm>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationApiKeyDetails);\n"],"names":["findLastIndex","replaceRouterParams","recreateRoute","to","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","slice","baseRoute","search","hash","fullRoute","join","routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","browserHistory","addErrorMessage","addSuccessMessage","ApiForm","MultipleCheckbox","FormField","TextareaField","TextField","Panel","PanelBody","PanelHeader","API_ACCESS_SCOPES","t","withOrganization","SettingsPageHeader","API_CHOICES","s","OrganizationApiKeyDetails","push","props","getEndpoints","orgId","apiKey","organization","slug","renderBody","state","handleSubmitSuccess","handleSubmitError","value","onChange"],"sourceRoot":""}