{"version":3,"file":"chunks/app_views_settings_projectSecurityHeaders_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectSecurityHeaders/index.tsx","webpack:///./app/views/settings/projectSecurityHeaders/reportUri.tsx"],"sourcesContent":["import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {ProjectKey} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport ReportUri from 'sentry/views/settings/projectSecurityHeaders/reportUri';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  keyList: null | ProjectKey[];\n} & AsyncView['state'];\n\nexport default class ProjectSecurityHeaders extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Security Headers'), projectId, false);\n  }\n\n  getReports() {\n    return [\n      {\n        name: 'Content Security Policy (CSP)',\n        url: recreateRoute('csp/', this.props),\n      },\n      {\n        name: 'Certificate Transparency (Expect-CT)',\n        url: recreateRoute('expect-ct/', this.props),\n      },\n      {\n        name: 'HTTP Public Key Pinning (HPKP)',\n        url: recreateRoute('hpkp/', this.props),\n      },\n    ];\n  }\n\n  renderBody() {\n    const {params} = this.props;\n    const {keyList} = this.state;\n    if (keyList === null) {\n      return null;\n    }\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Security Header Reports')} />\n\n        <ReportUri keyList={keyList} projectId={params.projectId} orgId={params.orgId} />\n\n        <Panel>\n          <PanelHeader>{t('Additional Configuration')}</PanelHeader>\n          <PanelBody withPadding>\n            <TextBlock style={{marginBottom: 20}}>\n              {tct(\n                'In addition to the [key_param] parameter, you may also pass the following within the querystring for the report URI:',\n                {\n                  key_param: <code>sentry_key</code>,\n                }\n              )}\n            </TextBlock>\n            <table className=\"table\" style={{marginBottom: 0}}>\n              <tbody>\n                <tr>\n                  <th style={{padding: '8px 5px'}}>sentry_environment</th>\n                  <td style={{padding: '8px 5px'}}>\n                    {t('The environment name (e.g. production)')}.\n                  </td>\n                </tr>\n                <tr>\n                  <th style={{padding: '8px 5px'}}>sentry_release</th>\n                  <td style={{padding: '8px 5px'}}>\n                    {t('The version of the application.')}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </PanelBody>\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Supported Formats')}</PanelHeader>\n          <PanelBody>\n            {this.getReports().map(({name, url}) => (\n              <ReportItem key={url}>\n                <HeaderName>{name}</HeaderName>\n                <Button to={url} priority=\"primary\">\n                  {t('Instructions')}\n                </Button>\n              </ReportItem>\n            ))}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst ReportItem = styled(PanelItem)`\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst HeaderName = styled('span')`\n  font-size: 1.2em;\n`;\n","import Field from 'sentry/components/forms/field';\nimport TextCopyInput from 'sentry/components/forms/textCopyInput';\nimport Link from 'sentry/components/links/link';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {ProjectKey} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nconst DEFAULT_ENDPOINT = 'https://sentry.example.com/api/security-report/';\n\nexport function getSecurityDsn(keyList: ProjectKey[]) {\n  const endpoint = keyList.length ? keyList[0].dsn.security : DEFAULT_ENDPOINT;\n  return getDynamicText({\n    value: endpoint,\n    fixed: DEFAULT_ENDPOINT,\n  });\n}\n\ntype Props = {\n  keyList: ProjectKey[];\n  orgId: string;\n  projectId: string;\n};\n\nexport default function ReportUri({keyList, orgId, projectId}: Props) {\n  return (\n    <Panel>\n      <PanelHeader>{t('Report URI')}</PanelHeader>\n      <PanelBody>\n        <PanelAlert type=\"info\">\n          {tct(\n            \"We've automatically pulled these credentials from your available [link:Client Keys]\",\n            {\n              link: <Link to={`/settings/${orgId}/projects/${projectId}/keys/`} />,\n            }\n          )}\n        </PanelAlert>\n        <Field inline={false} flexibleControlStateSize>\n          <TextCopyInput>{getSecurityDsn(keyList)}</TextCopyInput>\n        </Field>\n      </PanelBody>\n    </Panel>\n  );\n}\n"],"names":["findLastIndex","replaceRouterParams","recreateRoute","to","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","slice","baseRoute","search","hash","fullRoute","join","routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Button","Panel","PanelBody","PanelHeader","PanelItem","t","tct","SettingsPageHeader","TextBlock","ReportUri","ProjectSecurityHeaders","getEndpoints","orgId","projectId","props","getReports","name","url","renderBody","keyList","state","marginBottom","key_param","padding","ReportItem","HeaderName","Field","TextCopyInput","Link","PanelAlert","getDynamicText","DEFAULT_ENDPOINT","getSecurityDsn","endpoint","length","dsn","security","value","fixed","link"],"sourceRoot":""}