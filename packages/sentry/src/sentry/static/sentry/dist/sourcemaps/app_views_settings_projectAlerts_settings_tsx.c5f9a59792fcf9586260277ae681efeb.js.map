{"version":3,"file":"chunks/app_views_settings_projectAlerts_settings_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;CAGA;;AACO,MAAME,KAAK,GAAG,8CAAd;;AAEP,MAAMC,aAAa,GAAIC,KAAD,IAAwB;EAC5CA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAN,GAAgB,EAAxB;EACA,OAAOH,iDAAE,CAAC,WAAD,EAAc,YAAd,EAA4BG,KAA5B,CAAT;AACD,CAHD;;AAKO,MAAME,MAA8B,GAAG;EAC5CC,eAAe,EAAE;IACfC,IAAI,EAAE,iBADS;IAEfC,IAAI,EAAE,QAFS;IAIf;IACAC,KAAK,EAAEV,gDAAC,CAAC,kBAAD,CALO;IAMfW,WAAW,EAAE,wBANE;IAOfC,IAAI,EAAEZ,gDAAC,CACL,sMADK;EAPQ,CAD2B;EAY5Ca,eAAe,EAAE;IACfL,IAAI,EAAE,iBADS;IAEfC,IAAI,EAAE,OAFS;IAGfK,GAAG,EAAE,EAHU;IAIfC,GAAG,EAAE,IAJU;IAKfC,IAAI,EAAE,EALS;IAMfC,YAAY,EAAE,GANC;IAOfP,KAAK,EAAEV,gDAAC,CAAC,2BAAD,CAPO;IAQfY,IAAI,EAAEZ,gDAAC,CAAC,qDAAD,CARQ;IASfkB,WAAW,EAAEf;EATE,CAZ2B;EAuB5CgB,eAAe,EAAE;IACfX,IAAI,EAAE,iBADS;IAEfC,IAAI,EAAE,OAFS;IAGfK,GAAG,EAAE,EAHU;IAIfC,GAAG,EAAE,IAJU;IAKfC,IAAI,EAAE,EALS;IAMfC,YAAY,EAAE,GANC;IAOfP,KAAK,EAAEV,gDAAC,CAAC,2BAAD,CAPO;IAQfY,IAAI,EAAEZ,gDAAC,CAAC,sDAAD,CARQ;IASfkB,WAAW,EAAEf;EATE;AAvB2B,CAAvC;;;;;;;;;;;;;;ACXP,SAASiB,aAAT,CACEC,SADF,EAEEC,OAFF,EAKU;EAAA,IAFRC,UAEQ,uEAFc,IAEd;EAAA,IADRC,WACQ;EACR,MAAMC,QAAQ,GAAI,GAAEJ,SAAU,MAAKC,OAAQ,EAA3C;EACA,MAAMI,IAAI,GAAGF,WAAW,GAAI,GAAEC,QAAS,MAAKD,WAAY,EAAhC,GAAoCC,QAA5D;EAEA,OAAOF,UAAU,GAAI,GAAEG,IAAK,WAAX,GAAwBA,IAAzC;AACD;;AAED,iEAAeN,aAAf;;;;;;;;;;;;;;;;;ACZA;AACA;;AAKe,MAAMS,SAAN,SAGLF,wEAHK,CAGgB;EAC7BG,QAAQ,GAAG;IACT,OAAO,EAAP;EACD;;EAEDC,MAAM,GAAG;IACP,OACE,gEAAC,6EAAD;MAAqB,KAAK,EAAE,KAAKD,QAAL,EAA5B;MAAA,UACG,KAAKE,eAAL;IADH,EADF;EAKD;;AAX4B;AAHVH;;;;;;;;;;;;;;;;;;ACNrB;AACA;AACA;;;AAKA,MAAMM,eAAe,GAAG;EAAA,IAAC;IAACC,MAAM,GAAG,CAAC,eAAD,CAAV;IAA6B,GAAGC;EAAhC,CAAD;EAAA,OACtB,gEAAC,oEAAD;IAAQ,MAAM,EAAED,MAAhB;IAAA,UACG;MAAA,IAAC;QAACE;MAAD,CAAD;MAAA,OACC,CAACA,SAAD,IACE,gEAAC,+DAAD;QAAO,IAAI,EAAC,SAAZ;QAAA,GAA0BD,KAA1B;QAAA,UACGrC,gDAAC,CACA,iGADA;MADJ,EAFH;IAAA;EADH,EADsB;AAAA,CAAxB;;AAAMmC;AAcN,iEAAeA,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AAeA,MAAMa,QAAN,SAAuBnB,+DAAvB,CAA+C;EAAA;IAAA;;IAAA,8GAsBvBoB,MAAD,IAAoB;MACvC,KAAKC,QAAL,CAAcC,SAAS;QAAA;;QAAA,OAAK;UAC1BC,UAAU,EAAE,0BAACD,SAAS,CAACC,UAAX,yEAAyB,EAAzB,EAA6BC,GAA7B,CAAiCC,CAAC,IAAI;YAChD,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAApB,EAAwB;cACtB,OAAOD,CAAP;YACD;;YACD,OAAO,EACL,GAAGL,MADE;cAELO,OAAO,EAAE;YAFJ,CAAP;UAID,CARW;QADc,CAAL;MAAA,CAAvB;IAWD,CAlC4C;;IAAA,+GAoCtBP,MAAD,IAAoB;MACxC,KAAKC,QAAL,CAAcC,SAAS;QAAA;;QAAA,OAAK;UAC1BC,UAAU,EAAE,2BAACD,SAAS,CAACC,UAAX,2EAAyB,EAAzB,EAA6BC,GAA7B,CAAiCC,CAAC,IAAI;YAChD,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAApB,EAAwB;cACtB,OAAOD,CAAP;YACD;;YACD,OAAO,EACL,GAAGL,MADE;cAELO,OAAO,EAAE;YAFJ,CAAP;UAID,CARW;QADc,CAAL;MAAA,CAAvB;IAWD,CAhD4C;EAAA;;EAC7CC,eAAe,GAAG;IAChB,OAAO,EACL,GAAG,MAAMA,eAAN,EADE;MAELC,OAAO,EAAE,IAFJ;MAGLN,UAAU,EAAE;IAHP,CAAP;EAKD;;EACDO,kBAAkB,OAAkC;IAAA,IAAjC;MAACC,KAAD;MAAQC;IAAR,CAAiC;IAClD,OAAQ,aAAYD,KAAM,IAAGC,SAAU,GAAvC;EACD;;EAEDC,YAAY,GAA0C;IACpD,MAAM;MAACC;IAAD,IAAW,KAAK1B,KAAtB;IACA,MAAM;MAACuB,KAAD;MAAQC;IAAR,IAAqBE,MAA3B;IACA,MAAMC,eAAe,GAAG,KAAKL,kBAAL,CAAwBI,MAAxB,CAAxB;IACA,OAAO,CACL,CAAC,SAAD,EAAYC,eAAZ,CADK,EAEL,CAAC,YAAD,EAAgB,aAAYJ,KAAM,IAAGC,SAAU,WAA/C,CAFK,CAAP;EAID;;EA8BD/B,QAAQ,GAAG;IACT,MAAM;MAAC+B;IAAD,IAAc,KAAKxB,KAAL,CAAW0B,MAA/B;IACA,OAAO3C,oEAAa,CAACpB,iDAAC,CAAC,iBAAD,CAAF,EAAuB6D,SAAvB,EAAkC,KAAlC,CAApB;EACD;;EAEDI,UAAU,GAAG;IACX,MAAM;MAACC,WAAD;MAAcC,YAAd;MAA4BJ;IAA5B,IAAsC,KAAK1B,KAAjD;IACA,MAAM;MAACuB;IAAD,IAAUG,MAAhB;IACA,MAAM;MAACL,OAAD;MAAUN;IAAV,IAAwB,KAAKgB,KAAnC;;IAEA,IAAI,CAACV,OAAL,EAAc;MACZ,OAAO,IAAP;IACD;;IAED,MAAMM,eAAe,GAAG,KAAKL,kBAAL,CAAwBI,MAAxB,CAAxB;IAEA,OACE,kEAAC,2CAAD;MAAA,WACE,iEAAC,4FAAD;QACE,KAAK,EAAE/D,iDAAC,CAAC,iBAAD,CADV;QAEE,MAAM,EACJ,iEAAC,gEAAD;UACE,EAAE,EAAE;YACFqE,QAAQ,EAAG,kBAAiBT,KAAM,gBADhC;YAEFU,KAAK,EAAE;cAACZ,OAAO,EAAEA,OAAO,CAACH;YAAlB;UAFL,CADN;UAKE,IAAI,EAAC,IALP;UAAA,UAOGvD,iDAAC,CAAC,kBAAD;QAPJ;MAHJ,EADF,EAeE,iEAAC,sFAAD,KAfF,EAgBE,iEAAC,mEAAD;QAAW,EAAE,EAAC,kCAAd;QAAiD,IAAI,EAAE,iEAAC,mDAAD,KAAvD;QAAA,UACGA,iDAAC,CACA,0FADA;MADJ,EAhBF,EAsBE,kEAAC,oEAAD;QACE,UAAU,MADZ;QAEE,SAAS,MAFX;QAGE,WAAW,EAAE;UACXO,eAAe,EAAEmD,OAAO,CAACnD,eADd;UAEXM,eAAe,EAAE6C,OAAO,CAAC7C,eAFd;UAGXM,eAAe,EAAEuC,OAAO,CAACvC;QAHd,CAHf;QAQE,SAAS,EAAC,KARZ;QASE,WAAW,EAAE6C,eATf;QAAA,WAWE,iEAAC,wEAAD;UACE,QAAQ,EAAE,CAACE,WADb;UAEE,KAAK,EAAElE,iDAAC,CAAC,gBAAD,CAFV;UAGE,MAAM,EAAE,CAACM,mFAAD;QAHV,EAXF,EAiBE,iEAAC,wEAAD;UACE,KAAK,EAAEN,iDAAC,CAAC,SAAD,CADV;UAEE,QAAQ,EAAE,CAACkE,WAFb;UAGE,MAAM,EAAE,CAAC5D,mFAAD,EAAyBA,mFAAzB,CAHV;UAIE,YAAY,EAAE,MACZ,iEAAC,gEAAD;YAAY,IAAI,EAAC,MAAjB;YAAA,UACGN,iDAAC,CACA,+MADA;UADJ;QALJ,EAjBF;MAAA,EAtBF,EAqDGkE,WAAW,IACV,iEAAC,oEAAD;QACE,YAAY,EAAEC,YADhB;QAEE,OAAO,EAAET,OAFX;QAGE,UAAU,EAAE,CAACN,UAAD,aAACA,UAAD,cAACA,UAAD,GAAe,EAAf,EAAmBmB,MAAnB,CACVjB,CAAC,IAAIA,CAAC,CAAC7C,IAAF,KAAW,cAAX,IAA6B6C,CAAC,CAACkB,gBAD1B,CAHd;QAME,cAAc,EAAE,KAAKC,kBANvB;QAOE,eAAe,EAAE,KAAKC;MAPxB,EAtDJ;IAAA,EADF;EAmED;;AArI4C;;AAwI/C,iEAAe1B,QAAf","sources":["webpack:///./app/data/forms/projectAlerts.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectAlerts/settings.tsx"],"sourcesContent":["import {Field} from 'sentry/components/forms/type';\nimport {t, tn} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/alerts/';\n\nconst formatMinutes = (value: number | '') => {\n  value = Number(value) / 60;\n  return tn('%s minute', '%s minutes', value);\n};\n\nexport const fields: {[key: string]: Field} = {\n  subjectTemplate: {\n    name: 'subjectTemplate',\n    type: 'string',\n\n    // additional data/props that is related to rendering of form field rather than data\n    label: t('Subject Template'),\n    placeholder: 'e.g. $shortID - $title',\n    help: t(\n      'The email subject to use (excluding the prefix) for individual alerts. Usable variables include: $title, $shortID, $projectID, $orgID, and ${tag:key}, such as ${tag:environment} or ${tag:release}.'\n    ),\n  },\n  digestsMinDelay: {\n    name: 'digestsMinDelay',\n    type: 'range',\n    min: 60,\n    max: 3600,\n    step: 60,\n    defaultValue: 300,\n    label: t('Minimum delivery interval'),\n    help: t('Notifications will be delivered at most this often.'),\n    formatLabel: formatMinutes,\n  },\n  digestsMaxDelay: {\n    name: 'digestsMaxDelay',\n    type: 'range',\n    min: 60,\n    max: 3600,\n    step: 60,\n    defaultValue: 300,\n    label: t('Maximum delivery interval'),\n    help: t('Notifications will be delivered at least this often.'),\n    formatLabel: formatMinutes,\n  },\n};\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport AlertLink from 'sentry/components/alertLink';\nimport Button from 'sentry/components/button';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport {PanelAlert} from 'sentry/components/panels';\nimport PluginList from 'sentry/components/pluginList';\nimport {fields} from 'sentry/data/forms/projectAlerts';\nimport {IconMail} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Plugin, Project} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype RouteParams = {orgId: string; projectId: string};\ntype Props = RouteComponentProps<RouteParams, {}> &\n  AsyncView['props'] & {\n    canEditRule: boolean;\n    organization: Organization;\n    project: Project;\n  };\n\ntype State = AsyncView['state'] & {\n  pluginList: Array<Plugin> | null;\n  project: Project | null;\n};\n\nclass Settings extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      project: null,\n      pluginList: [],\n    };\n  }\n  getProjectEndpoint({orgId, projectId}: RouteParams) {\n    return `/projects/${orgId}/${projectId}/`;\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params} = this.props;\n    const {orgId, projectId} = params;\n    const projectEndpoint = this.getProjectEndpoint(params);\n    return [\n      ['project', projectEndpoint],\n      ['pluginList', `/projects/${orgId}/${projectId}/plugins/`],\n    ];\n  }\n\n  handleEnablePlugin = (plugin: Plugin) => {\n    this.setState(prevState => ({\n      pluginList: (prevState.pluginList ?? []).map(p => {\n        if (p.id !== plugin.id) {\n          return p;\n        }\n        return {\n          ...plugin,\n          enabled: true,\n        };\n      }),\n    }));\n  };\n\n  handleDisablePlugin = (plugin: Plugin) => {\n    this.setState(prevState => ({\n      pluginList: (prevState.pluginList ?? []).map(p => {\n        if (p.id !== plugin.id) {\n          return p;\n        }\n        return {\n          ...plugin,\n          enabled: false,\n        };\n      }),\n    }));\n  };\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Alerts Settings'), projectId, false);\n  }\n\n  renderBody() {\n    const {canEditRule, organization, params} = this.props;\n    const {orgId} = params;\n    const {project, pluginList} = this.state;\n\n    if (!project) {\n      return null;\n    }\n\n    const projectEndpoint = this.getProjectEndpoint(params);\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Alerts Settings')}\n          action={\n            <Button\n              to={{\n                pathname: `/organizations/${orgId}/alerts/rules/`,\n                query: {project: project.id},\n              }}\n              size=\"sm\"\n            >\n              {t('View Alert Rules')}\n            </Button>\n          }\n        />\n        <PermissionAlert />\n        <AlertLink to=\"/settings/account/notifications/\" icon={<IconMail />}>\n          {t(\n            'Looking to fine-tune your personal notification preferences? Visit your Account Settings'\n          )}\n        </AlertLink>\n\n        <Form\n          saveOnBlur\n          allowUndo\n          initialData={{\n            subjectTemplate: project.subjectTemplate,\n            digestsMinDelay: project.digestsMinDelay,\n            digestsMaxDelay: project.digestsMaxDelay,\n          }}\n          apiMethod=\"PUT\"\n          apiEndpoint={projectEndpoint}\n        >\n          <JsonForm\n            disabled={!canEditRule}\n            title={t('Email Settings')}\n            fields={[fields.subjectTemplate]}\n          />\n\n          <JsonForm\n            title={t('Digests')}\n            disabled={!canEditRule}\n            fields={[fields.digestsMinDelay, fields.digestsMaxDelay]}\n            renderHeader={() => (\n              <PanelAlert type=\"info\">\n                {t(\n                  'Sentry will automatically digest alerts sent by some services to avoid flooding your inbox with individual issue notifications. To control how frequently notifications are delivered, use the sliders below.'\n                )}\n              </PanelAlert>\n            )}\n          />\n        </Form>\n\n        {canEditRule && (\n          <PluginList\n            organization={organization}\n            project={project}\n            pluginList={(pluginList ?? []).filter(\n              p => p.type === 'notification' && p.hasConfiguration\n            )}\n            onEnablePlugin={this.handleEnablePlugin}\n            onDisablePlugin={this.handleDisablePlugin}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Settings;\n"],"names":["t","tn","route","formatMinutes","value","Number","fields","subjectTemplate","name","type","label","placeholder","help","digestsMinDelay","min","max","step","defaultValue","formatLabel","digestsMaxDelay","routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Access","Alert","PermissionAlert","access","props","hasAccess","Fragment","AlertLink","Button","Form","JsonForm","PanelAlert","PluginList","IconMail","SettingsPageHeader","Settings","plugin","setState","prevState","pluginList","map","p","id","enabled","getDefaultState","project","getProjectEndpoint","orgId","projectId","getEndpoints","params","projectEndpoint","renderBody","canEditRule","organization","state","pathname","query","filter","hasConfiguration","handleEnablePlugin","handleDisablePlugin"],"sourceRoot":""}