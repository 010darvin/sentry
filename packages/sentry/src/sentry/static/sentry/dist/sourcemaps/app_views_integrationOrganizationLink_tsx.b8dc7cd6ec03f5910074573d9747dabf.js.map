{"version":3,"file":"chunks/app_views_integrationOrganizationLink_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/integrationOrganizationLink.tsx","webpack:///./app/views/organizationIntegrations/addIntegration.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {components} from 'react-select';\nimport styled from '@emotion/styled';\nimport {urlEncode} from '@sentry/utils';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport Field from 'sentry/components/forms/field';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport IdBadge from 'sentry/components/idBadge';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport {t, tct} from 'sentry/locale';\nimport {Integration, IntegrationProvider, Organization} from 'sentry/types';\nimport {IntegrationAnalyticsKey} from 'sentry/utils/analytics/integrations';\nimport {\n  getIntegrationFeatureGate,\n  trackIntegrationAnalytics,\n} from 'sentry/utils/integrationUtil';\nimport {singleLineRenderer} from 'sentry/utils/marked';\nimport AsyncView from 'sentry/views/asyncView';\nimport AddIntegration from 'sentry/views/organizationIntegrations/addIntegration';\n\n// installationId present for Github flow\ntype Props = RouteComponentProps<{integrationSlug: string; installationId?: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  organization?: Organization;\n  provider?: IntegrationProvider;\n  selectedOrgSlug?: string;\n};\n\nexport default class IntegrationOrganizationLink extends AsyncView<Props, State> {\n  disableErrorReport = false;\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['organizations', '/organizations/']];\n  }\n\n  getTitle() {\n    return t('Choose Installation Organization');\n  }\n\n  trackIntegrationAnalytics = (\n    eventName: IntegrationAnalyticsKey,\n    startSession?: boolean\n  ) => {\n    const {organization, provider} = this.state;\n    // should have these set but need to make TS happy\n    if (!organization || !provider) {\n      return;\n    }\n\n    trackIntegrationAnalytics(\n      eventName,\n      {\n        integration_type: 'first_party',\n        integration: provider.key,\n        // We actually don't know if it's installed but neither does the user in the view and multiple installs is possible\n        already_installed: false,\n        view: 'external_install',\n        organization,\n      },\n      {startSession: !!startSession}\n    );\n  };\n\n  trackOpened() {\n    this.trackIntegrationAnalytics('integrations.integration_viewed', true);\n  }\n\n  trackInstallationStart() {\n    this.trackIntegrationAnalytics('integrations.installation_start');\n  }\n\n  get integrationSlug() {\n    return this.props.params.integrationSlug;\n  }\n\n  get queryParams() {\n    return this.props.location.query;\n  }\n\n  getOrgBySlug = (orgSlug: string): Organization | undefined => {\n    return this.state.organizations.find((org: Organization) => org.slug === orgSlug);\n  };\n\n  onLoadAllEndpointsSuccess() {\n    // auto select the org if there is only one\n    const {organizations} = this.state;\n    if (organizations.length === 1) {\n      this.onSelectOrg({value: organizations[0].slug});\n    }\n  }\n\n  onSelectOrg = async ({value: orgSlug}: {value: string}) => {\n    this.setState({selectedOrgSlug: orgSlug, reloading: true, organization: undefined});\n\n    try {\n      const [organization, {providers}]: [\n        Organization,\n        {providers: IntegrationProvider[]}\n      ] = await Promise.all([\n        this.api.requestPromise(`/organizations/${orgSlug}/`),\n        this.api.requestPromise(\n          `/organizations/${orgSlug}/config/integrations/?provider_key=${this.integrationSlug}`\n        ),\n      ]);\n      // should never happen with a valid provider\n      if (providers.length === 0) {\n        throw new Error('Invalid provider');\n      }\n      this.setState(\n        {organization, reloading: false, provider: providers[0]},\n        this.trackOpened\n      );\n    } catch (_err) {\n      addErrorMessage(t('Failed to retrieve organization or integration details'));\n      this.setState({reloading: false});\n    }\n  };\n\n  hasAccess = () => {\n    const {organization} = this.state;\n    return organization?.access.includes('org:integrations');\n  };\n\n  // used with Github to redirect to the the integration detail\n  onInstallWithInstallationId = (data: Integration) => {\n    const {organization} = this.state;\n    const orgId = organization && organization.slug;\n    this.props.router.push(\n      `/settings/${orgId}/integrations/${data.provider.key}/${data.id}/`\n    );\n  };\n\n  // non-Github redirects to the extension view where the backend will finish the installation\n  finishInstallation = () => {\n    // add the selected org to the query parameters and then redirect back to configure\n    const {selectedOrgSlug} = this.state;\n    const query = {orgSlug: selectedOrgSlug, ...this.queryParams};\n    this.trackInstallationStart();\n    window.location.assign(\n      `/extensions/${this.integrationSlug}/configure/?${urlEncode(query)}`\n    );\n  };\n\n  renderAddButton() {\n    const {installationId} = this.props.params;\n    const {organization, provider} = this.state;\n    // should never happen but we need this check for TS\n    if (!provider || !organization) {\n      return null;\n    }\n    const {features} = provider.metadata;\n\n    // Prepare the features list\n    const featuresComponents = features.map(f => ({\n      featureGate: f.featureGate,\n      description: (\n        <FeatureListItem\n          dangerouslySetInnerHTML={{__html: singleLineRenderer(f.description)}}\n        />\n      ),\n    }));\n\n    const {IntegrationFeatures} = getIntegrationFeatureGate();\n\n    // Github uses a different installation flow with the installationId as a parameter\n    // We have to wrap our installation button with AddIntegration so we can get the\n    // addIntegrationWithInstallationId callback.\n    // if we don't hve an installationId, we need to use the finishInstallation callback.\n    return (\n      <IntegrationFeatures organization={organization} features={featuresComponents}>\n        {({disabled}) => (\n          <AddIntegration\n            provider={provider}\n            onInstall={this.onInstallWithInstallationId}\n            organization={organization}\n          >\n            {addIntegrationWithInstallationId => (\n              <ButtonWrapper>\n                <Button\n                  priority=\"primary\"\n                  disabled={!this.hasAccess() || disabled}\n                  onClick={() =>\n                    installationId\n                      ? addIntegrationWithInstallationId({\n                          installation_id: installationId,\n                        })\n                      : this.finishInstallation()\n                  }\n                >\n                  {t('Install %s', provider.name)}\n                </Button>\n              </ButtonWrapper>\n            )}\n          </AddIntegration>\n        )}\n      </IntegrationFeatures>\n    );\n  }\n\n  customOption = orgProps => {\n    const organization = this.getOrgBySlug(orgProps.value);\n    if (!organization) {\n      return null;\n    }\n    return (\n      <components.Option {...orgProps}>\n        <IdBadge\n          organization={organization}\n          avatarSize={20}\n          displayName={organization.name}\n          avatarProps={{consistentWidth: true}}\n        />\n      </components.Option>\n    );\n  };\n\n  customValueContainer = containerProps => {\n    const valueList = containerProps.getValue();\n    // if no value set, we want to return the default component that is rendered\n    if (valueList.length === 0) {\n      return <components.ValueContainer {...containerProps} />;\n    }\n    const orgSlug = valueList[0].value;\n    const organization = this.getOrgBySlug(orgSlug);\n    if (!organization) {\n      return <components.ValueContainer {...containerProps} />;\n    }\n    return (\n      <components.ValueContainer {...containerProps}>\n        <IdBadge\n          organization={organization}\n          avatarSize={20}\n          displayName={organization.name}\n          avatarProps={{consistentWidth: true}}\n        />\n      </components.ValueContainer>\n    );\n  };\n\n  renderBottom() {\n    const {organization, selectedOrgSlug, provider, reloading} = this.state;\n    const {FeatureList} = getIntegrationFeatureGate();\n    if (reloading) {\n      return <LoadingIndicator />;\n    }\n\n    return (\n      <Fragment>\n        {selectedOrgSlug && organization && !this.hasAccess() && (\n          <Alert type=\"error\" showIcon>\n            <p>\n              {tct(\n                `You do not have permission to install integrations in\n                [organization]. Ask an organization owner or manager to\n                visit this page to finish installing this integration.`,\n                {organization: <strong>{organization.slug}</strong>}\n              )}\n            </p>\n            <InstallLink>{window.location.href}</InstallLink>\n          </Alert>\n        )}\n\n        {provider && organization && this.hasAccess() && FeatureList && (\n          <Fragment>\n            <p>\n              {tct(\n                'The following features will be available for [organization] when installed.',\n                {organization: <strong>{organization.slug}</strong>}\n              )}\n            </p>\n            <FeatureList\n              organization={organization}\n              features={provider.metadata.features}\n              provider={provider}\n            />\n          </Fragment>\n        )}\n\n        <div className=\"form-actions\">{this.renderAddButton()}</div>\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {selectedOrgSlug} = this.state;\n    const options = this.state.organizations.map((org: Organization) => ({\n      value: org.slug,\n      label: org.name,\n    }));\n\n    return (\n      <NarrowLayout>\n        <h3>{t('Finish integration installation')}</h3>\n        <p>\n          {tct(\n            `Please pick a specific [organization:organization] to link with\n            your integration installation of [integation].`,\n            {\n              organization: <strong />,\n              integation: <strong>{this.integrationSlug}</strong>,\n            }\n          )}\n        </p>\n\n        <Field label={t('Organization')} inline={false} stacked required>\n          <SelectControl\n            onChange={this.onSelectOrg}\n            value={selectedOrgSlug}\n            placeholder={t('Select an organization')}\n            options={options}\n            components={{\n              Option: this.customOption,\n              ValueContainer: this.customValueContainer,\n            }}\n          />\n        </Field>\n        {this.renderBottom()}\n      </NarrowLayout>\n    );\n  }\n}\n\nconst InstallLink = styled('pre')`\n  margin-bottom: 0;\n  background: #fbe3e1;\n`;\n\nconst FeatureListItem = styled('span')`\n  line-height: 24px;\n`;\n\nconst ButtonWrapper = styled('div')`\n  margin-left: auto;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import {Component} from 'react';\nimport * as qs from 'query-string';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\nimport {IntegrationProvider, IntegrationWithConfig, Organization} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\n\ntype Props = {\n  children: (\n    openDialog: (urlParams?: {[key: string]: string}) => void\n  ) => React.ReactNode;\n  onInstall: (data: IntegrationWithConfig) => void;\n  organization: Organization;\n  provider: IntegrationProvider;\n  account?: string; // for analytics\n  analyticsParams?: {\n    already_installed: boolean;\n    view:\n      | 'integrations_directory_integration_detail'\n      | 'integrations_directory'\n      | 'onboarding'\n      | 'project_creation';\n  };\n  modalParams?: {[key: string]: string};\n};\n\nexport default class AddIntegration extends Component<Props> {\n  componentDidMount() {\n    window.addEventListener('message', this.didReceiveMessage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.didReceiveMessage);\n    this.dialog && this.dialog.close();\n  }\n\n  dialog: Window | null = null;\n\n  computeCenteredWindow(width: number, height: number) {\n    // Taken from: https://stackoverflow.com/questions/4068373/center-a-popup-window-on-screen\n    const screenLeft =\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n\n    const screenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const innerWidth = window.innerWidth\n      ? window.innerWidth\n      : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : screen.width;\n\n    const innerHeight = window.innerHeight\n      ? window.innerHeight\n      : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : screen.height;\n\n    const left = innerWidth / 2 - width / 2 + screenLeft;\n    const top = innerHeight / 2 - height / 2 + screenTop;\n\n    return {left, top};\n  }\n\n  openDialog = (urlParams?: {[key: string]: string}) => {\n    const {account, analyticsParams, modalParams, organization, provider} = this.props;\n\n    trackIntegrationAnalytics('integrations.installation_start', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    const name = 'sentryAddIntegration';\n    const {url, width, height} = provider.setupDialog;\n    const {left, top} = this.computeCenteredWindow(width, height);\n\n    let query: {[key: string]: string} = {...urlParams};\n\n    if (account) {\n      query.account = account;\n    }\n\n    if (modalParams) {\n      query = {...query, ...modalParams};\n    }\n\n    const installUrl = `${url}?${qs.stringify(query)}`;\n    const opts = `scrollbars=yes,width=${width},height=${height},top=${top},left=${left}`;\n\n    this.dialog = window.open(installUrl, name, opts);\n    this.dialog && this.dialog.focus();\n  };\n\n  didReceiveMessage = (message: MessageEvent) => {\n    const {analyticsParams, onInstall, organization, provider} = this.props;\n\n    if (message.origin !== document.location.origin) {\n      return;\n    }\n\n    if (message.source !== this.dialog) {\n      return;\n    }\n\n    const {success, data} = message.data;\n    this.dialog = null;\n\n    if (!success) {\n      addErrorMessage(data.error);\n      return;\n    }\n\n    if (!data) {\n      return;\n    }\n    trackIntegrationAnalytics('integrations.installation_complete', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    addSuccessMessage(t('%s added', provider.name));\n    onInstall(data);\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return children(this.openDialog);\n  }\n}\n"],"names":["useEffect","logout","IconSentry","t","useApi","NarrowLayout","maxWidth","showLogout","children","api","document","body","classList","add","remove","handleLogout","window","location","assign","Logout","p","theme","fontSizeLarge","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Fragment","components","urlEncode","addErrorMessage","Alert","Button","Field","SelectControl","IdBadge","LoadingIndicator","tct","getIntegrationFeatureGate","trackIntegrationAnalytics","singleLineRenderer","AddIntegration","IntegrationOrganizationLink","eventName","startSession","organization","provider","state","integration_type","integration","key","already_installed","view","orgSlug","organizations","find","org","slug","value","setState","selectedOrgSlug","reloading","undefined","providers","Promise","all","requestPromise","integrationSlug","length","Error","trackOpened","_err","access","includes","data","orgId","props","router","push","id","query","queryParams","trackInstallationStart","orgProps","getOrgBySlug","name","consistentWidth","containerProps","valueList","getValue","getEndpoints","params","onLoadAllEndpointsSuccess","onSelectOrg","renderAddButton","installationId","features","metadata","featuresComponents","map","f","featureGate","description","__html","IntegrationFeatures","disabled","onInstallWithInstallationId","addIntegrationWithInstallationId","hasAccess","installation_id","finishInstallation","renderBottom","FeatureList","href","renderBody","options","label","integation","Option","customOption","ValueContainer","customValueContainer","InstallLink","FeatureListItem","ButtonWrapper","Component","qs","addSuccessMessage","urlParams","account","analyticsParams","modalParams","url","width","height","setupDialog","left","top","computeCenteredWindow","installUrl","stringify","opts","dialog","open","focus","message","onInstall","origin","source","success","error","componentDidMount","addEventListener","didReceiveMessage","componentWillUnmount","removeEventListener","close","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","openDialog"],"sourceRoot":""}