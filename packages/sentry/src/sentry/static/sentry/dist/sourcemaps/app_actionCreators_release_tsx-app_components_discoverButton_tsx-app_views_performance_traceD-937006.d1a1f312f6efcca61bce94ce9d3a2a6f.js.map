{"version":3,"file":"chunks/app_actionCreators_release_tsx-app_components_discoverButton_tsx-app_views_performance_traceD-937006.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/release.tsx","webpack:///./app/actions/releaseActions.tsx","webpack:///./app/components/discover/discoverFeature.tsx","webpack:///./app/components/discoverButton.tsx","webpack:///./app/stores/releaseStore.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/views/performance/traceDetails/limitExceededMessage.tsx","webpack:///./app/views/performance/traceDetails/styles.tsx","webpack:///./app/views/performance/traceDetails/traceNotFound.tsx","webpack:///./app/views/performance/traceDetails/traceView.tsx","webpack:///./app/views/performance/traceDetails/transactionBar.tsx","webpack:///./app/views/performance/traceDetails/transactionDetail.tsx","webpack:///./app/views/performance/traceDetails/transactionGroup.tsx"],"sourcesContent":["import * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport ReleaseActions from 'sentry/actions/releaseActions';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport ReleaseStore, {getReleaseStoreKey} from 'sentry/stores/releaseStore';\nimport {Deploy, Release, ReleaseStatus} from 'sentry/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n  projectSlug: string;\n  releaseVersion: string;\n};\n\nexport function getProjectRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/projects/${orgSlug}/${projectSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/`;\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRelease for the same\n  // release to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  ReleaseStore.state.releaseLoading[getReleaseStoreKey(projectSlug, releaseVersion)] =\n    true;\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getRelease-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function getReleaseDeploys(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/organizations/${orgSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/deploys/`;\n\n  // HACK(leedongwei): Same as above\n  ReleaseStore.state.deploysLoading[getReleaseStoreKey(projectSlug, releaseVersion)] =\n    true;\n  ReleaseActions.loadDeploys(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Deploy[]) => {\n      ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadDeploysError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getReleaseDeploys-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function archiveRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Archiving Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Archived,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully archived.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be archived.')\n      );\n      throw error;\n    });\n}\n\nexport function restoreRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Restoring Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Active,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully restored.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be restored.')\n      );\n      throw error;\n    });\n}\n","import {createActions} from 'reflux';\n\nconst ReleaseActions = createActions([\n  'loadRelease', // Singular as it loads 1 release\n  'loadReleaseError',\n  'loadReleaseSuccess',\n  'loadDeploys', // Plural as it loads all deploys related to a release\n  'loadDeploysError',\n  'loadDeploysSuccess',\n]);\n\nexport default ReleaseActions;\n","import Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  children: ({hasFeature: boolean}) => React.ReactNode;\n};\n\n/**\n * Provide a component that passes a prop to indicate if the current\n * organization doesn't have access to discover results.\n */\nfunction DiscoverFeature({children}: Props) {\n  const noFeatureMessage = t('Requires discover feature.');\n\n  const renderDisabled = p => (\n    <Hovercard\n      body={\n        <FeatureDisabled\n          features={p.features}\n          hideHelpToggle\n          message={noFeatureMessage}\n          featureName={noFeatureMessage}\n        />\n      }\n    >\n      {p.children(p)}\n    </Hovercard>\n  );\n\n  return (\n    <Feature\n      hookName=\"feature-disabled:open-discover\"\n      features={['organizations:discover-basic']}\n      renderDisabled={renderDisabled}\n    >\n      {({hasFeature}) => children({hasFeature})}\n    </Feature>\n  );\n}\n\nexport default DiscoverFeature;\n","import Button, {ButtonProps} from 'sentry/components/button';\nimport DiscoverFeature from 'sentry/components/discover/discoverFeature';\nimport {t} from 'sentry/locale';\n\ntype DiscoverButtonProps = Omit<ButtonProps, 'aria-label'>;\n\n/**\n * Provide a button that turns itself off if the current organization\n * doesn't have access to discover results.\n */\nfunction DiscoverButton({children, ...buttonProps}: DiscoverButtonProps) {\n  return (\n    <DiscoverFeature>\n      {({hasFeature}) => (\n        <Button\n          disabled={!hasFeature}\n          aria-label={t('Open in Discover')}\n          {...buttonProps}\n        >\n          {children}\n        </Button>\n      )}\n    </DiscoverFeature>\n  );\n}\n\nexport default DiscoverButton;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport OrganizationActions from 'sentry/actions/organizationActions';\nimport ReleaseActions from 'sentry/actions/releaseActions';\nimport {Deploy, Organization, Release} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ntype StoreRelease = Map<string, Release>;\ntype StoreDeploys = Map<string, Array<Deploy>>;\ntype StoreLoading = Map<string, boolean>;\ntype StoreError = Map<string, Error>;\n\ninterface ReleaseStoreDefinition extends StoreDefinition {\n  get(\n    projectSlug: string,\n    releaseVersion: string\n  ): {\n    deploys: Array<Deploy> | undefined;\n    deploysError: Error | undefined;\n    deploysLoading: boolean | undefined;\n    release: Release | undefined;\n    releaseError: Error | undefined;\n    releaseLoading: boolean | undefined;\n  };\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  state: {\n    deploys: StoreDeploys;\n    deploysError: StoreError;\n    deploysLoading: StoreLoading;\n    orgSlug: string | undefined;\n    release: StoreRelease;\n    releaseError: StoreError;\n    releaseLoading: StoreLoading;\n  };\n  updateOrganization(org: Organization): void;\n}\n\nexport const getReleaseStoreKey = (projectSlug: string, releaseVersion: string) =>\n  `${projectSlug}${releaseVersion}`;\n\nconst storeConfig: ReleaseStoreDefinition = {\n  state: {\n    orgSlug: undefined,\n    release: new Map() as StoreRelease,\n    releaseLoading: new Map() as StoreLoading,\n    releaseError: new Map() as StoreError,\n    deploys: new Map() as StoreDeploys,\n    deploysLoading: new Map() as StoreLoading,\n    deploysError: new Map() as StoreError,\n  },\n\n  listenables: ReleaseActions,\n  unsubscribeListeners: [],\n\n  init() {\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationActions.update, this.updateOrganization)\n    );\n    this.reset();\n  },\n\n  reset() {\n    this.state = {\n      orgSlug: undefined,\n      release: new Map() as StoreRelease,\n      releaseLoading: new Map() as StoreLoading,\n      releaseError: new Map() as StoreError,\n      deploys: new Map() as StoreDeploys,\n      deploysLoading: new Map() as StoreLoading,\n      deploysError: new Map() as StoreError,\n    };\n    this.trigger(this.state);\n  },\n\n  updateOrganization(org: Organization) {\n    this.reset();\n    this.state.orgSlug = org.slug;\n    this.trigger(this.state);\n  },\n\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: true,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {release, releaseLoading, releaseError, ...state} = this.state;\n    this.state = {\n      ...state,\n      release: {\n        ...release,\n        [releaseKey]: data,\n      },\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: true,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploys, deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploys: {\n        ...deploys,\n        [releaseKey]: data,\n      },\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  get(projectSlug: string, releaseVersion: string) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n\n    return {\n      release: this.state.release[releaseKey],\n      releaseLoading: this.state.releaseLoading[releaseKey],\n      releaseError: this.state.releaseError[releaseKey],\n      deploys: this.state.deploys[releaseKey],\n      deploysLoading: this.state.deploysLoading[releaseKey],\n      deploysError: this.state.deploysError[releaseKey],\n    };\n  },\n};\n\nconst ReleaseStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ReleaseStore;\n","import {EventsMetaType, MetaType} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport {TransactionThresholdMetric} from 'sentry/views/performance/transactionSummary/transactionThresholdModal';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata from the events endpoint.\n */\nexport type EventsTableData = {\n  data: Array<TableDataRow>;\n  meta?: EventsMetaType;\n};\n\nexport type TableDataWithTitle = TableData & {title: string};\n\ntype DiscoverQueryPropsWithThresholds = DiscoverQueryProps & {\n  transactionName?: string;\n  transactionThreshold?: number;\n  transactionThresholdMetric?: TransactionThresholdMetric;\n};\n\ntype DiscoverQueryComponentProps = DiscoverQueryPropsWithThresholds & {\n  children: (props: GenericChildrenProps<TableData>) => React.ReactNode;\n  useEvents?: boolean;\n};\n\nfunction shouldRefetchData(\n  prevProps: DiscoverQueryPropsWithThresholds,\n  nextProps: DiscoverQueryPropsWithThresholds\n) {\n  return (\n    prevProps.transactionName !== nextProps.transactionName ||\n    prevProps.transactionThreshold !== nextProps.transactionThreshold ||\n    prevProps.transactionThresholdMetric !== nextProps.transactionThresholdMetric\n  );\n}\n\nfunction DiscoverQuery(props: DiscoverQueryComponentProps) {\n  const endpoint = props.useEvents ? 'events' : 'eventsv2';\n  const afterFetch = props.useEvents\n    ? (data, _) => {\n        const {fields, ...otherMeta} = data.meta ?? {};\n        return {\n          ...data,\n          meta: {...fields, ...otherMeta},\n        };\n      }\n    : undefined;\n  return (\n    <GenericDiscoverQuery<TableData, DiscoverQueryPropsWithThresholds>\n      route={endpoint}\n      shouldRefetchData={shouldRefetchData}\n      afterFetch={afterFetch}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(DiscoverQuery);\n","import DiscoverFeature from 'sentry/components/discover/discoverFeature';\nimport Link from 'sentry/components/links/link';\nimport {MessageRow} from 'sentry/components/performance/waterfall/messageRow';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {TraceMeta} from 'sentry/utils/performance/quickTrace/types';\nimport {TraceInfo} from 'sentry/views/performance/traceDetails/types';\n\ninterface LimitExceededMessageProps {\n  meta: TraceMeta | null;\n  organization: Organization;\n  traceEventView: EventView;\n  traceInfo: TraceInfo;\n}\nfunction LimitExceededMessage({\n  traceInfo,\n  traceEventView,\n  organization,\n  meta,\n}: LimitExceededMessageProps) {\n  const count = traceInfo.transactions.size;\n  const totalTransactions = meta?.transactions ?? count;\n\n  if (totalTransactions === null || count >= totalTransactions) {\n    return null;\n  }\n\n  const target = traceEventView.getResultsViewUrlTarget(organization.slug);\n\n  return (\n    <MessageRow>\n      {tct(\n        'Limited to a view of [count] transactions. To view the full list, [discover].',\n        {\n          count,\n          discover: (\n            <DiscoverFeature>\n              {({hasFeature}) => (\n                <Link disabled={!hasFeature} to={target}>\n                  {t('Open in Discover')}\n                </Link>\n              )}\n            </DiscoverFeature>\n          ),\n        }\n      )}\n    </MessageRow>\n  );\n}\n\nexport default LimitExceededMessage;\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport EventTagsPill from 'sentry/components/events/eventTags/eventTagsPill';\nimport {SecondaryHeader} from 'sentry/components/events/interfaces/spans/header';\nimport {Panel} from 'sentry/components/panels';\nimport Pills from 'sentry/components/pills';\nimport SearchBar from 'sentry/components/searchBar';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {TraceFullDetailed} from 'sentry/utils/performance/quickTrace/types';\nimport {appendTagCondition} from 'sentry/utils/queryString';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nexport {\n  Row,\n  SpanDetails as TransactionDetails,\n  SpanDetailContainer as TransactionDetailsContainer,\n} from 'sentry/components/events/interfaces/spans/spanDetail';\n\nexport const TraceSearchContainer = styled('div')`\n  display: flex;\n  width: 100%;\n`;\n\nexport const TraceSearchBar = styled(SearchBar)`\n  flex-grow: 1;\n`;\n\nexport const TraceViewHeaderContainer = styled(SecondaryHeader)`\n  position: static;\n  top: auto;\n  border-top: none;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nexport const TraceDetailHeader = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: ${space(3)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: max-content max-content;\n    grid-row-gap: 0;\n  }\n`;\n\nexport const TraceDetailBody = styled('div')`\n  margin-top: ${space(2)};\n`;\n\nexport const TraceViewContainer = styled('div')`\n  overflow-x: hidden;\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n`;\n\nexport const TracePanel = styled(Panel)`\n  overflow: hidden;\n`;\n\nexport const ProjectBadgeContainer = styled('span')`\n  margin-right: ${space(0.75)};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst StyledPills = styled(Pills)`\n  padding-top: ${space(1.5)};\n`;\n\nexport function Tags({\n  location,\n  organization,\n  transaction,\n}: {\n  location: Location;\n  organization: Organization;\n  transaction: TraceFullDetailed;\n}) {\n  const {tags} = transaction;\n\n  if (!tags || tags.length <= 0) {\n    return null;\n  }\n\n  const orgSlug = organization.slug;\n\n  return (\n    <tr>\n      <td className=\"key\">Tags</td>\n      <td className=\"value\">\n        <StyledPills>\n          {tags.map((tag, index) => {\n            const {pathname: streamPath, query} = transactionSummaryRouteWithQuery({\n              orgSlug,\n              transaction: transaction.transaction,\n              projectID: String(transaction.project_id),\n              query: {\n                ...location.query,\n                query: appendTagCondition(location.query.query, tag.key, tag.value),\n              },\n            });\n\n            return (\n              <EventTagsPill\n                key={!defined(tag.key) ? `tag-pill-${index}` : tag.key}\n                tag={tag}\n                projectId={transaction.project_slug}\n                organization={organization}\n                query={query}\n                streamPath={streamPath}\n              />\n            );\n          })}\n        </StyledPills>\n      </td>\n    </tr>\n  );\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Link from 'sentry/components/links/link';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {\n  ErrorDot,\n  ErrorLevel,\n  ErrorMessageContent,\n  ErrorTitle,\n} from 'sentry/components/performance/waterfall/rowDetails';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {TraceMeta} from 'sentry/utils/performance/quickTrace/types';\n\ninterface TraceNotFoundProps {\n  location: any;\n  meta: TraceMeta | null;\n  organization: Organization;\n  traceEventView: EventView;\n  traceSlug: string;\n}\n\nfunction TraceNotFound({\n  meta,\n  traceEventView,\n  traceSlug,\n  organization,\n  location,\n}: TraceNotFoundProps) {\n  const transactions = meta?.transactions ?? 0;\n  const errors = meta?.errors ?? 0;\n\n  if (transactions === 0 && errors > 0) {\n    const errorsEventView = traceEventView.withColumns([\n      {kind: 'field', field: 'project'},\n      {kind: 'field', field: 'title'},\n      {kind: 'field', field: 'issue.id'},\n      {kind: 'field', field: 'level'},\n    ]);\n    errorsEventView.query = `trace:${traceSlug} !event.type:transaction `;\n\n    return (\n      <DiscoverQuery\n        eventView={errorsEventView}\n        orgSlug={organization.slug}\n        location={location}\n        referrer=\"api.trace-view.errors-view\"\n        useEvents\n      >\n        {({isLoading, tableData, error}) => {\n          if (isLoading) {\n            return <LoadingIndicator />;\n          }\n\n          if (error) {\n            return (\n              <Alert type=\"error\" showIcon>\n                <ErrorLabel>\n                  {tct(\n                    'The trace cannot be shown when all events are errors. An error occurred when attempting to fetch these error events: [error]',\n                    {error: error.message}\n                  )}\n                </ErrorLabel>\n              </Alert>\n            );\n          }\n\n          return (\n            <Alert type=\"error\" showIcon>\n              <ErrorLabel>\n                {t('The trace cannot be shown when all events are errors.')}\n              </ErrorLabel>\n\n              <ErrorMessageContent data-test-id=\"trace-view-errors\">\n                {tableData?.data.map(data => (\n                  <Fragment key={data.id}>\n                    <ErrorDot level={data.level as any} />\n                    <ErrorLevel>{data.level}</ErrorLevel>\n                    <ErrorTitle>\n                      <Link\n                        to={`/organizations/${organization.slug}/issues/${data['issue.id']}/events/${data.id}`}\n                      >\n                        {data.title}\n                      </Link>\n                    </ErrorTitle>\n                  </Fragment>\n                ))}\n              </ErrorMessageContent>\n            </Alert>\n          );\n        }}\n      </DiscoverQuery>\n    );\n  }\n\n  return <LoadingError message={t('The trace you are looking for was not found.')} />;\n}\n\nconst ErrorLabel = styled('div')`\n  margin-bottom: ${space(1)};\n`;\n\nexport default TraceNotFound;\n","import React, {createRef, useEffect} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport * as AnchorLinkManager from 'sentry/components/events/interfaces/spans/anchorLinkManager';\nimport * as DividerHandlerManager from 'sentry/components/events/interfaces/spans/dividerHandlerManager';\nimport * as ScrollbarManager from 'sentry/components/events/interfaces/spans/scrollbarManager';\nimport {MessageRow} from 'sentry/components/performance/waterfall/messageRow';\nimport {\n  DividerSpacer,\n  ScrollbarContainer,\n  VirtualScrollbar,\n  VirtualScrollbarGrip,\n} from 'sentry/components/performance/waterfall/miniHeader';\nimport {pickBarColor, toPercent} from 'sentry/components/performance/waterfall/utils';\nimport {tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {TraceFullDetailed, TraceMeta} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  TraceDetailBody,\n  TracePanel,\n  TraceViewContainer,\n  TraceViewHeaderContainer,\n} from 'sentry/views/performance/traceDetails/styles';\nimport TransactionGroup from 'sentry/views/performance/traceDetails/transactionGroup';\nimport {TraceInfo, TreeDepth} from 'sentry/views/performance/traceDetails/types';\nimport {\n  getTraceInfo,\n  isRootTransaction,\n} from 'sentry/views/performance/traceDetails/utils';\n\nimport LimitExceededMessage from './limitExceededMessage';\nimport TraceNotFound from './traceNotFound';\n\ntype AccType = {\n  lastIndex: number;\n  numberOfHiddenTransactionsAbove: number;\n  renderedChildren: React.ReactNode[];\n};\n\ntype Props = Pick<RouteComponentProps<{}, {}>, 'location'> & {\n  meta: TraceMeta | null;\n  organization: Organization;\n  traceEventView: EventView;\n  traceSlug: string;\n  traces: TraceFullDetailed[] | null;\n  filteredTransactionIds?: Set<string>;\n  traceInfo?: TraceInfo;\n};\n\nfunction TraceHiddenMessage({\n  isVisible,\n  numberOfHiddenTransactionsAbove,\n}: {\n  isVisible: boolean;\n  numberOfHiddenTransactionsAbove: number;\n}) {\n  if (!isVisible || numberOfHiddenTransactionsAbove < 1) {\n    return null;\n  }\n\n  return (\n    <MessageRow>\n      <span key=\"trace-info-message\">\n        {numberOfHiddenTransactionsAbove === 1\n          ? tct('[numOfTransaction] hidden transaction', {\n              numOfTransaction: <strong>{numberOfHiddenTransactionsAbove}</strong>,\n            })\n          : tct('[numOfTransaction] hidden transactions', {\n              numOfTransaction: <strong>{numberOfHiddenTransactionsAbove}</strong>,\n            })}\n      </span>\n    </MessageRow>\n  );\n}\n\nfunction isTransactionVisible(\n  transaction: TraceFullDetailed,\n  filteredTransactionIds?: Set<string>\n): boolean {\n  return filteredTransactionIds ? filteredTransactionIds.has(transaction.event_id) : true;\n}\n\nexport default function TraceView({\n  location,\n  meta,\n  organization,\n  traces,\n  traceSlug,\n  traceEventView,\n  filteredTransactionIds,\n  ...props\n}: Props) {\n  const sentryTransaction = Sentry.getCurrentHub().getScope()?.getTransaction();\n  const sentrySpan = sentryTransaction?.startChild({\n    op: 'trace.render',\n    description: 'trace-view-content',\n  });\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('performance_views.trace_view.view', {\n      organization,\n    });\n  }, [organization]);\n\n  function renderTransaction(\n    transaction: TraceFullDetailed,\n    {\n      continuingDepths,\n      isOrphan,\n      isLast,\n      index,\n      numberOfHiddenTransactionsAbove,\n      traceInfo,\n      hasGuideAnchor,\n    }: {\n      continuingDepths: TreeDepth[];\n      hasGuideAnchor: boolean;\n      index: number;\n      isLast: boolean;\n      isOrphan: boolean;\n      numberOfHiddenTransactionsAbove: number;\n      traceInfo: TraceInfo;\n    }\n  ) {\n    const {children, event_id: eventId} = transaction;\n    // Add 1 to the generation to make room for the \"root trace\"\n    const generation = transaction.generation + 1;\n\n    const isVisible = isTransactionVisible(transaction, filteredTransactionIds);\n\n    const accumulated: AccType = children.reduce(\n      (acc: AccType, child: TraceFullDetailed, idx: number) => {\n        const isLastChild = idx === children.length - 1;\n        const hasChildren = child.children.length > 0;\n\n        const result = renderTransaction(child, {\n          continuingDepths:\n            !isLastChild && hasChildren\n              ? [...continuingDepths, {depth: generation, isOrphanDepth: isOrphan}]\n              : continuingDepths,\n          isOrphan,\n          isLast: isLastChild,\n          index: acc.lastIndex + 1,\n          numberOfHiddenTransactionsAbove: acc.numberOfHiddenTransactionsAbove,\n          traceInfo,\n          hasGuideAnchor: false,\n        });\n\n        acc.lastIndex = result.lastIndex;\n        acc.numberOfHiddenTransactionsAbove = result.numberOfHiddenTransactionsAbove;\n        acc.renderedChildren.push(result.transactionGroup);\n\n        return acc;\n      },\n      {\n        renderedChildren: [],\n        lastIndex: index,\n        numberOfHiddenTransactionsAbove: isVisible\n          ? 0\n          : numberOfHiddenTransactionsAbove + 1,\n      }\n    );\n\n    return {\n      transactionGroup: (\n        <React.Fragment key={eventId}>\n          <TraceHiddenMessage\n            isVisible={isVisible}\n            numberOfHiddenTransactionsAbove={numberOfHiddenTransactionsAbove}\n          />\n          <TransactionGroup\n            location={location}\n            organization={organization}\n            traceInfo={traceInfo}\n            transaction={{\n              ...transaction,\n              generation,\n            }}\n            continuingDepths={continuingDepths}\n            isOrphan={isOrphan}\n            isLast={isLast}\n            index={index}\n            isVisible={isVisible}\n            hasGuideAnchor={hasGuideAnchor}\n            renderedChildren={accumulated.renderedChildren}\n            barColor={pickBarColor(transaction['transaction.op'])}\n          />\n        </React.Fragment>\n      ),\n      lastIndex: accumulated.lastIndex,\n      numberOfHiddenTransactionsAbove: accumulated.numberOfHiddenTransactionsAbove,\n    };\n  }\n\n  const traceViewRef = createRef<HTMLDivElement>();\n  const virtualScrollbarContainerRef = createRef<HTMLDivElement>();\n\n  if (traces === null || traces.length <= 0) {\n    return (\n      <TraceNotFound\n        meta={meta}\n        traceEventView={traceEventView}\n        traceSlug={traceSlug}\n        location={location}\n        organization={organization}\n      />\n    );\n  }\n\n  const traceInfo = props.traceInfo || getTraceInfo(traces);\n\n  const accumulator: {\n    index: number;\n    numberOfHiddenTransactionsAbove: number;\n    traceInfo: TraceInfo;\n    transactionGroups: React.ReactNode[];\n  } = {\n    index: 1,\n    numberOfHiddenTransactionsAbove: 0,\n    traceInfo,\n    transactionGroups: [],\n  };\n\n  const {transactionGroups, numberOfHiddenTransactionsAbove} = traces.reduce(\n    (acc, trace, index) => {\n      const isLastTransaction = index === traces.length - 1;\n      const hasChildren = trace.children.length > 0;\n      const isNextChildOrphaned =\n        !isLastTransaction && traces[index + 1].parent_span_id !== null;\n\n      const result = renderTransaction(trace, {\n        ...acc,\n        // if the root of a subtrace has a parent_span_id, then it must be an orphan\n        isOrphan: !isRootTransaction(trace),\n        isLast: isLastTransaction,\n        continuingDepths:\n          !isLastTransaction && hasChildren\n            ? [{depth: 0, isOrphanDepth: isNextChildOrphaned}]\n            : [],\n        hasGuideAnchor: index === 0,\n      });\n\n      acc.index = result.lastIndex + 1;\n      acc.numberOfHiddenTransactionsAbove = result.numberOfHiddenTransactionsAbove;\n      acc.transactionGroups.push(result.transactionGroup);\n      return acc;\n    },\n    accumulator\n  );\n\n  const traceView = (\n    <TraceDetailBody>\n      <DividerHandlerManager.Provider interactiveLayerRef={traceViewRef}>\n        <DividerHandlerManager.Consumer>\n          {({dividerPosition}) => (\n            <ScrollbarManager.Provider\n              dividerPosition={dividerPosition}\n              interactiveLayerRef={virtualScrollbarContainerRef}\n            >\n              <TracePanel>\n                <TraceViewHeaderContainer>\n                  <ScrollbarManager.Consumer>\n                    {({virtualScrollbarRef, scrollBarAreaRef, onDragStart, onScroll}) => {\n                      return (\n                        <ScrollbarContainer\n                          ref={virtualScrollbarContainerRef}\n                          style={{\n                            // the width of this component is shrunk to compensate for half of the width of the divider line\n                            width: `calc(${toPercent(dividerPosition)} - 0.5px)`,\n                          }}\n                          onScroll={onScroll}\n                        >\n                          <div\n                            style={{\n                              width: 0,\n                              height: '1px',\n                            }}\n                            ref={scrollBarAreaRef}\n                          />\n                          <VirtualScrollbar\n                            data-type=\"virtual-scrollbar\"\n                            ref={virtualScrollbarRef}\n                            onMouseDown={onDragStart}\n                          >\n                            <VirtualScrollbarGrip />\n                          </VirtualScrollbar>\n                        </ScrollbarContainer>\n                      );\n                    }}\n                  </ScrollbarManager.Consumer>\n                  <DividerSpacer />\n                </TraceViewHeaderContainer>\n                <TraceViewContainer ref={traceViewRef}>\n                  <AnchorLinkManager.Provider>\n                    <TransactionGroup\n                      location={location}\n                      organization={organization}\n                      traceInfo={traceInfo}\n                      transaction={{\n                        traceSlug,\n                        generation: 0,\n                        'transaction.duration':\n                          traceInfo.endTimestamp - traceInfo.startTimestamp,\n                        children: traces,\n                        start_timestamp: traceInfo.startTimestamp,\n                        timestamp: traceInfo.endTimestamp,\n                      }}\n                      continuingDepths={[]}\n                      isOrphan={false}\n                      isLast={false}\n                      index={0}\n                      isVisible\n                      hasGuideAnchor={false}\n                      renderedChildren={transactionGroups}\n                      barColor={pickBarColor('')}\n                    />\n                  </AnchorLinkManager.Provider>\n                  <TraceHiddenMessage\n                    isVisible\n                    numberOfHiddenTransactionsAbove={numberOfHiddenTransactionsAbove}\n                  />\n                  <LimitExceededMessage\n                    traceInfo={traceInfo}\n                    organization={organization}\n                    traceEventView={traceEventView}\n                    meta={meta}\n                  />\n                </TraceViewContainer>\n              </TracePanel>\n            </ScrollbarManager.Provider>\n          )}\n        </DividerHandlerManager.Consumer>\n      </DividerHandlerManager.Provider>\n    </TraceDetailBody>\n  );\n\n  sentrySpan?.finish();\n\n  return traceView;\n}\n","import {Component, createRef, Fragment} from 'react';\nimport {Location} from 'history';\n\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Count from 'sentry/components/count';\nimport * as AnchorLinkManager from 'sentry/components/events/interfaces/spans/anchorLinkManager';\nimport * as DividerHandlerManager from 'sentry/components/events/interfaces/spans/dividerHandlerManager';\nimport * as ScrollbarManager from 'sentry/components/events/interfaces/spans/scrollbarManager';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport {ROW_HEIGHT} from 'sentry/components/performance/waterfall/constants';\nimport {\n  Row,\n  RowCell,\n  RowCellContainer,\n} from 'sentry/components/performance/waterfall/row';\nimport {DurationPill, RowRectangle} from 'sentry/components/performance/waterfall/rowBar';\nimport {\n  DividerContainer,\n  DividerLine,\n  DividerLineGhostContainer,\n  ErrorBadge,\n} from 'sentry/components/performance/waterfall/rowDivider';\nimport {\n  RowTitle,\n  RowTitleContainer,\n  RowTitleContent,\n} from 'sentry/components/performance/waterfall/rowTitle';\nimport {\n  ConnectorBar,\n  TOGGLE_BORDER_BOX,\n  TreeConnector,\n  TreeToggle,\n  TreeToggleContainer,\n  TreeToggleIcon,\n} from 'sentry/components/performance/waterfall/treeConnector';\nimport {\n  getDurationDisplay,\n  getHumanDuration,\n  toPercent,\n} from 'sentry/components/performance/waterfall/utils';\nimport Tooltip from 'sentry/components/tooltip';\nimport {Organization} from 'sentry/types';\nimport {TraceFullDetailed} from 'sentry/utils/performance/quickTrace/types';\nimport {isTraceFullDetailed} from 'sentry/utils/performance/quickTrace/utils';\nimport Projects from 'sentry/utils/projects';\n\nimport {ProjectBadgeContainer} from './styles';\nimport TransactionDetail from './transactionDetail';\nimport {TraceInfo, TraceRoot, TreeDepth} from './types';\n\nconst MARGIN_LEFT = 0;\n\ntype Props = {\n  continuingDepths: TreeDepth[];\n  hasGuideAnchor: boolean;\n  index: number;\n  isExpanded: boolean;\n  isLast: boolean;\n  isOrphan: boolean;\n  isVisible: boolean;\n  location: Location;\n  organization: Organization;\n  toggleExpandedState: () => void;\n  traceInfo: TraceInfo;\n  transaction: TraceRoot | TraceFullDetailed;\n  barColor?: string;\n};\n\ntype State = {\n  showDetail: boolean;\n};\n\nclass TransactionBar extends Component<Props, State> {\n  state: State = {\n    showDetail: false,\n  };\n\n  transactionRowDOMRef = createRef<HTMLDivElement>();\n\n  toggleDisplayDetail = () => {\n    const {transaction} = this.props;\n    if (isTraceFullDetailed(transaction)) {\n      this.setState(state => ({\n        showDetail: !state.showDetail,\n      }));\n    }\n  };\n\n  getCurrentOffset() {\n    const {transaction} = this.props;\n    const {generation} = transaction;\n\n    return getOffset(generation);\n  }\n\n  renderConnector(hasToggle: boolean) {\n    const {continuingDepths, isExpanded, isOrphan, isLast, transaction} = this.props;\n\n    const {generation} = transaction;\n    const eventId = isTraceFullDetailed(transaction)\n      ? transaction.event_id\n      : transaction.traceSlug;\n\n    if (generation === 0) {\n      if (hasToggle) {\n        return (\n          <ConnectorBar\n            style={{right: '15px', height: '10px', bottom: '-5px', top: 'auto'}}\n            orphanBranch={false}\n          />\n        );\n      }\n      return null;\n    }\n\n    const connectorBars: Array<React.ReactNode> = continuingDepths.map(\n      ({depth, isOrphanDepth}) => {\n        if (generation - depth <= 1) {\n          // If the difference is less than or equal to 1, then it means that the continued\n          // bar is from its direct parent. In this case, do not render a connector bar\n          // because the tree connector below will suffice.\n          return null;\n        }\n\n        const left = -1 * getOffset(generation - depth - 1) - 2;\n\n        return (\n          <ConnectorBar\n            style={{left}}\n            key={`${eventId}-${depth}`}\n            orphanBranch={isOrphanDepth}\n          />\n        );\n      }\n    );\n\n    if (hasToggle && isExpanded) {\n      connectorBars.push(\n        <ConnectorBar\n          style={{\n            right: '15px',\n            height: '10px',\n            bottom: isLast ? `-${ROW_HEIGHT / 2 + 1}px` : '0',\n            top: 'auto',\n          }}\n          key={`${eventId}-last`}\n          orphanBranch={false}\n        />\n      );\n    }\n\n    return (\n      <TreeConnector isLast={isLast} hasToggler={hasToggle} orphanBranch={isOrphan}>\n        {connectorBars}\n      </TreeConnector>\n    );\n  }\n\n  renderToggle(errored: boolean) {\n    const {isExpanded, transaction, toggleExpandedState} = this.props;\n    const {children, generation} = transaction;\n    const left = this.getCurrentOffset();\n\n    if (children.length <= 0) {\n      return (\n        <TreeToggleContainer style={{left: `${left}px`}}>\n          {this.renderConnector(false)}\n        </TreeToggleContainer>\n      );\n    }\n\n    const isRoot = generation === 0;\n\n    return (\n      <TreeToggleContainer style={{left: `${left}px`}} hasToggler>\n        {this.renderConnector(true)}\n        <TreeToggle\n          disabled={isRoot}\n          isExpanded={isExpanded}\n          errored={errored}\n          onClick={event => {\n            event.stopPropagation();\n\n            if (isRoot) {\n              return;\n            }\n\n            toggleExpandedState();\n          }}\n        >\n          <Count value={children.length} />\n          {!isRoot && (\n            <div>\n              <TreeToggleIcon direction={isExpanded ? 'up' : 'down'} />\n            </div>\n          )}\n        </TreeToggle>\n      </TreeToggleContainer>\n    );\n  }\n\n  renderTitle(\n    scrollbarManagerChildrenProps: ScrollbarManager.ScrollbarManagerChildrenProps\n  ) {\n    const {generateContentSpanBarRef} = scrollbarManagerChildrenProps;\n    const {organization, transaction} = this.props;\n    const left = this.getCurrentOffset();\n    const errored = isTraceFullDetailed(transaction)\n      ? transaction.errors.length > 0\n      : false;\n\n    const content = isTraceFullDetailed(transaction) ? (\n      <Fragment>\n        <Projects orgId={organization.slug} slugs={[transaction.project_slug]}>\n          {({projects}) => {\n            const project = projects.find(p => p.slug === transaction.project_slug);\n            return (\n              <ProjectBadgeContainer>\n                <Tooltip title={transaction.project_slug}>\n                  <ProjectBadge\n                    project={project ? project : {slug: transaction.project_slug}}\n                    avatarSize={16}\n                    hideName\n                  />\n                </Tooltip>\n              </ProjectBadgeContainer>\n            );\n          }}\n        </Projects>\n        <RowTitleContent errored={errored}>\n          <strong>\n            {transaction['transaction.op']}\n            {' \\u2014 '}\n          </strong>\n          {transaction.transaction}\n        </RowTitleContent>\n      </Fragment>\n    ) : (\n      <RowTitleContent errored={false}>\n        <strong>{'Trace \\u2014 '}</strong>\n        {transaction.traceSlug}\n      </RowTitleContent>\n    );\n\n    return (\n      <RowTitleContainer ref={generateContentSpanBarRef()}>\n        {this.renderToggle(errored)}\n        <RowTitle\n          style={{\n            left: `${left}px`,\n            width: '100%',\n          }}\n        >\n          {content}\n        </RowTitle>\n      </RowTitleContainer>\n    );\n  }\n\n  renderDivider(\n    dividerHandlerChildrenProps: DividerHandlerManager.DividerHandlerManagerChildrenProps\n  ) {\n    if (this.state.showDetail) {\n      // Mock component to preserve layout spacing\n      return (\n        <DividerLine\n          showDetail\n          style={{\n            position: 'absolute',\n          }}\n        />\n      );\n    }\n\n    const {addDividerLineRef} = dividerHandlerChildrenProps;\n\n    return (\n      <DividerLine\n        ref={addDividerLineRef()}\n        style={{\n          position: 'absolute',\n        }}\n        onMouseEnter={() => {\n          dividerHandlerChildrenProps.setHover(true);\n        }}\n        onMouseLeave={() => {\n          dividerHandlerChildrenProps.setHover(false);\n        }}\n        onMouseOver={() => {\n          dividerHandlerChildrenProps.setHover(true);\n        }}\n        onMouseDown={dividerHandlerChildrenProps.onDragStart}\n        onClick={event => {\n          // we prevent the propagation of the clicks from this component to prevent\n          // the span detail from being opened.\n          event.stopPropagation();\n        }}\n      />\n    );\n  }\n\n  renderGhostDivider(\n    dividerHandlerChildrenProps: DividerHandlerManager.DividerHandlerManagerChildrenProps\n  ) {\n    const {dividerPosition, addGhostDividerLineRef} = dividerHandlerChildrenProps;\n\n    return (\n      <DividerLineGhostContainer\n        style={{\n          width: `calc(${toPercent(dividerPosition)} + 0.5px)`,\n          display: 'none',\n        }}\n      >\n        <DividerLine\n          ref={addGhostDividerLineRef()}\n          style={{\n            right: 0,\n          }}\n          className=\"hovering\"\n          onClick={event => {\n            // the ghost divider line should not be interactive.\n            // we prevent the propagation of the clicks from this component to prevent\n            // the span detail from being opened.\n            event.stopPropagation();\n          }}\n        />\n      </DividerLineGhostContainer>\n    );\n  }\n\n  renderErrorBadge() {\n    const {transaction} = this.props;\n\n    if (!isTraceFullDetailed(transaction) || !transaction.errors.length) {\n      return null;\n    }\n\n    return <ErrorBadge />;\n  }\n\n  renderRectangle() {\n    const {transaction, traceInfo, barColor} = this.props;\n    const {showDetail} = this.state;\n\n    // Use 1 as the difference in the event that startTimestamp === endTimestamp\n    const delta = Math.abs(traceInfo.endTimestamp - traceInfo.startTimestamp) || 1;\n    const startPosition = Math.abs(\n      transaction.start_timestamp - traceInfo.startTimestamp\n    );\n    const startPercentage = startPosition / delta;\n    const duration = Math.abs(transaction.timestamp - transaction.start_timestamp);\n    const widthPercentage = duration / delta;\n\n    return (\n      <RowRectangle\n        spanBarHatch={false}\n        style={{\n          backgroundColor: barColor,\n          left: `min(${toPercent(startPercentage || 0)}, calc(100% - 1px))`,\n          width: toPercent(widthPercentage || 0),\n        }}\n      >\n        <DurationPill\n          durationDisplay={getDurationDisplay({\n            left: startPercentage,\n            width: widthPercentage,\n          })}\n          showDetail={showDetail}\n          spanBarHatch={false}\n        >\n          {getHumanDuration(duration)}\n        </DurationPill>\n      </RowRectangle>\n    );\n  }\n\n  renderHeader({\n    dividerHandlerChildrenProps,\n    scrollbarManagerChildrenProps,\n  }: {\n    dividerHandlerChildrenProps: DividerHandlerManager.DividerHandlerManagerChildrenProps;\n    scrollbarManagerChildrenProps: ScrollbarManager.ScrollbarManagerChildrenProps;\n  }) {\n    const {hasGuideAnchor, index} = this.props;\n    const {showDetail} = this.state;\n    const {dividerPosition} = dividerHandlerChildrenProps;\n\n    return (\n      <RowCellContainer showDetail={showDetail}>\n        <RowCell\n          data-test-id=\"transaction-row-title\"\n          data-type=\"span-row-cell\"\n          style={{\n            width: `calc(${toPercent(dividerPosition)} - 0.5px)`,\n            paddingTop: 0,\n          }}\n          showDetail={showDetail}\n          onClick={this.toggleDisplayDetail}\n        >\n          <GuideAnchor target=\"trace_view_guide_row\" disabled={!hasGuideAnchor}>\n            {this.renderTitle(scrollbarManagerChildrenProps)}\n          </GuideAnchor>\n        </RowCell>\n        <DividerContainer>\n          {this.renderDivider(dividerHandlerChildrenProps)}\n          {this.renderErrorBadge()}\n        </DividerContainer>\n        <RowCell\n          data-test-id=\"transaction-row-duration\"\n          data-type=\"span-row-cell\"\n          showStriping={index % 2 !== 0}\n          style={{\n            width: `calc(${toPercent(1 - dividerPosition)} - 0.5px)`,\n            paddingTop: 0,\n          }}\n          showDetail={showDetail}\n          onClick={this.toggleDisplayDetail}\n        >\n          <GuideAnchor target=\"trace_view_guide_row_details\" disabled={!hasGuideAnchor}>\n            {this.renderRectangle()}\n          </GuideAnchor>\n        </RowCell>\n        {!showDetail && this.renderGhostDivider(dividerHandlerChildrenProps)}\n      </RowCellContainer>\n    );\n  }\n\n  scrollIntoView = () => {\n    const element = this.transactionRowDOMRef.current;\n    if (!element) {\n      return;\n    }\n    const boundingRect = element.getBoundingClientRect();\n    const offset = boundingRect.top + window.scrollY;\n    this.setState({showDetail: true}, () => window.scrollTo(0, offset));\n  };\n\n  renderDetail() {\n    const {location, organization, isVisible, transaction} = this.props;\n    const {showDetail} = this.state;\n\n    return (\n      <AnchorLinkManager.Consumer>\n        {({registerScrollFn, scrollToHash}) => {\n          if (!isTraceFullDetailed(transaction)) {\n            return null;\n          }\n\n          registerScrollFn(`#txn-${transaction.event_id}`, this.scrollIntoView, false);\n\n          if (!isVisible || !showDetail) {\n            return null;\n          }\n\n          return (\n            <TransactionDetail\n              location={location}\n              organization={organization}\n              transaction={transaction}\n              scrollToHash={scrollToHash}\n            />\n          );\n        }}\n      </AnchorLinkManager.Consumer>\n    );\n  }\n\n  render() {\n    const {isVisible, transaction} = this.props;\n    const {showDetail} = this.state;\n\n    return (\n      <Row\n        ref={this.transactionRowDOMRef}\n        visible={isVisible}\n        showBorder={showDetail}\n        cursor={isTraceFullDetailed(transaction) ? 'pointer' : 'default'}\n      >\n        <ScrollbarManager.Consumer>\n          {scrollbarManagerChildrenProps => (\n            <DividerHandlerManager.Consumer>\n              {dividerHandlerChildrenProps =>\n                this.renderHeader({\n                  dividerHandlerChildrenProps,\n                  scrollbarManagerChildrenProps,\n                })\n              }\n            </DividerHandlerManager.Consumer>\n          )}\n        </ScrollbarManager.Consumer>\n        {this.renderDetail()}\n      </Row>\n    );\n  }\n}\n\nfunction getOffset(generation) {\n  return generation * (TOGGLE_BORDER_BOX / 2) + MARGIN_LEFT;\n}\n\nexport default TransactionBar;\n","import {Component, Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport Clipboard from 'sentry/components/clipboard';\nimport DateTime from 'sentry/components/dateTime';\nimport Link from 'sentry/components/links/link';\nimport {\n  ErrorDot,\n  ErrorLevel,\n  ErrorMessageContent,\n  ErrorMessageTitle,\n  ErrorTitle,\n} from 'sentry/components/performance/waterfall/rowDetails';\nimport {generateIssueEventTarget} from 'sentry/components/quickTrace/utils';\nimport {PAGE_URL_PARAM} from 'sentry/constants/pageFilters';\nimport {IconLink} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {TraceFullDetailed} from 'sentry/utils/performance/quickTrace/types';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {CustomerProfiler} from 'sentry/utils/performanceForSentry';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nimport {Row, Tags, TransactionDetails, TransactionDetailsContainer} from './styles';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  scrollToHash: (hash: string) => void;\n  transaction: TraceFullDetailed;\n};\n\nclass TransactionDetail extends Component<Props> {\n  componentDidMount() {\n    const {organization, transaction} = this.props;\n\n    trackAdvancedAnalyticsEvent('performance_views.trace_view.open_transaction_details', {\n      organization,\n      operation: transaction['transaction.op'],\n      transaction: transaction.transaction,\n    });\n  }\n\n  renderTransactionErrors() {\n    const {organization, transaction} = this.props;\n    const {errors} = transaction;\n\n    if (errors.length === 0) {\n      return null;\n    }\n\n    return (\n      <Alert\n        system\n        type=\"error\"\n        expand={errors.map(error => (\n          <ErrorMessageContent key={error.event_id}>\n            <ErrorDot level={error.level} />\n            <ErrorLevel>{error.level}</ErrorLevel>\n            <ErrorTitle>\n              <Link to={generateIssueEventTarget(error, organization)}>\n                {error.title}\n              </Link>\n            </ErrorTitle>\n          </ErrorMessageContent>\n        ))}\n      >\n        <ErrorMessageTitle>\n          {tn(\n            'An error event occurred in this transaction.',\n            '%s error events occurred in this transaction.',\n            errors.length\n          )}\n        </ErrorMessageTitle>\n      </Alert>\n    );\n  }\n\n  renderGoToTransactionButton() {\n    const {location, organization, transaction} = this.props;\n\n    const eventSlug = generateEventSlug({\n      id: transaction.event_id,\n      project: transaction.project_slug,\n    });\n\n    const target = getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transaction.transaction,\n      omit(location.query, Object.values(PAGE_URL_PARAM))\n    );\n\n    return (\n      <StyledButton size=\"xs\" to={target}>\n        {t('View Event')}\n      </StyledButton>\n    );\n  }\n\n  renderGoToSummaryButton() {\n    const {location, organization, transaction} = this.props;\n\n    const target = transactionSummaryRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: transaction.transaction,\n      query: omit(location.query, Object.values(PAGE_URL_PARAM)),\n      projectID: String(transaction.project_id),\n    });\n\n    return (\n      <StyledButton size=\"xs\" to={target}>\n        {t('View Summary')}\n      </StyledButton>\n    );\n  }\n\n  renderMeasurements() {\n    const {transaction} = this.props;\n    const {measurements = {}} = transaction;\n\n    const measurementKeys = Object.keys(measurements)\n      .filter(name => Boolean(WEB_VITAL_DETAILS[`measurements.${name}`]))\n      .sort();\n\n    if (measurementKeys.length <= 0) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        {measurementKeys.map(measurement => (\n          <Row\n            key={measurement}\n            title={WEB_VITAL_DETAILS[`measurements.${measurement}`]?.name}\n          >\n            {`${Number(measurements[measurement].value.toFixed(3)).toLocaleString()}ms`}\n          </Row>\n        ))}\n      </Fragment>\n    );\n  }\n\n  scrollBarIntoView =\n    (transactionId: string) => (e: React.MouseEvent<HTMLAnchorElement>) => {\n      // do not use the default anchor behaviour\n      // because it will be hidden behind the minimap\n      e.preventDefault();\n\n      const hash = `#txn-${transactionId}`;\n\n      this.props.scrollToHash(hash);\n\n      // TODO(txiao): This is causing a rerender of the whole page,\n      // which can be slow.\n      //\n      // make sure to update the location\n      browserHistory.push({\n        ...this.props.location,\n        hash,\n      });\n    };\n\n  renderTransactionDetail() {\n    const {location, organization, transaction} = this.props;\n    const startTimestamp = Math.min(transaction.start_timestamp, transaction.timestamp);\n    const endTimestamp = Math.max(transaction.start_timestamp, transaction.timestamp);\n    const duration = (endTimestamp - startTimestamp) * 1000;\n    const durationString = `${Number(duration.toFixed(3)).toLocaleString()}ms`;\n\n    return (\n      <TransactionDetails>\n        <table className=\"table key-value\">\n          <tbody>\n            <Row\n              title={\n                <TransactionIdTitle\n                  onClick={this.scrollBarIntoView(transaction.event_id)}\n                >\n                  {t('Event ID')}\n                  <Clipboard\n                    value={`${window.location.href.replace(\n                      window.location.hash,\n                      ''\n                    )}#txn-${transaction.event_id}`}\n                  >\n                    <StyledIconLink />\n                  </Clipboard>\n                </TransactionIdTitle>\n              }\n              extra={this.renderGoToTransactionButton()}\n            >\n              {transaction.event_id}\n            </Row>\n            <Row title=\"Transaction\" extra={this.renderGoToSummaryButton()}>\n              {transaction.transaction}\n            </Row>\n            <Row title=\"Transaction Status\">{transaction['transaction.status']}</Row>\n            <Row title=\"Span ID\">{transaction.span_id}</Row>\n            <Row title=\"Project\">{transaction.project_slug}</Row>\n            <Row title=\"Start Date\">\n              {getDynamicText({\n                fixed: 'Mar 19, 2021 11:06:27 AM UTC',\n                value: (\n                  <Fragment>\n                    <DateTime date={startTimestamp * 1000} />\n                    {` (${startTimestamp})`}\n                  </Fragment>\n                ),\n              })}\n            </Row>\n            <Row title=\"End Date\">\n              {getDynamicText({\n                fixed: 'Mar 19, 2021 11:06:28 AM UTC',\n                value: (\n                  <Fragment>\n                    <DateTime date={endTimestamp * 1000} />\n                    {` (${endTimestamp})`}\n                  </Fragment>\n                ),\n              })}\n            </Row>\n            <Row title=\"Duration\">{durationString}</Row>\n            <Row title=\"Operation\">{transaction['transaction.op'] || ''}</Row>\n            {this.renderMeasurements()}\n            <Tags\n              location={location}\n              organization={organization}\n              transaction={transaction}\n            />\n          </tbody>\n        </table>\n      </TransactionDetails>\n    );\n  }\n\n  render() {\n    return (\n      <CustomerProfiler id=\"TransactionDetail\">\n        <TransactionDetailsContainer\n          onClick={event => {\n            // prevent toggling the transaction detail\n            event.stopPropagation();\n          }}\n        >\n          {this.renderTransactionErrors()}\n          {this.renderTransactionDetail()}\n        </TransactionDetailsContainer>\n      </CustomerProfiler>\n    );\n  }\n}\n\nconst TransactionIdTitle = styled('a')`\n  display: flex;\n  color: ${p => p.theme.textColor};\n  :hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nconst StyledIconLink = styled(IconLink)`\n  display: block;\n  color: ${p => p.theme.gray300};\n  margin-left: ${space(1)};\n`;\n\nconst StyledButton = styled(Button)`\n  position: absolute;\n  top: ${space(0.75)};\n  right: ${space(0.5)};\n`;\n\nexport default TransactionDetail;\n","import {Component, Fragment} from 'react';\nimport {Location} from 'history';\n\nimport {\n  ScrollbarManagerChildrenProps,\n  withScrollbarManager,\n} from 'sentry/components/events/interfaces/spans/scrollbarManager';\nimport {Organization} from 'sentry/types';\nimport {TraceFullDetailed} from 'sentry/utils/performance/quickTrace/types';\n\nimport TransactionBar from './transactionBar';\nimport {TraceInfo, TraceRoot, TreeDepth} from './types';\n\ntype Props = ScrollbarManagerChildrenProps & {\n  continuingDepths: TreeDepth[];\n  hasGuideAnchor: boolean;\n  index: number;\n  isLast: boolean;\n  isOrphan: boolean;\n  isVisible: boolean;\n  location: Location;\n  organization: Organization;\n  renderedChildren: React.ReactNode[];\n  traceInfo: TraceInfo;\n  transaction: TraceRoot | TraceFullDetailed;\n  barColor?: string;\n};\n\ntype State = {\n  isExpanded: boolean;\n};\n\nclass TransactionGroup extends Component<Props, State> {\n  state: State = {\n    isExpanded: true,\n  };\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.isExpanded !== this.state.isExpanded) {\n      this.props.updateScrollState();\n    }\n  }\n\n  toggleExpandedState = () => {\n    this.setState(({isExpanded}) => ({isExpanded: !isExpanded}));\n  };\n\n  render() {\n    const {\n      location,\n      organization,\n      transaction,\n      traceInfo,\n      continuingDepths,\n      isOrphan,\n      isLast,\n      index,\n      isVisible,\n      hasGuideAnchor,\n      renderedChildren,\n      barColor,\n    } = this.props;\n    const {isExpanded} = this.state;\n\n    return (\n      <Fragment>\n        <TransactionBar\n          location={location}\n          organization={organization}\n          index={index}\n          transaction={transaction}\n          traceInfo={traceInfo}\n          continuingDepths={continuingDepths}\n          isOrphan={isOrphan}\n          isLast={isLast}\n          isExpanded={isExpanded}\n          toggleExpandedState={this.toggleExpandedState}\n          isVisible={isVisible}\n          hasGuideAnchor={hasGuideAnchor}\n          barColor={barColor}\n        />\n        {isExpanded && renderedChildren}\n      </Fragment>\n    );\n  }\n}\n\nexport default withScrollbarManager(TransactionGroup);\n"],"names":["Sentry","addErrorMessage","addLoadingMessage","addSuccessMessage","ReleaseActions","t","ReleaseStore","getReleaseStoreKey","ReleaseStatus","getProjectRelease","api","params","orgSlug","projectSlug","releaseVersion","path","encodeURIComponent","state","releaseLoading","loadRelease","requestPromise","method","then","res","loadReleaseSuccess","catch","err","status","loadReleaseError","withScope","scope","setLevel","setFingerprint","captureException","getReleaseDeploys","deploysLoading","loadDeploys","loadDeploysSuccess","loadDeploysError","archiveRelease","data","Archived","projects","version","release","error","responseJSON","detail","restoreRelease","Active","createActions","Feature","FeatureDisabled","Hovercard","DiscoverFeature","children","noFeatureMessage","renderDisabled","p","features","hasFeature","Button","DiscoverButton","buttonProps","createStore","OrganizationActions","makeSafeRefluxStore","storeConfig","undefined","Map","releaseError","deploys","deploysError","listenables","unsubscribeListeners","init","push","listenTo","update","updateOrganization","reset","trigger","org","slug","releaseKey","get","withApi","GenericDiscoverQuery","shouldRefetchData","prevProps","nextProps","transactionName","transactionThreshold","transactionThresholdMetric","DiscoverQuery","props","endpoint","useEvents","afterFetch","_","fields","otherMeta","meta","Link","MessageRow","tct","LimitExceededMessage","traceInfo","traceEventView","organization","count","transactions","size","totalTransactions","target","getResultsViewUrlTarget","discover","EventTagsPill","SecondaryHeader","Panel","Pills","SearchBar","space","defined","appendTagCondition","transactionSummaryRouteWithQuery","Row","SpanDetails","TransactionDetails","SpanDetailContainer","TransactionDetailsContainer","TraceSearchContainer","TraceSearchBar","TraceViewHeaderContainer","theme","border","TraceDetailHeader","breakpoints","medium","TraceDetailBody","TraceViewContainer","TracePanel","ProjectBadgeContainer","StyledPills","Tags","location","transaction","tags","length","map","tag","index","pathname","streamPath","query","projectID","String","project_id","key","value","project_slug","Fragment","Alert","LoadingError","LoadingIndicator","ErrorDot","ErrorLevel","ErrorMessageContent","ErrorTitle","TraceNotFound","traceSlug","errors","errorsEventView","withColumns","kind","field","isLoading","tableData","message","level","id","title","ErrorLabel","React","createRef","useEffect","AnchorLinkManager","DividerHandlerManager","ScrollbarManager","DividerSpacer","ScrollbarContainer","VirtualScrollbar","VirtualScrollbarGrip","pickBarColor","toPercent","trackAdvancedAnalyticsEvent","TransactionGroup","getTraceInfo","isRootTransaction","TraceHiddenMessage","isVisible","numberOfHiddenTransactionsAbove","numOfTransaction","isTransactionVisible","filteredTransactionIds","has","event_id","TraceView","traces","sentryTransaction","getCurrentHub","getScope","getTransaction","sentrySpan","startChild","op","description","renderTransaction","continuingDepths","isOrphan","isLast","hasGuideAnchor","eventId","generation","accumulated","reduce","acc","child","idx","isLastChild","hasChildren","result","depth","isOrphanDepth","lastIndex","renderedChildren","transactionGroup","traceViewRef","virtualScrollbarContainerRef","accumulator","transactionGroups","trace","isLastTransaction","isNextChildOrphaned","parent_span_id","traceView","dividerPosition","virtualScrollbarRef","scrollBarAreaRef","onDragStart","onScroll","width","height","endTimestamp","startTimestamp","start_timestamp","timestamp","finish","Component","GuideAnchor","Count","ProjectBadge","ROW_HEIGHT","RowCell","RowCellContainer","DurationPill","RowRectangle","DividerContainer","DividerLine","DividerLineGhostContainer","ErrorBadge","RowTitle","RowTitleContainer","RowTitleContent","ConnectorBar","TOGGLE_BORDER_BOX","TreeConnector","TreeToggle","TreeToggleContainer","TreeToggleIcon","getDurationDisplay","getHumanDuration","Tooltip","isTraceFullDetailed","Projects","TransactionDetail","MARGIN_LEFT","TransactionBar","showDetail","setState","element","transactionRowDOMRef","current","boundingRect","getBoundingClientRect","offset","top","window","scrollY","scrollTo","getCurrentOffset","getOffset","renderConnector","hasToggle","isExpanded","right","bottom","connectorBars","left","renderToggle","errored","toggleExpandedState","isRoot","event","stopPropagation","renderTitle","scrollbarManagerChildrenProps","generateContentSpanBarRef","content","project","find","renderDivider","dividerHandlerChildrenProps","position","addDividerLineRef","setHover","renderGhostDivider","addGhostDividerLineRef","display","renderErrorBadge","renderRectangle","barColor","delta","Math","abs","startPosition","startPercentage","duration","widthPercentage","backgroundColor","renderHeader","paddingTop","toggleDisplayDetail","renderDetail","registerScrollFn","scrollToHash","scrollIntoView","render","browserHistory","omit","Clipboard","DateTime","ErrorMessageTitle","generateIssueEventTarget","PAGE_URL_PARAM","IconLink","tn","generateEventSlug","getDynamicText","getTransactionDetailsUrl","WEB_VITAL_DETAILS","CustomerProfiler","transactionId","e","preventDefault","hash","componentDidMount","operation","renderTransactionErrors","renderGoToTransactionButton","eventSlug","Object","values","renderGoToSummaryButton","renderMeasurements","measurements","measurementKeys","keys","filter","name","Boolean","sort","measurement","Number","toFixed","toLocaleString","renderTransactionDetail","min","max","durationString","scrollBarIntoView","href","replace","span_id","fixed","TransactionIdTitle","textColor","StyledIconLink","gray300","StyledButton","withScrollbarManager","componentDidUpdate","_prevProps","prevState","updateScrollState"],"sourceRoot":""}