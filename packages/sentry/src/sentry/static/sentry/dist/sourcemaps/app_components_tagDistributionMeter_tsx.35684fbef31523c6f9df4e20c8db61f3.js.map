{"version":3,"file":"chunks/app_components_tagDistributionMeter_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/tagDistributionMeter.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport {TagSegment} from 'sentry/actionCreators/events';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {percent} from 'sentry/utils';\n\ntype Props = {\n  segments: TagSegment[];\n  title: string;\n  totalValues: number;\n  hasError?: boolean;\n  isLoading?: boolean;\n  onTagClick?: (title: string, value: TagSegment) => void;\n  renderEmpty?: () => React.ReactNode;\n  renderError?: () => React.ReactNode;\n  renderLoading?: () => React.ReactNode;\n  showReleasePackage?: boolean;\n};\n\ntype SegmentValue = {\n  index: number;\n  onClick: () => void;\n  to: LocationDescriptor;\n};\n\nfunction TagDistributionMeter({\n  isLoading = false,\n  hasError = false,\n  renderLoading = () => null,\n  renderEmpty = () => <p>{t('No recent data.')}</p>,\n  renderError = () => null,\n  showReleasePackage = false,\n  segments,\n  title,\n  totalValues,\n  onTagClick,\n}: Props) {\n  function renderTitle() {\n    if (!Array.isArray(segments) || segments.length <= 0) {\n      return (\n        <Title>\n          <TitleType>{title}</TitleType>\n        </Title>\n      );\n    }\n\n    const largestSegment = segments[0];\n    const pct = percent(largestSegment.count, totalValues);\n    const pctLabel = Math.floor(pct);\n    const renderLabel = () => {\n      switch (title) {\n        case 'release':\n          return (\n            <Label>\n              <Version\n                version={largestSegment.name}\n                anchor={false}\n                tooltipRawVersion\n                withPackage={showReleasePackage}\n                truncate\n              />\n            </Label>\n          );\n        default:\n          return <Label>{largestSegment.name || t('n/a')}</Label>;\n      }\n    };\n\n    return (\n      <Title>\n        <TitleType>{title}</TitleType>\n        <TitleDescription>\n          {renderLabel()}\n          {isLoading || hasError ? null : <Percent>{pctLabel}%</Percent>}\n        </TitleDescription>\n      </Title>\n    );\n  }\n\n  function renderSegments() {\n    if (isLoading) {\n      return renderLoading();\n    }\n\n    if (hasError) {\n      return <SegmentBar>{renderError()}</SegmentBar>;\n    }\n\n    if (totalValues === 0) {\n      return <SegmentBar>{renderEmpty()}</SegmentBar>;\n    }\n\n    return (\n      <SegmentBar>\n        {segments.map((value, index) => {\n          const pct = percent(value.count, totalValues);\n          const pctLabel = Math.floor(pct);\n          const renderTooltipValue = () => {\n            switch (title) {\n              case 'release':\n                return (\n                  <Version\n                    version={value.name}\n                    anchor={false}\n                    withPackage={showReleasePackage}\n                  />\n                );\n              default:\n                return value.name || t('n/a');\n            }\n          };\n\n          const tooltipHtml = (\n            <Fragment>\n              <div className=\"truncate\">{renderTooltipValue()}</div>\n              {pctLabel}%\n            </Fragment>\n          );\n\n          const segmentProps: SegmentValue = {\n            index,\n            to: value.url,\n            onClick: () => onTagClick?.(title, value),\n          };\n\n          return (\n            <div\n              data-test-id={`tag-${title}-segment-${value.value}`}\n              key={value.value}\n              style={{width: pct + '%'}}\n            >\n              <Tooltip title={tooltipHtml} containerDisplayMode=\"block\">\n                {value.isOther ? (\n                  <OtherSegment aria-label={t('Other')} />\n                ) : (\n                  <Segment\n                    aria-label={t(\n                      'Add the %s segment tag to the search query',\n                      value.value\n                    )}\n                    {...segmentProps}\n                  />\n                )}\n              </Tooltip>\n            </div>\n          );\n        })}\n      </SegmentBar>\n    );\n  }\n\n  const totalVisible = segments.reduce((sum, value) => sum + value.count, 0);\n  const hasOther = totalVisible < totalValues;\n\n  if (hasOther) {\n    segments.push({\n      isOther: true,\n      name: t('Other'),\n      value: 'other',\n      count: totalValues - totalVisible,\n      url: '',\n    });\n  }\n\n  return (\n    <TagSummary>\n      {renderTitle()}\n      {renderSegments()}\n    </TagSummary>\n  );\n}\n\nexport default TagDistributionMeter;\n\nconst COLORS = [\n  '#3A3387',\n  '#5F40A3',\n  '#8C4FBD',\n  '#B961D3',\n  '#DE76E4',\n  '#EF91E8',\n  '#F7B2EC',\n  '#FCD8F4',\n  '#FEEBF9',\n];\n\nconst TagSummary = styled('div')`\n  margin-bottom: ${space(1)};\n`;\n\nconst SegmentBar = styled('div')`\n  display: flex;\n  overflow: hidden;\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  font-size: ${p => p.theme.fontSizeSmall};\n  justify-content: space-between;\n  margin-bottom: ${space(0.25)};\n  line-height: 1.1;\n`;\n\nconst TitleType = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-weight: bold;\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst TitleDescription = styled('div')`\n  display: flex;\n  color: ${p => p.theme.gray300};\n  text-align: right;\n`;\n\nconst Label = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  max-width: 150px;\n`;\n\nconst Percent = styled('div')`\n  font-weight: bold;\n  font-variant-numeric: tabular-nums;\n  padding-left: ${space(0.5)};\n  color: ${p => p.theme.textColor};\n`;\n\nconst OtherSegment = styled('span')`\n  display: block;\n  width: 100%;\n  height: 16px;\n  color: inherit;\n  outline: none;\n  background-color: ${COLORS[COLORS.length - 1]};\n`;\n\nconst Segment = styled(Link, {shouldForwardProp: isPropValid})<SegmentValue>`\n  display: block;\n  width: 100%;\n  height: 16px;\n  color: inherit;\n  outline: none;\n  background-color: ${p => COLORS[p.index]};\n  border-radius: 0;\n`;\n"],"names":["Fragment","isPropValid","Link","Tooltip","Version","t","space","percent","TagDistributionMeter","isLoading","hasError","renderLoading","renderEmpty","renderError","showReleasePackage","segments","title","totalValues","onTagClick","renderTitle","Array","isArray","length","largestSegment","pct","count","pctLabel","Math","floor","renderLabel","name","renderSegments","map","value","index","renderTooltipValue","tooltipHtml","segmentProps","to","url","onClick","width","isOther","totalVisible","reduce","sum","hasOther","push","COLORS","TagSummary","SegmentBar","p","theme","borderRadius","Title","fontSizeSmall","TitleType","textColor","overflowEllipsis","TitleDescription","gray300","Label","Percent","OtherSegment","Segment","shouldForwardProp"],"sourceRoot":""}