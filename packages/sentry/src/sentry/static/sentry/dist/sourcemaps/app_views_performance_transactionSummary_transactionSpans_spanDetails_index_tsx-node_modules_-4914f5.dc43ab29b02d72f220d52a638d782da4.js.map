{"version":3,"file":"chunks/app_views_performance_transactionSummary_transactionSpans_spanDetails_index_tsx-node_modules_-4914f5.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/events.tsx","webpack:///./app/components/charts/barChartZoom.tsx","webpack:///./app/components/charts/chartZoom.tsx","webpack:///./app/components/charts/components/dataZoomInside.tsx","webpack:///./app/components/charts/components/dataZoomSlider.tsx","webpack:///./app/components/charts/components/toolBox.tsx","webpack:///./app/components/charts/errorPanel.tsx","webpack:///./app/components/charts/eventsRequest.tsx","webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/optionSelector.tsx","webpack:///./app/components/charts/transitionChart.tsx","webpack:///./app/components/charts/transparentLoadingMask.tsx","webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/components/performanceDuration.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/getPeriod.tsx","webpack:///./app/utils/performance/histogram/constants.tsx","webpack:///./app/utils/performance/histogram/index.tsx","webpack:///./app/utils/performance/histogram/spanHistogramQuery.tsx","webpack:///./app/utils/performance/suspectSpans/spanExamplesQuery.tsx","webpack:///./app/utils/performance/suspectSpans/suspectSpansQuery.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/chart.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/exclusiveTimeHistogram.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/exclusiveTimeTimeSeries.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/index.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/spanDetailsControls.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/spanDetailsHeader.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/spanDetailsTable.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/utils.tsx","webpack:///../node_modules/lodash/assign.js","webpack:///../node_modules/lodash/maxBy.js","webpack:///../node_modules/lodash/negate.js","webpack:///../node_modules/lodash/omitBy.js"],"sourcesContent":["import {LocationDescriptor} from 'history';\nimport pick from 'lodash/pick';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {canIncludePreviousPeriod} from 'sentry/components/charts/utils';\nimport {\n  DateString,\n  EventsStats,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {LocationQuery} from 'sentry/utils/discover/eventView';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {PERFORMANCE_URL_PARAM} from 'sentry/utils/performance/constants';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\ntype Options = {\n  organization: OrganizationSummary;\n  partial: boolean;\n  comparisonDelta?: number;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  excludeOther?: boolean;\n  field?: string[];\n  generatePathname?: (org: OrganizationSummary) => string;\n  includePrevious?: boolean;\n  interval?: string;\n  limit?: number;\n  orderby?: string;\n  period?: string | null;\n  project?: Readonly<number[]>;\n  query?: string;\n  queryBatching?: QueryBatching;\n  queryExtras?: Record<string, string>;\n  referrer?: string;\n  start?: DateString;\n  team?: Readonly<string | string[]>;\n  topEvents?: number;\n  withoutZerofill?: boolean;\n  yAxis?: string | string[];\n};\n\n/**\n * Make requests to `events-stats` endpoint\n *\n * @param {Object} api API client instance\n * @param {Object} options Request parameters\n * @param {Object} options.organization Organization object\n * @param {Number[]} options.project List of project ids\n * @param {String[]} options.environment List of environments to query for\n * @param {Boolean} options.excludeOther Exclude the \"Other\" series when making a topEvents query\n * @param {String[]} options.team List of teams to query for\n * @param {String} options.period Time period to query for, in the format: <integer><units> where units are \"d\" or \"h\"\n * @param {String} options.interval Time interval to group results in, in the format: <integer><units> where units are \"d\", \"h\", \"m\", \"s\"\n * @param {Number} options.comparisonDelta Comparison delta for change alert event stats to include comparison stats\n * @param {Boolean} options.includePrevious Should request also return reqsults for previous period?\n * @param {Number} options.limit The number of rows to return\n * @param {String} options.query Search query\n * @param {QueryBatching} options.queryBatching A container for batching functions from a provider\n * @param {Record<string, string>} options.queryExtras A list of extra query parameters\n * @param {(org: OrganizationSummary) => string} options.generatePathname A function that returns an override for the pathname\n */\nexport const doEventsRequest = <IncludeAllArgsType extends boolean = false>(\n  api: Client,\n  {\n    organization,\n    project,\n    environment,\n    team,\n    period,\n    start,\n    end,\n    interval,\n    comparisonDelta,\n    includePrevious,\n    query,\n    yAxis,\n    field,\n    topEvents,\n    orderby,\n    partial,\n    withoutZerofill,\n    referrer,\n    queryBatching,\n    generatePathname,\n    queryExtras,\n    excludeOther,\n    includeAllArgs,\n  }: {includeAllArgs?: IncludeAllArgsType} & Options\n): IncludeAllArgsType extends true\n  ? Promise<\n      [EventsStats | MultiSeriesEventsStats, string | undefined, ResponseMeta | undefined]\n    >\n  : Promise<EventsStats | MultiSeriesEventsStats> => {\n  const pathname =\n    generatePathname?.(organization) ??\n    `/organizations/${organization.slug}/events-stats/`;\n\n  const shouldDoublePeriod = canIncludePreviousPeriod(includePrevious, period);\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      interval,\n      comparisonDelta,\n      project,\n      environment,\n      team,\n      query,\n      yAxis,\n      field,\n      topEvents,\n      orderby,\n      partial: partial ? '1' : undefined,\n      withoutZerofill: withoutZerofill ? '1' : undefined,\n      referrer: referrer ? referrer : 'api.organization-event-stats',\n      excludeOther: excludeOther ? '1' : undefined,\n    }).filter(([, value]) => typeof value !== 'undefined')\n  );\n\n  // Doubling period for absolute dates is not accurate unless starting and\n  // ending times are the same (at least for daily intervals). This is\n  // the tradeoff for now.\n  const periodObj = getPeriod({period, start, end}, {shouldDoublePeriod});\n\n  const queryObject = {\n    includeAllArgs,\n    query: {\n      ...urlQuery,\n      ...periodObj,\n      ...queryExtras,\n    },\n  };\n\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, pathname, queryObject);\n  }\n\n  return api.requestPromise<IncludeAllArgsType>(pathname, queryObject);\n};\n\nexport type EventQuery = {\n  field: string[];\n  query: string;\n  environment?: string[];\n  equation?: string[];\n  noPagination?: boolean;\n  per_page?: number;\n  project?: string | string[];\n  referrer?: string;\n  sort?: string | string[];\n  team?: string | string[];\n};\n\nexport type TagSegment = {\n  count: number;\n  name: string;\n  url: LocationDescriptor;\n  value: string;\n  isOther?: boolean;\n  key?: string;\n};\n\nexport type Tag = {\n  key: string;\n  topValues: Array<TagSegment>;\n};\n\n/**\n * Fetches tag facets for a query\n */\nexport function fetchTagFacets(\n  api: Client,\n  orgSlug: string,\n  query: EventQuery\n): Promise<Tag[]> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  return api.requestPromise(`/organizations/${orgSlug}/events-facets/`, {\n    query: queryOption,\n  });\n}\n\n/**\n * Fetches total count of events for a given query\n */\nexport function fetchTotalCount(\n  api: Client,\n  orgSlug: String,\n  query: EventQuery & LocationQuery\n): Promise<number> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  type Response = {\n    count: number;\n  };\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/events-meta/`, {\n      query: queryOption,\n    })\n    .then((res: Response) => res.count);\n}\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {EChartChartReadyHandler, EChartDataZoomHandler} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\n\ntype RenderProps = {\n  dataZoom: ReturnType<typeof DataZoomInside>;\n  onChartReady: EChartChartReadyHandler;\n  onDataZoom: EChartDataZoomHandler;\n  toolBox: ReturnType<typeof ToolBox>;\n};\n\nexport type BarChartBucket = {\n  end: number;\n  start: number;\n};\n\ntype Props = {\n  /**\n   * This is the list of bucket start and end ranges. This is used by the\n   * component to determine the start and end of the zoom.\n   */\n  buckets: BarChartBucket[];\n  /**\n   * The children function that will receive the render props and return\n   * a rendered chart.\n   */\n  children: (props: RenderProps) => React.ReactNode;\n  location: Location;\n  /**\n   * This is the query parameter the end of the zoom will be propagated to.\n   */\n  paramEnd: string;\n  /**\n   * This is the query parameter the start of the zoom will be propagated to.\n   */\n  paramStart: string;\n  /**\n   * If you need the dataZoom control to control more than one chart.\n   * you can provide a list of the axis indexes.\n   */\n  xAxisIndex: number[];\n  /**\n   * This is the minimum width of the zoom. If the targeted zoom area is\n   * smaller than is specified by this parameter, the zoom will be cancelled\n   * and the `onDataZoomCancelled` callback will be called.\n   */\n  minZoomWidth?: number;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  /**\n   * This callback is called when the zoom action was cancelled. It can happen\n   * when `minZoomWidth` is specified and the user tries to zoom on an area\n   * smaller than that.\n   */\n  onDataZoomCancelled?: () => void;\n  /**\n   *\n   */\n  onHistoryPush?: (start: number, end: number) => void;\n};\n\nclass BarChartZoom extends Component<Props> {\n  zooming: (() => void) | null = null;\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // Both of these values should not be null, but we include it just in case.\n    // These values are null when the user uses the toolbox included in ECharts\n    // to navigate back through zoom history, but we hide it below.\n    if (startValue !== null && endValue !== null) {\n      const {buckets, location, paramStart, paramEnd, minZoomWidth, onHistoryPush} =\n        this.props;\n      const {start} = buckets[startValue];\n      const {end} = buckets[endValue];\n\n      if (minZoomWidth === undefined || end - start > minZoomWidth) {\n        const target = {\n          pathname: location.pathname,\n          query: {\n            ...location.query,\n            [paramStart]: start,\n            [paramEnd]: end,\n          },\n        };\n        if (onHistoryPush) {\n          onHistoryPush(start, end);\n        } else {\n          browserHistory.push(target);\n        }\n      } else {\n        // Dispatch the restore action here to stop ECharts from zooming\n        chart.dispatchAction({type: 'restore'});\n        callIfFunction(this.props.onDataZoomCancelled);\n      }\n    } else {\n      // Dispatch the restore action here to stop ECharts from zooming\n      chart.dispatchAction({type: 'restore'});\n      callIfFunction(this.props.onDataZoomCancelled);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  render() {\n    const {children, xAxisIndex} = this.props;\n\n    const renderProps = {\n      onChartReady: this.handleChartReady,\n      onFinished: this.handleChartFinished,\n      dataZoom: DataZoomInside({xAxisIndex}),\n      // We must include data zoom in the toolbox for the zoom to work,\n      // but we do not want to show the toolbox components.\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default BarChartZoom;\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport type {\n  DataZoomComponentOption,\n  InsideDataZoomComponentOption,\n  ToolboxComponentOption,\n  XAXisComponentOption,\n} from 'echarts';\nimport moment from 'moment';\nimport * as qs from 'query-string';\n\nimport {updateDateTime} from 'sentry/actionCreators/pageFilters';\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport DataZoomSlider from 'sentry/components/charts/components/dataZoomSlider';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {DateString} from 'sentry/types';\nimport {\n  EChartChartReadyHandler,\n  EChartDataZoomHandler,\n  EChartFinishedHandler,\n  EChartRestoreHandler,\n} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {getUtcDateString, getUtcToLocalDateObject} from 'sentry/utils/dates';\n\nconst getDate = date =>\n  date ? moment.utc(date).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS) : null;\n\ntype Period = {\n  end: DateString;\n  period: string | null;\n  start: DateString;\n};\n\nconst ZoomPropKeys = [\n  'period',\n  'xAxis',\n  'onChartReady',\n  'onDataZoom',\n  'onRestore',\n  'onFinished',\n] as const;\n\nexport type ZoomRenderProps = Pick<Props, typeof ZoomPropKeys[number]> & {\n  dataZoom?: DataZoomComponentOption[];\n  end?: Date;\n  isGroupedByDate?: boolean;\n  showTimeInTooltip?: boolean;\n  start?: Date;\n  toolBox?: ToolboxComponentOption;\n  utc?: boolean;\n};\n\ntype Props = {\n  children: (props: ZoomRenderProps) => React.ReactNode;\n  chartZoomOptions?: DataZoomComponentOption;\n  disabled?: boolean;\n  end?: DateString;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  onFinished?: EChartFinishedHandler;\n  onRestore?: EChartRestoreHandler;\n  onZoom?: (period: Period) => void;\n  period?: string | null;\n  router?: InjectedRouter;\n  showSlider?: boolean;\n  start?: DateString;\n  usePageDate?: boolean;\n  utc?: boolean | null;\n  xAxis?: XAXisComponentOption;\n  xAxisIndex?: number | number[];\n};\n\n/**\n * This is a very opinionated component that takes a render prop through `children`. It\n * will provide props to be passed to `BaseChart` to enable support of zooming without\n * eCharts' clunky zoom toolboxes.\n *\n * This also is very tightly coupled with the Global Selection Header. We can make it more\n * generic if need be in the future.\n */\nclass ChartZoom extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    // Zoom history\n    this.history = [];\n\n    // Initialize current period instance state for zoom history\n    this.saveCurrentPeriod(props);\n  }\n\n  componentDidUpdate() {\n    if (this.props.disabled) {\n      return;\n    }\n\n    // When component updates, make sure we sync current period state\n    // for use in zoom history\n    this.saveCurrentPeriod(this.props);\n  }\n\n  history: Period[];\n  currentPeriod?: Period;\n  zooming: (() => void) | null = null;\n\n  /**\n   * Save current period state from period in props to be used\n   * in handling chart's zoom history state\n   */\n  saveCurrentPeriod = props => {\n    this.currentPeriod = {\n      period: props.period,\n      start: getDate(props.start),\n      end: getDate(props.end),\n    };\n  };\n\n  /**\n   * Sets the new period due to a zoom related action\n   *\n   * Saves the current period to an instance property so that we\n   * can control URL state when zoom history is being manipulated\n   * by the chart controls.\n   *\n   * Saves a callback function to be called after chart animation is completed\n   */\n  setPeriod = ({period, start, end}, saveHistory = false) => {\n    const {router, onZoom, usePageDate} = this.props;\n    const startFormatted = getDate(start);\n    const endFormatted = getDate(end);\n\n    // Save period so that we can revert back to it when using echarts \"back\" navigation\n    if (saveHistory) {\n      this.history.push(this.currentPeriod!);\n    }\n\n    // Callback to let parent component know zoom has changed\n    // This is required for some more perceived responsiveness since\n    // we delay updating URL state so that chart animation can finish\n    //\n    // Parent container can use this to change into a loading state before\n    // URL parameters are changed\n    callIfFunction(onZoom, {\n      period,\n      start: startFormatted,\n      end: endFormatted,\n    });\n\n    this.zooming = () => {\n      if (usePageDate && router) {\n        const newQuery = {\n          ...router.location.query,\n          pageStart: start ? getUtcDateString(start) : undefined,\n          pageEnd: end ? getUtcDateString(end) : undefined,\n          pageStatsPeriod: period ?? undefined,\n        };\n\n        // Only push new location if query params has changed because this will cause a heavy re-render\n        if (qs.stringify(newQuery) !== qs.stringify(router.location.query)) {\n          router.push({\n            pathname: router.location.pathname,\n            query: newQuery,\n          });\n        }\n      } else {\n        updateDateTime(\n          {\n            period,\n            start: startFormatted\n              ? getUtcToLocalDateObject(startFormatted)\n              : startFormatted,\n            end: endFormatted ? getUtcToLocalDateObject(endFormatted) : endFormatted,\n          },\n          router\n        );\n      }\n\n      this.saveCurrentPeriod({period, start, end});\n    };\n  };\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Restores the chart to initial viewport/zoom level\n   *\n   * Updates URL state to reflect initial params\n   */\n  handleZoomRestore = (evt, chart) => {\n    if (!this.history.length) {\n      return;\n    }\n\n    this.setPeriod(this.history[0]);\n\n    // reset history\n    this.history = [];\n\n    callIfFunction(this.props.onRestore, evt, chart);\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // if `rangeStart` and `rangeEnd` are null, then we are going back\n    if (startValue === null && endValue === null) {\n      const previousPeriod = this.history.pop();\n\n      if (!previousPeriod) {\n        return;\n      }\n\n      this.setPeriod(previousPeriod);\n    } else {\n      const start = moment.utc(startValue);\n\n      // Add a day so we go until the end of the day (e.g. next day at midnight)\n      const end = moment.utc(endValue);\n\n      this.setPeriod({period: null, start, end}, true);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n\n    callIfFunction(this.props.onFinished);\n  };\n\n  render() {\n    const {\n      utc: _utc,\n      start: _start,\n      end: _end,\n      disabled,\n      children,\n      xAxisIndex,\n\n      router: _router,\n      onZoom: _onZoom,\n      onRestore: _onRestore,\n      onChartReady: _onChartReady,\n      onDataZoom: _onDataZoom,\n      onFinished: _onFinished,\n      showSlider,\n      chartZoomOptions,\n      ...props\n    } = this.props;\n\n    const utc = _utc ?? undefined;\n    const start = _start ? getUtcToLocalDateObject(_start) : undefined;\n    const end = _end ? getUtcToLocalDateObject(_end) : undefined;\n\n    if (disabled) {\n      return children({\n        utc,\n        start,\n        end,\n        ...props,\n      });\n    }\n    const renderProps = {\n      // Zooming only works when grouped by date\n      isGroupedByDate: true,\n      onChartReady: this.handleChartReady,\n      utc,\n      start,\n      end,\n      dataZoom: showSlider\n        ? [\n            ...DataZoomSlider({xAxisIndex, ...chartZoomOptions}),\n            ...DataZoomInside({\n              xAxisIndex,\n              ...(chartZoomOptions as InsideDataZoomComponentOption),\n            }),\n          ]\n        : DataZoomInside({\n            xAxisIndex,\n            ...(chartZoomOptions as InsideDataZoomComponentOption),\n          }),\n      showTimeInTooltip: true,\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n      onFinished: this.handleChartFinished,\n      onRestore: this.handleZoomRestore,\n      ...props,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default ChartZoom;\n","import 'echarts/lib/component/dataZoomInside';\n\nimport type {InsideDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: InsideDataZoomComponentOption = {\n  type: 'inside',\n  // Mouse wheel can not trigger zoom\n  zoomOnMouseWheel: false,\n  // The translation (by mouse drag or touch drag) is available but zoom is not\n  zoomLock: true,\n  throttle: 50,\n};\n\nexport default function DataZoomInside(\n  props: InsideDataZoomComponentOption | InsideDataZoomComponentOption[]\n): InsideDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import 'echarts/lib/component/dataZoomSlider';\n\nimport type {SliderDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: SliderDataZoomComponentOption = {\n  realtime: false,\n  showDetail: false,\n  left: 0,\n  right: 6,\n  bottom: 8,\n};\n\nexport default function DataZoomSlider(\n  props: SliderDataZoomComponentOption | SliderDataZoomComponentOption[]\n): SliderDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import type {ToolboxComponentOption} from 'echarts';\n\nfunction getFeatures({\n  dataZoom,\n  ...features\n}: ToolboxComponentOption['feature'] = {}): ToolboxComponentOption['feature'] {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(\n  options: ToolboxComponentOption,\n  features: ToolboxComponentOption['feature']\n): ToolboxComponentOption {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n    // Stack the toolbox under the legend.\n    // so all series names are clickable.\n    z: -1,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import styled from '@emotion/styled';\n\nconst ErrorPanel = styled('div')<{height?: string}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height || '200px'};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nexport default ErrorPanel;\n","import {PureComponent} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omitBy from 'lodash/omitBy';\n\nimport {doEventsRequest} from 'sentry/actionCreators/events';\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\nimport {\n  canIncludePreviousPeriod,\n  getPreviousSeriesName,\n  isMultiSeriesStats,\n} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {\n  DateString,\n  EventsStats,\n  EventsStatsData,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport {stripEquationPrefix} from 'sentry/utils/discover/fields';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\nexport type TimeSeriesData = {\n  allTimeseriesData?: EventsStatsData;\n  comparisonTimeseriesData?: Series[];\n  originalPreviousTimeseriesData?: EventsStatsData | null;\n  originalTimeseriesData?: EventsStatsData;\n  previousTimeseriesData?: Series[] | null;\n  timeAggregatedData?: Series | {};\n  timeframe?: {end: number; start: number};\n  // timeseries data\n  timeseriesData?: Series[];\n  timeseriesTotals?: {count: number};\n};\n\ntype LoadingStatus = {\n  /**\n   * Whether there was an error retrieving data\n   */\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  errorMessage?: string;\n};\n\n// Can hold additional data from the root an events stat object (eg. start, end, order, isMetricsData).\ninterface AdditionalSeriesInfo {\n  isMetricsData?: boolean;\n}\n\nexport type RenderProps = LoadingStatus &\n  TimeSeriesData & {\n    results?: Series[]; // Chart with multiple series.\n    seriesAdditionalInfo?: Record<string, AdditionalSeriesInfo>;\n  };\n\ntype DefaultProps = {\n  /**\n   * Include data for previous period\n   */\n  includePrevious: boolean;\n  /**\n   * Transform the response data to be something ingestible by charts\n   */\n  includeTransformedData: boolean;\n  /**\n   * Interval to group results in\n   *\n   * e.g. 1d, 1h, 1m, 1s\n   */\n  interval: string;\n  /**\n   * number of rows to return\n   */\n  limit: number;\n  /**\n   * The query string to search events by\n   */\n  query: string;\n  /**\n   * Time delta for comparing intervals of alert metrics, in seconds\n   */\n  comparisonDelta?: number;\n  /**\n   * Absolute end date for query\n   */\n  end?: DateString;\n  /**\n   * Relative time period for query.\n   *\n   * Use `start` and `end` for absolute dates.\n   *\n   * e.g. 24h, 7d, 30d\n   */\n  period?: string | null;\n  /**\n   * Absolute start date for query\n   */\n  start?: DateString;\n};\n\ntype EventsRequestPartialProps = {\n  /**\n   * API client instance\n   */\n  api: Client;\n  children: (renderProps: RenderProps) => React.ReactNode;\n  organization: OrganizationSummary;\n  /**\n   * Whether or not to include the last partial bucket. This happens for example when the\n   * current time is 11:26 and the last bucket ranges from 11:25-11:30. This means that\n   * the last bucket contains 1 minute worth of data while the rest contains 5 minutes.\n   *\n   * This flag indicates whether or not this last bucket should be included in the result.\n   */\n  partial: boolean;\n  /**\n   * Discover needs confirmation to run >30 day >10 project queries,\n   * optional and when not passed confirmation is not required.\n   */\n  confirmedQuery?: boolean;\n  /**\n   * Name used for display current series dataset tooltip\n   */\n  currentSeriesNames?: string[];\n  /**\n   * Optional callback to further process raw events request response data\n   */\n  dataLoadedCallback?: (any: EventsStats | MultiSeriesEventsStats | null) => void;\n  /**\n   * List of environments to query\n   */\n  environment?: Readonly<string[]>;\n  /**\n   * Is query out of retention\n   */\n  expired?: boolean;\n  /**\n   * List of fields to group with when doing a topEvents request.\n   */\n  field?: string[];\n  /**\n   * Allows overriding the pathname.\n   */\n  generatePathname?: (org: OrganizationSummary) => string;\n  /**\n   * Hide error toast (used for pages which also query eventsV2). Stops error appearing as a toast.\n   */\n  hideError?: boolean;\n  /**\n   * Initial loading state\n   */\n  loading?: boolean;\n  /**\n   * Query name used for displaying error toast if it is out of retention\n   */\n  name?: string;\n  /**\n   * A way to control error if error handling is not owned by the toast.\n   */\n  onError?: (error: string) => void;\n  /**\n   * How to order results when getting top events.\n   */\n  orderby?: string;\n  previousSeriesNames?: string[];\n  /**\n   * List of project ids to query\n   */\n  project?: Readonly<number[]>;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * A unique name for what's triggering this request, see organization_events_stats for an allowlist\n   */\n  referrer?: string;\n  /**\n   * Should loading be shown.\n   */\n  showLoading?: boolean;\n  /**\n   * List of team ids to query\n   */\n  team?: Readonly<string | string[]>;\n  /**\n   * The number of top results to get. When set a multi-series result will be returned\n   * in the `results` child render function.\n   */\n  topEvents?: number;\n  /**\n   * Whether or not to zerofill results\n   */\n  withoutZerofill?: boolean;\n  /**\n   * The yAxis being plotted. If multiple yAxis are requested,\n   * the child render function will be called with `results`\n   */\n  yAxis?: string | string[];\n};\n\ntype TimeAggregationProps =\n  | {includeTimeAggregation: true; timeAggregationSeriesName: string}\n  | {includeTimeAggregation?: false; timeAggregationSeriesName?: undefined};\n\nexport type EventsRequestProps = DefaultProps &\n  TimeAggregationProps &\n  EventsRequestPartialProps;\n\ntype EventsRequestState = {\n  errored: boolean;\n  fetchedWithPrevious: boolean;\n  reloading: boolean;\n  timeseriesData: null | EventsStats | MultiSeriesEventsStats;\n  errorMessage?: string;\n};\n\nconst propNamesToIgnore = [\n  'api',\n  'children',\n  'organization',\n  'loading',\n  'queryBatching',\n  'generatePathname',\n];\nconst omitIgnoredProps = (props: EventsRequestProps) =>\n  omitBy(props, (_value, key) => propNamesToIgnore.includes(key));\n\nclass EventsRequest extends PureComponent<EventsRequestProps, EventsRequestState> {\n  static defaultProps: DefaultProps = {\n    period: undefined,\n    start: null,\n    end: null,\n    interval: '1d',\n    comparisonDelta: undefined,\n    limit: 15,\n    query: '',\n    includePrevious: true,\n    includeTransformedData: true,\n  };\n\n  state: EventsRequestState = {\n    reloading: !!this.props.loading,\n    errored: false,\n    timeseriesData: null,\n    fetchedWithPrevious: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: EventsRequestProps) {\n    if (isEqual(omitIgnoredProps(prevProps), omitIgnoredProps(this.props))) {\n      return;\n    }\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  private unmounting: boolean = false;\n\n  fetchData = async () => {\n    const {api, confirmedQuery, onError, expired, name, hideError, ...props} = this.props;\n    let timeseriesData: EventsStats | MultiSeriesEventsStats | null = null;\n\n    if (confirmedQuery === false) {\n      return;\n    }\n\n    this.setState(state => ({\n      reloading: state.timeseriesData !== null,\n      errored: false,\n      errorMessage: undefined,\n    }));\n\n    let errorMessage;\n    if (expired) {\n      errorMessage = t(\n        '%s has an invalid date range. Please try a more recent date range.',\n        name\n      );\n      addErrorMessage(errorMessage, {append: true});\n\n      this.setState({\n        errored: true,\n        errorMessage,\n      });\n    } else {\n      try {\n        api.clear();\n        timeseriesData = await doEventsRequest(api, props);\n      } catch (resp) {\n        if (resp && resp.responseJSON && resp.responseJSON.detail) {\n          errorMessage = resp.responseJSON.detail;\n        } else {\n          errorMessage = t('Error loading chart data');\n        }\n        if (!hideError) {\n          addErrorMessage(errorMessage);\n        }\n        if (onError) {\n          onError(errorMessage);\n        }\n        this.setState({\n          errored: true,\n          errorMessage,\n        });\n      }\n    }\n\n    if (this.unmounting) {\n      return;\n    }\n\n    this.setState({\n      reloading: false,\n      timeseriesData,\n      fetchedWithPrevious: props.includePrevious,\n    });\n    if (props.dataLoadedCallback) {\n      props.dataLoadedCallback(timeseriesData);\n    }\n  };\n\n  /**\n   * Retrieves dataset for the current period (since data can potentially\n   * contain previous period's data), as well as the previous period if\n   * possible.\n   *\n   * Returns `null` if data does not exist\n   */\n  getData = (\n    data: EventsStatsData\n  ): {current: EventsStatsData; previous: EventsStatsData | null} => {\n    const {fetchedWithPrevious} = this.state;\n    const {period, includePrevious} = this.props;\n\n    const hasPreviousPeriod =\n      fetchedWithPrevious || canIncludePreviousPeriod(includePrevious, period);\n    // Take the floor just in case, but data should always be divisible by 2\n    const dataMiddleIndex = Math.floor(data.length / 2);\n    return {\n      current: hasPreviousPeriod ? data.slice(dataMiddleIndex) : data,\n      previous: hasPreviousPeriod ? data.slice(0, dataMiddleIndex) : null,\n    };\n  };\n\n  // This aggregates all values per `timestamp`\n  calculateTotalsPerTimestamp(\n    data: EventsStatsData,\n    getName: (\n      timestamp: number,\n      countArray: {count: number}[],\n      i: number\n    ) => number = timestamp => timestamp * 1000\n  ): SeriesDataUnit[] {\n    return data.map(([timestamp, countArray], i) => ({\n      name: getName(timestamp, countArray, i),\n      value: countArray.reduce((acc, {count}) => acc + count, 0),\n    }));\n  }\n\n  /**\n   * Get previous period data, but transform timestamps so that data fits unto\n   * the current period's data axis\n   */\n  transformPreviousPeriodData(\n    current: EventsStatsData,\n    previous: EventsStatsData | null,\n    seriesName?: string\n  ): Series | null {\n    // Need the current period data array so we can take the timestamp\n    // so we can be sure the data lines up\n    if (!previous) {\n      return null;\n    }\n\n    return {\n      seriesName: seriesName ?? 'Previous',\n      data: this.calculateTotalsPerTimestamp(\n        previous,\n        (_timestamp, _countArray, i) => current[i][0] * 1000\n      ),\n      stack: 'previous',\n    };\n  }\n\n  /**\n   * Aggregate all counts for each time stamp\n   */\n  transformAggregatedTimeseries(data: EventsStatsData, seriesName: string = ''): Series {\n    return {\n      seriesName,\n      data: this.calculateTotalsPerTimestamp(data),\n    };\n  }\n\n  /**\n   * Transforms query response into timeseries data to be used in a chart\n   */\n  transformTimeseriesData(data: EventsStatsData, seriesName?: string): Series[] {\n    return [\n      {\n        seriesName: seriesName || 'Current',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce((acc, {count}) => acc + count, 0),\n        })),\n      },\n    ];\n  }\n\n  /**\n   * Transforms comparisonCount in query response into timeseries data to be used in a comparison chart for change alerts\n   */\n  transformComparisonTimeseriesData(data: EventsStatsData): Series[] {\n    return [\n      {\n        seriesName: 'comparisonCount()',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce(\n            (acc, {comparisonCount}) => acc + (comparisonCount ?? 0),\n            0\n          ),\n        })),\n      },\n    ];\n  }\n\n  processData(response: EventsStats, seriesIndex: number = 0, seriesName?: string) {\n    const {data, isMetricsData, totals} = response;\n    const {\n      includeTransformedData,\n      includeTimeAggregation,\n      timeAggregationSeriesName,\n      currentSeriesNames,\n      previousSeriesNames,\n      comparisonDelta,\n    } = this.props;\n    const {current, previous} = this.getData(data);\n    const transformedData = includeTransformedData\n      ? this.transformTimeseriesData(\n          current,\n          seriesName ?? currentSeriesNames?.[seriesIndex]\n        )\n      : [];\n    const transformedComparisonData =\n      includeTransformedData && comparisonDelta\n        ? this.transformComparisonTimeseriesData(current)\n        : [];\n    const previousData = includeTransformedData\n      ? this.transformPreviousPeriodData(\n          current,\n          previous,\n          (seriesName ? getPreviousSeriesName(seriesName) : undefined) ??\n            previousSeriesNames?.[seriesIndex]\n        )\n      : null;\n    const timeAggregatedData = includeTimeAggregation\n      ? this.transformAggregatedTimeseries(current, timeAggregationSeriesName || '')\n      : {};\n    const timeframe =\n      response.start && response.end\n        ? !previous\n          ? {\n              start: response.start * 1000,\n              end: response.end * 1000,\n            }\n          : {\n              // Find the midpoint of start & end since previous includes 2x data\n              start: (response.start + response.end) * 500,\n              end: response.end * 1000,\n            }\n        : undefined;\n\n    const processedData = {\n      data: transformedData,\n      comparisonData: transformedComparisonData,\n      allData: data,\n      originalData: current,\n      totals,\n      isMetricsData,\n      originalPreviousData: previous,\n      previousData,\n      timeAggregatedData,\n      timeframe,\n    };\n\n    return processedData;\n  }\n\n  render() {\n    const {children, showLoading, ...props} = this.props;\n    const {topEvents} = this.props;\n    const {timeseriesData, reloading, errored, errorMessage} = this.state;\n    // Is \"loading\" if data is null\n    const loading = this.props.loading || timeseriesData === null;\n\n    if (showLoading && loading) {\n      return <LoadingPanel data-test-id=\"events-request-loading\" />;\n    }\n    if (isMultiSeriesStats(timeseriesData, defined(topEvents))) {\n      // Convert multi-series results into chartable series. Multi series results\n      // are created when multiple yAxis are used or a topEvents request is made.\n      // Convert the timeseries data into a multi-series result set.\n      // As the server will have replied with a map like:\n      // {[titleString: string]: EventsStats}\n      let timeframe: {end: number; start: number} | undefined = undefined;\n      const seriesAdditionalInfo: Record<string, AdditionalSeriesInfo> = {};\n      const sortedTimeseriesData = Object.keys(timeseriesData)\n        .map(\n          (\n            seriesName: string,\n            index: number\n          ): [number, Series, Series | null, AdditionalSeriesInfo] => {\n            const seriesData: EventsStats = timeseriesData[seriesName];\n            const processedData = this.processData(\n              seriesData,\n              index,\n              stripEquationPrefix(seriesName)\n            );\n            if (!timeframe) {\n              timeframe = processedData.timeframe;\n            }\n            if (processedData.isMetricsData) {\n              seriesAdditionalInfo[seriesName] = {\n                isMetricsData: processedData.isMetricsData,\n              };\n            }\n            return [\n              seriesData.order || 0,\n              processedData.data[0],\n              processedData.previousData,\n              {isMetricsData: processedData.isMetricsData},\n            ];\n          }\n        )\n        .sort((a, b) => a[0] - b[0]);\n      const results: Series[] = sortedTimeseriesData.map(item => {\n        return item[1];\n      });\n      const previousTimeseriesData: Series[] | undefined = sortedTimeseriesData.some(\n        item => item[2] === null\n      )\n        ? undefined\n        : sortedTimeseriesData.map(item => {\n            return item[2] as Series;\n          });\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        results,\n        timeframe,\n        previousTimeseriesData,\n        seriesAdditionalInfo,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    if (timeseriesData) {\n      const {\n        data: transformedTimeseriesData,\n        comparisonData: transformedComparisonTimeseriesData,\n        allData: allTimeseriesData,\n        originalData: originalTimeseriesData,\n        totals: timeseriesTotals,\n        originalPreviousData: originalPreviousTimeseriesData,\n        previousData: previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        isMetricsData,\n      } = this.processData(timeseriesData);\n\n      const seriesAdditionalInfo = {\n        [this.props.currentSeriesNames?.[0] ?? 'current']: {isMetricsData},\n      };\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        // meta data,\n        seriesAdditionalInfo,\n        // timeseries data\n        timeseriesData: transformedTimeseriesData,\n        comparisonTimeseriesData: transformedComparisonTimeseriesData,\n        allTimeseriesData,\n        originalTimeseriesData,\n        timeseriesTotals,\n        originalPreviousTimeseriesData,\n        previousTimeseriesData: previousTimeseriesData\n          ? [previousTimeseriesData]\n          : previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    return children({\n      loading,\n      reloading,\n      errored,\n      errorMessage,\n      ...props,\n    });\n  }\n}\nexport default EventsRequest;\n","import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type LineChartSeries = Series &\n  Omit<LineSeriesOption, 'data' | 'name'> & {\n    dataArray?: LineSeriesOption['data'];\n  };\n\nexport interface LineChartProps extends Omit<ChartProps, 'series'> {\n  series: LineChartSeries[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport Truncate from 'sentry/components/truncate';\nimport {SelectValue} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\ntype BaseProps = React.ComponentProps<typeof CompactSelect> & {\n  options: SelectValue<string>[];\n  title: string;\n  featureType?: 'alpha' | 'beta' | 'new';\n};\n\ntype SingleProps = BaseProps & {\n  onChange: (value: string) => void;\n  selected: string;\n  multiple?: false;\n};\ntype MultipleProps = BaseProps & {\n  multiple: true;\n  onChange: (value: string[]) => void;\n  selected: string[];\n};\n\nfunction OptionSelector({\n  options,\n  onChange,\n  selected,\n  title,\n  featureType,\n  multiple,\n  ...rest\n}: SingleProps | MultipleProps) {\n  const mappedOptions = useMemo(() => {\n    return options.map(opt => ({\n      ...opt,\n      label: <Truncate value={String(opt.label)} maxLength={60} expandDirection=\"left\" />,\n    }));\n  }, [options]);\n\n  function onValueChange(option) {\n    onChange(multiple ? option.map(o => o.value) : option.value);\n  }\n\n  function isOptionDisabled(option) {\n    return (\n      // Option is explicitly marked as disabled\n      option.disabled ||\n      // The user has reached the maximum number of selections (3), and the option hasn't\n      // yet been selected. These options should be disabled to visually indicate that the\n      // user has reached the max.\n      (multiple && selected.length === 3 && !selected.includes(option.value))\n    );\n  }\n\n  return (\n    <CompactSelect\n      size=\"sm\"\n      options={mappedOptions}\n      value={selected}\n      onChange={onValueChange}\n      isOptionDisabled={isOptionDisabled}\n      multiple={multiple}\n      triggerProps={{\n        borderless: true,\n        prefix: (\n          <Fragment>\n            {title}\n            {defined(featureType) ? <StyledFeatureBadge type={featureType} /> : null}\n          </Fragment>\n        ),\n      }}\n      placement=\"bottom right\"\n      {...rest}\n    />\n  );\n}\n\nconst StyledFeatureBadge = styled(FeatureBadge)`\n  margin-left: 0px;\n`;\n\nexport default OptionSelector;\n","import {Component, Fragment} from 'react';\n\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\n\nconst defaultProps = {\n  height: '200px',\n};\n\ntype Props = {\n  loading: boolean;\n  reloading: boolean;\n} & typeof defaultProps;\n\ntype State = {\n  key: number;\n  prevLoading: boolean;\n  prevReloading: boolean;\n};\n\nclass TransitionChart extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    prevReloading: this.props.reloading,\n    prevLoading: this.props.loading,\n    key: 1,\n  };\n\n  static getDerivedStateFromProps(props: Readonly<Props>, state: State) {\n    // Transitions are controlled using variables called:\n    // - loading and,\n    // - reloading (also called pending in other apps)\n    //\n    // This component remounts the chart to ensure the stable transition\n    // from one dataset to the next.\n\n    const prevReloading = state.prevReloading;\n    const nextReloading = props.reloading;\n\n    const prevLoading = state.prevLoading;\n    const nextLoading = props.loading;\n\n    // whenever loading changes, we explicitly remount the children by updating\n    // the key prop; regardless of what state reloading is in\n    if (prevLoading !== nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // invariant: prevLoading === nextLoading\n\n    // if loading is true, and hasn't changed from the previous re-render,\n    // do not remount the children.\n    if (nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key,\n      };\n    }\n\n    // invariant: loading is false\n\n    // whenever the chart is transitioning from the reloading (pending) state to a non-loading state,\n    // remount the children\n    if (prevReloading && !nextReloading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // do not remount the children in these remaining cases:\n    // !prevReloading && !nextReloading (re-render with no prop change)\n    // prevReloading && nextReloading (re-render with no prop change)\n    // !prevReloading && nextReloading (from loaded to pending state)\n\n    return {\n      prevReloading: nextReloading,\n      prevLoading: nextLoading,\n      key: state.key,\n    };\n  }\n\n  render() {\n    const {height, loading, reloading} = this.props;\n\n    if (loading && !reloading) {\n      return <LoadingPanel height={height} data-test-id=\"events-request-loading\" />;\n    }\n\n    // We make use of the key prop to explicitly remount the children\n    // https://reactjs.org/docs/lists-and-keys.html#keys\n    return <Fragment key={String(this.state.key)}>{this.props.children}</Fragment>;\n  }\n}\n\nexport default TransitionChart;\n","import styled from '@emotion/styled';\n\nimport LoadingMask, {LoadingMaskProps} from 'sentry/components/loadingMask';\n\ninterface TransparentLoadingMaskProps extends LoadingMaskProps {\n  visible: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TransparentLoadingMask = styled(\n  ({className, visible, children, ...props}: TransparentLoadingMaskProps) => {\n    const other = visible ? {...props, 'data-test-id': 'loading-placeholder'} : props;\n    return (\n      <LoadingMask className={className} {...other}>\n        {children}\n      </LoadingMask>\n    );\n  }\n)<TransparentLoadingMaskProps>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nexport default TransparentLoadingMask;\n","import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import Duration from 'sentry/components/duration';\nimport {defined} from 'sentry/utils';\n\ninterface DurationProps {\n  abbreviation?: boolean;\n}\n\ninterface SecondsProps extends DurationProps {\n  seconds: number;\n}\n\ninterface MillisecondsProps extends DurationProps {\n  milliseconds: number;\n}\n\ninterface NanosecondsProps extends DurationProps {\n  nanoseconds: number;\n}\n\ntype PerformanceDurationProps = SecondsProps | MillisecondsProps | NanosecondsProps;\n\nfunction isMilliseconds(props: PerformanceDurationProps): props is MillisecondsProps {\n  return defined((props as MillisecondsProps).milliseconds);\n}\n\nfunction isNanoseconds(props: PerformanceDurationProps): props is NanosecondsProps {\n  return defined((props as NanosecondsProps).nanoseconds);\n}\n\nfunction PerformanceDuration(props: PerformanceDurationProps) {\n  const normalizedSeconds = isNanoseconds(props)\n    ? props.nanoseconds / 1_000_000_000\n    : isMilliseconds(props)\n    ? props.milliseconds / 1000\n    : props.seconds;\n\n  return (\n    <Duration\n      abbreviation={props.abbreviation}\n      seconds={normalizedSeconds}\n      fixedDigits={2}\n    />\n  );\n}\n\nexport default PerformanceDuration;\n","import {EventsMetaType, MetaType} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport {TransactionThresholdMetric} from 'sentry/views/performance/transactionSummary/transactionThresholdModal';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata from the events endpoint.\n */\nexport type EventsTableData = {\n  data: Array<TableDataRow>;\n  meta?: EventsMetaType;\n};\n\nexport type TableDataWithTitle = TableData & {title: string};\n\ntype DiscoverQueryPropsWithThresholds = DiscoverQueryProps & {\n  transactionName?: string;\n  transactionThreshold?: number;\n  transactionThresholdMetric?: TransactionThresholdMetric;\n};\n\ntype DiscoverQueryComponentProps = DiscoverQueryPropsWithThresholds & {\n  children: (props: GenericChildrenProps<TableData>) => React.ReactNode;\n  useEvents?: boolean;\n};\n\nfunction shouldRefetchData(\n  prevProps: DiscoverQueryPropsWithThresholds,\n  nextProps: DiscoverQueryPropsWithThresholds\n) {\n  return (\n    prevProps.transactionName !== nextProps.transactionName ||\n    prevProps.transactionThreshold !== nextProps.transactionThreshold ||\n    prevProps.transactionThresholdMetric !== nextProps.transactionThresholdMetric\n  );\n}\n\nfunction DiscoverQuery(props: DiscoverQueryComponentProps) {\n  const endpoint = props.useEvents ? 'events' : 'eventsv2';\n  const afterFetch = props.useEvents\n    ? (data, _) => {\n        const {fields, ...otherMeta} = data.meta ?? {};\n        return {\n          ...data,\n          meta: {...fields, ...otherMeta},\n        };\n      }\n    : undefined;\n  return (\n    <GenericDiscoverQuery<TableData, DiscoverQueryPropsWithThresholds>\n      route={endpoint}\n      shouldRefetchData={shouldRefetchData}\n      afterFetch={afterFetch}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(DiscoverQuery);\n","import moment from 'moment';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DateString} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\n\ntype DateObject = {\n  /**\n   * Ending date object\n   */\n  end?: DateString;\n  /**\n   * Relative period string in format \"<int><unit>\" (e.g. 4d for 4 days)\n   */\n  period?: string | null;\n  /**\n   * Starting date object\n   */\n  start?: DateString;\n};\n\ntype Options = {\n  /**\n   * Doubles the given period (useful for getting previous period data)\n   */\n  shouldDoublePeriod?: boolean;\n};\n\n/**\n * Gets the period to query with if we need to double the initial period in order\n * to get data for the previous period\n *\n * Returns an object with either a period or start/end dates ({statsPeriod: string} or {start: string, end: string})\n */\nexport function getPeriod(\n  {period, start, end}: DateObject,\n  {shouldDoublePeriod}: Options = {}\n) {\n  if (!period && !start && !end) {\n    period = DEFAULT_STATS_PERIOD;\n  }\n\n  // you can not specify both relative and absolute periods\n  // relative period takes precedence\n  if (period) {\n    if (!shouldDoublePeriod) {\n      return {statsPeriod: period};\n    }\n    const [, periodNumber, periodLength] = period.match(/([0-9]+)([mhdw])/)!;\n\n    return {statsPeriod: `${parseInt(periodNumber, 10) * 2}${periodLength}`};\n  }\n\n  if (!start || !end) {\n    throw new Error('start and end required');\n  }\n\n  const formattedStart = getUtcDateString(start);\n  const formattedEnd = getUtcDateString(end);\n\n  if (shouldDoublePeriod) {\n    // get duration of end - start and double\n    const diff = moment(end).diff(moment(start));\n\n    const previousPeriodStart = moment(start).subtract(diff);\n\n    // This is not as accurate as having 2 start/end objs\n    return {\n      start: getUtcDateString(previousPeriodStart),\n      end: formattedEnd,\n    };\n  }\n\n  return {\n    start: formattedStart,\n    end: formattedEnd,\n  };\n}\n","import {t} from 'sentry/locale';\nimport {SelectValue} from 'sentry/types';\n\nimport {DataFilter} from './types';\n\nexport const FILTER_OPTIONS: SelectValue<DataFilter>[] = [\n  {label: t('Exclude'), value: 'exclude_outliers'},\n  {label: t('Include'), value: 'all'},\n];\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {SelectValue} from 'sentry/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {FILTER_OPTIONS} from './constants';\nimport {DataFilter} from './types';\n\ntype HistogramChildrenProps = {\n  activeFilter: SelectValue<DataFilter>;\n  filterOptions: typeof FILTER_OPTIONS;\n  handleFilterChange: (option: string) => void;\n  handleResetView: () => void;\n  isZoomed: boolean;\n};\n\ntype Props = {\n  children: (props: HistogramChildrenProps) => React.ReactNode;\n  location: Location;\n  zoomKeys: string[];\n};\n\nclass Histogram extends Component<Props> {\n  isZoomed() {\n    const {location, zoomKeys} = this.props;\n    return zoomKeys.map(key => location.query[key]).some(value => value !== undefined);\n  }\n\n  handleResetView = () => {\n    const {location, zoomKeys} = this.props;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: removeHistogramQueryStrings(location, zoomKeys),\n    });\n  };\n\n  getActiveFilter() {\n    const {location} = this.props;\n\n    const dataFilter = location.query.dataFilter\n      ? decodeScalar(location.query.dataFilter)\n      : FILTER_OPTIONS[0].value;\n    return FILTER_OPTIONS.find(item => item.value === dataFilter) || FILTER_OPTIONS[0];\n  }\n\n  handleFilterChange = (value: string) => {\n    const {location, zoomKeys} = this.props;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...removeHistogramQueryStrings(location, zoomKeys),\n        dataFilter: value,\n      },\n    });\n  };\n\n  render() {\n    const childrenProps = {\n      isZoomed: this.isZoomed(),\n      handleResetView: this.handleResetView,\n      activeFilter: this.getActiveFilter(),\n      handleFilterChange: this.handleFilterChange,\n      filterOptions: FILTER_OPTIONS,\n    };\n    return this.props.children(childrenProps);\n  }\n}\n\nexport function removeHistogramQueryStrings(location: Location, zoomKeys: string[]) {\n  const query: Location['query'] = {...location.query, cursor: undefined};\n\n  delete query.dataFilter;\n  // reset all zoom parameters\n  zoomKeys.forEach(key => delete query[key]);\n\n  return query;\n}\n\nexport default Histogram;\n","import omit from 'lodash/omit';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {DataFilter, HistogramData} from 'sentry/utils/performance/histogram/types';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SpanSlug} from '../suspectSpans/types';\n\ntype HistogramProps = {\n  numBuckets: number;\n  span: SpanSlug;\n  dataFilter?: DataFilter;\n  didReceiveMultiAxis?: (axisCounts: Record<string, number>) => void;\n  max?: string;\n  min?: string;\n  precision?: number;\n};\n\ntype RequestProps = DiscoverQueryProps & HistogramProps;\n\nexport type HistogramQueryChildrenProps = Omit<\n  GenericChildrenProps<HistogramProps>,\n  'tableData'\n> & {\n  histogram: HistogramData | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: HistogramQueryChildrenProps) => React.ReactNode;\n};\n\nfunction getHistogramRequestPayload(props: RequestProps) {\n  const {span, numBuckets, min, max, precision, dataFilter, eventView, location} = props;\n  const baseApiPayload = {\n    span: `${span.op}:${span.group}`,\n    numBuckets,\n    min,\n    max,\n    precision,\n    dataFilter,\n  };\n  const additionalApiPayload = omit(eventView.getEventsAPIPayload(location), [\n    'sort',\n    'per_page',\n    'cursor',\n  ]);\n  const apiPayload = {...baseApiPayload, ...additionalApiPayload};\n  return apiPayload;\n}\n\nfunction SpanHistogramQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<HistogramData, HistogramProps>\n      route=\"events-spans-histogram\"\n      getRequestPayload={getHistogramRequestPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({histogram: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SpanHistogramQuery);\n","import omit from 'lodash/omit';\n\nimport {defined} from 'sentry/utils';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SpanExample} from './types';\n\ntype SpanExamplesProps = {\n  spanGroup: string;\n  spanOp: string;\n  maxExclusiveTime?: string;\n  minExclusiveTime?: string;\n};\n\ntype RequestProps = DiscoverQueryProps & SpanExamplesProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<SpanExamplesProps>, 'tableData'> & {\n  examples: SpanExample[] | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getSuspectSpanPayload(props: RequestProps) {\n  const {spanOp, spanGroup, minExclusiveTime, maxExclusiveTime} = props;\n  const span =\n    defined(spanOp) && defined(spanGroup) ? `${spanOp}:${spanGroup}` : undefined;\n  const payload = defined(span)\n    ? {span, min_exclusive_time: minExclusiveTime, max_exclusive_time: maxExclusiveTime}\n    : {};\n  const additionalPayload = omit(props.eventView.getEventsAPIPayload(props.location), [\n    'field',\n  ]);\n  return {...payload, ...additionalPayload};\n}\n\nfunction SuspectSpansQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SpanExample[], SpanExamplesProps>\n      route=\"events-spans\"\n      getRequestPayload={getSuspectSpanPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({\n          examples: tableData ?? null,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SuspectSpansQuery);\n","import omit from 'lodash/omit';\n\nimport {defined} from 'sentry/utils';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SuspectSpans} from './types';\n\ntype SuspectSpansProps = {\n  maxExclusiveTime?: string;\n  minExclusiveTime?: string;\n  perSuspect?: number;\n  spanGroups?: string[];\n  spanOps?: string[];\n};\n\ntype RequestProps = DiscoverQueryProps & SuspectSpansProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<SuspectSpansProps>, 'tableData'> & {\n  suspectSpans: SuspectSpans | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getSuspectSpanPayload(props: RequestProps) {\n  const {perSuspect, spanOps, spanGroups, minExclusiveTime, maxExclusiveTime} = props;\n  const payload = {\n    perSuspect,\n    spanOp: spanOps,\n    spanGroup: spanGroups,\n    min_exclusive_time: minExclusiveTime,\n    max_exclusive_time: maxExclusiveTime,\n  };\n  if (!defined(payload.perSuspect)) {\n    delete payload.perSuspect;\n  }\n  if (!defined(payload.spanOp)) {\n    delete payload.spanOp;\n  }\n  if (!defined(payload.spanGroup)) {\n    delete payload.spanGroup;\n  }\n  const additionalPayload = props.eventView.getEventsAPIPayload(props.location);\n  return {\n    ...payload,\n    ...additionalPayload,\n  };\n}\n\nfunction SuspectSpansQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SuspectSpans, SuspectSpansProps>\n      route=\"events-spans-performance\"\n      getRequestPayload={getSuspectSpanPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({suspectSpans: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SuspectSpansQuery);\n","// eslint-disable-next-line no-restricted-imports\nimport {browserHistory, withRouter, WithRouterProps} from 'react-router';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport OptionSelector from 'sentry/components/charts/optionSelector';\nimport {\n  ChartContainer,\n  ChartControls,\n  InlineContainer,\n  SectionHeading,\n  SectionValue,\n} from 'sentry/components/charts/styles';\nimport Count from 'sentry/components/count';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport ExclusiveTimeHistogram from './exclusiveTimeHistogram';\nimport ExclusiveTimeTimeSeries from './exclusiveTimeTimeSeries';\n\ntype Props = WithRouterProps & {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  spanSlug: SpanSlug;\n  totalCount?: number;\n};\n\nenum DisplayModes {\n  TIMESERIES = 'timeseries',\n  HISTOGRAM = 'histogram',\n}\n\nfunction Chart(props: Props) {\n  const {location} = props;\n\n  const display = decodeScalar(props.location.query.display, DisplayModes.TIMESERIES);\n\n  function generateDisplayOptions() {\n    return [\n      {value: DisplayModes.TIMESERIES, label: t('Self Time Breakdown')},\n      {value: DisplayModes.HISTOGRAM, label: t('Self Time Distribution')},\n    ];\n  }\n\n  function handleDisplayChange(value: string) {\n    trackAdvancedAnalyticsEvent('performance_views.span_summary.change_chart', {\n      organization: props.organization,\n      change_to_display: value,\n    });\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        display: value,\n      },\n    });\n  }\n\n  return (\n    <Panel>\n      <ChartContainer>\n        <Feature features={['performance-span-histogram-view']}>\n          {({hasFeature}) => {\n            if (hasFeature) {\n              if (display === DisplayModes.TIMESERIES) {\n                return <ExclusiveTimeTimeSeries {...props} withoutZerofill={false} />;\n              }\n              return <ExclusiveTimeHistogram {...props} />;\n            }\n            return <ExclusiveTimeTimeSeries {...props} withoutZerofill={false} />;\n          }}\n        </Feature>\n      </ChartContainer>\n      <Feature features={['performance-span-histogram-view']}>\n        <ChartControls>\n          <InlineContainer>\n            <SectionHeading>{t('Total Events')}</SectionHeading>\n            <SectionValue data-test-id=\"total-value\">\n              {defined(props.totalCount) ? <Count value={props.totalCount} /> : '\\u2014'}\n            </SectionValue>\n          </InlineContainer>\n          <InlineContainer data-test-id=\"display-toggle\">\n            <OptionSelector\n              title={t('Display')}\n              selected={display}\n              options={generateDisplayOptions()}\n              onChange={handleDisplayChange}\n            />\n          </InlineContainer>\n        </ChartControls>\n      </Feature>\n    </Panel>\n  );\n}\n\nexport default withRouter(Chart);\n","import {Fragment, useEffect} from 'react';\nimport styled from '@emotion/styled';\nimport {setTag} from '@sentry/react';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport IdBadge from 'sentry/components/idBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SpanExamplesQuery, {\n  ChildrenProps as SpanExamplesProps,\n} from 'sentry/utils/performance/suspectSpans/spanExamplesQuery';\nimport SuspectSpansQuery, {\n  ChildrenProps as SuspectSpansProps,\n} from 'sentry/utils/performance/suspectSpans/suspectSpansQuery';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport Breadcrumb from 'sentry/views/performance/breadcrumb';\nimport {getSelectedProjectPlatforms} from 'sentry/views/performance/utils';\n\nimport Tab from '../../tabs';\nimport {SpanSortOthers} from '../types';\nimport {getTotalsView} from '../utils';\n\nimport SpanChart from './chart';\nimport SpanDetailsControls from './spanDetailsControls';\nimport SpanDetailsHeader from './spanDetailsHeader';\nimport SpanTable from './spanDetailsTable';\nimport {ZoomKeys} from './utils';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  project: Project | undefined;\n  spanSlug: SpanSlug;\n  transactionName: string;\n};\n\nexport default function SpanDetailsContentWrapper(props: Props) {\n  const {location, organization, eventView, project, transactionName, spanSlug} = props;\n  const minExclusiveTime = decodeScalar(location.query[ZoomKeys.MIN]);\n  const maxExclusiveTime = decodeScalar(location.query[ZoomKeys.MAX]);\n\n  useEffect(() => {\n    if (project) {\n      trackAdvancedAnalyticsEvent('performance_views.span_summary.view', {\n        organization,\n        project_platforms: getSelectedProjectPlatforms(location, [project]),\n      });\n    }\n  }, [organization, project, location]);\n\n  return (\n    <Fragment>\n      <Layout.Header>\n        <Layout.HeaderContent>\n          <Breadcrumb\n            organization={organization}\n            location={location}\n            transaction={{\n              project: project?.id ?? '',\n              name: transactionName,\n            }}\n            tab={Tab.Spans}\n            spanSlug={spanSlug}\n          />\n          <Layout.Title>\n            <TransactionName>\n              {project && (\n                <IdBadge\n                  project={project}\n                  avatarSize={28}\n                  hideName\n                  avatarProps={{hasTooltip: true, tooltip: project.slug}}\n                />\n              )}\n              {transactionName}\n            </TransactionName>\n          </Layout.Title>\n        </Layout.HeaderContent>\n      </Layout.Header>\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <DiscoverQuery\n            eventView={getTotalsView(eventView)}\n            orgSlug={organization.slug}\n            location={location}\n            referrer=\"api.performance.transaction-spans\"\n            cursor=\"0:0:1\"\n            noPagination\n            useEvents\n          >\n            {({tableData}) => {\n              const totalCount: number | null =\n                (tableData?.data?.[0]?.['count()'] as number) ?? null;\n\n              if (totalCount) {\n                setTag('spans.totalCount', totalCount);\n                const countGroup = [\n                  1, 5, 10, 20, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000,\n                ].find(n => totalCount <= n);\n                setTag('spans.totalCount.grouped', `<=${countGroup}`);\n              }\n\n              return (\n                <SuspectSpansQuery\n                  location={location}\n                  orgSlug={organization.slug}\n                  eventView={getSpansEventView(eventView)}\n                  perSuspect={0}\n                  spanOps={[spanSlug.op]}\n                  spanGroups={[spanSlug.group]}\n                  cursor=\"0:0:1\"\n                  minExclusiveTime={minExclusiveTime}\n                  maxExclusiveTime={maxExclusiveTime}\n                >\n                  {suspectSpansResults => (\n                    <SpanExamplesQuery\n                      location={location}\n                      orgSlug={organization.slug}\n                      eventView={eventView}\n                      spanOp={spanSlug.op}\n                      spanGroup={spanSlug.group}\n                      limit={10}\n                      minExclusiveTime={minExclusiveTime}\n                      maxExclusiveTime={maxExclusiveTime}\n                    >\n                      {spanExamplesResults => (\n                        <SpanDetailsContent\n                          location={location}\n                          organization={organization}\n                          project={project}\n                          eventView={eventView}\n                          spanSlug={spanSlug}\n                          transactionName={transactionName}\n                          totalCount={totalCount}\n                          suspectSpansResults={suspectSpansResults}\n                          spanExamplesResults={spanExamplesResults}\n                        />\n                      )}\n                    </SpanExamplesQuery>\n                  )}\n                </SuspectSpansQuery>\n              );\n            }}\n          </DiscoverQuery>\n        </Layout.Main>\n      </Layout.Body>\n    </Fragment>\n  );\n}\n\nconst TransactionName = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n`;\n\ntype ContentProps = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  project: Project | undefined;\n  spanExamplesResults: SpanExamplesProps;\n  spanSlug: SpanSlug;\n  suspectSpansResults: SuspectSpansProps;\n  totalCount: number;\n  transactionName: string;\n};\n\nfunction SpanDetailsContent(props: ContentProps) {\n  const {\n    location,\n    organization,\n    project,\n    eventView,\n    spanSlug,\n    transactionName,\n    totalCount,\n    suspectSpansResults,\n    spanExamplesResults,\n  } = props;\n\n  // There should always be exactly 1 result\n  const suspectSpan = suspectSpansResults.suspectSpans?.[0];\n  const examples = spanExamplesResults.examples?.[0]?.examples;\n  const transactionCountContainingSpan = suspectSpan?.frequency;\n\n  return (\n    <Fragment>\n      <Feature features={['performance-span-histogram-view']}>\n        <SpanDetailsControls\n          organization={organization}\n          location={location}\n          eventView={eventView}\n        />\n      </Feature>\n      <SpanDetailsHeader\n        spanSlug={spanSlug}\n        totalCount={totalCount}\n        suspectSpan={suspectSpan}\n      />\n      <SpanChart\n        totalCount={transactionCountContainingSpan}\n        organization={organization}\n        eventView={eventView}\n        spanSlug={spanSlug}\n      />\n      <SpanTable\n        location={location}\n        organization={organization}\n        project={project}\n        suspectSpan={suspectSpan}\n        transactionName={transactionName}\n        isLoading={spanExamplesResults.isLoading}\n        examples={examples ?? []}\n        pageLinks={spanExamplesResults.pageLinks}\n      />\n    </Fragment>\n  );\n}\n\nfunction getSpansEventView(eventView: EventView): EventView {\n  // TODO: There is a bug where if the sort is not avg occurrence,\n  // then the avg occurrence will never be added to the fields\n  eventView = eventView.withSorts([{field: SpanSortOthers.AVG_OCCURRENCE, kind: 'desc'}]);\n  eventView.fields = [\n    {field: 'count()'},\n    {field: 'count_unique(id)'},\n    {field: 'equation|count() / count_unique(id)'},\n    {field: 'sumArray(spans_exclusive_time)'},\n    {field: 'percentileArray(spans_exclusive_time, 0.50)'},\n    {field: 'percentileArray(spans_exclusive_time, 0.75)'},\n    {field: 'percentileArray(spans_exclusive_time, 0.95)'},\n    {field: 'percentileArray(spans_exclusive_time, 0.99)'},\n  ];\n  return eventView;\n}\n","import {Fragment} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport {Location} from 'history';\n\nimport {BarChart} from 'sentry/components/charts/barChart';\nimport BarChartZoom from 'sentry/components/charts/barChartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {pickBarColor} from 'sentry/components/performance/waterfall/utils';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport SpanHistogramQuery from 'sentry/utils/performance/histogram/spanHistogramQuery';\nimport {HistogramData} from 'sentry/utils/performance/histogram/types';\nimport {\n  computeBuckets,\n  formatHistogramData,\n} from 'sentry/utils/performance/histogram/utils';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {ZoomKeys} from './utils';\n\nconst NUM_BUCKETS = 50;\nconst PRECISION = 0;\n\ntype Props = WithRouterProps & {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  spanSlug: SpanSlug;\n};\n\nexport default function ExclusiveTimeHistogram(props: Props) {\n  const {location, organization, eventView, spanSlug} = props;\n\n  const start = decodeScalar(location.query[ZoomKeys.MIN]);\n  const end = decodeScalar(location.query[ZoomKeys.MAX]);\n\n  return (\n    <Fragment>\n      <HeaderTitleLegend>\n        {t('Self Time Distribution')}\n        <QuestionTooltip\n          size=\"sm\"\n          position=\"top\"\n          title={t(\n            'Distribution buckets counts of the same self time duration for the selected span op and group.'\n          )}\n        />\n      </HeaderTitleLegend>\n      <SpanHistogramQuery\n        location={location}\n        orgSlug={organization.slug}\n        eventView={eventView}\n        numBuckets={NUM_BUCKETS}\n        precision={PRECISION}\n        span={spanSlug}\n        dataFilter=\"exclude_outliers\"\n        min={start}\n        max={end}\n      >\n        {({histogram, isLoading, error}) => {\n          if (error) {\n            return (\n              <ErrorPanel data-test-id=\"histogram-error-panel\">\n                <IconWarning color=\"gray300\" size=\"lg\" />\n              </ErrorPanel>\n            );\n          }\n\n          return (\n            <TransitionChart loading={isLoading} reloading={isLoading}>\n              <TransparentLoadingMask visible={isLoading} />\n              <BarChartZoom\n                minZoomWidth={1}\n                location={location}\n                paramStart={ZoomKeys.MIN}\n                paramEnd={ZoomKeys.MAX}\n                xAxisIndex={[0]}\n                buckets={histogram ? computeBuckets(histogram) : []}\n              >\n                {zoomRenderProps => (\n                  <Chart\n                    zoomProps={{...zoomRenderProps}}\n                    isLoading={isLoading}\n                    isErrored={!!error}\n                    chartData={histogram}\n                    location={location}\n                    spanSlug={spanSlug}\n                  />\n                )}\n              </BarChartZoom>\n            </TransitionChart>\n          );\n        }}\n      </SpanHistogramQuery>\n    </Fragment>\n  );\n}\n\ntype ChartProps = {\n  chartData: HistogramData | null;\n  isErrored: boolean;\n  isLoading: boolean;\n  location: Location;\n  spanSlug: SpanSlug;\n  zoomProps: any;\n  disableChartPadding?: boolean;\n};\n\nexport function Chart(props: ChartProps) {\n  const theme = useTheme();\n  const {chartData, zoomProps, spanSlug} = props;\n\n  if (!chartData) {\n    return <Placeholder height=\"200px\" />;\n  }\n\n  const chartOptions = {\n    grid: {\n      left: '10px',\n      right: '10px',\n      top: '40px',\n      bottom: '0px',\n    },\n    colors: () => pickBarColor(spanSlug.op),\n    seriesOptions: {\n      showSymbol: false,\n    },\n    tooltip: {\n      trigger: 'axis' as const,\n      // TODO (udameli) pull series name from the meta\n      valueFormatter: (value, _seriesName) =>\n        tooltipFormatter(value, aggregateOutputType(_seriesName)),\n    },\n    yAxis: {\n      type: 'value' as const,\n      axisLabel: {\n        color: theme.chartLabel,\n        formatter: (value: number) => axisLabelFormatter(value, 'number'),\n      },\n    },\n    xAxis: {\n      type: 'category' as const,\n      truncate: true,\n      axisTick: {\n        alignWithLabel: true,\n      },\n    },\n    height: 200,\n  };\n\n  const series = {\n    seriesName: t('Count'),\n    data: formatHistogramData(chartData, {type: 'duration'}),\n  };\n\n  return (\n    <Fragment>\n      {getDynamicText({\n        value: <BarChart {...zoomProps} {...chartOptions} series={[series]} stacked />,\n        fixed: <Placeholder height=\"200px\" />,\n      })}\n    </Fragment>\n  );\n}\n","import {Fragment} from 'react';\nimport {browserHistory, WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport {Location} from 'history';\n\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {LineChart} from 'sentry/components/charts/lineChart';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {getInterval, getSeriesSelection} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport useApi from 'sentry/utils/useApi';\n\nimport {getExclusiveTimeDisplayedValue} from '../utils';\n\ntype Props = WithRouterProps & {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  spanSlug: SpanSlug;\n  withoutZerofill: boolean;\n};\n\nexport default function ExclusiveTimeTimeSeries(props: Props) {\n  const {location, router, organization, eventView, spanSlug, withoutZerofill} = props;\n\n  const api = useApi();\n  const theme = useTheme();\n\n  const period = eventView.statsPeriod;\n  const start = eventView.start ? getUtcToLocalDateObject(eventView.start) : null;\n  const end = eventView.end ? getUtcToLocalDateObject(eventView.end) : null;\n  const {utc} = normalizeDateTimeParams(location.query);\n\n  const datetimeSelection = {\n    start,\n    end,\n    period,\n  };\n\n  const yAxis = [\n    'percentileArray(spans_exclusive_time, 0.50)',\n    'percentileArray(spans_exclusive_time, 0.75)',\n    'percentileArray(spans_exclusive_time, 0.95)',\n    'percentileArray(spans_exclusive_time, 0.99)',\n  ];\n\n  const handleLegendSelectChanged = legendChange => {\n    const {selected} = legendChange;\n    const unselected = Object.keys(selected).filter(key => !selected[key]);\n\n    const to = {\n      ...location,\n      query: {\n        ...location.query,\n        unselectedSeries: unselected,\n      },\n    };\n    browserHistory.push(to);\n  };\n\n  return (\n    <Fragment>\n      <HeaderTitleLegend>\n        {t('Self Time Breakdown')}\n        <QuestionTooltip\n          size=\"sm\"\n          position=\"top\"\n          title={t(\n            'Self Time Breakdown reflects the span self time by percentile over time.'\n          )}\n        />\n      </HeaderTitleLegend>\n      <ChartZoom\n        router={router}\n        period={period}\n        start={start}\n        end={end}\n        utc={utc === 'true'}\n      >\n        {zoomRenderProps => (\n          <EventsRequest\n            api={api}\n            organization={organization}\n            project={eventView.project}\n            environment={eventView.environment}\n            start={start}\n            end={end}\n            period={period}\n            interval={getInterval(datetimeSelection, 'high')}\n            showLoading={false}\n            query={eventView.query}\n            includePrevious={false}\n            yAxis={yAxis}\n            partial\n            withoutZerofill={withoutZerofill}\n            queryExtras={{span: `${spanSlug.op}:${spanSlug.group}`}}\n            generatePathname={org => `/organizations/${org.slug}/events-spans-stats/`}\n          >\n            {({results, errored, loading, reloading, timeframe}) => {\n              if (errored) {\n                return (\n                  <ErrorPanel>\n                    <IconWarning color=\"gray300\" size=\"lg\" />\n                  </ErrorPanel>\n                );\n              }\n\n              const chartOptions = {\n                grid: {\n                  left: '10px',\n                  right: '10px',\n                  top: '40px',\n                  bottom: '0px',\n                },\n                colors: theme.charts.getColorPalette(yAxis.length - 2),\n                seriesOptions: {\n                  showSymbol: false,\n                },\n                tooltip: {\n                  trigger: 'axis' as const,\n                  // p50() coerces the axis to be time based\n                  valueFormatter: (value, _seriesName) =>\n                    tooltipFormatter(value, 'duration'),\n                },\n                xAxis: timeframe\n                  ? {\n                      min: timeframe.start,\n                      max: timeframe.end,\n                    }\n                  : undefined,\n                yAxis: {\n                  axisLabel: {\n                    color: theme.chartLabel,\n                    formatter: (value: number) => axisLabelFormatter(value, 'duration'),\n                  },\n                },\n              };\n\n              const legend = {\n                right: 10,\n                top: 5,\n                selected: getSeriesSelection(location),\n              };\n\n              const formattedResults = results?.map(result => ({\n                ...result,\n                seriesName: getExclusiveTimeDisplayedValue(result.seriesName),\n              }));\n\n              return (\n                <TransitionChart loading={loading} reloading={reloading}>\n                  <TransparentLoadingMask visible={reloading} />\n                  {getDynamicText({\n                    value: (\n                      <LineChart\n                        {...zoomRenderProps}\n                        {...chartOptions}\n                        legend={legend}\n                        onLegendSelectChanged={handleLegendSelectChanged}\n                        series={formattedResults ?? []}\n                      />\n                    ),\n                    fixed: <Placeholder height=\"200px\" />,\n                  })}\n                </TransitionChart>\n              );\n            }}\n          </EventsRequest>\n        )}\n      </ChartZoom>\n    </Fragment>\n  );\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {defined} from 'sentry/utils';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {getTransactionName} from '../../../utils';\nimport {NoAccess, redirectToPerformanceHomepage} from '../../pageLayout';\nimport {generateSpansEventView, parseSpanSlug} from '../utils';\n\nimport SpanDetailsContent from './content';\n\ntype Props = Pick<RouteComponentProps<{spanSlug: string}, {}>, 'location' | 'params'>;\n\nexport default function SpanDetails(props: Props) {\n  const {location, params} = props;\n  const transactionName = getTransactionName(location);\n  const spanSlug = parseSpanSlug(params.spanSlug);\n\n  const organization = useOrganization();\n  const {projects} = useProjects();\n\n  const projectId = decodeScalar(location.query.project);\n  if (!defined(projectId) || !defined(transactionName) || !defined(spanSlug)) {\n    redirectToPerformanceHomepage(organization, location);\n    return null;\n  }\n\n  const project = projects.find(p => p.id === projectId);\n  const eventView = generateSpansEventView({\n    location,\n    transactionName,\n  });\n\n  return (\n    <SentryDocumentTitle\n      title={getDocumentTitle(transactionName)}\n      orgSlug={organization.slug}\n      projectSlug={project?.slug}\n    >\n      <Feature\n        features={['performance-view', 'performance-suspect-spans-view']}\n        organization={organization}\n        renderDisabled={NoAccess}\n      >\n        <PageFiltersContainer\n          shouldForceProject={defined(project)}\n          forceProject={project}\n          specificProjectSlugs={defined(project) ? [project.slug] : []}\n        >\n          <StyledPageContent>\n            <NoProjectMessage organization={organization}>\n              <SpanDetailsContent\n                location={location}\n                organization={organization}\n                eventView={eventView}\n                project={project}\n                transactionName={transactionName}\n                spanSlug={spanSlug}\n              />\n            </NoProjectMessage>\n          </StyledPageContent>\n        </PageFiltersContainer>\n      </Feature>\n    </SentryDocumentTitle>\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Performance')].join(' - ');\n  }\n\n  return [t('Summary'), t('Performance')].join(' - ');\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n","import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Button from 'sentry/components/button';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {removeHistogramQueryStrings} from 'sentry/utils/performance/histogram';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {SPAN_RELATIVE_PERIODS, SPAN_RETENTION_DAYS} from '../utils';\n\nimport {ZoomKeys} from './utils';\n\ninterface SpanDetailsControlsProps {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n}\n\nexport default function SpanDetailsControls({\n  organization,\n  eventView,\n  location,\n}: SpanDetailsControlsProps) {\n  const query = decodeScalar(location.query.query, '');\n\n  const handleSearchQuery = (searchQuery: string): void => {\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        cursor: undefined,\n        query: String(searchQuery).trim() || undefined,\n      },\n    });\n  };\n\n  const handleResetView = () => {\n    browserHistory.push({\n      pathname: location.pathname,\n      query: removeHistogramQueryStrings(location, Object.values(ZoomKeys)),\n    });\n  };\n\n  const isZoomed = () => Object.values(ZoomKeys).some(key => location.query[key]);\n\n  return (\n    <FilterActions>\n      <PageFilterBar condensed>\n        <EnvironmentPageFilter />\n        <DatePageFilter\n          alignDropdown=\"left\"\n          relativeOptions={SPAN_RELATIVE_PERIODS}\n          maxPickableDays={SPAN_RETENTION_DAYS}\n        />\n      </PageFilterBar>\n      <SearchBar\n        placeholder={t('Filter Transactions')}\n        organization={organization}\n        projectIds={eventView.project}\n        query={query}\n        fields={eventView.fields}\n        onSearch={handleSearchQuery}\n      />\n      <Button onClick={handleResetView} disabled={!isZoomed()}>\n        {t('Reset View')}\n      </Button>\n    </FilterActions>\n  );\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: auto 1fr auto;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Count from 'sentry/components/count';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {formatPercentage} from 'sentry/utils/formatters';\nimport {SpanSlug, SuspectSpan} from 'sentry/utils/performance/suspectSpans/types';\n\ninterface HeaderProps {\n  spanSlug: SpanSlug;\n  totalCount: number | null;\n  suspectSpan?: SuspectSpan;\n}\n\nexport default function SpanDetailsHeader(props: HeaderProps) {\n  const {spanSlug, suspectSpan, totalCount} = props;\n\n  const {\n    description,\n    frequency,\n    avgOccurrences,\n    p50ExclusiveTime,\n    p75ExclusiveTime,\n    p95ExclusiveTime,\n    p99ExclusiveTime,\n    sumExclusiveTime,\n  } = suspectSpan ?? {};\n\n  return (\n    <ContentHeader>\n      <HeaderInfo data-test-id=\"header-operation-name\">\n        <StyledSectionHeading>{t('Span Operation')}</StyledSectionHeading>\n        <SectionBody>\n          <SpanLabelContainer>{description ?? emptyValue}</SpanLabelContainer>\n        </SectionBody>\n        <SectionSubtext data-test-id=\"operation-name\">{spanSlug.op}</SectionSubtext>\n      </HeaderInfo>\n      <HeaderInfo data-test-id=\"header-percentiles\">\n        <StyledSectionHeading>{t('Self Time Percentiles')}</StyledSectionHeading>\n        <PercentileHeaderBodyWrapper>\n          <div data-test-id=\"section-p50\">\n            <SectionBody>\n              {defined(p50ExclusiveTime) ? (\n                <PerformanceDuration abbreviation milliseconds={p50ExclusiveTime} />\n              ) : (\n                '\\u2014'\n              )}\n            </SectionBody>\n            <SectionSubtext>{t('p50')}</SectionSubtext>\n          </div>\n          <div data-test-id=\"section-p75\">\n            <SectionBody>\n              {defined(p75ExclusiveTime) ? (\n                <PerformanceDuration abbreviation milliseconds={p75ExclusiveTime} />\n              ) : (\n                '\\u2014'\n              )}\n            </SectionBody>\n            <SectionSubtext>{t('p75')}</SectionSubtext>\n          </div>\n          <div data-test-id=\"section-p95\">\n            <SectionBody>\n              {defined(p95ExclusiveTime) ? (\n                <PerformanceDuration abbreviation milliseconds={p95ExclusiveTime} />\n              ) : (\n                '\\u2014'\n              )}\n            </SectionBody>\n            <SectionSubtext>{t('p95')}</SectionSubtext>\n          </div>\n          <div data-test-id=\"section-p99\">\n            <SectionBody>\n              {defined(p99ExclusiveTime) ? (\n                <PerformanceDuration abbreviation milliseconds={p99ExclusiveTime} />\n              ) : (\n                '\\u2014'\n              )}\n            </SectionBody>\n            <SectionSubtext>{t('p99')}</SectionSubtext>\n          </div>\n        </PercentileHeaderBodyWrapper>\n      </HeaderInfo>\n      <HeaderInfo data-test-id=\"header-frequency\">\n        <StyledSectionHeading>{t('Frequency')}</StyledSectionHeading>\n        <SectionBody>\n          {defined(frequency) && defined(totalCount)\n            ? formatPercentage(Math.min(frequency, totalCount) / totalCount)\n            : '\\u2014'}\n        </SectionBody>\n        <SectionSubtext>\n          {defined(avgOccurrences)\n            ? tct('[times] times per event', {times: avgOccurrences.toFixed(2)})\n            : '\\u2014'}\n        </SectionSubtext>\n      </HeaderInfo>\n      <HeaderInfo data-test-id=\"header-total-exclusive-time\">\n        <StyledSectionHeading>{t('Total Self Time')}</StyledSectionHeading>\n        <SectionBody>\n          {defined(sumExclusiveTime) ? (\n            <PerformanceDuration abbreviation milliseconds={sumExclusiveTime} />\n          ) : (\n            '\\u2014'\n          )}\n        </SectionBody>\n        <SectionSubtext>\n          {defined(frequency)\n            ? tct('[events] events', {events: <Count value={frequency} />})\n            : '\\u2014'}\n        </SectionSubtext>\n      </HeaderInfo>\n    </ContentHeader>\n  );\n}\n\nconst ContentHeader = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: ${space(4)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: 1fr repeat(3, max-content);\n  }\n`;\n\nconst HeaderInfo = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  height: 78px;\n`;\n\nconst StyledSectionHeading = styled(SectionHeading)`\n  margin: 0;\n`;\n\nconst SectionBody = styled('div')<{overflowEllipsis?: boolean}>`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  padding: ${space(0.5)} 0;\n  max-height: 32px;\n`;\n\nconst SectionSubtext = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst PercentileHeaderBodyWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(4, max-content);\n  gap: ${space(3)};\n`;\n\nexport const SpanLabelContainer = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst EmptyValueContainer = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst emptyValue = <EmptyValueContainer>{t('(unnamed span)')}</EmptyValueContainer>;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport Pagination from 'sentry/components/pagination';\nimport {DurationPill, RowRectangle} from 'sentry/components/performance/waterfall/rowBar';\nimport {pickBarColor, toPercent} from 'sentry/components/performance/waterfall/utils';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {ColumnType, fieldAlignment} from 'sentry/utils/discover/fields';\nimport {formatPercentage} from 'sentry/utils/formatters';\nimport {\n  ExampleTransaction,\n  SuspectSpan,\n} from 'sentry/utils/performance/suspectSpans/types';\n\nimport {generateTransactionLink} from '../../utils';\n\ntype TableColumnKeys =\n  | 'id'\n  | 'timestamp'\n  | 'transactionDuration'\n  | 'spanDuration'\n  | 'occurrences'\n  | 'cumulativeDuration'\n  | 'spans';\n\ntype TableColumn = GridColumnOrder<TableColumnKeys>;\n\ntype TableDataRow = Record<TableColumnKeys, any>;\n\ntype Props = {\n  examples: ExampleTransaction[];\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  transactionName: string;\n  pageLinks?: string | null;\n  project?: Project;\n  suspectSpan?: SuspectSpan;\n};\n\nexport default function SpanTable(props: Props) {\n  const {\n    location,\n    organization,\n    project,\n    examples,\n    suspectSpan,\n    transactionName,\n    isLoading,\n    pageLinks,\n  } = props;\n\n  if (!defined(examples)) {\n    return null;\n  }\n\n  const data = examples\n    // we assume that the span appears in each example at least once,\n    // if this assumption is broken, nothing onwards will work so\n    // filter out such examples\n    .filter(example => example.spans.length > 0)\n    .map(example => ({\n      id: example.id,\n      project: project?.slug,\n      // timestamps are in seconds but want them in milliseconds\n      timestamp: example.finishTimestamp * 1000,\n      transactionDuration: (example.finishTimestamp - example.startTimestamp) * 1000,\n      spanDuration: example.nonOverlappingExclusiveTime,\n      occurrences: example.spans.length,\n      cumulativeDuration: example.spans.reduce(\n        (duration, span) => duration + span.exclusiveTime,\n        0\n      ),\n      spans: example.spans,\n    }));\n\n  return (\n    <Fragment>\n      <GridEditable\n        isLoading={isLoading}\n        data={data}\n        columnOrder={SPANS_TABLE_COLUMN_ORDER}\n        columnSortBy={[]}\n        grid={{\n          renderHeadCell,\n          renderBodyCell: renderBodyCellWithMeta(\n            location,\n            organization,\n            transactionName,\n            suspectSpan\n          ),\n        }}\n        location={location}\n      />\n      <Pagination pageLinks={pageLinks ?? null} />\n    </Fragment>\n  );\n}\n\nfunction renderHeadCell(column: TableColumn, _index: number): React.ReactNode {\n  const align = fieldAlignment(column.key, COLUMN_TYPE[column.key]);\n  return (\n    <SortLink\n      title={column.name}\n      align={align}\n      direction={undefined}\n      canSort={false}\n      generateSortLink={() => undefined}\n    />\n  );\n}\n\nfunction renderBodyCellWithMeta(\n  location: Location,\n  organization: Organization,\n  transactionName: string,\n  suspectSpan?: SuspectSpan\n) {\n  return (column: TableColumn, dataRow: TableDataRow): React.ReactNode => {\n    // if the transaction duration is falsey, then just render the span duration on its own\n    if (column.key === 'spanDuration' && dataRow.transactionDuration) {\n      return (\n        <SpanDurationBar\n          spanOp={suspectSpan?.op ?? ''}\n          spanDuration={dataRow.spanDuration}\n          transactionDuration={dataRow.transactionDuration}\n        />\n      );\n    }\n\n    const fieldRenderer = getFieldRenderer(column.key, COLUMN_TYPE);\n    let rendered = fieldRenderer(dataRow, {location, organization});\n\n    if (column.key === 'id') {\n      const worstSpan = dataRow.spans.length\n        ? dataRow.spans.reduce((worst, span) =>\n            worst.exclusiveTime >= span.exclusiveTime ? worst : span\n          )\n        : null;\n      const target = generateTransactionLink(transactionName)(\n        organization,\n        dataRow,\n        location.query,\n        worstSpan.id\n      );\n\n      rendered = <Link to={target}>{rendered}</Link>;\n    }\n\n    return rendered;\n  };\n}\n\nconst COLUMN_TYPE: Omit<\n  Record<TableColumnKeys, ColumnType>,\n  'spans' | 'transactionDuration'\n> = {\n  id: 'string',\n  timestamp: 'date',\n  spanDuration: 'duration',\n  occurrences: 'integer',\n  cumulativeDuration: 'duration',\n};\n\nconst SPANS_TABLE_COLUMN_ORDER: TableColumn[] = [\n  {\n    key: 'id',\n    name: t('Event ID'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'timestamp',\n    name: t('Timestamp'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'spanDuration',\n    name: t('Span Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'occurrences',\n    name: t('Count'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'cumulativeDuration',\n    name: t('Cumulative Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n];\n\nconst DurationBar = styled('div')`\n  position: relative;\n  display: flex;\n  top: ${space(0.5)};\n  background-color: ${p => p.theme.gray100};\n`;\n\nconst DurationBarSection = styled(RowRectangle)`\n  position: relative;\n  width: 100%;\n  top: 0;\n`;\n\ntype SpanDurationBarProps = {\n  spanDuration: number;\n  spanOp: string;\n  transactionDuration: number;\n};\n\nfunction SpanDurationBar(props: SpanDurationBarProps) {\n  const {spanOp, spanDuration, transactionDuration} = props;\n  const widthPercentage = spanDuration / transactionDuration;\n  const position = widthPercentage < 0.7 ? 'right' : 'inset';\n\n  return (\n    <DurationBar>\n      <div style={{width: toPercent(widthPercentage)}}>\n        <Tooltip\n          title={tct('[percentage] of the transaction', {\n            percentage: formatPercentage(widthPercentage),\n          })}\n          containerDisplayMode=\"block\"\n        >\n          <DurationBarSection\n            spanBarHatch={false}\n            style={{backgroundColor: pickBarColor(spanOp)}}\n          >\n            <DurationPill\n              durationDisplay={position}\n              showDetail={false}\n              spanBarHatch={false}\n            >\n              <PerformanceDuration abbreviation milliseconds={spanDuration} />\n            </DurationPill>\n          </DurationBarSection>\n        </Tooltip>\n      </div>\n    </DurationBar>\n  );\n}\n","import {Query} from 'history';\n\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\n\nexport function generateSpanDetailsRoute({\n  orgSlug,\n  spanSlug,\n}: {\n  orgSlug: String;\n  spanSlug: SpanSlug;\n}): string {\n  const spanComponent = `${encodeURIComponent(spanSlug.op)}:${spanSlug.group}`;\n  return `/organizations/${orgSlug}/performance/summary/spans/${spanComponent}/`;\n}\n\nexport function spanDetailsRouteWithQuery({\n  orgSlug,\n  transaction,\n  query,\n  spanSlug,\n  projectID,\n}: {\n  orgSlug: string;\n  query: Query;\n  spanSlug: SpanSlug;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateSpanDetailsRoute({\n    orgSlug,\n    spanSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport enum ZoomKeys {\n  MIN = 'min',\n  MAX = 'max',\n}\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nmodule.exports = maxBy;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n"],"names":["pick","canIncludePreviousPeriod","getPeriod","PERFORMANCE_URL_PARAM","doEventsRequest","api","organization","project","environment","team","period","start","end","interval","comparisonDelta","includePrevious","query","yAxis","field","topEvents","orderby","partial","withoutZerofill","referrer","queryBatching","generatePathname","queryExtras","excludeOther","includeAllArgs","pathname","slug","shouldDoublePeriod","urlQuery","Object","fromEntries","entries","undefined","filter","value","periodObj","queryObject","batchRequest","requestPromise","fetchTagFacets","orgSlug","urlParams","values","queryOption","fetchTotalCount","then","res","count","Component","browserHistory","DataZoomInside","ToolBox","callIfFunction","BarChartZoom","chart","props","onChartReady","_props","zooming","zoom","_componentsViews","find","c","_features","dataZoom","_isZoomActive","dispatchAction","type","key","dataZoomSelectActive","evt","model","getModel","startValue","endValue","_payload","batch","buckets","location","paramStart","paramEnd","minZoomWidth","onHistoryPush","target","push","onDataZoomCancelled","onDataZoom","render","children","xAxisIndex","renderProps","handleChartReady","onFinished","handleChartFinished","toolBox","title","back","iconStyle","borderWidth","color","opacity","handleDataZoom","moment","qs","updateDateTime","DataZoomSlider","getUtcDateString","getUtcToLocalDateObject","getDate","date","utc","format","HTML5_FMT","DATETIME_LOCAL_SECONDS","ZoomPropKeys","ChartZoom","constructor","currentPeriod","saveHistory","router","onZoom","usePageDate","startFormatted","endFormatted","history","newQuery","pageStart","pageEnd","pageStatsPeriod","stringify","saveCurrentPeriod","length","setPeriod","onRestore","previousPeriod","pop","componentDidUpdate","disabled","_utc","_start","_end","_router","_onZoom","_onRestore","_onChartReady","_onDataZoom","_onFinished","showSlider","chartZoomOptions","isGroupedByDate","showTimeInTooltip","handleZoomRestore","DEFAULT","zoomOnMouseWheel","zoomLock","throttle","Array","isArray","realtime","showDetail","left","right","bottom","getFeatures","features","yAxisIndex","options","top","itemSize","z","feature","ErrorPanel","p","height","theme","gray300","fontSizeExtraLarge","PureComponent","isEqual","omitBy","addErrorMessage","LoadingPanel","getPreviousSeriesName","isMultiSeriesStats","t","defined","stripEquationPrefix","propNamesToIgnore","omitIgnoredProps","_value","includes","EventsRequest","reloading","loading","errored","timeseriesData","fetchedWithPrevious","confirmedQuery","onError","expired","name","hideError","setState","state","errorMessage","append","clear","resp","responseJSON","detail","unmounting","dataLoadedCallback","data","hasPreviousPeriod","dataMiddleIndex","Math","floor","current","slice","previous","componentDidMount","fetchData","prevProps","componentWillUnmount","calculateTotalsPerTimestamp","getName","timestamp","map","i","countArray","reduce","acc","transformPreviousPeriodData","seriesName","_timestamp","_countArray","stack","transformAggregatedTimeseries","transformTimeseriesData","countsForTimestamp","transformComparisonTimeseriesData","comparisonCount","processData","response","seriesIndex","isMetricsData","totals","includeTransformedData","includeTimeAggregation","timeAggregationSeriesName","currentSeriesNames","previousSeriesNames","getData","transformedData","transformedComparisonData","previousData","timeAggregatedData","timeframe","processedData","comparisonData","allData","originalData","originalPreviousData","showLoading","seriesAdditionalInfo","sortedTimeseriesData","keys","index","seriesData","order","sort","a","b","results","item","previousTimeseriesData","some","transformedTimeseriesData","transformedComparisonTimeseriesData","allTimeseriesData","originalTimeseriesData","timeseriesTotals","originalPreviousTimeseriesData","comparisonTimeseriesData","limit","LineSeries","BaseChart","LineChart","series","seriesOptions","dataArray","animation","animationThreshold","animationDuration","LoadingMask","_height","defaultProps","Fragment","useMemo","FeatureBadge","CompactSelect","Truncate","OptionSelector","onChange","selected","featureType","multiple","rest","mappedOptions","opt","label","String","onValueChange","option","o","isOptionDisabled","borderless","prefix","StyledFeatureBadge","TransitionChart","prevReloading","prevLoading","getDerivedStateFromProps","nextReloading","nextLoading","TransparentLoadingMask","className","visible","other","omit","Link","IconArrow","SortLink","align","canSort","generateSortLink","onClick","direction","arrow","StyledLink","forwardProps","StyledNonLink","StyledIconArrow","backgroundSecondary","borderRadius","Duration","isMilliseconds","milliseconds","isNanoseconds","nanoseconds","PerformanceDuration","normalizedSeconds","seconds","abbreviation","withApi","GenericDiscoverQuery","shouldRefetchData","nextProps","transactionName","transactionThreshold","transactionThresholdMetric","DiscoverQuery","endpoint","useEvents","afterFetch","_","fields","otherMeta","meta","DEFAULT_STATS_PERIOD","statsPeriod","periodNumber","periodLength","match","parseInt","Error","formattedStart","formattedEnd","diff","previousPeriodStart","subtract","FILTER_OPTIONS","decodeScalar","Histogram","zoomKeys","removeHistogramQueryStrings","dataFilter","isZoomed","getActiveFilter","childrenProps","handleResetView","activeFilter","handleFilterChange","filterOptions","cursor","forEach","getHistogramRequestPayload","span","numBuckets","min","max","precision","eventView","baseApiPayload","op","group","additionalApiPayload","getEventsAPIPayload","apiPayload","SpanHistogramQuery","tableData","histogram","getSuspectSpanPayload","spanOp","spanGroup","minExclusiveTime","maxExclusiveTime","payload","min_exclusive_time","max_exclusive_time","additionalPayload","SuspectSpansQuery","examples","perSuspect","spanOps","spanGroups","suspectSpans","withRouter","Feature","ChartContainer","ChartControls","InlineContainer","SectionHeading","SectionValue","Count","Panel","trackAdvancedAnalyticsEvent","ExclusiveTimeHistogram","ExclusiveTimeTimeSeries","DisplayModes","Chart","display","TIMESERIES","generateDisplayOptions","HISTOGRAM","handleDisplayChange","change_to_display","hasFeature","totalCount","useEffect","setTag","IdBadge","Layout","space","SpanExamplesQuery","Breadcrumb","getSelectedProjectPlatforms","Tab","SpanSortOthers","getTotalsView","SpanChart","SpanDetailsControls","SpanDetailsHeader","SpanTable","ZoomKeys","SpanDetailsContentWrapper","spanSlug","MIN","MAX","project_platforms","id","Spans","hasTooltip","tooltip","countGroup","n","getSpansEventView","suspectSpansResults","spanExamplesResults","TransactionName","SpanDetailsContent","suspectSpan","transactionCountContainingSpan","frequency","isLoading","pageLinks","withSorts","AVG_OCCURRENCE","kind","useTheme","BarChart","HeaderTitleLegend","pickBarColor","Placeholder","QuestionTooltip","IconWarning","axisLabelFormatter","tooltipFormatter","aggregateOutputType","getDynamicText","computeBuckets","formatHistogramData","NUM_BUCKETS","PRECISION","error","zoomRenderProps","chartData","zoomProps","chartOptions","grid","colors","showSymbol","trigger","valueFormatter","_seriesName","axisLabel","chartLabel","formatter","xAxis","truncate","axisTick","alignWithLabel","fixed","getInterval","getSeriesSelection","normalizeDateTimeParams","useApi","getExclusiveTimeDisplayedValue","datetimeSelection","handleLegendSelectChanged","legendChange","unselected","to","unselectedSeries","org","charts","getColorPalette","legend","formattedResults","result","NoProjectMessage","PageFiltersContainer","SentryDocumentTitle","PageContent","useOrganization","useProjects","getTransactionName","NoAccess","redirectToPerformanceHomepage","generateSpansEventView","parseSpanSlug","SpanDetails","params","projects","projectId","getDocumentTitle","hasTransactionName","trim","join","StyledPageContent","Button","DatePageFilter","EnvironmentPageFilter","SearchBar","PageFilterBar","SPAN_RELATIVE_PERIODS","SPAN_RETENTION_DAYS","handleSearchQuery","searchQuery","FilterActions","breakpoints","small","tct","formatPercentage","description","avgOccurrences","p50ExclusiveTime","p75ExclusiveTime","p95ExclusiveTime","p99ExclusiveTime","sumExclusiveTime","emptyValue","times","toFixed","events","ContentHeader","medium","HeaderInfo","overflowEllipsis","StyledSectionHeading","SectionBody","SectionSubtext","subText","fontSizeMedium","PercentileHeaderBodyWrapper","SpanLabelContainer","EmptyValueContainer","GridEditable","COL_WIDTH_UNDEFINED","Pagination","DurationPill","RowRectangle","toPercent","Tooltip","getFieldRenderer","fieldAlignment","generateTransactionLink","example","spans","finishTimestamp","transactionDuration","startTimestamp","spanDuration","nonOverlappingExclusiveTime","occurrences","cumulativeDuration","duration","exclusiveTime","SPANS_TABLE_COLUMN_ORDER","renderHeadCell","renderBodyCell","renderBodyCellWithMeta","column","_index","COLUMN_TYPE","dataRow","fieldRenderer","rendered","worstSpan","worst","width","DurationBar","gray100","DurationBarSection","SpanDurationBar","widthPercentage","position","percentage","backgroundColor","generateSpanDetailsRoute","spanComponent","encodeURIComponent","spanDetailsRouteWithQuery","transaction","projectID"],"sourceRoot":""}