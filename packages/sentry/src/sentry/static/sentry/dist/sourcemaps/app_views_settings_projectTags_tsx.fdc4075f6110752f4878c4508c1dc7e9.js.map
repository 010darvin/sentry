{"version":3,"file":"chunks/app_views_settings_projectTags_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectTags.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {TagWithTopValues} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> &\n  AsyncView['props'];\n\ntype State = {\n  tags: Array<TagWithTopValues>;\n} & AsyncView['state'];\n\nclass ProjectTags extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      tags: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {projectId, orgId} = this.props.params;\n    return [['tags', `/projects/${orgId}/${projectId}/tags/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Tags'), projectId, false);\n  }\n\n  handleDelete = (key: TagWithTopValues['key'], idx: number) => async () => {\n    const {params} = this.props;\n    const {projectId, orgId} = params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/tags/${key}/`, {\n        method: 'DELETE',\n      });\n\n      const tags = [...this.state.tags];\n      tags.splice(idx, 1);\n      this.setState({tags});\n    } catch (error) {\n      this.setState({error: true, loading: false});\n    }\n  };\n\n  renderBody() {\n    const {tags} = this.state;\n    const isEmpty = !tags || !tags.length;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Tags')} />\n        <PermissionAlert />\n\n        <TextBlock>\n          {tct(\n            `Each event in Sentry may be annotated with various tags (key and value pairs).\n                 Learn how to [link:add custom tags].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/enriching-events/tags/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <Panel>\n          <PanelHeader>{t('Tags')}</PanelHeader>\n          <PanelBody>\n            {isEmpty ? (\n              <EmptyMessage>\n                {tct('There are no tags, [link:learn how to add tags]', {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/enrich-data/\" />\n                  ),\n                })}\n              </EmptyMessage>\n            ) : (\n              <Access access={['project:write']}>\n                {({hasAccess}) =>\n                  tags.map(({key, canDelete}, idx) => {\n                    const enabled = canDelete && hasAccess;\n                    return (\n                      <TagPanelItem key={key} data-test-id=\"tag-row\">\n                        <TagName>{key}</TagName>\n                        <Actions>\n                          <Confirm\n                            message={t('Are you sure you want to remove this tag?')}\n                            onConfirm={this.handleDelete(key, idx)}\n                            disabled={!enabled}\n                          >\n                            <Button\n                              size=\"xs\"\n                              title={\n                                enabled\n                                  ? t('Remove tag')\n                                  : hasAccess\n                                  ? t('This tag cannot be deleted.')\n                                  : t('You do not have permission to remove tags.')\n                              }\n                              aria-label={t('Remove tag')}\n                              icon={<IconDelete size=\"xs\" />}\n                              data-test-id=\"delete\"\n                            />\n                          </Confirm>\n                        </Actions>\n                      </TagPanelItem>\n                    );\n                  })\n                }\n              </Access>\n            )}\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nexport default ProjectTags;\n\nconst TagPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst TagName = styled('div')`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n`;\n"],"names":["routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Access","Alert","t","PermissionAlert","access","props","hasAccess","Fragment","Button","Confirm","ExternalLink","Panel","PanelBody","PanelHeader","PanelItem","IconDelete","tct","space","EmptyMessage","SettingsPageHeader","TextBlock","ProjectTags","key","idx","params","projectId","orgId","api","requestPromise","method","tags","state","splice","setState","error","loading","getDefaultState","getEndpoints","renderBody","isEmpty","length","link","map","canDelete","enabled","handleDelete","TagPanelItem","TagName","Actions"],"sourceRoot":""}