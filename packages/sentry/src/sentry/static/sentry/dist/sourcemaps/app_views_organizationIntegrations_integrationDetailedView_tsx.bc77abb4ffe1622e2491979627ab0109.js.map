{"version":3,"file":"chunks/app_views_organizationIntegrations_integrationDetailedView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/organizationIntegrations/addIntegration.tsx","webpack:///./app/views/organizationIntegrations/addIntegrationButton.tsx","webpack:///./app/views/organizationIntegrations/installedIntegration.tsx","webpack:///./app/views/organizationIntegrations/integrationDetailedView.tsx"],"sourcesContent":["import {Component} from 'react';\nimport * as qs from 'query-string';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\nimport {IntegrationProvider, IntegrationWithConfig, Organization} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\n\ntype Props = {\n  children: (\n    openDialog: (urlParams?: {[key: string]: string}) => void\n  ) => React.ReactNode;\n  onInstall: (data: IntegrationWithConfig) => void;\n  organization: Organization;\n  provider: IntegrationProvider;\n  account?: string; // for analytics\n  analyticsParams?: {\n    already_installed: boolean;\n    view:\n      | 'integrations_directory_integration_detail'\n      | 'integrations_directory'\n      | 'onboarding'\n      | 'project_creation';\n  };\n  modalParams?: {[key: string]: string};\n};\n\nexport default class AddIntegration extends Component<Props> {\n  componentDidMount() {\n    window.addEventListener('message', this.didReceiveMessage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.didReceiveMessage);\n    this.dialog && this.dialog.close();\n  }\n\n  dialog: Window | null = null;\n\n  computeCenteredWindow(width: number, height: number) {\n    // Taken from: https://stackoverflow.com/questions/4068373/center-a-popup-window-on-screen\n    const screenLeft =\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n\n    const screenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const innerWidth = window.innerWidth\n      ? window.innerWidth\n      : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : screen.width;\n\n    const innerHeight = window.innerHeight\n      ? window.innerHeight\n      : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : screen.height;\n\n    const left = innerWidth / 2 - width / 2 + screenLeft;\n    const top = innerHeight / 2 - height / 2 + screenTop;\n\n    return {left, top};\n  }\n\n  openDialog = (urlParams?: {[key: string]: string}) => {\n    const {account, analyticsParams, modalParams, organization, provider} = this.props;\n\n    trackIntegrationAnalytics('integrations.installation_start', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    const name = 'sentryAddIntegration';\n    const {url, width, height} = provider.setupDialog;\n    const {left, top} = this.computeCenteredWindow(width, height);\n\n    let query: {[key: string]: string} = {...urlParams};\n\n    if (account) {\n      query.account = account;\n    }\n\n    if (modalParams) {\n      query = {...query, ...modalParams};\n    }\n\n    const installUrl = `${url}?${qs.stringify(query)}`;\n    const opts = `scrollbars=yes,width=${width},height=${height},top=${top},left=${left}`;\n\n    this.dialog = window.open(installUrl, name, opts);\n    this.dialog && this.dialog.focus();\n  };\n\n  didReceiveMessage = (message: MessageEvent) => {\n    const {analyticsParams, onInstall, organization, provider} = this.props;\n\n    if (message.origin !== document.location.origin) {\n      return;\n    }\n\n    if (message.source !== this.dialog) {\n      return;\n    }\n\n    const {success, data} = message.data;\n    this.dialog = null;\n\n    if (!success) {\n      addErrorMessage(data.error);\n      return;\n    }\n\n    if (!data) {\n      return;\n    }\n    trackIntegrationAnalytics('integrations.installation_complete', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    addSuccessMessage(t('%s added', provider.name));\n    onInstall(data);\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return children(this.openDialog);\n  }\n}\n","import {Component} from 'react';\n\nimport Button, {ButtonPropsWithoutAriaLabel} from 'sentry/components/button';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {IntegrationWithConfig} from 'sentry/types';\n\nimport AddIntegration from './addIntegration';\n\ninterface AddIntegrationButtonProps\n  extends Omit<ButtonPropsWithoutAriaLabel, 'children'>,\n    Pick<\n      React.ComponentProps<typeof AddIntegration>,\n      'provider' | 'organization' | 'analyticsParams' | 'modalParams'\n    > {\n  onAddIntegration: (data: IntegrationWithConfig) => void;\n  buttonText?: string;\n  reinstall?: boolean;\n}\n\nexport default class AddIntegrationButton extends Component<AddIntegrationButtonProps> {\n  render() {\n    const {\n      provider,\n      buttonText,\n      onAddIntegration,\n      organization,\n      reinstall,\n      analyticsParams,\n      modalParams,\n      ...buttonProps\n    } = this.props;\n\n    const label =\n      buttonText || t(reinstall ? 'Enable' : 'Add %s', provider.metadata.noun);\n\n    return (\n      <Tooltip\n        disabled={provider.canAdd}\n        title={`Integration cannot be added on Sentry. Enable this integration via the ${provider.name} instance.`}\n      >\n        <AddIntegration\n          provider={provider}\n          onInstall={onAddIntegration}\n          organization={organization}\n          analyticsParams={analyticsParams}\n          modalParams={modalParams}\n        >\n          {onClick => (\n            <Button\n              disabled={!provider.canAdd}\n              {...buttonProps}\n              onClick={() => onClick()}\n              aria-label={t('Add integration')}\n            >\n              {label}\n            </Button>\n          )}\n        </AddIntegration>\n      </Tooltip>\n    );\n  }\n}\n","import {Component, Fragment} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport Confirm from 'sentry/components/confirm';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconDelete, IconSettings, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Integration, IntegrationProvider, ObjectStatus, Organization} from 'sentry/types';\nimport {IntegrationAnalyticsKey} from 'sentry/utils/analytics/integrations';\n\nimport AddIntegrationButton from './addIntegrationButton';\nimport IntegrationItem from './integrationItem';\n\ntype Props = {\n  integration: Integration;\n  onDisable: (integration: Integration) => void;\n  onRemove: (integration: Integration) => void;\n  organization: Organization;\n  provider: IntegrationProvider;\n  trackIntegrationAnalytics: (eventKey: IntegrationAnalyticsKey) => void; // analytics callback\n  requiresUpgrade?: boolean;\n};\n\nexport default class InstalledIntegration extends Component<Props> {\n  handleUninstallClick = () => {\n    this.props.trackIntegrationAnalytics('integrations.uninstall_clicked');\n  };\n\n  getRemovalBodyAndText(aspects: Integration['provider']['aspects']) {\n    if (aspects && aspects.removal_dialog) {\n      return {\n        body: aspects.removal_dialog.body,\n        actionText: aspects.removal_dialog.actionText,\n      };\n    }\n    return {\n      body: t(\n        'Deleting this integration will remove any project associated data. This action cannot be undone. Are you sure you want to delete this integration?'\n      ),\n      actionText: t('Delete'),\n    };\n  }\n\n  handleRemove(integration: Integration) {\n    this.props.onRemove(integration);\n    this.props.trackIntegrationAnalytics('integrations.uninstall_completed');\n  }\n\n  get integrationStatus() {\n    const {integration} = this.props;\n    // there are multiple status fields for an integration we consider\n    const statusList = [integration.status, integration.organizationIntegrationStatus];\n    const firstNotActive = statusList.find(s => s !== 'active');\n    // Active if everything is active, otherwise the first inactive status\n    return firstNotActive ?? 'active';\n  }\n\n  get removeConfirmProps() {\n    const {integration} = this.props;\n    const {body, actionText} = this.getRemovalBodyAndText(integration.provider.aspects);\n\n    const message = (\n      <Fragment>\n        <Alert type=\"error\" showIcon>\n          {t('Deleting this integration has consequences!')}\n        </Alert>\n        {body}\n      </Fragment>\n    );\n    return {\n      message,\n      confirmText: actionText,\n      onConfirm: () => this.handleRemove(integration),\n    };\n  }\n\n  get disableConfirmProps() {\n    const {integration} = this.props;\n    const {body, actionText} = integration.provider.aspects.disable_dialog || {};\n    const message = (\n      <Fragment>\n        <Alert type=\"error\" showIcon>\n          {t('This integration cannot be removed in Sentry')}\n        </Alert>\n        {body}\n      </Fragment>\n    );\n\n    return {\n      message,\n      confirmText: actionText,\n      onConfirm: () => this.props.onDisable(integration),\n    };\n  }\n\n  render() {\n    const {integration, organization, provider, requiresUpgrade} = this.props;\n\n    const removeConfirmProps =\n      this.integrationStatus === 'active' && integration.provider.canDisable\n        ? this.disableConfirmProps\n        : this.removeConfirmProps;\n\n    return (\n      <Access access={['org:integrations']}>\n        {({hasAccess}) => {\n          const disableAction = !(hasAccess && this.integrationStatus === 'active');\n          return (\n            <Fragment>\n              <IntegrationItemBox>\n                <IntegrationItem integration={integration} />\n              </IntegrationItemBox>\n              <div>\n                <Tooltip\n                  disabled={hasAccess}\n                  position=\"left\"\n                  title={t(\n                    'You must be an organization owner, manager or admin to configure'\n                  )}\n                >\n                  {requiresUpgrade && (\n                    <AddIntegrationButton\n                      analyticsParams={{\n                        view: 'integrations_directory_integration_detail',\n                        already_installed: true,\n                      }}\n                      buttonText={t('Update Now')}\n                      data-test-id=\"integration-upgrade-button\"\n                      disabled={disableAction}\n                      icon={<IconWarning />}\n                      onAddIntegration={() => {}}\n                      organization={organization}\n                      provider={provider}\n                      priority=\"primary\"\n                      size=\"sm\"\n                    />\n                  )}\n                  <StyledButton\n                    borderless\n                    icon={<IconSettings />}\n                    disabled={disableAction}\n                    to={`/settings/${organization.slug}/integrations/${provider.key}/${integration.id}/`}\n                    data-test-id=\"integration-configure-button\"\n                  >\n                    {t('Configure')}\n                  </StyledButton>\n                </Tooltip>\n              </div>\n              <div>\n                <Tooltip\n                  disabled={hasAccess}\n                  title={t(\n                    'You must be an organization owner, manager or admin to uninstall'\n                  )}\n                >\n                  <Confirm\n                    priority=\"danger\"\n                    onConfirming={this.handleUninstallClick}\n                    disabled={!hasAccess}\n                    {...removeConfirmProps}\n                  >\n                    <StyledButton\n                      disabled={!hasAccess}\n                      borderless\n                      icon={<IconDelete />}\n                      data-test-id=\"integration-remove-button\"\n                    >\n                      {t('Uninstall')}\n                    </StyledButton>\n                  </Confirm>\n                </Tooltip>\n              </div>\n              <StyledIntegrationStatus\n                status={this.integrationStatus}\n                // Let the hook handle the alert for disabled org integrations\n                hideTooltip={integration.organizationIntegrationStatus === 'disabled'}\n              />\n            </Fragment>\n          );\n        }}\n      </Access>\n    );\n  }\n}\n\nconst StyledButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n`;\n\nconst IntegrationItemBox = styled('div')`\n  flex: 1;\n`;\n\nconst IntegrationStatus = (\n  props: React.HTMLAttributes<HTMLDivElement> & {\n    status: ObjectStatus;\n    hideTooltip?: boolean;\n  }\n) => {\n  const theme = useTheme();\n  const {status, hideTooltip, ...p} = props;\n  const color = status === 'active' ? theme.success : theme.gray300;\n  const inner = (\n    <div {...p}>\n      <CircleIndicator size={6} color={color} />\n      <IntegrationStatusText data-test-id=\"integration-status\">{`${\n        status === 'active'\n          ? t('enabled')\n          : status === 'disabled'\n          ? t('disabled')\n          : t('pending deletion')\n      }`}</IntegrationStatusText>\n    </div>\n  );\n  return hideTooltip ? (\n    inner\n  ) : (\n    <Tooltip\n      title={\n        status === 'active'\n          ? t('This integration can be disabled by clicking the Uninstall button')\n          : status === 'disabled'\n          ? t('This integration has been disconnected from the external provider')\n          : t('This integration is pending deletion.')\n      }\n    >\n      {inner}\n    </Tooltip>\n  );\n};\n\nconst StyledIntegrationStatus = styled(IntegrationStatus)`\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme.gray300};\n  font-weight: light;\n  text-transform: capitalize;\n  &:before {\n    content: '|';\n    color: ${p => p.theme.gray200};\n    margin-right: ${space(1)};\n    font-weight: normal;\n  }\n`;\n\nconst IntegrationStatusText = styled('div')`\n  margin: 0 ${space(0.75)} 0 ${space(0.5)};\n`;\n","import {Fragment} from 'react';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {RequestOptions} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport {Panel, PanelItem} from 'sentry/components/panels';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Integration, IntegrationProvider, ObjectStatus} from 'sentry/types';\nimport {getAlertText} from 'sentry/utils/integrationUtil';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport AbstractIntegrationDetailedView from './abstractIntegrationDetailedView';\nimport AddIntegrationButton from './addIntegrationButton';\nimport InstalledIntegration from './installedIntegration';\n\nconst FirstPartyIntegrationAlert = HookOrDefault({\n  hookName: 'component:first-party-integration-alert',\n  defaultComponent: () => null,\n});\n\nconst FirstPartyIntegrationAdditionalCTA = HookOrDefault({\n  hookName: 'component:first-party-integration-additional-cta',\n  defaultComponent: () => null,\n});\n\ntype State = {\n  configurations: Integration[];\n  information: {providers: IntegrationProvider[]};\n};\n\nclass IntegrationDetailedView extends AbstractIntegrationDetailedView<\n  AbstractIntegrationDetailedView['props'],\n  State & AbstractIntegrationDetailedView['state']\n> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, integrationSlug} = this.props.params;\n    return [\n      [\n        'information',\n        `/organizations/${orgId}/config/integrations/?provider_key=${integrationSlug}`,\n      ],\n      [\n        'configurations',\n        `/organizations/${orgId}/integrations/?provider_key=${integrationSlug}&includeConfig=0`,\n      ],\n    ];\n  }\n\n  get integrationType() {\n    return 'first_party' as const;\n  }\n\n  get provider() {\n    return this.state.information.providers[0];\n  }\n\n  get description() {\n    return this.metadata.description;\n  }\n\n  get author() {\n    return this.metadata.author;\n  }\n\n  get alerts() {\n    const provider = this.provider;\n    const metadata = this.metadata;\n    // The server response for integration installations includes old icon CSS classes\n    // We map those to the currently in use values to their react equivalents\n    // and fallback to IconFlag just in case.\n    const alerts = (metadata.aspects.alerts || []).map(item => ({\n      ...item,\n      showIcon: true,\n    }));\n\n    if (!provider.canAdd && metadata.aspects.externalInstall) {\n      alerts.push({\n        type: 'warning',\n        showIcon: true,\n        text: metadata.aspects.externalInstall.noticeText,\n      });\n    }\n    return alerts;\n  }\n\n  get resourceLinks() {\n    const metadata = this.metadata;\n    return [\n      {url: metadata.source_url, title: 'View Source'},\n      {url: metadata.issue_url, title: 'Report Issue'},\n    ];\n  }\n\n  get metadata() {\n    return this.provider.metadata;\n  }\n\n  get isEnabled() {\n    return this.state.configurations.length > 0;\n  }\n\n  get installationStatus() {\n    const {configurations} = this.state;\n    if (\n      configurations.filter(i => i.organizationIntegrationStatus === 'disabled').length\n    ) {\n      return 'Disabled';\n    }\n    return configurations.length ? 'Installed' : 'Not Installed';\n  }\n\n  get integrationName() {\n    return this.provider.name;\n  }\n\n  get featureData() {\n    return this.metadata.features;\n  }\n\n  onInstall = (integration: Integration) => {\n    // send the user to the configure integration view for that integration\n    const {orgId} = this.props.params;\n    this.props.router.push(\n      `/settings/${orgId}/integrations/${integration.provider.key}/${integration.id}/`\n    );\n  };\n\n  onRemove = (integration: Integration) => {\n    const {orgId} = this.props.params;\n\n    const origIntegrations = [...this.state.configurations];\n\n    const integrations = this.state.configurations.map(i =>\n      i.id === integration.id\n        ? {...i, organizationIntegrationStatus: 'pending_deletion' as ObjectStatus}\n        : i\n    );\n\n    this.setState({configurations: integrations});\n\n    const options: RequestOptions = {\n      method: 'DELETE',\n      error: () => {\n        this.setState({configurations: origIntegrations});\n        addErrorMessage(t('Failed to remove Integration'));\n      },\n    };\n\n    this.api.request(`/organizations/${orgId}/integrations/${integration.id}/`, options);\n  };\n\n  onDisable = (integration: Integration) => {\n    let url: string;\n\n    const [domainName, orgName] = integration.domainName.split('/');\n    if (integration.accountType === 'User') {\n      url = `https://${domainName}/settings/installations/`;\n    } else {\n      url = `https://${domainName}/organizations/${orgName}/settings/installations/`;\n    }\n\n    window.open(url, '_blank');\n  };\n\n  handleExternalInstall = () => {\n    this.trackIntegrationAnalytics('integrations.installation_start');\n  };\n\n  renderAlert() {\n    return (\n      <FirstPartyIntegrationAlert\n        integrations={this.state.configurations ?? []}\n        hideCTA\n      />\n    );\n  }\n\n  renderAdditionalCTA() {\n    return (\n      <FirstPartyIntegrationAdditionalCTA\n        integrations={this.state.configurations ?? []}\n      />\n    );\n  }\n\n  renderTopButton(disabledFromFeatures: boolean, userHasAccess: boolean) {\n    const {organization} = this.props;\n    const provider = this.provider;\n    const {metadata} = provider;\n\n    const size = 'sm' as const;\n    const priority = 'primary' as const;\n\n    const buttonProps = {\n      style: {marginBottom: space(1)},\n      size,\n      priority,\n      'data-test-id': 'install-button',\n      disabled: disabledFromFeatures,\n      organization,\n    };\n\n    if (!userHasAccess) {\n      return this.renderRequestIntegrationButton();\n    }\n\n    if (provider.canAdd) {\n      return (\n        <AddIntegrationButton\n          provider={provider}\n          onAddIntegration={this.onInstall}\n          analyticsParams={{\n            view: 'integrations_directory_integration_detail',\n            already_installed: this.installationStatus !== 'Not Installed',\n          }}\n          {...buttonProps}\n        />\n      );\n    }\n    if (metadata.aspects.externalInstall) {\n      return (\n        <Button\n          icon={<IconOpen />}\n          href={metadata.aspects.externalInstall.url}\n          onClick={this.handleExternalInstall}\n          external\n          {...buttonProps}\n        >\n          {metadata.aspects.externalInstall.buttonText}\n        </Button>\n      );\n    }\n\n    // This should never happen but we can't return undefined without some refactoring.\n    return <Fragment />;\n  }\n\n  renderConfigurations() {\n    const {configurations} = this.state;\n    const {organization} = this.props;\n    const provider = this.provider;\n\n    if (!configurations.length) {\n      return this.renderEmptyConfigurations();\n    }\n\n    const alertText = getAlertText(configurations);\n\n    return (\n      <Fragment>\n        {alertText && (\n          <Alert type=\"warning\" showIcon>\n            {alertText}\n          </Alert>\n        )}\n        <Panel>\n          {configurations.map(integration => (\n            <PanelItem key={integration.id}>\n              <InstalledIntegration\n                organization={organization}\n                provider={provider}\n                integration={integration}\n                onRemove={this.onRemove}\n                onDisable={this.onDisable}\n                data-test-id={integration.id}\n                trackIntegrationAnalytics={this.trackIntegrationAnalytics}\n                requiresUpgrade={!!alertText}\n              />\n            </PanelItem>\n          ))}\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(IntegrationDetailedView);\n"],"names":["Component","qs","addErrorMessage","addSuccessMessage","t","trackIntegrationAnalytics","AddIntegration","urlParams","account","analyticsParams","modalParams","organization","provider","props","integration","key","integration_type","name","url","width","height","setupDialog","left","top","computeCenteredWindow","query","installUrl","stringify","opts","dialog","window","open","focus","message","onInstall","origin","document","location","source","success","data","error","componentDidMount","addEventListener","didReceiveMessage","componentWillUnmount","removeEventListener","close","screenLeft","undefined","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","render","children","openDialog","Button","Tooltip","AddIntegrationButton","buttonText","onAddIntegration","reinstall","buttonProps","label","metadata","noun","canAdd","onClick","Fragment","useTheme","Access","Alert","CircleIndicator","Confirm","IconDelete","IconSettings","IconWarning","space","IntegrationItem","InstalledIntegration","getRemovalBodyAndText","aspects","removal_dialog","body","actionText","handleRemove","onRemove","integrationStatus","statusList","status","organizationIntegrationStatus","firstNotActive","find","s","removeConfirmProps","confirmText","onConfirm","disableConfirmProps","disable_dialog","onDisable","requiresUpgrade","canDisable","hasAccess","disableAction","view","already_installed","slug","id","handleUninstallClick","StyledButton","p","theme","gray300","IntegrationItemBox","IntegrationStatus","hideTooltip","color","inner","StyledIntegrationStatus","gray200","IntegrationStatusText","HookOrDefault","Panel","PanelItem","IconOpen","getAlertText","withOrganization","AbstractIntegrationDetailedView","FirstPartyIntegrationAlert","hookName","defaultComponent","FirstPartyIntegrationAdditionalCTA","IntegrationDetailedView","orgId","params","router","push","origIntegrations","state","configurations","integrations","map","i","setState","options","method","api","request","domainName","orgName","split","accountType","getEndpoints","integrationSlug","integrationType","information","providers","description","author","alerts","item","showIcon","externalInstall","type","text","noticeText","resourceLinks","source_url","title","issue_url","isEnabled","length","installationStatus","filter","integrationName","featureData","features","renderAlert","renderAdditionalCTA","renderTopButton","disabledFromFeatures","userHasAccess","size","priority","style","marginBottom","disabled","renderRequestIntegrationButton","handleExternalInstall","renderConfigurations","renderEmptyConfigurations","alertText"],"sourceRoot":""}