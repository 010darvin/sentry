{"version":3,"file":"chunks/app_components_charts_eventsRequest_tsx-app_utils_discover_discoverQuery_tsx-app_views_perfor-9421d1.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/events.tsx","webpack:///./app/components/charts/barChartZoom.tsx","webpack:///./app/components/charts/components/dataZoomInside.tsx","webpack:///./app/components/charts/components/toolBox.tsx","webpack:///./app/components/charts/eventsRequest.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/transparentLoadingMask.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/getPeriod.tsx","webpack:///./app/utils/performance/histogram/constants.tsx","webpack:///./app/utils/performance/histogram/histogramQuery.tsx","webpack:///./app/utils/performance/histogram/index.tsx","webpack:///./app/views/performance/transactionSummary/transactionVitals/constants.tsx","webpack:///./app/views/performance/transactionSummary/transactionVitals/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionVitals/index.tsx","webpack:///./app/views/performance/transactionSummary/transactionVitals/styles.tsx","webpack:///./app/views/performance/transactionSummary/transactionVitals/vitalCard.tsx","webpack:///./app/views/performance/transactionSummary/transactionVitals/vitalsPanel.tsx","webpack:///../node_modules/lodash/throttle.js"],"sourcesContent":["import {LocationDescriptor} from 'history';\nimport pick from 'lodash/pick';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {canIncludePreviousPeriod} from 'sentry/components/charts/utils';\nimport {\n  DateString,\n  EventsStats,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {LocationQuery} from 'sentry/utils/discover/eventView';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {PERFORMANCE_URL_PARAM} from 'sentry/utils/performance/constants';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\ntype Options = {\n  organization: OrganizationSummary;\n  partial: boolean;\n  comparisonDelta?: number;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  excludeOther?: boolean;\n  field?: string[];\n  generatePathname?: (org: OrganizationSummary) => string;\n  includePrevious?: boolean;\n  interval?: string;\n  limit?: number;\n  orderby?: string;\n  period?: string | null;\n  project?: Readonly<number[]>;\n  query?: string;\n  queryBatching?: QueryBatching;\n  queryExtras?: Record<string, string>;\n  referrer?: string;\n  start?: DateString;\n  team?: Readonly<string | string[]>;\n  topEvents?: number;\n  withoutZerofill?: boolean;\n  yAxis?: string | string[];\n};\n\n/**\n * Make requests to `events-stats` endpoint\n *\n * @param {Object} api API client instance\n * @param {Object} options Request parameters\n * @param {Object} options.organization Organization object\n * @param {Number[]} options.project List of project ids\n * @param {String[]} options.environment List of environments to query for\n * @param {Boolean} options.excludeOther Exclude the \"Other\" series when making a topEvents query\n * @param {String[]} options.team List of teams to query for\n * @param {String} options.period Time period to query for, in the format: <integer><units> where units are \"d\" or \"h\"\n * @param {String} options.interval Time interval to group results in, in the format: <integer><units> where units are \"d\", \"h\", \"m\", \"s\"\n * @param {Number} options.comparisonDelta Comparison delta for change alert event stats to include comparison stats\n * @param {Boolean} options.includePrevious Should request also return reqsults for previous period?\n * @param {Number} options.limit The number of rows to return\n * @param {String} options.query Search query\n * @param {QueryBatching} options.queryBatching A container for batching functions from a provider\n * @param {Record<string, string>} options.queryExtras A list of extra query parameters\n * @param {(org: OrganizationSummary) => string} options.generatePathname A function that returns an override for the pathname\n */\nexport const doEventsRequest = <IncludeAllArgsType extends boolean = false>(\n  api: Client,\n  {\n    organization,\n    project,\n    environment,\n    team,\n    period,\n    start,\n    end,\n    interval,\n    comparisonDelta,\n    includePrevious,\n    query,\n    yAxis,\n    field,\n    topEvents,\n    orderby,\n    partial,\n    withoutZerofill,\n    referrer,\n    queryBatching,\n    generatePathname,\n    queryExtras,\n    excludeOther,\n    includeAllArgs,\n  }: {includeAllArgs?: IncludeAllArgsType} & Options\n): IncludeAllArgsType extends true\n  ? Promise<\n      [EventsStats | MultiSeriesEventsStats, string | undefined, ResponseMeta | undefined]\n    >\n  : Promise<EventsStats | MultiSeriesEventsStats> => {\n  const pathname =\n    generatePathname?.(organization) ??\n    `/organizations/${organization.slug}/events-stats/`;\n\n  const shouldDoublePeriod = canIncludePreviousPeriod(includePrevious, period);\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      interval,\n      comparisonDelta,\n      project,\n      environment,\n      team,\n      query,\n      yAxis,\n      field,\n      topEvents,\n      orderby,\n      partial: partial ? '1' : undefined,\n      withoutZerofill: withoutZerofill ? '1' : undefined,\n      referrer: referrer ? referrer : 'api.organization-event-stats',\n      excludeOther: excludeOther ? '1' : undefined,\n    }).filter(([, value]) => typeof value !== 'undefined')\n  );\n\n  // Doubling period for absolute dates is not accurate unless starting and\n  // ending times are the same (at least for daily intervals). This is\n  // the tradeoff for now.\n  const periodObj = getPeriod({period, start, end}, {shouldDoublePeriod});\n\n  const queryObject = {\n    includeAllArgs,\n    query: {\n      ...urlQuery,\n      ...periodObj,\n      ...queryExtras,\n    },\n  };\n\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, pathname, queryObject);\n  }\n\n  return api.requestPromise<IncludeAllArgsType>(pathname, queryObject);\n};\n\nexport type EventQuery = {\n  field: string[];\n  query: string;\n  environment?: string[];\n  equation?: string[];\n  noPagination?: boolean;\n  per_page?: number;\n  project?: string | string[];\n  referrer?: string;\n  sort?: string | string[];\n  team?: string | string[];\n};\n\nexport type TagSegment = {\n  count: number;\n  name: string;\n  url: LocationDescriptor;\n  value: string;\n  isOther?: boolean;\n  key?: string;\n};\n\nexport type Tag = {\n  key: string;\n  topValues: Array<TagSegment>;\n};\n\n/**\n * Fetches tag facets for a query\n */\nexport function fetchTagFacets(\n  api: Client,\n  orgSlug: string,\n  query: EventQuery\n): Promise<Tag[]> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  return api.requestPromise(`/organizations/${orgSlug}/events-facets/`, {\n    query: queryOption,\n  });\n}\n\n/**\n * Fetches total count of events for a given query\n */\nexport function fetchTotalCount(\n  api: Client,\n  orgSlug: String,\n  query: EventQuery & LocationQuery\n): Promise<number> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  type Response = {\n    count: number;\n  };\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/events-meta/`, {\n      query: queryOption,\n    })\n    .then((res: Response) => res.count);\n}\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {EChartChartReadyHandler, EChartDataZoomHandler} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\n\ntype RenderProps = {\n  dataZoom: ReturnType<typeof DataZoomInside>;\n  onChartReady: EChartChartReadyHandler;\n  onDataZoom: EChartDataZoomHandler;\n  toolBox: ReturnType<typeof ToolBox>;\n};\n\nexport type BarChartBucket = {\n  end: number;\n  start: number;\n};\n\ntype Props = {\n  /**\n   * This is the list of bucket start and end ranges. This is used by the\n   * component to determine the start and end of the zoom.\n   */\n  buckets: BarChartBucket[];\n  /**\n   * The children function that will receive the render props and return\n   * a rendered chart.\n   */\n  children: (props: RenderProps) => React.ReactNode;\n  location: Location;\n  /**\n   * This is the query parameter the end of the zoom will be propagated to.\n   */\n  paramEnd: string;\n  /**\n   * This is the query parameter the start of the zoom will be propagated to.\n   */\n  paramStart: string;\n  /**\n   * If you need the dataZoom control to control more than one chart.\n   * you can provide a list of the axis indexes.\n   */\n  xAxisIndex: number[];\n  /**\n   * This is the minimum width of the zoom. If the targeted zoom area is\n   * smaller than is specified by this parameter, the zoom will be cancelled\n   * and the `onDataZoomCancelled` callback will be called.\n   */\n  minZoomWidth?: number;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  /**\n   * This callback is called when the zoom action was cancelled. It can happen\n   * when `minZoomWidth` is specified and the user tries to zoom on an area\n   * smaller than that.\n   */\n  onDataZoomCancelled?: () => void;\n  /**\n   *\n   */\n  onHistoryPush?: (start: number, end: number) => void;\n};\n\nclass BarChartZoom extends Component<Props> {\n  zooming: (() => void) | null = null;\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // Both of these values should not be null, but we include it just in case.\n    // These values are null when the user uses the toolbox included in ECharts\n    // to navigate back through zoom history, but we hide it below.\n    if (startValue !== null && endValue !== null) {\n      const {buckets, location, paramStart, paramEnd, minZoomWidth, onHistoryPush} =\n        this.props;\n      const {start} = buckets[startValue];\n      const {end} = buckets[endValue];\n\n      if (minZoomWidth === undefined || end - start > minZoomWidth) {\n        const target = {\n          pathname: location.pathname,\n          query: {\n            ...location.query,\n            [paramStart]: start,\n            [paramEnd]: end,\n          },\n        };\n        if (onHistoryPush) {\n          onHistoryPush(start, end);\n        } else {\n          browserHistory.push(target);\n        }\n      } else {\n        // Dispatch the restore action here to stop ECharts from zooming\n        chart.dispatchAction({type: 'restore'});\n        callIfFunction(this.props.onDataZoomCancelled);\n      }\n    } else {\n      // Dispatch the restore action here to stop ECharts from zooming\n      chart.dispatchAction({type: 'restore'});\n      callIfFunction(this.props.onDataZoomCancelled);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  render() {\n    const {children, xAxisIndex} = this.props;\n\n    const renderProps = {\n      onChartReady: this.handleChartReady,\n      onFinished: this.handleChartFinished,\n      dataZoom: DataZoomInside({xAxisIndex}),\n      // We must include data zoom in the toolbox for the zoom to work,\n      // but we do not want to show the toolbox components.\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default BarChartZoom;\n","import 'echarts/lib/component/dataZoomInside';\n\nimport type {InsideDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: InsideDataZoomComponentOption = {\n  type: 'inside',\n  // Mouse wheel can not trigger zoom\n  zoomOnMouseWheel: false,\n  // The translation (by mouse drag or touch drag) is available but zoom is not\n  zoomLock: true,\n  throttle: 50,\n};\n\nexport default function DataZoomInside(\n  props: InsideDataZoomComponentOption | InsideDataZoomComponentOption[]\n): InsideDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import type {ToolboxComponentOption} from 'echarts';\n\nfunction getFeatures({\n  dataZoom,\n  ...features\n}: ToolboxComponentOption['feature'] = {}): ToolboxComponentOption['feature'] {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(\n  options: ToolboxComponentOption,\n  features: ToolboxComponentOption['feature']\n): ToolboxComponentOption {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n    // Stack the toolbox under the legend.\n    // so all series names are clickable.\n    z: -1,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import {PureComponent} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omitBy from 'lodash/omitBy';\n\nimport {doEventsRequest} from 'sentry/actionCreators/events';\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\nimport {\n  canIncludePreviousPeriod,\n  getPreviousSeriesName,\n  isMultiSeriesStats,\n} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {\n  DateString,\n  EventsStats,\n  EventsStatsData,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport {stripEquationPrefix} from 'sentry/utils/discover/fields';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\nexport type TimeSeriesData = {\n  allTimeseriesData?: EventsStatsData;\n  comparisonTimeseriesData?: Series[];\n  originalPreviousTimeseriesData?: EventsStatsData | null;\n  originalTimeseriesData?: EventsStatsData;\n  previousTimeseriesData?: Series[] | null;\n  timeAggregatedData?: Series | {};\n  timeframe?: {end: number; start: number};\n  // timeseries data\n  timeseriesData?: Series[];\n  timeseriesTotals?: {count: number};\n};\n\ntype LoadingStatus = {\n  /**\n   * Whether there was an error retrieving data\n   */\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  errorMessage?: string;\n};\n\n// Can hold additional data from the root an events stat object (eg. start, end, order, isMetricsData).\ninterface AdditionalSeriesInfo {\n  isMetricsData?: boolean;\n}\n\nexport type RenderProps = LoadingStatus &\n  TimeSeriesData & {\n    results?: Series[]; // Chart with multiple series.\n    seriesAdditionalInfo?: Record<string, AdditionalSeriesInfo>;\n  };\n\ntype DefaultProps = {\n  /**\n   * Include data for previous period\n   */\n  includePrevious: boolean;\n  /**\n   * Transform the response data to be something ingestible by charts\n   */\n  includeTransformedData: boolean;\n  /**\n   * Interval to group results in\n   *\n   * e.g. 1d, 1h, 1m, 1s\n   */\n  interval: string;\n  /**\n   * number of rows to return\n   */\n  limit: number;\n  /**\n   * The query string to search events by\n   */\n  query: string;\n  /**\n   * Time delta for comparing intervals of alert metrics, in seconds\n   */\n  comparisonDelta?: number;\n  /**\n   * Absolute end date for query\n   */\n  end?: DateString;\n  /**\n   * Relative time period for query.\n   *\n   * Use `start` and `end` for absolute dates.\n   *\n   * e.g. 24h, 7d, 30d\n   */\n  period?: string | null;\n  /**\n   * Absolute start date for query\n   */\n  start?: DateString;\n};\n\ntype EventsRequestPartialProps = {\n  /**\n   * API client instance\n   */\n  api: Client;\n  children: (renderProps: RenderProps) => React.ReactNode;\n  organization: OrganizationSummary;\n  /**\n   * Whether or not to include the last partial bucket. This happens for example when the\n   * current time is 11:26 and the last bucket ranges from 11:25-11:30. This means that\n   * the last bucket contains 1 minute worth of data while the rest contains 5 minutes.\n   *\n   * This flag indicates whether or not this last bucket should be included in the result.\n   */\n  partial: boolean;\n  /**\n   * Discover needs confirmation to run >30 day >10 project queries,\n   * optional and when not passed confirmation is not required.\n   */\n  confirmedQuery?: boolean;\n  /**\n   * Name used for display current series dataset tooltip\n   */\n  currentSeriesNames?: string[];\n  /**\n   * Optional callback to further process raw events request response data\n   */\n  dataLoadedCallback?: (any: EventsStats | MultiSeriesEventsStats | null) => void;\n  /**\n   * List of environments to query\n   */\n  environment?: Readonly<string[]>;\n  /**\n   * Is query out of retention\n   */\n  expired?: boolean;\n  /**\n   * List of fields to group with when doing a topEvents request.\n   */\n  field?: string[];\n  /**\n   * Allows overriding the pathname.\n   */\n  generatePathname?: (org: OrganizationSummary) => string;\n  /**\n   * Hide error toast (used for pages which also query eventsV2). Stops error appearing as a toast.\n   */\n  hideError?: boolean;\n  /**\n   * Initial loading state\n   */\n  loading?: boolean;\n  /**\n   * Query name used for displaying error toast if it is out of retention\n   */\n  name?: string;\n  /**\n   * A way to control error if error handling is not owned by the toast.\n   */\n  onError?: (error: string) => void;\n  /**\n   * How to order results when getting top events.\n   */\n  orderby?: string;\n  previousSeriesNames?: string[];\n  /**\n   * List of project ids to query\n   */\n  project?: Readonly<number[]>;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * A unique name for what's triggering this request, see organization_events_stats for an allowlist\n   */\n  referrer?: string;\n  /**\n   * Should loading be shown.\n   */\n  showLoading?: boolean;\n  /**\n   * List of team ids to query\n   */\n  team?: Readonly<string | string[]>;\n  /**\n   * The number of top results to get. When set a multi-series result will be returned\n   * in the `results` child render function.\n   */\n  topEvents?: number;\n  /**\n   * Whether or not to zerofill results\n   */\n  withoutZerofill?: boolean;\n  /**\n   * The yAxis being plotted. If multiple yAxis are requested,\n   * the child render function will be called with `results`\n   */\n  yAxis?: string | string[];\n};\n\ntype TimeAggregationProps =\n  | {includeTimeAggregation: true; timeAggregationSeriesName: string}\n  | {includeTimeAggregation?: false; timeAggregationSeriesName?: undefined};\n\nexport type EventsRequestProps = DefaultProps &\n  TimeAggregationProps &\n  EventsRequestPartialProps;\n\ntype EventsRequestState = {\n  errored: boolean;\n  fetchedWithPrevious: boolean;\n  reloading: boolean;\n  timeseriesData: null | EventsStats | MultiSeriesEventsStats;\n  errorMessage?: string;\n};\n\nconst propNamesToIgnore = [\n  'api',\n  'children',\n  'organization',\n  'loading',\n  'queryBatching',\n  'generatePathname',\n];\nconst omitIgnoredProps = (props: EventsRequestProps) =>\n  omitBy(props, (_value, key) => propNamesToIgnore.includes(key));\n\nclass EventsRequest extends PureComponent<EventsRequestProps, EventsRequestState> {\n  static defaultProps: DefaultProps = {\n    period: undefined,\n    start: null,\n    end: null,\n    interval: '1d',\n    comparisonDelta: undefined,\n    limit: 15,\n    query: '',\n    includePrevious: true,\n    includeTransformedData: true,\n  };\n\n  state: EventsRequestState = {\n    reloading: !!this.props.loading,\n    errored: false,\n    timeseriesData: null,\n    fetchedWithPrevious: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: EventsRequestProps) {\n    if (isEqual(omitIgnoredProps(prevProps), omitIgnoredProps(this.props))) {\n      return;\n    }\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  private unmounting: boolean = false;\n\n  fetchData = async () => {\n    const {api, confirmedQuery, onError, expired, name, hideError, ...props} = this.props;\n    let timeseriesData: EventsStats | MultiSeriesEventsStats | null = null;\n\n    if (confirmedQuery === false) {\n      return;\n    }\n\n    this.setState(state => ({\n      reloading: state.timeseriesData !== null,\n      errored: false,\n      errorMessage: undefined,\n    }));\n\n    let errorMessage;\n    if (expired) {\n      errorMessage = t(\n        '%s has an invalid date range. Please try a more recent date range.',\n        name\n      );\n      addErrorMessage(errorMessage, {append: true});\n\n      this.setState({\n        errored: true,\n        errorMessage,\n      });\n    } else {\n      try {\n        api.clear();\n        timeseriesData = await doEventsRequest(api, props);\n      } catch (resp) {\n        if (resp && resp.responseJSON && resp.responseJSON.detail) {\n          errorMessage = resp.responseJSON.detail;\n        } else {\n          errorMessage = t('Error loading chart data');\n        }\n        if (!hideError) {\n          addErrorMessage(errorMessage);\n        }\n        if (onError) {\n          onError(errorMessage);\n        }\n        this.setState({\n          errored: true,\n          errorMessage,\n        });\n      }\n    }\n\n    if (this.unmounting) {\n      return;\n    }\n\n    this.setState({\n      reloading: false,\n      timeseriesData,\n      fetchedWithPrevious: props.includePrevious,\n    });\n    if (props.dataLoadedCallback) {\n      props.dataLoadedCallback(timeseriesData);\n    }\n  };\n\n  /**\n   * Retrieves dataset for the current period (since data can potentially\n   * contain previous period's data), as well as the previous period if\n   * possible.\n   *\n   * Returns `null` if data does not exist\n   */\n  getData = (\n    data: EventsStatsData\n  ): {current: EventsStatsData; previous: EventsStatsData | null} => {\n    const {fetchedWithPrevious} = this.state;\n    const {period, includePrevious} = this.props;\n\n    const hasPreviousPeriod =\n      fetchedWithPrevious || canIncludePreviousPeriod(includePrevious, period);\n    // Take the floor just in case, but data should always be divisible by 2\n    const dataMiddleIndex = Math.floor(data.length / 2);\n    return {\n      current: hasPreviousPeriod ? data.slice(dataMiddleIndex) : data,\n      previous: hasPreviousPeriod ? data.slice(0, dataMiddleIndex) : null,\n    };\n  };\n\n  // This aggregates all values per `timestamp`\n  calculateTotalsPerTimestamp(\n    data: EventsStatsData,\n    getName: (\n      timestamp: number,\n      countArray: {count: number}[],\n      i: number\n    ) => number = timestamp => timestamp * 1000\n  ): SeriesDataUnit[] {\n    return data.map(([timestamp, countArray], i) => ({\n      name: getName(timestamp, countArray, i),\n      value: countArray.reduce((acc, {count}) => acc + count, 0),\n    }));\n  }\n\n  /**\n   * Get previous period data, but transform timestamps so that data fits unto\n   * the current period's data axis\n   */\n  transformPreviousPeriodData(\n    current: EventsStatsData,\n    previous: EventsStatsData | null,\n    seriesName?: string\n  ): Series | null {\n    // Need the current period data array so we can take the timestamp\n    // so we can be sure the data lines up\n    if (!previous) {\n      return null;\n    }\n\n    return {\n      seriesName: seriesName ?? 'Previous',\n      data: this.calculateTotalsPerTimestamp(\n        previous,\n        (_timestamp, _countArray, i) => current[i][0] * 1000\n      ),\n      stack: 'previous',\n    };\n  }\n\n  /**\n   * Aggregate all counts for each time stamp\n   */\n  transformAggregatedTimeseries(data: EventsStatsData, seriesName: string = ''): Series {\n    return {\n      seriesName,\n      data: this.calculateTotalsPerTimestamp(data),\n    };\n  }\n\n  /**\n   * Transforms query response into timeseries data to be used in a chart\n   */\n  transformTimeseriesData(data: EventsStatsData, seriesName?: string): Series[] {\n    return [\n      {\n        seriesName: seriesName || 'Current',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce((acc, {count}) => acc + count, 0),\n        })),\n      },\n    ];\n  }\n\n  /**\n   * Transforms comparisonCount in query response into timeseries data to be used in a comparison chart for change alerts\n   */\n  transformComparisonTimeseriesData(data: EventsStatsData): Series[] {\n    return [\n      {\n        seriesName: 'comparisonCount()',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce(\n            (acc, {comparisonCount}) => acc + (comparisonCount ?? 0),\n            0\n          ),\n        })),\n      },\n    ];\n  }\n\n  processData(response: EventsStats, seriesIndex: number = 0, seriesName?: string) {\n    const {data, isMetricsData, totals} = response;\n    const {\n      includeTransformedData,\n      includeTimeAggregation,\n      timeAggregationSeriesName,\n      currentSeriesNames,\n      previousSeriesNames,\n      comparisonDelta,\n    } = this.props;\n    const {current, previous} = this.getData(data);\n    const transformedData = includeTransformedData\n      ? this.transformTimeseriesData(\n          current,\n          seriesName ?? currentSeriesNames?.[seriesIndex]\n        )\n      : [];\n    const transformedComparisonData =\n      includeTransformedData && comparisonDelta\n        ? this.transformComparisonTimeseriesData(current)\n        : [];\n    const previousData = includeTransformedData\n      ? this.transformPreviousPeriodData(\n          current,\n          previous,\n          (seriesName ? getPreviousSeriesName(seriesName) : undefined) ??\n            previousSeriesNames?.[seriesIndex]\n        )\n      : null;\n    const timeAggregatedData = includeTimeAggregation\n      ? this.transformAggregatedTimeseries(current, timeAggregationSeriesName || '')\n      : {};\n    const timeframe =\n      response.start && response.end\n        ? !previous\n          ? {\n              start: response.start * 1000,\n              end: response.end * 1000,\n            }\n          : {\n              // Find the midpoint of start & end since previous includes 2x data\n              start: (response.start + response.end) * 500,\n              end: response.end * 1000,\n            }\n        : undefined;\n\n    const processedData = {\n      data: transformedData,\n      comparisonData: transformedComparisonData,\n      allData: data,\n      originalData: current,\n      totals,\n      isMetricsData,\n      originalPreviousData: previous,\n      previousData,\n      timeAggregatedData,\n      timeframe,\n    };\n\n    return processedData;\n  }\n\n  render() {\n    const {children, showLoading, ...props} = this.props;\n    const {topEvents} = this.props;\n    const {timeseriesData, reloading, errored, errorMessage} = this.state;\n    // Is \"loading\" if data is null\n    const loading = this.props.loading || timeseriesData === null;\n\n    if (showLoading && loading) {\n      return <LoadingPanel data-test-id=\"events-request-loading\" />;\n    }\n    if (isMultiSeriesStats(timeseriesData, defined(topEvents))) {\n      // Convert multi-series results into chartable series. Multi series results\n      // are created when multiple yAxis are used or a topEvents request is made.\n      // Convert the timeseries data into a multi-series result set.\n      // As the server will have replied with a map like:\n      // {[titleString: string]: EventsStats}\n      let timeframe: {end: number; start: number} | undefined = undefined;\n      const seriesAdditionalInfo: Record<string, AdditionalSeriesInfo> = {};\n      const sortedTimeseriesData = Object.keys(timeseriesData)\n        .map(\n          (\n            seriesName: string,\n            index: number\n          ): [number, Series, Series | null, AdditionalSeriesInfo] => {\n            const seriesData: EventsStats = timeseriesData[seriesName];\n            const processedData = this.processData(\n              seriesData,\n              index,\n              stripEquationPrefix(seriesName)\n            );\n            if (!timeframe) {\n              timeframe = processedData.timeframe;\n            }\n            if (processedData.isMetricsData) {\n              seriesAdditionalInfo[seriesName] = {\n                isMetricsData: processedData.isMetricsData,\n              };\n            }\n            return [\n              seriesData.order || 0,\n              processedData.data[0],\n              processedData.previousData,\n              {isMetricsData: processedData.isMetricsData},\n            ];\n          }\n        )\n        .sort((a, b) => a[0] - b[0]);\n      const results: Series[] = sortedTimeseriesData.map(item => {\n        return item[1];\n      });\n      const previousTimeseriesData: Series[] | undefined = sortedTimeseriesData.some(\n        item => item[2] === null\n      )\n        ? undefined\n        : sortedTimeseriesData.map(item => {\n            return item[2] as Series;\n          });\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        results,\n        timeframe,\n        previousTimeseriesData,\n        seriesAdditionalInfo,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    if (timeseriesData) {\n      const {\n        data: transformedTimeseriesData,\n        comparisonData: transformedComparisonTimeseriesData,\n        allData: allTimeseriesData,\n        originalData: originalTimeseriesData,\n        totals: timeseriesTotals,\n        originalPreviousData: originalPreviousTimeseriesData,\n        previousData: previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        isMetricsData,\n      } = this.processData(timeseriesData);\n\n      const seriesAdditionalInfo = {\n        [this.props.currentSeriesNames?.[0] ?? 'current']: {isMetricsData},\n      };\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        // meta data,\n        seriesAdditionalInfo,\n        // timeseries data\n        timeseriesData: transformedTimeseriesData,\n        comparisonTimeseriesData: transformedComparisonTimeseriesData,\n        allTimeseriesData,\n        originalTimeseriesData,\n        timeseriesTotals,\n        originalPreviousTimeseriesData,\n        previousTimeseriesData: previousTimeseriesData\n          ? [previousTimeseriesData]\n          : previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    return children({\n      loading,\n      reloading,\n      errored,\n      errorMessage,\n      ...props,\n    });\n  }\n}\nexport default EventsRequest;\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import styled from '@emotion/styled';\n\nimport LoadingMask, {LoadingMaskProps} from 'sentry/components/loadingMask';\n\ninterface TransparentLoadingMaskProps extends LoadingMaskProps {\n  visible: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TransparentLoadingMask = styled(\n  ({className, visible, children, ...props}: TransparentLoadingMaskProps) => {\n    const other = visible ? {...props, 'data-test-id': 'loading-placeholder'} : props;\n    return (\n      <LoadingMask className={className} {...other}>\n        {children}\n      </LoadingMask>\n    );\n  }\n)<TransparentLoadingMaskProps>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nexport default TransparentLoadingMask;\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import {EventsMetaType, MetaType} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport {TransactionThresholdMetric} from 'sentry/views/performance/transactionSummary/transactionThresholdModal';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata from the events endpoint.\n */\nexport type EventsTableData = {\n  data: Array<TableDataRow>;\n  meta?: EventsMetaType;\n};\n\nexport type TableDataWithTitle = TableData & {title: string};\n\ntype DiscoverQueryPropsWithThresholds = DiscoverQueryProps & {\n  transactionName?: string;\n  transactionThreshold?: number;\n  transactionThresholdMetric?: TransactionThresholdMetric;\n};\n\ntype DiscoverQueryComponentProps = DiscoverQueryPropsWithThresholds & {\n  children: (props: GenericChildrenProps<TableData>) => React.ReactNode;\n  useEvents?: boolean;\n};\n\nfunction shouldRefetchData(\n  prevProps: DiscoverQueryPropsWithThresholds,\n  nextProps: DiscoverQueryPropsWithThresholds\n) {\n  return (\n    prevProps.transactionName !== nextProps.transactionName ||\n    prevProps.transactionThreshold !== nextProps.transactionThreshold ||\n    prevProps.transactionThresholdMetric !== nextProps.transactionThresholdMetric\n  );\n}\n\nfunction DiscoverQuery(props: DiscoverQueryComponentProps) {\n  const endpoint = props.useEvents ? 'events' : 'eventsv2';\n  const afterFetch = props.useEvents\n    ? (data, _) => {\n        const {fields, ...otherMeta} = data.meta ?? {};\n        return {\n          ...data,\n          meta: {...fields, ...otherMeta},\n        };\n      }\n    : undefined;\n  return (\n    <GenericDiscoverQuery<TableData, DiscoverQueryPropsWithThresholds>\n      route={endpoint}\n      shouldRefetchData={shouldRefetchData}\n      afterFetch={afterFetch}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(DiscoverQuery);\n","import moment from 'moment';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DateString} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\n\ntype DateObject = {\n  /**\n   * Ending date object\n   */\n  end?: DateString;\n  /**\n   * Relative period string in format \"<int><unit>\" (e.g. 4d for 4 days)\n   */\n  period?: string | null;\n  /**\n   * Starting date object\n   */\n  start?: DateString;\n};\n\ntype Options = {\n  /**\n   * Doubles the given period (useful for getting previous period data)\n   */\n  shouldDoublePeriod?: boolean;\n};\n\n/**\n * Gets the period to query with if we need to double the initial period in order\n * to get data for the previous period\n *\n * Returns an object with either a period or start/end dates ({statsPeriod: string} or {start: string, end: string})\n */\nexport function getPeriod(\n  {period, start, end}: DateObject,\n  {shouldDoublePeriod}: Options = {}\n) {\n  if (!period && !start && !end) {\n    period = DEFAULT_STATS_PERIOD;\n  }\n\n  // you can not specify both relative and absolute periods\n  // relative period takes precedence\n  if (period) {\n    if (!shouldDoublePeriod) {\n      return {statsPeriod: period};\n    }\n    const [, periodNumber, periodLength] = period.match(/([0-9]+)([mhdw])/)!;\n\n    return {statsPeriod: `${parseInt(periodNumber, 10) * 2}${periodLength}`};\n  }\n\n  if (!start || !end) {\n    throw new Error('start and end required');\n  }\n\n  const formattedStart = getUtcDateString(start);\n  const formattedEnd = getUtcDateString(end);\n\n  if (shouldDoublePeriod) {\n    // get duration of end - start and double\n    const diff = moment(end).diff(moment(start));\n\n    const previousPeriodStart = moment(start).subtract(diff);\n\n    // This is not as accurate as having 2 start/end objs\n    return {\n      start: getUtcDateString(previousPeriodStart),\n      end: formattedEnd,\n    };\n  }\n\n  return {\n    start: formattedStart,\n    end: formattedEnd,\n  };\n}\n","import {t} from 'sentry/locale';\nimport {SelectValue} from 'sentry/types';\n\nimport {DataFilter} from './types';\n\nexport const FILTER_OPTIONS: SelectValue<DataFilter>[] = [\n  {label: t('Exclude'), value: 'exclude_outliers'},\n  {label: t('Include'), value: 'all'},\n];\n","import {Fragment} from 'react';\nimport omit from 'lodash/omit';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {DataFilter, HistogramData} from 'sentry/utils/performance/histogram/types';\nimport withApi from 'sentry/utils/withApi';\n\ntype Histograms = Record<string, HistogramData>;\n\ntype HistogramProps = {\n  fields: string[];\n  numBuckets: number;\n  dataFilter?: DataFilter;\n  didReceiveMultiAxis?: (axisCounts: Record<string, number>) => void;\n  max?: number;\n  min?: number;\n  precision?: number;\n};\n\ntype RequestProps = DiscoverQueryProps & HistogramProps;\n\nexport type HistogramQueryChildrenProps = Omit<\n  GenericChildrenProps<HistogramProps>,\n  'tableData'\n> & {\n  histograms: Histograms | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: HistogramQueryChildrenProps) => React.ReactNode;\n};\n\nfunction getHistogramRequestPayload(props: RequestProps) {\n  const {fields, numBuckets, min, max, precision, dataFilter, eventView, location} =\n    props;\n  const baseApiPayload = {\n    field: fields,\n    numBuckets,\n    min,\n    max,\n    precision,\n    dataFilter,\n  };\n  const additionalApiPayload = omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n  ]);\n  const apiPayload = Object.assign(baseApiPayload, additionalApiPayload);\n  return apiPayload;\n}\n\nfunction HistogramQuery(props: Props) {\n  const {children, fields, didReceiveMultiAxis} = props;\n\n  function didFetch(data: Histograms) {\n    if (didReceiveMultiAxis) {\n      const counts: Record<string, number> = {};\n      Object.entries(data).forEach(\n        ([key, values]) =>\n          (counts[key] = values.length\n            ? values.reduce((prev, curr) => prev + curr.count, 0)\n            : 0)\n      );\n      didReceiveMultiAxis(counts);\n    }\n  }\n\n  if (fields.length === 0) {\n    return (\n      <Fragment>\n        {children({\n          isLoading: false,\n          error: null,\n          pageLinks: null,\n          histograms: {},\n        })}\n      </Fragment>\n    );\n  }\n\n  return (\n    <GenericDiscoverQuery<Histograms, HistogramProps>\n      route=\"events-histogram\"\n      getRequestPayload={getHistogramRequestPayload}\n      didFetch={didFetch}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({histograms: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(HistogramQuery);\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {SelectValue} from 'sentry/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {FILTER_OPTIONS} from './constants';\nimport {DataFilter} from './types';\n\ntype HistogramChildrenProps = {\n  activeFilter: SelectValue<DataFilter>;\n  filterOptions: typeof FILTER_OPTIONS;\n  handleFilterChange: (option: string) => void;\n  handleResetView: () => void;\n  isZoomed: boolean;\n};\n\ntype Props = {\n  children: (props: HistogramChildrenProps) => React.ReactNode;\n  location: Location;\n  zoomKeys: string[];\n};\n\nclass Histogram extends Component<Props> {\n  isZoomed() {\n    const {location, zoomKeys} = this.props;\n    return zoomKeys.map(key => location.query[key]).some(value => value !== undefined);\n  }\n\n  handleResetView = () => {\n    const {location, zoomKeys} = this.props;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: removeHistogramQueryStrings(location, zoomKeys),\n    });\n  };\n\n  getActiveFilter() {\n    const {location} = this.props;\n\n    const dataFilter = location.query.dataFilter\n      ? decodeScalar(location.query.dataFilter)\n      : FILTER_OPTIONS[0].value;\n    return FILTER_OPTIONS.find(item => item.value === dataFilter) || FILTER_OPTIONS[0];\n  }\n\n  handleFilterChange = (value: string) => {\n    const {location, zoomKeys} = this.props;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...removeHistogramQueryStrings(location, zoomKeys),\n        dataFilter: value,\n      },\n    });\n  };\n\n  render() {\n    const childrenProps = {\n      isZoomed: this.isZoomed(),\n      handleResetView: this.handleResetView,\n      activeFilter: this.getActiveFilter(),\n      handleFilterChange: this.handleFilterChange,\n      filterOptions: FILTER_OPTIONS,\n    };\n    return this.props.children(childrenProps);\n  }\n}\n\nexport function removeHistogramQueryStrings(location: Location, zoomKeys: string[]) {\n  const query: Location['query'] = {...location.query, cursor: undefined};\n\n  delete query.dataFilter;\n  // reset all zoom parameters\n  zoomKeys.forEach(key => delete query[key]);\n\n  return query;\n}\n\nexport default Histogram;\n","import {WebVital} from 'sentry/utils/fields';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {VitalGroup} from 'sentry/utils/performance/vitals/types';\nimport theme from 'sentry/utils/theme';\n\nexport const NUM_BUCKETS = 100;\n\nexport const PERCENTILE = 0.75;\n\n/**\n * This defines the grouping for histograms. Histograms that are in the same group\n * will be queried together on initial load for alignment. However, the zoom controls\n * are defined for each measurement independently.\n */\nconst _VITAL_GROUPS = [\n  {\n    vitals: [WebVital.FP, WebVital.FCP, WebVital.LCP],\n    min: 0,\n  },\n  {\n    vitals: [WebVital.FID],\n    min: 0,\n    precision: 2,\n  },\n  {\n    vitals: [WebVital.CLS],\n    min: 0,\n    precision: 2,\n  },\n];\n\nconst _COLORS = [\n  ...theme.charts.getColorPalette(\n    _VITAL_GROUPS.reduce((count, {vitals}) => count + vitals.length, 0) - 1\n  ),\n].reverse();\n\nexport const VITAL_GROUPS: VitalGroup[] = _VITAL_GROUPS.map(group => ({\n  ...group,\n  colors: _COLORS.splice(0, group.vitals.length),\n}));\n\nexport const ZOOM_KEYS = _VITAL_GROUPS.reduce((keys: string[], {vitals}) => {\n  vitals.forEach(vital => {\n    const vitalSlug = WEB_VITAL_DETAILS[vital].slug;\n    keys.push(`${vitalSlug}Start`);\n    keys.push(`${vitalSlug}End`);\n  });\n  return keys;\n}, []);\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {WebVital} from 'sentry/utils/fields';\nimport Histogram from 'sentry/utils/performance/histogram';\nimport {FILTER_OPTIONS} from 'sentry/utils/performance/histogram/constants';\nimport VitalsCardsDiscoverQuery from 'sentry/utils/performance/vitals/vitalsCardsDiscoverQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {VITAL_GROUPS, ZOOM_KEYS} from './constants';\nimport {isMissingVitalsData} from './utils';\nimport VitalsPanel from './vitalsPanel';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n};\n\nfunction VitalsContent(props: Props) {\n  const {location, organization, eventView} = props;\n  const query = decodeScalar(location.query.query, '');\n\n  const handleSearch = (newQuery: string) => {\n    const queryParams = normalizeDateTimeParams({\n      ...(location.query || {}),\n      query: newQuery,\n    });\n\n    // do not propagate pagination when making a new search\n    delete queryParams.cursor;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: queryParams,\n    });\n  };\n\n  const allVitals = VITAL_GROUPS.reduce((keys: WebVital[], {vitals}) => {\n    return keys.concat(vitals);\n  }, []);\n\n  return (\n    <Histogram location={location} zoomKeys={ZOOM_KEYS}>\n      {({activeFilter, handleFilterChange, handleResetView, isZoomed}) => (\n        <Layout.Main fullWidth>\n          <VitalsCardsDiscoverQuery\n            eventView={eventView}\n            orgSlug={organization.slug}\n            location={location}\n            vitals={allVitals}\n          >\n            {results => {\n              const shouldDisplayMissingVitalsAlert =\n                !results.isLoading && isMissingVitalsData(results.vitalsData, allVitals);\n\n              return (\n                <Fragment>\n                  {shouldDisplayMissingVitalsAlert && (\n                    <Alert type=\"info\" showIcon>\n                      {tct(\n                        'If this page is looking a little bare, keep in mind not all browsers support these vitals. [link]',\n                        {\n                          link: (\n                            <ExternalLink href=\"https://docs.sentry.io/product/performance/web-vitals/#browser-support\">\n                              {t('Read more about browser support.')}\n                            </ExternalLink>\n                          ),\n                        }\n                      )}\n                    </Alert>\n                  )}\n                  <FilterActions>\n                    <PageFilterBar condensed>\n                      <EnvironmentPageFilter />\n                      <DatePageFilter alignDropdown=\"left\" />\n                    </PageFilterBar>\n                    <StyledSearchBar\n                      organization={organization}\n                      projectIds={eventView.project}\n                      query={query}\n                      fields={eventView.fields}\n                      onSearch={handleSearch}\n                    />\n                    <CompactSelect\n                      value={activeFilter.value}\n                      options={FILTER_OPTIONS}\n                      onChange={opt => {\n                        trackAnalyticsEvent({\n                          eventKey: 'performance_views.vitals.filter_changed',\n                          eventName: 'Performance Views: Change vitals filter',\n                          organization_id: organization.id,\n                          value: opt.value,\n                        });\n                        handleFilterChange(opt.value);\n                      }}\n                      triggerProps={{prefix: t('Outliers')}}\n                      triggerLabel={activeFilter.label}\n                    />\n                    <Button\n                      onClick={() => {\n                        trackAnalyticsEvent({\n                          eventKey: 'performance_views.vitals.reset_view',\n                          eventName: 'Performance Views: Reset vitals view',\n                          organization_id: organization.id,\n                        });\n\n                        handleResetView();\n                      }}\n                      disabled={!isZoomed}\n                      data-test-id=\"reset-view\"\n                    >\n                      {t('Reset View')}\n                    </Button>\n                  </FilterActions>\n                  <VitalsPanel\n                    organization={organization}\n                    location={location}\n                    eventView={eventView}\n                    dataFilter={activeFilter.value}\n                    results={results}\n                  />\n                </Fragment>\n              );\n            }}\n          </VitalsCardsDiscoverQuery>\n        </Layout.Main>\n      )}\n    </Histogram>\n  );\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(3, min-content);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: auto 1fr auto auto;\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    order: 1;\n    grid-column: 1/5;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    order: initial;\n    grid-column: auto;\n  }\n`;\n\nexport default VitalsContent;\n","import {Location} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {isAggregateField} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport PageLayout from '../pageLayout';\nimport Tab from '../tabs';\n\nimport {PERCENTILE, VITAL_GROUPS} from './constants';\nimport VitalsContent from './content';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n};\n\nfunction TransactionVitals(props: Props) {\n  const {location, organization, projects} = props;\n\n  return (\n    <PageLayout\n      location={location}\n      organization={organization}\n      projects={projects}\n      tab={Tab.WebVitals}\n      getDocumentTitle={getDocumentTitle}\n      generateEventView={generateEventView}\n      childComponent={VitalsContent}\n    />\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Vitals')].join(' \\u2014 ');\n  }\n\n  return [t('Summary'), t('Vitals')].join(' \\u2014 ');\n}\n\nfunction generateEventView({\n  location,\n  transactionName,\n}: {\n  location: Location;\n  transactionName: string;\n}): EventView {\n  const query = decodeScalar(location.query.query, '');\n  const conditions = new MutableSearch(query);\n\n  conditions.setFilterValues('event.type', ['transaction']);\n  conditions.setFilterValues('transaction', [transactionName]);\n\n  Object.keys(conditions.filters).forEach(field => {\n    if (isAggregateField(field)) {\n      conditions.removeFilter(field);\n    }\n  });\n\n  const vitals = VITAL_GROUPS.reduce((allVitals: WebVital[], group) => {\n    return allVitals.concat(group.vitals);\n  }, []);\n\n  return EventView.fromNewQueryWithLocation(\n    {\n      id: undefined,\n      version: 2,\n      name: transactionName,\n      fields: [\n        ...vitals.map(vital => `percentile(${vital}, ${PERCENTILE})`),\n        ...vitals.map(vital => `count_at_least(${vital}, 0)`),\n        ...vitals.map(\n          vital => `count_at_least(${vital}, ${WEB_VITAL_DETAILS[vital].poorThreshold})`\n        ),\n      ],\n      query: conditions.formatString(),\n      projects: [],\n    },\n    location\n  );\n}\n\nexport default withProjects(withOrganization(TransactionVitals));\n","import styled from '@emotion/styled';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport {PanelItem} from 'sentry/components/panels';\nimport space from 'sentry/styles/space';\n\nexport const Card = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: 325px minmax(100px, auto);\n  padding: 0;\n`;\n\nexport const CardSection = styled('div')`\n  padding: ${space(3)};\n`;\n\nexport const CardSummary = styled(CardSection)`\n  position: relative;\n  border-right: 1px solid ${p => p.theme.border};\n  grid-column: 1/1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const CardSectionHeading = styled(SectionHeading)`\n  margin: 0px;\n`;\n\nexport const Description = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n`;\n\nexport const StatNumber = styled('div')`\n  font-size: 32px;\n`;\n","import {Component} from 'react';\nimport {withTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport isEqual from 'lodash/isEqual';\nimport throttle from 'lodash/throttle';\n\nimport Button from 'sentry/components/button';\nimport {BarChart, BarChartSeries} from 'sentry/components/charts/barChart';\nimport BarChartZoom from 'sentry/components/charts/barChartZoom';\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {getAggregateAlias} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {formatAbbreviatedNumber, formatFloat, getDuration} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {DataFilter, HistogramData} from 'sentry/utils/performance/histogram/types';\nimport {\n  computeBuckets,\n  formatHistogramData,\n} from 'sentry/utils/performance/histogram/utils';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\nimport {VitalData} from 'sentry/utils/performance/vitals/vitalsCardsDiscoverQuery';\nimport {Theme} from 'sentry/utils/theme';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {EventsDisplayFilterName} from 'sentry/views/performance/transactionSummary/transactionEvents/utils';\n\nimport {VitalBar} from '../../landing/vitalsCards';\nimport {\n  VitalState,\n  vitalStateColors,\n  webVitalMeh,\n  webVitalPoor,\n} from '../../vitalDetail/utils';\n\nimport {NUM_BUCKETS, PERCENTILE} from './constants';\nimport {Card, CardSectionHeading, CardSummary, Description, StatNumber} from './styles';\nimport {Rectangle} from './types';\nimport {asPixelRect, findNearestBucketIndex, getRefRect, mapPoint} from './utils';\n\ntype Props = {\n  chartData: HistogramData;\n  colors: [string];\n  error: boolean;\n  eventView: EventView;\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  summaryData: VitalData | null;\n  theme: Theme;\n  vital: WebVital;\n  vitalDetails: Vital;\n  dataFilter?: DataFilter;\n  max?: number;\n  min?: number;\n  precision?: number;\n};\n\ntype State = {\n  /**\n   * This is a pair of reference points on the graph that we can use to map any\n   * other points to their pixel coordinates on the graph.\n   *\n   * The x values  here are the index of the cooresponding bucket and the y value\n   * are the respective counts.\n   *\n   * Invariances:\n   * - refDataRect.point1.x < refDataRect.point2.x\n   * - refDataRect.point1.y < refDataRect.point2.y\n   */\n  refDataRect: Rectangle | null;\n  /**\n   * This is the cooresponding pixel coordinate of the references points from refDataRect.\n   *\n   * ECharts' pixel coordinates are relative to the top left whereas the axis coordinates\n   * used here are relative to the bottom right. Because of this and the invariances imposed\n   * on refDataRect, these points have the difference invariances.\n   *\n   * Invariances:\n   * - refPixelRect.point1.x < refPixelRect.point2.x\n   * - refPixelRect.point1.y > refPixelRect.point2.y\n   */\n  refPixelRect: Rectangle | null;\n};\n\nclass VitalCard extends Component<Props, State> {\n  state: State = {\n    refDataRect: null,\n    refPixelRect: null,\n  };\n\n  static getDerivedStateFromProps(nextProps: Readonly<Props>, prevState: State) {\n    const {isLoading, error, chartData} = nextProps;\n\n    if (isLoading || error === null) {\n      return {...prevState};\n    }\n\n    const refDataRect = getRefRect(chartData);\n    if (\n      prevState.refDataRect === null ||\n      (refDataRect !== null && !isEqual(refDataRect, prevState.refDataRect))\n    ) {\n      return {\n        ...prevState,\n        refDataRect,\n      };\n    }\n\n    return {...prevState};\n  }\n\n  trackOpenInDiscoverClicked = () => {\n    const {organization} = this.props;\n    const {vitalDetails: vital} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.vitals.open_in_discover',\n      eventName: 'Performance Views: Open vitals in discover',\n      organization_id: organization.id,\n      vital: vital.slug,\n    });\n  };\n\n  trackOpenAllEventsClicked = () => {\n    const {organization} = this.props;\n    const {vitalDetails: vital} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.vitals.open_all_events',\n      eventName: 'Performance Views: Open vitals in all events',\n      organization_id: organization.id,\n      vital: vital.slug,\n    });\n  };\n\n  get summary() {\n    const {summaryData} = this.props;\n    return summaryData?.p75 ?? null;\n  }\n\n  get failureRate() {\n    const {summaryData} = this.props;\n    const numerator = summaryData?.poor ?? 0;\n    const denominator = summaryData?.total ?? 0;\n    return denominator <= 0 ? 0 : numerator / denominator;\n  }\n\n  getFormattedStatNumber() {\n    const {vitalDetails: vital} = this.props;\n    const summary = this.summary;\n    const {type} = vital;\n\n    return summary === null\n      ? '\\u2014'\n      : type === 'duration'\n      ? getDuration(summary / 1000, 2, true)\n      : formatFloat(summary, 2);\n  }\n\n  renderSummary() {\n    const {\n      vitalDetails: vital,\n      eventView,\n      organization,\n      min,\n      max,\n      dataFilter,\n    } = this.props;\n    const {slug, name, description} = vital;\n\n    const column = `measurements.${slug}`;\n\n    const newEventView = eventView\n      .withColumns([\n        {kind: 'field', field: 'transaction'},\n        {\n          kind: 'function',\n          function: ['percentile', column, PERCENTILE.toString(), undefined],\n        },\n        {kind: 'function', function: ['count', '', '', undefined]},\n      ])\n      .withSorts([\n        {\n          kind: 'desc',\n          field: getAggregateAlias(`percentile(${column},${PERCENTILE.toString()})`),\n        },\n      ]);\n\n    const query = new MutableSearch(newEventView.query ?? '');\n    query.addFilterValues('has', [column]);\n    // add in any range constraints if any\n    if (min !== undefined || max !== undefined) {\n      if (min !== undefined) {\n        query.addFilterValues(column, [`>=${min}`]);\n      }\n      if (max !== undefined) {\n        query.addFilterValues(column, [`<=${max}`]);\n      }\n    }\n    newEventView.query = query.formatString();\n\n    return (\n      <CardSummary>\n        <SummaryHeading>\n          <CardSectionHeading>{`${name} (${slug.toUpperCase()})`}</CardSectionHeading>\n        </SummaryHeading>\n        <StatNumber>\n          {getDynamicText({\n            value: this.getFormattedStatNumber(),\n            fixed: '\\u2014',\n          })}\n        </StatNumber>\n        <Description>{description}</Description>\n        <div>\n          <Button\n            size=\"xs\"\n            to={newEventView\n              .withColumns([{kind: 'field', field: column}])\n              .withSorts([{kind: 'desc', field: column}])\n              .getPerformanceTransactionEventsViewUrlTarget(organization.slug, {\n                showTransactions:\n                  dataFilter === 'all'\n                    ? EventsDisplayFilterName.p100\n                    : EventsDisplayFilterName.p75,\n                webVital: column as WebVital,\n              })}\n            onClick={this.trackOpenAllEventsClicked}\n          >\n            {t('View All Events')}\n          </Button>\n        </div>\n      </CardSummary>\n    );\n  }\n\n  /**\n   * This callback happens everytime ECharts renders. This is NOT when ECharts\n   * finishes rendering, so it can be called quite frequently. The calculations\n   * here can get expensive if done frequently, furthermore, this can trigger a\n   * state change leading to a re-render. So slow down the updates here as they\n   * do not need to be updated every single time.\n   */\n  handleRendered = throttle(\n    (_, chartRef) => {\n      const {chartData} = this.props;\n      const {refDataRect} = this.state;\n\n      if (refDataRect === null || chartData.length < 1) {\n        return;\n      }\n\n      const refPixelRect =\n        refDataRect === null ? null : asPixelRect(chartRef, refDataRect!);\n      if (refPixelRect !== null && !isEqual(refPixelRect, this.state.refPixelRect)) {\n        this.setState({refPixelRect});\n      }\n    },\n    200,\n    {leading: true}\n  );\n\n  handleDataZoomCancelled = () => {};\n\n  renderHistogram() {\n    const {\n      theme,\n      location,\n      isLoading,\n      chartData,\n      summaryData,\n      error,\n      colors,\n      vital,\n      vitalDetails,\n      precision = 0,\n    } = this.props;\n    const {slug} = vitalDetails;\n\n    const series = this.getSeries();\n\n    const xAxis = {\n      type: 'category' as const,\n      truncate: true,\n      axisTick: {\n        alignWithLabel: true,\n      },\n    };\n\n    const values = series.data.map(point => point.value);\n    const max = values.length ? Math.max(...values) : undefined;\n\n    const yAxis = {\n      type: 'value' as const,\n      max,\n      axisLabel: {\n        color: theme.chartLabel,\n        formatter: formatAbbreviatedNumber,\n      },\n    };\n\n    const allSeries = [series];\n    if (!isLoading && !error) {\n      const baselineSeries = this.getBaselineSeries();\n      if (baselineSeries !== null) {\n        allSeries.push(baselineSeries);\n      }\n    }\n\n    const vitalData =\n      !isLoading && !error && summaryData !== null ? {[vital]: summaryData} : {};\n\n    return (\n      <BarChartZoom\n        minZoomWidth={10 ** -precision * NUM_BUCKETS}\n        location={location}\n        paramStart={`${slug}Start`}\n        paramEnd={`${slug}End`}\n        xAxisIndex={[0]}\n        buckets={computeBuckets(chartData)}\n        onDataZoomCancelled={this.handleDataZoomCancelled}\n      >\n        {zoomRenderProps => (\n          <Container>\n            <TransparentLoadingMask visible={isLoading} />\n            <PercentContainer>\n              <VitalBar\n                isLoading={isLoading}\n                data={vitalData}\n                vital={vital}\n                showBar={false}\n                showStates={false}\n                showVitalPercentNames={false}\n                showVitalThresholds={false}\n                showDurationDetail={false}\n              />\n            </PercentContainer>\n            {getDynamicText({\n              value: (\n                <BarChart\n                  series={allSeries}\n                  xAxis={xAxis}\n                  yAxis={yAxis}\n                  colors={colors}\n                  onRendered={this.handleRendered}\n                  grid={{\n                    left: space(3),\n                    right: space(3),\n                    top: space(3),\n                    bottom: space(1.5),\n                  }}\n                  stacked\n                  {...zoomRenderProps}\n                />\n              ),\n              fixed: <Placeholder testId=\"skeleton-ui\" height=\"200px\" />,\n            })}\n          </Container>\n        )}\n      </BarChartZoom>\n    );\n  }\n\n  bucketWidth() {\n    const {chartData} = this.props;\n    // We can assume that all buckets are of equal width, use the first two\n    // buckets to get the width. The value of each histogram function indicates\n    // the beginning of the bucket.\n    return chartData.length >= 2 ? chartData[1].bin - chartData[0].bin : 0;\n  }\n\n  getSeries() {\n    const {theme, chartData, precision, vitalDetails, vital} = this.props;\n\n    const additionalFieldsFn = bucket => {\n      return {\n        itemStyle: {color: theme[this.getVitalsColor(vital, bucket)]},\n      };\n    };\n\n    const data = formatHistogramData(chartData, {\n      precision: precision === 0 ? undefined : precision,\n      type: vitalDetails.type,\n      additionalFieldsFn,\n    });\n\n    return {\n      seriesName: t('Count'),\n      data,\n    };\n  }\n\n  getVitalsColor(vital: WebVital, value: number) {\n    const poorThreshold = webVitalPoor[vital];\n    const mehThreshold = webVitalMeh[vital];\n\n    if (value >= poorThreshold) {\n      return vitalStateColors[VitalState.POOR];\n    }\n    if (value >= mehThreshold) {\n      return vitalStateColors[VitalState.MEH];\n    }\n    return vitalStateColors[VitalState.GOOD];\n  }\n\n  getBaselineSeries(): BarChartSeries | null {\n    const {theme, chartData} = this.props;\n    const summary = this.summary;\n    if (summary === null || this.state.refPixelRect === null) {\n      return null;\n    }\n\n    const summaryBucket = findNearestBucketIndex(chartData, summary);\n    if (summaryBucket === null || summaryBucket === -1) {\n      return null;\n    }\n\n    const thresholdPixelBottom = mapPoint(\n      {\n        // subtract 0.5 from the x here to ensure that the threshold lies between buckets\n        x: summaryBucket - 0.5,\n        y: 0,\n      },\n      this.state.refDataRect!,\n      this.state.refPixelRect!\n    );\n    if (thresholdPixelBottom === null) {\n      return null;\n    }\n\n    const thresholdPixelTop = mapPoint(\n      {\n        // subtract 0.5 from the x here to ensure that the threshold lies between buckets\n        x: summaryBucket - 0.5,\n        y: Math.max(...chartData.map(data => data.count)) || 1,\n      },\n      this.state.refDataRect!,\n      this.state.refPixelRect!\n    );\n    if (thresholdPixelTop === null) {\n      return null;\n    }\n\n    const markLine = MarkLine({\n      animationDuration: 200,\n      data: [[thresholdPixelBottom, thresholdPixelTop] as any],\n      label: {\n        show: false,\n      },\n      lineStyle: {\n        color: theme.textColor,\n        type: 'solid',\n      },\n      tooltip: {\n        formatter: () => {\n          return [\n            '<div class=\"tooltip-series tooltip-series-solo\">',\n            '<span class=\"tooltip-label\">',\n            `<strong>${t('p75')}</strong>`,\n            '</span>',\n            '</div>',\n            '<div class=\"tooltip-arrow\"></div>',\n          ].join('');\n        },\n      },\n    });\n\n    return {\n      seriesName: t('p75'),\n      data: [],\n      markLine,\n    };\n  }\n\n  render() {\n    return (\n      <Card>\n        {this.renderSummary()}\n        {this.renderHistogram()}\n      </Card>\n    );\n  }\n}\n\nconst SummaryHeading = styled('div')`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Container = styled('div')`\n  position: relative;\n`;\n\nconst PercentContainer = styled('div')`\n  position: absolute;\n  top: ${space(2)};\n  right: ${space(3)};\n  z-index: 2;\n`;\n\nexport default withTheme(VitalCard);\n","import {Component, Fragment} from 'react';\nimport {Location} from 'history';\n\nimport {Panel} from 'sentry/components/panels';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {WebVital} from 'sentry/utils/fields';\nimport HistogramQuery from 'sentry/utils/performance/histogram/histogramQuery';\nimport {DataFilter, HistogramData} from 'sentry/utils/performance/histogram/types';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {VitalGroup} from 'sentry/utils/performance/vitals/types';\nimport {VitalData} from 'sentry/utils/performance/vitals/vitalsCardsDiscoverQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {NUM_BUCKETS, VITAL_GROUPS} from './constants';\nimport VitalCard from './vitalCard';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  results: object;\n  dataFilter?: DataFilter;\n};\n\nclass VitalsPanel extends Component<Props> {\n  renderVitalCard(\n    vital: WebVital,\n    isLoading: boolean,\n    error: boolean,\n    data: VitalData | null,\n    histogram: HistogramData,\n    color: [string],\n    min?: number,\n    max?: number,\n    precision?: number\n  ) {\n    const {location, organization, eventView, dataFilter} = this.props;\n    const vitalDetails = WEB_VITAL_DETAILS[vital];\n\n    const zoomed = min !== undefined || max !== undefined;\n\n    return (\n      <HistogramQuery\n        location={location}\n        orgSlug={organization.slug}\n        eventView={eventView}\n        numBuckets={NUM_BUCKETS}\n        fields={zoomed ? [vital] : []}\n        min={min}\n        max={max}\n        precision={precision}\n        dataFilter={dataFilter}\n      >\n        {results => {\n          const loading = zoomed ? results.isLoading : isLoading;\n          const errored = zoomed ? results.error !== null : error;\n          const chartData = zoomed ? results.histograms?.[vital] ?? histogram : histogram;\n          return (\n            <VitalCard\n              location={location}\n              isLoading={loading}\n              error={errored}\n              vital={vital}\n              vitalDetails={vitalDetails}\n              summaryData={data}\n              chartData={chartData}\n              colors={color}\n              eventView={eventView}\n              organization={organization}\n              min={min}\n              max={max}\n              precision={precision}\n              dataFilter={dataFilter}\n            />\n          );\n        }}\n      </HistogramQuery>\n    );\n  }\n\n  renderVitalGroup(group: VitalGroup, summaryResults) {\n    const {location, organization, eventView, dataFilter} = this.props;\n    const {vitals, colors, min, max, precision} = group;\n\n    const bounds = vitals.reduce(\n      (\n        allBounds: Partial<\n          Record<WebVital, {end: string | undefined; start: string | undefined}>\n        >,\n        vital: WebVital\n      ) => {\n        const slug = WEB_VITAL_DETAILS[vital].slug;\n        allBounds[vital] = {\n          start: decodeScalar(location.query[`${slug}Start`]),\n          end: decodeScalar(location.query[`${slug}End`]),\n        };\n        return allBounds;\n      },\n      {}\n    );\n\n    return (\n      <HistogramQuery\n        location={location}\n        orgSlug={organization.slug}\n        eventView={eventView}\n        numBuckets={NUM_BUCKETS}\n        fields={vitals}\n        min={min}\n        max={max}\n        precision={precision}\n        dataFilter={dataFilter}\n      >\n        {multiHistogramResults => {\n          const isLoading = summaryResults.isLoading || multiHistogramResults.isLoading;\n          const error =\n            summaryResults.error !== null || multiHistogramResults.error !== null;\n          return (\n            <Fragment>\n              {vitals.map((vital, index) => {\n                const data = summaryResults?.vitalsData?.[vital] ?? null;\n                const histogram = multiHistogramResults.histograms?.[vital] ?? [];\n                const {start, end} = bounds[vital] ?? {};\n\n                return (\n                  <Fragment key={vital}>\n                    {this.renderVitalCard(\n                      vital,\n                      isLoading,\n                      error,\n                      data,\n                      histogram,\n                      [colors[index]],\n                      parseBound(start, precision),\n                      parseBound(end, precision),\n                      precision\n                    )}\n                  </Fragment>\n                );\n              })}\n            </Fragment>\n          );\n        }}\n      </HistogramQuery>\n    );\n  }\n\n  render() {\n    const {results} = this.props;\n\n    return (\n      <Panel>\n        <Fragment>\n          {VITAL_GROUPS.map(vitalGroup => (\n            <Fragment key={vitalGroup.vitals.join('')}>\n              {this.renderVitalGroup(vitalGroup, results)}\n            </Fragment>\n          ))}\n        </Fragment>\n      </Panel>\n    );\n  }\n}\n\nfunction parseBound(\n  boundString: string | undefined,\n  precision: number | undefined\n): number | undefined {\n  if (boundString === undefined) {\n    return undefined;\n  }\n  if (precision === undefined || precision === 0) {\n    return parseInt(boundString, 10);\n  }\n  return parseFloat(boundString);\n}\n\nexport default VitalsPanel;\n","var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n"],"names":["pick","canIncludePreviousPeriod","getPeriod","PERFORMANCE_URL_PARAM","doEventsRequest","api","organization","project","environment","team","period","start","end","interval","comparisonDelta","includePrevious","query","yAxis","field","topEvents","orderby","partial","withoutZerofill","referrer","queryBatching","generatePathname","queryExtras","excludeOther","includeAllArgs","pathname","slug","shouldDoublePeriod","urlQuery","Object","fromEntries","entries","undefined","filter","value","periodObj","queryObject","batchRequest","requestPromise","fetchTagFacets","orgSlug","urlParams","values","queryOption","fetchTotalCount","then","res","count","Component","browserHistory","DataZoomInside","ToolBox","callIfFunction","BarChartZoom","chart","props","onChartReady","_props","zooming","zoom","_componentsViews","find","c","_features","dataZoom","_isZoomActive","dispatchAction","type","key","dataZoomSelectActive","evt","model","getModel","startValue","endValue","_payload","batch","buckets","location","paramStart","paramEnd","minZoomWidth","onHistoryPush","target","push","onDataZoomCancelled","onDataZoom","render","children","xAxisIndex","renderProps","handleChartReady","onFinished","handleChartFinished","toolBox","title","back","iconStyle","borderWidth","color","opacity","handleDataZoom","DEFAULT","zoomOnMouseWheel","zoomLock","throttle","Array","isArray","getFeatures","features","yAxisIndex","options","right","top","itemSize","z","feature","PureComponent","isEqual","omitBy","addErrorMessage","LoadingPanel","getPreviousSeriesName","isMultiSeriesStats","t","defined","stripEquationPrefix","propNamesToIgnore","omitIgnoredProps","_value","includes","EventsRequest","reloading","loading","errored","timeseriesData","fetchedWithPrevious","confirmedQuery","onError","expired","name","hideError","setState","state","errorMessage","append","clear","resp","responseJSON","detail","unmounting","dataLoadedCallback","data","hasPreviousPeriod","dataMiddleIndex","Math","floor","length","current","slice","previous","componentDidMount","fetchData","componentDidUpdate","prevProps","componentWillUnmount","calculateTotalsPerTimestamp","getName","timestamp","map","i","countArray","reduce","acc","transformPreviousPeriodData","seriesName","_timestamp","_countArray","stack","transformAggregatedTimeseries","transformTimeseriesData","countsForTimestamp","transformComparisonTimeseriesData","comparisonCount","processData","response","seriesIndex","isMetricsData","totals","includeTransformedData","includeTimeAggregation","timeAggregationSeriesName","currentSeriesNames","previousSeriesNames","getData","transformedData","transformedComparisonData","previousData","timeAggregatedData","timeframe","processedData","comparisonData","allData","originalData","originalPreviousData","showLoading","seriesAdditionalInfo","sortedTimeseriesData","keys","index","seriesData","order","sort","a","b","results","item","previousTimeseriesData","some","transformedTimeseriesData","transformedComparisonTimeseriesData","allTimeseriesData","originalTimeseriesData","timeseriesTotals","originalPreviousTimeseriesData","comparisonTimeseriesData","limit","LoadingMask","height","_height","p","defaultProps","TransparentLoadingMask","className","visible","other","theme","backgroundSecondary","borderRadius","withApi","GenericDiscoverQuery","shouldRefetchData","nextProps","transactionName","transactionThreshold","transactionThresholdMetric","DiscoverQuery","endpoint","useEvents","afterFetch","_","fields","otherMeta","meta","moment","DEFAULT_STATS_PERIOD","getUtcDateString","statsPeriod","periodNumber","periodLength","match","parseInt","Error","formattedStart","formattedEnd","diff","previousPeriodStart","subtract","FILTER_OPTIONS","label","Fragment","omit","getHistogramRequestPayload","numBuckets","min","max","precision","dataFilter","eventView","baseApiPayload","additionalApiPayload","getEventsAPIPayload","apiPayload","assign","HistogramQuery","didReceiveMultiAxis","didFetch","counts","forEach","prev","curr","isLoading","error","pageLinks","histograms","tableData","rest","decodeScalar","Histogram","zoomKeys","removeHistogramQueryStrings","isZoomed","getActiveFilter","childrenProps","handleResetView","activeFilter","handleFilterChange","filterOptions","cursor","WebVital","WEB_VITAL_DETAILS","NUM_BUCKETS","PERCENTILE","_VITAL_GROUPS","vitals","FP","FCP","LCP","FID","CLS","_COLORS","charts","getColorPalette","reverse","VITAL_GROUPS","group","colors","splice","ZOOM_KEYS","vital","vitalSlug","Alert","Button","DatePageFilter","EnvironmentPageFilter","SearchBar","CompactSelect","Layout","ExternalLink","PageFilterBar","normalizeDateTimeParams","tct","space","trackAnalyticsEvent","VitalsCardsDiscoverQuery","isMissingVitalsData","VitalsPanel","VitalsContent","handleSearch","newQuery","queryParams","allVitals","concat","shouldDisplayMissingVitalsAlert","vitalsData","link","opt","eventKey","eventName","organization_id","id","prefix","FilterActions","breakpoints","small","xlarge","StyledSearchBar","EventView","isAggregateField","MutableSearch","withOrganization","withProjects","PageLayout","Tab","TransactionVitals","projects","WebVitals","getDocumentTitle","generateEventView","hasTransactionName","String","trim","join","conditions","setFilterValues","filters","removeFilter","fromNewQueryWithLocation","version","poorThreshold","formatString","SectionHeading","PanelItem","Card","CardSection","CardSummary","border","CardSectionHeading","Description","fontSizeMedium","subText","StatNumber","withTheme","BarChart","MarkLine","Placeholder","getAggregateAlias","formatAbbreviatedNumber","formatFloat","getDuration","getDynamicText","computeBuckets","formatHistogramData","EventsDisplayFilterName","VitalBar","VitalState","vitalStateColors","webVitalMeh","webVitalPoor","asPixelRect","findNearestBucketIndex","getRefRect","mapPoint","VitalCard","refDataRect","refPixelRect","vitalDetails","chartRef","chartData","leading","getDerivedStateFromProps","prevState","summary","summaryData","p75","failureRate","numerator","poor","denominator","total","getFormattedStatNumber","renderSummary","description","column","newEventView","withColumns","kind","function","toString","withSorts","addFilterValues","toUpperCase","fixed","getPerformanceTransactionEventsViewUrlTarget","showTransactions","p100","webVital","trackOpenAllEventsClicked","renderHistogram","series","getSeries","xAxis","truncate","axisTick","alignWithLabel","point","axisLabel","chartLabel","formatter","allSeries","baselineSeries","getBaselineSeries","vitalData","handleDataZoomCancelled","zoomRenderProps","handleRendered","left","bottom","bucketWidth","bin","additionalFieldsFn","bucket","itemStyle","getVitalsColor","mehThreshold","POOR","MEH","GOOD","summaryBucket","thresholdPixelBottom","x","y","thresholdPixelTop","markLine","animationDuration","show","lineStyle","textColor","tooltip","SummaryHeading","Container","PercentContainer","Panel","renderVitalCard","histogram","zoomed","renderVitalGroup","summaryResults","bounds","allBounds","multiHistogramResults","parseBound","vitalGroup","boundString","parseFloat"],"sourceRoot":""}