{"version":3,"file":"chunks/app_views_settings_organizationAuth_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx","webpack:///./app/views/settings/organizationAuth/index.tsx","webpack:///./app/views/settings/organizationAuth/organizationAuthList.tsx","webpack:///./app/views/settings/organizationAuth/providerItem.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {ReactNode} from 'react';\n\nimport Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'> & {\n    message?: ReactNode;\n  };\n\nconst PermissionAlert = ({\n  access = ['org:write'],\n  message = t(\n    'These settings can only be edited by users with the organization owner or manager role.'\n  ),\n  ...props\n}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" showIcon {...props}>\n          {message}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\nimport {AuthProvider, Organization} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport OrganizationAuthList from './organizationAuthList';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{orgId: string}, {}> & {\n    organization: Organization;\n  };\n\ntype State = AsyncView['state'] & {\n  provider: AuthProvider | null;\n  providerList: AuthProvider[] | null;\n};\n\nclass OrganizationAuth extends AsyncView<Props, State> {\n  UNSAFE_componentWillUpdate(_nextProps: Props, nextState: State) {\n    const access = this.props.organization.access;\n\n    if (nextState.provider && access.includes('org:write')) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      const path = `/organizations/${this.props.params.orgId}/auth/configure/`;\n\n      // Don't break the back button by first replacing the current history\n      // state so pressing back skips this react view.\n      this.props.router.replace(path);\n      window.location.assign(path);\n    }\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      ['providerList', `/organizations/${this.props.params.orgId}/auth-providers/`],\n      ['provider', `/organizations/${this.props.params.orgId}/auth-provider/`],\n    ];\n  }\n\n  getTitle() {\n    return routeTitleGen(t('Auth Settings'), this.props.organization.slug, false);\n  }\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleSendReminders = (_provider: AuthProvider) => {\n    this.setState({sendRemindersBusy: true});\n\n    this.api.request(\n      `/organizations/${this.props.params.orgId}/auth-provider/send-reminders/`,\n      {\n        method: 'POST',\n        data: {},\n        success: () => addSuccessMessage(t('Sent reminders to members')),\n        error: () => addErrorMessage(t('Failed to send reminders')),\n        complete: () => this.setState({sendRemindersBusy: false}),\n      }\n    );\n  };\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleConfigure = (provider: AuthProvider) => {\n    this.setState({busy: true});\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'POST',\n      data: {provider, init: true},\n      success: data => {\n        // Redirect to auth provider URL\n        if (data && data.auth_url) {\n          window.location.href = data.auth_url;\n        }\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  /**\n   * TODO(epurkhiser): This does not work right now as we still fallback to the\n   * old SSO auth configuration page\n   */\n  handleDisableProvider = (provider: AuthProvider) => {\n    this.setState({busy: true});\n\n    this.api.request(`/organizations/${this.props.params.orgId}/auth-provider/`, {\n      method: 'DELETE',\n      data: {provider},\n      success: () => {\n        this.setState({provider: null, busy: false});\n      },\n      error: () => {\n        this.setState({busy: false});\n      },\n    });\n  };\n\n  renderBody() {\n    const {providerList, provider} = this.state;\n\n    if (providerList === null) {\n      return null;\n    }\n\n    if (this.props.organization.access.includes('org:write') && provider) {\n      // If SSO provider is configured, keep showing loading while we redirect\n      // to django configuration view\n      return this.renderLoading();\n    }\n\n    const activeProvider = providerList?.find(p => p.key === provider?.key);\n\n    return (\n      <OrganizationAuthList activeProvider={activeProvider} providerList={providerList} />\n    );\n  }\n}\n\nexport default withOrganization(OrganizationAuth);\n","import ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {AuthProvider, Organization} from 'sentry/types';\nimport {descopeFeatureName} from 'sentry/utils';\nimport getCsrfToken from 'sentry/utils/getCsrfToken';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/organization/permissionAlert';\n\nimport ProviderItem from './providerItem';\n\nconst PROVIDER_POPULARITY: Record<string, number> = {\n  google: 0,\n  github: 1,\n  okta: 2,\n  'active-directory': 3,\n  saml2: 4,\n  onelogin: 5,\n  rippling: 6,\n  auth0: 7,\n  jumpcloud: 8,\n};\n\ntype Props = {\n  organization: Organization;\n  providerList: AuthProvider[];\n  activeProvider?: AuthProvider;\n};\n\nconst OrganizationAuthList = ({organization, providerList, activeProvider}: Props) => {\n  const features = organization.features;\n\n  // Sort provider list twice: first, by popularity,\n  // and then a second time, to sort unavailable providers for the current plan to the end of the list.\n  const sortedByPopularity = (providerList ?? []).sort((a, b) => {\n    if (!(a.key in PROVIDER_POPULARITY)) {\n      return -1;\n    }\n    if (!(b.key in PROVIDER_POPULARITY)) {\n      return 1;\n    }\n    if (PROVIDER_POPULARITY[a.key] === PROVIDER_POPULARITY[b.key]) {\n      return 0;\n    }\n    return PROVIDER_POPULARITY[a.key] > PROVIDER_POPULARITY[b.key] ? 1 : -1;\n  });\n\n  const list = sortedByPopularity.sort((a, b) => {\n    const aEnabled = features.includes(descopeFeatureName(a.requiredFeature));\n    const bEnabled = features.includes(descopeFeatureName(b.requiredFeature));\n    if (aEnabled === bEnabled) {\n      return 0;\n    }\n    return aEnabled ? -1 : 1;\n  });\n\n  const warn2FADisable =\n    organization.require2FA &&\n    list.some(({requiredFeature}) =>\n      features.includes(descopeFeatureName(requiredFeature))\n    );\n\n  return (\n    <div className=\"sso\">\n      <SettingsPageHeader title=\"Authentication\" />\n      <PermissionAlert />\n      <Panel>\n        <PanelHeader>{t('Choose a provider')}</PanelHeader>\n        <PanelBody>\n          {!activeProvider && (\n            <PanelAlert type=\"info\">\n              {tct(\n                'Get started with Single Sign-on for your organization by selecting a provider. Read more in our [link:SSO documentation].',\n                {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/accounts/sso/\" />\n                  ),\n                }\n              )}\n            </PanelAlert>\n          )}\n\n          {warn2FADisable && (\n            <PanelAlert type=\"warning\">\n              {t('Require 2FA will be disabled if you enable SSO.')}\n            </PanelAlert>\n          )}\n\n          <form\n            action={`/organizations/${organization.slug}/auth/configure/`}\n            method=\"POST\"\n          >\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={getCsrfToken()} />\n            <input type=\"hidden\" name=\"init\" value=\"1\" />\n\n            {list.map(provider => (\n              <ProviderItem\n                key={provider.key}\n                provider={provider}\n                active={!!activeProvider && provider.key === activeProvider.key}\n              />\n            ))}\n            {list.length === 0 && (\n              <EmptyMessage>\n                {t('No authentication providers are available.')}\n              </EmptyMessage>\n            )}\n          </form>\n        </PanelBody>\n      </Panel>\n    </div>\n  );\n};\n\nexport default withOrganization(OrganizationAuthList);\n","import styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport Button from 'sentry/components/button';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {PanelItem} from 'sentry/components/panels';\nimport Tag from 'sentry/components/tag';\nimport {IconLock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AuthProvider} from 'sentry/types';\nimport {FeatureDisabledHooks} from 'sentry/types/hooks';\nimport {descopeFeatureName} from 'sentry/utils';\n\ntype RenderInstallButtonProps = {\n  hasFeature: boolean;\n  /**\n   * We pass the provider so that it may be passed into any hook provided\n   * callbacks.\n   */\n  provider: AuthProvider;\n};\n\ntype LockedFeatureProps = {\n  features: string[];\n  provider: AuthProvider;\n  className?: string;\n};\n\ntype FeatureRenderProps = {\n  features: string[];\n  hasFeature: boolean;\n  renderDisabled: (p: LockedFeatureProps) => React.ReactNode;\n  renderInstallButton: (p: RenderInstallButtonProps) => React.ReactNode;\n  children?: (p: FeatureRenderProps) => React.ReactNode;\n};\n\ntype Props = {\n  active: boolean;\n  provider: AuthProvider;\n  onConfigure?: (providerKey: string, e: React.MouseEvent) => void;\n};\n\nconst ProviderItem = ({provider, active, onConfigure}: Props) => {\n  const handleConfigure = (e: React.MouseEvent) => {\n    onConfigure?.(provider.key, e);\n  };\n\n  const renderDisabledLock = (p: LockedFeatureProps) => (\n    <LockedFeature provider={p.provider} features={p.features} />\n  );\n\n  const defaultRenderInstallButton = ({hasFeature}: RenderInstallButtonProps) => (\n    <Access access={['org:write']}>\n      {({hasAccess}) => (\n        <Button\n          type=\"submit\"\n          name=\"provider\"\n          size=\"sm\"\n          value={provider.key}\n          disabled={!hasFeature || !hasAccess}\n          onClick={handleConfigure}\n        >\n          {t('Configure')}\n        </Button>\n      )}\n    </Access>\n  );\n\n  // TODO(epurkhiser): We should probably use a more explicit hook name,\n  // instead of just the feature names (sso-basic, sso-saml2, etc).\n  const featureKey = provider.requiredFeature;\n  const hookName = featureKey\n    ? (`feature-disabled:${descopeFeatureName(featureKey)}` as keyof FeatureDisabledHooks)\n    : null;\n\n  const featureProps = hookName ? {hookName} : {};\n\n  const getProviderDescription = providerName => {\n    if (providerName === 'SAML2') {\n      return t(\n        'your preferred SAML2 compliant provider like Ping Identity, Google SAML, Keycloak, or VMware Identity Manager'\n      );\n    }\n\n    if (providerName === 'Google') {\n      return t('Google (OAuth)');\n    }\n\n    return providerName;\n  };\n\n  return (\n    <Feature\n      {...featureProps}\n      features={[featureKey].filter(f => f)}\n      renderDisabled={({children, ...props}) =>\n        typeof children === 'function' &&\n        // TODO(ts): the Feature component isn't correctly templatized to allow\n        // for custom props in the renderDisabled function\n        children({...props, renderDisabled: renderDisabledLock as any})\n      }\n    >\n      {({\n        hasFeature,\n        features,\n        renderDisabled,\n        renderInstallButton,\n      }: FeatureRenderProps) => (\n        <PanelItem center>\n          <ProviderInfo>\n            <ProviderLogo\n              className={`provider-logo ${provider.name\n                .replace(/\\s/g, '-')\n                .toLowerCase()}`}\n            />\n            <div>\n              <ProviderName>{provider.name}</ProviderName>\n              <ProviderDescription>\n                {t(\n                  'Enable your organization to sign in with %s.',\n                  getProviderDescription(provider.name)\n                )}\n              </ProviderDescription>\n            </div>\n          </ProviderInfo>\n\n          <FeatureBadge>\n            {!hasFeature && renderDisabled({provider, features})}\n          </FeatureBadge>\n\n          <div>\n            {active ? (\n              <ActiveIndicator />\n            ) : (\n              (renderInstallButton ?? defaultRenderInstallButton)({provider, hasFeature})\n            )}\n          </div>\n        </PanelItem>\n      )}\n    </Feature>\n  );\n};\n\nexport default ProviderItem;\n\nconst ProviderInfo = styled('div')`\n  flex: 1;\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(2)};\n`;\n\nconst ProviderLogo = styled('div')`\n  height: 36px;\n  width: 36px;\n  border-radius: 3px;\n  margin-right: 0;\n  top: auto;\n`;\n\nconst ProviderName = styled('div')`\n  font-weight: bold;\n`;\n\nconst ProviderDescription = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.subText};\n`;\n\nconst FeatureBadge = styled('div')`\n  flex: 1;\n`;\n\nconst ActiveIndicator = styled('div')`\n  background: ${p => p.theme.green300};\n  color: ${p => p.theme.white};\n  padding: ${space(1)} ${space(1.5)};\n  border-radius: 2px;\n  font-size: 0.8em;\n`;\n\nActiveIndicator.defaultProps = {\n  children: t('Active'),\n};\n\nconst DisabledHovercard = styled(Hovercard)`\n  width: 350px;\n`;\n\nconst LockedFeature = ({provider, features, className}: LockedFeatureProps) => (\n  <DisabledHovercard\n    containerClassName={className}\n    body={\n      <FeatureDisabled\n        features={features}\n        hideHelpToggle\n        message={t('%s SSO is disabled.', provider.name)}\n        featureName={t('SSO Auth')}\n      />\n    }\n  >\n    <Tag icon={<IconLock isSolid />}>{t('disabled')}</Tag>\n  </DisabledHovercard>\n);\n"],"names":["routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Access","Alert","t","PermissionAlert","access","message","props","hasAccess","addErrorMessage","addSuccessMessage","withOrganization","OrganizationAuthList","OrganizationAuth","_provider","setState","sendRemindersBusy","api","request","params","orgId","method","data","success","error","complete","provider","busy","init","auth_url","window","location","href","UNSAFE_componentWillUpdate","_nextProps","nextState","organization","includes","path","router","replace","assign","getEndpoints","slug","renderBody","providerList","state","renderLoading","activeProvider","find","p","key","ExternalLink","Panel","PanelAlert","PanelBody","PanelHeader","tct","descopeFeatureName","getCsrfToken","EmptyMessage","SettingsPageHeader","ProviderItem","PROVIDER_POPULARITY","google","github","okta","saml2","onelogin","rippling","auth0","jumpcloud","features","sortedByPopularity","sort","a","b","list","aEnabled","requiredFeature","bEnabled","warn2FADisable","require2FA","some","link","map","length","Feature","FeatureDisabled","Button","Hovercard","PanelItem","Tag","IconLock","space","active","onConfigure","handleConfigure","e","renderDisabledLock","defaultRenderInstallButton","hasFeature","featureKey","hookName","featureProps","getProviderDescription","providerName","filter","f","children","renderDisabled","renderInstallButton","name","toLowerCase","ProviderInfo","ProviderLogo","ProviderName","ProviderDescription","theme","fontSizeSmall","subText","FeatureBadge","ActiveIndicator","green300","white","defaultProps","DisabledHovercard","LockedFeature","className"],"sourceRoot":""}