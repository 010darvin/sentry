{"version":3,"file":"chunks/app_components_versionHoverCard_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAOO,SAASG,eAAT,CAAyBC,GAAzB,EAAsCC,MAAtC,EAAyD;EAC9D,MAAM;IAACC;EAAD,IAAYD,MAAlB;EACA,MAAME,IAAI,GAAI,kBAAiBD,OAAQ,SAAvC,CAF8D,CAI9D;EACA;EACA;EACA;;EACAJ,+FAAA,GAA4C,IAA5C;EACAD,yFAAA,CAAmCK,OAAnC;EAEA,OAAOF,GAAG,CACPO,cADI,CACWJ,IADX,EACiB;IACpBK,MAAM,EAAE;EADY,CADjB,EAIJC,IAJI,CAIEC,GAAD,IAAuB;IAC3Bb,gGAAA,CAA0Ca,GAA1C;EACD,CANI,EAOJE,KAPI,CAOEC,GAAG,IAAI;IACZhB,8FAAA,CAAwCgB,GAAxC;IACAjB,oDAAA,CAAiBoB,KAAK,IAAI;MACxBA,KAAK,CAACC,QAAN,CAAe,SAAf;MACAD,KAAK,CAACE,cAAN,CAAqB,CAAC,gCAAD,CAArB;MACAtB,2DAAA,CAAwBiB,GAAxB;IACD,CAJD;EAKD,CAdI,CAAP;AAeD;;;;;;;;;;;;;;;;ACrCD;AAEA,MAAMhB,iBAAiB,GAAGuB,qDAAa,CAAC,CACtC,mBADsC,EAEtC,kBAFsC,EAGtC,uBAHsC,EAItC,yBAJsC,CAAD,CAAvC;AAOA,iEAAevB,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAGA;AACA;;;AAGA,MAAM4B,YAAY,GAAG;EACnBC,UAAU,EAAE,EADO;EAEnBC,iBAAiB,EAAE,CAFA;EAGnBC,WAAW,EAAE,OAHM;EAInBC,cAAc,EAAE;AAJG,CAArB;AAiBe,MAAMC,UAAN,SAAyBT,4CAAzB,CAA0C;EAGvDU,MAAM,GAAG;IACP,MAAM;MACJC,SADI;MAEJC,KAFI;MAGJP,UAHI;MAIJC,iBAJI;MAKJO,aALI;MAMJN,WANI;MAOJC;IAPI,IAQF,KAAKM,KART;IAUA,MAAMC,YAAY,GAAGH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeV,iBAAf,CAArB;IACA,MAAMW,iBAAiB,GAAGL,KAAK,CAACM,MAAN,GAAeH,YAAY,CAACG,MAAtD;;IAEA,IAAI,CAACV,cAAc,CAACW,QAApB,EAA8B;MAC5BX,cAAc,CAACW,QAAf,GAA0B,KAA1B;IACD;;IAED,OACE,iEAAC,iBAAD;MAAmB,SAAS,EAAER,SAA9B;MAAA,WACG,CAAC,CAACM,iBAAF,IACC,gEAAC,iEAAD;QAAS,KAAK,EAAG,GAAEA,iBAAkB,UAASV,WAAY,EAA1D;QAAA,UACE,iEAAC,cAAD;UAAgB,IAAI,EAAEF,UAAtB;UAAkC,gBAAa,2BAA/C;UAAA,WACGY,iBAAiB,GAAG,EAApB,IAA0B,gEAAC,IAAD;YAAA;UAAA,EAD7B,EAEGA,iBAFH;QAAA;MADF,EAFJ,EASGF,YAAY,CAACK,GAAb,CAAiBC,IAAI,IACpB,gEAAC,YAAD;QAEE,IAAI,EAAEA,IAFR;QAGE,IAAI,EAAEhB,UAHR;QAIE,aAAa,EAAEQ,aAJjB;QAKE,cAAc,EAAEL,cALlB;QAME,UAAU;MANZ,GACQ,GAAEa,IAAI,CAACC,EAAG,IAAGD,IAAI,CAACE,KAAM,EADhC,CADD,CATH;IAAA,EADF;EAsBD;;AA3CsD;AAApCd;;kFAAAA,4BACGL;;AA6CxB;AACO,MAAMoB,iBAAiB,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAvB;;AAKP,MAAMC,MAAM,GAAGC,CAAC,iBAAIzB,mDAAJ,wCAEMyB,CAAC,CAACC,KAAF,CAAQC,UAFd,4FAAhB;;AAWA,MAAMC,YAAY,GAAG,8EAAO3B,2EAAP;EAAA;AAAA,MAAH,qBAEduB,MAFc,yBAAlB;;AAKA,MAAMK,cAAc,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,iIAOEJ,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQI,OAPf,aAQTL,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQK,OARJ,iBASLN,CAAC,IAAIO,IAAI,CAACC,KAAL,CAAWR,CAAC,CAACS,IAAF,GAAS,GAApB,CATA,eAUTT,CAAC,IAAIA,CAAC,CAACS,IAVE,gBAWRT,CAAC,IAAIA,CAAC,CAACS,IAXC,SAYhBV,MAZgB,yBAApB;;AAeA,MAAMW,IAAI,GAAG,8EAAO,MAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAV;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;;;AAQA,MAAMI,WAAuB,GAAG;EAC9BlB,EAAE,EAAE,EAD0B;EAE9BmB,IAAI,EAAE,EAFwB;EAG9BC,QAAQ,EAAE,IAHoB;EAI9BnB,KAAK,EAAE,EAJuB;EAK9BoB,SAAS,EAAE,EALmB;EAM9BC,MAAM,EAAE;IACNC,UAAU,EAAE,EADN;IAENC,UAAU,EAAE;EAFN,CANsB;EAU9BC,UAAU,EAAE;AAVkB,CAAhC;;AAaA,SAASC,UAAT,OAAgD;EAAA,IAA5B;IAACC,MAAD;IAAStC;EAAT,CAA4B;;EAC9C,SAASuC,aAAT,CAAuBC,OAAvB,EAAmD;IACjD,IAAI,CAACA,OAAL,EAAc;MACZ,OAAOb,gDAAC,CAAC,qBAAD,CAAR;IACD;;IAED,MAAMc,SAAS,GAAGD,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoB,CAApB,CAAlB;;IACA,IAAID,SAAS,CAAClC,MAAV,GAAmB,GAAvB,EAA4B;MAC1B,IAAIoC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoB,EAApB,CAAhB;MACA,MAAMC,KAAK,GAAGF,SAAS,CAACD,KAAV,CAAgB,GAAhB,CAAd,CAF0B,CAG1B;;MACA,IAAIG,KAAK,CAACtC,MAAN,GAAe,CAAnB,EAAsB;QACpBsC,KAAK,CAACC,GAAN;QACAH,SAAS,GAAGE,KAAK,CAACE,IAAN,CAAW,GAAX,CAAZ;MACD;;MACD,OAAQ,GAAEJ,SAAU,QAApB;IACD;;IACD,OAAOF,SAAP;EACD;;EAED,MAAMO,YAAY,GAAGV,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEW,MAA7B;EACA,OACE;IAAK,SAAS,EAAEjD,SAAhB;IAAA,WACE;MAAA;IAAA,EADF,EAEE,iEAAC,SAAD;MAAA,WACE,gEAAC,2EAAD;QAAY,IAAI,EAAEgD,YAAY,IAAInB;MAAlC,EADF,EAEE;QAAA,WACE,gEAAC,OAAD;UAAA,UAAUU,aAAa,CAACD,MAAM,CAACE,OAAR;QAAvB,EADF,EAEE,iEAAC,IAAD;UAAA,WACE;YAAA,UAAS,CAAAQ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAElB,IAAd,KAAsBH,gDAAC,CAAC,gBAAD;UAAhC,EADF,UAGE,gEAAC,mEAAD;YAAW,IAAI,EAAEW,MAAM,CAACY;UAAxB,EAHF;QAAA,EAFF;MAAA,EAFF;IAAA,EAFF;EAAA,EADF;AAgBD;;AArCQb;AAuCT,iEAAeA,UAAf;;AAEA,MAAMc,SAAS,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,uEAGNvB,+DAAK,CAAC,CAAD,CAHC,kBAICA,+DAAK,CAAC,CAAD,CAJN,yBAAf;;AAOA,MAAMwB,OAAO,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,CACTrC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQqC,gBADJ,qBAEMzB,+DAAK,CAAC,GAAD,CAFX,yBAAb;;AAKA,MAAM0B,IAAI,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,eACKvC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQuC,aADlB,aAECxC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQwC,OAFd,yBAAV;;;;;;;;;;;;;;;;;AC7EA,MAAMC,SAAS,GAAG,8EAAO,MAAP;EAAA;AAAA,MAAH,2BAGJ1C,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQ0C,KAHT,iEASX3C,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQqC,gBATF,gFAcCtC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQI,OAdd,4CAiBAL,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQuC,aAjBb,yBAAf;;AAoBA,iEAAeE,SAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AAuBA,MAAMc,gBAAN,SAA+BlF,4CAA/B,CAAuD;EAAA;IAAA;;IAAA,iGACtC;MACbmF,OAAO,EAAE;IADI,CADsC;EAAA;;EAKrDC,eAAe,GAAG;IAChB,KAAKC,QAAL,CAAc;MACZF,OAAO,EAAE;IADG,CAAd;EAGD;;EAEDG,WAAW,GAAG;IACZ,MAAM;MAACC;IAAD,IAAiB,KAAKzE,KAA5B;IACA,MAAMjC,OAAO,GAAG0G,YAAY,CAACC,IAA7B;IACA,OAAO;MACLC,MAAM,EAAE,IADH;MAELC,IAAI,EACF,kEAAC,WAAD;QAAA,WACE;UAAA,UAAKpD,iDAAC,CAAC,uCAAD;QAAN,EADF,EAEE;UAAA,UACGA,iDAAC,CACA,kGADA;QADJ,EAFF,EAOE,iEAAC,gEAAD;UAAQ,IAAI,EAAG,kBAAiBzD,OAAQ,SAAxC;UAAkD,QAAQ,EAAC,SAA3D;UAAA,UACGyD,iDAAC,CAAC,sBAAD;QADJ,EAPF;MAAA;IAHG,CAAP;EAgBD;;EAEDqD,OAAO,GAAG;IACR,MAAM;MAACC,cAAD;MAAiBC,OAAjB;MAA0BC;IAA1B,IAAqC,KAAKhF,KAAhD;;IACA,IAAI+E,OAAO,KAAKE,SAAZ,IAAyB,CAACjB,sDAAO,CAACgB,OAAD,CAArC,EAAgD;MAC9C,OAAO;QAACL,MAAM,EAAE,IAAT;QAAeC,IAAI,EAAE;MAArB,CAAP;IACD;;IAED,MAAM;MAACM;IAAD,IAAeH,OAArB;IACA,MAAMI,0BAA0B,GAAGH,OAAO,CAACI,MAAR,CAAe,UAAUC,GAAV,EAAeC,MAAf,EAAuB;MACvE,MAAM;QAACC,YAAD;QAAeC;MAAf,IAA8BF,MAApC;;MACA,IAAI,CAACD,GAAG,CAACI,cAAJ,CAAmBD,WAAnB,CAAL,EAAsC;QACpCH,GAAG,CAACG,WAAD,CAAH,GAAmBD,YAAnB;MACD;;MAED,OAAOF,GAAP;IACD,CAPkC,EAOhC,EAPgC,CAAnC;IAQA,IAAIK,qBAAqB,GAAGC,MAAM,CAACC,IAAP,CAAYT,0BAAZ,CAA5B;;IAEA,IAAIQ,MAAM,CAACC,IAAP,CAAYT,0BAAZ,EAAwC/E,MAAxC,GAAiD,CAArD,EAAwD;MACtDsF,qBAAqB,GAAGC,MAAM,CAACC,IAAP,CAAYT,0BAAZ,EAAwCjF,KAAxC,CAA8C,CAA9C,EAAiD,CAAjD,CAAxB;IACD;;IAED,OAAO;MACLyE,MAAM,EACJ,kEAAC,aAAD;QAAA,WACGnD,iDAAC,CAAC,SAAD,CADJ,EAEE,kEAAC,cAAD;UAAA,WACE,iEAAC,aAAD;YAAe,OAAO,EAAEsD,cAAxB;YAAwC,QAAQ,MAAhD;YAAiD,MAAM,EAAE;UAAzD,EADF,EAGE,iEAAC,mEAAD;YAAW,KAAK,EAAEA,cAAlB;YAAA,UACE,iEAAC,oBAAD;cAAA,UACE,iEAAC,mDAAD;gBAAU,IAAI,EAAC;cAAf;YADF;UADF,EAHF;QAAA,EAFF;MAAA,EAFG;MAeLF,IAAI,EACF;QAAA,WACE;UAAK,SAAS,EAAC,KAAf;UAAA,WACE;YAAK,SAAS,EAAC,UAAf;YAAA,WACE;cAAA,UAAKpD,iDAAC,CAAC,YAAD;YAAN,EADF,EAEE,iEAAC,UAAD;cAAA,UAAauD,OAAO,CAACc;YAArB,EAFF;UAAA,EADF,EAKE;YAAK,SAAS,EAAC,UAAf;YAAA,WACE;cAAI,KAAK,EAAE;gBAACC,SAAS,EAAE;cAAZ,CAAX;cAAA,WACGf,OAAO,CAACgB,WADX,EACwB,GADxB,EAEGhB,OAAO,CAACgB,WAAR,KAAwB,CAAxB,GAA4BvE,iDAAC,CAAC,UAAD,CAA7B,GAA4CA,iDAAC,CAAC,SAAD,CAFhD,OAE8DA,iDAAC,CAAC,KAAD,CAF/D,EAEwE,GAFxE,EAGGuD,OAAO,CAACiB,OAAR,CAAgB5F,MAHnB,EAG2B,GAH3B,EAIG2E,OAAO,CAACiB,OAAR,CAAgB5F,MAAhB,KAA2B,CAA3B,GAA+BoB,iDAAC,CAAC,SAAD,CAAhC,GAA8CA,iDAAC,CAAC,QAAD,CAJlD,EAI8D,GAJ9D;YAAA,EADF,EAOE,iEAAC,2EAAD;cACE,KAAK,EAAEuD,OAAO,CAACiB,OADjB;cAEE,UAAU,EAAE,EAFd;cAGE,cAAc,EAAE;gBAACC,SAAS,EAAE;cAAZ,CAHlB;cAIE,WAAW,EAAC;YAJd,EAPF;UAAA,EALF;QAAA,EADF,EAqBGf,UAAU,IAAI,iEAAC,gBAAD;UAAkB,MAAM,EAAEA;QAA1B,EArBjB,EAsBGF,OAAO,CAAC5E,MAAR,GAAiB,CAAjB,IACC;UAAA,WACE,iEAAC,gEAAD;YAAA,UACE;cAAA,UAAKoB,iDAAC,CAAC,SAAD;YAAN;UADF,EADF,EAIGkE,qBAAqB,CAACpF,GAAtB,CAA0B,CAAC4F,GAAD,EAAMC,GAAN,KAAc;YACvC,MAAMZ,YAAY,GAAGJ,0BAA0B,CAACe,GAAD,CAA/C;YACA,OACE,kEAAC,UAAD;cAAA,WACE,iEAAC,gBAAD;gBAAA,UAAmBA;cAAnB,EADF,EAEGX,YAAY,IAAI,iEAAC,eAAD;gBAAiB,IAAI,EAAEA;cAAvB,EAFnB;YAAA,GAAiBY,GAAjB,CADF;UAMD,CARA,CAJH;QAAA,EAvBJ;MAAA;IAhBG,CAAP;EAyDD;;EAEDvG,MAAM,GAAG;IAAA;;IACP,MAAM;MACJwG,cADI;MAEJC,YAFI;MAGJtB,OAHI;MAIJuB,cAJI;MAKJC,YALI;MAMJC,YANI;MAOJtI,mBAPI;MAQJuI;IARI,IASF,KAAKzG,KATT;IAUA,IAAI2E,MAAuB,GAAG,IAA9B;IACA,IAAIC,IAAqB,GAAG,IAA5B;IAEA,MAAM8B,OAAO,GAAG,CAAC,EAAEN,cAAc,IAAIE,cAAlB,IAAoCpI,mBAAtC,CAAjB;IACA,MAAMyI,KAAK,WAAGN,YAAH,aAAGA,YAAH,cAAGA,YAAH,GAAmBE,YAAnB,uCAAmCE,iBAA9C;IACA,MAAMG,QAAQ,GAAGJ,YAAY,IAAIA,YAAY,CAACpG,MAAb,GAAsB,CAAvD;;IAEA,IAAIsG,OAAJ,EAAa;MACX9B,IAAI,GAAG,iEAAC,2EAAD;QAAkB,IAAI;MAAtB,EAAP;IACD,CAFD,MAEO,IAAI+B,KAAJ,EAAW;MAChB/B,IAAI,GAAG,iEAAC,sEAAD,KAAP;IACD,CAFM,MAEA;MACL,MAAMiC,SAA2C,GAC/CD,QAAQ,IAAI7B,OAAZ,GAAsB,KAAKF,OAAL,EAAtB,GAAuC,KAAKL,WAAL,EADzC;MAEAG,MAAM,GAAGkC,SAAS,CAAClC,MAAnB;MACAC,IAAI,GAAGiC,SAAS,CAACjC,IAAjB;IACD;;IAED,OACE,iEAAC,kEAAD,OAAe,KAAK5E,KAApB;MAA2B,MAAM,EAAE2E,MAAnC;MAA2C,IAAI,EAAEC,IAAjD;MAAA,UACG,KAAK5E,KAAL,CAAW8G;IADd,EADF;EAKD;;AAlJoD;;AAAjD1C;AAqJN;AACA,iEAAeH,iEAAO,CAACC,qEAAW,CAACC,0EAAgB,CAACC,gBAAD,CAAjB,CAAZ,CAAtB;;AAEA,MAAM2C,WAAW,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,aACJtF,gEAAK,CAAC,CAAD,CADD,2CAAjB;;AAKA,MAAMuF,gBAAgB,GAAG,8EAAO1D,oEAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAtB;;AAIA,MAAM2D,eAAe,GAAG,8EAAO1F,oEAAP;EAAA;AAAA,MAAH,WACVX,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQK,OADH,iBAENN,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQuC,aAFP,yBAArB;;AAKA,MAAM8D,aAAa,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAnB;;AAMA,MAAMC,cAAc,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAApB;;AAOA,MAAMC,aAAa,GAAG,8EAAOtD,kEAAP;EAAA;AAAA,MAAH,kBACDrC,gEAAK,CAAC,GAAD,CADJ,yCAAnB;;AAKA,MAAM4F,oBAAoB,GAAG,8EAAO,MAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAA1B;;AAMA,MAAMC,UAAU,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,WACL1G,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQ0G,YADR,iBAED3G,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQ2G,cAFZ,yBAAhB;;AAKA,MAAMC,gBAAgB,GAAG,8EAAOvF,oEAAP;EAAA;AAAA,MAAH,gBACNT,gEAAK,CAAC,CAAD,CADC,yBAAtB;;AAIA,MAAMiG,UAAU,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,uEAGPjG,gEAAK,CAAC,CAAD,CAHE,gEAAhB;;;;;;;;;;;;;;;;;;ACnPA;AAEA;AAEA;AAsBA,MAAMqG,WAAsC,GAAG;EAC7CC,WAAW,EAAEH,wEADgC;EAE7C3J,KAAK,EAAE;IACLF,OAAO,EAAEkH,SADJ;IAELuB,YAAY,EAAEvB,SAFT;IAGL/G,mBAAmB,EAAE+G,SAHhB;IAILwB,iBAAiB,EAAExB;EAJd,CAFsC;;EAS7C+C,IAAI,GAAG;IACL,KAAKC,iBAAL;EACD,CAX4C;;EAa7CA,iBAAiB,GAAG;IAClB,KAAKhK,KAAL,GAAa;MACXF,OAAO,EAAEkH,SADE;MAEXuB,YAAY,EAAEvB,SAFH;MAGX/G,mBAAmB,EAAE+G,SAHV;MAIXwB,iBAAiB,EAAExB;IAJR,CAAb;IAMA,KAAKiD,OAAL,CAAa,KAAKjK,KAAlB;EACD,CArB4C;;EAuB7CE,gBAAgB,CAACJ,OAAD,EAAkB;IAChC,KAAKE,KAAL,GAAa;MACXF,OADW;MAEXyI,YAAY,EAAEzI,OAAO,KAAK,KAAKE,KAAL,CAAWF,OAAvB,GAAiC,KAAKE,KAAL,CAAWuI,YAA5C,GAA2DvB,SAF9D;MAGX/G,mBAAmB,EAAE,IAHV;MAIXuI,iBAAiB,EAAExB;IAJR,CAAb;IAMA,KAAKiD,OAAL,CAAa,KAAKjK,KAAlB;EACD,CA/B4C;;EAiC7CU,qBAAqB,CAACD,GAAD,EAAa;IAChC,KAAKT,KAAL,GAAa,EACX,GAAG,KAAKA,KADG;MAEXuI,YAAY,EAAEvB,SAFH;MAGX/G,mBAAmB,EAAE,KAHV;MAIXuI,iBAAiB,EAAE/H;IAJR,CAAb;IAMA,KAAKwJ,OAAL,CAAa,KAAKjK,KAAlB;EACD,CAzC4C;;EA2C7CO,uBAAuB,CAAC2J,IAAD,EAAqB;IAC1C,KAAKlK,KAAL,GAAa,EACX,GAAG,KAAKA,KADG;MAEXuI,YAAY,EAAE2B,IAFH;MAGXjK,mBAAmB,EAAE,KAHV;MAIXuI,iBAAiB,EAAExB;IAJR,CAAb;IAMA,KAAKiD,OAAL,CAAa,KAAKjK,KAAlB;EACD,CAnD4C;;EAqD7CmK,GAAG,GAAG;IACJ,OAAO,EAAC,GAAG,KAAKnK;IAAT,CAAP;EACD;;AAvD4C,CAA/C;AA0DA,MAAMN,eAAe,GAAGgK,mDAAW,CAACE,qFAAmB,CAACC,WAAD,CAApB,CAAnC;AACA,iEAAenK,eAAf;;;;;;;;;;;;;;;;;;;;;ACrFA;AAEA;AAEA;AAEA;;;AAkBA,SAASuG,WAAT,CAA+CuE,gBAA/C,EAAyF;EACvF,MAAMC,WAAN,SAA0BxJ,4CAA1B,CAGE;IAGAyJ,WAAW,CAAC3I,KAAD,EAAQ4I,OAAR,EAAiB;MAC1B,MAAM5I,KAAN,EAAa4I,OAAb;;MAD0B,uGAiBdL,yEAAA,CAAoB,MAAM,KAAKO,aAAL,EAA1B,EAAgD7D,SAAhD,CAjBc;;MAG1B,MAAM;QAAC8D,WAAD;QAAcjE;MAAd,IAAgC,KAAK9E,KAA3C;MACA,MAAMgJ,WAAW,GAAGT,sEAAA,CAAiBQ,WAAjB,EAA8BjE,cAA9B,CAApB;MACA,KAAK7G,KAAL,GAAa,EAAC,GAAG+K;MAAJ,CAAb;IACD;;IAEDC,iBAAiB,GAAG;MAClB,KAAKC,YAAL;MACA,KAAKC,YAAL;IACD;;IAEDC,oBAAoB,GAAG;MACrB,KAAKC,WAAL;IACD;;IAIDH,YAAY,GAAG;MACb,MAAM;QAACrL,GAAD;QAAM4G,YAAN;QAAoBsE,WAApB;QAAiCjE;MAAjC,IAAmD,KAAK9E,KAA9D;MACA,MAAMgJ,WAAW,GAAGT,sEAAA,CAAiBQ,WAAjB,EAA8BjE,cAA9B,CAApB;MACA,MAAM/G,OAAO,GAAG0G,YAAY,CAACC,IAA7B;;MAEA,IACG,CAACsE,WAAW,CAACjE,OAAb,IAAwB,CAACiE,WAAW,CAAC1C,cAAtC,IACA0C,WAAW,CAACzC,YAFd,EAGE;QACA8B,gFAAiB,CAACxK,GAAD,EAAM;UAACE,OAAD;UAAUgL,WAAV;UAAuBjE;QAAvB,CAAN,CAAjB;MACD;IACF;;IAEDqE,YAAY,GAAG;MACb,MAAM;QAACtL,GAAD;QAAM4G,YAAN;QAAoBsE,WAApB;QAAiCjE;MAAjC,IAAmD,KAAK9E,KAA9D;MACA,MAAMgJ,WAAW,GAAGT,sEAAA,CAAiBQ,WAAjB,EAA8BjE,cAA9B,CAApB;MACA,MAAM/G,OAAO,GAAG0G,YAAY,CAACC,IAA7B;;MAEA,IACG,CAACsE,WAAW,CAAChE,OAAb,IAAwB,CAACgE,WAAW,CAAC5C,cAAtC,IACA4C,WAAW,CAAC3C,YAFd,EAGE;QACAiC,gFAAiB,CAACzK,GAAD,EAAM;UAACE,OAAD;UAAUgL,WAAV;UAAuBjE;QAAvB,CAAN,CAAjB;MACD;IACF;;IAEDgE,aAAa,GAAG;MACd,MAAM;QAACC,WAAD;QAAcjE;MAAd,IAAgC,KAAK9E,KAA3C;MACA,MAAMgJ,WAAW,GAAGT,sEAAA,CAAiBQ,WAAjB,EAA8BjE,cAA9B,CAApB;MAEA,KAAKP,QAAL,CAAc,EAAC,GAAGyE;MAAJ,CAAd;IACD;;IAEDpJ,MAAM,GAAG;MACP,OACE,gEAAC,gBAAD,OACO,KAAKI,KADZ;QAAA,GAEO,KAAK/B;MAFZ,EADF;IAMD;;EA9DD;;EAHIyK,WADiF;;EAAA,kFACjFA,WADiF,iBAK/D,eAAcF,uEAAc,CAACC,gBAAD,CAAmB,GALgB;;EAoEvF,OAAOC,WAAP;AACD;;AAED,iEAAexE,WAAf;;;;;;;;;;;;;;;;;;;;;;AC/FA;AAEA;AACA;AAEA;AAEA;;AAaA,MAAMoF,aAA4B,GAAG;EACnC9C,YAAY,EAAEvB,SADqB;EAEnC/G,mBAAmB,EAAE+G,SAFc;EAGnCwB,iBAAiB,EAAExB;AAHgB,CAArC;;AAMA,SAASd,gBAAT,CACEsE,gBADF,EAEE;EACA,MAAMc,gBAAN,SAA+BrK,4CAA/B,CAA4E;IAG1EyJ,WAAW,CAAC3I,KAAD,EAA4B4I,OAA5B,EAA0C;MACnD,MAAM5I,KAAN,EAAa4I,OAAb;;MADmD,uGAyBvCjL,4EAAA,CAAuB,MAAM,KAAKmL,aAAL,EAA7B,EAAmD7D,SAAnD,CAzBuC;;MAGnD,MAAM;QAACR;MAAD,IAAiB,KAAKzE,KAA5B;MACA,MAAMjC,OAAO,GAAG0G,YAAY,CAACC,IAA7B;MACA,MAAM8E,QAAQ,GAAG7L,yEAAA,EAAjB;;MAEA,IAAI6L,QAAQ,CAACzL,OAAT,KAAqBA,OAAzB,EAAkC;QAChCL,0FAAA;MACD;;MAED,KAAKO,KAAL,GACEuL,QAAQ,CAACzL,OAAT,KAAqBA,OAArB,GACI,EAAC,GAAGuL,aAAJ;QAAmB,GAAGE;MAAtB,CADJ,GAEI,EAAC,GAAGF;MAAJ,CAHN;IAID;;IAEDL,iBAAiB,GAAG;MAClB;MACA;MACA,KAAKQ,iBAAL;IACD;;IACDL,oBAAoB,GAAG;MACrB,KAAKC,WAAL;IACD;;IAGDI,iBAAiB,GAAG;MAClB,MAAM;QAAC5L,GAAD;QAAM4G;MAAN,IAAsB,KAAKzE,KAAjC;MACA,MAAMjC,OAAO,GAAG0G,YAAY,CAACC,IAA7B;MACA,MAAM8E,QAAQ,GAAG7L,yEAAA,EAAjB,CAHkB,CAKlB;MACA;MACA;;MACA,IACG,CAAC6L,QAAQ,CAAChD,YAAV,IAA0B,CAACgD,QAAQ,CAACtL,mBAArC,IACAsL,QAAQ,CAAC/C,iBAFX,EAGE;QACA7I,mFAAe,CAACC,GAAD,EAAM;UAACE;QAAD,CAAN,CAAf;MACD;IACF;;IAED+K,aAAa,GAAG;MACd,MAAMU,QAAQ,GAAG7L,yEAAA,EAAjB;MACA,KAAK4G,QAAL,CAAc,EAAC,GAAGiF;MAAJ,CAAd;IACD;;IAED5J,MAAM,GAAG;MACP,OAAO,gEAAC,gBAAD,OAAsB,KAAKI,KAA3B;QAAA,GAAsC,KAAK/B;MAA3C,EAAP;IACD;;EArDyE;;EAAtEsL,gBADN;;EAAA,kFACMA,gBADN,iBAEwB,oBAAmBf,uEAAc,CAACC,gBAAD,CAAmB,GAF5E;;EAyDA,OAAOc,gBAAP;AACD;;AAED,iEAAepF,gBAAf","sources":["webpack:///./app/actionCreators/repositories.tsx","webpack:///./app/actions/repositoryActions.tsx","webpack:///./app/components/avatar/avatarList.tsx","webpack:///./app/components/lastCommit.tsx","webpack:///./app/components/repoLabel.tsx","webpack:///./app/components/versionHoverCard.tsx","webpack:///./app/stores/repositoryStore.tsx","webpack:///./app/utils/withRelease.tsx","webpack:///./app/utils/withRepositories.tsx"],"sourcesContent":["import * as Sentry from '@sentry/react';\n\nimport RepositoryActions from 'sentry/actions/repositoryActions';\nimport {Client} from 'sentry/api';\nimport RepositoryStore from 'sentry/stores/repositoryStore';\nimport {Repository} from 'sentry/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n};\n\nexport function getRepositories(api: Client, params: ParamsGet) {\n  const {orgSlug} = params;\n  const path = `/organizations/${orgSlug}/repos/`;\n\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRepo for the same\n  // repo to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  RepositoryStore.state.repositoriesLoading = true;\n  RepositoryActions.loadRepositories(orgSlug);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Repository[]) => {\n      RepositoryActions.loadRepositoriesSuccess(res);\n    })\n    .catch(err => {\n      RepositoryActions.loadRepositoriesError(err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getRepositories-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n","import {createActions} from 'reflux';\n\nconst RepositoryActions = createActions([\n  'resetRepositories',\n  'loadRepositories',\n  'loadRepositoriesError',\n  'loadRepositoriesSuccess',\n]);\n\nexport default RepositoryActions;\n","import {Component} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport Tooltip from 'sentry/components/tooltip';\nimport {AvatarUser} from 'sentry/types';\n\nconst defaultProps = {\n  avatarSize: 28,\n  maxVisibleAvatars: 5,\n  typeMembers: 'users',\n  tooltipOptions: {},\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\ntype Mutable<T> = {-readonly [P in keyof T]: T[P]};\n\ntype Props = {\n  tooltipOptions: Mutable<UserAvatar['props']['tooltipOptions']>;\n  users: AvatarUser[];\n  className?: string;\n  renderTooltip?: UserAvatar['props']['renderTooltip'];\n} & DefaultProps;\n\nexport default class AvatarList extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      className,\n      users,\n      avatarSize,\n      maxVisibleAvatars,\n      renderTooltip,\n      typeMembers,\n      tooltipOptions,\n    } = this.props;\n\n    const visibleUsers = users.slice(0, maxVisibleAvatars);\n    const numCollapsedUsers = users.length - visibleUsers.length;\n\n    if (!tooltipOptions.position) {\n      tooltipOptions.position = 'top';\n    }\n\n    return (\n      <AvatarListWrapper className={className}>\n        {!!numCollapsedUsers && (\n          <Tooltip title={`${numCollapsedUsers} other ${typeMembers}`}>\n            <CollapsedUsers size={avatarSize} data-test-id=\"avatarList-collapsedusers\">\n              {numCollapsedUsers < 99 && <Plus>+</Plus>}\n              {numCollapsedUsers}\n            </CollapsedUsers>\n          </Tooltip>\n        )}\n        {visibleUsers.map(user => (\n          <StyledAvatar\n            key={`${user.id}-${user.email}`}\n            user={user}\n            size={avatarSize}\n            renderTooltip={renderTooltip}\n            tooltipOptions={tooltipOptions}\n            hasTooltip\n          />\n        ))}\n      </AvatarListWrapper>\n    );\n  }\n}\n\n// used in releases list page to do some alignment\nexport const AvatarListWrapper = styled('div')`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Circle = p => css`\n  border-radius: 50%;\n  border: 2px solid ${p.theme.background};\n  margin-left: -8px;\n  cursor: default;\n\n  &:hover {\n    z-index: 1;\n  }\n`;\n\nconst StyledAvatar = styled(UserAvatar)`\n  overflow: hidden;\n  ${Circle};\n`;\n\nconst CollapsedUsers = styled('div')<{size: number}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  text-align: center;\n  font-weight: 600;\n  background-color: ${p => p.theme.gray200};\n  color: ${p => p.theme.gray300};\n  font-size: ${p => Math.floor(p.size / 2.3)}px;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  ${Circle};\n`;\n\nconst Plus = styled('span')`\n  font-size: 10px;\n  margin-left: 1px;\n  margin-right: -1px;\n`;\n","import styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport TimeSince from 'sentry/components/timeSince';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AvatarUser, Commit} from 'sentry/types';\n\ntype Props = {\n  commit: Commit;\n  className?: string;\n};\n\nconst unknownUser: AvatarUser = {\n  id: '',\n  name: '',\n  username: '??',\n  email: '',\n  avatarUrl: '',\n  avatar: {\n    avatarUuid: '',\n    avatarType: 'letter_avatar',\n  },\n  ip_address: '',\n};\n\nfunction LastCommit({commit, className}: Props) {\n  function renderMessage(message: Commit['message']) {\n    if (!message) {\n      return t('No message provided');\n    }\n\n    const firstLine = message.split(/\\n/)[0];\n    if (firstLine.length > 100) {\n      let truncated = firstLine.substr(0, 90);\n      const words = truncated.split(/ /);\n      // try to not have ellipsis mid-word\n      if (words.length > 1) {\n        words.pop();\n        truncated = words.join(' ');\n      }\n      return `${truncated}\\u2026`;\n    }\n    return firstLine;\n  }\n\n  const commitAuthor = commit?.author;\n  return (\n    <div className={className}>\n      <h6>Last commit</h6>\n      <InnerWrap>\n        <UserAvatar user={commitAuthor || unknownUser} />\n        <div>\n          <Message>{renderMessage(commit.message)}</Message>\n          <Meta>\n            <strong>{commitAuthor?.name || t('Unknown Author')}</strong>\n            &nbsp;\n            <TimeSince date={commit.dateCreated} />\n          </Meta>\n        </div>\n      </InnerWrap>\n    </div>\n  );\n}\n\nexport default LastCommit;\n\nconst InnerWrap = styled('div')`\n  display: grid;\n  grid-template-columns: max-content minmax(0, 1fr);\n  gap: ${space(1)};\n  margin-top: ${space(1)};\n`;\n\nconst Message = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n  margin-bottom: ${space(0.5)};\n`;\n\nconst Meta = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.subText};\n`;\n","import styled from '@emotion/styled';\n\nconst RepoLabel = styled('span')`\n  /* label mixin from bootstrap */\n  font-weight: 700;\n  color: ${p => p.theme.white};\n  text-align: center;\n  white-space: nowrap;\n  border-radius: 0.25em;\n  /* end of label mixin from bootstrap */\n\n  ${p => p.theme.overflowEllipsis};\n\n  display: inline-block;\n  vertical-align: text-bottom;\n  line-height: 1;\n  background: ${p => p.theme.gray200};\n  padding: 3px;\n  max-width: 86px;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nexport default RepoLabel;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport AvatarList from 'sentry/components/avatar/avatarList';\nimport Button from 'sentry/components/button';\nimport Clipboard from 'sentry/components/clipboard';\nimport {Divider, Hovercard} from 'sentry/components/hovercard';\nimport LastCommit from 'sentry/components/lastCommit';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport RepoLabel from 'sentry/components/repoLabel';\nimport TimeSince from 'sentry/components/timeSince';\nimport Version from 'sentry/components/version';\nimport {IconCopy} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Deploy, Organization, Release, Repository} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport withApi from 'sentry/utils/withApi';\nimport withRelease from 'sentry/utils/withRelease';\nimport withRepositories from 'sentry/utils/withRepositories';\n\ninterface Props extends React.ComponentProps<typeof Hovercard> {\n  api: Client;\n  organization: Organization;\n  projectSlug: string;\n\n  releaseVersion: string;\n  deploys?: Array<Deploy>;\n  deploysError?: Error;\n  deploysLoading?: boolean;\n  release?: Release;\n  releaseError?: Error;\n  releaseLoading?: boolean;\n  repositories?: Array<Repository>;\n  repositoriesError?: Error;\n  repositoriesLoading?: boolean;\n}\n\ntype State = {\n  visible: boolean;\n};\n\nclass VersionHoverCard extends Component<Props, State> {\n  state: State = {\n    visible: false,\n  };\n\n  toggleHovercard() {\n    this.setState({\n      visible: true,\n    });\n  }\n\n  getRepoLink() {\n    const {organization} = this.props;\n    const orgSlug = organization.slug;\n    return {\n      header: null,\n      body: (\n        <ConnectRepo>\n          <h5>{t('Releases are better with commit data!')}</h5>\n          <p>\n            {t(\n              'Connect a repository to see commit info, files changed, and authors involved in future releases.'\n            )}\n          </p>\n          <Button href={`/organizations/${orgSlug}/repos/`} priority=\"primary\">\n            {t('Connect a repository')}\n          </Button>\n        </ConnectRepo>\n      ),\n    };\n  }\n\n  getBody() {\n    const {releaseVersion, release, deploys} = this.props;\n    if (release === undefined || !defined(deploys)) {\n      return {header: null, body: null};\n    }\n\n    const {lastCommit} = release;\n    const recentDeploysByEnvironment = deploys.reduce(function (dbe, deploy) {\n      const {dateFinished, environment} = deploy;\n      if (!dbe.hasOwnProperty(environment)) {\n        dbe[environment] = dateFinished;\n      }\n\n      return dbe;\n    }, {});\n    let mostRecentDeploySlice = Object.keys(recentDeploysByEnvironment);\n\n    if (Object.keys(recentDeploysByEnvironment).length > 3) {\n      mostRecentDeploySlice = Object.keys(recentDeploysByEnvironment).slice(0, 3);\n    }\n\n    return {\n      header: (\n        <HeaderWrapper>\n          {t('Release')}\n          <VersionWrapper>\n            <StyledVersion version={releaseVersion} truncate anchor={false} />\n\n            <Clipboard value={releaseVersion}>\n              <ClipboardIconWrapper>\n                <IconCopy size=\"xs\" />\n              </ClipboardIconWrapper>\n            </Clipboard>\n          </VersionWrapper>\n        </HeaderWrapper>\n      ),\n      body: (\n        <div>\n          <div className=\"row\">\n            <div className=\"col-xs-4\">\n              <h6>{t('New Issues')}</h6>\n              <CountSince>{release.newGroups}</CountSince>\n            </div>\n            <div className=\"col-xs-8\">\n              <h6 style={{textAlign: 'right'}}>\n                {release.commitCount}{' '}\n                {release.commitCount !== 1 ? t('commits ') : t('commit ')} {t('by ')}{' '}\n                {release.authors.length}{' '}\n                {release.authors.length !== 1 ? t('authors') : t('author')}{' '}\n              </h6>\n              <AvatarList\n                users={release.authors}\n                avatarSize={25}\n                tooltipOptions={{container: 'body'} as any}\n                typeMembers=\"authors\"\n              />\n            </div>\n          </div>\n          {lastCommit && <StyledLastCommit commit={lastCommit} />}\n          {deploys.length > 0 && (\n            <div>\n              <Divider>\n                <h6>{t('Deploys')}</h6>\n              </Divider>\n              {mostRecentDeploySlice.map((env, idx) => {\n                const dateFinished = recentDeploysByEnvironment[env];\n                return (\n                  <DeployWrap key={idx}>\n                    <VersionRepoLabel>{env}</VersionRepoLabel>\n                    {dateFinished && <StyledTimeSince date={dateFinished} />}\n                  </DeployWrap>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      ),\n    };\n  }\n\n  render() {\n    const {\n      deploysLoading,\n      deploysError,\n      release,\n      releaseLoading,\n      releaseError,\n      repositories,\n      repositoriesLoading,\n      repositoriesError,\n    } = this.props;\n    let header: React.ReactNode = null;\n    let body: React.ReactNode = null;\n\n    const loading = !!(deploysLoading || releaseLoading || repositoriesLoading);\n    const error = deploysError ?? releaseError ?? repositoriesError;\n    const hasRepos = repositories && repositories.length > 0;\n\n    if (loading) {\n      body = <LoadingIndicator mini />;\n    } else if (error) {\n      body = <LoadingError />;\n    } else {\n      const renderObj: {[key: string]: React.ReactNode} =\n        hasRepos && release ? this.getBody() : this.getRepoLink();\n      header = renderObj.header;\n      body = renderObj.body;\n    }\n\n    return (\n      <Hovercard {...this.props} header={header} body={body}>\n        {this.props.children}\n      </Hovercard>\n    );\n  }\n}\n\nexport {VersionHoverCard};\nexport default withApi(withRelease(withRepositories(VersionHoverCard)));\n\nconst ConnectRepo = styled('div')`\n  padding: ${space(2)};\n  text-align: center;\n`;\n\nconst VersionRepoLabel = styled(RepoLabel)`\n  width: 86px;\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst HeaderWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst VersionWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst StyledVersion = styled(Version)`\n  margin-right: ${space(0.5)};\n  max-width: 190px;\n`;\n\nconst ClipboardIconWrapper = styled('span')`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst CountSince = styled('div')`\n  color: ${p => p.theme.headingColor};\n  font-size: ${p => p.theme.headerFontSize};\n`;\n\nconst StyledLastCommit = styled(LastCommit)`\n  margin-top: ${space(2)};\n`;\n\nconst DeployWrap = styled('div')`\n  display: grid;\n  grid-template-columns: max-content minmax(0, 1fr);\n  gap: ${space(1)};\n  justify-items: start;\n  align-items: center;\n`;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport RepoActions from 'sentry/actions/repositoryActions';\nimport {Repository} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface RepositoryStoreDefinition extends StoreDefinition {\n  get(): {\n    orgSlug?: string;\n    repositories?: Repository[];\n    repositoriesError?: Error;\n    repositoriesLoading?: boolean;\n  };\n\n  loadRepositories(orgSlug: string): void;\n\n  loadRepositoriesError(error: Error): void;\n  loadRepositoriesSuccess(data: Repository[]): void;\n  state: {\n    orgSlug?: string;\n    repositories?: Repository[];\n    repositoriesError?: Error;\n    repositoriesLoading?: boolean;\n  };\n}\n\nconst storeConfig: RepositoryStoreDefinition = {\n  listenables: RepoActions,\n  state: {\n    orgSlug: undefined,\n    repositories: undefined,\n    repositoriesLoading: undefined,\n    repositoriesError: undefined,\n  },\n\n  init() {\n    this.resetRepositories();\n  },\n\n  resetRepositories() {\n    this.state = {\n      orgSlug: undefined,\n      repositories: undefined,\n      repositoriesLoading: undefined,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositories(orgSlug: string) {\n    this.state = {\n      orgSlug,\n      repositories: orgSlug === this.state.orgSlug ? this.state.repositories : undefined,\n      repositoriesLoading: true,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositoriesError(err: Error) {\n    this.state = {\n      ...this.state,\n      repositories: undefined,\n      repositoriesLoading: false,\n      repositoriesError: err,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositoriesSuccess(data: Repository[]) {\n    this.state = {\n      ...this.state,\n      repositories: data,\n      repositoriesLoading: false,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  get() {\n    return {...this.state};\n  },\n};\n\nconst RepositoryStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default RepositoryStore;\n","import {Component} from 'react';\n\nimport {getProjectRelease, getReleaseDeploys} from 'sentry/actionCreators/release';\nimport {Client} from 'sentry/api';\nimport ReleaseStore from 'sentry/stores/releaseStore';\nimport {Deploy, Organization, Release} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype DependentProps = {\n  api: Client;\n  organization: Organization;\n  projectSlug: string;\n  releaseVersion: string;\n};\n\ntype InjectedProps = {\n  deploys?: Array<Deploy>;\n  deploysError?: Error;\n  deploysLoading?: boolean;\n  release?: Release;\n  releaseError?: Error;\n  releaseLoading?: boolean;\n};\n\nfunction withRelease<P extends DependentProps>(WrappedComponent: React.ComponentType<P>) {\n  class WithRelease extends Component<\n    Omit<P, keyof InjectedProps> & Partial<InjectedProps> & DependentProps,\n    InjectedProps\n  > {\n    static displayName = `withRelease(${getDisplayName(WrappedComponent)})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      const {projectSlug, releaseVersion} = this.props;\n      const releaseData = ReleaseStore.get(projectSlug, releaseVersion);\n      this.state = {...releaseData};\n    }\n\n    componentDidMount() {\n      this.fetchRelease();\n      this.fetchDeploys();\n    }\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = ReleaseStore.listen(() => this.onStoreUpdate(), undefined);\n\n    fetchRelease() {\n      const {api, organization, projectSlug, releaseVersion} = this.props;\n      const releaseData = ReleaseStore.get(projectSlug, releaseVersion);\n      const orgSlug = organization.slug;\n\n      if (\n        (!releaseData.release && !releaseData.releaseLoading) ||\n        releaseData.releaseError\n      ) {\n        getProjectRelease(api, {orgSlug, projectSlug, releaseVersion});\n      }\n    }\n\n    fetchDeploys() {\n      const {api, organization, projectSlug, releaseVersion} = this.props;\n      const releaseData = ReleaseStore.get(projectSlug, releaseVersion);\n      const orgSlug = organization.slug;\n\n      if (\n        (!releaseData.deploys && !releaseData.deploysLoading) ||\n        releaseData.deploysError\n      ) {\n        getReleaseDeploys(api, {orgSlug, projectSlug, releaseVersion});\n      }\n    }\n\n    onStoreUpdate() {\n      const {projectSlug, releaseVersion} = this.props;\n      const releaseData = ReleaseStore.get(projectSlug, releaseVersion);\n\n      this.setState({...releaseData});\n    }\n\n    render() {\n      return (\n        <WrappedComponent\n          {...(this.props as P & DependentProps)}\n          {...(this.state as InjectedProps)}\n        />\n      );\n    }\n  }\n  return WithRelease;\n}\n\nexport default withRelease;\n","import {Component} from 'react';\n\nimport {getRepositories} from 'sentry/actionCreators/repositories';\nimport RepositoryActions from 'sentry/actions/repositoryActions';\nimport {Client} from 'sentry/api';\nimport RepositoryStore from 'sentry/stores/repositoryStore';\nimport {Organization, Repository} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype DependentProps = {\n  api: Client;\n  organization: Organization;\n};\n\ntype InjectedProps = {\n  repositories?: Repository[];\n  repositoriesError?: Error;\n  repositoriesLoading?: boolean;\n};\n\nconst INITIAL_STATE: InjectedProps = {\n  repositories: undefined,\n  repositoriesLoading: undefined,\n  repositoriesError: undefined,\n};\n\nfunction withRepositories<P extends DependentProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithRepositories extends Component<P & DependentProps, InjectedProps> {\n    static displayName = `withRepositories(${getDisplayName(WrappedComponent)})`;\n\n    constructor(props: P & DependentProps, context: any) {\n      super(props, context);\n\n      const {organization} = this.props;\n      const orgSlug = organization.slug;\n      const repoData = RepositoryStore.get();\n\n      if (repoData.orgSlug !== orgSlug) {\n        RepositoryActions.resetRepositories();\n      }\n\n      this.state =\n        repoData.orgSlug === orgSlug\n          ? {...INITIAL_STATE, ...repoData}\n          : {...INITIAL_STATE};\n    }\n\n    componentDidMount() {\n      // XXX(leedongwei): Do not move this function call unless you modify the\n      // unit test named \"prevents repeated calls\"\n      this.fetchRepositories();\n    }\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n    unsubscribe = RepositoryStore.listen(() => this.onStoreUpdate(), undefined);\n\n    fetchRepositories() {\n      const {api, organization} = this.props;\n      const orgSlug = organization.slug;\n      const repoData = RepositoryStore.get();\n\n      // XXX(leedongwei): Do not check the orgSlug here. It would have been\n      // verified at `getInitialState`. The short-circuit hack in actionCreator\n      // does not update the orgSlug in the store.\n      if (\n        (!repoData.repositories && !repoData.repositoriesLoading) ||\n        repoData.repositoriesError\n      ) {\n        getRepositories(api, {orgSlug});\n      }\n    }\n\n    onStoreUpdate() {\n      const repoData = RepositoryStore.get();\n      this.setState({...repoData});\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return WithRepositories;\n}\n\nexport default withRepositories;\n"],"names":["Sentry","RepositoryActions","RepositoryStore","getRepositories","api","params","orgSlug","path","state","repositoriesLoading","loadRepositories","requestPromise","method","then","res","loadRepositoriesSuccess","catch","err","loadRepositoriesError","withScope","scope","setLevel","setFingerprint","captureException","createActions","Component","css","UserAvatar","Tooltip","defaultProps","avatarSize","maxVisibleAvatars","typeMembers","tooltipOptions","AvatarList","render","className","users","renderTooltip","props","visibleUsers","slice","numCollapsedUsers","length","position","map","user","id","email","AvatarListWrapper","Circle","p","theme","background","StyledAvatar","CollapsedUsers","gray200","gray300","Math","floor","size","Plus","TimeSince","t","space","unknownUser","name","username","avatarUrl","avatar","avatarUuid","avatarType","ip_address","LastCommit","commit","renderMessage","message","firstLine","split","truncated","substr","words","pop","join","commitAuthor","author","dateCreated","InnerWrap","Message","overflowEllipsis","Meta","fontSizeSmall","subText","RepoLabel","white","Button","Clipboard","Divider","Hovercard","LoadingError","LoadingIndicator","Version","IconCopy","defined","withApi","withRelease","withRepositories","VersionHoverCard","visible","toggleHovercard","setState","getRepoLink","organization","slug","header","body","getBody","releaseVersion","release","deploys","undefined","lastCommit","recentDeploysByEnvironment","reduce","dbe","deploy","dateFinished","environment","hasOwnProperty","mostRecentDeploySlice","Object","keys","newGroups","textAlign","commitCount","authors","container","env","idx","deploysLoading","deploysError","releaseLoading","releaseError","repositories","repositoriesError","loading","error","hasRepos","renderObj","children","ConnectRepo","VersionRepoLabel","StyledTimeSince","HeaderWrapper","VersionWrapper","StyledVersion","ClipboardIconWrapper","CountSince","headingColor","headerFontSize","StyledLastCommit","DeployWrap","createStore","RepoActions","makeSafeRefluxStore","storeConfig","listenables","init","resetRepositories","trigger","data","get","getProjectRelease","getReleaseDeploys","ReleaseStore","getDisplayName","WrappedComponent","WithRelease","constructor","context","listen","onStoreUpdate","projectSlug","releaseData","componentDidMount","fetchRelease","fetchDeploys","componentWillUnmount","unsubscribe","INITIAL_STATE","WithRepositories","repoData","fetchRepositories"],"sourceRoot":""}