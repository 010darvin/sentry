{"version":3,"file":"chunks/app_views_alerts_rules_issue_details_ruleDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/areaChart.tsx","webpack:///./app/components/charts/chartZoom.tsx","webpack:///./app/components/charts/components/dataZoomInside.tsx","webpack:///./app/components/charts/components/dataZoomSlider.tsx","webpack:///./app/components/charts/components/toolBox.tsx","webpack:///./app/components/charts/series/areaSeries.tsx","webpack:///./app/components/keyValueTable.tsx","webpack:///./app/components/pageTimeRangeSelector.tsx","webpack:///./app/views/alerts/rules/issue/details/alertChart.tsx","webpack:///./app/views/alerts/rules/issue/details/issuesList.tsx","webpack:///./app/views/alerts/rules/issue/details/ruleDetails.tsx","webpack:///./app/views/alerts/rules/issue/details/sidebar.tsx","webpack:///./app/views/alerts/rules/issue/details/textRule.tsx","webpack:///./app/views/alerts/rules/metric/details/constants.tsx","webpack:///./app/views/alerts/rules/metric/types.tsx"],"sourcesContent":["import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport AreaSeries from './series/areaSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type AreaChartSeries = Series & Omit<LineSeriesOption, 'data' | 'name'>;\n\nexport interface AreaChartProps extends Omit<ChartProps, 'series'> {\n  series: AreaChartSeries[];\n  stacked?: boolean;\n}\n\nexport function AreaChart({series, stacked, colors, ...props}: AreaChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      data-test-id=\"area-chart\"\n      colors={colors}\n      series={series.map(({seriesName, data, ...otherSeriesProps}, i) =>\n        AreaSeries({\n          stack: stacked ? 'area' : undefined,\n          name: seriesName,\n          data: data.map(({name, value}) => [name, value]),\n          lineStyle: {\n            color: colors?.[i],\n            opacity: 1,\n            width: 0.4,\n          },\n          areaStyle: {\n            color: colors?.[i],\n            opacity: 1.0,\n          },\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n          ...otherSeriesProps,\n        })\n      )}\n    />\n  );\n}\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport type {\n  DataZoomComponentOption,\n  InsideDataZoomComponentOption,\n  ToolboxComponentOption,\n  XAXisComponentOption,\n} from 'echarts';\nimport moment from 'moment';\nimport * as qs from 'query-string';\n\nimport {updateDateTime} from 'sentry/actionCreators/pageFilters';\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport DataZoomSlider from 'sentry/components/charts/components/dataZoomSlider';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {DateString} from 'sentry/types';\nimport {\n  EChartChartReadyHandler,\n  EChartDataZoomHandler,\n  EChartFinishedHandler,\n  EChartRestoreHandler,\n} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {getUtcDateString, getUtcToLocalDateObject} from 'sentry/utils/dates';\n\nconst getDate = date =>\n  date ? moment.utc(date).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS) : null;\n\ntype Period = {\n  end: DateString;\n  period: string | null;\n  start: DateString;\n};\n\nconst ZoomPropKeys = [\n  'period',\n  'xAxis',\n  'onChartReady',\n  'onDataZoom',\n  'onRestore',\n  'onFinished',\n] as const;\n\nexport type ZoomRenderProps = Pick<Props, typeof ZoomPropKeys[number]> & {\n  dataZoom?: DataZoomComponentOption[];\n  end?: Date;\n  isGroupedByDate?: boolean;\n  showTimeInTooltip?: boolean;\n  start?: Date;\n  toolBox?: ToolboxComponentOption;\n  utc?: boolean;\n};\n\ntype Props = {\n  children: (props: ZoomRenderProps) => React.ReactNode;\n  chartZoomOptions?: DataZoomComponentOption;\n  disabled?: boolean;\n  end?: DateString;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  onFinished?: EChartFinishedHandler;\n  onRestore?: EChartRestoreHandler;\n  onZoom?: (period: Period) => void;\n  period?: string | null;\n  router?: InjectedRouter;\n  showSlider?: boolean;\n  start?: DateString;\n  usePageDate?: boolean;\n  utc?: boolean | null;\n  xAxis?: XAXisComponentOption;\n  xAxisIndex?: number | number[];\n};\n\n/**\n * This is a very opinionated component that takes a render prop through `children`. It\n * will provide props to be passed to `BaseChart` to enable support of zooming without\n * eCharts' clunky zoom toolboxes.\n *\n * This also is very tightly coupled with the Global Selection Header. We can make it more\n * generic if need be in the future.\n */\nclass ChartZoom extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    // Zoom history\n    this.history = [];\n\n    // Initialize current period instance state for zoom history\n    this.saveCurrentPeriod(props);\n  }\n\n  componentDidUpdate() {\n    if (this.props.disabled) {\n      return;\n    }\n\n    // When component updates, make sure we sync current period state\n    // for use in zoom history\n    this.saveCurrentPeriod(this.props);\n  }\n\n  history: Period[];\n  currentPeriod?: Period;\n  zooming: (() => void) | null = null;\n\n  /**\n   * Save current period state from period in props to be used\n   * in handling chart's zoom history state\n   */\n  saveCurrentPeriod = props => {\n    this.currentPeriod = {\n      period: props.period,\n      start: getDate(props.start),\n      end: getDate(props.end),\n    };\n  };\n\n  /**\n   * Sets the new period due to a zoom related action\n   *\n   * Saves the current period to an instance property so that we\n   * can control URL state when zoom history is being manipulated\n   * by the chart controls.\n   *\n   * Saves a callback function to be called after chart animation is completed\n   */\n  setPeriod = ({period, start, end}, saveHistory = false) => {\n    const {router, onZoom, usePageDate} = this.props;\n    const startFormatted = getDate(start);\n    const endFormatted = getDate(end);\n\n    // Save period so that we can revert back to it when using echarts \"back\" navigation\n    if (saveHistory) {\n      this.history.push(this.currentPeriod!);\n    }\n\n    // Callback to let parent component know zoom has changed\n    // This is required for some more perceived responsiveness since\n    // we delay updating URL state so that chart animation can finish\n    //\n    // Parent container can use this to change into a loading state before\n    // URL parameters are changed\n    callIfFunction(onZoom, {\n      period,\n      start: startFormatted,\n      end: endFormatted,\n    });\n\n    this.zooming = () => {\n      if (usePageDate && router) {\n        const newQuery = {\n          ...router.location.query,\n          pageStart: start ? getUtcDateString(start) : undefined,\n          pageEnd: end ? getUtcDateString(end) : undefined,\n          pageStatsPeriod: period ?? undefined,\n        };\n\n        // Only push new location if query params has changed because this will cause a heavy re-render\n        if (qs.stringify(newQuery) !== qs.stringify(router.location.query)) {\n          router.push({\n            pathname: router.location.pathname,\n            query: newQuery,\n          });\n        }\n      } else {\n        updateDateTime(\n          {\n            period,\n            start: startFormatted\n              ? getUtcToLocalDateObject(startFormatted)\n              : startFormatted,\n            end: endFormatted ? getUtcToLocalDateObject(endFormatted) : endFormatted,\n          },\n          router\n        );\n      }\n\n      this.saveCurrentPeriod({period, start, end});\n    };\n  };\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Restores the chart to initial viewport/zoom level\n   *\n   * Updates URL state to reflect initial params\n   */\n  handleZoomRestore = (evt, chart) => {\n    if (!this.history.length) {\n      return;\n    }\n\n    this.setPeriod(this.history[0]);\n\n    // reset history\n    this.history = [];\n\n    callIfFunction(this.props.onRestore, evt, chart);\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // if `rangeStart` and `rangeEnd` are null, then we are going back\n    if (startValue === null && endValue === null) {\n      const previousPeriod = this.history.pop();\n\n      if (!previousPeriod) {\n        return;\n      }\n\n      this.setPeriod(previousPeriod);\n    } else {\n      const start = moment.utc(startValue);\n\n      // Add a day so we go until the end of the day (e.g. next day at midnight)\n      const end = moment.utc(endValue);\n\n      this.setPeriod({period: null, start, end}, true);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n\n    callIfFunction(this.props.onFinished);\n  };\n\n  render() {\n    const {\n      utc: _utc,\n      start: _start,\n      end: _end,\n      disabled,\n      children,\n      xAxisIndex,\n\n      router: _router,\n      onZoom: _onZoom,\n      onRestore: _onRestore,\n      onChartReady: _onChartReady,\n      onDataZoom: _onDataZoom,\n      onFinished: _onFinished,\n      showSlider,\n      chartZoomOptions,\n      ...props\n    } = this.props;\n\n    const utc = _utc ?? undefined;\n    const start = _start ? getUtcToLocalDateObject(_start) : undefined;\n    const end = _end ? getUtcToLocalDateObject(_end) : undefined;\n\n    if (disabled) {\n      return children({\n        utc,\n        start,\n        end,\n        ...props,\n      });\n    }\n    const renderProps = {\n      // Zooming only works when grouped by date\n      isGroupedByDate: true,\n      onChartReady: this.handleChartReady,\n      utc,\n      start,\n      end,\n      dataZoom: showSlider\n        ? [\n            ...DataZoomSlider({xAxisIndex, ...chartZoomOptions}),\n            ...DataZoomInside({\n              xAxisIndex,\n              ...(chartZoomOptions as InsideDataZoomComponentOption),\n            }),\n          ]\n        : DataZoomInside({\n            xAxisIndex,\n            ...(chartZoomOptions as InsideDataZoomComponentOption),\n          }),\n      showTimeInTooltip: true,\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n      onFinished: this.handleChartFinished,\n      onRestore: this.handleZoomRestore,\n      ...props,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default ChartZoom;\n","import 'echarts/lib/component/dataZoomInside';\n\nimport type {InsideDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: InsideDataZoomComponentOption = {\n  type: 'inside',\n  // Mouse wheel can not trigger zoom\n  zoomOnMouseWheel: false,\n  // The translation (by mouse drag or touch drag) is available but zoom is not\n  zoomLock: true,\n  throttle: 50,\n};\n\nexport default function DataZoomInside(\n  props: InsideDataZoomComponentOption | InsideDataZoomComponentOption[]\n): InsideDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import 'echarts/lib/component/dataZoomSlider';\n\nimport type {SliderDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: SliderDataZoomComponentOption = {\n  realtime: false,\n  showDetail: false,\n  left: 0,\n  right: 6,\n  bottom: 8,\n};\n\nexport default function DataZoomSlider(\n  props: SliderDataZoomComponentOption | SliderDataZoomComponentOption[]\n): SliderDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import type {ToolboxComponentOption} from 'echarts';\n\nfunction getFeatures({\n  dataZoom,\n  ...features\n}: ToolboxComponentOption['feature'] = {}): ToolboxComponentOption['feature'] {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(\n  options: ToolboxComponentOption,\n  features: ToolboxComponentOption['feature']\n): ToolboxComponentOption {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n    // Stack the toolbox under the legend.\n    // so all series names are clickable.\n    z: -1,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import type {LineSeriesOption} from 'echarts';\n\nimport LineSeries from 'sentry/components/charts/series/lineSeries';\n\nexport default function AreaSeries(props: LineSeriesOption = {}): LineSeriesOption {\n  return LineSeries({\n    ...props,\n  });\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = {\n  keyName: React.ReactNode;\n  value: React.ReactNode;\n};\n\nexport const KeyValueTable = styled('dl')`\n  display: grid;\n  grid-template-columns: 50% 50%;\n`;\n\nexport const KeyValueTableRow = ({keyName, value}: Props) => {\n  return (\n    <Fragment>\n      <Key>{keyName}</Key>\n      <Value>{value}</Value>\n    </Fragment>\n  );\n};\n\nconst commonStyles = ({theme}: {theme: Theme}) => `\nfont-size: ${theme.fontSizeMedium};\npadding: ${space(0.5)} ${space(1)};\nfont-weight: normal;\nline-height: inherit;\n${p => p.theme.overflowEllipsis};\n&:nth-of-type(2n-1) {\n  background-color: ${theme.backgroundSecondary};\n}\n`;\n\nconst Key = styled('dt')`\n  ${commonStyles};\n  color: ${p => p.theme.textColor};\n`;\n\nconst Value = styled('dd')`\n  ${commonStyles};\n  color: ${p => p.theme.subText};\n  text-align: right;\n`;\n","import styled from '@emotion/styled';\n\nimport TimeRangeSelector from 'sentry/components/organizations/timeRangeSelector';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = React.ComponentProps<typeof TimeRangeSelector> & {className?: string};\n\nfunction PageTimeRangeSelector({className, ...props}: Props) {\n  return (\n    <DropdownDate className={className}>\n      <TimeRangeSelector\n        key={`period:${props.relative}-start:${props.start}-end:${props.end}-utc:${props.utc}-defaultPeriod:${props.defaultPeriod}`}\n        label={<DropdownLabel>{t('Date Range:')}</DropdownLabel>}\n        detached\n        {...props}\n      />\n    </DropdownDate>\n  );\n}\n\nconst DropdownDate = styled(Panel)`\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 42px;\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n\n  > div {\n    width: 100%;\n    align-self: stretch;\n  }\n  /* StyledItemHeader used to show selected value of TimeRangeSelector */\n  > div > div:first-child > div {\n    padding: 0 ${space(2)};\n  }\n  /* Menu that dropdowns from TimeRangeSelector */\n  > div > div:last-child:not(:first-child) {\n    /* Remove awkward 1px width difference on dropdown due to border */\n    min-width: calc(100% + 2px);\n    transform: translateX(-1px);\n    right: auto;\n  }\n`;\n\nconst DropdownLabel = styled('span')`\n  text-align: left;\n  font-weight: 600;\n  color: ${p => p.theme.textColor};\n\n  > span:last-child {\n    font-weight: 400;\n  }\n`;\n\nexport default PageTimeRangeSelector;\n","// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {AreaChart} from 'sentry/components/charts/areaChart';\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport {HeaderTitleLegend, SectionHeading} from 'sentry/components/charts/styles';\nimport type {DateTimeObject} from 'sentry/components/charts/utils';\nimport {Panel, PanelBody, PanelFooter} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {IssueAlertRule, ProjectAlertRuleStats} from 'sentry/types/alerts';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\ntype Props = AsyncComponent['props'] &\n  DateTimeObject &\n  WithRouterProps & {\n    orgId: string;\n    organization: Organization;\n    project: Project;\n    rule: IssueAlertRule;\n  };\n\ntype State = AsyncComponent['state'] & {\n  ruleFireHistory: ProjectAlertRuleStats[];\n};\n\nclass AlertChart extends AsyncComponent<Props, State> {\n  componentDidUpdate(prevProps: Props) {\n    const {project, organization, start, end, period, utc} = this.props;\n\n    if (\n      prevProps.start !== start ||\n      prevProps.end !== end ||\n      prevProps.period !== period ||\n      prevProps.utc !== utc ||\n      prevProps.organization.id !== organization.id ||\n      prevProps.project.id !== project.id\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      ruleFireHistory: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {project, organization, period, start, end, utc, rule} = this.props;\n\n    return [\n      [\n        'ruleFireHistory',\n        `/projects/${organization.slug}/${project.slug}/rules/${rule.id}/stats/`,\n        {\n          query: {\n            ...(period && {statsPeriod: period}),\n            start,\n            end,\n            utc,\n          },\n        },\n      ],\n    ];\n  }\n\n  renderChart() {\n    const {router, period, start, end, utc} = this.props;\n    const {ruleFireHistory} = this.state;\n\n    const series = {\n      seriesName: 'Alerts Triggered',\n      data: ruleFireHistory.map(alert => ({\n        name: alert.date,\n        value: alert.count,\n      })),\n      emphasis: {\n        disabled: true,\n      },\n    };\n\n    return (\n      <ChartZoom\n        router={router}\n        period={period}\n        start={start}\n        end={end}\n        utc={utc}\n        usePageDate\n      >\n        {zoomRenderProps => (\n          <AreaChart\n            {...zoomRenderProps}\n            isGroupedByDate\n            showTimeInTooltip\n            grid={{\n              left: space(0.25),\n              right: space(2),\n              top: space(3),\n              bottom: 0,\n            }}\n            yAxis={{\n              minInterval: 1,\n            }}\n            series={[series]}\n          />\n        )}\n      </ChartZoom>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <PanelBody withPadding>\n          <Placeholder height=\"200px\" />\n        </PanelBody>\n      </Panel>\n    );\n  }\n\n  render() {\n    const {ruleFireHistory, loading} = this.state;\n\n    const totalAlertsTriggered = ruleFireHistory.reduce(\n      (acc, curr) => acc + curr.count,\n      0\n    );\n\n    return loading ? (\n      this.renderEmpty()\n    ) : (\n      <Panel>\n        <StyledPanelBody withPadding>\n          <ChartHeader>\n            <HeaderTitleLegend>{t('Alerts Triggered')}</HeaderTitleLegend>\n          </ChartHeader>\n          {getDynamicText({\n            value: this.renderChart(),\n            fixed: <Placeholder height=\"200px\" testId=\"skeleton-ui\" />,\n          })}\n        </StyledPanelBody>\n        <ChartFooter>\n          <FooterHeader>{t('Total Alerts')}</FooterHeader>\n          <FooterValue>{totalAlertsTriggered.toLocaleString()}</FooterValue>\n        </ChartFooter>\n      </Panel>\n    );\n  }\n}\n\nexport default withRouter(AlertChart);\n\nconst ChartHeader = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst ChartFooter = styled(PanelFooter)`\n  display: flex;\n  align-items: center;\n  padding: ${space(1)} 20px;\n`;\n\nconst FooterHeader = styled(SectionHeading)`\n  display: flex;\n  align-items: center;\n  margin: 0;\n  font-weight: bold;\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1;\n`;\n\nconst FooterValue = styled('div')`\n  display: flex;\n  align-items: center;\n  margin: 0 ${space(1)};\n`;\n\n/* Override padding to make chart appear centered */\nconst StyledPanelBody = styled(PanelBody)`\n  padding-right: 6px;\n`;\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport type {DateTimeObject} from 'sentry/components/charts/utils';\nimport Count from 'sentry/components/count';\nimport DateTime from 'sentry/components/dateTime';\nimport Link from 'sentry/components/links/link';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, Organization, Project} from 'sentry/types';\nimport {IssueAlertRule} from 'sentry/types/alerts';\nimport {getMessage, getTitle} from 'sentry/utils/events';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\ntype GroupHistory = {\n  count: number;\n  group: Group;\n  lastTriggered: string;\n};\n\ntype Props = AsyncComponent['props'] &\n  DateTimeObject & {\n    organization: Organization;\n    project: Project;\n    rule: IssueAlertRule;\n    cursor?: string;\n  };\n\ntype State = AsyncComponent['state'] & {\n  groupHistory: GroupHistory[] | null;\n};\n\nclass AlertRuleIssuesList extends AsyncComponent<Props, State> {\n  shouldRenderBadRequests = true;\n\n  componentDidUpdate(prevProps: Props) {\n    const {project, organization, start, end, period, utc, cursor} = this.props;\n\n    if (\n      prevProps.start !== start ||\n      prevProps.end !== end ||\n      prevProps.period !== period ||\n      prevProps.utc !== utc ||\n      prevProps.organization.id !== organization.id ||\n      prevProps.project.id !== project.id ||\n      prevProps.cursor !== cursor\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      groupHistory: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {project, rule, organization, period, start, end, utc, cursor} = this.props;\n    return [\n      [\n        'groupHistory',\n        `/projects/${organization.slug}/${project.slug}/rules/${rule.id}/group-history/`,\n        {\n          query: {\n            per_page: 10,\n            ...(period && {statsPeriod: period}),\n            start,\n            end,\n            utc,\n            cursor,\n          },\n        },\n      ],\n    ];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {organization, rule} = this.props;\n    const {loading, groupHistory, groupHistoryPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <StyledPanelTable\n          isLoading={loading}\n          isEmpty={groupHistory?.length === 0}\n          emptyMessage={t('No issues exist for the current query.')}\n          headers={[\n            t('Issue'),\n            <AlignRight key=\"alerts\">{t('Alerts')}</AlignRight>,\n            <AlignRight key=\"events\">{t('Events')}</AlignRight>,\n            t('Last Triggered'),\n          ]}\n        >\n          {groupHistory?.map(({group: issue, count, lastTriggered}) => {\n            const message = getMessage(issue);\n            const {title} = getTitle(issue);\n\n            return (\n              <Fragment key={issue.id}>\n                <TitleWrapper>\n                  <Link\n                    to={{\n                      pathname: `/organizations/${organization.slug}/issues/${issue.id}/`,\n                      query: rule.environment ? {environment: rule.environment} : {},\n                    }}\n                  >\n                    {title}:\n                  </Link>\n                  <MessageWrapper>{message}</MessageWrapper>\n                </TitleWrapper>\n                <AlignRight>\n                  <Count value={count} />\n                </AlignRight>\n                <AlignRight>\n                  <Count value={issue.count} />\n                </AlignRight>\n                <div>\n                  <StyledDateTime\n                    date={getDynamicText({\n                      value: lastTriggered,\n                      fixed: 'Mar 16, 2020 9:10:13 AM UTC',\n                    })}\n                    year\n                    seconds\n                    timeZone\n                  />\n                </div>\n              </Fragment>\n            );\n          })}\n        </StyledPanelTable>\n        <PaginationWrapper>\n          <StyledPagination pageLinks={groupHistoryPageLinks} size=\"xs\" />\n        </PaginationWrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default AlertRuleIssuesList;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr 0.2fr 0.2fr 0.5fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-bottom: ${space(1.5)};\n\n  ${p =>\n    !p.isEmpty &&\n    css`\n      & > div {\n        padding: ${space(1)} ${space(2)};\n      }\n    `}\n`;\n\nconst AlignRight = styled('div')`\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n`;\n\nconst StyledDateTime = styled(DateTime)`\n  white-space: nowrap;\n  color: ${p => p.theme.subText};\n`;\n\nconst TitleWrapper = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  display: flex;\n  gap: ${space(0.5)};\n  min-width: 200px;\n`;\n\nconst MessageWrapper = styled('span')`\n  ${p => p.theme.overflowEllipsis};\n  color: ${p => p.theme.textColor};\n`;\n\nconst PaginationWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 0;\n`;\n","import type {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport pick from 'lodash/pick';\nimport moment from 'moment';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport type {DateTimeObject} from 'sentry/components/charts/utils';\nimport IdBadge from 'sentry/components/idBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {ChangeData} from 'sentry/components/organizations/timeRangeSelector';\nimport PageTimeRangeSelector from 'sentry/components/pageTimeRangeSelector';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {IconCopy, IconEdit} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {DateString, Member, Organization, Project} from 'sentry/types';\nimport {IssueAlertRule} from 'sentry/types/alerts';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {ALERT_DEFAULT_CHART_PERIOD} from 'sentry/views/alerts/rules/metric/details/constants';\n\nimport AlertChart from './alertChart';\nimport AlertRuleIssuesList from './issuesList';\nimport Sidebar from './sidebar';\n\ntype Props = AsyncComponent['props'] & {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string; ruleId: string}, {}>;\n\ntype State = AsyncComponent['state'] & {\n  memberList: Member[];\n  rule: IssueAlertRule | null;\n};\n\nconst PAGE_QUERY_PARAMS = [\n  'pageStatsPeriod',\n  'pageStart',\n  'pageEnd',\n  'pageUtc',\n  'cursor',\n];\n\nclass AlertRuleDetails extends AsyncComponent<Props, State> {\n  shouldRenderBadRequests = true;\n\n  componentDidMount() {\n    const {organization, params} = this.props;\n    trackAdvancedAnalyticsEvent('issue_alert_rule_details.viewed', {\n      organization,\n      rule_id: parseInt(params.ruleId, 10),\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {params: prevParams} = prevProps;\n    const {params: currParams} = this.props;\n\n    if (\n      prevParams.ruleId !== currParams.ruleId ||\n      prevParams.orgId !== currParams.orgId ||\n      prevParams.projectId !== currParams.projectId\n    ) {\n      this.reloadData();\n    }\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      rule: null,\n      memberList: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, ruleId, projectId} = this.props.params;\n    return [\n      [\n        'rule',\n        `/projects/${orgId}/${projectId}/rules/${ruleId}/`,\n        {query: {expand: 'lastTriggered'}},\n        {allowError: error => error.status === 404},\n      ],\n      ['memberList', `/organizations/${orgId}/users/`, {query: {projectSlug: projectId}}],\n    ];\n  }\n\n  getDataDatetime(): DateTimeObject {\n    const query = this.props.location?.query ?? {};\n\n    const {\n      start,\n      end,\n      statsPeriod,\n      utc: utcString,\n    } = normalizeDateTimeParams(query, {\n      allowEmptyPeriod: true,\n      allowAbsoluteDatetime: true,\n      allowAbsolutePageDatetime: true,\n    });\n\n    if (!statsPeriod && !start && !end) {\n      return {period: ALERT_DEFAULT_CHART_PERIOD};\n    }\n\n    // Following getParams, statsPeriod will take priority over start/end\n    if (statsPeriod) {\n      return {period: statsPeriod};\n    }\n\n    const utc = utcString === 'true';\n    if (start && end) {\n      return utc\n        ? {\n            start: moment.utc(start).format(),\n            end: moment.utc(end).format(),\n            utc,\n          }\n        : {\n            start: moment(start).utc().format(),\n            end: moment(end).utc().format(),\n            utc,\n          };\n    }\n\n    return {period: ALERT_DEFAULT_CHART_PERIOD};\n  }\n\n  setStateOnUrl(nextState: {\n    cursor?: string;\n    pageEnd?: DateString;\n    pageStart?: DateString;\n    pageStatsPeriod?: string | null;\n    pageUtc?: boolean | null;\n    team?: string;\n  }) {\n    return this.props.router.push({\n      ...this.props.location,\n      query: {\n        ...this.props.location.query,\n        ...pick(nextState, PAGE_QUERY_PARAMS),\n      },\n    });\n  }\n\n  handleUpdateDatetime = (datetime: ChangeData) => {\n    const {start, end, relative, utc} = datetime;\n\n    if (start && end) {\n      const parser = utc ? moment.utc : moment;\n\n      return this.setStateOnUrl({\n        pageStatsPeriod: undefined,\n        pageStart: parser(start).format(),\n        pageEnd: parser(end).format(),\n        pageUtc: utc ?? undefined,\n        cursor: undefined,\n      });\n    }\n\n    return this.setStateOnUrl({\n      pageStatsPeriod: relative || undefined,\n      pageStart: undefined,\n      pageEnd: undefined,\n      pageUtc: undefined,\n      cursor: undefined,\n    });\n  };\n\n  renderLoading() {\n    return (\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <LoadingIndicator />\n        </Layout.Main>\n      </Layout.Body>\n    );\n  }\n\n  renderBody() {\n    const {params, location, organization, project} = this.props;\n    const {orgId, ruleId, projectId} = params;\n    const {cursor} = location.query;\n    const {period, start, end, utc} = this.getDataDatetime();\n    const {rule, memberList} = this.state;\n\n    if (!rule) {\n      return (\n        <StyledLoadingError\n          message={t('The alert rule you were looking for was not found.')}\n        />\n      );\n    }\n\n    if (!project) {\n      return (\n        <StyledLoadingError\n          message={t('The project you were looking for was not found.')}\n        />\n      );\n    }\n\n    const duplicateLink = {\n      pathname: `/organizations/${orgId}/alerts/new/issue/`,\n      query: {\n        project: project.slug,\n        duplicateRuleId: rule.id,\n        createFromDuplicate: true,\n        referrer: 'issue_rule_details',\n      },\n    };\n\n    return (\n      <PageFiltersContainer\n        skipInitializeUrlParams\n        skipLoadLastUsed\n        shouldForceProject\n        forceProject={project}\n      >\n        <SentryDocumentTitle title={rule.name} orgSlug={orgId} projectSlug={projectId} />\n\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Breadcrumbs\n              crumbs={[\n                {label: t('Alerts'), to: `/organizations/${orgId}/alerts/rules/`},\n                {\n                  label: rule.name,\n                  to: null,\n                },\n              ]}\n            />\n            <Layout.Title>\n              <RuleName>\n                <IdBadge\n                  project={project}\n                  avatarSize={28}\n                  hideName\n                  avatarProps={{hasTooltip: true, tooltip: project.slug}}\n                />\n                {rule.name}\n              </RuleName>\n            </Layout.Title>\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            <ButtonBar gap={1}>\n              <Button icon={<IconCopy />} to={duplicateLink}>\n                {t('Duplicate')}\n              </Button>\n              <Button\n                icon={<IconEdit />}\n                to={`/organizations/${orgId}/alerts/rules/${projectId}/${ruleId}/`}\n                onClick={() =>\n                  trackAdvancedAnalyticsEvent('issue_alert_rule_details.edit_clicked', {\n                    organization,\n                    rule_id: parseInt(ruleId, 10),\n                  })\n                }\n              >\n                {t('Edit Rule')}\n              </Button>\n            </ButtonBar>\n          </Layout.HeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main>\n            <StyledPageTimeRangeSelector\n              organization={organization}\n              relative={period ?? ''}\n              start={start ?? null}\n              end={end ?? null}\n              utc={utc ?? null}\n              onUpdate={this.handleUpdateDatetime}\n            />\n            <AlertChart\n              organization={organization}\n              orgId={orgId}\n              project={project}\n              rule={rule}\n              period={period ?? ''}\n              start={start ?? null}\n              end={end ?? null}\n              utc={utc ?? null}\n            />\n            <AlertRuleIssuesList\n              organization={organization}\n              project={project}\n              rule={rule}\n              period={period ?? ''}\n              start={start ?? null}\n              end={end ?? null}\n              utc={utc ?? null}\n              cursor={cursor}\n            />\n          </Layout.Main>\n          <Layout.Side>\n            <Sidebar rule={rule} memberList={memberList} teams={project.teams} />\n          </Layout.Side>\n        </Layout.Body>\n      </PageFiltersContainer>\n    );\n  }\n}\n\nexport default AlertRuleDetails;\n\nconst StyledPageTimeRangeSelector = styled(PageTimeRangeSelector)`\n  margin-bottom: ${space(2)};\n`;\n\nconst RuleName = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n`;\n\nconst StyledLoadingError = styled(LoadingError)`\n  margin: ${space(2)};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport ActorAvatar from 'sentry/components/avatar/actorAvatar';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport {KeyValueTable, KeyValueTableRow} from 'sentry/components/keyValueTable';\nimport {PanelBody} from 'sentry/components/panels';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconChevron} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Actor, Member, Team} from 'sentry/types';\nimport {IssueAlertRule} from 'sentry/types/alerts';\n\nimport {TextAction, TextCondition} from './textRule';\n\ntype Props = {\n  memberList: Member[];\n  rule: IssueAlertRule;\n  teams: Team[];\n};\n\nfunction Conditions({rule, teams, memberList}: Props) {\n  return (\n    <PanelBody>\n      <Step>\n        <StepContainer>\n          <ChevronContainer>\n            <IconChevron color=\"gray200\" isCircled direction=\"right\" size=\"sm\" />\n          </ChevronContainer>\n          <StepContent>\n            <StepLead>\n              {tct('[when:When] an event is captured [selector]', {\n                when: <Badge />,\n                selector: rule.conditions.length ? t('and %s...', rule.actionMatch) : '',\n              })}\n            </StepLead>\n            {rule.conditions.map((condition, idx) => (\n              <ConditionsBadge key={idx}>\n                <TextCondition condition={condition} />\n              </ConditionsBadge>\n            ))}\n          </StepContent>\n        </StepContainer>\n      </Step>\n      {rule.filters.length ? (\n        <Step>\n          <StepContainer>\n            <ChevronContainer>\n              <IconChevron color=\"gray200\" isCircled direction=\"right\" size=\"sm\" />\n            </ChevronContainer>\n            <StepContent>\n              <StepLead>\n                {tct('[if:If] [selector] of these filters match', {\n                  if: <Badge />,\n                  selector: rule.filterMatch,\n                })}\n              </StepLead>\n              {rule.filters.map((filter, idx) => (\n                <ConditionsBadge key={idx}>\n                  {filter.time ? filter.name + '(s)' : filter.name}\n                </ConditionsBadge>\n              ))}\n            </StepContent>\n          </StepContainer>\n        </Step>\n      ) : null}\n      <Step>\n        <StepContainer>\n          <ChevronContainer>\n            <IconChevron isCircled color=\"gray200\" direction=\"right\" size=\"sm\" />\n          </ChevronContainer>\n          <div>\n            <StepLead>\n              {tct('[then:Then] perform these actions', {\n                then: <Badge />,\n              })}\n            </StepLead>\n            {rule.actions.length ? (\n              rule.actions.map((action, idx) => {\n                return (\n                  <ConditionsBadge key={idx}>\n                    <TextAction action={action} memberList={memberList} teams={teams} />\n                  </ConditionsBadge>\n                );\n              })\n            ) : (\n              <ConditionsBadge>{t('Do nothing')}</ConditionsBadge>\n            )}\n          </div>\n        </StepContainer>\n      </Step>\n    </PanelBody>\n  );\n}\n\nfunction Sidebar({rule, teams, memberList}: Props) {\n  const ownerId = rule.owner?.split(':')[1];\n  const teamActor = ownerId && {type: 'team' as Actor['type'], id: ownerId, name: ''};\n\n  return (\n    <Fragment>\n      <StatusContainer>\n        <HeaderItem>\n          <Heading noMargin>{t('Last Triggered')}</Heading>\n          <Status>\n            {rule.lastTriggered ? (\n              <TimeSince date={rule.lastTriggered} />\n            ) : (\n              t('No alerts triggered')\n            )}\n          </Status>\n        </HeaderItem>\n      </StatusContainer>\n      <SidebarGroup>\n        <Heading noMargin>{t('Alert Conditions')}</Heading>\n        <Conditions rule={rule} teams={teams} memberList={memberList} />\n      </SidebarGroup>\n      <SidebarGroup>\n        <Heading>{t('Alert Rule Details')}</Heading>\n        <KeyValueTable>\n          <KeyValueTableRow\n            keyName={t('Environment')}\n            value={<OverflowTableValue>{rule.environment ?? '-'}</OverflowTableValue>}\n          />\n          {rule.dateCreated && (\n            <KeyValueTableRow\n              keyName={t('Date Created')}\n              value={<TimeSince date={rule.dateCreated} suffix={t('ago')} />}\n            />\n          )}\n          {rule.createdBy && (\n            <KeyValueTableRow\n              keyName={t('Created By')}\n              value={\n                <OverflowTableValue>{rule.createdBy.name ?? '-'}</OverflowTableValue>\n              }\n            />\n          )}\n          <KeyValueTableRow\n            keyName={t('Team')}\n            value={\n              teamActor ? <ActorAvatar actor={teamActor} size={24} /> : t('Unassigned')\n            }\n          />\n        </KeyValueTable>\n      </SidebarGroup>\n    </Fragment>\n  );\n}\n\nexport default Sidebar;\n\nconst SidebarGroup = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst HeaderItem = styled('div')`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  > *:nth-child(2) {\n    flex: 1;\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst Status = styled('div')`\n  position: relative;\n  display: grid;\n  grid-template-columns: auto auto auto;\n  gap: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst StatusContainer = styled('div')`\n  height: 60px;\n  display: flex;\n  margin-bottom: ${space(1.5)};\n`;\n\nconst Step = styled('div')`\n  position: relative;\n  margin-top: ${space(4)};\n\n  :first-child {\n    margin-top: ${space(1)};\n  }\n`;\n\nconst StepContainer = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  flex-grow: 1;\n`;\n\nconst StepContent = styled('div')`\n  &::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    top: 28px;\n    left: ${space(1)};\n    border-right: 1px ${p => p.theme.gray200} dashed;\n  }\n`;\n\nconst StepLead = styled('div')`\n  margin-bottom: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: 400;\n`;\n\nconst ChevronContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(0.5)} ${space(1)} ${space(0.5)} 0;\n`;\n\nconst Badge = styled('span')`\n  display: inline-block;\n  background-color: ${p => p.theme.purple300};\n  padding: 0 ${space(0.75)};\n  border-radius: ${p => p.theme.borderRadius};\n  color: ${p => p.theme.white};\n  text-transform: uppercase;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 400;\n  line-height: 1.5;\n`;\n\nconst ConditionsBadge = styled('span')`\n  display: block;\n  background-color: ${p => p.theme.surface100};\n  padding: 0 ${space(0.75)};\n  border-radius: ${p => p.theme.borderRadius};\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeSmall};\n  margin-bottom: ${space(1)};\n  width: fit-content;\n  font-weight: 400;\n`;\n\nconst Heading = styled(SectionHeading)<{noMargin?: boolean}>`\n  margin-top: ${p => (p.noMargin ? 0 : space(2))};\n  margin-bottom: ${p => (p.noMargin ? 0 : space(1))};\n`;\n\nconst OverflowTableValue = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n`;\n","import {Fragment} from 'react';\n\nimport {t} from 'sentry/locale';\nimport type {Member, Team} from 'sentry/types';\nimport type {IssueAlertRule} from 'sentry/types/alerts';\nimport {AlertRuleComparisonType} from 'sentry/views/alerts/rules/metric/types';\n\n/**\n * Translate Issue Alert Conditions to text\n */\nexport function TextCondition({\n  condition,\n}: {\n  condition: IssueAlertRule['conditions'][number];\n}) {\n  if (\n    condition.id === 'sentry.rules.conditions.event_frequency.EventFrequencyCondition'\n  ) {\n    if (condition.comparisonType === AlertRuleComparisonType.PERCENT) {\n      return (\n        <Fragment>\n          {t(\n            // Double %% escapes\n            'Number of events in an issue is %s%% higher in %s compared to %s ago',\n            condition.value,\n            condition.comparisonInterval,\n            condition.interval\n          )}\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        {t(\n          'Number of events in an issue is more than %s in %s',\n          condition.value,\n          condition.interval\n        )}\n      </Fragment>\n    );\n  }\n\n  return <Fragment>{condition.name}</Fragment>;\n}\n\n// TODO(scttcper): Remove the teams/memberList prop drilling\nexport function TextAction({\n  action,\n  memberList,\n  teams,\n}: {\n  action: IssueAlertRule['actions'][number];\n  memberList: Member[];\n  teams: Team[];\n}) {\n  if (action.targetType === 'Member') {\n    const user = memberList.find(\n      member => member.user.id === `${action.targetIdentifier}`\n    );\n    return <Fragment>{t('Send a notification to %s', user?.email)}</Fragment>;\n  }\n\n  if (action.targetType === 'Team') {\n    const team = teams.find(tm => tm.id === `${action.targetIdentifier}`);\n    return <Fragment>{t('Send a notification to #%s', team?.name)}</Fragment>;\n  }\n\n  if (action.id === 'sentry.integrations.slack.notify_action.SlackNotifyServiceAction') {\n    // Remove (optionally, an ID: XXX) from slack action\n    return <Fragment>{action.name.replace(/\\(optionally.*\\)/, '')}</Fragment>;\n  }\n\n  return <Fragment>{action.name}</Fragment>;\n}\n","import {t} from 'sentry/locale';\nimport {SelectValue} from 'sentry/types';\nimport {TimePeriod, TimeWindow} from 'sentry/views/alerts/rules/metric/types';\n\nexport const SELECTOR_RELATIVE_PERIODS = {\n  [TimePeriod.SIX_HOURS]: t('Last 6 hours'),\n  [TimePeriod.ONE_DAY]: t('Last 24 hours'),\n  [TimePeriod.THREE_DAYS]: t('Last 3 days'),\n  [TimePeriod.SEVEN_DAYS]: t('Last 7 days'),\n};\n\nexport const ALERT_DEFAULT_CHART_PERIOD = '7d';\n\nexport const TIME_OPTIONS: SelectValue<string>[] = [\n  {label: t('Last 6 hours'), value: TimePeriod.SIX_HOURS},\n  {label: t('Last 24 hours'), value: TimePeriod.ONE_DAY},\n  {label: t('Last 3 days'), value: TimePeriod.THREE_DAYS},\n  {label: t('Last 7 days'), value: TimePeriod.SEVEN_DAYS},\n  {label: t('Last 14 days'), value: TimePeriod.FOURTEEN_DAYS},\n];\n\nexport const TIME_WINDOWS = {\n  [TimePeriod.SIX_HOURS]: TimeWindow.ONE_HOUR * 6 * 60 * 1000,\n  [TimePeriod.ONE_DAY]: TimeWindow.ONE_DAY * 60 * 1000,\n  [TimePeriod.THREE_DAYS]: TimeWindow.ONE_DAY * 3 * 60 * 1000,\n  [TimePeriod.SEVEN_DAYS]: TimeWindow.ONE_DAY * 7 * 60 * 1000,\n  [TimePeriod.FOURTEEN_DAYS]: TimeWindow.ONE_DAY * 14 * 60 * 1000,\n};\n\nexport const SELECTOR_DEFAULT_PERIOD = TimePeriod.FOURTEEN_DAYS;\nexport const API_INTERVAL_POINTS_LIMIT = 10000;\nexport const API_INTERVAL_POINTS_MIN = 150;\n\nexport type TimePeriodType = {\n  display: React.ReactNode;\n  end: string;\n  label: string;\n  period: string;\n  start: string;\n  /**\n   * The start/end were chosen from the period and not the user\n   */\n  usingPeriod: boolean;\n  custom?: boolean;\n  utc?: boolean;\n};\n","import {t} from 'sentry/locale';\nimport {MEPAlertsQueryType} from 'sentry/views/alerts/wizard/options';\nimport type {SchemaFormConfig} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\n\nimport type {Incident} from '../../types';\n\nexport enum AlertRuleThresholdType {\n  ABOVE,\n  BELOW,\n}\n\nexport enum AlertRuleTriggerType {\n  CRITICAL = 'critical',\n  WARNING = 'warning',\n  RESOLVE = 'resolve',\n}\n\nexport enum AlertRuleComparisonType {\n  COUNT = 'count',\n  CHANGE = 'change',\n  PERCENT = 'percent',\n}\n\nexport enum Dataset {\n  ERRORS = 'events',\n  TRANSACTIONS = 'transactions',\n  /** Also used for performance alerts **/\n  GENERIC_METRICS = 'generic_metrics',\n  SESSIONS = 'sessions',\n  /** Also used for crash free alerts */\n  METRICS = 'metrics',\n}\n\nexport enum EventTypes {\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n  USER = 'user',\n  SESSION = 'session',\n}\n\nexport enum Datasource {\n  ERROR_DEFAULT = 'error_default',\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n}\n\n/**\n * This is not a real aggregate as crash-free sessions/users can be only calculated on frontend by comparing the count of sessions broken down by status\n * It is here nevertheless to shoehorn sessions dataset into existing alerts codebase\n * This will most likely be revised as we introduce the metrics dataset\n */\nexport enum SessionsAggregate {\n  CRASH_FREE_SESSIONS = 'percentage(sessions_crashed, sessions) AS _crash_rate_alert_aggregate',\n  CRASH_FREE_USERS = 'percentage(users_crashed, users) AS _crash_rate_alert_aggregate',\n}\n\nexport type UnsavedTrigger = {\n  actions: Action[];\n  alertThreshold: number | '' | null;\n  label: AlertRuleTriggerType;\n  // UnsavedTrigger can be a part of an Unsaved Alert Rule that does not have an\n  // id yet\n  alertRuleId?: string;\n};\n\nexport type ThresholdControlValue = {\n  /**\n   * Resolve threshold is optional, so it can be null\n   */\n  threshold: number | '' | null;\n  thresholdType: AlertRuleThresholdType;\n};\n\ntype SavedTrigger = Omit<UnsavedTrigger, 'actions'> & {\n  actions: Action[];\n  dateCreated: string;\n  id: string;\n};\n\nexport type Trigger = Partial<SavedTrigger> & UnsavedTrigger;\n\nexport type UnsavedMetricRule = {\n  aggregate: string;\n  dataset: Dataset;\n  environment: string | null;\n  projects: string[];\n  query: string;\n  resolveThreshold: number | '' | null;\n  thresholdPeriod: number | null;\n  thresholdType: AlertRuleThresholdType;\n  timeWindow: TimeWindow;\n  triggers: Trigger[];\n  comparisonDelta?: number | null;\n  eventTypes?: EventTypes[];\n  owner?: string | null;\n  queryType?: MEPAlertsQueryType | null;\n};\n\nexport interface SavedMetricRule extends UnsavedMetricRule {\n  dateCreated: string;\n  dateModified: string;\n  id: string;\n  name: string;\n  status: number;\n  createdBy?: {email: string; id: number; name: string} | null;\n  errors?: {detail: string}[];\n  /**\n   * Returned with the expand=latestIncident query parameter\n   */\n  latestIncident?: Incident | null;\n  originalAlertRuleId?: number | null;\n}\n\nexport type MetricRule = Partial<SavedMetricRule> & UnsavedMetricRule;\n\nexport enum TimePeriod {\n  SIX_HOURS = '6h',\n  ONE_DAY = '1d',\n  THREE_DAYS = '3d',\n  // Seven days is actually 10080m but we have a max of 10000 events\n  SEVEN_DAYS = '10000m',\n  FOURTEEN_DAYS = '14d',\n  THIRTY_DAYS = '30d',\n}\n\nexport enum TimeWindow {\n  ONE_MINUTE = 1,\n  FIVE_MINUTES = 5,\n  TEN_MINUTES = 10,\n  FIFTEEN_MINUTES = 15,\n  THIRTY_MINUTES = 30,\n  ONE_HOUR = 60,\n  TWO_HOURS = 120,\n  FOUR_HOURS = 240,\n  ONE_DAY = 1440,\n}\n\nexport enum ActionType {\n  EMAIL = 'email',\n  SLACK = 'slack',\n  PAGERDUTY = 'pagerduty',\n  MSTEAMS = 'msteams',\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const ActionLabel = {\n  // \\u200B is needed because Safari disregards autocomplete=\"off\". It's seeing \"Email\" and\n  // opening up the browser autocomplete for email. https://github.com/JedWatson/react-select/issues/3500\n  [ActionType.EMAIL]: t('Emai\\u200Bl'),\n  [ActionType.SLACK]: t('Slack'),\n  [ActionType.PAGERDUTY]: t('Pagerduty'),\n  [ActionType.MSTEAMS]: t('MS Teams'),\n  [ActionType.SENTRY_APP]: t('Notification'),\n};\n\nexport enum TargetType {\n  // A direct reference, like an email address, Slack channel, or PagerDuty service\n  SPECIFIC = 'specific',\n\n  // A specific user. This could be used to grab the user's email address.\n  USER = 'user',\n\n  // A specific team. This could be used to send an email to everyone associated with a team.\n  TEAM = 'team',\n\n  // A Sentry App instead of any of the above.\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const TargetLabel = {\n  [TargetType.USER]: t('Member'),\n  [TargetType.TEAM]: t('Team'),\n};\n\n/**\n * This is an available action template that is associated to a Trigger in a\n * Metric Alert Rule. They are defined by the available-actions API.\n */\nexport type MetricActionTemplate = {\n  /**\n   * See `TargetType`\n   */\n  allowedTargetTypes: TargetType[];\n\n  /**\n   * The integration type e.g. 'email'\n   */\n  type: ActionType;\n\n  /**\n   * Integration id for this `type`, should be passed to backend as `integrationId` when creating an action\n   */\n  integrationId?: number;\n\n  /**\n   * Name of the integration. This is a text field that differentiates integrations from the same provider from each other\n   */\n  integrationName?: string;\n\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options?: Array<{label: string; value: any}>;\n\n  /**\n   * SentryApp id for this `type`, should be passed to backend as `sentryAppId` when creating an action.\n   */\n  sentryAppId?: number;\n\n  sentryAppInstallationUuid?: string;\n  /**\n   * Name of the SentryApp. Like `integrationName`, this differentiates SentryApps from each other.\n   */\n  sentryAppName?: string;\n\n  /**\n   * Sentry App Alert Rule UI Component settings\n   */\n  settings?: SchemaFormConfig;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n\n/**\n * This is the user's configured action\n */\nexport type Action = UnsavedAction & Partial<SavedActionFields>;\n\ntype SavedActionFields = {\n  /**\n   * The id of the alert rule this action belongs to\n   */\n  alertRuleTriggerId: string;\n\n  /**\n   * date created\n   */\n  dateCreated: string;\n\n  /**\n   * A human readable description of the action generated by server\n   */\n  desc: string;\n\n  /**\n   * model id of the action\n   */\n  id: string;\n\n  /**\n   *  Could not fetch details from SentryApp. Show the rule but make it disabled.\n   */\n  disabled?: boolean;\n};\n\ntype UnsavedAction = {\n  /**\n   * An optional Slack channel or user id the user can input to avoid rate limiting issues.\n   */\n  inputChannelId: string | null;\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options: Array<{label: string; value: any}> | null;\n  /**\n   * How to identify the target. Can be email, slack channel, pagerduty service,\n   * user_id, team_id, SentryApp id, etc\n   */\n  targetIdentifier: string | null;\n\n  targetType: TargetType | null;\n\n  type: ActionType;\n  /** Used to maintain order of unsaved actions */\n  unsavedDateCreated: string;\n  unsavedId: string;\n\n  /**\n   * The id of the integration, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  integrationId?: number | null;\n\n  /**\n   * The id of the SentryApp, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  sentryAppId?: number | null;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n"],"names":["AreaSeries","BaseChart","AreaChart","series","stacked","colors","props","map","i","seriesName","data","otherSeriesProps","stack","undefined","name","value","lineStyle","color","opacity","width","areaStyle","animation","animationThreshold","animationDuration","Component","moment","qs","updateDateTime","DataZoomInside","DataZoomSlider","ToolBox","callIfFunction","getUtcDateString","getUtcToLocalDateObject","getDate","date","utc","format","HTML5_FMT","DATETIME_LOCAL_SECONDS","ZoomPropKeys","ChartZoom","constructor","currentPeriod","period","start","end","saveHistory","router","onZoom","usePageDate","startFormatted","endFormatted","history","push","zooming","newQuery","location","query","pageStart","pageEnd","pageStatsPeriod","stringify","pathname","saveCurrentPeriod","chart","onChartReady","evt","length","setPeriod","onRestore","model","getModel","startValue","endValue","_payload","batch","previousPeriod","pop","onDataZoom","_props","zoom","_componentsViews","find","c","_features","dataZoom","_isZoomActive","dispatchAction","type","key","dataZoomSelectActive","onFinished","componentDidUpdate","disabled","render","_utc","_start","_end","children","xAxisIndex","_router","_onZoom","_onRestore","_onChartReady","_onDataZoom","_onFinished","showSlider","chartZoomOptions","renderProps","isGroupedByDate","handleChartReady","showTimeInTooltip","toolBox","title","back","iconStyle","borderWidth","handleDataZoom","handleChartFinished","handleZoomRestore","DEFAULT","zoomOnMouseWheel","zoomLock","throttle","Array","isArray","realtime","showDetail","left","right","bottom","getFeatures","features","yAxisIndex","options","top","itemSize","z","feature","LineSeries","Fragment","space","KeyValueTable","KeyValueTableRow","keyName","commonStyles","theme","fontSizeMedium","p","overflowEllipsis","backgroundSecondary","Key","textColor","Value","subText","TimeRangeSelector","Panel","t","PageTimeRangeSelector","className","relative","defaultPeriod","DropdownDate","background","border","borderRadius","DropdownLabel","withRouter","AsyncComponent","HeaderTitleLegend","SectionHeading","PanelBody","PanelFooter","Placeholder","getDynamicText","AlertChart","prevProps","project","organization","id","remountComponent","getDefaultState","ruleFireHistory","getEndpoints","rule","slug","statsPeriod","renderChart","state","alert","count","emphasis","zoomRenderProps","minInterval","renderEmpty","loading","totalAlertsTriggered","reduce","acc","curr","fixed","toLocaleString","ChartHeader","ChartFooter","FooterHeader","FooterValue","StyledPanelBody","css","Count","DateTime","Link","Pagination","PanelTable","getMessage","getTitle","AlertRuleIssuesList","cursor","groupHistory","per_page","renderLoading","renderBody","groupHistoryPageLinks","group","issue","lastTriggered","message","environment","StyledPanelTable","isEmpty","AlignRight","StyledDateTime","TitleWrapper","MessageWrapper","PaginationWrapper","StyledPagination","pick","Breadcrumbs","Button","ButtonBar","IdBadge","Layout","LoadingError","LoadingIndicator","PageFiltersContainer","normalizeDateTimeParams","SentryDocumentTitle","IconCopy","IconEdit","trackAdvancedAnalyticsEvent","ALERT_DEFAULT_CHART_PERIOD","Sidebar","PAGE_QUERY_PARAMS","AlertRuleDetails","datetime","parser","setStateOnUrl","pageUtc","componentDidMount","params","rule_id","parseInt","ruleId","prevParams","currParams","orgId","projectId","reloadData","memberList","expand","allowError","error","status","projectSlug","getDataDatetime","utcString","allowEmptyPeriod","allowAbsoluteDatetime","allowAbsolutePageDatetime","nextState","duplicateLink","duplicateRuleId","createFromDuplicate","referrer","label","to","hasTooltip","tooltip","handleUpdateDatetime","teams","StyledPageTimeRangeSelector","RuleName","StyledLoadingError","ActorAvatar","TimeSince","IconChevron","tct","TextAction","TextCondition","Conditions","when","selector","conditions","actionMatch","condition","idx","filters","if","filterMatch","filter","time","then","actions","action","ownerId","owner","split","teamActor","dateCreated","createdBy","SidebarGroup","HeaderItem","Status","fontSizeLarge","StatusContainer","Step","StepContainer","StepContent","gray200","StepLead","ChevronContainer","Badge","purple300","white","fontSizeSmall","ConditionsBadge","surface100","Heading","noMargin","OverflowTableValue","AlertRuleComparisonType","comparisonType","PERCENT","comparisonInterval","interval","targetType","user","member","targetIdentifier","email","team","tm","replace","TimePeriod","TimeWindow","SELECTOR_RELATIVE_PERIODS","SIX_HOURS","ONE_DAY","THREE_DAYS","SEVEN_DAYS","TIME_OPTIONS","FOURTEEN_DAYS","TIME_WINDOWS","ONE_HOUR","SELECTOR_DEFAULT_PERIOD","API_INTERVAL_POINTS_LIMIT","API_INTERVAL_POINTS_MIN","AlertRuleThresholdType","AlertRuleTriggerType","Dataset","EventTypes","Datasource","SessionsAggregate","ActionType","ActionLabel","EMAIL","SLACK","PAGERDUTY","MSTEAMS","SENTRY_APP","TargetType","TargetLabel","USER","TEAM"],"sourceRoot":""}