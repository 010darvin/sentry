{"version":3,"file":"chunks/app_components_calendar_dateRangePicker_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAIA;;AAEA,MAAMC,qBAAqB,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,aACdD,+DAAK,CAAC,CAAD,CADS,sKAWHE,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,MAXV,iGAmBdF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQE,SAnBC,oEA2BdH,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQG,OA3BC,8CA+BdJ,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,MA/BC,kDAmCHF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,MAnCV,0GA6CTF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,MA7CJ,oCAiDTF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQI,KAjDJ,kmBAgGLP,+DAAK,CAAC,CAAD,CAhGA,2HA4GdE,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQE,SA5GC,oCA8GVH,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQK,aA9GH,sKA6HHN,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQM,MA7HV,6CAiIDP,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQE,SAjIZ,2CAqIFH,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQE,SArIX,0BAA3B;;AAyIA,iEAAeJ,qBAAf;;;;;;;;;;;;;;;;;;AChJA;AACA;AAEA;;AAUA,MAAMY,iBAAiB,GAAG,SAA1B;;AAEA,SAASC,gBAAT,CAA0BC,WAA1B,EAAoF;EAClF,OAAO,CAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAGF,iBAAH,CAAX,MAAqCG,SAA5C;AACD;;AAED,MAAMC,eAAe,GAAG,QAKI;EAAA,IALH;IACvBC,QAAQ,EAAEC,gBADa;IAEvBC,SAFuB;IAGvBC,OAHuB;IAIvB,GAAGC;EAJoB,CAKG;EAC1B,MAAMJ,QAAQ,GAAGR,kDAAW,CACzBK,WAAD,IAA+B;IAC7B,IAAI,CAACD,gBAAgB,CAACC,WAAD,CAArB,EAAoC;MAClC;IACD;;IAEDI,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAGJ,WAAW,CAACF,iBAAD,CAAd,CAAhB;EACD,CAPyB,EAQ1B,CAACM,gBAAD,CAR0B,CAA5B;EAWA,MAAMI,MAAe,GAAGZ,8CAAO,CAAC,MAAM;IACpC,OAAO,CAAC;MAACS,SAAD;MAAYC,OAAZ;MAAqBG,GAAG,EAAEX;IAA1B,CAAD,CAAP;EACD,CAF8B,EAE5B,CAACQ,OAAD,EAAUD,SAAV,CAF4B,CAA/B;EAIA,OACE,gEAAC,8DAAD;IAAA,UACE,gEAAC,uDAAD,OAAeE,KAAf;MAAsB,QAAQ,EAAEJ,QAAhC;MAA0C,MAAM,EAAEK;IAAlD;EADF,EADF;AAKD,CA1BD;;AAAMN;AA4BN,iEAAeA,eAAf","sources":["webpack:///./app/components/calendar/calendarStylesWrapper.tsx","webpack:///./app/components/calendar/dateRangePicker.tsx"],"sourcesContent":["import 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\n\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst CalendarStylesWrapper = styled('div')`\n  padding: ${space(3)};\n\n  .rdrCalendarWrapper:not(.rdrDateRangeWrapper) .rdrDayHovered .rdrDayNumber:after {\n    border: 0;\n  }\n\n  .rdrSelected,\n  .rdrInRange,\n  .rdrStartEdge,\n  .rdrEndEdge {\n    background-color: ${p => p.theme.active};\n  }\n\n  .rdrStartEdge + .rdrDayStartPreview {\n    background-color: transparent;\n  }\n\n  .rdrDayNumber span {\n    color: ${p => p.theme.textColor};\n  }\n\n  .rdrDayDisabled {\n    background: none;\n  }\n\n  .rdrDayDisabled span {\n    color: ${p => p.theme.subText};\n  }\n\n  .rdrDayToday .rdrDayNumber span {\n    color: ${p => p.theme.active};\n  }\n\n  .rdrDayNumber span:after {\n    background-color: ${p => p.theme.active};\n  }\n\n  .rdrDefinedRangesWrapper,\n  .rdrDateDisplayWrapper,\n  .rdrWeekDays {\n    display: none;\n  }\n\n  .rdrInRange {\n    background: ${p => p.theme.active};\n  }\n\n  .rdrDayInPreview {\n    background: ${p => p.theme.hover};\n  }\n\n  .rdrMonth {\n    width: 300px;\n    font-size: 1.2em;\n    padding: 0;\n  }\n\n  .rdrStartEdge {\n    border-top-left-radius: 1.14em;\n    border-bottom-left-radius: 1.14em;\n  }\n\n  .rdrEndEdge {\n    border-top-right-radius: 1.14em;\n    border-bottom-right-radius: 1.14em;\n  }\n\n  .rdrDayStartPreview,\n  .rdrDayEndPreview,\n  .rdrDayInPreview {\n    border: 0;\n    background: rgba(200, 200, 200, 0.3);\n  }\n\n  .rdrDayStartOfMonth,\n  .rdrDayStartOfWeek {\n    .rdrInRange {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n\n  .rdrDayEndOfMonth,\n  .rdrDayEndOfWeek {\n    .rdrInRange {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n\n  .rdrStartEdge.rdrEndEdge {\n    border-radius: 1.14em;\n  }\n\n  .rdrMonthAndYearWrapper {\n    padding-bottom: ${space(1)};\n    padding-top: 0;\n    height: 32px;\n  }\n\n  .rdrDay {\n    height: 2.5em;\n  }\n\n  .rdrMonthPicker select,\n  .rdrYearPicker select {\n    background: none;\n    color: ${p => p.theme.textColor};\n    font-weight: normal;\n    font-size: ${p => p.theme.fontSizeLarge};\n    padding: 0;\n  }\n\n  .rdrMonthsVertical {\n    align-items: center;\n  }\n\n  .rdrCalendarWrapper {\n    flex: 1;\n    background: none;\n  }\n\n  .rdrNextPrevButton {\n    background-color: transparent;\n    border: 1px solid ${p => p.theme.border};\n  }\n\n  .rdrPprevButton i {\n    border-right-color: ${p => p.theme.textColor};\n  }\n\n  .rdrNextButton i {\n    border-left-color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default CalendarStylesWrapper;\n","import {useCallback, useMemo} from 'react';\nimport {DateRange, DateRangeProps, Range, RangeKeyDict} from 'react-date-range';\n\nimport CalendarStylesWrapper from './calendarStylesWrapper';\n\nexport type DateRangePickerProps = Omit<DateRangeProps, 'ranges' | 'onChange'> & {\n  onChange: (range: Range) => void;\n  endDate?: Date;\n  startDate?: Date;\n};\n\ntype RangeSelection = {primary: Range};\n\nconst PRIMARY_RANGE_KEY = 'primary';\n\nfunction isRangeSelection(rangesByKey: RangeKeyDict): rangesByKey is RangeSelection {\n  return rangesByKey?.[PRIMARY_RANGE_KEY] !== undefined;\n}\n\nconst DateRangePicker = ({\n  onChange: incomingOnChange,\n  startDate,\n  endDate,\n  ...props\n}: DateRangePickerProps) => {\n  const onChange = useCallback(\n    (rangesByKey: RangeKeyDict) => {\n      if (!isRangeSelection(rangesByKey)) {\n        return;\n      }\n\n      incomingOnChange?.(rangesByKey[PRIMARY_RANGE_KEY]);\n    },\n    [incomingOnChange]\n  );\n\n  const ranges: Range[] = useMemo(() => {\n    return [{startDate, endDate, key: PRIMARY_RANGE_KEY}];\n  }, [endDate, startDate]);\n\n  return (\n    <CalendarStylesWrapper>\n      <DateRange {...props} onChange={onChange} ranges={ranges} />\n    </CalendarStylesWrapper>\n  );\n};\n\nexport default DateRangePicker;\n"],"names":["space","CalendarStylesWrapper","p","theme","active","textColor","subText","hover","fontSizeLarge","border","useCallback","useMemo","DateRange","PRIMARY_RANGE_KEY","isRangeSelection","rangesByKey","undefined","DateRangePicker","onChange","incomingOnChange","startDate","endDate","props","ranges","key"],"sourceRoot":""}