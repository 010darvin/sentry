{"version":3,"file":"chunks/app_components_featureBadge_tsx-app_components_modals_commandPalette_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/circleIndicator.tsx","webpack:///./app/components/featureBadge.tsx","webpack:///./app/components/modals/commandPalette.tsx","webpack:///./app/components/tagDeprecated.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Theme} from 'sentry/utils/theme';\n\nconst defaultProps = {\n  enabled: true,\n  size: 14,\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\n\ntype Props = {\n  color?: string;\n} & Partial<DefaultProps>;\n\nconst getBackgroundColor = (p: Props & {theme: Theme}) => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${p.enabled ? p.theme.success : p.theme.error};`;\n};\n\nconst getSize = (p: Props) => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nconst CircleIndicator = styled('div')<Props>`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n\nCircleIndicator.defaultProps = defaultProps;\n\nexport default CircleIndicator;\n","import {Fragment} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {captureException, withScope} from '@sentry/react';\nimport type {Severity} from '@sentry/types';\n\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport Tag from 'sentry/components/tagDeprecated';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype BadgeProps = {\n  type: 'alpha' | 'beta' | 'new';\n  expiresAt?: Date;\n  noTooltip?: boolean;\n  title?: string;\n  variant?: 'indicator' | 'badge';\n};\n\ntype Props = Omit<React.HTMLAttributes<HTMLDivElement>, keyof BadgeProps> & BadgeProps;\n\nconst defaultTitles = {\n  alpha: t('This feature is internal and available for QA purposes'),\n  beta: t('This feature is available for early adopters and may change'),\n  new: t('This feature is new! Try it out and let us know what you think'),\n};\n\nconst labels = {\n  alpha: t('alpha'),\n  beta: t('beta'),\n  new: t('new'),\n};\n\nfunction BaseFeatureBadge({\n  type,\n  variant = 'badge',\n  title,\n  noTooltip,\n  expiresAt,\n  ...props\n}: Props) {\n  const theme = useTheme();\n  if (expiresAt && expiresAt.valueOf() < Date.now()) {\n    // Only get 1% of events as we don't need many to know that a badge needs to be cleaned up.\n    if (Math.random() < 0.01) {\n      withScope(scope => {\n        scope.setTag('title', title);\n        scope.setTag('type', type);\n        scope.setLevel('warning' as Severity);\n        captureException(new Error('Expired Feature Badge'));\n      });\n    }\n    return null;\n  }\n\n  return (\n    <div {...props}>\n      <Tooltip title={title ?? defaultTitles[type]} disabled={noTooltip} position=\"right\">\n        <Fragment>\n          {variant === 'badge' && <StyledTag priority={type}>{labels[type]}</StyledTag>}\n          {variant === 'indicator' && (\n            <CircleIndicator color={theme.badge[type].indicatorColor} size={8} />\n          )}\n        </Fragment>\n      </Tooltip>\n    </div>\n  );\n}\n\nconst StyledTag = styled(Tag)`\n  padding: 3px ${space(0.75)};\n`;\n\nconst FeatureBadge = styled(BaseFeatureBadge)`\n  display: inline-flex;\n  align-items: center;\n  margin-left: ${space(0.75)};\n  position: relative;\n  top: -1px;\n`;\n\nexport default FeatureBadge;\n","import {useEffect} from 'react';\nimport {ClassNames, css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Input from 'sentry/components/input';\nimport {Search} from 'sentry/components/search';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {analytics} from 'sentry/utils/analytics';\n\nfunction CommandPalette({Body}: ModalRenderProps) {\n  const theme = useTheme();\n\n  useEffect(() => void analytics('omnisearch.open', {}), []);\n\n  return (\n    <Body>\n      <ClassNames>\n        {({css: injectedCss}) => (\n          <Search\n            entryPoint=\"command_palette\"\n            minSearch={1}\n            maxResults={10}\n            dropdownClassName={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.border};\n              `}\n            renderInput={({getInputProps}) => (\n              <InputWrapper>\n                <StyledInput\n                  autoFocus\n                  {...getInputProps({\n                    type: 'text',\n                    placeholder: t('Search for projects, teams, settings, etc...'),\n                  })}\n                />\n              </InputWrapper>\n            )}\n          />\n        )}\n      </ClassNames>\n    </Body>\n  );\n}\n\nexport default CommandPalette;\n\nexport const modalCss = css`\n  [role='document'] {\n    padding: 0;\n  }\n`;\n\nconst InputWrapper = styled('div')`\n  padding: ${space(0.25)};\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  padding: ${space(1)};\n  border-radius: 8px;\n\n  outline: none;\n  border: none;\n  box-shadow: none;\n\n  :focus,\n  :active,\n  :hover {\n    outline: none;\n    border: none;\n    box-shadow: none;\n  }\n`;\n","import {cloneElement, isValidElement} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = React.HTMLAttributes<HTMLDivElement> & {\n  border?: boolean;\n  icon?: string | React.ReactNode;\n  inline?: boolean;\n  priority?: keyof Theme['badge'] | keyof Theme['alert'];\n  size?: string;\n};\n\ntype StyleFuncProps = Props & {theme: Theme};\n\n/**\n * Get priority from alerts or badge styles\n */\nconst getPriority = (p: StyleFuncProps) => {\n  if (p.priority) {\n    return p.theme.alert[p.priority] ?? p.theme.badge[p.priority] ?? null;\n  }\n\n  return null;\n};\n\nconst getMarginLeft = (p: StyleFuncProps) =>\n  p.inline ? `margin-left: ${p.size === 'small' ? '0.25em' : '0.5em'};` : '';\n\nconst getBorder = (p: StyleFuncProps) =>\n  p.border ? `border: 1px solid ${getPriority(p)?.border ?? p.theme.border};` : '';\n\nconst Tag = styled(\n  ({\n    children,\n    icon,\n    inline: _inline,\n    priority: _priority,\n    size: _size,\n    border: _border,\n    ...props\n  }: Props) => (\n    <div {...props}>\n      {icon && (\n        <IconWrapper>\n          {isValidElement(icon) && cloneElement(icon, {size: 'xs'})}\n        </IconWrapper>\n      )}\n      {children}\n    </div>\n  )\n)`\n  display: inline-flex;\n  box-sizing: border-box;\n  padding: ${p => (p.size === 'small' ? '0.1em 0.4em 0.2em' : '0.35em 0.8em 0.4em')};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  line-height: 1;\n  color: ${p => (p.priority ? p.theme.background : p.theme.textColor)};\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  align-items: center;\n  border-radius: ${p => (p.size === 'small' ? '0.25em' : '2em')};\n  text-transform: lowercase;\n  font-weight: ${p => (p.size === 'small' ? 'bold' : 'normal')};\n  background: ${p => getPriority(p)?.background ?? p.theme.gray100};\n  ${p => getBorder(p)};\n  ${p => getMarginLeft(p)};\n`;\n\nconst IconWrapper = styled('span')`\n  margin-right: ${space(0.5)};\n`;\n\nexport default Tag;\n"],"names":["defaultProps","enabled","size","getBackgroundColor","p","color","theme","success","error","getSize","CircleIndicator","Fragment","useTheme","captureException","withScope","Tag","Tooltip","t","space","defaultTitles","alpha","beta","new","labels","BaseFeatureBadge","type","variant","title","noTooltip","expiresAt","props","valueOf","Date","now","Math","random","scope","setTag","setLevel","Error","badge","indicatorColor","StyledTag","FeatureBadge","useEffect","ClassNames","css","Input","Search","analytics","CommandPalette","Body","injectedCss","border","getInputProps","placeholder","modalCss","InputWrapper","StyledInput","cloneElement","isValidElement","getPriority","priority","alert","getMarginLeft","inline","getBorder","children","icon","_inline","_priority","_size","_border","fontSizeExtraSmall","background","textColor","gray100","IconWrapper"],"sourceRoot":""}