{"version":3,"file":"chunks/app_data_forms_projectIssueGrouping_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/projectIssueGrouping.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {GroupingConfigItem} from 'sentry/components/events/groupingInfo';\nimport {Field} from 'sentry/components/forms/type';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport marked from 'sentry/utils/marked';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/issue-grouping/';\n\nconst groupingConfigField: Field = {\n  name: 'groupingConfig',\n  type: 'select',\n  label: t('Grouping Config'),\n  saveOnBlur: false,\n  saveMessageAlertType: 'info',\n  saveMessage: t(\n    'Changing grouping config will apply to future events only (can take up to a minute).'\n  ),\n  selectionInfoFunction: args => {\n    const {groupingConfigs, value} = args;\n    const selection = groupingConfigs.find(({id}) => id === value);\n    const changelog = selection?.changelog || '';\n    if (!changelog) {\n      return null;\n    }\n    return (\n      <Changelog>\n        <ChangelogTitle>\n          {tct('New in version [version]', {version: selection.id})}:\n        </ChangelogTitle>\n        <div dangerouslySetInnerHTML={{__html: marked(changelog)}} />\n      </Changelog>\n    );\n  },\n  choices: ({groupingConfigs}) =>\n    groupingConfigs.map(({id, hidden}) => [\n      id.toString(),\n      <GroupingConfigItem key={id} isHidden={hidden}>\n        {id}\n      </GroupingConfigItem>,\n    ]),\n  help: t('Sets the grouping algorithm to be used for new events.'),\n  visible: ({features}) => features.has('set-grouping-config'),\n};\n\nexport const fields: Record<string, Field> = {\n  fingerprintingRules: {\n    name: 'fingerprintingRules',\n    type: 'string',\n    label: t('Fingerprint Rules'),\n    hideLabel: true,\n    placeholder: t(\n      'error.type:MyException -> fingerprint-value\\nstack.function:some_panic_function -> fingerprint-value'\n    ),\n    multiline: true,\n    monospace: true,\n    autosize: true,\n    inline: false,\n    maxRows: 20,\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t(\n      'Changing fingerprint rules will apply to future events only (can take up to a minute).'\n    ),\n    formatMessageValue: false,\n    help: () => (\n      <Fragment>\n        <RuleDescription>\n          {tct(\n            `This can be used to modify the fingerprint rules on the server with custom rules.\n        Rules follow the pattern [pattern]. To learn more about fingerprint rules, [docs:read the docs].`,\n            {\n              pattern: <code>matcher:glob -&gt; fingerprint, values</code>,\n              docs: (\n                <ExternalLink href=\"https://docs.sentry.io/product/data-management-settings/event-grouping/fingerprint-rules/\" />\n              ),\n            }\n          )}\n        </RuleDescription>\n        <RuleExample>\n          {`# force all errors of the same type to have the same fingerprint\nerror.type:DatabaseUnavailable -> system-down\n# force all memory allocation errors to be grouped together\nstack.function:malloc -> memory-allocation-error`}\n        </RuleExample>\n      </Fragment>\n    ),\n    visible: true,\n  },\n  groupingEnhancements: {\n    name: 'groupingEnhancements',\n    type: 'string',\n    label: t('Stack Trace Rules'),\n    hideLabel: true,\n    placeholder: t(\n      'stack.function:raise_an_exception ^-group\\nstack.function:namespace::* +app'\n    ),\n    multiline: true,\n    monospace: true,\n    autosize: true,\n    inline: false,\n    maxRows: 20,\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t(\n      'Changing stack trace rules will apply to future events only (can take up to a minute).'\n    ),\n    formatMessageValue: false,\n    help: () => (\n      <Fragment>\n        <RuleDescription>\n          {tct(\n            `This can be used to enhance the grouping algorithm with custom rules.\n        Rules follow the pattern [pattern]. To learn more about stack trace rules, [docs:read the docs].`,\n            {\n              pattern: <code>matcher:glob [v^]?[+-]flag</code>,\n              docs: (\n                <ExternalLink href=\"https://docs.sentry.io/product/data-management-settings/event-grouping/stack-trace-rules/\" />\n              ),\n            }\n          )}\n        </RuleDescription>\n        <RuleExample>\n          {`# remove all frames above a certain function from grouping\nstack.function:panic_handler ^-group\n# mark all functions following a prefix in-app\nstack.function:mylibrary_* +app`}\n        </RuleExample>\n      </Fragment>\n    ),\n    validate: () => [],\n    visible: true,\n  },\n  groupingConfig: groupingConfigField,\n  secondaryGroupingConfig: {\n    ...groupingConfigField,\n    name: 'secondaryGroupingConfig',\n    label: t('Fallback/Secondary Grouping Config'),\n    help: t(\n      'Sets the secondary grouping algorithm that should be run in addition to avoid creating too many new groups. Controlled by expiration date below.'\n    ),\n    saveMessage: t(\n      'Changing the secondary grouping strategy will affect how many new issues are created.'\n    ),\n  },\n  secondaryGroupingExpiry: {\n    name: 'secondaryGroupingExpiry',\n    type: 'number',\n    label: t('Expiration date of secondary grouping'),\n    help: t(\n      'If this UNIX timestamp is in the past, the secondary grouping configuration stops applying automatically.'\n    ),\n    saveOnBlur: false,\n    saveMessageAlertType: 'info',\n    saveMessage: t(\n      'Changing the expiration date will affect how many new issues are created.'\n    ),\n  },\n  groupingAutoUpdate: {\n    name: 'groupingAutoUpdate',\n    type: 'boolean',\n    label: t('Automatically Update Grouping'),\n    saveOnBlur: false,\n    help: t(\n      'When enabled projects will in the future automatically update to the latest grouping algorithm. Right now this setting does nothing.'\n    ),\n    saveMessage: ({value}) =>\n      value\n        ? t(\n            'Enabling automatic upgrading will take effect on the next incoming event once auto updating has been rolled out.'\n          )\n        : t(\n            'Disabling auto updates will cause you to no longer receive improvements to the grouping algorithm.'\n          ),\n  },\n};\n\nconst RuleDescription = styled('div')`\n  margin-bottom: ${space(1)};\n  margin-top: -${space(1)};\n  margin-right: 36px;\n`;\n\nconst RuleExample = styled('pre')`\n  margin-bottom: ${space(1)};\n  margin-right: 36px;\n`;\n\nconst Changelog = styled('div')`\n  position: relative;\n  top: -1px;\n  margin-bottom: -1px;\n  padding: ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  background: ${p => p.theme.backgroundSecondary};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  &:last-child {\n    border: 0;\n    border-bottom-left-radius: ${p => p.theme.borderRadius};\n    border-bottom-right-radius: ${p => p.theme.borderRadius};\n  }\n`;\n\nconst ChangelogTitle = styled('h3')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-bottom: ${space(0.75)} !important;\n`;\n"],"names":["Fragment","GroupingConfigItem","ExternalLink","t","tct","space","marked","route","groupingConfigField","name","type","label","saveOnBlur","saveMessageAlertType","saveMessage","selectionInfoFunction","args","groupingConfigs","value","selection","find","id","changelog","version","__html","choices","map","hidden","toString","help","visible","features","has","fields","fingerprintingRules","hideLabel","placeholder","multiline","monospace","autosize","inline","maxRows","formatMessageValue","pattern","docs","groupingEnhancements","validate","groupingConfig","secondaryGroupingConfig","secondaryGroupingExpiry","groupingAutoUpdate","RuleDescription","RuleExample","Changelog","p","theme","innerBorder","backgroundSecondary","fontSizeMedium","borderRadius","ChangelogTitle"],"sourceRoot":""}