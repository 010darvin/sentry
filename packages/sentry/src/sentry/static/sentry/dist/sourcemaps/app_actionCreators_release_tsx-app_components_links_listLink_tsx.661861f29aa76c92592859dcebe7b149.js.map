{"version":3,"file":"chunks/app_actionCreators_release_tsx-app_components_links_listLink_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/release.tsx","webpack:///./app/actions/releaseActions.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/stores/releaseStore.tsx"],"sourcesContent":["import * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport ReleaseActions from 'sentry/actions/releaseActions';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport ReleaseStore, {getReleaseStoreKey} from 'sentry/stores/releaseStore';\nimport {Deploy, Release, ReleaseStatus} from 'sentry/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n  projectSlug: string;\n  releaseVersion: string;\n};\n\nexport function getProjectRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/projects/${orgSlug}/${projectSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/`;\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRelease for the same\n  // release to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  ReleaseStore.state.releaseLoading[getReleaseStoreKey(projectSlug, releaseVersion)] =\n    true;\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getRelease-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function getReleaseDeploys(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/organizations/${orgSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/deploys/`;\n\n  // HACK(leedongwei): Same as above\n  ReleaseStore.state.deploysLoading[getReleaseStoreKey(projectSlug, releaseVersion)] =\n    true;\n  ReleaseActions.loadDeploys(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Deploy[]) => {\n      ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadDeploysError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getReleaseDeploys-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function archiveRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Archiving Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Archived,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully archived.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be archived.')\n      );\n      throw error;\n    });\n}\n\nexport function restoreRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Restoring Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Active,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully restored.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be restored.')\n      );\n      throw error;\n    });\n}\n","import {createActions} from 'reflux';\n\nconst ReleaseActions = createActions([\n  'loadRelease', // Singular as it loads 1 release\n  'loadReleaseError',\n  'loadReleaseSuccess',\n  'loadDeploys', // Plural as it loads all deploys related to a release\n  'loadDeploysError',\n  'loadDeploysSuccess',\n]);\n\nexport default ReleaseActions;\n","import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport OrganizationActions from 'sentry/actions/organizationActions';\nimport ReleaseActions from 'sentry/actions/releaseActions';\nimport {Deploy, Organization, Release} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ntype StoreRelease = Map<string, Release>;\ntype StoreDeploys = Map<string, Array<Deploy>>;\ntype StoreLoading = Map<string, boolean>;\ntype StoreError = Map<string, Error>;\n\ninterface ReleaseStoreDefinition extends StoreDefinition {\n  get(\n    projectSlug: string,\n    releaseVersion: string\n  ): {\n    deploys: Array<Deploy> | undefined;\n    deploysError: Error | undefined;\n    deploysLoading: boolean | undefined;\n    release: Release | undefined;\n    releaseError: Error | undefined;\n    releaseLoading: boolean | undefined;\n  };\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  state: {\n    deploys: StoreDeploys;\n    deploysError: StoreError;\n    deploysLoading: StoreLoading;\n    orgSlug: string | undefined;\n    release: StoreRelease;\n    releaseError: StoreError;\n    releaseLoading: StoreLoading;\n  };\n  updateOrganization(org: Organization): void;\n}\n\nexport const getReleaseStoreKey = (projectSlug: string, releaseVersion: string) =>\n  `${projectSlug}${releaseVersion}`;\n\nconst storeConfig: ReleaseStoreDefinition = {\n  state: {\n    orgSlug: undefined,\n    release: new Map() as StoreRelease,\n    releaseLoading: new Map() as StoreLoading,\n    releaseError: new Map() as StoreError,\n    deploys: new Map() as StoreDeploys,\n    deploysLoading: new Map() as StoreLoading,\n    deploysError: new Map() as StoreError,\n  },\n\n  listenables: ReleaseActions,\n  unsubscribeListeners: [],\n\n  init() {\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationActions.update, this.updateOrganization)\n    );\n    this.reset();\n  },\n\n  reset() {\n    this.state = {\n      orgSlug: undefined,\n      release: new Map() as StoreRelease,\n      releaseLoading: new Map() as StoreLoading,\n      releaseError: new Map() as StoreError,\n      deploys: new Map() as StoreDeploys,\n      deploysLoading: new Map() as StoreLoading,\n      deploysError: new Map() as StoreError,\n    };\n    this.trigger(this.state);\n  },\n\n  updateOrganization(org: Organization) {\n    this.reset();\n    this.state.orgSlug = org.slug;\n    this.trigger(this.state);\n  },\n\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: true,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {release, releaseLoading, releaseError, ...state} = this.state;\n    this.state = {\n      ...state,\n      release: {\n        ...release,\n        [releaseKey]: data,\n      },\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: true,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploys, deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploys: {\n        ...deploys,\n        [releaseKey]: data,\n      },\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  get(projectSlug: string, releaseVersion: string) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n\n    return {\n      release: this.state.release[releaseKey],\n      releaseLoading: this.state.releaseLoading[releaseKey],\n      releaseError: this.state.releaseError[releaseKey],\n      deploys: this.state.deploys[releaseKey],\n      deploysLoading: this.state.deploysLoading[releaseKey],\n      deploysError: this.state.deploysError[releaseKey],\n    };\n  },\n};\n\nconst ReleaseStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ReleaseStore;\n"],"names":["Sentry","addErrorMessage","addLoadingMessage","addSuccessMessage","ReleaseActions","t","ReleaseStore","getReleaseStoreKey","ReleaseStatus","getProjectRelease","api","params","orgSlug","projectSlug","releaseVersion","path","encodeURIComponent","state","releaseLoading","loadRelease","requestPromise","method","then","res","loadReleaseSuccess","catch","err","status","loadReleaseError","withScope","scope","setLevel","setFingerprint","captureException","getReleaseDeploys","deploysLoading","loadDeploys","loadDeploysSuccess","loadDeploysError","archiveRelease","data","Archived","projects","version","release","error","responseJSON","detail","restoreRelease","Active","createActions","Component","Link","RouterLink","withRouter","classNames","omit","qs","ListLink","_classNames","className","activeClassName","props","isActive","to","query","index","router","queryData","parse","undefined","target","pathname","render","children","disabled","carriedProps","getClassName","StyledLi","shouldForwardProp","prop","p","theme","createStore","OrganizationActions","makeSafeRefluxStore","storeConfig","Map","releaseError","deploys","deploysError","listenables","unsubscribeListeners","init","push","listenTo","update","updateOrganization","reset","trigger","org","slug","releaseKey","get"],"sourceRoot":""}