{"version":3,"file":"chunks/app_components_charts_eventsRequest_tsx-app_components_charts_worldMapChart_tsx-app_utils_dis-4cc9e7.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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,mBAAO,CAAC,sDAAY;;AAElC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvBA,eAAe,mBAAO,CAAC,wDAAa;AACpC,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvCA,mBAAmB,mBAAO,CAAC,gEAAiB;AAC5C,aAAa,mBAAO,CAAC,kDAAU;AAC/B,aAAa,mBAAO,CAAC,kDAAU;;AAE/B;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA","sources":["webpack:///./app/actionCreators/events.tsx","webpack:///./app/components/alertBadge.tsx","webpack:///./app/components/charts/components/visualMap.tsx","webpack:///./app/components/charts/errorPanel.tsx","webpack:///./app/components/charts/eventsRequest.tsx","webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/series/mapSeries.tsx","webpack:///./app/components/charts/stackedAreaChart.tsx","webpack:///./app/components/charts/transitionChart.tsx","webpack:///./app/components/charts/transparentLoadingMask.tsx","webpack:///./app/components/charts/worldMapChart.tsx","webpack:///./app/components/createAlertButton.tsx","webpack:///./app/components/discover/discoverFeature.tsx","webpack:///./app/components/discoverButton.tsx","webpack:///./app/components/globalAppStoreConnectUpdateAlert/index.tsx","webpack:///./app/components/globalAppStoreConnectUpdateAlert/updateAlert.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/components/projects/appStoreConnectContext.tsx","webpack:///./app/constants/notAvailableMessages.tsx","webpack:///./app/utils/appStoreValidationErrorMessage.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/utils/getPeriod.tsx","webpack:///./app/utils/performance/contexts/performanceEventViewContext.tsx","webpack:///./app/utils/performance/contexts/utils.tsx","webpack:///./app/utils/performance/vitals/constants.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/utils/sessions.tsx","webpack:///./app/views/alerts/rules/metric/types.tsx","webpack:///./app/views/alerts/types.tsx","webpack:///./app/views/alerts/wizard/options.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/projectDetail/charts/projectBaseEventsChart.tsx","webpack:///./app/views/projectDetail/charts/projectBaseSessionsChart.tsx","webpack:///./app/views/projectDetail/charts/projectErrorsBasicChart.tsx","webpack:///./app/views/projectDetail/charts/projectSessionsChartRequest.tsx","webpack:///./app/views/projectDetail/index.tsx","webpack:///./app/views/projectDetail/missingFeatureButtons/missingAlertsButtons.tsx","webpack:///./app/views/projectDetail/missingFeatureButtons/missingPerformanceButtons.tsx","webpack:///./app/views/projectDetail/projectCharts.tsx","webpack:///./app/views/projectDetail/projectDetail.tsx","webpack:///./app/views/projectDetail/projectFilters.tsx","webpack:///./app/views/projectDetail/projectIssues.tsx","webpack:///./app/views/projectDetail/projectLatestAlerts.tsx","webpack:///./app/views/projectDetail/projectLatestReleases.tsx","webpack:///./app/views/projectDetail/projectQuickLinks.tsx","webpack:///./app/views/projectDetail/projectScoreCards/projectApdexScoreCard.tsx","webpack:///./app/views/projectDetail/projectScoreCards/projectScoreCards.tsx","webpack:///./app/views/projectDetail/projectScoreCards/projectStabilityScoreCard.tsx","webpack:///./app/views/projectDetail/projectScoreCards/projectVelocityScoreCard.tsx","webpack:///./app/views/projectDetail/projectTeamAccess.tsx","webpack:///./app/views/projectDetail/styles.tsx","webpack:///./app/views/projectDetail/utils.tsx","webpack:///./app/views/releases/utils/sessionTerm.tsx","webpack:///../node_modules/lodash/_baseMean.js","webpack:///../node_modules/lodash/_baseSum.js","webpack:///../node_modules/lodash/mean.js","webpack:///../node_modules/lodash/negate.js","webpack:///../node_modules/lodash/omitBy.js"],"sourcesContent":["import {LocationDescriptor} from 'history';\nimport pick from 'lodash/pick';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {canIncludePreviousPeriod} from 'sentry/components/charts/utils';\nimport {\n  DateString,\n  EventsStats,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {LocationQuery} from 'sentry/utils/discover/eventView';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {PERFORMANCE_URL_PARAM} from 'sentry/utils/performance/constants';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\ntype Options = {\n  organization: OrganizationSummary;\n  partial: boolean;\n  comparisonDelta?: number;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  excludeOther?: boolean;\n  field?: string[];\n  generatePathname?: (org: OrganizationSummary) => string;\n  includePrevious?: boolean;\n  interval?: string;\n  limit?: number;\n  orderby?: string;\n  period?: string | null;\n  project?: Readonly<number[]>;\n  query?: string;\n  queryBatching?: QueryBatching;\n  queryExtras?: Record<string, string>;\n  referrer?: string;\n  start?: DateString;\n  team?: Readonly<string | string[]>;\n  topEvents?: number;\n  withoutZerofill?: boolean;\n  yAxis?: string | string[];\n};\n\n/**\n * Make requests to `events-stats` endpoint\n *\n * @param {Object} api API client instance\n * @param {Object} options Request parameters\n * @param {Object} options.organization Organization object\n * @param {Number[]} options.project List of project ids\n * @param {String[]} options.environment List of environments to query for\n * @param {Boolean} options.excludeOther Exclude the \"Other\" series when making a topEvents query\n * @param {String[]} options.team List of teams to query for\n * @param {String} options.period Time period to query for, in the format: <integer><units> where units are \"d\" or \"h\"\n * @param {String} options.interval Time interval to group results in, in the format: <integer><units> where units are \"d\", \"h\", \"m\", \"s\"\n * @param {Number} options.comparisonDelta Comparison delta for change alert event stats to include comparison stats\n * @param {Boolean} options.includePrevious Should request also return reqsults for previous period?\n * @param {Number} options.limit The number of rows to return\n * @param {String} options.query Search query\n * @param {QueryBatching} options.queryBatching A container for batching functions from a provider\n * @param {Record<string, string>} options.queryExtras A list of extra query parameters\n * @param {(org: OrganizationSummary) => string} options.generatePathname A function that returns an override for the pathname\n */\nexport const doEventsRequest = <IncludeAllArgsType extends boolean = false>(\n  api: Client,\n  {\n    organization,\n    project,\n    environment,\n    team,\n    period,\n    start,\n    end,\n    interval,\n    comparisonDelta,\n    includePrevious,\n    query,\n    yAxis,\n    field,\n    topEvents,\n    orderby,\n    partial,\n    withoutZerofill,\n    referrer,\n    queryBatching,\n    generatePathname,\n    queryExtras,\n    excludeOther,\n    includeAllArgs,\n  }: {includeAllArgs?: IncludeAllArgsType} & Options\n): IncludeAllArgsType extends true\n  ? Promise<\n      [EventsStats | MultiSeriesEventsStats, string | undefined, ResponseMeta | undefined]\n    >\n  : Promise<EventsStats | MultiSeriesEventsStats> => {\n  const pathname =\n    generatePathname?.(organization) ??\n    `/organizations/${organization.slug}/events-stats/`;\n\n  const shouldDoublePeriod = canIncludePreviousPeriod(includePrevious, period);\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      interval,\n      comparisonDelta,\n      project,\n      environment,\n      team,\n      query,\n      yAxis,\n      field,\n      topEvents,\n      orderby,\n      partial: partial ? '1' : undefined,\n      withoutZerofill: withoutZerofill ? '1' : undefined,\n      referrer: referrer ? referrer : 'api.organization-event-stats',\n      excludeOther: excludeOther ? '1' : undefined,\n    }).filter(([, value]) => typeof value !== 'undefined')\n  );\n\n  // Doubling period for absolute dates is not accurate unless starting and\n  // ending times are the same (at least for daily intervals). This is\n  // the tradeoff for now.\n  const periodObj = getPeriod({period, start, end}, {shouldDoublePeriod});\n\n  const queryObject = {\n    includeAllArgs,\n    query: {\n      ...urlQuery,\n      ...periodObj,\n      ...queryExtras,\n    },\n  };\n\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, pathname, queryObject);\n  }\n\n  return api.requestPromise<IncludeAllArgsType>(pathname, queryObject);\n};\n\nexport type EventQuery = {\n  field: string[];\n  query: string;\n  environment?: string[];\n  equation?: string[];\n  noPagination?: boolean;\n  per_page?: number;\n  project?: string | string[];\n  referrer?: string;\n  sort?: string | string[];\n  team?: string | string[];\n};\n\nexport type TagSegment = {\n  count: number;\n  name: string;\n  url: LocationDescriptor;\n  value: string;\n  isOther?: boolean;\n  key?: string;\n};\n\nexport type Tag = {\n  key: string;\n  topValues: Array<TagSegment>;\n};\n\n/**\n * Fetches tag facets for a query\n */\nexport function fetchTagFacets(\n  api: Client,\n  orgSlug: string,\n  query: EventQuery\n): Promise<Tag[]> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  return api.requestPromise(`/organizations/${orgSlug}/events-facets/`, {\n    query: queryOption,\n  });\n}\n\n/**\n * Fetches total count of events for a given query\n */\nexport function fetchTotalCount(\n  api: Client,\n  orgSlug: String,\n  query: EventQuery & LocationQuery\n): Promise<number> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  type Response = {\n    count: number;\n  };\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/events-meta/`, {\n      query: queryOption,\n    })\n    .then((res: Response) => res.count);\n}\n","import styled from '@emotion/styled';\n\nimport {\n  IconCheckmark,\n  IconDiamond,\n  IconExclamation,\n  IconFire,\n  IconIssues,\n} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Color} from 'sentry/utils/theme';\nimport {IncidentStatus} from 'sentry/views/alerts/types';\n\ntype Props = {\n  hideText?: boolean;\n  isIssue?: boolean;\n  status?: IncidentStatus;\n};\n\nfunction AlertBadge({status, hideText = false, isIssue}: Props) {\n  let statusText = t('Resolved');\n  let Icon = IconCheckmark;\n  let color: Color = 'green300';\n  if (isIssue) {\n    statusText = t('Issue');\n    Icon = IconIssues;\n    color = 'gray300';\n  } else if (status === IncidentStatus.CRITICAL) {\n    statusText = t('Critical');\n    Icon = IconFire;\n    color = 'red300';\n  } else if (status === IncidentStatus.WARNING) {\n    statusText = t('Warning');\n    Icon = IconExclamation;\n    color = 'yellow300';\n  }\n\n  return (\n    <Wrapper data-test-id=\"alert-badge\">\n      <AlertIconWrapper color={color} icon={Icon}>\n        <AlertIconBackground color={color} />\n        <Icon color=\"white\" />\n      </AlertIconWrapper>\n\n      {!hideText && <IncidentStatusValue color={color}>{statusText}</IncidentStatusValue>}\n    </Wrapper>\n  );\n}\n\nexport default AlertBadge;\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst AlertIconWrapper = styled('div')<{color: Color; icon: React.ReactNode}>`\n  width: 36px;\n  height: 36px;\n  position: relative;\n\n  svg:last-child {\n    width: ${p => (p.icon === IconIssues ? '13px' : '16px')};\n    z-index: 2;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n  }\n`;\n\nconst AlertIconBackground = styled(IconDiamond)<{color: Color}>`\n  width: 36px;\n  height: 36px;\n`;\n\nconst IncidentStatusValue = styled('div')`\n  margin-left: ${space(1)};\n`;\n","import 'echarts/lib/component/visualMap';\n\nimport type {VisualMapComponentOption} from 'echarts';\n\nexport default function VisualMap(\n  visualMap: VisualMapComponentOption\n): VisualMapComponentOption {\n  return visualMap;\n}\n","import styled from '@emotion/styled';\n\nconst ErrorPanel = styled('div')<{height?: string}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height || '200px'};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nexport default ErrorPanel;\n","import {PureComponent} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omitBy from 'lodash/omitBy';\n\nimport {doEventsRequest} from 'sentry/actionCreators/events';\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\nimport {\n  canIncludePreviousPeriod,\n  getPreviousSeriesName,\n  isMultiSeriesStats,\n} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {\n  DateString,\n  EventsStats,\n  EventsStatsData,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport {stripEquationPrefix} from 'sentry/utils/discover/fields';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\nexport type TimeSeriesData = {\n  allTimeseriesData?: EventsStatsData;\n  comparisonTimeseriesData?: Series[];\n  originalPreviousTimeseriesData?: EventsStatsData | null;\n  originalTimeseriesData?: EventsStatsData;\n  previousTimeseriesData?: Series[] | null;\n  timeAggregatedData?: Series | {};\n  timeframe?: {end: number; start: number};\n  // timeseries data\n  timeseriesData?: Series[];\n  timeseriesTotals?: {count: number};\n};\n\ntype LoadingStatus = {\n  /**\n   * Whether there was an error retrieving data\n   */\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  errorMessage?: string;\n};\n\n// Can hold additional data from the root an events stat object (eg. start, end, order, isMetricsData).\ninterface AdditionalSeriesInfo {\n  isMetricsData?: boolean;\n}\n\nexport type RenderProps = LoadingStatus &\n  TimeSeriesData & {\n    results?: Series[]; // Chart with multiple series.\n    seriesAdditionalInfo?: Record<string, AdditionalSeriesInfo>;\n  };\n\ntype DefaultProps = {\n  /**\n   * Include data for previous period\n   */\n  includePrevious: boolean;\n  /**\n   * Transform the response data to be something ingestible by charts\n   */\n  includeTransformedData: boolean;\n  /**\n   * Interval to group results in\n   *\n   * e.g. 1d, 1h, 1m, 1s\n   */\n  interval: string;\n  /**\n   * number of rows to return\n   */\n  limit: number;\n  /**\n   * The query string to search events by\n   */\n  query: string;\n  /**\n   * Time delta for comparing intervals of alert metrics, in seconds\n   */\n  comparisonDelta?: number;\n  /**\n   * Absolute end date for query\n   */\n  end?: DateString;\n  /**\n   * Relative time period for query.\n   *\n   * Use `start` and `end` for absolute dates.\n   *\n   * e.g. 24h, 7d, 30d\n   */\n  period?: string | null;\n  /**\n   * Absolute start date for query\n   */\n  start?: DateString;\n};\n\ntype EventsRequestPartialProps = {\n  /**\n   * API client instance\n   */\n  api: Client;\n  children: (renderProps: RenderProps) => React.ReactNode;\n  organization: OrganizationSummary;\n  /**\n   * Whether or not to include the last partial bucket. This happens for example when the\n   * current time is 11:26 and the last bucket ranges from 11:25-11:30. This means that\n   * the last bucket contains 1 minute worth of data while the rest contains 5 minutes.\n   *\n   * This flag indicates whether or not this last bucket should be included in the result.\n   */\n  partial: boolean;\n  /**\n   * Discover needs confirmation to run >30 day >10 project queries,\n   * optional and when not passed confirmation is not required.\n   */\n  confirmedQuery?: boolean;\n  /**\n   * Name used for display current series dataset tooltip\n   */\n  currentSeriesNames?: string[];\n  /**\n   * Optional callback to further process raw events request response data\n   */\n  dataLoadedCallback?: (any: EventsStats | MultiSeriesEventsStats | null) => void;\n  /**\n   * List of environments to query\n   */\n  environment?: Readonly<string[]>;\n  /**\n   * Is query out of retention\n   */\n  expired?: boolean;\n  /**\n   * List of fields to group with when doing a topEvents request.\n   */\n  field?: string[];\n  /**\n   * Allows overriding the pathname.\n   */\n  generatePathname?: (org: OrganizationSummary) => string;\n  /**\n   * Hide error toast (used for pages which also query eventsV2). Stops error appearing as a toast.\n   */\n  hideError?: boolean;\n  /**\n   * Initial loading state\n   */\n  loading?: boolean;\n  /**\n   * Query name used for displaying error toast if it is out of retention\n   */\n  name?: string;\n  /**\n   * A way to control error if error handling is not owned by the toast.\n   */\n  onError?: (error: string) => void;\n  /**\n   * How to order results when getting top events.\n   */\n  orderby?: string;\n  previousSeriesNames?: string[];\n  /**\n   * List of project ids to query\n   */\n  project?: Readonly<number[]>;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * A unique name for what's triggering this request, see organization_events_stats for an allowlist\n   */\n  referrer?: string;\n  /**\n   * Should loading be shown.\n   */\n  showLoading?: boolean;\n  /**\n   * List of team ids to query\n   */\n  team?: Readonly<string | string[]>;\n  /**\n   * The number of top results to get. When set a multi-series result will be returned\n   * in the `results` child render function.\n   */\n  topEvents?: number;\n  /**\n   * Whether or not to zerofill results\n   */\n  withoutZerofill?: boolean;\n  /**\n   * The yAxis being plotted. If multiple yAxis are requested,\n   * the child render function will be called with `results`\n   */\n  yAxis?: string | string[];\n};\n\ntype TimeAggregationProps =\n  | {includeTimeAggregation: true; timeAggregationSeriesName: string}\n  | {includeTimeAggregation?: false; timeAggregationSeriesName?: undefined};\n\nexport type EventsRequestProps = DefaultProps &\n  TimeAggregationProps &\n  EventsRequestPartialProps;\n\ntype EventsRequestState = {\n  errored: boolean;\n  fetchedWithPrevious: boolean;\n  reloading: boolean;\n  timeseriesData: null | EventsStats | MultiSeriesEventsStats;\n  errorMessage?: string;\n};\n\nconst propNamesToIgnore = [\n  'api',\n  'children',\n  'organization',\n  'loading',\n  'queryBatching',\n  'generatePathname',\n];\nconst omitIgnoredProps = (props: EventsRequestProps) =>\n  omitBy(props, (_value, key) => propNamesToIgnore.includes(key));\n\nclass EventsRequest extends PureComponent<EventsRequestProps, EventsRequestState> {\n  static defaultProps: DefaultProps = {\n    period: undefined,\n    start: null,\n    end: null,\n    interval: '1d',\n    comparisonDelta: undefined,\n    limit: 15,\n    query: '',\n    includePrevious: true,\n    includeTransformedData: true,\n  };\n\n  state: EventsRequestState = {\n    reloading: !!this.props.loading,\n    errored: false,\n    timeseriesData: null,\n    fetchedWithPrevious: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: EventsRequestProps) {\n    if (isEqual(omitIgnoredProps(prevProps), omitIgnoredProps(this.props))) {\n      return;\n    }\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  private unmounting: boolean = false;\n\n  fetchData = async () => {\n    const {api, confirmedQuery, onError, expired, name, hideError, ...props} = this.props;\n    let timeseriesData: EventsStats | MultiSeriesEventsStats | null = null;\n\n    if (confirmedQuery === false) {\n      return;\n    }\n\n    this.setState(state => ({\n      reloading: state.timeseriesData !== null,\n      errored: false,\n      errorMessage: undefined,\n    }));\n\n    let errorMessage;\n    if (expired) {\n      errorMessage = t(\n        '%s has an invalid date range. Please try a more recent date range.',\n        name\n      );\n      addErrorMessage(errorMessage, {append: true});\n\n      this.setState({\n        errored: true,\n        errorMessage,\n      });\n    } else {\n      try {\n        api.clear();\n        timeseriesData = await doEventsRequest(api, props);\n      } catch (resp) {\n        if (resp && resp.responseJSON && resp.responseJSON.detail) {\n          errorMessage = resp.responseJSON.detail;\n        } else {\n          errorMessage = t('Error loading chart data');\n        }\n        if (!hideError) {\n          addErrorMessage(errorMessage);\n        }\n        if (onError) {\n          onError(errorMessage);\n        }\n        this.setState({\n          errored: true,\n          errorMessage,\n        });\n      }\n    }\n\n    if (this.unmounting) {\n      return;\n    }\n\n    this.setState({\n      reloading: false,\n      timeseriesData,\n      fetchedWithPrevious: props.includePrevious,\n    });\n    if (props.dataLoadedCallback) {\n      props.dataLoadedCallback(timeseriesData);\n    }\n  };\n\n  /**\n   * Retrieves dataset for the current period (since data can potentially\n   * contain previous period's data), as well as the previous period if\n   * possible.\n   *\n   * Returns `null` if data does not exist\n   */\n  getData = (\n    data: EventsStatsData\n  ): {current: EventsStatsData; previous: EventsStatsData | null} => {\n    const {fetchedWithPrevious} = this.state;\n    const {period, includePrevious} = this.props;\n\n    const hasPreviousPeriod =\n      fetchedWithPrevious || canIncludePreviousPeriod(includePrevious, period);\n    // Take the floor just in case, but data should always be divisible by 2\n    const dataMiddleIndex = Math.floor(data.length / 2);\n    return {\n      current: hasPreviousPeriod ? data.slice(dataMiddleIndex) : data,\n      previous: hasPreviousPeriod ? data.slice(0, dataMiddleIndex) : null,\n    };\n  };\n\n  // This aggregates all values per `timestamp`\n  calculateTotalsPerTimestamp(\n    data: EventsStatsData,\n    getName: (\n      timestamp: number,\n      countArray: {count: number}[],\n      i: number\n    ) => number = timestamp => timestamp * 1000\n  ): SeriesDataUnit[] {\n    return data.map(([timestamp, countArray], i) => ({\n      name: getName(timestamp, countArray, i),\n      value: countArray.reduce((acc, {count}) => acc + count, 0),\n    }));\n  }\n\n  /**\n   * Get previous period data, but transform timestamps so that data fits unto\n   * the current period's data axis\n   */\n  transformPreviousPeriodData(\n    current: EventsStatsData,\n    previous: EventsStatsData | null,\n    seriesName?: string\n  ): Series | null {\n    // Need the current period data array so we can take the timestamp\n    // so we can be sure the data lines up\n    if (!previous) {\n      return null;\n    }\n\n    return {\n      seriesName: seriesName ?? 'Previous',\n      data: this.calculateTotalsPerTimestamp(\n        previous,\n        (_timestamp, _countArray, i) => current[i][0] * 1000\n      ),\n      stack: 'previous',\n    };\n  }\n\n  /**\n   * Aggregate all counts for each time stamp\n   */\n  transformAggregatedTimeseries(data: EventsStatsData, seriesName: string = ''): Series {\n    return {\n      seriesName,\n      data: this.calculateTotalsPerTimestamp(data),\n    };\n  }\n\n  /**\n   * Transforms query response into timeseries data to be used in a chart\n   */\n  transformTimeseriesData(data: EventsStatsData, seriesName?: string): Series[] {\n    return [\n      {\n        seriesName: seriesName || 'Current',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce((acc, {count}) => acc + count, 0),\n        })),\n      },\n    ];\n  }\n\n  /**\n   * Transforms comparisonCount in query response into timeseries data to be used in a comparison chart for change alerts\n   */\n  transformComparisonTimeseriesData(data: EventsStatsData): Series[] {\n    return [\n      {\n        seriesName: 'comparisonCount()',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce(\n            (acc, {comparisonCount}) => acc + (comparisonCount ?? 0),\n            0\n          ),\n        })),\n      },\n    ];\n  }\n\n  processData(response: EventsStats, seriesIndex: number = 0, seriesName?: string) {\n    const {data, isMetricsData, totals} = response;\n    const {\n      includeTransformedData,\n      includeTimeAggregation,\n      timeAggregationSeriesName,\n      currentSeriesNames,\n      previousSeriesNames,\n      comparisonDelta,\n    } = this.props;\n    const {current, previous} = this.getData(data);\n    const transformedData = includeTransformedData\n      ? this.transformTimeseriesData(\n          current,\n          seriesName ?? currentSeriesNames?.[seriesIndex]\n        )\n      : [];\n    const transformedComparisonData =\n      includeTransformedData && comparisonDelta\n        ? this.transformComparisonTimeseriesData(current)\n        : [];\n    const previousData = includeTransformedData\n      ? this.transformPreviousPeriodData(\n          current,\n          previous,\n          (seriesName ? getPreviousSeriesName(seriesName) : undefined) ??\n            previousSeriesNames?.[seriesIndex]\n        )\n      : null;\n    const timeAggregatedData = includeTimeAggregation\n      ? this.transformAggregatedTimeseries(current, timeAggregationSeriesName || '')\n      : {};\n    const timeframe =\n      response.start && response.end\n        ? !previous\n          ? {\n              start: response.start * 1000,\n              end: response.end * 1000,\n            }\n          : {\n              // Find the midpoint of start & end since previous includes 2x data\n              start: (response.start + response.end) * 500,\n              end: response.end * 1000,\n            }\n        : undefined;\n\n    const processedData = {\n      data: transformedData,\n      comparisonData: transformedComparisonData,\n      allData: data,\n      originalData: current,\n      totals,\n      isMetricsData,\n      originalPreviousData: previous,\n      previousData,\n      timeAggregatedData,\n      timeframe,\n    };\n\n    return processedData;\n  }\n\n  render() {\n    const {children, showLoading, ...props} = this.props;\n    const {topEvents} = this.props;\n    const {timeseriesData, reloading, errored, errorMessage} = this.state;\n    // Is \"loading\" if data is null\n    const loading = this.props.loading || timeseriesData === null;\n\n    if (showLoading && loading) {\n      return <LoadingPanel data-test-id=\"events-request-loading\" />;\n    }\n    if (isMultiSeriesStats(timeseriesData, defined(topEvents))) {\n      // Convert multi-series results into chartable series. Multi series results\n      // are created when multiple yAxis are used or a topEvents request is made.\n      // Convert the timeseries data into a multi-series result set.\n      // As the server will have replied with a map like:\n      // {[titleString: string]: EventsStats}\n      let timeframe: {end: number; start: number} | undefined = undefined;\n      const seriesAdditionalInfo: Record<string, AdditionalSeriesInfo> = {};\n      const sortedTimeseriesData = Object.keys(timeseriesData)\n        .map(\n          (\n            seriesName: string,\n            index: number\n          ): [number, Series, Series | null, AdditionalSeriesInfo] => {\n            const seriesData: EventsStats = timeseriesData[seriesName];\n            const processedData = this.processData(\n              seriesData,\n              index,\n              stripEquationPrefix(seriesName)\n            );\n            if (!timeframe) {\n              timeframe = processedData.timeframe;\n            }\n            if (processedData.isMetricsData) {\n              seriesAdditionalInfo[seriesName] = {\n                isMetricsData: processedData.isMetricsData,\n              };\n            }\n            return [\n              seriesData.order || 0,\n              processedData.data[0],\n              processedData.previousData,\n              {isMetricsData: processedData.isMetricsData},\n            ];\n          }\n        )\n        .sort((a, b) => a[0] - b[0]);\n      const results: Series[] = sortedTimeseriesData.map(item => {\n        return item[1];\n      });\n      const previousTimeseriesData: Series[] | undefined = sortedTimeseriesData.some(\n        item => item[2] === null\n      )\n        ? undefined\n        : sortedTimeseriesData.map(item => {\n            return item[2] as Series;\n          });\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        results,\n        timeframe,\n        previousTimeseriesData,\n        seriesAdditionalInfo,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    if (timeseriesData) {\n      const {\n        data: transformedTimeseriesData,\n        comparisonData: transformedComparisonTimeseriesData,\n        allData: allTimeseriesData,\n        originalData: originalTimeseriesData,\n        totals: timeseriesTotals,\n        originalPreviousData: originalPreviousTimeseriesData,\n        previousData: previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        isMetricsData,\n      } = this.processData(timeseriesData);\n\n      const seriesAdditionalInfo = {\n        [this.props.currentSeriesNames?.[0] ?? 'current']: {isMetricsData},\n      };\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        // meta data,\n        seriesAdditionalInfo,\n        // timeseries data\n        timeseriesData: transformedTimeseriesData,\n        comparisonTimeseriesData: transformedComparisonTimeseriesData,\n        allTimeseriesData,\n        originalTimeseriesData,\n        timeseriesTotals,\n        originalPreviousTimeseriesData,\n        previousTimeseriesData: previousTimeseriesData\n          ? [previousTimeseriesData]\n          : previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    return children({\n      loading,\n      reloading,\n      errored,\n      errorMessage,\n      ...props,\n    });\n  }\n}\nexport default EventsRequest;\n","import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type LineChartSeries = Series &\n  Omit<LineSeriesOption, 'data' | 'name'> & {\n    dataArray?: LineSeriesOption['data'];\n  };\n\nexport interface LineChartProps extends Omit<ChartProps, 'series'> {\n  series: LineChartSeries[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import 'echarts/lib/chart/map';\n\nimport type {MapSeriesOption} from 'echarts';\n\nexport default function MapSeries(props: MapSeriesOption = {map: ''}): MapSeriesOption {\n  return {\n    roam: true,\n    ...props,\n    emphasis: {\n      label: {show: false},\n      ...props.emphasis,\n    },\n    type: 'map',\n  };\n}\n","import {Component} from 'react';\n\nimport {AreaChart} from 'sentry/components/charts/areaChart';\n\ntype AreaChartProps = React.ComponentProps<typeof AreaChart>;\n\ntype Props = Omit<AreaChartProps, 'stacked' | 'ref'>;\n\nclass StackedAreaChart extends Component<Props> {\n  render() {\n    return <AreaChart tooltip={{filter: val => val > 0}} {...this.props} stacked />;\n  }\n}\n\nexport default StackedAreaChart;\n","import {Component, Fragment} from 'react';\n\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\n\nconst defaultProps = {\n  height: '200px',\n};\n\ntype Props = {\n  loading: boolean;\n  reloading: boolean;\n} & typeof defaultProps;\n\ntype State = {\n  key: number;\n  prevLoading: boolean;\n  prevReloading: boolean;\n};\n\nclass TransitionChart extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    prevReloading: this.props.reloading,\n    prevLoading: this.props.loading,\n    key: 1,\n  };\n\n  static getDerivedStateFromProps(props: Readonly<Props>, state: State) {\n    // Transitions are controlled using variables called:\n    // - loading and,\n    // - reloading (also called pending in other apps)\n    //\n    // This component remounts the chart to ensure the stable transition\n    // from one dataset to the next.\n\n    const prevReloading = state.prevReloading;\n    const nextReloading = props.reloading;\n\n    const prevLoading = state.prevLoading;\n    const nextLoading = props.loading;\n\n    // whenever loading changes, we explicitly remount the children by updating\n    // the key prop; regardless of what state reloading is in\n    if (prevLoading !== nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // invariant: prevLoading === nextLoading\n\n    // if loading is true, and hasn't changed from the previous re-render,\n    // do not remount the children.\n    if (nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key,\n      };\n    }\n\n    // invariant: loading is false\n\n    // whenever the chart is transitioning from the reloading (pending) state to a non-loading state,\n    // remount the children\n    if (prevReloading && !nextReloading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // do not remount the children in these remaining cases:\n    // !prevReloading && !nextReloading (re-render with no prop change)\n    // prevReloading && nextReloading (re-render with no prop change)\n    // !prevReloading && nextReloading (from loaded to pending state)\n\n    return {\n      prevReloading: nextReloading,\n      prevLoading: nextLoading,\n      key: state.key,\n    };\n  }\n\n  render() {\n    const {height, loading, reloading} = this.props;\n\n    if (loading && !reloading) {\n      return <LoadingPanel height={height} data-test-id=\"events-request-loading\" />;\n    }\n\n    // We make use of the key prop to explicitly remount the children\n    // https://reactjs.org/docs/lists-and-keys.html#keys\n    return <Fragment key={String(this.state.key)}>{this.props.children}</Fragment>;\n  }\n}\n\nexport default TransitionChart;\n","import styled from '@emotion/styled';\n\nimport LoadingMask, {LoadingMaskProps} from 'sentry/components/loadingMask';\n\ninterface TransparentLoadingMaskProps extends LoadingMaskProps {\n  visible: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TransparentLoadingMask = styled(\n  ({className, visible, children, ...props}: TransparentLoadingMaskProps) => {\n    const other = visible ? {...props, 'data-test-id': 'loading-placeholder'} : props;\n    return (\n      <LoadingMask className={className} {...other}>\n        {children}\n      </LoadingMask>\n    );\n  }\n)<TransparentLoadingMaskProps>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nexport default TransparentLoadingMask;\n","import {useEffect, useState} from 'react';\nimport {useTheme} from '@emotion/react';\nimport type {MapSeriesOption, TooltipComponentOption} from 'echarts';\nimport * as echarts from 'echarts/core';\nimport max from 'lodash/max';\n\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\n\nimport VisualMap from './components/visualMap';\nimport MapSeries from './series/mapSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\ntype MapChartSeriesDataUnit = Omit<SeriesDataUnit, 'name' | 'itemStyle'> & {\n  // Docs for map itemStyle differ from Series data unit. See https://echarts.apache.org/en/option.html#series-map.data.itemStyle\n  itemStyle?: MapSeriesOption['itemStyle'];\n  name?: string;\n};\n\ntype MapChartSeries = Omit<Series, 'data'> & {\n  data: MapChartSeriesDataUnit[];\n};\n\nexport interface WorldMapChartProps extends Omit<ChartProps, 'series'> {\n  series: MapChartSeries[];\n  fromDiscover?: boolean;\n  fromDiscoverQueryList?: boolean;\n  seriesOptions?: MapSeriesOption;\n}\n\ntype JSONResult = Record<string, any>;\n\ntype State = {\n  codeToCountryMap: JSONResult | null;\n  countryToCodeMap: JSONResult | null;\n  map: JSONResult | null;\n};\n\nconst DEFAULT_ZOOM = 1.3;\nconst DISCOVER_ZOOM = 1.1;\nconst DISCOVER_QUERY_LIST_ZOOM = 0.9;\nconst DEFAULT_CENTER_X = 10.97;\nconst DISCOVER_QUERY_LIST_CENTER_Y = -12;\nconst DEFAULT_CENTER_Y = 9.71;\n\nexport function WorldMapChart({\n  series,\n  seriesOptions,\n  fromDiscover,\n  fromDiscoverQueryList,\n  ...props\n}: WorldMapChartProps) {\n  const theme = useTheme();\n  const [state, setState] = useState<State>(() => ({\n    countryToCodeMap: null,\n    map: null,\n    codeToCountryMap: null,\n  }));\n\n  useEffect(() => {\n    let unmounted = false;\n\n    if (!unmounted) {\n      loadWorldMap();\n    }\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  async function loadWorldMap() {\n    try {\n      const [countryCodesMap, world] = await Promise.all([\n        import('sentry/data/countryCodesMap'),\n        import('sentry/data/world.json'),\n      ]);\n\n      const countryToCodeMap = countryCodesMap.default;\n      const worldMap = world.default;\n\n      // Echarts not available in tests\n      echarts.registerMap?.('sentryWorld', worldMap as any);\n\n      const codeToCountryMap: Record<string, string> = {};\n\n      for (const country in worldMap) {\n        codeToCountryMap[countryToCodeMap[country]] = country;\n      }\n\n      setState({\n        countryToCodeMap,\n        map: worldMap,\n        codeToCountryMap,\n      });\n    } catch {\n      // do nothing\n    }\n  }\n\n  if (state.countryToCodeMap === null || state.map === null) {\n    return null;\n  }\n\n  const processedSeries = series.map(({seriesName, data, ...options}) =>\n    MapSeries({\n      ...seriesOptions,\n      ...options,\n      map: 'sentryWorld',\n      name: seriesName,\n      nameMap: state.countryToCodeMap ?? undefined,\n      aspectScale: 0.85,\n      zoom: fromDiscover\n        ? DISCOVER_ZOOM\n        : fromDiscoverQueryList\n        ? DISCOVER_QUERY_LIST_ZOOM\n        : DEFAULT_ZOOM,\n      center: [\n        DEFAULT_CENTER_X,\n        fromDiscoverQueryList ? DISCOVER_QUERY_LIST_CENTER_Y : DEFAULT_CENTER_Y,\n      ],\n      itemStyle: {\n        areaColor: theme.gray200,\n        borderColor: theme.backgroundSecondary,\n      },\n      emphasis: {\n        itemStyle: {\n          areaColor: theme.pink300,\n        },\n        label: {\n          show: false,\n        },\n      },\n      data,\n      silent: fromDiscoverQueryList,\n      roam: !fromDiscoverQueryList,\n    })\n  );\n\n  // TODO(billy):\n  // For absolute values, we want min/max to based on min/max of series\n  // Otherwise it should be 0-100\n  const maxValue = max(series.map(({data}) => max(data.map(({value}) => value)))) || 1;\n\n  const tooltipFormatter: TooltipComponentOption['formatter'] = (format: any) => {\n    const {marker, name, value} = Array.isArray(format) ? format[0] : format;\n    // If value is NaN, don't show anything because we won't have a country code either\n    if (isNaN(value as number)) {\n      return '';\n    }\n\n    // `value` should be a number\n    const formattedValue = typeof value === 'number' ? value.toLocaleString() : '';\n    const countryOrCode = state.codeToCountryMap?.[name as string] || name;\n\n    return [\n      `<div class=\"tooltip-series tooltip-series-solo\">\n               <div><span class=\"tooltip-label\">${marker} <strong>${countryOrCode}</strong></span> ${formattedValue}</div>\n            </div>`,\n      '<div class=\"tooltip-arrow\"></div>',\n    ].join('');\n  };\n\n  return (\n    <BaseChart\n      options={{\n        backgroundColor: fromDiscoverQueryList ? undefined : theme.background,\n        visualMap: [\n          VisualMap({\n            show: !fromDiscoverQueryList,\n            left: fromDiscover ? undefined : 'right',\n            right: fromDiscover ? 5 : undefined,\n            min: 0,\n            max: maxValue,\n            inRange: {\n              color: [theme.purple200, theme.purple300],\n            },\n            text: ['High', 'Low'],\n            textStyle: {\n              color: theme.textColor,\n            },\n\n            // Whether show handles, which can be dragged to adjust \"selected range\".\n            // False because the handles are pretty ugly\n            calculable: false,\n          }),\n        ],\n      }}\n      {...props}\n      yAxis={null}\n      xAxis={null}\n      series={processedSeries}\n      tooltip={{\n        formatter: tooltipFormatter,\n      }}\n      height={fromDiscover ? 400 : undefined}\n    />\n  );\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {navigateTo} from 'sentry/actionCreators/navigation';\nimport Access from 'sentry/components/acl/access';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport {IconSiren} from 'sentry/icons';\nimport type {SVGIconProps} from 'sentry/icons/svgIcon';\nimport {t, tct} from 'sentry/locale';\nimport type {Organization, Project} from 'sentry/types';\nimport type EventView from 'sentry/utils/discover/eventView';\nimport useApi from 'sentry/utils/useApi';\nimport {\n  AlertType,\n  AlertWizardAlertNames,\n  AlertWizardRuleTemplates,\n  DEFAULT_WIZARD_TEMPLATE,\n} from 'sentry/views/alerts/wizard/options';\n\nexport type CreateAlertFromViewButtonProps = ButtonProps & {\n  /**\n   * Discover query used to create the alert\n   */\n  eventView: EventView;\n  organization: Organization;\n  projects: Project[];\n  alertType?: AlertType;\n  className?: string;\n  /**\n   * Passed in value to override any metrics decision and switch back to transactions dataset.\n   * We currently do a few checks on metrics data on performance pages and this passes the decision onward to alerts.\n   */\n  disableMetricDataset?: boolean;\n  /**\n   * Called when the user is redirected to the alert builder\n   */\n  onClick?: () => void;\n\n  referrer?: string;\n};\n\n/**\n * Provide a button that can create an alert from an event view.\n * Emits incompatible query issues on click\n */\nfunction CreateAlertFromViewButton({\n  projects,\n  eventView,\n  organization,\n  referrer,\n  onClick,\n  alertType,\n  disableMetricDataset,\n  ...buttonProps\n}: CreateAlertFromViewButtonProps) {\n  const project = projects.find(p => p.id === `${eventView.project[0]}`);\n  const queryParams = eventView.generateQueryStringObject();\n  if (queryParams.query?.includes(`project:${project?.slug}`)) {\n    queryParams.query = (queryParams.query as string).replace(\n      `project:${project?.slug}`,\n      ''\n    );\n  }\n\n  const alertTemplate = alertType\n    ? AlertWizardRuleTemplates[alertType]\n    : DEFAULT_WIZARD_TEMPLATE;\n\n  const to = {\n    pathname: `/organizations/${organization.slug}/alerts/new/metric/`,\n    query: {\n      ...queryParams,\n      createFromDiscover: true,\n      disableMetricDataset,\n      referrer,\n      ...alertTemplate,\n      project: project?.slug,\n      aggregate: queryParams.yAxis ?? alertTemplate.aggregate,\n    },\n  };\n\n  const handleClick = () => {\n    onClick?.();\n  };\n\n  return (\n    <CreateAlertButton\n      organization={organization}\n      onClick={handleClick}\n      to={to}\n      aria-label={t('Create Alert')}\n      {...buttonProps}\n    />\n  );\n}\n\ntype CreateAlertButtonProps = {\n  organization: Organization;\n  alertOption?: keyof typeof AlertWizardAlertNames;\n  hideIcon?: boolean;\n  iconProps?: SVGIconProps;\n  /**\n   * Callback when the button is clicked.\n   * This is different from `onClick` which always overrides the default\n   * behavior when the button was clicked.\n   */\n  onEnter?: () => void;\n  projectSlug?: string;\n  referrer?: string;\n  showPermissionGuide?: boolean;\n} & WithRouterProps &\n  ButtonProps;\n\nconst CreateAlertButton = withRouter(\n  ({\n    organization,\n    projectSlug,\n    iconProps,\n    referrer,\n    router,\n    hideIcon,\n    showPermissionGuide,\n    alertOption,\n    onEnter,\n    ...buttonProps\n  }: CreateAlertButtonProps) => {\n    const api = useApi();\n    const createAlertUrl = (providedProj: string) => {\n      const alertsBaseUrl = `/organizations/${organization.slug}/alerts`;\n      const alertsArgs = [\n        `${referrer ? `referrer=${referrer}` : ''}`,\n        `${\n          providedProj && providedProj !== ':projectId' ? `project=${providedProj}` : ''\n        }`,\n        alertOption ? `alert_option=${alertOption}` : '',\n      ].filter(item => item !== '');\n\n      return `${alertsBaseUrl}/wizard/${alertsArgs.length ? '?' : ''}${alertsArgs.join(\n        '&'\n      )}`;\n    };\n\n    function handleClickWithoutProject(event: React.MouseEvent) {\n      event.preventDefault();\n      onEnter?.();\n\n      navigateTo(createAlertUrl(':projectId'), router);\n    }\n\n    async function enableAlertsMemberWrite() {\n      const settingsEndpoint = `/organizations/${organization.slug}/`;\n      addLoadingMessage();\n      try {\n        await api.requestPromise(settingsEndpoint, {\n          method: 'PUT',\n          data: {\n            alertsMemberWrite: true,\n          },\n        });\n        addSuccessMessage(t('Successfully updated organization settings'));\n      } catch (err) {\n        addErrorMessage(t('Unable to update organization settings'));\n      }\n    }\n\n    const permissionTooltipText = tct(\n      'Ask your organization owner or manager to [settingsLink:enable alerts access] for you.',\n      {settingsLink: <Link to={`/settings/${organization.slug}`} />}\n    );\n\n    const renderButton = (hasAccess: boolean) => (\n      <Button\n        disabled={!hasAccess}\n        title={!hasAccess ? permissionTooltipText : undefined}\n        icon={!hideIcon && <IconSiren {...iconProps} />}\n        to={projectSlug ? createAlertUrl(projectSlug) : undefined}\n        tooltipProps={{\n          isHoverable: true,\n          position: 'top',\n          overlayStyle: {\n            maxWidth: '270px',\n          },\n        }}\n        onClick={projectSlug ? onEnter : handleClickWithoutProject}\n        {...buttonProps}\n      >\n        {buttonProps.children ?? t('Create Alert')}\n      </Button>\n    );\n\n    const showGuide = !organization.alertsMemberWrite && !!showPermissionGuide;\n\n    return (\n      <Access organization={organization} access={['alerts:write']}>\n        {({hasAccess}) =>\n          showGuide ? (\n            <Access organization={organization} access={['org:write']}>\n              {({hasAccess: isOrgAdmin}) => (\n                <GuideAnchor\n                  target={isOrgAdmin ? 'alerts_write_owner' : 'alerts_write_member'}\n                  onFinish={isOrgAdmin ? enableAlertsMemberWrite : undefined}\n                >\n                  {renderButton(hasAccess)}\n                </GuideAnchor>\n              )}\n            </Access>\n          ) : (\n            renderButton(hasAccess)\n          )\n        }\n      </Access>\n    );\n  }\n);\n\nexport {CreateAlertFromViewButton};\nexport default CreateAlertButton;\n","import Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  children: ({hasFeature: boolean}) => React.ReactNode;\n};\n\n/**\n * Provide a component that passes a prop to indicate if the current\n * organization doesn't have access to discover results.\n */\nfunction DiscoverFeature({children}: Props) {\n  const noFeatureMessage = t('Requires discover feature.');\n\n  const renderDisabled = p => (\n    <Hovercard\n      body={\n        <FeatureDisabled\n          features={p.features}\n          hideHelpToggle\n          message={noFeatureMessage}\n          featureName={noFeatureMessage}\n        />\n      }\n    >\n      {p.children(p)}\n    </Hovercard>\n  );\n\n  return (\n    <Feature\n      hookName=\"feature-disabled:open-discover\"\n      features={['organizations:discover-basic']}\n      renderDisabled={renderDisabled}\n    >\n      {({hasFeature}) => children({hasFeature})}\n    </Feature>\n  );\n}\n\nexport default DiscoverFeature;\n","import Button, {ButtonProps} from 'sentry/components/button';\nimport DiscoverFeature from 'sentry/components/discover/discoverFeature';\nimport {t} from 'sentry/locale';\n\ntype DiscoverButtonProps = Omit<ButtonProps, 'aria-label'>;\n\n/**\n * Provide a button that turns itself off if the current organization\n * doesn't have access to discover results.\n */\nfunction DiscoverButton({children, ...buttonProps}: DiscoverButtonProps) {\n  return (\n    <DiscoverFeature>\n      {({hasFeature}) => (\n        <Button\n          disabled={!hasFeature}\n          aria-label={t('Open in Discover')}\n          {...buttonProps}\n        >\n          {children}\n        </Button>\n      )}\n    </DiscoverFeature>\n  );\n}\n\nexport default DiscoverButton;\n","import * as AppStoreConnectContext from 'sentry/components/projects/appStoreConnectContext';\nimport {Organization, Project} from 'sentry/types';\n\nimport UpdateAlert from './updateAlert';\n\ntype Props = Pick<React.ComponentProps<typeof UpdateAlert>, 'className' | 'Wrapper'> & {\n  organization: Organization;\n  project?: Project;\n};\n\nfunction GlobalAppStoreConnectUpdateAlert({project, organization, ...rest}: Props) {\n  return (\n    <AppStoreConnectContext.Provider project={project} organization={organization}>\n      <UpdateAlert project={project} {...rest} />\n    </AppStoreConnectContext.Provider>\n  );\n}\n\nexport default GlobalAppStoreConnectUpdateAlert;\n","import {useContext} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport AppStoreConnectContext from 'sentry/components/projects/appStoreConnectContext';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\n\ntype Props = {\n  Wrapper?: React.ComponentType;\n  className?: string;\n  project?: Project;\n};\n\nfunction UpdateAlert({Wrapper, project, className}: Props) {\n  const appStoreConnectContext = useContext(AppStoreConnectContext);\n\n  if (\n    !project ||\n    !appStoreConnectContext ||\n    !Object.keys(appStoreConnectContext).some(\n      key => !!appStoreConnectContext[key].updateAlertMessage\n    )\n  ) {\n    return null;\n  }\n\n  const notices = (\n    <Notices className={className}>\n      {Object.keys(appStoreConnectContext).map(key => {\n        const {updateAlertMessage} = appStoreConnectContext[key];\n        if (!updateAlertMessage) {\n          return null;\n        }\n\n        return (\n          <NoMarginBottomAlert key={key} type=\"warning\" showIcon>\n            <AlertContent>{updateAlertMessage}</AlertContent>\n          </NoMarginBottomAlert>\n        );\n      })}\n    </Notices>\n  );\n\n  return Wrapper ? <Wrapper>{notices}</Wrapper> : notices;\n}\n\nexport default UpdateAlert;\n\nconst Notices = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(3)};\n`;\n\nconst NoMarginBottomAlert = styled(Alert)`\n  margin-bottom: 0;\n`;\n\nconst AlertContent = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  gap: ${space(1)};\n`;\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import {createContext, useEffect, useMemo, useState} from 'react';\n\nimport {Organization, Project} from 'sentry/types';\nimport {\n  AppStoreConnectCredentialsStatus,\n  AppStoreConnectStatusData,\n} from 'sentry/types/debugFiles';\nimport {getAppStoreValidationErrorMessage} from 'sentry/utils/appStoreValidationErrorMessage';\nimport useApi from 'sentry/utils/useApi';\n\nexport type AppStoreConnectContextProps =\n  | Record<string, AppStoreConnectStatusData>\n  | undefined;\n\nconst AppStoreConnectContext = createContext<AppStoreConnectContextProps>(undefined);\n\ntype ProviderProps = {\n  children: React.ReactNode;\n  organization: Organization;\n  project?: Project;\n};\n\nconst Provider = ({children, project, organization}: ProviderProps) => {\n  const api = useApi();\n\n  const [projectDetails, setProjectDetails] = useState<undefined | Project>();\n  const [appStoreConnectStatusData, setAppStoreConnectStatusData] =\n    useState<AppStoreConnectContextProps>(undefined);\n\n  const appStoreConnectSymbolSources = useMemo(() => {\n    return (\n      projectDetails?.symbolSources ? JSON.parse(projectDetails.symbolSources) : []\n    ).reduce((acc, {type, id, ...symbolSource}) => {\n      if (type.toLowerCase() === 'appstoreconnect') {\n        acc[id] = {type, ...symbolSource};\n      }\n      return acc;\n    }, {});\n  }, [projectDetails?.symbolSources]);\n\n  useEffect(() => {\n    if (!project || projectDetails) {\n      return undefined;\n    }\n\n    if (project.symbolSources) {\n      setProjectDetails(project);\n      return undefined;\n    }\n\n    let unmounted = false;\n\n    api\n      .requestPromise(`/projects/${organization.slug}/${project.slug}/`)\n      .then(responseProjectDetails => {\n        if (unmounted) {\n          return;\n        }\n\n        setProjectDetails(responseProjectDetails);\n      })\n      .catch(() => {\n        // We do not care about the error\n      });\n\n    return () => {\n      unmounted = true;\n    };\n  }, [project, organization, api]);\n\n  useEffect(() => {\n    if (!projectDetails) {\n      return undefined;\n    }\n\n    if (!Object.keys(appStoreConnectSymbolSources).length) {\n      return undefined;\n    }\n\n    let unmounted = false;\n\n    api\n      .requestPromise(\n        `/projects/${organization.slug}/${projectDetails.slug}/appstoreconnect/status/`\n      )\n      .then(appStoreConnectStatus => {\n        if (unmounted) {\n          return;\n        }\n        setAppStoreConnectStatusData(appStoreConnectStatus);\n      })\n      .catch(() => {\n        // We do not care about the error\n      });\n\n    return () => {\n      unmounted = true;\n    };\n  }, [projectDetails, organization, appStoreConnectSymbolSources, api]);\n\n  function getUpdateAlertMessage(\n    respository: NonNullable<Parameters<typeof getAppStoreValidationErrorMessage>[1]>,\n    credentials: AppStoreConnectCredentialsStatus\n  ) {\n    if (credentials?.status === 'valid') {\n      return undefined;\n    }\n\n    return getAppStoreValidationErrorMessage(credentials, respository);\n  }\n\n  return (\n    <AppStoreConnectContext.Provider\n      value={\n        appStoreConnectStatusData && project\n          ? Object.keys(appStoreConnectStatusData).reduce((acc, key) => {\n              const appStoreConnect = appStoreConnectStatusData[key];\n              return {\n                ...acc,\n                [key]: {\n                  ...appStoreConnect,\n                  updateAlertMessage: getUpdateAlertMessage(\n                    {\n                      name: appStoreConnectSymbolSources[key].name,\n                      link: `/settings/${organization.slug}/projects/${project.slug}/debug-symbols/?customRepository=${key}`,\n                    },\n                    appStoreConnect.credentials\n                  ),\n                },\n              };\n            }, {})\n          : undefined\n      }\n    >\n      {children}\n    </AppStoreConnectContext.Provider>\n  );\n};\n\nexport {Provider};\n\nexport default AppStoreConnectContext;\n","import {t} from 'sentry/locale';\n\nconst NOT_AVAILABLE_MESSAGES = {\n  performance: t('This view is only available with Performance Monitoring.'),\n  discover: t('This view is only available with Discover.'),\n  releaseHealth: t('This view is only available with Release Health.'),\n};\n\nexport default NOT_AVAILABLE_MESSAGES;\n","import * as Sentry from '@sentry/react';\n\nimport Link from 'sentry/components/links/link';\nimport {t, tct} from 'sentry/locale';\nimport {AppStoreConnectValidationError} from 'sentry/types/debugFiles';\n\nexport const unexpectedErrorMessage = t(\n  'An unexpected error occurred while configuring the App Store Connect integration'\n);\n\nexport function getAppStoreValidationErrorMessage(\n  error: AppStoreConnectValidationError,\n  repo?: {link: string; name: string}\n) {\n  switch (error.code) {\n    case 'app-connect-authentication-error':\n      return repo\n        ? tct(\n            'App Store Connect credentials are invalid or missing. [linkToCustomRepository]',\n            {\n              linkToCustomRepository: (\n                <Link to={repo.link}>\n                  {tct(\n                    \"Make sure the credentials of the '[customRepositoryName]' repository are correct and exist.\",\n                    {\n                      customRepositoryName: repo.name,\n                    }\n                  )}\n                </Link>\n              ),\n            }\n          )\n        : t('The supplied App Store Connect credentials are invalid or missing.');\n    case 'app-connect-forbidden-error':\n      return t('The supplied API key does not have sufficient permissions.');\n    case 'app-connect-multiple-sources-error':\n      return t('Only one App Store Connect application is allowed in this project.');\n    default: {\n      // this shall not happen\n      Sentry.captureException(new Error('Unknown app store connect error.'));\n      return unexpectedErrorMessage;\n    }\n  }\n}\n","import {Component, useContext} from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport EventView, {\n  ImmutableEventView,\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'sentry/utils/discover/eventView';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\nimport {PerformanceEventViewContext} from 'sentry/utils/performance/contexts/performanceEventViewContext';\nimport {OrganizationContext} from 'sentry/views/organizationContext';\n\nexport class QueryError {\n  message: string;\n  private originalError: any; // For debugging in case parseError picks a value that doesn't make sense.\n  constructor(errorMessage: string, originalError?: any) {\n    this.message = errorMessage;\n    this.originalError = originalError;\n  }\n\n  getOriginalError() {\n    return this.originalError;\n  }\n}\n\nexport type GenericChildrenProps<T> = {\n  /**\n   * Error, if not null.\n   */\n  error: null | QueryError;\n  /**\n   * Loading state of this query.\n   */\n  isLoading: boolean;\n  /**\n   * Pagelinks, if applicable. Can be provided to the Pagination component.\n   */\n  pageLinks: null | string;\n  /**\n   * Data / result.\n   */\n  tableData: T | null;\n};\n\ntype OptionalContextProps = {\n  eventView?: EventView | ImmutableEventView;\n  orgSlug?: string;\n};\n\ntype BaseDiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Appends a raw string to query to be able to sidestep the tokenizer.\n   * @deprecated\n   */\n  forceAppendRawQueryString?: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * Sets referrer parameter in the API Payload. Set of allowed referrers are defined\n   * on the OrganizationEventsV2Endpoint view.\n   */\n  referrer?: string;\n  /**\n   * A callback to set an error so that the error can be rendered in parent components\n   */\n  setError?: (errObject: QueryError | undefined) => void;\n};\n\nexport type DiscoverQueryPropsWithContext = BaseDiscoverQueryProps & OptionalContextProps;\nexport type DiscoverQueryProps = BaseDiscoverQueryProps & {\n  eventView: EventView | ImmutableEventView;\n  orgSlug: string;\n};\n\ntype InnerRequestProps<P> = DiscoverQueryProps & P;\ntype OuterRequestProps<P> = DiscoverQueryPropsWithContext & P;\n\nexport type ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype ComponentProps<T, P> = {\n  /**\n   * Route to the endpoint\n   */\n  route: string;\n  /**\n   * A hook to modify data into the correct output after data has been received\n   */\n  afterFetch?: (data: any, props?: Props<T, P>) => T;\n  /**\n   * A hook before fetch that can be used to do things like clearing the api\n   */\n  beforeFetch?: (api: Client) => void;\n  /**\n   * A hook for parent orchestrators to pass down data based on query results, unlike afterFetch it is not meant for specializations as it will not modify data.\n   */\n  didFetch?: (data: T) => void;\n  /**\n   * Allows components to modify the payload before it is set.\n   */\n  getRequestPayload?: (props: Props<T, P>) => any;\n  /**\n   * An external hook to parse errors in case there are differences for a specific api.\n   */\n  parseError?: (error: any) => QueryError | null;\n  /**\n   * An external hook in addition to the event view check to check if data should be refetched\n   */\n  shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n};\n\ntype Props<T, P> = InnerRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\ntype OuterProps<T, P> = OuterRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass _GenericDiscoverQuery<T, P> extends Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if the payload changes\n    const refetchCondition = this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    const {cursor, limit, noPagination, referrer} = props;\n    const payload = this.props.getRequestPayload\n      ? this.props.getRequestPayload(props)\n      : props.eventView.getEventsAPIPayload(\n          props.location,\n          props.forceAppendRawQueryString\n        );\n\n    if (cursor) {\n      payload.cursor = cursor;\n    }\n    if (limit) {\n      payload.per_page = limit;\n    }\n    if (noPagination) {\n      payload.noPagination = noPagination;\n    }\n    if (referrer) {\n      payload.referrer = referrer;\n    }\n\n    Object.assign(payload, props.queryExtras ?? {});\n\n    return payload;\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  /**\n   * The error type isn't consistent across APIs. We see detail as just string some times, other times as an object.\n   */\n  _parseError = (error: any): QueryError | null => {\n    if (this.props.parseError) {\n      return this.props.parseError(error);\n    }\n\n    if (!error) {\n      return null;\n    }\n\n    const detail = error.responseJSON?.detail;\n    if (typeof detail === 'string') {\n      return new QueryError(detail, error);\n    }\n\n    const message = detail?.message;\n    if (typeof message === 'string') {\n      return new QueryError(message, error);\n    }\n\n    const unknownError = new QueryError(t('An unknown error occurred.'), error);\n    return unknownError;\n  };\n\n  fetchData = async () => {\n    const {\n      api,\n      queryBatching,\n      beforeFetch,\n      afterFetch,\n      didFetch,\n      eventView,\n      orgSlug,\n      route,\n      setError,\n    } = this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    beforeFetch?.(api);\n\n    // clear any inflight requests since they are now stale\n    api.clear();\n\n    try {\n      const [data, , resp] = await doDiscoverQuery<T>(\n        api,\n        url,\n        apiPayload,\n        queryBatching\n      );\n\n      if (this.state.tableFetchID !== tableFetchID) {\n        // invariant: a different request was initiated after this request\n        return;\n      }\n\n      const tableData = afterFetch ? afterFetch(data, this.props) : data;\n      didFetch?.(tableData);\n\n      this.setState(prevState => ({\n        isLoading: false,\n        tableFetchID: undefined,\n        error: null,\n        pageLinks: resp?.getResponseHeader('Link') ?? prevState.pageLinks,\n        tableData,\n      }));\n    } catch (err) {\n      const error = this._parseError(err);\n      this.setState({\n        isLoading: false,\n        tableFetchID: undefined,\n        error,\n        tableData: null,\n      });\n      if (setError) {\n        setError(error ?? undefined);\n      }\n    }\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\n// Shim to allow us to use generic discover query or any specialization with or without passing org slug or eventview, which are now contexts.\n// This will help keep tests working and we can remove extra uses of context-provided props and update tests as we go.\nexport function GenericDiscoverQuery<T, P>(props: OuterProps<T, P>) {\n  const organizationSlug = useContext(OrganizationContext)?.slug;\n  const performanceEventView = useContext(PerformanceEventViewContext)?.eventView;\n\n  const orgSlug = props.orgSlug ?? organizationSlug;\n  const eventView = props.eventView ?? performanceEventView;\n\n  if (orgSlug === undefined || eventView === undefined) {\n    throw new Error('GenericDiscoverQuery requires both an orgSlug and eventView');\n  }\n\n  const _props: Props<T, P> = {\n    ...props,\n    orgSlug,\n    eventView,\n  };\n  return <_GenericDiscoverQuery<T, P> {..._props} />;\n}\n\nexport type DiscoverQueryRequestParams = Partial<EventQuery & LocationQuery>;\n\nexport function doDiscoverQuery<T>(\n  api: Client,\n  url: string,\n  params: DiscoverQueryRequestParams,\n  queryBatching?: QueryBatching\n): Promise<[T, string | undefined, ResponseMeta<T> | undefined]> {\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, url, {\n      query: params,\n      includeAllArgs: true,\n    });\n  }\n\n  return api.requestPromise(url, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      // marking params as any so as to not cause typescript errors\n      ...(params as any),\n    },\n  });\n}\n\nexport default GenericDiscoverQuery;\n","import moment from 'moment';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DateString} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\n\ntype DateObject = {\n  /**\n   * Ending date object\n   */\n  end?: DateString;\n  /**\n   * Relative period string in format \"<int><unit>\" (e.g. 4d for 4 days)\n   */\n  period?: string | null;\n  /**\n   * Starting date object\n   */\n  start?: DateString;\n};\n\ntype Options = {\n  /**\n   * Doubles the given period (useful for getting previous period data)\n   */\n  shouldDoublePeriod?: boolean;\n};\n\n/**\n * Gets the period to query with if we need to double the initial period in order\n * to get data for the previous period\n *\n * Returns an object with either a period or start/end dates ({statsPeriod: string} or {start: string, end: string})\n */\nexport function getPeriod(\n  {period, start, end}: DateObject,\n  {shouldDoublePeriod}: Options = {}\n) {\n  if (!period && !start && !end) {\n    period = DEFAULT_STATS_PERIOD;\n  }\n\n  // you can not specify both relative and absolute periods\n  // relative period takes precedence\n  if (period) {\n    if (!shouldDoublePeriod) {\n      return {statsPeriod: period};\n    }\n    const [, periodNumber, periodLength] = period.match(/([0-9]+)([mhdw])/)!;\n\n    return {statsPeriod: `${parseInt(periodNumber, 10) * 2}${periodLength}`};\n  }\n\n  if (!start || !end) {\n    throw new Error('start and end required');\n  }\n\n  const formattedStart = getUtcDateString(start);\n  const formattedEnd = getUtcDateString(end);\n\n  if (shouldDoublePeriod) {\n    // get duration of end - start and double\n    const diff = moment(end).diff(moment(start));\n\n    const previousPeriodStart = moment(start).subtract(diff);\n\n    // This is not as accurate as having 2 start/end objs\n    return {\n      start: getUtcDateString(previousPeriodStart),\n      end: formattedEnd,\n    };\n  }\n\n  return {\n    start: formattedStart,\n    end: formattedEnd,\n  };\n}\n","import EventView, {ImmutableEventView} from 'sentry/utils/discover/eventView';\n\nimport {createDefinedContext} from './utils';\n\ntype usePerformanceEventViewContext = {\n  eventView: EventView;\n};\n\nconst [\n  PerformanceEventViewProvider,\n  _usePerformanceEventView,\n  PerformanceEventViewContext,\n] = createDefinedContext<usePerformanceEventViewContext>({\n  name: 'PerformanceEventViewContext',\n});\n\nexport {PerformanceEventViewProvider, PerformanceEventViewContext};\n\n// Provides a readonly event view. Also omits anything that isn't currently read-only, although in the future we should switch the code in EventView instead.\n// If you need mutability, use the mutable version.\nexport function usePerformanceEventView(): ImmutableEventView {\n  return _usePerformanceEventView().eventView;\n}\n\nexport function useMutablePerformanceEventView() {\n  return usePerformanceEventView().clone();\n}\n","import {createContext, useContext} from 'react';\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n/*\n * Creates provider, context and useContext hook, guarding against calling useContext without a provider.\n * [0]: https://github.com/chakra-ui/chakra-ui/blob/c0f9c287df0397e2aa9bd90eb3d5c2f2c08aa0b1/packages/utils/src/react-helpers.ts#L27\n *\n * Renamed to createDefinedContext to not conflate with React context.\n */\nexport function createDefinedContext<ContextType>(options: {\n  name: string;\n  errorMessage?: string;\n  strict?: boolean;\n}) {\n  const {\n    strict = true,\n    errorMessage = `useContext for \"${options.name}\" must be inside a Provider with a value`,\n    name,\n  } = options;\n\n  const Context = createContext<ContextType | undefined>(undefined);\n\n  Context.displayName = name;\n\n  function useDefinedContext() {\n    const context = useContext(Context);\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n    return context;\n  }\n\n  return [\n    Context.Provider,\n    useDefinedContext,\n    Context,\n  ] as CreateContextReturn<ContextType>;\n}\n","import {t} from 'sentry/locale';\nimport {measurementType} from 'sentry/utils/discover/fields';\nimport {MobileVital, WebVital} from 'sentry/utils/fields';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    poorThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    poorThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\nexport const MOBILE_VITAL_DETAILS: Record<MobileVital, Vital> = {\n  [MobileVital.AppStartCold]: {\n    slug: 'app_start_cold',\n    name: t('App Start Cold'),\n    description: t(\n      'Cold start is a measure of the application start up time from scratch.'\n    ),\n    type: measurementType(MobileVital.AppStartCold),\n  },\n  [MobileVital.AppStartWarm]: {\n    slug: 'app_start_warm',\n    name: t('App Start Warm'),\n    description: t(\n      'Warm start is a measure of the application start up time while still in memory.'\n    ),\n    type: measurementType(MobileVital.AppStartWarm),\n  },\n  [MobileVital.FramesTotal]: {\n    slug: 'frames_total',\n    name: t('Total Frames'),\n    description: t(\n      'Total frames is a count of the number of frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesTotal),\n  },\n  [MobileVital.FramesSlow]: {\n    slug: 'frames_slow',\n    name: t('Slow Frames'),\n    description: t(\n      'Slow frames is a count of the number of slow frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesSlow),\n  },\n  [MobileVital.FramesFrozen]: {\n    slug: 'frames_frozen',\n    name: t('Frozen Frames'),\n    description: t(\n      'Frozen frames is a count of the number of frozen frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesFrozen),\n  },\n  [MobileVital.FramesSlowRate]: {\n    slug: 'frames_slow_rate',\n    name: t('Slow Frames Rate'),\n    description: t(\n      'Slow Frames Rate is the percentage of frames recorded within a transaction that is considered slow.'\n    ),\n    type: measurementType(MobileVital.FramesSlowRate),\n  },\n  [MobileVital.FramesFrozenRate]: {\n    slug: 'frames_frozen_rate',\n    name: t('Frozen Frames Rate'),\n    description: t(\n      'Frozen Frames Rate is the percentage of frames recorded within a transaction that is considered frozen.'\n    ),\n    type: measurementType(MobileVital.FramesFrozenRate),\n  },\n  [MobileVital.StallCount]: {\n    slug: 'stall_count',\n    name: t('Stalls'),\n    description: t(\n      'Stalls is the number of times the application stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallCount),\n  },\n  [MobileVital.StallTotalTime]: {\n    slug: 'stall_total_time',\n    name: t('Total Stall Time'),\n    description: t(\n      'Stall Total Time is the total amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallTotalTime),\n  },\n  [MobileVital.StallLongestTime]: {\n    slug: 'stall_longest_time',\n    name: t('Longest Stall Time'),\n    description: t(\n      'Stall Longest Time is the longest amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallLongestTime),\n  },\n  [MobileVital.StallPercentage]: {\n    slug: 'stall_percentage',\n    name: t('Stall Percentage'),\n    description: t(\n      'Stall Percentage is the percentage of the transaction duration the application was stalled.'\n    ),\n    type: measurementType(MobileVital.StallPercentage),\n  },\n};\n\nexport enum Browser {\n  CHROME = 'Chrome',\n  EDGE = 'Edge',\n  OPERA = 'Opera',\n  FIREFOX = 'Firefox',\n  SAFARI = 'Safari',\n  IE = 'IE',\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import compact from 'lodash/compact';\nimport mean from 'lodash/mean';\nimport moment from 'moment';\n\nimport {\n  DateTimeObject,\n  getDiffInMinutes,\n  SIX_HOURS,\n  SIXTY_DAYS,\n  THIRTY_DAYS,\n} from 'sentry/components/charts/utils';\nimport {SessionApiResponse, SessionFieldWithOperation, SessionStatus} from 'sentry/types';\nimport {SeriesDataUnit} from 'sentry/types/echarts';\nimport {defined, percent} from 'sentry/utils';\nimport {Theme} from 'sentry/utils/theme';\nimport {getCrashFreePercent, getSessionStatusPercent} from 'sentry/views/releases/utils';\nimport {sessionTerm} from 'sentry/views/releases/utils/sessionTerm';\n\n/**\n * If the time window is less than or equal 10, seconds will be displayed on the graphs\n */\nexport const MINUTES_THRESHOLD_TO_DISPLAY_SECONDS = 10;\n\nexport function getCount(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation\n) {\n  return groups.reduce((acc, group) => acc + group.totals[field], 0);\n}\n\nexport function getCountAtIndex(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation,\n  index: number\n) {\n  return groups.reduce((acc, group) => acc + group.series[field][index], 0);\n}\n\nexport function getCrashFreeRate(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation\n) {\n  const crashedRate = getSessionStatusRate(groups, field, SessionStatus.CRASHED);\n\n  return defined(crashedRate) ? getCrashFreePercent(100 - crashedRate) : null;\n}\n\nexport function getSeriesAverage(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation\n) {\n  const totalCount = getCount(groups, field);\n\n  const dataPoints = groups.filter(group => !!group.totals[field]).length;\n\n  return !defined(totalCount) || dataPoints === null || totalCount === 0\n    ? null\n    : totalCount / dataPoints;\n}\n\nexport function getSeriesSum(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation,\n  intervals: SessionApiResponse['intervals'] = []\n) {\n  const dataPointsSums: number[] = Array(intervals.length).fill(0);\n  const groupSeries = groups.map(group => group.series[field]);\n\n  groupSeries.forEach(series => {\n    series.forEach((dataPoint, idx) => (dataPointsSums[idx] += dataPoint));\n  });\n\n  return dataPointsSums;\n}\n\nexport function getSessionStatusRate(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation,\n  status: SessionStatus\n) {\n  const totalCount = getCount(groups, field);\n\n  const crashedCount = getCount(\n    groups.filter(({by}) => by['session.status'] === status),\n    field\n  );\n\n  return !defined(totalCount) || totalCount === 0\n    ? null\n    : percent(crashedCount ?? 0, totalCount ?? 0);\n}\n\nexport function getCrashFreeRateSeries(\n  groups: SessionApiResponse['groups'] = [],\n  intervals: SessionApiResponse['intervals'] = [],\n  field: SessionFieldWithOperation\n): SeriesDataUnit[] {\n  return compact(\n    intervals.map((interval, i) => {\n      const intervalTotalSessions = groups.reduce(\n        (acc, group) => acc + (group.series[field]?.[i] ?? 0),\n        0\n      );\n\n      const intervalCrashedSessions =\n        groups.find(group => group.by['session.status'] === SessionStatus.CRASHED)\n          ?.series[field]?.[i] ?? 0;\n\n      const crashedSessionsPercent = percent(\n        intervalCrashedSessions,\n        intervalTotalSessions\n      );\n\n      if (intervalTotalSessions === 0) {\n        return null;\n      }\n\n      return {\n        name: interval,\n        value: getCrashFreePercent(100 - crashedSessionsPercent),\n      };\n    })\n  );\n}\n\nexport function getSessionStatusRateSeries(\n  groups: SessionApiResponse['groups'] = [],\n  intervals: SessionApiResponse['intervals'] = [],\n  field: SessionFieldWithOperation,\n  status: SessionStatus\n): SeriesDataUnit[] {\n  return compact(\n    intervals.map((interval, i) => {\n      const intervalTotalSessions = groups.reduce(\n        (acc, group) => acc + group.series[field][i],\n        0\n      );\n\n      const intervalStatusSessions =\n        groups.find(group => group.by['session.status'] === status)?.series[field][i] ??\n        0;\n\n      const statusSessionsPercent = percent(\n        intervalStatusSessions,\n        intervalTotalSessions\n      );\n\n      if (intervalTotalSessions === 0) {\n        return null;\n      }\n\n      return {\n        name: interval,\n        value: getSessionStatusPercent(statusSessionsPercent),\n      };\n    })\n  );\n}\n\nexport function getSessionP50Series(\n  groups: SessionApiResponse['groups'] = [],\n  intervals: SessionApiResponse['intervals'] = [],\n  field: SessionFieldWithOperation,\n  valueFormatter?: (value: number) => number\n): SeriesDataUnit[] {\n  return compact(\n    intervals.map((interval, i) => {\n      const meanValue = mean(\n        groups.map(group => group.series[field][i]).filter(v => !!v)\n      );\n\n      if (!meanValue) {\n        return null;\n      }\n\n      return {\n        name: interval,\n        value:\n          typeof valueFormatter === 'function' ? valueFormatter(meanValue) : meanValue,\n      };\n    })\n  );\n}\n\nexport function getAdoptionSeries(\n  releaseGroups: SessionApiResponse['groups'] = [],\n  allGroups: SessionApiResponse['groups'] = [],\n  intervals: SessionApiResponse['intervals'] = [],\n  field: SessionFieldWithOperation\n): SeriesDataUnit[] {\n  return intervals.map((interval, i) => {\n    const intervalReleaseSessions = releaseGroups.reduce(\n      (acc, group) => acc + (group.series[field]?.[i] ?? 0),\n      0\n    );\n    const intervalTotalSessions = allGroups.reduce(\n      (acc, group) => acc + (group.series[field]?.[i] ?? 0),\n      0\n    );\n\n    const intervalAdoption = percent(intervalReleaseSessions, intervalTotalSessions);\n\n    return {\n      name: interval,\n      value: Math.round(intervalAdoption),\n    };\n  });\n}\n\nexport function getCountSeries(\n  field: SessionFieldWithOperation,\n  group?: SessionApiResponse['groups'][0],\n  intervals: SessionApiResponse['intervals'] = []\n): SeriesDataUnit[] {\n  return intervals.map((interval, index) => ({\n    name: interval,\n    value: group?.series[field][index] ?? 0,\n  }));\n}\n\nexport function initSessionsChart(theme: Theme) {\n  const colors = theme.charts.getColorPalette(14);\n  return {\n    [SessionStatus.HEALTHY]: {\n      seriesName: sessionTerm.healthy,\n      data: [],\n      color: theme.green300,\n      areaStyle: {\n        color: theme.green300,\n        opacity: 1,\n      },\n      lineStyle: {\n        opacity: 0,\n        width: 0.4,\n      },\n    },\n    [SessionStatus.ERRORED]: {\n      seriesName: sessionTerm.errored,\n      data: [],\n      color: colors[12],\n      areaStyle: {\n        color: colors[12],\n        opacity: 1,\n      },\n      lineStyle: {\n        opacity: 0,\n        width: 0.4,\n      },\n    },\n    [SessionStatus.ABNORMAL]: {\n      seriesName: sessionTerm.abnormal,\n      data: [],\n      color: colors[15],\n      areaStyle: {\n        color: colors[15],\n        opacity: 1,\n      },\n      lineStyle: {\n        opacity: 0,\n        width: 0.4,\n      },\n    },\n    [SessionStatus.CRASHED]: {\n      seriesName: sessionTerm.crashed,\n      data: [],\n      color: theme.red300,\n      areaStyle: {\n        color: theme.red300,\n        opacity: 1,\n      },\n      lineStyle: {\n        opacity: 0,\n        width: 0.4,\n      },\n    },\n  };\n}\n\ntype GetSessionsIntervalOptions = {\n  highFidelity?: boolean;\n};\n\nexport function getSessionsInterval(\n  datetimeObj: DateTimeObject,\n  {highFidelity}: GetSessionsIntervalOptions = {}\n) {\n  const diffInMinutes = getDiffInMinutes(datetimeObj);\n\n  if (moment(datetimeObj.start).isSameOrBefore(moment().subtract(30, 'days'))) {\n    // we cannot use sub-hour session resolution on buckets older than 30 days\n    highFidelity = false;\n  }\n\n  if (diffInMinutes >= SIXTY_DAYS) {\n    return '1d';\n  }\n\n  if (diffInMinutes >= THIRTY_DAYS) {\n    return '4h';\n  }\n\n  if (diffInMinutes >= SIX_HOURS) {\n    return '1h';\n  }\n\n  // limit on backend for sub-hour session resolution is set to six hours\n  if (highFidelity) {\n    if (diffInMinutes <= MINUTES_THRESHOLD_TO_DISPLAY_SECONDS) {\n      // This only works for metrics-based session stats.\n      // Backend will silently replace with '1m' for session-based stats.\n      return '10s';\n    }\n\n    if (diffInMinutes <= 30) {\n      return '1m';\n    }\n\n    return '5m';\n  }\n\n  return '1h';\n}\n\n// Sessions API can only round intervals to the closest hour - this is especially problematic when using sub-hour resolution.\n// We filter out results that are out of bounds on frontend and recalculate totals.\nexport function filterSessionsInTimeWindow(\n  sessions: SessionApiResponse,\n  start?: string,\n  end?: string\n) {\n  if (!start || !end) {\n    return sessions;\n  }\n\n  const filteredIndexes: number[] = [];\n\n  const intervals = sessions.intervals.filter((interval, index) => {\n    const isBetween = moment\n      .utc(interval)\n      .isBetween(moment.utc(start), moment.utc(end), undefined, '[]');\n    if (isBetween) {\n      filteredIndexes.push(index);\n    }\n\n    return isBetween;\n  });\n\n  const groups = sessions.groups.map(group => {\n    const series = {};\n    const totals = {};\n    Object.keys(group.series).forEach(field => {\n      totals[field] = 0;\n      series[field] = group.series[field].filter((value, index) => {\n        const isBetween = filteredIndexes.includes(index);\n        if (isBetween) {\n          totals[field] = (totals[field] ?? 0) + value;\n        }\n\n        return isBetween;\n      });\n      if (field.startsWith('p50')) {\n        totals[field] = mean(series[field]);\n      }\n      if (field.startsWith('count_unique')) {\n        /* E.g. users\n        We cannot sum here because users would not be unique anymore.\n        User can be repeated and part of multiple buckets in series but it's still that one user so totals would be wrong.\n        This operation is not 100% correct, because we are filtering series in time window but the total is for unfiltered series (it's the closest thing we can do right now) */\n        totals[field] = group.totals[field];\n      }\n    });\n    return {...group, series, totals};\n  });\n\n  return {\n    start: intervals[0],\n    end: intervals[intervals.length - 1],\n    query: sessions.query,\n    intervals,\n    groups,\n  };\n}\n","import {t} from 'sentry/locale';\nimport {MEPAlertsQueryType} from 'sentry/views/alerts/wizard/options';\nimport type {SchemaFormConfig} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\n\nimport type {Incident} from '../../types';\n\nexport enum AlertRuleThresholdType {\n  ABOVE,\n  BELOW,\n}\n\nexport enum AlertRuleTriggerType {\n  CRITICAL = 'critical',\n  WARNING = 'warning',\n  RESOLVE = 'resolve',\n}\n\nexport enum AlertRuleComparisonType {\n  COUNT = 'count',\n  CHANGE = 'change',\n  PERCENT = 'percent',\n}\n\nexport enum Dataset {\n  ERRORS = 'events',\n  TRANSACTIONS = 'transactions',\n  /** Also used for performance alerts **/\n  GENERIC_METRICS = 'generic_metrics',\n  SESSIONS = 'sessions',\n  /** Also used for crash free alerts */\n  METRICS = 'metrics',\n}\n\nexport enum EventTypes {\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n  USER = 'user',\n  SESSION = 'session',\n}\n\nexport enum Datasource {\n  ERROR_DEFAULT = 'error_default',\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n}\n\n/**\n * This is not a real aggregate as crash-free sessions/users can be only calculated on frontend by comparing the count of sessions broken down by status\n * It is here nevertheless to shoehorn sessions dataset into existing alerts codebase\n * This will most likely be revised as we introduce the metrics dataset\n */\nexport enum SessionsAggregate {\n  CRASH_FREE_SESSIONS = 'percentage(sessions_crashed, sessions) AS _crash_rate_alert_aggregate',\n  CRASH_FREE_USERS = 'percentage(users_crashed, users) AS _crash_rate_alert_aggregate',\n}\n\nexport type UnsavedTrigger = {\n  actions: Action[];\n  alertThreshold: number | '' | null;\n  label: AlertRuleTriggerType;\n  // UnsavedTrigger can be a part of an Unsaved Alert Rule that does not have an\n  // id yet\n  alertRuleId?: string;\n};\n\nexport type ThresholdControlValue = {\n  /**\n   * Resolve threshold is optional, so it can be null\n   */\n  threshold: number | '' | null;\n  thresholdType: AlertRuleThresholdType;\n};\n\ntype SavedTrigger = Omit<UnsavedTrigger, 'actions'> & {\n  actions: Action[];\n  dateCreated: string;\n  id: string;\n};\n\nexport type Trigger = Partial<SavedTrigger> & UnsavedTrigger;\n\nexport type UnsavedMetricRule = {\n  aggregate: string;\n  dataset: Dataset;\n  environment: string | null;\n  projects: string[];\n  query: string;\n  resolveThreshold: number | '' | null;\n  thresholdPeriod: number | null;\n  thresholdType: AlertRuleThresholdType;\n  timeWindow: TimeWindow;\n  triggers: Trigger[];\n  comparisonDelta?: number | null;\n  eventTypes?: EventTypes[];\n  owner?: string | null;\n  queryType?: MEPAlertsQueryType | null;\n};\n\nexport interface SavedMetricRule extends UnsavedMetricRule {\n  dateCreated: string;\n  dateModified: string;\n  id: string;\n  name: string;\n  status: number;\n  createdBy?: {email: string; id: number; name: string} | null;\n  errors?: {detail: string}[];\n  /**\n   * Returned with the expand=latestIncident query parameter\n   */\n  latestIncident?: Incident | null;\n  originalAlertRuleId?: number | null;\n}\n\nexport type MetricRule = Partial<SavedMetricRule> & UnsavedMetricRule;\n\nexport enum TimePeriod {\n  SIX_HOURS = '6h',\n  ONE_DAY = '1d',\n  THREE_DAYS = '3d',\n  // Seven days is actually 10080m but we have a max of 10000 events\n  SEVEN_DAYS = '10000m',\n  FOURTEEN_DAYS = '14d',\n  THIRTY_DAYS = '30d',\n}\n\nexport enum TimeWindow {\n  ONE_MINUTE = 1,\n  FIVE_MINUTES = 5,\n  TEN_MINUTES = 10,\n  FIFTEEN_MINUTES = 15,\n  THIRTY_MINUTES = 30,\n  ONE_HOUR = 60,\n  TWO_HOURS = 120,\n  FOUR_HOURS = 240,\n  ONE_DAY = 1440,\n}\n\nexport enum ActionType {\n  EMAIL = 'email',\n  SLACK = 'slack',\n  PAGERDUTY = 'pagerduty',\n  MSTEAMS = 'msteams',\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const ActionLabel = {\n  // \\u200B is needed because Safari disregards autocomplete=\"off\". It's seeing \"Email\" and\n  // opening up the browser autocomplete for email. https://github.com/JedWatson/react-select/issues/3500\n  [ActionType.EMAIL]: t('Emai\\u200Bl'),\n  [ActionType.SLACK]: t('Slack'),\n  [ActionType.PAGERDUTY]: t('Pagerduty'),\n  [ActionType.MSTEAMS]: t('MS Teams'),\n  [ActionType.SENTRY_APP]: t('Notification'),\n};\n\nexport enum TargetType {\n  // A direct reference, like an email address, Slack channel, or PagerDuty service\n  SPECIFIC = 'specific',\n\n  // A specific user. This could be used to grab the user's email address.\n  USER = 'user',\n\n  // A specific team. This could be used to send an email to everyone associated with a team.\n  TEAM = 'team',\n\n  // A Sentry App instead of any of the above.\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const TargetLabel = {\n  [TargetType.USER]: t('Member'),\n  [TargetType.TEAM]: t('Team'),\n};\n\n/**\n * This is an available action template that is associated to a Trigger in a\n * Metric Alert Rule. They are defined by the available-actions API.\n */\nexport type MetricActionTemplate = {\n  /**\n   * See `TargetType`\n   */\n  allowedTargetTypes: TargetType[];\n\n  /**\n   * The integration type e.g. 'email'\n   */\n  type: ActionType;\n\n  /**\n   * Integration id for this `type`, should be passed to backend as `integrationId` when creating an action\n   */\n  integrationId?: number;\n\n  /**\n   * Name of the integration. This is a text field that differentiates integrations from the same provider from each other\n   */\n  integrationName?: string;\n\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options?: Array<{label: string; value: any}>;\n\n  /**\n   * SentryApp id for this `type`, should be passed to backend as `sentryAppId` when creating an action.\n   */\n  sentryAppId?: number;\n\n  sentryAppInstallationUuid?: string;\n  /**\n   * Name of the SentryApp. Like `integrationName`, this differentiates SentryApps from each other.\n   */\n  sentryAppName?: string;\n\n  /**\n   * Sentry App Alert Rule UI Component settings\n   */\n  settings?: SchemaFormConfig;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n\n/**\n * This is the user's configured action\n */\nexport type Action = UnsavedAction & Partial<SavedActionFields>;\n\ntype SavedActionFields = {\n  /**\n   * The id of the alert rule this action belongs to\n   */\n  alertRuleTriggerId: string;\n\n  /**\n   * date created\n   */\n  dateCreated: string;\n\n  /**\n   * A human readable description of the action generated by server\n   */\n  desc: string;\n\n  /**\n   * model id of the action\n   */\n  id: string;\n\n  /**\n   *  Could not fetch details from SentryApp. Show the rule but make it disabled.\n   */\n  disabled?: boolean;\n};\n\ntype UnsavedAction = {\n  /**\n   * An optional Slack channel or user id the user can input to avoid rate limiting issues.\n   */\n  inputChannelId: string | null;\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options: Array<{label: string; value: any}> | null;\n  /**\n   * How to identify the target. Can be email, slack channel, pagerduty service,\n   * user_id, team_id, SentryApp id, etc\n   */\n  targetIdentifier: string | null;\n\n  targetType: TargetType | null;\n\n  type: ActionType;\n  /** Used to maintain order of unsaved actions */\n  unsavedDateCreated: string;\n  unsavedId: string;\n\n  /**\n   * The id of the integration, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  integrationId?: number | null;\n\n  /**\n   * The id of the SentryApp, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  sentryAppId?: number | null;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n","import {User} from 'sentry/types';\nimport {IssueAlertRule} from 'sentry/types/alerts';\nimport {MetricRule} from 'sentry/views/alerts/rules/metric/types';\n\ntype Data = [number, {count: number}[]][];\n\nexport enum AlertRuleType {\n  METRIC = 'metric',\n  ISSUE = 'issue',\n}\n\nexport type Incident = {\n  alertRule: MetricRule;\n  dateClosed: string | null;\n  dateCreated: string;\n  dateDetected: string;\n  dateStarted: string;\n  // Array of group ids\n  discoverQuery: string;\n  groups: string[];\n  hasSeen: boolean;\n  id: string;\n  identifier: string;\n  isSubscribed: boolean;\n  organizationId: string;\n  projects: string[];\n  // Array of slugs\n  seenBy: User[];\n  status: IncidentStatus;\n  statusMethod: IncidentStatusMethod;\n  title: string;\n  activities?: ActivityType[];\n};\n\nexport type IncidentStats = {\n  eventStats: {\n    data: Data;\n  };\n  totalEvents: number;\n  uniqueUsers: number;\n};\n\nexport type ActivityTypeDraft = {\n  comment: null | string;\n  dateCreated: string;\n  id: string;\n  incidentIdentifier: string;\n  type: IncidentActivityType;\n  user: User | null;\n};\n\nexport type ActivityType = ActivityTypeDraft & {\n  previousValue: string | null;\n  value: string | null;\n  eventStats?: {data: Data};\n};\n\nexport enum IncidentActivityType {\n  CREATED = 0,\n  DETECTED = 1,\n  STATUS_CHANGE = 2,\n  COMMENT = 3,\n  STARTED = 4,\n}\n\nexport enum IncidentStatus {\n  OPENED = 1,\n  CLOSED = 2,\n  WARNING = 10,\n  CRITICAL = 20,\n}\n\nexport enum IncidentStatusMethod {\n  MANUAL = 1,\n  RULE_UPDATED = 2,\n  RULE_TRIGGERED = 3,\n}\n\nexport enum AlertRuleStatus {\n  PENDING = 0,\n  SNAPSHOT = 4,\n  DISABLED = 5,\n}\n\nexport enum CombinedAlertType {\n  METRIC = 'alert_rule',\n  ISSUE = 'rule',\n}\n\nexport type CombinedMetricIssueAlerts = (IssueAlertRule | MetricRule) & {\n  type: CombinedAlertType;\n  latestIncident?: Incident | null;\n};\n","import {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {\n  Dataset,\n  EventTypes,\n  SessionsAggregate,\n} from 'sentry/views/alerts/rules/metric/types';\n\nexport type AlertType =\n  | 'issues'\n  | 'num_errors'\n  | 'users_experiencing_errors'\n  | 'throughput'\n  | 'trans_duration'\n  | 'apdex'\n  | 'failure_rate'\n  | 'lcp'\n  | 'fid'\n  | 'cls'\n  | 'custom'\n  | 'crash_free_sessions'\n  | 'crash_free_users';\n\nexport enum MEPAlertsQueryType {\n  ERROR = 0,\n  PERFORMANCE = 1,\n  CRASH_RATE = 2,\n}\n\nexport enum MEPAlertsDataset {\n  DISCOVER = 'discover',\n  METRICS = 'metrics',\n  METRICS_ENHANCED = 'metricsEnhanced',\n}\n\nexport type MetricAlertType = Exclude<AlertType, 'issues'>;\n\nexport const DatasetMEPAlertQueryTypes: Record<Dataset, MEPAlertsQueryType> = {\n  [Dataset.ERRORS]: MEPAlertsQueryType.ERROR,\n  [Dataset.TRANSACTIONS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.GENERIC_METRICS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.METRICS]: MEPAlertsQueryType.CRASH_RATE,\n  [Dataset.SESSIONS]: MEPAlertsQueryType.CRASH_RATE,\n};\n\nexport const AlertWizardAlertNames: Record<AlertType, string> = {\n  issues: t('Issues'),\n  num_errors: t('Number of Errors'),\n  users_experiencing_errors: t('Users Experiencing Errors'),\n  throughput: t('Throughput'),\n  trans_duration: t('Transaction Duration'),\n  apdex: t('Apdex'),\n  failure_rate: t('Failure Rate'),\n  lcp: t('Largest Contentful Paint'),\n  fid: t('First Input Delay'),\n  cls: t('Cumulative Layout Shift'),\n  custom: t('Custom Metric'),\n  crash_free_sessions: t('Crash Free Session Rate'),\n  crash_free_users: t('Crash Free User Rate'),\n};\n\ntype AlertWizardCategory = {\n  categoryHeading: string;\n  options: AlertType[];\n};\nexport const getAlertWizardCategories = (org: Organization): AlertWizardCategory[] => [\n  {\n    categoryHeading: t('Errors'),\n    options: ['issues', 'num_errors', 'users_experiencing_errors'],\n  },\n  ...(org.features.includes('crash-rate-alerts')\n    ? [\n        {\n          categoryHeading: t('Sessions'),\n          options: ['crash_free_sessions', 'crash_free_users'] as AlertType[],\n        },\n      ]\n    : []),\n  {\n    categoryHeading: t('Performance'),\n    options: [\n      'throughput',\n      'trans_duration',\n      'apdex',\n      'failure_rate',\n      'lcp',\n      'fid',\n      'cls',\n    ],\n  },\n  {\n    categoryHeading: t('Other'),\n    options: ['custom'],\n  },\n];\n\nexport type WizardRuleTemplate = {\n  aggregate: string;\n  dataset: Dataset;\n  eventTypes: EventTypes;\n};\n\nexport const AlertWizardRuleTemplates: Record<\n  MetricAlertType,\n  Readonly<WizardRuleTemplate>\n> = {\n  num_errors: {\n    aggregate: 'count()',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  users_experiencing_errors: {\n    aggregate: 'count_unique(user)',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  throughput: {\n    aggregate: 'count()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  trans_duration: {\n    aggregate: 'p95(transaction.duration)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  apdex: {\n    aggregate: 'apdex(300)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  failure_rate: {\n    aggregate: 'failure_rate()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  lcp: {\n    aggregate: 'p95(measurements.lcp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  fid: {\n    aggregate: 'p95(measurements.fid)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  cls: {\n    aggregate: 'p95(measurements.cls)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  custom: {\n    aggregate: 'p95(measurements.fp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  crash_free_sessions: {\n    aggregate: SessionsAggregate.CRASH_FREE_SESSIONS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.SESSION,\n  },\n  crash_free_users: {\n    aggregate: SessionsAggregate.CRASH_FREE_USERS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.USER,\n  },\n};\n\nexport const DEFAULT_WIZARD_TEMPLATE = AlertWizardRuleTemplates.num_errors;\n\nexport const hidePrimarySelectorSet = new Set<AlertType>([\n  'num_errors',\n  'users_experiencing_errors',\n  'throughput',\n  'apdex',\n  'failure_rate',\n  'crash_free_sessions',\n  'crash_free_users',\n]);\n\nexport const hideParameterSelectorSet = new Set<AlertType>([\n  'trans_duration',\n  'lcp',\n  'fid',\n  'cls',\n]);\n\nexport function getMEPAlertsDataset(\n  dataset: Dataset,\n  newAlert: boolean\n): MEPAlertsDataset {\n  // Dataset.ERRORS overrides all cases\n  if (dataset === Dataset.ERRORS) {\n    return MEPAlertsDataset.DISCOVER;\n  }\n\n  if (newAlert) {\n    return MEPAlertsDataset.METRICS_ENHANCED;\n  }\n\n  if (dataset === Dataset.GENERIC_METRICS) {\n    return MEPAlertsDataset.METRICS;\n  }\n\n  return MEPAlertsDataset.DISCOVER;\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Component} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport {fetchTotalCount} from 'sentry/actionCreators/events';\nimport EventsChart, {EventsChartProps} from 'sentry/components/charts/eventsChart';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {isSelectionEqual} from 'sentry/components/organizations/pageFilters/utils';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {t} from 'sentry/locale';\nimport {PageFilters} from 'sentry/types';\nimport {axisLabelFormatter} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\ntype Props = Omit<\n  EventsChartProps,\n  keyof Omit<PageFilters, 'datetime'> | keyof PageFilters['datetime']\n> & {\n  onTotalValuesChange: (value: number | null) => void;\n  selection: PageFilters;\n  title: string;\n  yAxis: string;\n  help?: string;\n};\n\nclass ProjectBaseEventsChart extends Component<Props> {\n  componentDidMount() {\n    this.fetchTotalCount();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isSelectionEqual(this.props.selection, prevProps.selection)) {\n      this.fetchTotalCount();\n    }\n  }\n\n  async fetchTotalCount() {\n    const {api, organization, selection, onTotalValuesChange, query} = this.props;\n    const {projects, environments, datetime} = selection;\n\n    try {\n      const totals = await fetchTotalCount(api, organization.slug, {\n        field: [],\n        query,\n        environment: environments,\n        project: projects.map(proj => String(proj)),\n        ...normalizeDateTimeParams(datetime),\n      });\n      onTotalValuesChange(totals);\n    } catch (err) {\n      onTotalValuesChange(null);\n      Sentry.captureException(err);\n    }\n  }\n\n  render() {\n    const {\n      router,\n      organization,\n      selection,\n      api,\n      yAxis,\n      query,\n      field,\n      title,\n      help,\n      ...eventsChartProps\n    } = this.props;\n    const {projects, environments, datetime} = selection;\n    const {start, end, period, utc} = datetime;\n\n    return getDynamicText({\n      value: (\n        <EventsChart\n          {...eventsChartProps}\n          router={router}\n          organization={organization}\n          showLegend\n          yAxis={yAxis}\n          query={query}\n          api={api}\n          projects={projects}\n          environments={environments}\n          start={start}\n          end={end}\n          period={period}\n          utc={utc}\n          field={field}\n          currentSeriesName={t('This Period')}\n          previousSeriesName={t('Previous Period')}\n          disableableSeries={[t('This Period'), t('Previous Period')]}\n          chartHeader={\n            <HeaderTitleLegend>\n              {title}\n              {help && <QuestionTooltip size=\"sm\" position=\"top\" title={help} />}\n            </HeaderTitleLegend>\n          }\n          legendOptions={{right: 10, top: 0}}\n          chartOptions={{\n            grid: {left: '10px', right: '10px', top: '40px', bottom: '0px'},\n            yAxis: {\n              axisLabel: {\n                formatter: (value: number) =>\n                  axisLabelFormatter(value, aggregateOutputType(yAxis)),\n              },\n              scale: true,\n            },\n          }}\n        />\n      ),\n      fixed: `${title} Chart`,\n    });\n  }\n}\n\nexport default withPageFilters(ProjectBaseEventsChart);\n","import {Component, Fragment} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport type {LegendComponentOption} from 'echarts';\nimport isEqual from 'lodash/isEqual';\n\nimport {Client} from 'sentry/api';\nimport ChartZoom, {ZoomRenderProps} from 'sentry/components/charts/chartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport {LineChart, LineChartProps} from 'sentry/components/charts/lineChart';\nimport ReleaseSeries from 'sentry/components/charts/releaseSeries';\nimport StackedAreaChart from 'sentry/components/charts/stackedAreaChart';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {RELEASE_LINES_THRESHOLD} from 'sentry/components/charts/utils';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {EChartEventHandler, Series} from 'sentry/types/echarts';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {MINUTES_THRESHOLD_TO_DISPLAY_SECONDS} from 'sentry/utils/sessions';\nimport {Theme} from 'sentry/utils/theme';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport {displayCrashFreePercent} from 'sentry/views/releases/utils';\nimport {sessionTerm} from 'sentry/views/releases/utils/sessionTerm';\n\nimport {DisplayModes} from '../projectCharts';\n\nimport ProjectSessionsChartRequest from './projectSessionsChartRequest';\n\ntype Props = {\n  api: Client;\n  displayMode:\n    | DisplayModes.SESSIONS\n    | DisplayModes.STABILITY_USERS\n    | DisplayModes.STABILITY;\n  onTotalValuesChange: (value: number | null) => void;\n  organization: Organization;\n  router: InjectedRouter;\n  selection: PageFilters;\n  title: string;\n  disablePrevious?: boolean;\n  help?: string;\n  query?: string;\n};\n\nfunction ProjectBaseSessionsChart({\n  title,\n  organization,\n  router,\n  selection,\n  api,\n  onTotalValuesChange,\n  displayMode,\n  help,\n  disablePrevious,\n  query,\n}: Props) {\n  const theme = useTheme();\n\n  const {projects, environments, datetime} = selection;\n  const {start, end, period, utc} = datetime;\n\n  return (\n    <Fragment>\n      {getDynamicText({\n        value: (\n          <ChartZoom router={router} period={period} start={start} end={end} utc={utc}>\n            {zoomRenderProps => (\n              <ProjectSessionsChartRequest\n                api={api}\n                selection={selection}\n                organization={organization}\n                onTotalValuesChange={onTotalValuesChange}\n                displayMode={displayMode}\n                disablePrevious={disablePrevious}\n                query={query}\n              >\n                {({\n                  errored,\n                  loading,\n                  reloading,\n                  timeseriesData,\n                  previousTimeseriesData,\n                }) => (\n                  <ReleaseSeries\n                    utc={utc}\n                    period={period}\n                    start={start}\n                    end={end}\n                    projects={projects}\n                    environments={environments}\n                    query={query}\n                  >\n                    {({releaseSeries}) => {\n                      if (errored) {\n                        return (\n                          <ErrorPanel>\n                            <IconWarning color=\"gray300\" size=\"lg\" />\n                          </ErrorPanel>\n                        );\n                      }\n\n                      return (\n                        <TransitionChart loading={loading} reloading={reloading}>\n                          <TransparentLoadingMask visible={reloading} />\n\n                          <HeaderTitleLegend>\n                            {title}\n                            {help && (\n                              <QuestionTooltip size=\"sm\" position=\"top\" title={help} />\n                            )}\n                          </HeaderTitleLegend>\n\n                          <Chart\n                            theme={theme}\n                            zoomRenderProps={zoomRenderProps}\n                            reloading={reloading}\n                            timeSeries={timeseriesData}\n                            previousTimeSeries={\n                              previousTimeseriesData\n                                ? [previousTimeseriesData]\n                                : undefined\n                            }\n                            releaseSeries={releaseSeries}\n                            displayMode={displayMode}\n                          />\n                        </TransitionChart>\n                      );\n                    }}\n                  </ReleaseSeries>\n                )}\n              </ProjectSessionsChartRequest>\n            )}\n          </ChartZoom>\n        ),\n        fixed: `${title} Chart`,\n      })}\n    </Fragment>\n  );\n}\n\ntype ChartProps = {\n  displayMode:\n    | DisplayModes.SESSIONS\n    | DisplayModes.STABILITY\n    | DisplayModes.STABILITY_USERS;\n  releaseSeries: Series[];\n  reloading: boolean;\n  theme: Theme;\n  timeSeries: Series[];\n  zoomRenderProps: ZoomRenderProps;\n  previousTimeSeries?: Series[];\n};\n\ntype ChartState = {\n  forceUpdate: boolean;\n  seriesSelection: Record<string, boolean>;\n};\n\nclass Chart extends Component<ChartProps, ChartState> {\n  state: ChartState = {\n    seriesSelection: {},\n    forceUpdate: false,\n  };\n\n  shouldComponentUpdate(nextProps: ChartProps, nextState: ChartState) {\n    if (nextState.forceUpdate) {\n      return true;\n    }\n\n    if (!isEqual(this.state.seriesSelection, nextState.seriesSelection)) {\n      return true;\n    }\n\n    if (\n      nextProps.releaseSeries !== this.props.releaseSeries &&\n      !nextProps.reloading &&\n      !this.props.reloading\n    ) {\n      return true;\n    }\n\n    if (this.props.reloading && !nextProps.reloading) {\n      return true;\n    }\n\n    if (nextProps.timeSeries !== this.props.timeSeries) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // inspired by app/components/charts/eventsChart.tsx@handleLegendSelectChanged\n  handleLegendSelectChanged: EChartEventHandler<{\n    name: string;\n    selected: Record<string, boolean>;\n    type: 'legendselectchanged';\n  }> = ({selected}) => {\n    const seriesSelection = Object.keys(selected).reduce((state, key) => {\n      state[key] = selected[key];\n      return state;\n    }, {});\n\n    // we have to force an update here otherwise ECharts will\n    // update its internal state and disable the series\n    this.setState({seriesSelection, forceUpdate: true}, () =>\n      this.setState({forceUpdate: false})\n    );\n  };\n\n  get isCrashFree() {\n    const {displayMode} = this.props;\n\n    return [DisplayModes.STABILITY, DisplayModes.STABILITY_USERS].includes(displayMode);\n  }\n\n  get legend(): LegendComponentOption {\n    const {theme, timeSeries, previousTimeSeries, releaseSeries} = this.props;\n    const {seriesSelection} = this.state;\n\n    const hideReleasesByDefault =\n      (releaseSeries[0] as any)?.markLine?.data.length >= RELEASE_LINES_THRESHOLD;\n\n    const hideHealthyByDefault = timeSeries\n      .filter(s => sessionTerm.healthy !== s.seriesName)\n      .some(s => s.data.some(d => d.value > 0));\n\n    const selected =\n      Object.keys(seriesSelection).length === 0 &&\n      (hideReleasesByDefault || hideHealthyByDefault)\n        ? {\n            [t('Releases')]: !hideReleasesByDefault,\n            [sessionTerm.healthy]: !hideHealthyByDefault,\n          }\n        : seriesSelection;\n\n    return {\n      right: 10,\n      top: 0,\n      icon: 'circle',\n      itemHeight: 8,\n      itemWidth: 8,\n      itemGap: 12,\n      align: 'left' as const,\n      textStyle: {\n        color: theme.textColor,\n        verticalAlign: 'top',\n        fontSize: 11,\n        fontFamily: theme.text.family,\n      },\n      data: [\n        ...timeSeries.map(s => s.seriesName),\n        ...(previousTimeSeries ?? []).map(s => s.seriesName),\n        ...releaseSeries.map(s => s.seriesName),\n      ],\n      selected,\n    };\n  }\n\n  get chartOptions(): Omit<LineChartProps, 'series'> {\n    return {\n      grid: {left: '10px', right: '10px', top: '40px', bottom: '0px'},\n      seriesOptions: {\n        showSymbol: false,\n      },\n      tooltip: {\n        trigger: 'axis',\n        truncate: 80,\n        valueFormatter: (value: number | null) => {\n          if (value === null) {\n            return '\\u2014';\n          }\n\n          if (this.isCrashFree) {\n            return displayCrashFreePercent(value, 0, 3);\n          }\n\n          return typeof value === 'number' ? value.toLocaleString() : value;\n        },\n      },\n      yAxis: this.isCrashFree\n        ? {\n            axisLabel: {\n              formatter: (value: number) => displayCrashFreePercent(value),\n            },\n            scale: true,\n            max: 100,\n          }\n        : {min: 0},\n    };\n  }\n\n  render() {\n    const {zoomRenderProps, timeSeries, previousTimeSeries, releaseSeries} = this.props;\n\n    const ChartComponent = this.isCrashFree ? LineChart : StackedAreaChart;\n\n    return (\n      <ChartComponent\n        {...zoomRenderProps}\n        {...this.chartOptions}\n        legend={this.legend}\n        series={\n          Array.isArray(releaseSeries) ? [...timeSeries, ...releaseSeries] : timeSeries\n        }\n        previousPeriod={previousTimeSeries}\n        onLegendSelectChanged={this.handleLegendSelectChanged}\n        minutesThresholdToDisplaySeconds={MINUTES_THRESHOLD_TO_DISPLAY_SECONDS}\n        transformSinglePointToBar\n      />\n    );\n  }\n}\n\nexport default withPageFilters(ProjectBaseSessionsChart);\n","import {browserHistory} from 'react-router';\nimport type {BarSeriesOption} from 'echarts';\nimport {Location} from 'history';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport BaseChart from 'sentry/components/charts/baseChart';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nexport const ERRORS_BASIC_CHART_PERIODS = ['1h', '24h', '7d', '14d', '30d'];\n\ntype Props = AsyncComponent['props'] & {\n  location: Location;\n  onTotalValuesChange: (value: number | null) => void;\n  organization: Organization;\n  projectId?: string;\n};\n\ntype State = AsyncComponent['state'] & {\n  projects: Project[] | null;\n};\n\nclass ProjectErrorsBasicChart extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      projects: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, projectId} = this.props;\n\n    if (!projectId) {\n      return [];\n    }\n\n    return [\n      [\n        'projects',\n        `/organizations/${organization.slug}/projects/`,\n        {\n          query: {\n            statsPeriod: this.getStatsPeriod(),\n            query: `id:${projectId}`,\n          },\n        },\n      ],\n    ];\n  }\n\n  componentDidMount() {\n    const {location} = this.props;\n    if (!ERRORS_BASIC_CHART_PERIODS.includes(location.query.statsPeriod)) {\n      browserHistory.replace({\n        pathname: location.pathname,\n        query: {\n          ...location.query,\n          statsPeriod: this.getStatsPeriod(),\n          start: undefined,\n          end: undefined,\n        },\n      });\n    }\n  }\n\n  onLoadAllEndpointsSuccess() {\n    this.props.onTotalValuesChange(\n      this.state.projects?.[0]?.stats?.reduce((acc, [, value]) => acc + value, 0) ?? null\n    );\n  }\n\n  getStatsPeriod() {\n    const {location} = this.props;\n    const statsPeriod = location.query.statsPeriod;\n\n    if (ERRORS_BASIC_CHART_PERIODS.includes(statsPeriod)) {\n      return statsPeriod;\n    }\n\n    return DEFAULT_STATS_PERIOD;\n  }\n\n  getSeries(): BarSeriesOption[] {\n    const {projects} = this.state;\n\n    return [\n      {\n        cursor: 'normal' as const,\n        name: t('Errors'),\n        type: 'bar',\n        data:\n          projects?.[0]?.stats?.map(([timestamp, value]) => [timestamp * 1000, value]) ??\n          [],\n      },\n    ];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    const {loading, reloading} = this.state;\n\n    return getDynamicText({\n      value: (\n        <TransitionChart loading={loading} reloading={reloading}>\n          <TransparentLoadingMask visible={reloading} />\n\n          <HeaderTitleLegend>{t('Daily Errors')}</HeaderTitleLegend>\n\n          <BaseChart\n            series={this.getSeries()}\n            isGroupedByDate\n            showTimeInTooltip\n            colors={theme => [theme.purple300, theme.purple200]}\n            grid={{left: '10px', right: '10px', top: '40px', bottom: '0px'}}\n          />\n        </TransitionChart>\n      ),\n      fixed: t('Number of Errors Chart'),\n    });\n  }\n}\n\nexport default ProjectErrorsBasicChart;\n","import {Component} from 'react';\nimport {withTheme} from '@emotion/react';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {shouldFetchPreviousPeriod} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {\n  Organization,\n  PageFilters,\n  SessionApiResponse,\n  SessionFieldWithOperation,\n  SessionStatus,\n} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {percent} from 'sentry/utils';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {\n  filterSessionsInTimeWindow,\n  getCount,\n  getCountSeries,\n  getSessionsInterval,\n  initSessionsChart,\n} from 'sentry/utils/sessions';\nimport {Theme} from 'sentry/utils/theme';\nimport {getCrashFreePercent} from 'sentry/views/releases/utils';\n\nimport {DisplayModes} from '../projectCharts';\n\nconst omitIgnoredProps = (props: Props) =>\n  omit(props, ['api', 'organization', 'children', 'selection.datetime.utc']);\n\ntype ProjectSessionsChartRequestRenderProps = {\n  errored: boolean;\n  loading: boolean;\n  previousTimeseriesData: Series | null;\n  reloading: boolean;\n  timeseriesData: Series[];\n  totalSessions: number | null;\n};\n\ntype Props = {\n  api: Client;\n  children: (renderProps: ProjectSessionsChartRequestRenderProps) => React.ReactNode;\n  displayMode:\n    | DisplayModes.SESSIONS\n    | DisplayModes.STABILITY\n    | DisplayModes.STABILITY_USERS;\n  onTotalValuesChange: (value: number | null) => void;\n  organization: Organization;\n  selection: PageFilters;\n  theme: Theme;\n  disablePrevious?: boolean;\n  query?: string;\n};\n\ntype State = {\n  errored: boolean;\n  previousTimeseriesData: Series | null;\n  reloading: boolean;\n  timeseriesData: Series[] | null;\n  totalSessions: number | null;\n};\n\nclass ProjectSessionsChartRequest extends Component<Props, State> {\n  state: State = {\n    reloading: false,\n    errored: false,\n    timeseriesData: null,\n    previousTimeseriesData: null,\n    totalSessions: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isEqual(omitIgnoredProps(this.props), omitIgnoredProps(prevProps))) {\n      this.fetchData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  private unmounting: boolean = false;\n\n  fetchData = async () => {\n    const {\n      api,\n      selection: {datetime},\n      onTotalValuesChange,\n      displayMode,\n      disablePrevious,\n    } = this.props;\n    const shouldFetchWithPrevious =\n      !disablePrevious &&\n      shouldFetchPreviousPeriod({\n        start: datetime.start,\n        end: datetime.end,\n        period: datetime.period,\n      });\n\n    this.setState(state => ({\n      reloading: state.timeseriesData !== null,\n      errored: false,\n    }));\n\n    try {\n      const queryParams = this.queryParams({shouldFetchWithPrevious});\n      const response: SessionApiResponse = await api.requestPromise(this.path, {\n        query: queryParams,\n      });\n\n      const filteredResponse = filterSessionsInTimeWindow(\n        response,\n        queryParams.start,\n        queryParams.end\n      );\n\n      const {timeseriesData, previousTimeseriesData, totalSessions} =\n        displayMode === DisplayModes.SESSIONS\n          ? this.transformSessionCountData(filteredResponse)\n          : this.transformData(filteredResponse, {\n              fetchedWithPrevious: shouldFetchWithPrevious,\n            });\n\n      if (this.unmounting) {\n        return;\n      }\n\n      this.setState({\n        reloading: false,\n        timeseriesData,\n        previousTimeseriesData,\n        totalSessions,\n      });\n      onTotalValuesChange(totalSessions);\n    } catch {\n      addErrorMessage(t('Error loading chart data'));\n      this.setState({\n        errored: true,\n        reloading: false,\n        timeseriesData: null,\n        previousTimeseriesData: null,\n        totalSessions: null,\n      });\n    }\n  };\n\n  get path() {\n    const {organization} = this.props;\n\n    return `/organizations/${organization.slug}/sessions/`;\n  }\n\n  get field() {\n    const {displayMode} = this.props;\n    return displayMode === DisplayModes.STABILITY_USERS\n      ? SessionFieldWithOperation.USERS\n      : SessionFieldWithOperation.SESSIONS;\n  }\n\n  queryParams({shouldFetchWithPrevious = false}): Record<string, any> {\n    const {selection, query, organization} = this.props;\n    const {datetime, projects, environments: environment} = selection;\n\n    const baseParams = {\n      field: this.field,\n      groupBy: 'session.status',\n      interval: getSessionsInterval(datetime, {\n        highFidelity: organization.features.includes('minute-resolution-sessions'),\n      }),\n      project: projects[0],\n      environment,\n      query,\n    };\n\n    if (!shouldFetchWithPrevious) {\n      return {\n        ...baseParams,\n        ...normalizeDateTimeParams(datetime),\n      };\n    }\n\n    const {period} = selection.datetime;\n    const doubledPeriod = getPeriod(\n      {period, start: undefined, end: undefined},\n      {shouldDoublePeriod: true}\n    ).statsPeriod;\n\n    return {\n      ...baseParams,\n      statsPeriod: doubledPeriod,\n    };\n  }\n\n  transformData(responseData: SessionApiResponse, {fetchedWithPrevious = false}) {\n    const {theme} = this.props;\n    const {field} = this;\n\n    // Take the floor just in case, but data should always be divisible by 2\n    const dataMiddleIndex = Math.floor(responseData.intervals.length / 2);\n\n    // calculate the total number of sessions for this period (exclude previous if there)\n    const totalSessions = responseData.groups.reduce(\n      (acc, group) =>\n        acc +\n        group.series[field]\n          .slice(fetchedWithPrevious ? dataMiddleIndex : 0)\n          .reduce((value, groupAcc) => groupAcc + value, 0),\n      0\n    );\n\n    const previousPeriodTotalSessions = fetchedWithPrevious\n      ? responseData.groups.reduce(\n          (acc, group) =>\n            acc +\n            group.series[field]\n              .slice(0, dataMiddleIndex)\n              .reduce((value, groupAcc) => groupAcc + value, 0),\n          0\n        )\n      : 0;\n\n    // TODO(project-details): refactor this to avoid duplication as we add more session charts\n    const timeseriesData = [\n      {\n        seriesName: t('This Period'),\n        color: theme.green300,\n        data: responseData.intervals\n          .slice(fetchedWithPrevious ? dataMiddleIndex : 0)\n          .map((interval, i) => {\n            const totalIntervalSessions = responseData.groups.reduce(\n              (acc, group) =>\n                acc +\n                group.series[field].slice(fetchedWithPrevious ? dataMiddleIndex : 0)[i],\n              0\n            );\n\n            const intervalCrashedSessions =\n              responseData.groups\n                .find(group => group.by['session.status'] === 'crashed')\n                ?.series[field].slice(fetchedWithPrevious ? dataMiddleIndex : 0)[i] ?? 0;\n\n            const crashedSessionsPercent = percent(\n              intervalCrashedSessions,\n              totalIntervalSessions\n            );\n\n            return {\n              name: interval,\n              value:\n                totalSessions === 0 && previousPeriodTotalSessions === 0\n                  ? 0\n                  : totalIntervalSessions === 0\n                  ? null\n                  : getCrashFreePercent(100 - crashedSessionsPercent),\n            };\n          }),\n      },\n    ] as Series[]; // TODO(project-detail): Change SeriesDataUnit value to support null\n\n    const previousTimeseriesData = fetchedWithPrevious\n      ? ({\n          seriesName: t('Previous Period'),\n          data: responseData.intervals.slice(0, dataMiddleIndex).map((_interval, i) => {\n            const totalIntervalSessions = responseData.groups.reduce(\n              (acc, group) => acc + group.series[field].slice(0, dataMiddleIndex)[i],\n              0\n            );\n\n            const intervalCrashedSessions =\n              responseData.groups\n                .find(group => group.by['session.status'] === 'crashed')\n                ?.series[field].slice(0, dataMiddleIndex)[i] ?? 0;\n\n            const crashedSessionsPercent = percent(\n              intervalCrashedSessions,\n              totalIntervalSessions\n            );\n\n            return {\n              name: responseData.intervals[i + dataMiddleIndex],\n              value:\n                totalSessions === 0 && previousPeriodTotalSessions === 0\n                  ? 0\n                  : totalIntervalSessions === 0\n                  ? null\n                  : getCrashFreePercent(100 - crashedSessionsPercent),\n            };\n          }),\n        } as Series) // TODO(project-detail): Change SeriesDataUnit value to support null\n      : null;\n\n    return {\n      totalSessions,\n      timeseriesData,\n      previousTimeseriesData,\n    };\n  }\n\n  transformSessionCountData(responseData: SessionApiResponse) {\n    const {theme} = this.props;\n    const sessionsChart = initSessionsChart(theme);\n    const {intervals, groups} = responseData;\n\n    const totalSessions = getCount(\n      responseData.groups,\n      SessionFieldWithOperation.SESSIONS\n    );\n\n    const chartData = [\n      {\n        ...sessionsChart[SessionStatus.HEALTHY],\n        data: getCountSeries(\n          SessionFieldWithOperation.SESSIONS,\n          groups.find(g => g.by['session.status'] === SessionStatus.HEALTHY),\n          intervals\n        ),\n      },\n      {\n        ...sessionsChart[SessionStatus.ERRORED],\n        data: getCountSeries(\n          SessionFieldWithOperation.SESSIONS,\n          groups.find(g => g.by['session.status'] === SessionStatus.ERRORED),\n          intervals\n        ),\n      },\n      {\n        ...sessionsChart[SessionStatus.ABNORMAL],\n        data: getCountSeries(\n          SessionFieldWithOperation.SESSIONS,\n          groups.find(g => g.by['session.status'] === SessionStatus.ABNORMAL),\n          intervals\n        ),\n      },\n      {\n        ...sessionsChart[SessionStatus.CRASHED],\n        data: getCountSeries(\n          SessionFieldWithOperation.SESSIONS,\n          groups.find(g => g.by['session.status'] === SessionStatus.CRASHED),\n          intervals\n        ),\n      },\n    ];\n\n    return {\n      timeseriesData: chartData,\n      previousTimeseriesData: null,\n      totalSessions,\n    };\n  }\n\n  render() {\n    const {children} = this.props;\n    const {timeseriesData, reloading, errored, totalSessions, previousTimeseriesData} =\n      this.state;\n    const loading = timeseriesData === null;\n\n    return children({\n      loading,\n      reloading,\n      errored,\n      totalSessions,\n      previousTimeseriesData,\n      timeseriesData: timeseriesData ?? [],\n    });\n  }\n}\n\nexport default withTheme(ProjectSessionsChartRequest);\n","import withOrganization from 'sentry/utils/withOrganization';\n\nimport ProjectDetail from './projectDetail';\n\nfunction ProjectDetailContainer(\n  props: Omit<\n    React.ComponentProps<typeof ProjectDetail>,\n    'projects' | 'loadingProjects' | 'selection'\n  >\n) {\n  return <ProjectDetail {...props} />;\n}\n\nexport default withOrganization(ProjectDetailContainer);\n","import Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport CreateAlertButton from 'sentry/components/createAlertButton';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\n\nconst DOCS_URL = 'https://docs.sentry.io/product/alerts-notifications/metric-alerts/';\n\ntype Props = {\n  organization: Organization;\n  projectSlug: string;\n};\n\nfunction MissingAlertsButtons({organization, projectSlug}: Props) {\n  return (\n    <ButtonBar gap={1}>\n      <CreateAlertButton\n        organization={organization}\n        iconProps={{size: 'xs'}}\n        size=\"sm\"\n        priority=\"primary\"\n        referrer=\"project_detail\"\n        projectSlug={projectSlug}\n        hideIcon\n      >\n        {t('Create Alert')}\n      </CreateAlertButton>\n      <Button size=\"sm\" external href={DOCS_URL}>\n        {t('Learn More')}\n      </Button>\n    </ButtonBar>\n  );\n}\n\nexport default MissingAlertsButtons;\n","// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\n\nimport {navigateTo} from 'sentry/actionCreators/navigation';\nimport Feature from 'sentry/components/acl/feature';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport FeatureTourModal from 'sentry/components/modals/featureTourModal';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {PERFORMANCE_TOUR_STEPS} from 'sentry/views/performance/onboarding';\n\nconst DOCS_URL = 'https://docs.sentry.io/performance-monitoring/getting-started/';\n\ntype Props = {\n  organization: Organization;\n} & WithRouterProps;\n\nfunction MissingPerformanceButtons({organization, router}: Props) {\n  function handleTourAdvance(step: number, duration: number) {\n    trackAnalyticsEvent({\n      eventKey: 'project_detail.performance_tour.advance',\n      eventName: 'Project Detail: Performance Tour Advance',\n      organization_id: parseInt(organization.id, 10),\n      step,\n      duration,\n    });\n  }\n\n  function handleClose(step: number, duration: number) {\n    trackAnalyticsEvent({\n      eventKey: 'project_detail.performance_tour.close',\n      eventName: 'Project Detail: Performance Tour Close',\n      organization_id: parseInt(organization.id, 10),\n      step,\n      duration,\n    });\n  }\n\n  return (\n    <Feature\n      hookName=\"feature-disabled:project-performance-score-card\"\n      features={['performance-view']}\n      organization={organization}\n    >\n      <ButtonBar gap={1}>\n        <Button\n          size=\"sm\"\n          priority=\"primary\"\n          onClick={event => {\n            event.preventDefault();\n            // TODO: add analytics here for this specific action.\n            navigateTo(\n              `/organizations/${organization.slug}/performance/?project=:project#performance-sidequest`,\n              router\n            );\n          }}\n        >\n          {t('Start Setup')}\n        </Button>\n\n        <FeatureTourModal\n          steps={PERFORMANCE_TOUR_STEPS}\n          onAdvance={handleTourAdvance}\n          onCloseModal={handleClose}\n          doneText={t('Start Setup')}\n          doneUrl={DOCS_URL}\n        >\n          {({showModal}) => (\n            <Button size=\"sm\" onClick={showModal}>\n              {t('Get Tour')}\n            </Button>\n          )}\n        </FeatureTourModal>\n      </ButtonBar>\n    </Feature>\n  );\n}\n\nexport default withRouter(MissingPerformanceButtons);\n","import {Component, Fragment} from 'react';\nimport {browserHistory, InjectedRouter} from 'react-router';\nimport {withTheme} from '@emotion/react';\nimport {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport {BarChart} from 'sentry/components/charts/barChart';\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\nimport OptionSelector from 'sentry/components/charts/optionSelector';\nimport {\n  ChartContainer,\n  ChartControls,\n  InlineContainer,\n  SectionHeading,\n  SectionValue,\n} from 'sentry/components/charts/styles';\nimport {\n  getDiffInMinutes,\n  ONE_HOUR,\n  ONE_WEEK,\n  TWENTY_FOUR_HOURS,\n  TWO_WEEKS,\n} from 'sentry/components/charts/utils';\nimport {Panel} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport CHART_PALETTE from 'sentry/constants/chartPalette';\nimport NOT_AVAILABLE_MESSAGES from 'sentry/constants/notAvailableMessages';\nimport {t} from 'sentry/locale';\nimport {Organization, SelectValue} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {Theme} from 'sentry/utils/theme';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withApi from 'sentry/utils/withApi';\nimport {\n  getSessionTermDescription,\n  SessionTerm,\n} from 'sentry/views/releases/utils/sessionTerm';\n\nimport {getTermHelp, PERFORMANCE_TERM} from '../performance/data';\n\nimport ProjectBaseEventsChart from './charts/projectBaseEventsChart';\nimport ProjectBaseSessionsChart from './charts/projectBaseSessionsChart';\nimport ProjectErrorsBasicChart from './charts/projectErrorsBasicChart';\n\nexport enum DisplayModes {\n  APDEX = 'apdex',\n  FAILURE_RATE = 'failure_rate',\n  TPM = 'tpm',\n  ERRORS = 'errors',\n  TRANSACTIONS = 'transactions',\n  STABILITY = 'crash_free',\n  STABILITY_USERS = 'crash_free_users',\n  SESSIONS = 'sessions',\n}\n\ntype Props = {\n  api: Client;\n  chartId: string;\n  chartIndex: number;\n  hasSessions: boolean | null;\n  hasTransactions: boolean;\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n  theme: Theme;\n  visibleCharts: string[];\n  projectId?: string;\n  query?: string;\n};\n\ntype State = {\n  totalValues: number | null;\n};\n\nclass ProjectCharts extends Component<Props, State> {\n  state: State = {\n    totalValues: null,\n  };\n\n  get defaultDisplayModes() {\n    const {hasSessions, hasTransactions} = this.props;\n\n    if (!hasSessions && !hasTransactions) {\n      return [DisplayModes.ERRORS];\n    }\n\n    if (hasSessions && !hasTransactions) {\n      return [DisplayModes.STABILITY, DisplayModes.ERRORS];\n    }\n\n    if (!hasSessions && hasTransactions) {\n      return [DisplayModes.FAILURE_RATE, DisplayModes.APDEX];\n    }\n\n    return [DisplayModes.STABILITY, DisplayModes.APDEX];\n  }\n\n  get otherActiveDisplayModes() {\n    const {location, visibleCharts, chartId} = this.props;\n\n    return visibleCharts\n      .filter(visibleChartId => visibleChartId !== chartId)\n      .map(urlKey => {\n        return decodeScalar(\n          location.query[urlKey],\n          this.defaultDisplayModes[visibleCharts.findIndex(value => value === urlKey)]\n        );\n      });\n  }\n\n  get displayMode() {\n    const {location, chartId, chartIndex} = this.props;\n    const displayMode =\n      decodeScalar(location.query[chartId]) || this.defaultDisplayModes[chartIndex];\n\n    if (!Object.values(DisplayModes).includes(displayMode as DisplayModes)) {\n      return this.defaultDisplayModes[chartIndex];\n    }\n\n    return displayMode;\n  }\n\n  get displayModes(): SelectValue<string>[] {\n    const {organization, hasSessions, hasTransactions} = this.props;\n    const hasPerformance = organization.features.includes('performance-view');\n    const noPerformanceTooltip = NOT_AVAILABLE_MESSAGES.performance;\n    const noHealthTooltip = NOT_AVAILABLE_MESSAGES.releaseHealth;\n\n    return [\n      {\n        value: DisplayModes.STABILITY,\n        label: t('Crash Free Sessions'),\n        disabled:\n          this.otherActiveDisplayModes.includes(DisplayModes.STABILITY) || !hasSessions,\n        tooltip: !hasSessions ? noHealthTooltip : undefined,\n      },\n      {\n        value: DisplayModes.STABILITY_USERS,\n        label: t('Crash Free Users'),\n        disabled:\n          this.otherActiveDisplayModes.includes(DisplayModes.STABILITY_USERS) ||\n          !hasSessions,\n        tooltip: !hasSessions ? noHealthTooltip : undefined,\n      },\n      {\n        value: DisplayModes.APDEX,\n        label: t('Apdex'),\n        disabled:\n          this.otherActiveDisplayModes.includes(DisplayModes.APDEX) ||\n          !hasPerformance ||\n          !hasTransactions,\n        tooltip:\n          hasPerformance && hasTransactions\n            ? getTermHelp(organization, PERFORMANCE_TERM.APDEX)\n            : noPerformanceTooltip,\n      },\n      {\n        value: DisplayModes.FAILURE_RATE,\n        label: t('Failure Rate'),\n        disabled:\n          this.otherActiveDisplayModes.includes(DisplayModes.FAILURE_RATE) ||\n          !hasPerformance ||\n          !hasTransactions,\n        tooltip:\n          hasPerformance && hasTransactions\n            ? getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE)\n            : noPerformanceTooltip,\n      },\n      {\n        value: DisplayModes.TPM,\n        label: t('Transactions Per Minute'),\n        disabled:\n          this.otherActiveDisplayModes.includes(DisplayModes.TPM) ||\n          !hasPerformance ||\n          !hasTransactions,\n        tooltip:\n          hasPerformance && hasTransactions\n            ? getTermHelp(organization, PERFORMANCE_TERM.TPM)\n            : noPerformanceTooltip,\n      },\n      {\n        value: DisplayModes.ERRORS,\n        label: t('Number of Errors'),\n        disabled: this.otherActiveDisplayModes.includes(DisplayModes.ERRORS),\n      },\n      {\n        value: DisplayModes.SESSIONS,\n        label: t('Number of Sessions'),\n        disabled:\n          this.otherActiveDisplayModes.includes(DisplayModes.SESSIONS) || !hasSessions,\n        tooltip: !hasSessions ? noHealthTooltip : undefined,\n      },\n      {\n        value: DisplayModes.TRANSACTIONS,\n        label: t('Number of Transactions'),\n        disabled:\n          this.otherActiveDisplayModes.includes(DisplayModes.TRANSACTIONS) ||\n          !hasPerformance ||\n          !hasTransactions,\n        tooltip: hasPerformance && hasTransactions ? undefined : noPerformanceTooltip,\n      },\n    ];\n  }\n\n  get summaryHeading() {\n    switch (this.displayMode) {\n      case DisplayModes.ERRORS:\n        return t('Total Errors');\n      case DisplayModes.STABILITY:\n      case DisplayModes.SESSIONS:\n        return t('Total Sessions');\n      case DisplayModes.STABILITY_USERS:\n        return t('Total Users');\n      case DisplayModes.APDEX:\n      case DisplayModes.FAILURE_RATE:\n      case DisplayModes.TPM:\n      case DisplayModes.TRANSACTIONS:\n      default:\n        return t('Total Transactions');\n    }\n  }\n\n  get barChartInterval() {\n    const {query} = this.props.location;\n\n    const diffInMinutes = getDiffInMinutes({\n      ...query,\n      period: decodeScalar(query.statsPeriod),\n    });\n\n    if (diffInMinutes >= TWO_WEEKS) {\n      return '1d';\n    }\n\n    if (diffInMinutes >= ONE_WEEK) {\n      return '12h';\n    }\n\n    if (diffInMinutes > TWENTY_FOUR_HOURS) {\n      return '6h';\n    }\n\n    if (diffInMinutes === TWENTY_FOUR_HOURS) {\n      return '1h';\n    }\n\n    if (diffInMinutes <= ONE_HOUR) {\n      return '1m';\n    }\n\n    return '15m';\n  }\n\n  handleDisplayModeChange = (value: string) => {\n    const {location, chartId, chartIndex, organization} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: `project_detail.change_chart${chartIndex + 1}`,\n      eventName: `Project Detail: Change Chart #${chartIndex + 1}`,\n      organization_id: parseInt(organization.id, 10),\n      metric: value,\n    });\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {...location.query, [chartId]: value},\n    });\n  };\n\n  handleTotalValuesChange = (value: number | null) => {\n    if (value !== this.state.totalValues) {\n      this.setState({totalValues: value});\n    }\n  };\n\n  render() {\n    const {api, router, location, organization, theme, projectId, hasSessions, query} =\n      this.props;\n    const {totalValues} = this.state;\n    const hasDiscover = organization.features.includes('discover-basic');\n    const displayMode = this.displayMode;\n\n    return (\n      <Panel>\n        <ChartContainer>\n          {!defined(hasSessions) ? (\n            <LoadingPanel />\n          ) : (\n            <Fragment>\n              {displayMode === DisplayModes.APDEX && (\n                <ProjectBaseEventsChart\n                  title={t('Apdex')}\n                  help={getTermHelp(organization, PERFORMANCE_TERM.APDEX)}\n                  query={new MutableSearch([\n                    'event.type:transaction',\n                    query ?? '',\n                  ]).formatString()}\n                  yAxis=\"apdex()\"\n                  field={['apdex()']}\n                  api={api}\n                  router={router}\n                  organization={organization}\n                  onTotalValuesChange={this.handleTotalValuesChange}\n                  colors={[CHART_PALETTE[0][0], theme.purple200]}\n                />\n              )}\n              {displayMode === DisplayModes.FAILURE_RATE && (\n                <ProjectBaseEventsChart\n                  title={t('Failure Rate')}\n                  help={getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE)}\n                  query={new MutableSearch([\n                    'event.type:transaction',\n                    query ?? '',\n                  ]).formatString()}\n                  yAxis=\"failure_rate()\"\n                  field={[`failure_rate()`]}\n                  api={api}\n                  router={router}\n                  organization={organization}\n                  onTotalValuesChange={this.handleTotalValuesChange}\n                  colors={[theme.red300, theme.purple200]}\n                />\n              )}\n              {displayMode === DisplayModes.TPM && (\n                <ProjectBaseEventsChart\n                  title={t('Transactions Per Minute')}\n                  help={getTermHelp(organization, PERFORMANCE_TERM.TPM)}\n                  query={new MutableSearch([\n                    'event.type:transaction',\n                    query ?? '',\n                  ]).formatString()}\n                  yAxis=\"tpm()\"\n                  field={[`tpm()`]}\n                  api={api}\n                  router={router}\n                  organization={organization}\n                  onTotalValuesChange={this.handleTotalValuesChange}\n                  colors={[theme.yellow300, theme.purple200]}\n                  disablePrevious\n                />\n              )}\n              {displayMode === DisplayModes.ERRORS &&\n                (hasDiscover ? (\n                  <ProjectBaseEventsChart\n                    title={t('Number of Errors')}\n                    query={new MutableSearch([\n                      '!event.type:transaction',\n                      query ?? '',\n                    ]).formatString()}\n                    yAxis=\"count()\"\n                    field={[`count()`]}\n                    api={api}\n                    router={router}\n                    organization={organization}\n                    onTotalValuesChange={this.handleTotalValuesChange}\n                    colors={[theme.purple300, theme.purple200]}\n                    interval={this.barChartInterval}\n                    chartComponent={BarChart}\n                    disableReleases\n                  />\n                ) : (\n                  <ProjectErrorsBasicChart\n                    organization={organization}\n                    projectId={projectId}\n                    location={location}\n                    onTotalValuesChange={this.handleTotalValuesChange}\n                  />\n                ))}\n              {displayMode === DisplayModes.TRANSACTIONS && (\n                <ProjectBaseEventsChart\n                  title={t('Number of Transactions')}\n                  query={new MutableSearch([\n                    'event.type:transaction',\n                    query ?? '',\n                  ]).formatString()}\n                  yAxis=\"count()\"\n                  field={[`count()`]}\n                  api={api}\n                  router={router}\n                  organization={organization}\n                  onTotalValuesChange={this.handleTotalValuesChange}\n                  colors={[theme.gray200, theme.purple200]}\n                  interval={this.barChartInterval}\n                  chartComponent={BarChart}\n                  disableReleases\n                />\n              )}\n              {displayMode === DisplayModes.STABILITY && (\n                <ProjectBaseSessionsChart\n                  title={t('Crash Free Sessions')}\n                  help={getSessionTermDescription(SessionTerm.STABILITY, null)}\n                  router={router}\n                  api={api}\n                  organization={organization}\n                  onTotalValuesChange={this.handleTotalValuesChange}\n                  displayMode={displayMode}\n                  query={query}\n                />\n              )}\n              {displayMode === DisplayModes.STABILITY_USERS && (\n                <ProjectBaseSessionsChart\n                  title={t('Crash Free Users')}\n                  help={getSessionTermDescription(SessionTerm.CRASH_FREE_USERS, null)}\n                  router={router}\n                  api={api}\n                  organization={organization}\n                  onTotalValuesChange={this.handleTotalValuesChange}\n                  displayMode={displayMode}\n                  query={query}\n                />\n              )}\n              {displayMode === DisplayModes.SESSIONS && (\n                <ProjectBaseSessionsChart\n                  title={t('Number of Sessions')}\n                  router={router}\n                  api={api}\n                  organization={organization}\n                  onTotalValuesChange={this.handleTotalValuesChange}\n                  displayMode={displayMode}\n                  disablePrevious\n                  query={query}\n                />\n              )}\n            </Fragment>\n          )}\n        </ChartContainer>\n        <ChartControls>\n          {/* if hasSessions is not yet defined, it means that request is still in progress and we can't decide what default chart to show */}\n          {defined(hasSessions) ? (\n            <Fragment>\n              <InlineContainer>\n                <SectionHeading>{this.summaryHeading}</SectionHeading>\n                <SectionValue>\n                  {typeof totalValues === 'number'\n                    ? totalValues.toLocaleString()\n                    : '\\u2014'}\n                </SectionValue>\n              </InlineContainer>\n              <InlineContainer>\n                <OptionSelector\n                  title={t('Display')}\n                  selected={displayMode}\n                  options={this.displayModes}\n                  onChange={this.handleDisplayModeChange}\n                />\n              </InlineContainer>\n            </Fragment>\n          ) : (\n            <Placeholder height=\"34px\" />\n          )}\n        </ChartControls>\n      </Panel>\n    );\n  }\n}\n\nexport default withApi(withTheme(ProjectCharts));\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport pick from 'lodash/pick';\n\nimport {fetchOrganizationDetails} from 'sentry/actionCreators/organization';\nimport {updateProjects} from 'sentry/actionCreators/pageFilters';\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport Feature from 'sentry/components/acl/feature';\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport CreateAlertButton from 'sentry/components/createAlertButton';\nimport GlobalAppStoreConnectUpdateAlert from 'sentry/components/globalAppStoreConnectUpdateAlert';\nimport GlobalEventProcessingAlert from 'sentry/components/globalEventProcessingAlert';\nimport {GlobalSdkUpdateAlert} from 'sentry/components/globalSdkUpdateAlert';\nimport IdBadge from 'sentry/components/idBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport MissingProjectMembership from 'sentry/components/projects/missingProjectMembership';\nimport {DEFAULT_RELATIVE_PERIODS} from 'sentry/constants';\nimport {IconSettings} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport withProjects from 'sentry/utils/withProjects';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport {ERRORS_BASIC_CHART_PERIODS} from './charts/projectErrorsBasicChart';\nimport ProjectScoreCards from './projectScoreCards/projectScoreCards';\nimport ProjectCharts from './projectCharts';\nimport ProjectFilters from './projectFilters';\nimport ProjectIssues from './projectIssues';\nimport ProjectLatestAlerts from './projectLatestAlerts';\nimport ProjectLatestReleases from './projectLatestReleases';\nimport ProjectQuickLinks from './projectQuickLinks';\nimport ProjectTeamAccess from './projectTeamAccess';\n\ntype RouteParams = {\n  orgId: string;\n  projectId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  loadingProjects: boolean;\n  organization: Organization;\n  projects: Project[];\n  selection: PageFilters;\n};\n\ntype State = AsyncView['state'];\n\nclass ProjectDetail extends AsyncView<Props, State> {\n  getTitle() {\n    const {params} = this.props;\n\n    return routeTitleGen(t('Project %s', params.projectId), params.orgId, false);\n  }\n\n  componentDidMount() {\n    this.syncProjectWithSlug();\n  }\n\n  componentDidUpdate() {\n    this.syncProjectWithSlug();\n  }\n\n  get project() {\n    const {projects, params} = this.props;\n\n    return projects.find(p => p.slug === params.projectId);\n  }\n\n  handleProjectChange = (selectedProjects: number[]) => {\n    const {projects, router, location, organization} = this.props;\n\n    const newlySelectedProject = projects.find(p => p.id === String(selectedProjects[0]));\n\n    // if we change project in global header, we need to sync the project slug in the URL\n    if (newlySelectedProject?.id) {\n      router.replace({\n        pathname: `/organizations/${organization.slug}/projects/${newlySelectedProject.slug}/`,\n        query: {\n          ...location.query,\n          project: newlySelectedProject.id,\n          environment: undefined,\n        },\n      });\n    }\n  };\n\n  handleSearch = (query: string) => {\n    const {router, location} = this.props;\n    router.replace({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        query,\n      },\n    });\n  };\n\n  tagValueLoader = (key: string, search: string) => {\n    const {location, organization} = this.props;\n    const {project: projectId} = location.query;\n\n    return fetchTagValues(\n      this.api,\n      organization.slug,\n      key,\n      search,\n      projectId ? [projectId] : null,\n      location.query\n    );\n  };\n\n  syncProjectWithSlug() {\n    const {router, location} = this.props;\n    const projectId = this.project?.id;\n\n    if (projectId && projectId !== location.query.project) {\n      // if someone visits /organizations/sentry/projects/javascript/ (without ?project=XXX) we need to update URL and globalSelection with the right project ID\n      updateProjects([Number(projectId)], router);\n    }\n  }\n\n  onRetryProjects = () => {\n    const {params} = this.props;\n    fetchOrganizationDetails(this.api, params.orgId, true, false);\n  };\n\n  isProjectStabilized() {\n    const {selection, location} = this.props;\n    const projectId = this.project?.id;\n\n    return (\n      defined(projectId) &&\n      projectId === location.query.project &&\n      projectId === String(selection.projects[0])\n    );\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderNoAccess(project: Project) {\n    const {organization} = this.props;\n\n    return (\n      <PageContent>\n        <MissingProjectMembership organization={organization} project={project} />\n      </PageContent>\n    );\n  }\n\n  renderProjectNotFound() {\n    return (\n      <PageContent>\n        <LoadingError\n          message={t('This project could not be found.')}\n          onRetry={this.onRetryProjects}\n        />\n      </PageContent>\n    );\n  }\n\n  renderBody() {\n    const {organization, params, location, router, loadingProjects, selection} =\n      this.props;\n    const project = this.project;\n    const {query} = location.query;\n    const hasPerformance = organization.features.includes('performance-view');\n    const hasDiscover = organization.features.includes('discover-basic');\n    const hasTransactions = hasPerformance && project?.firstTransactionEvent;\n    const isProjectStabilized = this.isProjectStabilized();\n    const visibleCharts = ['chart1'];\n    const hasSessions = project?.hasSessions ?? null;\n    const hasOnlyBasicChart = !hasPerformance && !hasDiscover && !hasSessions;\n\n    if (hasTransactions || hasSessions) {\n      visibleCharts.push('chart2');\n    }\n\n    if (!loadingProjects && !project) {\n      return this.renderProjectNotFound();\n    }\n\n    if (!loadingProjects && project && !project.hasAccess) {\n      return this.renderNoAccess(project);\n    }\n\n    return (\n      <PageFiltersContainer skipLoadLastUsed showAbsolute={!hasOnlyBasicChart}>\n        <NoProjectMessage organization={organization}>\n          <StyledPageContent>\n            <Layout.Header>\n              <Layout.HeaderContent>\n                <Breadcrumbs\n                  crumbs={[\n                    {\n                      to: `/organizations/${params.orgId}/projects/`,\n                      label: t('Projects'),\n                    },\n                    {label: t('Project Details')},\n                  ]}\n                />\n                <Layout.Title>\n                  {project && (\n                    <IdBadge\n                      project={project}\n                      avatarSize={28}\n                      hideOverflow=\"100%\"\n                      disableLink\n                    />\n                  )}\n                </Layout.Title>\n              </Layout.HeaderContent>\n\n              <Layout.HeaderActions>\n                <ButtonBar gap={1}>\n                  <Button\n                    to={\n                      // if we are still fetching project, we can use project slug to build issue stream url and let the redirect handle it\n                      project?.id\n                        ? `/organizations/${params.orgId}/issues/?project=${project.id}`\n                        : `/${params.orgId}/${params.projectId}`\n                    }\n                  >\n                    {t('View All Issues')}\n                  </Button>\n                  <CreateAlertButton\n                    organization={organization}\n                    projectSlug={params.projectId}\n                  />\n                  <Button\n                    icon={<IconSettings />}\n                    aria-label={t('Settings')}\n                    to={`/settings/${params.orgId}/projects/${params.projectId}/`}\n                  />\n                </ButtonBar>\n              </Layout.HeaderActions>\n            </Layout.Header>\n\n            <Layout.Body noRowGap>\n              {project && <StyledGlobalEventProcessingAlert projects={[project]} />}\n              <Layout.Main fullWidth>\n                <StyledSdkUpdatesAlert />\n              </Layout.Main>\n              <StyledGlobalAppStoreConnectUpdateAlert\n                project={project}\n                organization={organization}\n              />\n              <Layout.Main>\n                <ProjectFiltersWrapper>\n                  <ProjectFilters\n                    query={query}\n                    onSearch={this.handleSearch}\n                    relativeDateOptions={\n                      hasOnlyBasicChart\n                        ? pick(DEFAULT_RELATIVE_PERIODS, ERRORS_BASIC_CHART_PERIODS)\n                        : undefined\n                    }\n                    tagValueLoader={this.tagValueLoader}\n                  />\n                </ProjectFiltersWrapper>\n\n                <ProjectScoreCards\n                  organization={organization}\n                  isProjectStabilized={isProjectStabilized}\n                  selection={selection}\n                  hasSessions={hasSessions}\n                  hasTransactions={hasTransactions}\n                  query={query}\n                />\n                {isProjectStabilized && (\n                  <Fragment>\n                    {visibleCharts.map((id, index) => (\n                      <ProjectCharts\n                        location={location}\n                        organization={organization}\n                        router={router}\n                        key={`project-charts-${id}`}\n                        chartId={id}\n                        chartIndex={index}\n                        projectId={project?.id}\n                        hasSessions={hasSessions}\n                        hasTransactions={!!hasTransactions}\n                        visibleCharts={visibleCharts}\n                        query={query}\n                      />\n                    ))}\n                    <ProjectIssues\n                      organization={organization}\n                      location={location}\n                      projectId={selection.projects[0]}\n                      query={query}\n                      api={this.api}\n                    />\n                  </Fragment>\n                )}\n              </Layout.Main>\n              <Layout.Side>\n                <ProjectTeamAccess organization={organization} project={project} />\n                <Feature features={['incidents']} organization={organization}>\n                  <ProjectLatestAlerts\n                    organization={organization}\n                    projectSlug={params.projectId}\n                    location={location}\n                    isProjectStabilized={isProjectStabilized}\n                  />\n                </Feature>\n                <ProjectLatestReleases\n                  organization={organization}\n                  projectSlug={params.projectId}\n                  projectId={project?.id}\n                  location={location}\n                  isProjectStabilized={isProjectStabilized}\n                />\n                <ProjectQuickLinks\n                  organization={organization}\n                  project={project}\n                  location={location}\n                />\n              </Layout.Side>\n            </Layout.Body>\n          </StyledPageContent>\n        </NoProjectMessage>\n      </PageFiltersContainer>\n    );\n  }\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nconst ProjectFiltersWrapper = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledSdkUpdatesAlert = styled(GlobalSdkUpdateAlert)`\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    margin-bottom: ${space(2)};\n  }\n`;\n\nconst StyledGlobalEventProcessingAlert = styled(GlobalEventProcessingAlert)`\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    margin-bottom: 0;\n  }\n`;\n\nconst StyledGlobalAppStoreConnectUpdateAlert = styled(GlobalAppStoreConnectUpdateAlert)`\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    margin-bottom: 0;\n  }\n`;\n\nStyledGlobalAppStoreConnectUpdateAlert.defaultProps = {\n  Wrapper: p => <Layout.Main fullWidth {...p} />,\n};\n\nexport default withProjects(withPageFilters(ProjectDetail));\n","import styled from '@emotion/styled';\n\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Tag} from 'sentry/types';\nimport {SEMVER_TAGS} from 'sentry/utils/discover/fields';\n\nimport {TagValueLoader} from '../issueList/types';\n\ntype Props = {\n  onSearch: (q: string) => void;\n  query: string;\n  relativeDateOptions: React.ComponentProps<typeof DatePageFilter>['relativeOptions'];\n  tagValueLoader: TagValueLoader;\n};\n\nfunction ProjectFilters({query, relativeDateOptions, tagValueLoader, onSearch}: Props) {\n  const getTagValues = async (tag: Tag, currentQuery: string): Promise<string[]> => {\n    const values = await tagValueLoader(tag.key, currentQuery);\n    return values.map(({value}) => value);\n  };\n\n  return (\n    <FiltersWrapper>\n      <PageFilterBar>\n        <EnvironmentPageFilter />\n        <DatePageFilter relativeOptions={relativeDateOptions} alignDropdown=\"left\" />\n      </PageFilterBar>\n      <GuideAnchor target=\"releases_search\" position=\"bottom\">\n        <SmartSearchBar\n          searchSource=\"project_filters\"\n          query={query}\n          placeholder={t('Search by release version, build, package, or stage')}\n          hasRecentSearches={false}\n          supportedTags={{\n            ...SEMVER_TAGS,\n            release: {\n              key: 'release',\n              name: 'release',\n            },\n          }}\n          maxMenuHeight={500}\n          onSearch={onSearch}\n          onGetTagValues={getTagValues}\n        />\n      </GuideAnchor>\n    </FiltersWrapper>\n  );\n}\n\nconst FiltersWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(0, max-content) 1fr;\n  gap: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nexport default ProjectFilters;\n","import {Fragment, useCallback, useEffect, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport pick from 'lodash/pick';\nimport * as qs from 'query-string';\n\nimport {Client} from 'sentry/api';\nimport Button, {ButtonLabel} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DiscoverButton from 'sentry/components/discoverButton';\nimport GroupList from 'sentry/components/issues/groupList';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport QueryCount from 'sentry/components/queryCount';\nimport {DEFAULT_RELATIVE_PERIODS, DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport NoGroupsHandler from '../issueList/noGroupsHandler';\n\nenum IssuesType {\n  NEW = 'new',\n  UNHANDLED = 'unhandled',\n  REGRESSED = 'regressed',\n  RESOLVED = 'resolved',\n  ALL = 'all',\n}\n\nenum IssuesQuery {\n  NEW = 'is:unresolved is:for_review',\n  UNHANDLED = 'error.unhandled:true is:unresolved',\n  REGRESSED = 'regressed_in_release:latest',\n  RESOLVED = 'is:resolved',\n  ALL = '',\n}\n\ntype Count = {\n  all: number;\n  new: number;\n  regressed: number;\n  resolved: number;\n  unhandled: number;\n};\n\ntype Props = {\n  api: Client;\n  location: Location;\n  organization: Organization;\n  projectId: number;\n  query?: string;\n};\n\nfunction ProjectIssues({organization, location, projectId, query, api}: Props) {\n  const [pageLinks, setPageLinks] = useState<string | undefined>();\n  const [onCursor, setOnCursor] = useState<(() => void) | undefined>();\n  const [issuesType, setIssuesType] = useState<IssuesType | string>(\n    (location.query.issuesType as string) || IssuesType.UNHANDLED\n  );\n  const [issuesCount, setIssuesCount] = useState<Count>({\n    all: 0,\n    new: 0,\n    regressed: 0,\n    resolved: 0,\n    unhandled: 0,\n  });\n\n  const fetchIssuesCount = useCallback(async () => {\n    const getIssueCountEndpoint = queryParameters => {\n      const issuesCountPath = `/organizations/${organization.slug}/issues-count/`;\n\n      return `${issuesCountPath}?${qs.stringify(queryParameters)}`;\n    };\n    const params = [\n      `${IssuesQuery.NEW}`,\n      `${IssuesQuery.ALL}`,\n      `${IssuesQuery.RESOLVED}`,\n      `${IssuesQuery.UNHANDLED}`,\n      `${IssuesQuery.REGRESSED}`,\n    ];\n    const queryParams = params.map(param => param);\n    const queryParameters = {\n      project: projectId,\n      query: queryParams,\n      ...(!location.query.start && {\n        statsPeriod: location.query.statsPeriod || DEFAULT_STATS_PERIOD,\n      }),\n      start: location.query.start,\n      end: location.query.end,\n      environment: location.query.environment,\n      cursor: location.query.cursor,\n    };\n\n    const issueCountEndpoint = getIssueCountEndpoint(queryParameters);\n\n    try {\n      const data = await api.requestPromise(issueCountEndpoint);\n      setIssuesCount({\n        all: data[`${IssuesQuery.ALL}`] || 0,\n        new: data[`${IssuesQuery.NEW}`] || 0,\n        resolved: data[`${IssuesQuery.RESOLVED}`] || 0,\n        unhandled: data[`${IssuesQuery.UNHANDLED}`] || 0,\n        regressed: data[`${IssuesQuery.REGRESSED}`] || 0,\n      });\n    } catch {\n      // do nothing\n    }\n  }, [\n    api,\n    location.query.cursor,\n    location.query.end,\n    location.query.environment,\n    location.query.start,\n    location.query.statsPeriod,\n    organization.slug,\n    projectId,\n  ]);\n  useEffect(() => {\n    fetchIssuesCount();\n  }, [fetchIssuesCount]);\n\n  function handleOpenInIssuesClick() {\n    trackAnalyticsEvent({\n      eventKey: 'project_detail.open_issues',\n      eventName: 'Project Detail: Open issues from project detail',\n      organization_id: parseInt(organization.id, 10),\n    });\n  }\n\n  function handleOpenInDiscoverClick() {\n    trackAnalyticsEvent({\n      eventKey: 'project_detail.open_discover',\n      eventName: 'Project Detail: Open discover from project detail',\n      organization_id: parseInt(organization.id, 10),\n    });\n  }\n\n  function handleFetchSuccess(groupListState, cursorHandler) {\n    setPageLinks(groupListState.pageLinks);\n    setOnCursor(() => cursorHandler);\n  }\n\n  const discoverQuery =\n    issuesType === 'unhandled'\n      ? ['event.type:error error.unhandled:true', query].join(' ').trim()\n      : ['event.type:error', query].join(' ').trim();\n\n  function getDiscoverUrl() {\n    return {\n      pathname: `/organizations/${organization.slug}/discover/results/`,\n      query: {\n        name: t('Frequent Unhandled Issues'),\n        field: ['issue', 'title', 'count()', 'count_unique(user)', 'project'],\n        sort: ['-count'],\n        query: discoverQuery,\n        display: 'top5',\n        ...normalizeDateTimeParams(pick(location.query, [...Object.values(URL_PARAM)])),\n      },\n    };\n  }\n\n  const endpointPath = `/organizations/${organization.slug}/issues/`;\n\n  const issueQuery = (Object.values(IssuesType) as string[]).includes(issuesType)\n    ? [`${IssuesQuery[issuesType.toUpperCase()]}`, query].join(' ').trim()\n    : [`${IssuesQuery.ALL}`, query].join(' ').trim();\n\n  const queryParams = {\n    limit: 5,\n    ...normalizeDateTimeParams(\n      pick(location.query, [...Object.values(URL_PARAM), 'cursor'])\n    ),\n    query: issueQuery,\n    sort: 'freq',\n  };\n\n  const issueSearch = {\n    pathname: endpointPath,\n    query: queryParams,\n  };\n\n  function handleIssuesTypeSelection(issueType: IssuesType) {\n    const to = {\n      ...location,\n      query: {\n        ...location.query,\n        issuesType: issueType,\n      },\n    };\n\n    browserHistory.replace(to);\n    setIssuesType(issueType);\n  }\n\n  function renderEmptyMessage() {\n    const selectedTimePeriod = location.query.start\n      ? null\n      : DEFAULT_RELATIVE_PERIODS[\n          decodeScalar(location.query.statsPeriod, DEFAULT_STATS_PERIOD)\n        ];\n    const displayedPeriod = selectedTimePeriod\n      ? selectedTimePeriod.toLowerCase()\n      : t('given timeframe');\n\n    return (\n      <Panel>\n        <PanelBody>\n          <NoGroupsHandler\n            api={api}\n            organization={organization}\n            query={issueQuery}\n            selectedProjectIds={[projectId]}\n            groupIds={[]}\n            emptyMessage={tct('No [issuesType] issues for the [timePeriod].', {\n              issuesType: issuesType === 'all' ? '' : issuesType,\n              timePeriod: displayedPeriod,\n            })}\n          />\n        </PanelBody>\n      </Panel>\n    );\n  }\n\n  const issuesTypes = [\n    {value: IssuesType.ALL, label: t('All Issues'), issueCount: issuesCount.all},\n    {value: IssuesType.NEW, label: t('New Issues'), issueCount: issuesCount.new},\n    {\n      value: IssuesType.UNHANDLED,\n      label: t('Unhandled'),\n      issueCount: issuesCount.unhandled,\n    },\n    {\n      value: IssuesType.REGRESSED,\n      label: t('Regressed'),\n      issueCount: issuesCount.regressed,\n    },\n    {\n      value: IssuesType.RESOLVED,\n      label: t('Resolved'),\n      issueCount: issuesCount.resolved,\n    },\n  ];\n\n  return (\n    <Fragment>\n      <ControlsWrapper>\n        <StyledButtonBar active={issuesType} merged>\n          {issuesTypes.map(({value, label, issueCount}) => (\n            <Button\n              key={value}\n              barId={value}\n              size=\"xs\"\n              onClick={() => handleIssuesTypeSelection(value)}\n              data-test-id={`filter-${value}`}\n            >\n              {label}\n              <QueryCount count={issueCount} max={99} hideParens hideIfEmpty={false} />\n            </Button>\n          ))}\n        </StyledButtonBar>\n        <OpenInButtonBar gap={1}>\n          <Button\n            data-test-id=\"issues-open\"\n            size=\"xs\"\n            to={issueSearch}\n            onClick={handleOpenInIssuesClick}\n          >\n            {t('Open in Issues')}\n          </Button>\n          <DiscoverButton\n            onClick={handleOpenInDiscoverClick}\n            to={getDiscoverUrl()}\n            size=\"xs\"\n          >\n            {t('Open in Discover')}\n          </DiscoverButton>\n          <StyledPagination pageLinks={pageLinks} onCursor={onCursor} size=\"xs\" />\n        </OpenInButtonBar>\n      </ControlsWrapper>\n\n      <GroupList\n        orgId={organization.slug}\n        endpointPath={endpointPath}\n        queryParams={queryParams}\n        query=\"\"\n        canSelectGroups={false}\n        renderEmptyMessage={renderEmptyMessage}\n        withChart={false}\n        withPagination={false}\n        onFetchSuccess={handleFetchSuccess}\n      />\n    </Fragment>\n  );\n}\n\nconst ControlsWrapper = styled('div')`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-bottom: ${space(1)};\n  flex-wrap: wrap;\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n  }\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  grid-template-columns: repeat(4, 1fr);\n  ${ButtonLabel} {\n    white-space: nowrap;\n    gap: ${space(0.5)};\n    span:last-child {\n      color: ${p => p.theme.buttonCount};\n    }\n  }\n  .active {\n    ${ButtonLabel} {\n      span:last-child {\n        color: ${p => p.theme.buttonCountActive};\n      }\n    }\n  }\n`;\n\nconst OpenInButtonBar = styled(ButtonBar)`\n  margin-top: ${space(1)};\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin: 0;\n`;\n\nexport default ProjectIssues;\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\nimport pick from 'lodash/pick';\n\nimport AlertBadge from 'sentry/components/alertBadge';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport TimeSince from 'sentry/components/timeSince';\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\nimport {IconCheckmark, IconExclamation, IconFire, IconOpen} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\n\nimport {Incident, IncidentStatus} from '../alerts/types';\n\nimport MissingAlertsButtons from './missingFeatureButtons/missingAlertsButtons';\nimport {SectionHeadingLink, SectionHeadingWrapper, SidebarSection} from './styles';\nimport {didProjectOrEnvironmentChange} from './utils';\n\nconst PLACEHOLDER_AND_EMPTY_HEIGHT = '172px';\n\ntype Props = AsyncComponent['props'] & {\n  isProjectStabilized: boolean;\n  location: Location;\n  organization: Organization;\n  projectSlug: string;\n};\n\ntype State = {\n  resolvedAlerts: Incident[] | null;\n  unresolvedAlerts: Incident[] | null;\n  hasAlertRule?: boolean;\n} & AsyncComponent['state'];\n\nclass ProjectLatestAlerts extends AsyncComponent<Props, State> {\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    const {location, isProjectStabilized} = this.props;\n    // TODO(project-detail): we temporarily removed refetching based on timeselector\n    if (\n      this.state !== nextState ||\n      didProjectOrEnvironmentChange(location, nextProps.location) ||\n      isProjectStabilized !== nextProps.isProjectStabilized\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {location, isProjectStabilized} = this.props;\n\n    if (\n      didProjectOrEnvironmentChange(prevProps.location, location) ||\n      prevProps.isProjectStabilized !== isProjectStabilized\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {location, organization, isProjectStabilized} = this.props;\n\n    if (!isProjectStabilized) {\n      return [];\n    }\n\n    const query = {\n      ...pick(location.query, Object.values(URL_PARAM)),\n      per_page: 3,\n    };\n\n    // we are listing 3 alerts total, first unresolved and then we fill with resolved\n    return [\n      [\n        'unresolvedAlerts',\n        `/organizations/${organization.slug}/incidents/`,\n        {query: {...query, status: 'open'}},\n      ],\n      [\n        'resolvedAlerts',\n        `/organizations/${organization.slug}/incidents/`,\n        {query: {...query, status: 'closed'}},\n      ],\n    ];\n  }\n\n  /**\n   * If our alerts are empty, determine if we've configured alert rules (empty message differs then)\n   */\n  async onLoadAllEndpointsSuccess() {\n    const {unresolvedAlerts, resolvedAlerts} = this.state;\n    const {location, organization, isProjectStabilized} = this.props;\n\n    if (!isProjectStabilized) {\n      return;\n    }\n\n    if ([...(unresolvedAlerts ?? []), ...(resolvedAlerts ?? [])].length !== 0) {\n      this.setState({hasAlertRule: true});\n      return;\n    }\n\n    this.setState({loading: true});\n\n    const alertRules = await this.api.requestPromise(\n      `/organizations/${organization.slug}/alert-rules/`,\n      {\n        method: 'GET',\n        query: {\n          ...pick(location.query, [...Object.values(URL_PARAM)]),\n          per_page: 1,\n        },\n      }\n    );\n\n    this.setState({hasAlertRule: alertRules.length > 0, loading: false});\n  }\n\n  get alertsLink() {\n    const {organization} = this.props;\n\n    // as this is a link to latest alerts, we want to only preserve project and environment\n    return {\n      pathname: `/organizations/${organization.slug}/alerts/`,\n      query: {\n        statsPeriod: undefined,\n        start: undefined,\n        end: undefined,\n        utc: undefined,\n      },\n    };\n  }\n\n  renderAlertRow = (alert: Incident) => {\n    const {organization} = this.props;\n    const {status, id, identifier, title, dateClosed, dateStarted} = alert;\n    const isResolved = status === IncidentStatus.CLOSED;\n    const isWarning = status === IncidentStatus.WARNING;\n\n    const Icon = isResolved ? IconCheckmark : isWarning ? IconExclamation : IconFire;\n\n    const statusProps = {isResolved, isWarning};\n\n    return (\n      <AlertRowLink\n        to={`/organizations/${organization.slug}/alerts/${identifier}/`}\n        key={id}\n      >\n        <AlertBadgeWrapper {...statusProps} icon={Icon}>\n          <AlertBadge status={status} hideText />\n        </AlertBadgeWrapper>\n        <AlertDetails>\n          <AlertTitle>{title}</AlertTitle>\n          <AlertDate {...statusProps}>\n            {isResolved\n              ? tct('Resolved [date]', {\n                  date: dateClosed ? <TimeSince date={dateClosed} /> : null,\n                })\n              : tct('Triggered [date]', {\n                  date: (\n                    <TimeSince\n                      date={dateStarted}\n                      tooltipUnderlineColor={getStatusColor(statusProps)}\n                    />\n                  ),\n                })}\n          </AlertDate>\n        </AlertDetails>\n      </AlertRowLink>\n    );\n  };\n\n  renderInnerBody() {\n    const {organization, projectSlug, isProjectStabilized} = this.props;\n    const {loading, unresolvedAlerts, resolvedAlerts, hasAlertRule} = this.state;\n    const alertsUnresolvedAndResolved = [\n      ...(unresolvedAlerts ?? []),\n      ...(resolvedAlerts ?? []),\n    ];\n    const checkingForAlertRules =\n      alertsUnresolvedAndResolved.length === 0 && hasAlertRule === undefined;\n    const showLoadingIndicator = loading || checkingForAlertRules || !isProjectStabilized;\n\n    if (showLoadingIndicator) {\n      return <Placeholder height={PLACEHOLDER_AND_EMPTY_HEIGHT} />;\n    }\n\n    if (!hasAlertRule) {\n      return (\n        <MissingAlertsButtons organization={organization} projectSlug={projectSlug} />\n      );\n    }\n\n    if (alertsUnresolvedAndResolved.length === 0) {\n      return (\n        <StyledEmptyStateWarning small>{t('No alerts found')}</StyledEmptyStateWarning>\n      );\n    }\n\n    return alertsUnresolvedAndResolved.slice(0, 3).map(this.renderAlertRow);\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    return (\n      <SidebarSection>\n        <SectionHeadingWrapper>\n          <SectionHeading>{t('Latest Alerts')}</SectionHeading>\n          <SectionHeadingLink to={this.alertsLink}>\n            <IconOpen />\n          </SectionHeadingLink>\n        </SectionHeadingWrapper>\n\n        <div>{this.renderInnerBody()}</div>\n      </SidebarSection>\n    );\n  }\n}\n\nconst AlertRowLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  height: 40px;\n  margin-bottom: ${space(3)};\n  margin-left: ${space(0.5)};\n  &,\n  &:hover,\n  &:focus {\n    color: inherit;\n  }\n  &:first-child {\n    margin-top: ${space(1)};\n  }\n`;\n\ntype StatusColorProps = {\n  isResolved: boolean;\n  isWarning: boolean;\n};\n\nconst getStatusColor = ({isResolved, isWarning}: StatusColorProps) =>\n  isResolved ? 'green300' : isWarning ? 'yellow300' : 'red300';\n\nconst AlertBadgeWrapper = styled('div')<{icon: React.ReactNode} & StatusColorProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  /* icon warning needs to be treated differently to look visually centered */\n  line-height: ${p => (p.icon === IconExclamation ? undefined : 1)};\n`;\n\nconst AlertDetails = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-left: ${space(1.5)};\n  ${p => p.theme.overflowEllipsis}\n  line-height: 1.35;\n`;\n\nconst AlertTitle = styled('div')`\n  font-weight: 400;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst AlertDate = styled('span')<StatusColorProps>`\n  color: ${p => p.theme[getStatusColor(p)]};\n`;\n\nconst StyledEmptyStateWarning = styled(EmptyStateWarning)`\n  height: ${PLACEHOLDER_AND_EMPTY_HEIGHT};\n  justify-content: center;\n`;\n\nexport default ProjectLatestAlerts;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport pick from 'lodash/pick';\n\nimport {fetchAnyReleaseExistence} from 'sentry/actionCreators/projects';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport DateTime from 'sentry/components/dateTime';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport Placeholder from 'sentry/components/placeholder';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport Version from 'sentry/components/version';\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Release} from 'sentry/types';\nimport {analytics} from 'sentry/utils/analytics';\nimport {RELEASES_TOUR_STEPS} from 'sentry/views/releases/list/releasesPromo';\n\nimport MissingReleasesButtons from './missingFeatureButtons/missingReleasesButtons';\nimport {SectionHeadingLink, SectionHeadingWrapper, SidebarSection} from './styles';\nimport {didProjectOrEnvironmentChange} from './utils';\n\nconst PLACEHOLDER_AND_EMPTY_HEIGHT = '160px';\n\ntype Props = AsyncComponent['props'] & {\n  isProjectStabilized: boolean;\n  location: Location;\n  organization: Organization;\n  projectSlug: string;\n  projectId?: string;\n};\n\ntype State = {\n  releases: Release[] | null;\n  hasOlderReleases?: boolean;\n} & AsyncComponent['state'];\n\nclass ProjectLatestReleases extends AsyncComponent<Props, State> {\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    const {location, isProjectStabilized} = this.props;\n    // TODO(project-detail): we temporarily removed refetching based on timeselector\n    if (\n      this.state !== nextState ||\n      didProjectOrEnvironmentChange(location, nextProps.location) ||\n      isProjectStabilized !== nextProps.isProjectStabilized\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {location, isProjectStabilized} = this.props;\n\n    if (\n      didProjectOrEnvironmentChange(prevProps.location, location) ||\n      prevProps.isProjectStabilized !== isProjectStabilized\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {location, organization, projectSlug, isProjectStabilized} = this.props;\n\n    if (!isProjectStabilized) {\n      return [];\n    }\n\n    const query = {\n      ...pick(location.query, Object.values(URL_PARAM)),\n      per_page: 5,\n    };\n\n    // TODO(project-detail): this does not filter releases for the given time\n    return [\n      ['releases', `/projects/${organization.slug}/${projectSlug}/releases/`, {query}],\n    ];\n  }\n\n  /**\n   * If our releases are empty, determine if we had a release in the last 90 days (empty message differs then)\n   */\n  async onLoadAllEndpointsSuccess() {\n    const {releases} = this.state;\n    const {organization, projectId, isProjectStabilized} = this.props;\n\n    if (!isProjectStabilized) {\n      return;\n    }\n\n    if ((releases ?? []).length !== 0 || !projectId) {\n      this.setState({hasOlderReleases: true});\n      return;\n    }\n\n    this.setState({loading: true});\n\n    const hasOlderReleases = await fetchAnyReleaseExistence(\n      this.api,\n      organization.slug,\n      projectId\n    );\n\n    this.setState({hasOlderReleases, loading: false});\n  }\n\n  handleTourAdvance = (index: number) => {\n    const {organization, projectId} = this.props;\n\n    analytics('releases.landing_card_clicked', {\n      org_id: parseInt(organization.id, 10),\n      project_id: projectId && parseInt(projectId, 10),\n      step_id: index,\n      step_title: RELEASES_TOUR_STEPS[index].title,\n    });\n  };\n\n  get releasesLink() {\n    const {organization} = this.props;\n\n    // as this is a link to latest releases, we want to only preserve project and environment\n    return {\n      pathname: `/organizations/${organization.slug}/releases/`,\n      query: {\n        statsPeriod: undefined,\n        start: undefined,\n        end: undefined,\n        utc: undefined,\n      },\n    };\n  }\n\n  renderReleaseRow = (release: Release) => {\n    const {projectId} = this.props;\n    const {lastDeploy, dateCreated} = release;\n\n    return (\n      <Fragment key={release.version}>\n        <DateTime date={lastDeploy?.dateFinished || dateCreated} seconds={false} />\n        <TextOverflow>\n          <StyledVersion\n            version={release.version}\n            tooltipRawVersion\n            projectId={projectId}\n          />\n        </TextOverflow>\n      </Fragment>\n    );\n  };\n\n  renderInnerBody() {\n    const {organization, projectId, isProjectStabilized} = this.props;\n    const {loading, releases, hasOlderReleases} = this.state;\n    const checkingForOlderReleases =\n      !(releases ?? []).length && hasOlderReleases === undefined;\n    const showLoadingIndicator =\n      loading || checkingForOlderReleases || !isProjectStabilized;\n\n    if (showLoadingIndicator) {\n      return <Placeholder height={PLACEHOLDER_AND_EMPTY_HEIGHT} />;\n    }\n\n    if (!hasOlderReleases) {\n      return <MissingReleasesButtons organization={organization} projectId={projectId} />;\n    }\n\n    if (!releases || releases.length === 0) {\n      return (\n        <StyledEmptyStateWarning small>{t('No releases found')}</StyledEmptyStateWarning>\n      );\n    }\n\n    return <ReleasesTable>{releases.map(this.renderReleaseRow)}</ReleasesTable>;\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody() {\n    return (\n      <SidebarSection>\n        <SectionHeadingWrapper>\n          <SectionHeading>{t('Latest Releases')}</SectionHeading>\n          <SectionHeadingLink to={this.releasesLink}>\n            <IconOpen />\n          </SectionHeadingLink>\n        </SectionHeadingWrapper>\n        <div>{this.renderInnerBody()}</div>\n      </SidebarSection>\n    );\n  }\n}\n\nconst ReleasesTable = styled('div')`\n  display: grid;\n  font-size: ${p => p.theme.fontSizeMedium};\n  white-space: nowrap;\n  grid-template-columns: 1fr auto;\n  margin-bottom: ${space(2)};\n\n  & > * {\n    padding: ${space(0.5)} ${space(1)};\n    height: 32px;\n  }\n\n  & > *:nth-child(2n + 2) {\n    text-align: right;\n  }\n\n  & > *:nth-child(4n + 1),\n  & > *:nth-child(4n + 2) {\n    background-color: ${p => p.theme.rowBackground};\n  }\n`;\n\nconst StyledVersion = styled(Version)`\n  ${p => p.theme.overflowEllipsis}\n  line-height: 1.6;\n  font-variant-numeric: tabular-nums;\n`;\n\nconst StyledEmptyStateWarning = styled(EmptyStateWarning)`\n  height: ${PLACEHOLDER_AND_EMPTY_HEIGHT};\n  justify-content: center;\n`;\n\nexport default ProjectLatestReleases;\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconLink} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {DEFAULT_MAX_DURATION} from 'sentry/views/performance/trends/utils';\nimport {\n  getPerformanceLandingUrl,\n  getPerformanceTrendsUrl,\n} from 'sentry/views/performance/utils';\n\nimport {SidebarSection} from './styles';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  project?: Project;\n};\n\nfunction ProjectQuickLinks({organization, project, location}: Props) {\n  function getTrendsLink() {\n    const queryString = decodeScalar(location.query.query);\n    const conditions = new MutableSearch(queryString || '');\n    conditions.setFilterValues('tpm()', ['>0.01']);\n    conditions.setFilterValues('transaction.duration', [\n      '>0',\n      `<${DEFAULT_MAX_DURATION}`,\n    ]);\n\n    return {\n      pathname: getPerformanceTrendsUrl(organization),\n      query: {\n        project: project?.id,\n        cursor: undefined,\n        query: conditions.formatString(),\n      },\n    };\n  }\n\n  const quickLinks = [\n    {\n      title: t('User Feedback'),\n      to: {\n        pathname: `/organizations/${organization.slug}/user-feedback/`,\n        query: {project: project?.id},\n      },\n    },\n    {\n      title: t('View Transactions'),\n      to: {\n        pathname: getPerformanceLandingUrl(organization),\n        query: {project: project?.id},\n      },\n      disabled: !organization.features.includes('performance-view'),\n    },\n    {\n      title: t('Most Improved/Regressed Transactions'),\n      to: getTrendsLink(),\n      disabled: !organization.features.includes('performance-view'),\n    },\n  ];\n\n  return (\n    <SidebarSection>\n      <SectionHeading>{t('Quick Links')}</SectionHeading>\n      {quickLinks\n        // push disabled links to the bottom\n        .sort((link1, link2) => Number(!!link1.disabled) - Number(!!link2.disabled))\n        .map(({title, to, disabled}) => (\n          <div key={title}>\n            <Tooltip\n              title={t(\"You don't have access to this feature\")}\n              disabled={!disabled}\n            >\n              <QuickLink to={to} disabled={disabled}>\n                <IconLink />\n                <QuickLinkText>{title}</QuickLinkText>\n              </QuickLink>\n            </Tooltip>\n          </div>\n        ))}\n    </SidebarSection>\n  );\n}\n\nconst QuickLink = styled(p =>\n  p.disabled ? (\n    <span className={p.className}>{p.children}</span>\n  ) : (\n    <GlobalSelectionLink {...p} />\n  )\n)<{\n  disabled?: boolean;\n}>`\n  margin-bottom: ${space(1)};\n  display: grid;\n  align-items: center;\n  gap: ${space(1)};\n  grid-template-columns: auto 1fr;\n\n  ${p =>\n    p.disabled &&\n    `\n    color: ${p.theme.gray200};\n    cursor: not-allowed;\n  `}\n`;\n\nconst QuickLinkText = styled('span')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  ${p => p.theme.overflowEllipsis}\n`;\n\nexport default ProjectQuickLinks;\n","import {Fragment} from 'react';\nimport round from 'lodash/round';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {shouldFetchPreviousPeriod} from 'sentry/components/charts/utils';\nimport Count from 'sentry/components/count';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {parseStatsPeriod} from 'sentry/components/organizations/timeRangeSelector/utils';\nimport ScoreCard from 'sentry/components/scoreCard';\nimport {IconArrow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {TableData} from 'sentry/utils/discover/discoverQuery';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {getTermHelp, PERFORMANCE_TERM} from 'sentry/views/performance/data';\n\nimport MissingPerformanceButtons from '../missingFeatureButtons/missingPerformanceButtons';\n\ntype Props = AsyncComponent['props'] & {\n  isProjectStabilized: boolean;\n  organization: Organization;\n  selection: PageFilters;\n  hasTransactions?: boolean;\n  query?: string;\n};\n\ntype State = AsyncComponent['state'] & {\n  currentApdex: TableData | null;\n  previousApdex: TableData | null;\n};\n\nclass ProjectApdexScoreCard extends AsyncComponent<Props, State> {\n  shouldRenderBadRequests = true;\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      currentApdex: null,\n      previousApdex: null,\n    };\n  }\n\n  getEndpoints() {\n    const {organization, selection, isProjectStabilized, hasTransactions, query} =\n      this.props;\n\n    if (!this.hasFeature() || !isProjectStabilized || !hasTransactions) {\n      return [];\n    }\n\n    const {projects, environments, datetime} = selection;\n    const {period} = datetime;\n    const commonQuery = {\n      environment: environments,\n      project: projects.map(proj => String(proj)),\n      field: ['apdex()'],\n      query: ['event.type:transaction count():>0', query].join(' ').trim(),\n    };\n    const endpoints: ReturnType<AsyncComponent['getEndpoints']> = [\n      [\n        'currentApdex',\n        `/organizations/${organization.slug}/events/`,\n        {query: {...commonQuery, ...normalizeDateTimeParams(datetime)}},\n      ],\n    ];\n\n    if (\n      shouldFetchPreviousPeriod({\n        start: datetime.start,\n        end: datetime.end,\n        period: datetime.period,\n      })\n    ) {\n      const {start: previousStart} = parseStatsPeriod(\n        getPeriod({period, start: undefined, end: undefined}, {shouldDoublePeriod: true})\n          .statsPeriod!\n      );\n\n      const {start: previousEnd} = parseStatsPeriod(\n        getPeriod({period, start: undefined, end: undefined}, {shouldDoublePeriod: false})\n          .statsPeriod!\n      );\n\n      endpoints.push([\n        'previousApdex',\n        `/organizations/${organization.slug}/events/`,\n        {query: {...commonQuery, start: previousStart, end: previousEnd}},\n      ]);\n    }\n\n    return endpoints;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {selection, isProjectStabilized, hasTransactions, query} = this.props;\n\n    if (\n      prevProps.selection !== selection ||\n      prevProps.hasTransactions !== hasTransactions ||\n      prevProps.isProjectStabilized !== isProjectStabilized ||\n      prevProps.query !== query\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  hasFeature() {\n    return this.props.organization.features.includes('performance-view');\n  }\n\n  get cardTitle() {\n    return t('Apdex');\n  }\n\n  get cardHelp() {\n    const {organization} = this.props;\n    const baseHelp = getTermHelp(organization, PERFORMANCE_TERM.APDEX);\n\n    if (this.trend) {\n      return baseHelp + t(' This shows how it has changed since the last period.');\n    }\n\n    return baseHelp;\n  }\n\n  get currentApdex() {\n    const {currentApdex} = this.state;\n\n    const apdex = currentApdex?.data[0]?.['apdex()'];\n\n    return typeof apdex === 'undefined' ? undefined : Number(apdex);\n  }\n\n  get previousApdex() {\n    const {previousApdex} = this.state;\n\n    const apdex = previousApdex?.data[0]?.['apdex()'];\n\n    return typeof apdex === 'undefined' ? undefined : Number(apdex);\n  }\n\n  get trend() {\n    if (this.currentApdex && this.previousApdex) {\n      return round(this.currentApdex - this.previousApdex, 3);\n    }\n\n    return null;\n  }\n\n  get trendStatus(): React.ComponentProps<typeof ScoreCard>['trendStatus'] {\n    if (!this.trend) {\n      return undefined;\n    }\n\n    return this.trend > 0 ? 'good' : 'bad';\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMissingFeatureCard() {\n    const {organization} = this.props;\n    return (\n      <ScoreCard\n        title={this.cardTitle}\n        help={this.cardHelp}\n        score={<MissingPerformanceButtons organization={organization} />}\n      />\n    );\n  }\n\n  renderScore() {\n    return defined(this.currentApdex) ? <Count value={this.currentApdex} /> : '\\u2014';\n  }\n\n  renderTrend() {\n    // we want to show trend only after currentApdex has loaded to prevent jumping\n    return defined(this.currentApdex) && defined(this.trend) ? (\n      <Fragment>\n        {this.trend >= 0 ? (\n          <IconArrow direction=\"up\" size=\"xs\" />\n        ) : (\n          <IconArrow direction=\"down\" size=\"xs\" />\n        )}\n        <Count value={Math.abs(this.trend)} />\n      </Fragment>\n    ) : null;\n  }\n\n  renderBody() {\n    const {hasTransactions} = this.props;\n\n    if (!this.hasFeature() || hasTransactions === false) {\n      return this.renderMissingFeatureCard();\n    }\n\n    return (\n      <ScoreCard\n        title={this.cardTitle}\n        help={this.cardHelp}\n        score={this.renderScore()}\n        trend={this.renderTrend()}\n        trendStatus={this.trendStatus}\n      />\n    );\n  }\n}\n\nexport default ProjectApdexScoreCard;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters, SessionFieldWithOperation} from 'sentry/types';\n\nimport ProjectApdexScoreCard from './projectApdexScoreCard';\nimport ProjectStabilityScoreCard from './projectStabilityScoreCard';\nimport ProjectVelocityScoreCard from './projectVelocityScoreCard';\n\ntype Props = {\n  hasSessions: boolean | null;\n  isProjectStabilized: boolean;\n  organization: Organization;\n  selection: PageFilters;\n  hasTransactions?: boolean;\n  query?: string;\n};\n\nfunction ProjectScoreCards({\n  organization,\n  selection,\n  isProjectStabilized,\n  hasSessions,\n  hasTransactions,\n  query,\n}: Props) {\n  return (\n    <CardWrapper>\n      <ProjectStabilityScoreCard\n        organization={organization}\n        selection={selection}\n        isProjectStabilized={isProjectStabilized}\n        hasSessions={hasSessions}\n        query={query}\n        field={SessionFieldWithOperation.SESSIONS}\n      />\n\n      <ProjectStabilityScoreCard\n        organization={organization}\n        selection={selection}\n        isProjectStabilized={isProjectStabilized}\n        hasSessions={hasSessions}\n        query={query}\n        field={SessionFieldWithOperation.USERS}\n      />\n\n      <ProjectVelocityScoreCard\n        organization={organization}\n        selection={selection}\n        isProjectStabilized={isProjectStabilized}\n        query={query}\n      />\n\n      <ProjectApdexScoreCard\n        organization={organization}\n        selection={selection}\n        isProjectStabilized={isProjectStabilized}\n        hasTransactions={hasTransactions}\n        query={query}\n      />\n    </CardWrapper>\n  );\n}\n\nconst CardWrapper = styled('div')`\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    display: grid;\n    grid-column-gap: ${space(2)};\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n\n  @media (min-width: 1600px) {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n`;\n\nexport default ProjectScoreCards;\n","import round from 'lodash/round';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {\n  getDiffInMinutes,\n  shouldFetchPreviousPeriod,\n} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport ScoreCard from 'sentry/components/scoreCard';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {IconArrow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {\n  Organization,\n  PageFilters,\n  SessionApiResponse,\n  SessionFieldWithOperation,\n} from 'sentry/types';\nimport {defined, percent} from 'sentry/utils';\nimport {formatAbbreviatedNumber} from 'sentry/utils/formatters';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {displayCrashFreePercent, getCrashFreePercent} from 'sentry/views/releases/utils';\nimport {\n  getSessionTermDescription,\n  SessionTerm,\n} from 'sentry/views/releases/utils/sessionTerm';\n\nimport MissingReleasesButtons from '../missingFeatureButtons/missingReleasesButtons';\n\ntype Props = AsyncComponent['props'] & {\n  field: SessionFieldWithOperation.SESSIONS | SessionFieldWithOperation.USERS;\n  hasSessions: boolean | null;\n  isProjectStabilized: boolean;\n  organization: Organization;\n  selection: PageFilters;\n  query?: string;\n};\n\ntype State = AsyncComponent['state'] & {\n  currentSessions: SessionApiResponse | null;\n  previousSessions: SessionApiResponse | null;\n};\n\nclass ProjectStabilityScoreCard extends AsyncComponent<Props, State> {\n  shouldRenderBadRequests = true;\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      currentSessions: null,\n      previousSessions: null,\n    };\n  }\n\n  getEndpoints() {\n    const {organization, selection, isProjectStabilized, hasSessions, query, field} =\n      this.props;\n\n    if (!isProjectStabilized || !hasSessions) {\n      return [];\n    }\n\n    const {projects, environments: environment, datetime} = selection;\n    const {period} = datetime;\n    const commonQuery = {\n      environment,\n      project: projects[0],\n      groupBy: 'session.status',\n      interval: getDiffInMinutes(datetime) > 24 * 60 ? '1d' : '1h',\n      query,\n      field,\n    };\n\n    // Unfortunately we can't do something like statsPeriod=28d&interval=14d to get scores for this and previous interval with the single request\n    // https://github.com/getsentry/sentry/pull/22770#issuecomment-758595553\n\n    const endpoints: ReturnType<AsyncComponent['getEndpoints']> = [\n      [\n        'currentSessions',\n        `/organizations/${organization.slug}/sessions/`,\n        {\n          query: {\n            ...commonQuery,\n            ...normalizeDateTimeParams(datetime),\n          },\n        },\n      ],\n    ];\n\n    if (\n      shouldFetchPreviousPeriod({\n        start: datetime.start,\n        end: datetime.end,\n        period: datetime.period,\n      })\n    ) {\n      const doubledPeriod = getPeriod(\n        {period, start: undefined, end: undefined},\n        {shouldDoublePeriod: true}\n      ).statsPeriod;\n\n      endpoints.push([\n        'previousSessions',\n        `/organizations/${organization.slug}/sessions/`,\n        {\n          query: {\n            ...commonQuery,\n            statsPeriodStart: doubledPeriod,\n            statsPeriodEnd: period ?? DEFAULT_STATS_PERIOD,\n          },\n        },\n      ]);\n    }\n\n    return endpoints;\n  }\n\n  get cardTitle() {\n    return this.props.field === SessionFieldWithOperation.SESSIONS\n      ? t('Crash Free Sessions')\n      : t('Crash Free Users');\n  }\n\n  get cardHelp() {\n    return getSessionTermDescription(\n      this.props.field === SessionFieldWithOperation.SESSIONS\n        ? SessionTerm.CRASH_FREE_SESSIONS\n        : SessionTerm.CRASH_FREE_USERS,\n      null\n    );\n  }\n\n  get score() {\n    const {currentSessions} = this.state;\n\n    return this.calculateCrashFree(currentSessions);\n  }\n\n  get trend() {\n    const {previousSessions} = this.state;\n\n    const previousScore = this.calculateCrashFree(previousSessions);\n\n    if (!defined(this.score) || !defined(previousScore)) {\n      return undefined;\n    }\n\n    return round(this.score - previousScore, 3);\n  }\n\n  get trendStatus(): React.ComponentProps<typeof ScoreCard>['trendStatus'] {\n    if (!this.trend) {\n      return undefined;\n    }\n\n    return this.trend > 0 ? 'good' : 'bad';\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {selection, isProjectStabilized, hasSessions, query} = this.props;\n\n    if (\n      prevProps.selection !== selection ||\n      prevProps.hasSessions !== hasSessions ||\n      prevProps.isProjectStabilized !== isProjectStabilized ||\n      prevProps.query !== query\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  calculateCrashFree(data?: SessionApiResponse | null) {\n    const {field} = this.props;\n\n    if (!data) {\n      return undefined;\n    }\n\n    const totalSessions = data.groups.reduce(\n      (acc, group) => acc + group.totals[field],\n      0\n    );\n\n    const crashedSessions = data.groups.find(\n      group => group.by['session.status'] === 'crashed'\n    )?.totals[field];\n\n    if (totalSessions === 0 || !defined(totalSessions) || !defined(crashedSessions)) {\n      return undefined;\n    }\n\n    const crashedSessionsPercent = percent(crashedSessions, totalSessions);\n\n    return getCrashFreePercent(100 - crashedSessionsPercent);\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMissingFeatureCard() {\n    const {organization} = this.props;\n    return (\n      <ScoreCard\n        title={this.cardTitle}\n        help={this.cardHelp}\n        score={<MissingReleasesButtons organization={organization} health />}\n      />\n    );\n  }\n\n  renderScore() {\n    const {loading} = this.state;\n\n    if (loading || !defined(this.score)) {\n      return '\\u2014';\n    }\n\n    return displayCrashFreePercent(this.score);\n  }\n\n  renderTrend() {\n    const {loading} = this.state;\n\n    if (loading || !defined(this.score) || !defined(this.trend)) {\n      return null;\n    }\n\n    return (\n      <div>\n        {this.trend >= 0 ? (\n          <IconArrow direction=\"up\" size=\"xs\" />\n        ) : (\n          <IconArrow direction=\"down\" size=\"xs\" />\n        )}\n        {`${formatAbbreviatedNumber(Math.abs(this.trend))}\\u0025`}\n      </div>\n    );\n  }\n\n  renderBody() {\n    const {hasSessions} = this.props;\n\n    if (hasSessions === false) {\n      return this.renderMissingFeatureCard();\n    }\n\n    return (\n      <ScoreCard\n        title={this.cardTitle}\n        help={this.cardHelp}\n        score={this.renderScore()}\n        trend={this.renderTrend()}\n        trendStatus={this.trendStatus}\n      />\n    );\n  }\n}\n\nexport default ProjectStabilityScoreCard;\n","import {Fragment} from 'react';\n\nimport {fetchAnyReleaseExistence} from 'sentry/actionCreators/projects';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {shouldFetchPreviousPeriod} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {parseStatsPeriod} from 'sentry/components/organizations/timeRangeSelector/utils';\nimport ScoreCard from 'sentry/components/scoreCard';\nimport {IconArrow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getPeriod} from 'sentry/utils/getPeriod';\n\nimport MissingReleasesButtons from '../missingFeatureButtons/missingReleasesButtons';\n\nconst API_LIMIT = 1000;\n\ntype Release = {date: string; version: string};\n\ntype Props = AsyncComponent['props'] & {\n  isProjectStabilized: boolean;\n  organization: Organization;\n  selection: PageFilters;\n  query?: string;\n};\n\ntype State = AsyncComponent['state'] & {\n  currentReleases: Release[] | null;\n  noReleaseEver: boolean;\n  previousReleases: Release[] | null;\n};\n\nclass ProjectVelocityScoreCard extends AsyncComponent<Props, State> {\n  shouldRenderBadRequests = true;\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      currentReleases: null,\n      previousReleases: null,\n      noReleaseEver: false,\n    };\n  }\n\n  getEndpoints() {\n    const {organization, selection, isProjectStabilized, query} = this.props;\n\n    if (!isProjectStabilized) {\n      return [];\n    }\n\n    const {projects, environments, datetime} = selection;\n    const {period} = datetime;\n    const commonQuery = {\n      environment: environments,\n      project: projects[0],\n      query,\n    };\n    const endpoints: ReturnType<AsyncComponent['getEndpoints']> = [\n      [\n        'currentReleases',\n        `/organizations/${organization.slug}/releases/stats/`,\n        {\n          includeAllArgs: true,\n          method: 'GET',\n          query: {\n            ...commonQuery,\n            ...normalizeDateTimeParams(datetime),\n          },\n        },\n      ],\n    ];\n\n    if (\n      shouldFetchPreviousPeriod({\n        start: datetime.start,\n        end: datetime.end,\n        period: datetime.period,\n      })\n    ) {\n      const {start: previousStart} = parseStatsPeriod(\n        getPeriod({period, start: undefined, end: undefined}, {shouldDoublePeriod: true})\n          .statsPeriod!\n      );\n\n      const {start: previousEnd} = parseStatsPeriod(\n        getPeriod({period, start: undefined, end: undefined}, {shouldDoublePeriod: false})\n          .statsPeriod!\n      );\n\n      endpoints.push([\n        'previousReleases',\n        `/organizations/${organization.slug}/releases/stats/`,\n        {\n          query: {\n            ...commonQuery,\n            start: previousStart,\n            end: previousEnd,\n          },\n        },\n      ]);\n    }\n\n    return endpoints;\n  }\n\n  /**\n   * If our releases are empty, determine if we had a release in the last 90 days (empty message differs then)\n   */\n  async onLoadAllEndpointsSuccess() {\n    const {currentReleases, previousReleases} = this.state;\n    const {organization, selection, isProjectStabilized} = this.props;\n\n    if (!isProjectStabilized) {\n      return;\n    }\n\n    if ([...(currentReleases ?? []), ...(previousReleases ?? [])].length !== 0) {\n      this.setState({noReleaseEver: false});\n      return;\n    }\n\n    this.setState({loading: true});\n\n    const hasOlderReleases = await fetchAnyReleaseExistence(\n      this.api,\n      organization.slug,\n      selection.projects[0]\n    );\n\n    this.setState({noReleaseEver: !hasOlderReleases, loading: false});\n  }\n\n  get cardTitle() {\n    return t('Number of Releases');\n  }\n\n  get cardHelp() {\n    return this.trend\n      ? t(\n          'The number of releases for this project and how it has changed since the last period.'\n        )\n      : t('The number of releases for this project.');\n  }\n\n  get trend() {\n    const {currentReleases, previousReleases} = this.state;\n\n    if (!defined(currentReleases) || !defined(previousReleases)) {\n      return null;\n    }\n\n    return currentReleases.length - previousReleases.length;\n  }\n\n  get trendStatus(): React.ComponentProps<typeof ScoreCard>['trendStatus'] {\n    if (!this.trend) {\n      return undefined;\n    }\n\n    return this.trend > 0 ? 'good' : 'bad';\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {selection, isProjectStabilized, query} = this.props;\n\n    if (\n      prevProps.selection !== selection ||\n      prevProps.isProjectStabilized !== isProjectStabilized ||\n      prevProps.query !== query\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMissingFeatureCard() {\n    const {organization} = this.props;\n    return (\n      <ScoreCard\n        title={this.cardTitle}\n        help={this.cardHelp}\n        score={<MissingReleasesButtons organization={organization} />}\n      />\n    );\n  }\n\n  renderScore() {\n    const {currentReleases, loading} = this.state;\n\n    if (loading || !defined(currentReleases)) {\n      return '\\u2014';\n    }\n\n    return currentReleases.length === API_LIMIT\n      ? `${API_LIMIT - 1}+`\n      : currentReleases.length;\n  }\n\n  renderTrend() {\n    const {loading, currentReleases} = this.state;\n\n    if (loading || !defined(this.trend) || currentReleases?.length === API_LIMIT) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        {this.trend >= 0 ? (\n          <IconArrow direction=\"up\" size=\"xs\" />\n        ) : (\n          <IconArrow direction=\"down\" size=\"xs\" />\n        )}\n        {Math.abs(this.trend)}\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const {noReleaseEver} = this.state;\n\n    if (noReleaseEver) {\n      return this.renderMissingFeatureCard();\n    }\n\n    return (\n      <ScoreCard\n        title={this.cardTitle}\n        help={this.cardHelp}\n        score={this.renderScore()}\n        trend={this.renderTrend()}\n        trendStatus={this.trendStatus}\n      />\n    );\n  }\n}\n\nexport default ProjectVelocityScoreCard;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Collapsible from 'sentry/components/collapsible';\nimport IdBadge from 'sentry/components/idBadge';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconOpen} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\n\nimport {SectionHeadingLink, SectionHeadingWrapper, SidebarSection} from './styles';\n\ntype Props = {\n  organization: Organization;\n  project?: Project;\n};\n\nfunction ProjectTeamAccess({organization, project}: Props) {\n  const hasEditPermissions = organization.access.includes('project:write');\n  const settingsLink = `/settings/${organization.slug}/projects/${project?.slug}/teams/`;\n\n  function renderInnerBody() {\n    if (!project) {\n      return <Placeholder height=\"23px\" />;\n    }\n\n    if (project.teams.length === 0) {\n      return (\n        <Button\n          to={settingsLink}\n          disabled={!hasEditPermissions}\n          title={\n            hasEditPermissions ? undefined : t('You do not have permission to do this')\n          }\n          priority=\"primary\"\n          size=\"sm\"\n        >\n          {t('Assign Team')}\n        </Button>\n      );\n    }\n\n    return (\n      <Collapsible\n        expandButton={({onExpand, numberOfHiddenItems}) => (\n          <Button priority=\"link\" onClick={onExpand}>\n            {tn('Show %s collapsed team', 'Show %s collapsed teams', numberOfHiddenItems)}\n          </Button>\n        )}\n      >\n        {project.teams\n          .sort((a, b) => a.slug.localeCompare(b.slug))\n          .map(team => (\n            <StyledLink\n              to={`/settings/${organization.slug}/teams/${team.slug}/`}\n              key={team.slug}\n            >\n              <IdBadge team={team} hideAvatar />\n            </StyledLink>\n          ))}\n      </Collapsible>\n    );\n  }\n\n  return (\n    <StyledSidebarSection>\n      <SectionHeadingWrapper>\n        <SectionHeading>{t('Team Access')}</SectionHeading>\n        <SectionHeadingLink to={settingsLink}>\n          <IconOpen />\n        </SectionHeadingLink>\n      </SectionHeadingWrapper>\n\n      <div>{renderInnerBody()}</div>\n    </StyledSidebarSection>\n  );\n}\n\nconst StyledSidebarSection = styled(SidebarSection)`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StyledLink = styled(Link)`\n  display: block;\n  margin-bottom: ${space(0.5)};\n`;\n\nexport default ProjectTeamAccess;\n","import styled from '@emotion/styled';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport space from 'sentry/styles/space';\n\nexport const SidebarSection = styled('section')`\n  margin-bottom: ${space(2)};\n\n  ${SectionHeading} {\n    line-height: 1;\n  }\n`;\n\nexport const SectionHeadingWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const SectionHeadingLink = styled(GlobalSelectionLink)`\n  display: flex;\n`;\n","import {Location} from 'history';\n\nexport function didProjectOrEnvironmentChange(location1: Location, location2: Location) {\n  return (\n    location1.query.environment !== location2.query.environment ||\n    location1.query.project !== location2.query.project\n  );\n}\n","import {PlatformKey} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\n\nexport enum SessionTerm {\n  CRASHES = 'crashes',\n  CRASHED = 'crashed',\n  ABNORMAL = 'abnormal',\n  CRASH_FREE = 'crashFree',\n  CRASH_FREE_USERS = 'crash-free-users',\n  CRASH_FREE_SESSIONS = 'crash-free-sessions',\n  HEALTHY = 'healthy',\n  ERRORED = 'errored',\n  UNHANDLED = 'unhandled',\n  STABILITY = 'stability',\n  ADOPTION = 'adoption',\n}\n\nexport const sessionTerm = {\n  [SessionTerm.CRASHES]: t('Crashes'),\n  [SessionTerm.CRASHED]: t('Crashed'),\n  [SessionTerm.ABNORMAL]: t('Abnormal'),\n  [SessionTerm.CRASH_FREE_USERS]: t('Crash Free Users'),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Crash Free Sessions'),\n  [SessionTerm.HEALTHY]: t('Healthy'),\n  [SessionTerm.ERRORED]: t('Errored'),\n  [SessionTerm.UNHANDLED]: t('Unhandled'),\n  [SessionTerm.ADOPTION]: t('Adoption'),\n  duration: t('Session Duration'),\n  otherCrashed: t('Other Crashed'),\n  otherAbnormal: t('Other Abnormal'),\n  otherErrored: t('Other Errored'),\n  otherHealthy: t('Other Healthy'),\n  otherCrashFreeUsers: t('Other Crash Free Users'),\n  otherCrashFreeSessions: t('Other Crash Free Sessions'),\n  otherReleases: t('Other Releases'),\n};\n\n// This should never be used directly (except in tests)\nexport const commonTermsDescription = {\n  [SessionTerm.CRASHES]: t('Number of sessions with a crashed state'),\n  [SessionTerm.CRASH_FREE]: t(\n    'Percentage of sessions/users who did not experience a crash.'\n  ),\n  [SessionTerm.CRASH_FREE_USERS]: t(\n    'Percentage of unique users with non-crashed sessions'\n  ),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Percentage of non-crashed sessions'),\n  [SessionTerm.STABILITY]: t('The percentage of crash free sessions.'),\n  [SessionTerm.ADOPTION]: t(\n    'Adoption compares the sessions or users of a release with the total sessions or users for this project in the last 24 hours.'\n  ),\n};\n\n// This should never be used directly (except in tests)\nexport const mobileTermsDescription = {\n  [SessionTerm.CRASHED]: t(\n    'The process was terminated due to an unhandled exception or a request to the server that ended with an error'\n  ),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Percentage of non-crashed sessions'),\n  [SessionTerm.ABNORMAL]: t(\n    'An unknown session exit. Like due to loss of power or killed by the operating system'\n  ),\n  [SessionTerm.HEALTHY]: t('A session without errors'),\n  [SessionTerm.ERRORED]: t('A session with errors'),\n  [SessionTerm.UNHANDLED]: t('Not handled by user code'),\n};\n\n// This should never be used directly (except in tests)\nexport const desktopTermDescriptions = {\n  crashed: t('The application crashed with a hard crash (eg. segfault)'),\n  [SessionTerm.ABNORMAL]: t(\n    'The application did not properly end the session, for example, due to force-quit'\n  ),\n  [SessionTerm.HEALTHY]: t(\n    'The application exited normally and did not observe any errors'\n  ),\n  [SessionTerm.ERRORED]: t(\n    'The application exited normally but observed error events while running'\n  ),\n  [SessionTerm.UNHANDLED]: t('The application crashed with a hard crash'),\n};\n\nfunction getTermDescriptions(platform: PlatformKey | null) {\n  const technology =\n    platform === 'react-native' ||\n    platform === 'java-spring' ||\n    platform === 'apple-ios' ||\n    platform === 'dotnet-aspnetcore'\n      ? platform\n      : platform?.split('-')[0];\n\n  switch (technology) {\n    case 'dotnet':\n    case 'java':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n      };\n    case 'java-spring':\n    case 'dotnet-aspnetcore':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHES]: t(\n          'A request that resulted in an unhandled exception and hence a Server Error response'\n        ),\n      };\n    case 'android':\n    case 'cordova':\n    case 'react-native':\n    case 'flutter':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHED]: t(\n          'An unhandled exception that resulted in the application crashing'\n        ),\n      };\n\n    case 'apple': {\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHED]: t('An error that resulted in the application crashing'),\n      };\n    }\n    case 'node':\n    case 'javascript':\n      return {\n        ...commonTermsDescription,\n        [SessionTerm.CRASHED]: t(\n          'During the session an unhandled global error/promise rejection occurred.'\n        ),\n        [SessionTerm.ABNORMAL]: t('Non applicable for Javascript.'),\n        [SessionTerm.HEALTHY]: t('No errors were captured during session life-time.'),\n        [SessionTerm.ERRORED]: t(\n          'During the session at least one handled error occurred.'\n        ),\n        [SessionTerm.UNHANDLED]:\n          \"An error was captured by the global 'onerror' or 'onunhandledrejection' handler.\",\n      };\n    case 'apple-ios':\n    case 'minidump':\n    case 'native':\n      return {\n        ...commonTermsDescription,\n        ...desktopTermDescriptions,\n      };\n    case 'rust':\n      return {\n        ...commonTermsDescription,\n        ...desktopTermDescriptions,\n        [SessionTerm.CRASHED]: t('The application had an unrecoverable error (a panic)'),\n      };\n    default:\n      return {\n        ...commonTermsDescription,\n        [SessionTerm.CRASHED]: t('Number of users who experienced an unhandled error'),\n        [SessionTerm.ABNORMAL]: t('An unknown session exit'),\n        [SessionTerm.HEALTHY]: mobileTermsDescription.healthy,\n        [SessionTerm.ERRORED]: mobileTermsDescription.errored,\n        [SessionTerm.UNHANDLED]: mobileTermsDescription.unhandled,\n      };\n  }\n}\n\nexport function getSessionTermDescription(\n  term: SessionTerm,\n  platform: PlatformKey | null\n) {\n  return getTermDescriptions(platform)[term];\n}\n","var baseSum = require('./_baseSum');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.mean` and `_.meanBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the mean.\n */\nfunction baseMean(array, iteratee) {\n  var length = array == null ? 0 : array.length;\n  return length ? (baseSum(array, iteratee) / length) : NAN;\n}\n\nmodule.exports = baseMean;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","var baseMean = require('./_baseMean'),\n    identity = require('./identity');\n\n/**\n * Computes the mean of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the mean.\n * @example\n *\n * _.mean([4, 2, 8, 6]);\n * // => 5\n */\nfunction mean(array) {\n  return baseMean(array, identity);\n}\n\nmodule.exports = mean;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n"],"names":["pick","canIncludePreviousPeriod","getPeriod","PERFORMANCE_URL_PARAM","doEventsRequest","api","organization","project","environment","team","period","start","end","interval","comparisonDelta","includePrevious","query","yAxis","field","topEvents","orderby","partial","withoutZerofill","referrer","queryBatching","generatePathname","queryExtras","excludeOther","includeAllArgs","pathname","slug","shouldDoublePeriod","urlQuery","Object","fromEntries","entries","undefined","filter","value","periodObj","queryObject","batchRequest","requestPromise","fetchTagFacets","orgSlug","urlParams","values","queryOption","fetchTotalCount","then","res","count","IconCheckmark","IconDiamond","IconExclamation","IconFire","IconIssues","t","space","IncidentStatus","AlertBadge","status","hideText","isIssue","statusText","Icon","color","CRITICAL","WARNING","Wrapper","AlertIconWrapper","p","icon","AlertIconBackground","IncidentStatusValue","VisualMap","visualMap","ErrorPanel","height","theme","gray300","fontSizeExtraLarge","PureComponent","isEqual","omitBy","addErrorMessage","LoadingPanel","getPreviousSeriesName","isMultiSeriesStats","defined","stripEquationPrefix","propNamesToIgnore","omitIgnoredProps","props","_value","key","includes","EventsRequest","reloading","loading","errored","timeseriesData","fetchedWithPrevious","confirmedQuery","onError","expired","name","hideError","setState","state","errorMessage","append","clear","resp","responseJSON","detail","unmounting","dataLoadedCallback","data","hasPreviousPeriod","dataMiddleIndex","Math","floor","length","current","slice","previous","componentDidMount","fetchData","componentDidUpdate","prevProps","componentWillUnmount","calculateTotalsPerTimestamp","getName","timestamp","map","i","countArray","reduce","acc","transformPreviousPeriodData","seriesName","_timestamp","_countArray","stack","transformAggregatedTimeseries","transformTimeseriesData","countsForTimestamp","transformComparisonTimeseriesData","comparisonCount","processData","response","seriesIndex","isMetricsData","totals","includeTransformedData","includeTimeAggregation","timeAggregationSeriesName","currentSeriesNames","previousSeriesNames","getData","transformedData","transformedComparisonData","previousData","timeAggregatedData","timeframe","processedData","comparisonData","allData","originalData","originalPreviousData","render","children","showLoading","seriesAdditionalInfo","sortedTimeseriesData","keys","index","seriesData","order","sort","a","b","results","item","previousTimeseriesData","some","transformedTimeseriesData","transformedComparisonTimeseriesData","allTimeseriesData","originalTimeseriesData","timeseriesTotals","originalPreviousTimeseriesData","comparisonTimeseriesData","limit","LineSeries","BaseChart","LineChart","series","seriesOptions","dataArray","options","animation","animationThreshold","animationDuration","LoadingMask","_height","defaultProps","MapSeries","roam","emphasis","label","show","type","Component","AreaChart","StackedAreaChart","val","Fragment","TransitionChart","prevReloading","prevLoading","getDerivedStateFromProps","nextReloading","nextLoading","String","TransparentLoadingMask","className","visible","other","useEffect","useState","useTheme","echarts","max","DEFAULT_ZOOM","DISCOVER_ZOOM","DISCOVER_QUERY_LIST_ZOOM","DEFAULT_CENTER_X","DISCOVER_QUERY_LIST_CENTER_Y","DEFAULT_CENTER_Y","WorldMapChart","fromDiscover","fromDiscoverQueryList","countryToCodeMap","codeToCountryMap","unmounted","loadWorldMap","countryCodesMap","world","Promise","all","default","worldMap","registerMap","country","processedSeries","nameMap","aspectScale","zoom","center","itemStyle","areaColor","gray200","borderColor","backgroundSecondary","pink300","silent","maxValue","tooltipFormatter","format","marker","Array","isArray","isNaN","formattedValue","toLocaleString","countryOrCode","join","backgroundColor","background","left","right","min","inRange","purple200","purple300","text","textStyle","textColor","calculable","formatter","withRouter","addLoadingMessage","addSuccessMessage","navigateTo","Access","GuideAnchor","Button","Link","IconSiren","tct","useApi","AlertWizardRuleTemplates","DEFAULT_WIZARD_TEMPLATE","CreateAlertFromViewButton","projects","eventView","onClick","alertType","disableMetricDataset","buttonProps","find","id","queryParams","generateQueryStringObject","replace","alertTemplate","to","createFromDiscover","aggregate","handleClick","CreateAlertButton","projectSlug","iconProps","router","hideIcon","showPermissionGuide","alertOption","onEnter","createAlertUrl","providedProj","alertsBaseUrl","alertsArgs","handleClickWithoutProject","event","preventDefault","enableAlertsMemberWrite","settingsEndpoint","method","alertsMemberWrite","err","permissionTooltipText","settingsLink","renderButton","hasAccess","isHoverable","position","overlayStyle","maxWidth","showGuide","isOrgAdmin","Feature","FeatureDisabled","Hovercard","DiscoverFeature","noFeatureMessage","renderDisabled","features","hasFeature","DiscoverButton","AppStoreConnectContext","UpdateAlert","GlobalAppStoreConnectUpdateAlert","rest","useContext","Alert","appStoreConnectContext","updateAlertMessage","notices","Notices","NoMarginBottomAlert","AlertContent","borderRadius","createContext","useMemo","getAppStoreValidationErrorMessage","Provider","projectDetails","setProjectDetails","appStoreConnectStatusData","setAppStoreConnectStatusData","appStoreConnectSymbolSources","symbolSources","JSON","parse","symbolSource","toLowerCase","responseProjectDetails","catch","appStoreConnectStatus","getUpdateAlertMessage","respository","credentials","appStoreConnect","link","NOT_AVAILABLE_MESSAGES","performance","discover","releaseHealth","Sentry","unexpectedErrorMessage","error","repo","code","linkToCustomRepository","customRepositoryName","captureException","Error","isAPIPayloadSimilar","PerformanceEventViewContext","OrganizationContext","QueryError","constructor","originalError","message","getOriginalError","_GenericDiscoverQuery","isLoading","tableFetchID","tableData","pageLinks","thisAPIPayload","getPayload","otherAPIPayload","route","cursor","parseError","unknownError","beforeFetch","afterFetch","didFetch","setError","isValid","url","Symbol","apiPayload","doDiscoverQuery","prevState","getResponseHeader","_parseError","refetchCondition","_shouldRefetchData","eventViewValidation","shouldRefetchExternal","shouldRefetchData","noPagination","payload","getRequestPayload","getEventsAPIPayload","location","forceAppendRawQueryString","per_page","assign","childrenProps","GenericDiscoverQuery","organizationSlug","performanceEventView","_props","params","moment","DEFAULT_STATS_PERIOD","getUtcDateString","statsPeriod","periodNumber","periodLength","match","parseInt","formattedStart","formattedEnd","diff","previousPeriodStart","subtract","createDefinedContext","PerformanceEventViewProvider","_usePerformanceEventView","usePerformanceEventView","useMutablePerformanceEventView","clone","strict","Context","displayName","useDefinedContext","context","measurementType","MobileVital","WebVital","WEB_VITAL_DETAILS","FP","acronym","description","poorThreshold","FCP","LCP","FID","CLS","TTFB","RequestTime","MOBILE_VITAL_DETAILS","AppStartCold","AppStartWarm","FramesTotal","FramesSlow","FramesFrozen","FramesSlowRate","FramesFrozenRate","StallCount","StallTotalTime","StallLongestTime","StallPercentage","Browser","routeTitleGen","routeName","withSentry","tmplBase","tmpl","compact","mean","getDiffInMinutes","SIX_HOURS","SIXTY_DAYS","THIRTY_DAYS","SessionStatus","percent","getCrashFreePercent","getSessionStatusPercent","sessionTerm","MINUTES_THRESHOLD_TO_DISPLAY_SECONDS","getCount","groups","group","getCountAtIndex","getCrashFreeRate","crashedRate","getSessionStatusRate","CRASHED","getSeriesAverage","totalCount","dataPoints","getSeriesSum","intervals","dataPointsSums","fill","groupSeries","forEach","dataPoint","idx","crashedCount","by","getCrashFreeRateSeries","intervalTotalSessions","intervalCrashedSessions","crashedSessionsPercent","getSessionStatusRateSeries","intervalStatusSessions","statusSessionsPercent","getSessionP50Series","valueFormatter","meanValue","v","getAdoptionSeries","releaseGroups","allGroups","intervalReleaseSessions","intervalAdoption","round","getCountSeries","initSessionsChart","colors","charts","getColorPalette","HEALTHY","healthy","green300","areaStyle","opacity","lineStyle","width","ERRORED","ABNORMAL","abnormal","crashed","red300","getSessionsInterval","datetimeObj","highFidelity","diffInMinutes","isSameOrBefore","filterSessionsInTimeWindow","sessions","filteredIndexes","isBetween","utc","push","startsWith","AlertRuleThresholdType","AlertRuleTriggerType","AlertRuleComparisonType","Dataset","EventTypes","Datasource","SessionsAggregate","TimePeriod","TimeWindow","ActionType","ActionLabel","EMAIL","SLACK","PAGERDUTY","MSTEAMS","SENTRY_APP","TargetType","TargetLabel","USER","TEAM","AlertRuleType","IncidentActivityType","IncidentStatusMethod","AlertRuleStatus","CombinedAlertType","MEPAlertsQueryType","MEPAlertsDataset","DatasetMEPAlertQueryTypes","ERRORS","ERROR","TRANSACTIONS","PERFORMANCE","GENERIC_METRICS","METRICS","CRASH_RATE","SESSIONS","AlertWizardAlertNames","issues","num_errors","users_experiencing_errors","throughput","trans_duration","apdex","failure_rate","lcp","fid","cls","custom","crash_free_sessions","crash_free_users","getAlertWizardCategories","org","categoryHeading","dataset","eventTypes","TRANSACTION","CRASH_FREE_SESSIONS","SESSION","CRASH_FREE_USERS","hidePrimarySelectorSet","Set","hideParameterSelectorSet","getMEPAlertsDataset","newAlert","DISCOVER","METRICS_ENHANCED","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","renderComponent","EventsChart","HeaderTitleLegend","normalizeDateTimeParams","isSelectionEqual","QuestionTooltip","axisLabelFormatter","aggregateOutputType","getDynamicText","withPageFilters","ProjectBaseEventsChart","selection","onTotalValuesChange","environments","datetime","proj","title","help","eventsChartProps","top","grid","bottom","axisLabel","scale","fixed","ChartZoom","ReleaseSeries","RELEASE_LINES_THRESHOLD","IconWarning","displayCrashFreePercent","DisplayModes","ProjectSessionsChartRequest","ProjectBaseSessionsChart","displayMode","disablePrevious","zoomRenderProps","releaseSeries","Chart","seriesSelection","forceUpdate","selected","shouldComponentUpdate","nextProps","nextState","timeSeries","isCrashFree","STABILITY","STABILITY_USERS","legend","previousTimeSeries","hideReleasesByDefault","markLine","hideHealthyByDefault","s","d","itemHeight","itemWidth","itemGap","align","verticalAlign","fontSize","fontFamily","family","chartOptions","showSymbol","tooltip","trigger","truncate","ChartComponent","handleLegendSelectChanged","browserHistory","ERRORS_BASIC_CHART_PERIODS","ProjectErrorsBasicChart","getDefaultState","getEndpoints","projectId","getStatsPeriod","onLoadAllEndpointsSuccess","stats","getSeries","renderLoading","renderBody","withTheme","omit","shouldFetchPreviousPeriod","SessionFieldWithOperation","totalSessions","shouldFetchWithPrevious","path","filteredResponse","transformSessionCountData","transformData","USERS","baseParams","groupBy","doubledPeriod","responseData","groupAcc","previousPeriodTotalSessions","totalIntervalSessions","_interval","sessionsChart","chartData","g","withOrganization","ProjectDetail","ProjectDetailContainer","ButtonBar","DOCS_URL","MissingAlertsButtons","size","FeatureTourModal","trackAnalyticsEvent","PERFORMANCE_TOUR_STEPS","MissingPerformanceButtons","handleTourAdvance","step","duration","eventKey","eventName","organization_id","handleClose","showModal","BarChart","OptionSelector","ChartContainer","ChartControls","InlineContainer","SectionHeading","SectionValue","ONE_HOUR","ONE_WEEK","TWENTY_FOUR_HOURS","TWO_WEEKS","Panel","Placeholder","CHART_PALETTE","decodeScalar","MutableSearch","withApi","getSessionTermDescription","SessionTerm","getTermHelp","PERFORMANCE_TERM","ProjectCharts","totalValues","chartId","chartIndex","metric","defaultDisplayModes","hasSessions","hasTransactions","FAILURE_RATE","APDEX","otherActiveDisplayModes","visibleCharts","visibleChartId","urlKey","findIndex","displayModes","hasPerformance","noPerformanceTooltip","noHealthTooltip","disabled","TPM","summaryHeading","barChartInterval","hasDiscover","formatString","handleTotalValuesChange","yellow300","handleDisplayModeChange","fetchOrganizationDetails","updateProjects","fetchTagValues","Breadcrumbs","GlobalEventProcessingAlert","GlobalSdkUpdateAlert","IdBadge","Layout","LoadingError","NoProjectMessage","PageFiltersContainer","MissingProjectMembership","DEFAULT_RELATIVE_PERIODS","IconSettings","PageContent","withProjects","ProjectScoreCards","ProjectFilters","ProjectIssues","ProjectLatestAlerts","ProjectLatestReleases","ProjectQuickLinks","ProjectTeamAccess","selectedProjects","newlySelectedProject","search","orgId","syncProjectWithSlug","Number","isProjectStabilized","renderNoAccess","renderProjectNotFound","onRetryProjects","loadingProjects","firstTransactionEvent","hasOnlyBasicChart","handleSearch","tagValueLoader","StyledPageContent","ProjectFiltersWrapper","StyledSdkUpdatesAlert","breakpoints","medium","StyledGlobalEventProcessingAlert","StyledGlobalAppStoreConnectUpdateAlert","DatePageFilter","EnvironmentPageFilter","PageFilterBar","SmartSearchBar","SEMVER_TAGS","relativeDateOptions","onSearch","getTagValues","tag","currentQuery","release","FiltersWrapper","small","useCallback","qs","ButtonLabel","GroupList","Pagination","PanelBody","QueryCount","URL_PARAM","NoGroupsHandler","IssuesType","IssuesQuery","setPageLinks","onCursor","setOnCursor","issuesType","setIssuesType","UNHANDLED","issuesCount","setIssuesCount","new","regressed","resolved","unhandled","fetchIssuesCount","getIssueCountEndpoint","queryParameters","issuesCountPath","stringify","NEW","ALL","RESOLVED","REGRESSED","param","issueCountEndpoint","handleOpenInIssuesClick","handleOpenInDiscoverClick","handleFetchSuccess","groupListState","cursorHandler","discoverQuery","trim","getDiscoverUrl","display","endpointPath","issueQuery","toUpperCase","issueSearch","handleIssuesTypeSelection","issueType","renderEmptyMessage","selectedTimePeriod","displayedPeriod","timePeriod","issuesTypes","issueCount","ControlsWrapper","StyledButtonBar","buttonCount","buttonCountActive","OpenInButtonBar","StyledPagination","EmptyStateWarning","TimeSince","IconOpen","SectionHeadingLink","SectionHeadingWrapper","SidebarSection","didProjectOrEnvironmentChange","PLACEHOLDER_AND_EMPTY_HEIGHT","alert","identifier","dateClosed","dateStarted","isResolved","CLOSED","isWarning","statusProps","date","getStatusColor","remountComponent","unresolvedAlerts","resolvedAlerts","hasAlertRule","alertRules","alertsLink","renderInnerBody","alertsUnresolvedAndResolved","checkingForAlertRules","showLoadingIndicator","renderAlertRow","AlertRowLink","AlertBadgeWrapper","AlertDetails","fontSizeMedium","overflowEllipsis","AlertTitle","AlertDate","StyledEmptyStateWarning","fetchAnyReleaseExistence","DateTime","TextOverflow","Version","analytics","RELEASES_TOUR_STEPS","MissingReleasesButtons","org_id","project_id","step_id","step_title","lastDeploy","dateCreated","dateFinished","version","releases","hasOlderReleases","releasesLink","checkingForOlderReleases","renderReleaseRow","ReleasesTable","rowBackground","StyledVersion","GlobalSelectionLink","Tooltip","IconLink","DEFAULT_MAX_DURATION","getPerformanceLandingUrl","getPerformanceTrendsUrl","getTrendsLink","queryString","conditions","setFilterValues","quickLinks","link1","link2","QuickLink","QuickLinkText","Count","parseStatsPeriod","ScoreCard","IconArrow","ProjectApdexScoreCard","currentApdex","previousApdex","commonQuery","endpoints","previousStart","previousEnd","cardTitle","cardHelp","baseHelp","trend","trendStatus","renderMissingFeatureCard","renderScore","renderTrend","abs","ProjectStabilityScoreCard","ProjectVelocityScoreCard","CardWrapper","formatAbbreviatedNumber","currentSessions","previousSessions","statsPeriodStart","statsPeriodEnd","score","calculateCrashFree","previousScore","crashedSessions","API_LIMIT","currentReleases","previousReleases","noReleaseEver","Collapsible","tn","hasEditPermissions","access","teams","onExpand","numberOfHiddenItems","localeCompare","StyledSidebarSection","StyledLink","location1","location2","CRASHES","ADOPTION","otherCrashed","otherAbnormal","otherErrored","otherHealthy","otherCrashFreeUsers","otherCrashFreeSessions","otherReleases","commonTermsDescription","CRASH_FREE","mobileTermsDescription","desktopTermDescriptions","getTermDescriptions","platform","technology","split","term"],"sourceRoot":""}