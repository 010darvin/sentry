{"version":3,"file":"chunks/app_views_settings_organizationDeveloperSettings_subscriptionBox_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/settings/organizationDeveloperSettings/constants.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/subscriptionBox.tsx"],"sourcesContent":["export const EVENT_CHOICES = ['issue', 'error', 'comment'] as const;\n\nexport const DESCRIPTIONS = {\n  issue: 'created, resolved, assigned, ignored',\n  error: 'created',\n  comment: 'created, edited, deleted',\n} as const;\n\nexport const PERMISSIONS_MAP = {\n  issue: 'Event',\n  error: 'Event',\n  comment: 'Event',\n} as const;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Checkbox from 'sentry/components/checkbox';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {\n  DESCRIPTIONS,\n  EVENT_CHOICES,\n  PERMISSIONS_MAP,\n} from 'sentry/views/settings/organizationDeveloperSettings/constants';\n\ntype Resource = typeof EVENT_CHOICES[number];\n\ntype DefaultProps = {\n  webhookDisabled: boolean;\n};\n\ntype Props = DefaultProps & {\n  checked: boolean;\n  disabledFromPermissions: boolean;\n  isNew: boolean;\n  onChange: (resource: Resource, checked: boolean) => void;\n  organization: Organization;\n  resource: Resource;\n};\n\nexport class SubscriptionBox extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    webhookDisabled: false,\n  };\n\n  onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const checked = evt.target.checked;\n    const {resource} = this.props;\n    this.props.onChange(resource, checked);\n  };\n\n  render() {\n    const {resource, organization, webhookDisabled, checked, isNew} = this.props;\n    const features = new Set(organization.features);\n\n    let disabled = this.props.disabledFromPermissions || webhookDisabled;\n    let message = `Must have at least 'Read' permissions enabled for ${PERMISSIONS_MAP[resource]}`;\n    if (resource === 'error' && !features.has('integrations-event-hooks')) {\n      disabled = true;\n      message =\n        'Your organization does not have access to the error subscription resource.';\n    }\n    if (webhookDisabled) {\n      message = 'Cannot enable webhook subscription without specifying a webhook url';\n    }\n\n    return (\n      <Fragment>\n        <Tooltip disabled={!disabled} title={message} key={resource}>\n          <SubscriptionGridItem disabled={disabled}>\n            <SubscriptionInfo>\n              <SubscriptionTitle>\n                {t(`${resource}`)}\n                {isNew && <FeatureBadge type=\"new\" />}\n              </SubscriptionTitle>\n              <SubscriptionDescription>\n                {t(`${DESCRIPTIONS[resource]}`)}\n              </SubscriptionDescription>\n            </SubscriptionInfo>\n            <Checkbox\n              key={`${resource}${checked}`}\n              disabled={disabled}\n              id={resource}\n              value={resource}\n              checked={checked}\n              onChange={this.onChange}\n            />\n          </SubscriptionGridItem>\n        </Tooltip>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(SubscriptionBox);\n\nconst SubscriptionGridItem = styled('div')<{disabled: boolean}>`\n  display: flex;\n  justify-content: space-between;\n  background: ${p => p.theme.backgroundSecondary};\n  opacity: ${p => (p.disabled ? 0.3 : 1)};\n  border-radius: ${p => p.theme.borderRadius};\n  margin: ${space(1.5)};\n  padding: ${space(1.5)};\n  box-sizing: border-box;\n`;\n\nconst SubscriptionInfo = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n`;\n\nconst SubscriptionDescription = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1;\n  color: ${p => p.theme.gray300};\n`;\n\nconst SubscriptionTitle = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1;\n  color: ${p => p.theme.textColor};\n  white-space: nowrap;\n  margin-bottom: ${space(0.75)};\n`;\n"],"names":["EVENT_CHOICES","DESCRIPTIONS","issue","error","comment","PERMISSIONS_MAP","Component","Fragment","Checkbox","FeatureBadge","Tooltip","t","space","withOrganization","SubscriptionBox","evt","checked","target","resource","props","onChange","render","organization","webhookDisabled","isNew","features","Set","disabled","disabledFromPermissions","message","has","SubscriptionGridItem","p","theme","backgroundSecondary","borderRadius","SubscriptionInfo","SubscriptionDescription","fontSizeMedium","gray300","SubscriptionTitle","fontSizeLarge","textColor"],"sourceRoot":""}