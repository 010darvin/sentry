{"version":3,"file":"chunks/app_components_charts_eventsChart_tsx-app_components_charts_optionSelector_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/eventsChart.tsx","webpack:///./app/components/charts/eventsGeoRequest.tsx","webpack:///./app/components/charts/optionSelector.tsx","webpack:///./app/components/charts/releaseSeries.tsx"],"sourcesContent":["import * as React from 'react';\nimport {InjectedRouter} from 'react-router';\nimport {withTheme} from '@emotion/react';\nimport type {\n  EChartsOption,\n  LegendComponentOption,\n  XAXisComponentOption,\n  YAXisComponentOption,\n} from 'echarts';\nimport {Query} from 'history';\nimport isEqual from 'lodash/isEqual';\n\nimport {Client} from 'sentry/api';\nimport {AreaChart, AreaChartProps} from 'sentry/components/charts/areaChart';\nimport {BarChart, BarChartProps} from 'sentry/components/charts/barChart';\nimport ChartZoom, {ZoomRenderProps} from 'sentry/components/charts/chartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport {LineChart, LineChartProps} from 'sentry/components/charts/lineChart';\nimport ReleaseSeries from 'sentry/components/charts/releaseSeries';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {\n  getInterval,\n  processTableResults,\n  RELEASE_LINES_THRESHOLD,\n} from 'sentry/components/charts/utils';\nimport {WorldMapChart, WorldMapChartProps} from 'sentry/components/charts/worldMapChart';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {DateString, OrganizationSummary} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport {TableDataWithTitle} from 'sentry/utils/discover/discoverQuery';\nimport {\n  aggregateMultiPlotType,\n  aggregateOutputType,\n  getEquation,\n  isEquation,\n} from 'sentry/utils/discover/fields';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {Theme} from 'sentry/utils/theme';\n\nimport EventsGeoRequest from './eventsGeoRequest';\nimport EventsRequest from './eventsRequest';\n\ntype ChartComponent =\n  | React.ComponentType<BarChartProps>\n  | React.ComponentType<AreaChartProps>\n  | React.ComponentType<LineChartProps>\n  | React.ComponentType<WorldMapChartProps>;\n\ntype ChartProps = {\n  currentSeriesNames: string[];\n  loading: boolean;\n  previousSeriesNames: string[];\n  reloading: boolean;\n  stacked: boolean;\n  tableData: TableDataWithTitle[];\n  theme: Theme;\n  timeseriesData: Series[];\n  yAxis: string;\n  zoomRenderProps: ZoomRenderProps;\n  chartComponent?: ChartComponent;\n  chartOptions?: Omit<EChartsOption, 'xAxis' | 'yAxis'> & {\n    xAxis?: XAXisComponentOption;\n    yAxis?: YAXisComponentOption;\n  };\n  colors?: string[];\n  /**\n   * By default, only the release series is disableable. This adds\n   * a list of series names that are also disableable.\n   */\n  disableableSeries?: string[];\n  fromDiscover?: boolean;\n  height?: number;\n  interval?: string;\n  legendOptions?: LegendComponentOption;\n  minutesThresholdToDisplaySeconds?: number;\n  previousSeriesTransformer?: (series?: Series | null) => Series | null | undefined;\n  previousTimeseriesData?: Series[] | null;\n  referrer?: string;\n  releaseSeries?: Series[];\n  /**\n   * A callback to allow for post-processing of the series data.\n   * Can be used to rename series or even insert a new series.\n   */\n  seriesTransformer?: (series: Series[]) => Series[];\n  showDaily?: boolean;\n  showLegend?: boolean;\n  timeframe?: {end: number; start: number};\n  topEvents?: number;\n};\n\ntype State = {\n  forceUpdate: boolean;\n  seriesSelection: Record<string, boolean>;\n};\n\nclass Chart extends React.Component<ChartProps, State> {\n  state: State = {\n    seriesSelection: {},\n    forceUpdate: false,\n  };\n\n  shouldComponentUpdate(nextProps: ChartProps, nextState: State) {\n    if (nextState.forceUpdate) {\n      return true;\n    }\n\n    if (!isEqual(this.state.seriesSelection, nextState.seriesSelection)) {\n      return true;\n    }\n\n    if (nextProps.reloading || !nextProps.timeseriesData) {\n      return false;\n    }\n\n    if (\n      isEqual(this.props.timeseriesData, nextProps.timeseriesData) &&\n      isEqual(this.props.releaseSeries, nextProps.releaseSeries) &&\n      isEqual(this.props.previousTimeseriesData, nextProps.previousTimeseriesData) &&\n      isEqual(this.props.tableData, nextProps.tableData)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getChartComponent(): ChartComponent {\n    const {showDaily, timeseriesData, yAxis, chartComponent} = this.props;\n\n    if (defined(chartComponent)) {\n      return chartComponent;\n    }\n\n    if (showDaily) {\n      return BarChart;\n    }\n\n    if (timeseriesData.length > 1) {\n      switch (aggregateMultiPlotType(yAxis)) {\n        case 'line':\n          return LineChart;\n        case 'area':\n          return AreaChart;\n        default:\n          throw new Error(`Unknown multi plot type for ${yAxis}`);\n      }\n    }\n\n    return AreaChart;\n  }\n\n  handleLegendSelectChanged = legendChange => {\n    const {disableableSeries = []} = this.props;\n    const {selected} = legendChange;\n    const seriesSelection = Object.keys(selected).reduce((state, key) => {\n      // we only want them to be able to disable the Releases&Other series,\n      // and not any of the other possible series here\n      const disableable =\n        ['Releases', 'Other'].includes(key) || disableableSeries.includes(key);\n      state[key] = disableable ? selected[key] : true;\n      return state;\n    }, {});\n\n    // we have to force an update here otherwise ECharts will\n    // update its internal state and disable the series\n    this.setState({seriesSelection, forceUpdate: true}, () =>\n      this.setState({forceUpdate: false})\n    );\n  };\n\n  render() {\n    const {\n      theme,\n      loading: _loading,\n      reloading: _reloading,\n      yAxis,\n      releaseSeries,\n      zoomRenderProps,\n      timeseriesData,\n      previousTimeseriesData,\n      showLegend,\n      legendOptions,\n      chartOptions: chartOptionsProp,\n      currentSeriesNames,\n      previousSeriesNames,\n      seriesTransformer,\n      previousSeriesTransformer,\n      colors,\n      height,\n      timeframe,\n      topEvents,\n      tableData,\n      fromDiscover,\n      ...props\n    } = this.props;\n    const {seriesSelection} = this.state;\n\n    let Component = this.getChartComponent();\n\n    if (Component === WorldMapChart) {\n      const {data, title} = processTableResults(tableData);\n      const tableSeries = [\n        {\n          seriesName: title,\n          data,\n        },\n      ];\n      return <WorldMapChart series={tableSeries} fromDiscover={fromDiscover} />;\n    }\n\n    Component = Component as Exclude<\n      ChartComponent,\n      React.ComponentType<WorldMapChartProps>\n    >;\n\n    const data = [\n      ...(currentSeriesNames.length > 0 ? currentSeriesNames : [t('Current')]),\n      ...(previousSeriesNames.length > 0 ? previousSeriesNames : [t('Previous')]),\n    ];\n\n    const releasesLegend = t('Releases');\n\n    const hasOther = topEvents && topEvents + 1 === timeseriesData.length;\n    if (hasOther) {\n      data.push('Other');\n    }\n\n    if (Array.isArray(releaseSeries)) {\n      data.push(releasesLegend);\n    }\n\n    // Temporary fix to improve performance on pages with a high number of releases.\n    const releases = releaseSeries && releaseSeries[0];\n    const hideReleasesByDefault =\n      Array.isArray(releaseSeries) &&\n      (releases as any)?.markLine?.data &&\n      (releases as any).markLine.data.length >= RELEASE_LINES_THRESHOLD;\n\n    const selected = !Array.isArray(releaseSeries)\n      ? seriesSelection\n      : Object.keys(seriesSelection).length === 0 && hideReleasesByDefault\n      ? {[releasesLegend]: false}\n      : seriesSelection;\n\n    const legend = showLegend\n      ? {\n          right: 16,\n          top: 12,\n          data,\n          selected,\n          ...(legendOptions ?? {}),\n        }\n      : undefined;\n\n    let series = Array.isArray(releaseSeries)\n      ? [...timeseriesData, ...releaseSeries]\n      : timeseriesData;\n    let previousSeries = previousTimeseriesData;\n\n    if (seriesTransformer) {\n      series = seriesTransformer(series);\n    }\n\n    if (previousSeriesTransformer) {\n      previousSeries = previousSeries?.map(\n        prev => previousSeriesTransformer(prev) as Series\n      );\n    }\n    const chartColors = timeseriesData.length\n      ? colors?.slice(0, series.length) ?? [\n          ...theme.charts.getColorPalette(timeseriesData.length - 2 - (hasOther ? 1 : 0)),\n        ]\n      : undefined;\n    if (chartColors && chartColors.length && hasOther) {\n      chartColors.push(theme.chartOther);\n    }\n    const chartOptions = {\n      colors: chartColors,\n      grid: {\n        left: '24px',\n        right: '24px',\n        top: '32px',\n        bottom: '12px',\n      },\n      seriesOptions: {\n        showSymbol: false,\n      },\n      tooltip: {\n        trigger: 'axis' as const,\n        truncate: 80,\n        valueFormatter: (value: number) =>\n          tooltipFormatter(value, aggregateOutputType(yAxis)),\n      },\n      xAxis: timeframe\n        ? {\n            min: timeframe.start,\n            max: timeframe.end,\n          }\n        : undefined,\n      yAxis: {\n        axisLabel: {\n          color: theme.chartLabel,\n          formatter: (value: number) =>\n            axisLabelFormatter(value, aggregateOutputType(yAxis)),\n        },\n      },\n      ...(chartOptionsProp ?? {}),\n      animation: typeof Component === typeof BarChart ? false : undefined,\n    };\n\n    return (\n      <Component\n        {...props}\n        {...zoomRenderProps}\n        {...chartOptions}\n        legend={legend}\n        onLegendSelectChanged={this.handleLegendSelectChanged}\n        series={series}\n        previousPeriod={previousSeries ? previousSeries : undefined}\n        height={height}\n      />\n    );\n  }\n}\n\nconst ThemedChart = withTheme(Chart);\n\nexport type EventsChartProps = {\n  api: Client;\n  /**\n   * Absolute end date.\n   */\n  end: DateString;\n  /**\n   * Environment condition.\n   */\n  environments: string[];\n  organization: OrganizationSummary;\n  /**\n   * Project ids\n   */\n  projects: number[];\n  /**\n   * The discover query string to find events with.\n   */\n  query: string;\n  router: InjectedRouter;\n  /**\n   * Absolute start date.\n   */\n  start: DateString;\n  /**\n   * The aggregate/metric to plot.\n   */\n  yAxis: string | string[];\n  /**\n   * Markup for optional chart header\n   */\n  chartHeader?: React.ReactNode;\n  /**\n   * Override the default color palette.\n   */\n  colors?: string[];\n  confirmedQuery?: boolean;\n  /**\n   * Name of the series\n   */\n  currentSeriesName?: string;\n  /**\n   * Don't show the previous period's data. Will automatically disable\n   * when start/end are used.\n   */\n  disablePrevious?: boolean;\n  /**\n   * Don't show the release marklines.\n   */\n  disableReleases?: boolean;\n  /**\n   * A list of release names to visually emphasize. Can only be used when `disableReleases` is false.\n   */\n  emphasizeReleases?: string[];\n  /**\n   * The fields that act as grouping conditions when generating a topEvents chart.\n   */\n  field?: string[];\n  /**\n   * The interval resolution for a chart e.g. 1m, 5m, 1d\n   */\n  interval?: string;\n  /**\n   * Order condition when showing topEvents\n   */\n  orderby?: string;\n  /**\n   * Relative datetime expression. eg. 14d\n   */\n  period?: string | null;\n  preserveReleaseQueryParams?: boolean;\n  /**\n   * Name of the previous series\n   */\n  previousSeriesName?: string;\n  /**\n   * A unique name for what's triggering this request, see organization_events_stats for an allowlist\n   */\n  referrer?: string;\n  releaseQueryExtra?: Query;\n  /**\n   * Override the interval calculation and show daily results.\n   */\n  showDaily?: boolean;\n  /**\n   * Fetch n top events as dictated by the field and orderby props.\n   */\n  topEvents?: number;\n  /**\n   * Chart zoom will change 'pageStart' instead of 'start'\n   */\n  usePageZoom?: boolean;\n  /**\n   * Should datetimes be formatted in UTC?\n   */\n  utc?: boolean | null;\n  /**\n   * Whether or not to zerofill results\n   */\n  withoutZerofill?: boolean;\n} & Pick<\n  ChartProps,\n  | 'seriesTransformer'\n  | 'previousSeriesTransformer'\n  | 'showLegend'\n  | 'minutesThresholdToDisplaySeconds'\n  | 'disableableSeries'\n  | 'legendOptions'\n  | 'chartOptions'\n  | 'chartComponent'\n  | 'height'\n  | 'fromDiscover'\n>;\n\ntype ChartDataProps = {\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  zoomRenderProps: ZoomRenderProps;\n  previousTimeseriesData?: Series[] | null;\n  releaseSeries?: Series[];\n  results?: Series[];\n  tableData?: TableDataWithTitle[];\n  timeframe?: {end: number; start: number};\n  timeseriesData?: Series[];\n  topEvents?: number;\n};\n\nclass EventsChart extends React.Component<EventsChartProps> {\n  isStacked() {\n    const {topEvents, yAxis} = this.props;\n    return (\n      (typeof topEvents === 'number' && topEvents > 0) ||\n      (Array.isArray(yAxis) && yAxis.length > 1)\n    );\n  }\n\n  render() {\n    const {\n      api,\n      organization,\n      period,\n      utc,\n      query,\n      router,\n      start,\n      end,\n      projects,\n      environments,\n      showLegend,\n      minutesThresholdToDisplaySeconds,\n      yAxis,\n      disablePrevious,\n      disableReleases,\n      emphasizeReleases,\n      currentSeriesName: currentName,\n      previousSeriesName: previousName,\n      seriesTransformer,\n      previousSeriesTransformer,\n      field,\n      interval,\n      showDaily,\n      topEvents,\n      orderby,\n      confirmedQuery,\n      colors,\n      chartHeader,\n      legendOptions,\n      chartOptions,\n      preserveReleaseQueryParams,\n      releaseQueryExtra,\n      disableableSeries,\n      chartComponent,\n      usePageZoom,\n      height,\n      withoutZerofill,\n      fromDiscover,\n      ...props\n    } = this.props;\n\n    // Include previous only on relative dates (defaults to relative if no start and end)\n    const includePrevious = !disablePrevious && !start && !end;\n\n    const yAxisArray = decodeList(yAxis);\n    const yAxisSeriesNames = yAxisArray.map(name => {\n      let yAxisLabel = name && isEquation(name) ? getEquation(name) : name;\n      if (yAxisLabel && yAxisLabel.length > 60) {\n        yAxisLabel = yAxisLabel.substr(0, 60) + '...';\n      }\n      return yAxisLabel;\n    });\n\n    const previousSeriesNames = previousName\n      ? [previousName]\n      : yAxisSeriesNames.map(name => t('previous %s', name));\n    const currentSeriesNames = currentName ? [currentName] : yAxisSeriesNames;\n\n    const intervalVal = showDaily ? '1d' : interval || getInterval(this.props, 'high');\n\n    let chartImplementation = ({\n      zoomRenderProps,\n      releaseSeries,\n      errored,\n      loading,\n      reloading,\n      results,\n      timeseriesData,\n      previousTimeseriesData,\n      timeframe,\n      tableData,\n    }: ChartDataProps) => {\n      if (errored) {\n        return (\n          <ErrorPanel>\n            <IconWarning color=\"gray300\" size=\"lg\" />\n          </ErrorPanel>\n        );\n      }\n      const seriesData = results ? results : timeseriesData;\n\n      return (\n        <TransitionChart\n          loading={loading}\n          reloading={reloading}\n          height={height ? `${height}px` : undefined}\n        >\n          <TransparentLoadingMask visible={reloading} />\n\n          {React.isValidElement(chartHeader) && chartHeader}\n\n          <ThemedChart\n            zoomRenderProps={zoomRenderProps}\n            loading={loading}\n            reloading={reloading}\n            showLegend={showLegend}\n            minutesThresholdToDisplaySeconds={minutesThresholdToDisplaySeconds}\n            releaseSeries={releaseSeries || []}\n            timeseriesData={seriesData ?? []}\n            previousTimeseriesData={previousTimeseriesData}\n            currentSeriesNames={currentSeriesNames}\n            previousSeriesNames={previousSeriesNames}\n            seriesTransformer={seriesTransformer}\n            previousSeriesTransformer={previousSeriesTransformer}\n            stacked={this.isStacked()}\n            yAxis={yAxisArray[0]}\n            showDaily={showDaily}\n            colors={colors}\n            legendOptions={legendOptions}\n            chartOptions={chartOptions}\n            disableableSeries={disableableSeries}\n            chartComponent={chartComponent}\n            height={height}\n            timeframe={timeframe}\n            topEvents={topEvents}\n            tableData={tableData ?? []}\n            fromDiscover={fromDiscover}\n          />\n        </TransitionChart>\n      );\n    };\n\n    if (!disableReleases) {\n      const previousChart = chartImplementation;\n      chartImplementation = chartProps => (\n        <ReleaseSeries\n          utc={utc}\n          period={period}\n          start={start}\n          end={end}\n          projects={projects}\n          environments={environments}\n          emphasizeReleases={emphasizeReleases}\n          preserveQueryParams={preserveReleaseQueryParams}\n          queryExtra={releaseQueryExtra}\n        >\n          {({releaseSeries}) => previousChart({...chartProps, releaseSeries})}\n        </ReleaseSeries>\n      );\n    }\n\n    return (\n      <ChartZoom\n        router={router}\n        period={period}\n        start={start}\n        end={end}\n        utc={utc}\n        usePageDate={usePageZoom}\n        {...props}\n      >\n        {zoomRenderProps => {\n          if (chartComponent === WorldMapChart) {\n            return (\n              <EventsGeoRequest\n                api={api}\n                organization={organization}\n                yAxis={yAxis}\n                query={query}\n                orderby={orderby}\n                projects={projects}\n                period={period}\n                start={start}\n                end={end}\n                environments={environments}\n                referrer={props.referrer}\n              >\n                {({errored, loading, reloading, tableData}) =>\n                  chartImplementation({\n                    errored,\n                    loading,\n                    reloading,\n                    zoomRenderProps,\n                    tableData,\n                  })\n                }\n              </EventsGeoRequest>\n            );\n          }\n          return (\n            <EventsRequest\n              {...props}\n              api={api}\n              organization={organization}\n              period={period}\n              project={projects}\n              environment={environments}\n              start={start}\n              end={end}\n              interval={intervalVal}\n              query={query}\n              includePrevious={includePrevious}\n              currentSeriesNames={currentSeriesNames}\n              previousSeriesNames={previousSeriesNames}\n              yAxis={yAxis}\n              field={field}\n              orderby={orderby}\n              topEvents={topEvents}\n              confirmedQuery={confirmedQuery}\n              partial\n              // Cannot do interpolation when stacking series\n              withoutZerofill={withoutZerofill && !this.isStacked()}\n            >\n              {eventData => {\n                return chartImplementation({\n                  ...eventData,\n                  zoomRenderProps,\n                });\n              }}\n            </EventsRequest>\n          );\n        }}\n      </ChartZoom>\n    );\n  }\n}\n\nexport default EventsChart;\n","import {useEffect, useState} from 'react';\n\nimport {Client} from 'sentry/api';\nimport {DateString, OrganizationSummary} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport {TableData, TableDataWithTitle} from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {doDiscoverQuery} from 'sentry/utils/discover/genericDiscoverQuery';\n\ninterface ChildrenRenderProps {\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  tableData?: TableDataWithTitle[];\n}\n\nexport interface EventsGeoRequestProps {\n  api: Client;\n  children: (props: ChildrenRenderProps) => React.ReactElement;\n  end: DateString;\n  environments: string[];\n  organization: OrganizationSummary;\n  projects: number[];\n  query: string;\n  start: DateString;\n  yAxis: string | string[];\n  orderby?: string;\n  period?: string | null;\n  referrer?: string;\n}\n\nconst EventsGeoRequest = ({\n  api,\n  organization,\n  yAxis,\n  query,\n  orderby,\n  projects,\n  period,\n  start,\n  end,\n  environments,\n  referrer,\n  children,\n}: EventsGeoRequestProps) => {\n  const eventView = EventView.fromSavedQuery({\n    id: undefined,\n    name: '',\n    version: 2,\n    fields: Array.isArray(yAxis) ? yAxis : [yAxis],\n    query,\n    orderby: orderby ?? '',\n    projects,\n    range: period ?? '',\n    start: start ? getUtcDateString(start) : undefined,\n    end: end ? getUtcDateString(end) : undefined,\n    environment: environments,\n  });\n  const [results, setResults] = useState(undefined as ChildrenRenderProps['tableData']);\n  const [reloading, setReloading] = useState(false);\n  const [errored, setErrored] = useState(false);\n\n  useEffect(() => {\n    let mounted = true;\n    setErrored(false);\n\n    if (results) {\n      setReloading(true);\n    }\n\n    doDiscoverQuery<TableData>(api, `/organizations/${organization.slug}/events-geo/`, {\n      ...eventView.generateQueryStringObject(),\n      referrer,\n    })\n      .then(discoverQueryResults => {\n        if (mounted) {\n          setResults([discoverQueryResults[0]] as TableDataWithTitle[]);\n          setReloading(false);\n        }\n      })\n      .catch(() => {\n        if (mounted) {\n          setErrored(true);\n          setReloading(false);\n        }\n      });\n\n    return () => {\n      // Prevent setState leaking on unmounted component\n      mounted = false;\n    };\n  }, [query, yAxis, start, end, period, environments, projects, api]);\n\n  return children({\n    errored,\n    loading: !results && !errored,\n    reloading,\n    tableData: results,\n  });\n};\n\nexport default EventsGeoRequest;\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport Truncate from 'sentry/components/truncate';\nimport {SelectValue} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\ntype BaseProps = React.ComponentProps<typeof CompactSelect> & {\n  options: SelectValue<string>[];\n  title: string;\n  featureType?: 'alpha' | 'beta' | 'new';\n};\n\ntype SingleProps = BaseProps & {\n  onChange: (value: string) => void;\n  selected: string;\n  multiple?: false;\n};\ntype MultipleProps = BaseProps & {\n  multiple: true;\n  onChange: (value: string[]) => void;\n  selected: string[];\n};\n\nfunction OptionSelector({\n  options,\n  onChange,\n  selected,\n  title,\n  featureType,\n  multiple,\n  ...rest\n}: SingleProps | MultipleProps) {\n  const mappedOptions = useMemo(() => {\n    return options.map(opt => ({\n      ...opt,\n      label: <Truncate value={String(opt.label)} maxLength={60} expandDirection=\"left\" />,\n    }));\n  }, [options]);\n\n  function onValueChange(option) {\n    onChange(multiple ? option.map(o => o.value) : option.value);\n  }\n\n  function isOptionDisabled(option) {\n    return (\n      // Option is explicitly marked as disabled\n      option.disabled ||\n      // The user has reached the maximum number of selections (3), and the option hasn't\n      // yet been selected. These options should be disabled to visually indicate that the\n      // user has reached the max.\n      (multiple && selected.length === 3 && !selected.includes(option.value))\n    );\n  }\n\n  return (\n    <CompactSelect\n      size=\"sm\"\n      options={mappedOptions}\n      value={selected}\n      onChange={onValueChange}\n      isOptionDisabled={isOptionDisabled}\n      multiple={multiple}\n      triggerProps={{\n        borderless: true,\n        prefix: (\n          <Fragment>\n            {title}\n            {defined(featureType) ? <StyledFeatureBadge type={featureType} /> : null}\n          </Fragment>\n        ),\n      }}\n      placement=\"bottom right\"\n      {...rest}\n    />\n  );\n}\n\nconst StyledFeatureBadge = styled(FeatureBadge)`\n  margin-left: 0px;\n`;\n\nexport default OptionSelector;\n","import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {withTheme} from '@emotion/react';\nimport {Query} from 'history';\nimport isEqual from 'lodash/isEqual';\nimport memoize from 'lodash/memoize';\nimport partition from 'lodash/partition';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport {t} from 'sentry/locale';\nimport {DateString, Organization} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {escape} from 'sentry/utils';\nimport {getFormattedDate, getUtcDateString} from 'sentry/utils/dates';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport {Theme} from 'sentry/utils/theme';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype ReleaseMetaBasic = {\n  date: string;\n  version: string;\n};\n\ntype ReleaseConditions = {\n  end: DateString;\n  environment: Readonly<string[]>;\n  project: Readonly<number[]>;\n  start: DateString;\n  cursor?: string;\n  query?: string;\n  statsPeriod?: string | null;\n};\n\n// This is not an exported action/function because releases list uses AsyncComponent\n// and this is not re-used anywhere else afaict\nfunction getOrganizationReleases(\n  api: Client,\n  organization: Organization,\n  conditions: ReleaseConditions\n) {\n  const query = {};\n  Object.keys(conditions).forEach(key => {\n    let value = conditions[key];\n    if (value && (key === 'start' || key === 'end')) {\n      value = getUtcDateString(value);\n    }\n    if (value) {\n      query[key] = value;\n    }\n  });\n  api.clear();\n  return api.requestPromise(`/organizations/${organization.slug}/releases/stats/`, {\n    includeAllArgs: true,\n    method: 'GET',\n    query,\n  }) as Promise<[ReleaseMetaBasic[], any, ResponseMeta]>;\n}\n\ntype Props = WithRouterProps & {\n  api: Client;\n  children: (s: State) => React.ReactNode;\n  end: DateString;\n  environments: Readonly<string[]>;\n  organization: Organization;\n  projects: Readonly<number[]>;\n  start: DateString;\n  theme: Theme;\n  emphasizeReleases?: string[];\n  memoized?: boolean;\n  period?: string | null;\n  preserveQueryParams?: boolean;\n  query?: string;\n  queryExtra?: Query;\n  releases?: ReleaseMetaBasic[] | null;\n  tooltip?: Exclude<Parameters<typeof MarkLine>[0], undefined>['tooltip'];\n  utc?: boolean | null;\n};\n\ntype State = {\n  releaseSeries: Series[];\n  releases: ReleaseMetaBasic[] | null;\n};\n\nclass ReleaseSeries extends Component<Props, State> {\n  state: State = {\n    releases: null,\n    releaseSeries: [],\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    const {releases} = this.props;\n\n    if (releases) {\n      // No need to fetch releases if passed in from props\n      this.setReleasesWithSeries(releases);\n      return;\n    }\n\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !isEqual(prevProps.projects, this.props.projects) ||\n      !isEqual(prevProps.environments, this.props.environments) ||\n      !isEqual(prevProps.start, this.props.start) ||\n      !isEqual(prevProps.end, this.props.end) ||\n      !isEqual(prevProps.period, this.props.period) ||\n      !isEqual(prevProps.query, this.props.query)\n    ) {\n      this.fetchData();\n    } else if (!isEqual(prevProps.emphasizeReleases, this.props.emphasizeReleases)) {\n      this.setReleasesWithSeries(this.state.releases);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.props.api.clear();\n  }\n\n  _isMounted: boolean = false;\n\n  getOrganizationReleasesMemoized = memoize(\n    (api: Client, organization: Organization, conditions: ReleaseConditions) =>\n      getOrganizationReleases(api, organization, conditions),\n    (_, __, conditions) =>\n      Object.values(conditions)\n        .map(val => JSON.stringify(val))\n        .join('-')\n  );\n\n  async fetchData() {\n    const {\n      api,\n      organization,\n      projects,\n      environments,\n      period,\n      start,\n      end,\n      memoized,\n      query,\n    } = this.props;\n    const conditions: ReleaseConditions = {\n      start,\n      end,\n      project: projects,\n      environment: environments,\n      statsPeriod: period,\n      query,\n    };\n    let hasMore = true;\n    const releases: ReleaseMetaBasic[] = [];\n    while (hasMore) {\n      try {\n        const getReleases = memoized\n          ? this.getOrganizationReleasesMemoized\n          : getOrganizationReleases;\n        const [newReleases, , resp] = await getReleases(api, organization, conditions);\n        releases.push(...newReleases);\n        if (this._isMounted) {\n          this.setReleasesWithSeries(releases);\n        }\n\n        const pageLinks = resp?.getResponseHeader('Link');\n        if (pageLinks) {\n          const paginationObject = parseLinkHeader(pageLinks);\n          hasMore = paginationObject?.next?.results ?? false;\n          conditions.cursor = paginationObject.next.cursor;\n        } else {\n          hasMore = false;\n        }\n      } catch {\n        addErrorMessage(t('Error fetching releases'));\n        hasMore = false;\n      }\n    }\n  }\n\n  setReleasesWithSeries(releases) {\n    const {emphasizeReleases = []} = this.props;\n    const releaseSeries: Series[] = [];\n\n    if (emphasizeReleases.length) {\n      const [unemphasizedReleases, emphasizedReleases] = partition(\n        releases,\n        release => !emphasizeReleases.includes(release.version)\n      );\n      if (unemphasizedReleases.length) {\n        releaseSeries.push(this.getReleaseSeries(unemphasizedReleases, {type: 'dotted'}));\n      }\n      if (emphasizedReleases.length) {\n        releaseSeries.push(\n          this.getReleaseSeries(emphasizedReleases, {\n            opacity: 0.8,\n          })\n        );\n      }\n    } else {\n      releaseSeries.push(this.getReleaseSeries(releases));\n    }\n\n    this.setState({\n      releases,\n      releaseSeries,\n    });\n  }\n\n  getReleaseSeries = (releases, lineStyle = {}) => {\n    const {\n      organization,\n      router,\n      tooltip,\n      environments,\n      start,\n      end,\n      period,\n      preserveQueryParams,\n      queryExtra,\n      theme,\n    } = this.props;\n\n    const query = {...queryExtra};\n    if (organization.features.includes('global-views')) {\n      query.project = router.location.query.project;\n    }\n    if (preserveQueryParams) {\n      query.environment = [...environments];\n      query.start = start ? getUtcDateString(start) : undefined;\n      query.end = end ? getUtcDateString(end) : undefined;\n      query.statsPeriod = period || undefined;\n    }\n\n    const markLine = MarkLine({\n      animation: false,\n      lineStyle: {\n        color: theme.purple300,\n        opacity: 0.3,\n        type: 'solid',\n        ...lineStyle,\n      },\n      label: {\n        show: false,\n      },\n      data: releases.map(release => ({\n        xAxis: +new Date(release.date),\n        name: formatVersion(release.version, true),\n        value: formatVersion(release.version, true),\n        onClick: () => {\n          router.push({\n            pathname: `/organizations/${organization.slug}/releases/${release.version}/`,\n            query,\n          });\n        },\n        label: {\n          formatter: () => formatVersion(release.version, true),\n        },\n      })),\n      tooltip: tooltip || {\n        trigger: 'item',\n        formatter: ({data}: any) => {\n          // XXX using this.props here as this function does not get re-run\n          // unless projects are changed. Using a closure variable would result\n          // in stale values.\n          const time = getFormattedDate(data.value, 'MMM D, YYYY LT', {\n            local: !this.props.utc,\n          });\n          const version = escape(formatVersion(data.name, true));\n          return [\n            '<div class=\"tooltip-series\">',\n            `<div><span class=\"tooltip-label\"><strong>${t(\n              'Release'\n            )}</strong></span> ${version}</div>`,\n            '</div>',\n            '<div class=\"tooltip-date\">',\n            time,\n            '</div>',\n            '</div>',\n            '<div class=\"tooltip-arrow\"></div>',\n          ].join('');\n        },\n      },\n    });\n\n    return {\n      seriesName: 'Releases',\n      color: theme.purple200,\n      data: [],\n      markLine,\n    };\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return children({\n      releases: this.state.releases,\n      releaseSeries: this.state.releaseSeries,\n    });\n  }\n}\n\nexport default withRouter(withOrganization(withApi(withTheme(ReleaseSeries))));\n"],"names":["React","withTheme","isEqual","AreaChart","BarChart","ChartZoom","ErrorPanel","LineChart","ReleaseSeries","TransitionChart","TransparentLoadingMask","getInterval","processTableResults","RELEASE_LINES_THRESHOLD","WorldMapChart","IconWarning","t","defined","axisLabelFormatter","tooltipFormatter","aggregateMultiPlotType","aggregateOutputType","getEquation","isEquation","decodeList","EventsGeoRequest","EventsRequest","Chart","Component","seriesSelection","forceUpdate","legendChange","disableableSeries","props","selected","Object","keys","reduce","state","key","disableable","includes","setState","shouldComponentUpdate","nextProps","nextState","reloading","timeseriesData","releaseSeries","previousTimeseriesData","tableData","getChartComponent","showDaily","yAxis","chartComponent","length","Error","render","theme","loading","_loading","_reloading","zoomRenderProps","showLegend","legendOptions","chartOptions","chartOptionsProp","currentSeriesNames","previousSeriesNames","seriesTransformer","previousSeriesTransformer","colors","height","timeframe","topEvents","fromDiscover","data","title","tableSeries","seriesName","releasesLegend","hasOther","push","Array","isArray","releases","hideReleasesByDefault","markLine","legend","right","top","undefined","series","previousSeries","map","prev","chartColors","slice","charts","getColorPalette","chartOther","grid","left","bottom","seriesOptions","showSymbol","tooltip","trigger","truncate","valueFormatter","value","xAxis","min","start","max","end","axisLabel","color","chartLabel","formatter","animation","handleLegendSelectChanged","ThemedChart","EventsChart","isStacked","api","organization","period","utc","query","router","projects","environments","minutesThresholdToDisplaySeconds","disablePrevious","disableReleases","emphasizeReleases","currentSeriesName","currentName","previousSeriesName","previousName","field","interval","orderby","confirmedQuery","chartHeader","preserveReleaseQueryParams","releaseQueryExtra","usePageZoom","withoutZerofill","includePrevious","yAxisArray","yAxisSeriesNames","name","yAxisLabel","substr","intervalVal","chartImplementation","errored","results","seriesData","isValidElement","previousChart","chartProps","referrer","eventData","useEffect","useState","getUtcDateString","EventView","doDiscoverQuery","children","eventView","fromSavedQuery","id","version","fields","range","environment","setResults","setReloading","setErrored","mounted","slug","generateQueryStringObject","then","discoverQueryResults","catch","Fragment","useMemo","FeatureBadge","CompactSelect","Truncate","OptionSelector","options","onChange","featureType","multiple","rest","mappedOptions","opt","label","String","onValueChange","option","o","isOptionDisabled","disabled","borderless","prefix","StyledFeatureBadge","withRouter","memoize","partition","addErrorMessage","MarkLine","escape","getFormattedDate","formatVersion","parseLinkHeader","withApi","withOrganization","getOrganizationReleases","conditions","forEach","clear","requestPromise","includeAllArgs","method","_","__","values","val","JSON","stringify","join","lineStyle","preserveQueryParams","queryExtra","features","project","location","statsPeriod","purple300","opacity","type","show","release","Date","date","onClick","pathname","time","local","purple200","componentDidMount","_isMounted","setReleasesWithSeries","fetchData","componentDidUpdate","prevProps","componentWillUnmount","memoized","hasMore","getReleases","getOrganizationReleasesMemoized","newReleases","resp","pageLinks","getResponseHeader","paginationObject","next","cursor","unemphasizedReleases","emphasizedReleases","getReleaseSeries"],"sourceRoot":""}