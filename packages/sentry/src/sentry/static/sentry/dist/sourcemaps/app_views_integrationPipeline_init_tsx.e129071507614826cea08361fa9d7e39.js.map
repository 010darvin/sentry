{"version":3,"file":"chunks/app_views_integrationPipeline_init_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAEO,SAASK,sBAAT,CAAgCC,MAAhC,EAAgD;EACrDL,2EAAoB,CAACK,MAAD,CAApB;EACA;AACF;AACA;AACA;AACA;AACA;AACA;;EACEJ,6DAAa,CAACI,MAAD,CAAb,CATqD,CAWrD;EACA;;EACAN,+DAAA,CAAY;IAACQ,IAAI,EAAE;EAAP,CAAZ;EACAL,mEAAgB,CAACC,mEAAD,CAAhB;AACD;;;;;;;;;;;;;;;;;;;ACvBD;AAEA;AAEA;;;AAEA,SAASQ,SAAT,CAAmBC,YAAnB,EAAyCC,KAAzC,EAA8E;EAC5E,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBP,0DAAxB,CAAf;EACAD,iDAAM,CAAC,gEAAC,qFAAD;IAAc,YAAY,EAAEI,YAA5B;IAAA,GAA8CC;EAA9C,EAAD,EAA0DC,MAA1D,CAAN;AACD;;AAEM,SAASX,kBAAT,GAA8B;EACnC,MAAM;IAACI,IAAD;IAAOM;EAAP,IAAgBI,MAAM,CAACC,qBAA7B;EACAP,SAAS,CAACJ,IAAD,EAAOM,KAAP,CAAT;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdD;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;CAGA;AACA;;;;AACA,MAAMsB,OAAO,GAAG,iBAAhB;;AACA,MAAMC,gBAAgB,GAAG,MAAM;EAC7B,IAAIC,aAAa,GAAGpB,MAAM,CAACqB,YAAP,CAAoBC,OAApB,CAA4BJ,OAA5B,CAApB;;EACA,IAAI,CAACE,aAAL,EAAoB;IAClBA,aAAa,GAAGN,4DAAQ,EAAxB;IACAd,MAAM,CAACqB,YAAP,CAAoBE,OAApB,CAA4BL,OAA5B,EAAqCE,aAArC;EACD;;EACD,OAAOA,aAAP;AACD,CAPD;;AASA,MAAMI,kBAAkB,GAAG,UAA3B;;AACA,MAAMC,iBAAiB,GAAIC,GAAD,IAAiBF,kBAAkB,CAACG,IAAnB,CAAwBD,GAAxB,CAA3C;;AAwBe,MAAME,uBAAN,SAAsC1B,4CAAtC,CAA8D;EAAA;IAAA;;IAAA;;IAAA,iGAC5D;MACb2B,aAAa,EAAE,KAAKjC,KAAL,CAAWiC,aADb;MAEbC,MAAM,EAAE,KAAKlC,KAAL,CAAWkC,MAFN;MAGbV,aAAa,2BAAE,KAAKxB,KAAL,CAAWwB,aAAb,yEAA8BD,gBAAgB,EAH9C;MAIbY,UAAU,EAAE,CAAC,CAAC,KAAKnC,KAAL,CAAWwB;IAJZ,CAD4D;;IAAA,wGA4C3DY,CAAD,IAAyB;MACtC,KAAKC,QAAL,CAAc;QAACC,UAAU,EAAE;MAAb,CAAd;MACAF,CAAC,CAACG,cAAF,GAFsC,CAGtC;;MACA,MAAM;QAACN,aAAD;QAAgBC,MAAhB;QAAwBV;MAAxB,IAAyC,KAAKgB,KAApD;MACA,MAAMC,IAAI,GAAG;QACXR,aADW;QAEXC,MAFW;QAGXV;MAHW,CAAb;MAKAb,kFAAiB,CAACM,iDAAC,CAAC,kBAAD,CAAF,CAAjB;MACA,MAAM;QACJyB,QAAQ,EAAE;UAACC;QAAD;MADN,IAEFvC,MAFJ,CAXsC,CActC;MACA;MACA;;MACA,MAAMwC,MAAM,GAAI,GAAED,MAAO,iCAAgClC,mDAAA,CAAagC,IAAb,CAAmB,EAA5E;MACArC,MAAM,CAACsC,QAAP,CAAgBI,MAAhB,CAAuBF,MAAvB;IACD,CA/D0E;;IAAA,iHAiElDG,KAAD,IAAmB;MACzC;MACA,IAAIC,kBAAkB,GAAG,EAAzB;;MACA,IAAI,CAACD,KAAL,EAAY;QACVC,kBAAkB,GAAG/B,iDAAC,CAAC,yBAAD,CAAtB;MACD,CAFD,MAEO,IAAI,CAACY,iBAAiB,CAACkB,KAAD,CAAtB,EAA+B;QACpCC,kBAAkB,GAAG/B,iDAAC,CAAC,wBAAD,CAAtB;MACD;;MACD,KAAKoB,QAAL,CAAc;QAACW;MAAD,CAAd;IACD,CA1E0E;;IAAA,2GA4ExDf,aAAD,IAA2B;MAC3C,KAAKgB,0BAAL,CAAgC,eAAhC,EAD2C,CAE3C;;MACA,IAAIpB,iBAAiB,CAACI,aAAD,CAArB,EAAsC;QACpC,KAAKI,QAAL,CAAc;UAACW,kBAAkB,EAAE;QAArB,CAAd;MACD;;MACD,KAAKX,QAAL,CAAc;QAACJ;MAAD,CAAd;IACD,CAnF0E;;IAAA,8GAqFrDC,MAAD,IAAoB;MACvC,KAAKe,0BAAL,CAAgC,QAAhC;MACA,KAAKZ,QAAL,CAAc;QAACH;MAAD,CAAd;IACD,CAxF0E;;IAAA,kHA0FjDV,aAAD,IAA2B;MAClD,KAAKyB,0BAAL,CAAgC,eAAhC;MACAzB,aAAa,GAAGA,aAAa,CAAC0B,IAAd,EAAhB;MACA,KAAKb,QAAL,CAAc;QAACb;MAAD,CAAd;IACD,CA9F0E;;IAAA,kHAgGlD,MAAM;MAC7B,KAAKa,QAAL,CAAc;QAACF,UAAU,EAAE;MAAb,CAAd;MACAhB,wFAAyB,CAAC,+CAAD,EAAkD;QACzEgC,WAAW,EAAE,YAD4D;QAEzEC,gBAAgB,EAAE,aAFuD;QAGzEC,UAAU,EAAE,YAH6D;QAIzEC,YAAY,EAAE,KAAKtD,KAAL,CAAWsD;MAJgD,CAAlD,CAAzB;IAMD,CAxG0E;;IAAA,sHAgH9C9C,sDAAQ,CAAE+C,SAAD,IAAuB;MAC3DpC,wFAAyB,CAAC,+CAAD,EAAkD;QACzEgC,WAAW,EAAE,YAD4D;QAEzEC,gBAAgB,EAAE,aAFuD;QAGzEC,UAAU,EAAEE,SAH6D;QAIzED,YAAY,EAAE,KAAKtD,KAAL,CAAWsD;MAJgD,CAAlD,CAAzB;IAMD,CAPoC,EAOlC,GAPkC,CAhHsC;;IAAA,mHAyHjD,MAAM;MAC9BnC,wFAAyB,CAAC,0CAAD,EAA6C;QACpEgC,WAAW,EAAE,YADuD;QAEpEC,gBAAgB,EAAE,aAFkD;QAGpEE,YAAY,EAAE,KAAKtD,KAAL,CAAWsD;MAH2C,CAA7C,CAAzB;IAKD,CA/H0E;EAAA;;EAQ3EE,iBAAiB,GAAG;IAClB;IACA,MAAM;MAACC;IAAD,IAAU,KAAKzD,KAArB;;IACA,IAAIyD,KAAJ,EAAW;MACT/C,gFAAe,CAAC+C,KAAD,EAAQ;QAACC,QAAQ,EAAE;MAAX,CAAR,CAAf;IACD;EACF;;EAEc,IAAXC,WAAW,GAAG;IAChB,MAAM;MAACzB,MAAD;MAASD;IAAT,IAA0B,KAAKjC,KAArC;IACA,MAAM;MAACwB;IAAD,IAAkB,KAAKgB,KAA7B;IACA,OAAO;MACLhB,aADK;MAELU,MAFK;MAGLD;IAHK,CAAP;EAKD;;EAEoB,IAAjB2B,iBAAiB,GAAG;IACtB;IACA;IACA,MAAM;MAACC,qBAAD;MAAwBC,WAAxB;MAAqCC;IAArC,IAAkD,KAAK/D,KAA7D,CAHsB,CAItB;;IACA,MAAMwB,aAAa,GAAGD,gBAAgB,EAAtC;IACA,MAAMyC,KAAK,GAAGvD,mDAAA,CAAa;MACzBwD,WAAW,EAAEH,WADY;MAEzBC,SAFyB;MAGzBG,gBAAgB,EAAE1C;IAHO,CAAb,CAAd;IAKA,OAAQ,GAAEqC,qBAAsB,IAAGG,KAAM,EAAzC;EACD;;EAEgB,IAAbG,aAAa,GAAG;IAClB,OAAO,KAAKnE,KAAL,CAAWoE,UAAX,CAAsBC,GAAtB,CAA0BnC,MAAM,KAAK;MAACa,KAAK,EAAEb,MAAR;MAAgBoC,KAAK,EAAEpC;IAAvB,CAAL,CAAhC,CAAP;EACD;;EAgEY,IAATqC,SAAS,GAAG;IACd,MAAM;MAACtC,aAAD;MAAgBC,MAAhB;MAAwBV;IAAxB,IAAyC,KAAKgB,KAApD;IACA,OAAO,CAAC,CAACN,MAAF,IAAYL,iBAAiB,CAACI,aAAa,IAAI,EAAlB,CAA7B,IAAsD,CAAC,CAACT,aAA/D;EACD,CA7G0E,CA+G3E;;;EAkBA7B,MAAM,GAAG;IACP,MAAM;MAAC6E;IAAD,IAAsB,KAAKxE,KAAjC;IACA,MAAM;MACJiC,aADI;MAEJC,MAFI;MAGJc,kBAHI;MAIJV,UAJI;MAKJd,aALI;MAMJW;IANI,IAOF,KAAKK,KAPT;IAQA,OACE,kEAAC,2CAAD;MAAA,WACE,iEAAC,mEAAD;QAAgB,OAAO,EAAC;MAAxB,EADF,EAEE,kEAAC,UAAD;QAAY,MAAM,EAAC,iBAAnB;QAAqC,mBAAmB,EAAEgC,iBAA1D;QAAA,WACE,kEAAC,wEAAD;UAAA,WACE;YAAA,UAAKvD,iDAAC,CAAC,6BAAD;UAAN,EADF,EAEE,iEAAC,YAAD;YACE,QAAQ,EAAC,SADX;YAEE,OAAO,EAAE,KAAKwD,uBAFhB;YAGE,QAAQ,MAHV;YAIE,IAAI,EAAE,KAAKb,iBAJb;YAAA,UAMG3C,iDAAC,CAAC,WAAD;UANJ,EAFF,EAUG,CAACkB,UAAD,IACC,kEAAC,2CAAD;YAAA,WACE;cAAA,UACGlB,iDAAC,CACA,oHADA;YADJ,EADF,EAME,iEAAC,wEAAD;cAAQ,IAAI,EAAC,YAAb;cAA0B,OAAO,EAAE,KAAKyD,sBAAxC;cAAA,UACGzD,iDAAC,CAAC,wBAAD;YADJ,EANF;UAAA,EAXJ;QAAA,EADF,EAwBGkB,UAAU,GACT,kEAAC,wEAAD;UAAA,WACE;YAAA,UAAKlB,iDAAC,CAAC,6BAAD;UAAN,EADF,EAEE,iEAAC,yEAAD;YACE,IAAI,EAAC,eADP;YAEE,KAAK,EAAEgB,aAFT;YAGE,QAAQ,EAAE,KAAK0C,eAHjB;YAIE,MAAM,EAAE,KAAKC,qBAJf;YAKE,KAAK,EAAE5B,kBALT;YAME,MAAM,EAAE,KANV;YAOE,OAAO,MAPT;YAQE,KAAK,EAAE/B,iDAAC,CAAC,oBAAD,CARV;YASE,iBAAiB,MATnB;YAUE,IAAI,EAAEA,iDAAC,CACL,yEADK;UAVT,EAFF,EAgBE,iEAAC,2EAAD;YACE,IAAI,EAAC,QADP;YAEE,KAAK,EAAEiB,MAFT;YAGE,QAAQ,EAAE,KAAK2C,kBAHjB;YAIE,OAAO,EAAE,KAAKV,aAJhB;YAKE,UAAU,EAAE,KALd;YAME,MAAM,EAAE,KANV;YAOE,OAAO,MAPT;YAQE,KAAK,EAAElD,iDAAC,CAAC,YAAD,CARV;YASE,iBAAiB,MATnB;YAUE,IAAI,EAAEA,iDAAC,CACL,yEADK;UAVT,EAhBF,EA8BE,iEAAC,yEAAD;YACE,IAAI,EAAC,eADP;YAEE,KAAK,EAAEO,aAFT;YAGE,QAAQ,EAAE,KAAKsD,sBAHjB;YAIE,MAAM,EAAE,KAJV;YAKE,OAAO,MALT;YAME,KAAK,EAAEtD,aAAa,GAAG,EAAH,GAAQP,iDAAC,CAAC,sBAAD,CAN/B;YAOE,KAAK,EAAEA,iDAAC,CAAC,aAAD,CAPV;YAQE,iBAAiB,MARnB;YASE,IAAI,EAAEA,iDAAC,CACL,mFADK;UATT,EA9BF;QAAA,EADS,GA8CT,iEAAC,2CAAD,KAtEJ;MAAA,EAFF,EA2EE,iEAAC,sEAAD;QACE,UAAU,EAAEA,iDAAC,CAAC,MAAD,CADf;QAEE,OAAO,EAAE,KAAK8D,YAFhB;QAGE,QAAQ,EAAEzC,UAAU,IAAI,CAAC,KAAKiC;MAHhC,EA3EF;IAAA,EADF;EAmFD;;AA9N0E;AAAxDvC;;AAiOrB,MAAMgD,UAAU,GAAG,8EAAOjE,+DAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAhB;;AAIA,MAAMkE,YAAY,GAAG,8EAAOrE,wEAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7RA;AAGA;AACA;AACA;AACA;AAEA;AACA;;;AASe,SAAS6E,uBAAT,OAGL;EAAA,IAHsC;IAC9CC,sBAD8C;IAE9CC;EAF8C,CAGtC;EACR,MAAMC,WAAW,GACf,0EADF;EAEA,OACE,iEAAC,2CAAD;IAAA,WACE,gEAAC,kEAAD;MAAgB,OAAO,EAAEA;IAAzB,EADF,EAEE,iEAAC,OAAD;MAAA,WACE;QAAA,WACE,gEAAC,eAAD;UAAiB,SAAS,MAA1B;UAA2B,KAAK,EAAC;QAAjC,EADF,EAEE;UAAA,UACGJ,iDAAE,CACD,kCADC,EAED,mCAFC,EAGDG,YAHC;QADL,EAFF;MAAA,EADF,EAWE;QAAA,WACE,gEAAC,aAAD;UAAe,KAAK,EAAC;QAArB,EADF,EAEE;UAAA,UACGH,iDAAE,CACD,8BADC,EAED,+BAFC,EAGDE,sBAAsB,CAACG,MAHtB;QADL,EAFF,EASE,gEAAC,eAAD;UAAA,UACGN,kDAAG,CAAC,iCAAD,EAAoC;YACtCO,IAAI,EAAE,gEAAC,4EAAD;cAAc,IAAI,EAAEF,WAAW,GAAG;YAAlC;UADgC,CAApC;QADN,EATF;MAAA,EAXF,EA0BE,gEAAC,WAAD;QAAA,UAAcF,sBAAsB,CAACrB,GAAvB,CAA2B0B,aAA3B;MAAd,EA1BF;IAAA,EAFF,EA8BE,gEAAC,qEAAD;MAAmB,UAAU,EAAE9E,gDAAC,CAAC,cAAD,CAAhC;MAAkD,IAAI,EAAC;IAAvD,EA9BF;EAAA,EADF;AAkCD;AAxCuBwE;;AA0CxB,SAASM,aAAT,CAAuBC,WAAvB,EAAiD;EAC/C,OACE,iEAAC,SAAD;IAAA,WACE;MAAA,UAAOA,WAAW,CAACtG;IAAnB,EADF,EAEE,gEAAC,KAAD;MAAA,UAAQsG,WAAW,CAACvC;IAApB,EAFF;EAAA,GAAgBuC,WAAW,CAACtG,IAA5B,CADF;AAMD;;AAPQqG;;AAST,MAAME,OAAO,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAb;;AAIA,MAAMC,SAAS,GAAG,8EAAOd,+DAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAf;;AAKA,MAAMe,KAAK,GAAG,8EAAO,MAAP;EAAA;AAAA,MAAH,WACAC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,OADb,yBAAX;;AAIA,MAAMC,WAAW,GAAG,8EAAOpB,2DAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAjB;;AAKA,MAAMqB,eAAe,GAAG,8EAAO,GAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAArB;;AAIA,MAAMC,eAAe,GAAG,8EAAOpB,uDAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAArB;;AAOA,MAAMqB,aAAa,GAAG,8EAAOpB,qDAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,MAAMgC,sBAAsB,GAAG,EAA/B;;AAaA,MAAMC,QAAQ,GAAIC,IAAD,IAA0BA,IAAI,CAACC,YAAhD;;AAEe,MAAMC,uBAAN,SAAsCpH,4CAAtC,CAA8D;EAC3EqH,WAAW,CAAC3H,KAAD,EAAe;IACxB,MAAMA,KAAN;;IADwB,iGAIX;MACbsC,UAAU,EAAE;IADC,CAJW;;IAAA,iGAQlB,IAAI2E,qEAAJ,EARkB;;IAAA,wGAyCX,MAAM;MACnB,KAAK5E,QAAL,CAAc;QAACC,UAAU,EAAE;MAAb,CAAd;IACD,CA3CyB;;IAAA,wGA6CX,MAAM;MACnB,MAAMsF,QAAQ,GAAG,CAAC,KAAKC,gBAAvB;MACA,KAAKC,eAAL,CAAqBC,OAArB,CAA6BC,MAAM,IAAI;QACrC,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,MAAM,CAACP,YAA3B,EAAyCG,QAAzC,EAAmD;UAACO,KAAK,EAAE;QAAR,CAAnD;MACD,CAFD;IAGD,CAlDyB;;IAAA,6GAoDN,MAAM;MACxB,MAAMC,KAAK,GAAG,KAAKN,eAAL,CAAqBjC,MAAnC;MACA,OACE;QAAA,UACGL,kDAAE,CACD,oDADC,EAED,oDAFC,EAGD4C,KAHC;MADL,EADF;IASD,CA/DyB;;IAAA,+GAiEJ,MAAM;MAC1B,MAAMA,KAAK,GAAG,KAAKC,YAAnB;MACA,MAAMC,IAAI,GACRF,KAAK,GAAGd,sBAAR,GACIrG,iDAAC,CAAC,+BAAD,EAAkCmH,KAAlC,CADL,GAEInH,iDAAC,CAAC,6BAAD,CAHP;MAIA,OACE,kEAAC,cAAD;QAAA,WACE,iEAAC,sBAAD,KADF,EAEE;UAAA,UAAKA,iDAAC,CAAC,+BAAD,EAAkCmH,KAAlC;QAAN,EAFF,EAGGE,IAHH;MAAA,EADF;IAOD,CA9EyB;;IAAA,sGAgFb,MAAM;MACjB,MAAM;QAAC9D;MAAD,IAAsB,KAAKxE,KAAjC;;MAEA,MAAMuI,UAAU,GACd,kEAAC,iBAAD;QAAA,WACGtH,iDAAC,CAAC,kBAAD,CADJ,EAEE,iEAAC,YAAD;UAAA,UACE,iEAAC,iDAAD;YAAA,UACG,MACC,iEAAC,kEAAD;cACE,KAAK,EAAE,KAAK4G,gBAAL,GAAwB5G,iDAAC,CAAC,aAAD,CAAzB,GAA2CA,iDAAC,CAAC,YAAD,CADrD;cAEE,QAAQ,EAAC,MAFX;cAAA,UAIE,iEAAC,YAAD;gBACE,IAAI,EAAC,IADP;gBAEE,IAAI,EAAC,WAFP;gBAGE,MAAM,EAAE,KAAKuH,YAHf;gBAIE,QAAQ,EAAE,KAAKX;cAJjB;YAJF;UAFJ;QADF,EAFF;MAAA,EADF;;MAuBA,MAAMY,UAA0B,GAAG;QACjCC,MAAM,EAAE,KAAKZ,eAAL,CAAqBzD,GAArB,CAAyBmD,IAAI,KAAK;UACxC9H,IAAI,EAAE8H,IAAI,CAACC,YAD6B;UAExCkB,IAAI,EAAE,SAFkC;UAGxCC,QAAQ,EAAE,KAH8B;UAIxCtE,KAAK,EAAEiD,QAAQ,CAACC,IAAD,CAJyB;UAKxCqB,UAAU,EAAE;QAL4B,CAAL,CAA7B;MADyB,CAAnC;MAUA,OACE,kEAAC,8DAAD;QAAM,MAAM,EAAC,iBAAb;QAA+B,mBAAmB,EAAErE,iBAApD;QAAA,WACE,kEAAC,uEAAD;UAAA,WACE,iEAAC,MAAD;YAAA,UAAS,KAAKsE,iBAAL;UAAT,EADF,EAEG7H,iDAAC,CAAC,uEAAD,CAFJ,EAGE,iEAAC,UAAD;YACE,WAAW,EAAE,KAAK0C,WADpB;YAEE,KAAK,EAAE,KAAKsE,KAFd;YAGE,WAAW,EAAC,+BAHd;YAIE,UAAU,MAJZ;YAKE,yBAAyB,MAL3B;YAAA,UAOE,iEAAC,wEAAD;cAAU,YAAY,EAAE,MAAMM,UAA9B;cAA0C,KAAK,EAAE,CAACE,UAAD;YAAjD;UAPF,EAHF;QAAA,EADF,EAcE,iEAAC,2CAAD,KAdF;MAAA,EADF;IAkBD,CAtIyB;;IAExB5B,qDAAc,CAAC,IAAD,EAAO;MAACgB,gBAAgB,EAAEjB,2CAAQA;IAA3B,CAAP,CAAd;EACD;;EAOc,IAAXjD,WAAW,GAAG;IAChB,MAAM;MAACmE;IAAD,IAAoB,KAAK9H,KAA/B;IACA,MAAM2D,WAAW,GAAGmE,eAAe,CAACnB,MAAhB,CAAuB,CAACoC,KAAD,EAAQvB,IAAR,KAAiB;MAC1DuB,KAAK,CAACvB,IAAI,CAACC,YAAN,CAAL,GAA2B,IAA3B;MACA,OAAOsB,KAAP;IACD,CAHmB,EAGjB,EAHiB,CAApB;IAIA,OAAOpF,WAAP;EACD;;EAEkB,IAAfmE,eAAe,GAAG;IACpB,OAAO,KAAK9H,KAAL,CAAW8H,eAAX,CAA2BkB,IAA3B,CAAgC,CAACC,CAAD,EAAIC,CAAJ,KACrC3B,QAAQ,CAAC0B,CAAD,CAAR,CAAYE,WAAZ,KAA4B5B,QAAQ,CAAC2B,CAAD,CAAR,CAAYC,WAAZ,EAA5B,GAAwD,CAAC,CAAzD,GAA6D,CADxD,CAAP;EAGD;;EAEe,IAAZd,YAAY,GAAG;IACjB,MAAM5F,IAAI,GAAG,KAAKwF,KAAL,CAAWmB,kBAAX,EAAb;IACA,OAAOzC,oDAAM,CAAClE,IAAD,EAAO,CAAC4G,GAAD,EAAcC,GAAd,KAAgCA,GAAG,GAAGD,GAAG,GAAG,CAAT,GAAaA,GAAvD,EAA6D,CAA7D,CAAb;EACD;;EAEmB,IAAhBxB,gBAAgB,GAAG;IACrB;IACA;IACA,OAAO0B,MAAM,CAACC,MAAP,CAAc,KAAKvB,KAAL,CAAWwB,OAAX,EAAd,EAAoCC,KAApC,CAA0CJ,GAAG,IAAIA,GAAjD,CAAP;EACD;;EAEa,IAAVb,UAAU,GAAG;IACf,MAAMhG,IAAI,GAAG,KAAKwF,KAAL,CAAWmB,kBAAX,EAAb;IACA,OAAOG,MAAM,CAACI,OAAP,CAAelH,IAAf,EAAqB4B,GAArB,CAAyB;MAAA,IAAC,CAAC3E,IAAD,EAAOqD,KAAP,CAAD;MAAA,OAAoB;QAACrD,IAAD;QAAOqD;MAAP,CAApB;IAAA,CAAzB,CAAP;EACD;;EAiGDpD,MAAM,GAAG;IACP,OACE,kEAAC,2CAAD;MAAA,WACE,iEAAC,mEAAD;QAAgB,OAAO,EAAC;MAAxB,EADF,EAEE,iEAAC,OAAD;QAAA,UACG,KAAK6C,KAAL,CAAWF,UAAX,GAAwB,KAAKsH,mBAAL,EAAxB,GAAqD,KAAKC,UAAL;MADxD,EAFF,EAKE,iEAAC,iDAAD;QAAA,UACG,MACC,iEAAC,sEAAD;UACE,SAAS,EAAE;YACTC,MAAM,EAAE,+BADC;YAETC,MAAM,EAAE,MAFC;YAGTC,QAAQ,EAAE,KAAKjF;UAHN,CADb;UAME,UAAU,EAAE,KAAK0D,UANnB;UAOE,UAAU,EAAExH,iDAAC,CAAC,cAAD,CAPf;UAQE,QAAQ,EACN,KAAKgH,KAAL,CAAWgC,OAAX,IAAsB,KAAKhC,KAAL,CAAWiC,QAAjC,IAA6C,KAAK1H,KAAL,CAAWF;QAT5D;MAFJ,EALF;IAAA,EADF;EAwBD;;AAlK0E;AAAxDoF;;AAqKrB,MAAMzB,OAAO,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAb,EAIA;;;AACA,MAAMkE,UAAU,GAAG,8EAAOpD,oEAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAhB;;AAIA,MAAMqD,MAAM,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAZ;;AAKA,MAAMC,cAAc,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAApB;;AAKA,MAAMC,sBAAsB,GAAG,8EAAOpD,2EAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAA5B;;AAIA,MAAMqD,YAAY,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAlB;;AAIA,MAAMC,YAAY,GAAG,8EAAOpD,uEAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAlB,EAIA;;;AACA,MAAMqD,iBAAiB,GAAG,8EAAOtD,kEAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzOA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;AAIe,MAAM0D,sBAAN,SAAqCvK,4CAArC,CAAsD;EAAA;IAAA;;IAAA,iGAC3D,IAAI2G,qEAAJ,EAD2D;;IAAA,wGAGnD7E,CAAD,IAAyB;MACtCA,CAAC,CAACG,cAAF;MACA,MAAME,IAAI,GAAG,KAAKwF,KAAL,CAAWwB,OAAX,EAAb;MACA9I,kFAAiB,CAACM,iDAAC,CAAC,kBAAD,CAAF,CAAjB;MACA,KAAKgH,KAAL,CAAW6C,aAAX;MACA,MAAM;QACJpI,QAAQ,EAAE;UAACC;QAAD;MADN,IAEFvC,MAFJ,CALsC,CAQtC;MACA;MACA;;MACA,MAAMwC,MAAM,GAAI,GAAED,MAAO,iCAAgClC,mDAAA,CAAagC,IAAb,CAAmB,EAA5E;MACArC,MAAM,CAACsC,QAAP,CAAgBI,MAAhB,CAAuBF,MAAvB;IACD,CAhBkE;EAAA;;EAkBnEjD,MAAM,GAAG;IACP,MAAM;MAACoL;IAAD,IAAa,KAAK/K,KAAxB,CADO,CAEP;;IACA,OACE,kEAAC,2CAAD;MAAA,WACE,iEAAC,mEAAD;QAAgB,OAAO,EAAC;MAAxB,EADF,EAEE,kEAAC,UAAD;QAAY,MAAM,EAAC,iBAAnB;QAAA,WACE,iEAAC,2CAAD,KADF,EAEE,kEAAC,wEAAD;UAAA,WACE;YAAA,UAAKiB,iDAAC,CAAC,uCAAD;UAAN,EADF,EAEE,kEAAC,oEAAD;YAAM,KAAK,EAAE,KAAKgH,KAAlB;YAAyB,UAAU,MAAnC;YAAA,WACE,iEAAC,gCAAD;cACE,WAAW,EAAEhH,iDAAC,CAAC,kBAAD,CADhB;cAEE,IAAI,EAAC,WAFP;cAGE,QAAQ,EAAE8J,QAHZ;cAIE,MAAM,EAAE,KAJV;cAKE,eAAe,MALjB;cAME,wBAAwB,MAN1B;cAOE,OAAO;YAPT,EADF,EAUE,iEAAC,+DAAD;cAAO,IAAI,EAAC,MAAZ;cAAA,UACG9J,iDAAC,CAAC,0DAAD;YADJ,EAVF;UAAA,EAFF;QAAA,EAFF;MAAA,EAFF,EAsBE,iEAAC,iDAAD;QAAA,UACG,MACC,iEAAC,sEAAD;UACE,UAAU,EAAEA,iDAAC,CAAC,MAAD,CADf;UAEE,OAAO,EAAE,KAAK8D,YAFhB;UAGE,QAAQ,EAAE,KAAKkD,KAAL,CAAWiC,QAAX,IAAuB,CAAC,KAAKjC,KAAL,CAAW+C,QAAX,CAAoB,WAApB;QAHpC;MAFJ,EAtBF;IAAA,EADF;EAkCD;;AAvDkE;AAAhDH;;AA0DrB,MAAM7F,UAAU,GAAG,8EAAOjE,+DAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAhB;;AAIA,MAAMkK,gCAAgC,GAAG,8EAAON,0FAAP;EAAA;AAAA,MAAH,iBACrBC,gEAAK,CAAC,CAAD,CADgB,2BAAtC;;;;;;;;;;;;;;;;;;;;ACjFA;AAEA;;;AASe,SAASxJ,iBAAT,OAKY;EAAA,IALe;IACxC8J,UADwC;IAExCzC,UAFwC;IAGxC0C,SAHwC;IAIxC,GAAGC;EAJqC,CAKf;;EACzB;AACF;AACA;AACA;AACA;EACE,OACE,iEAAC,MAAD;IAAQ,gBAAa,wBAArB;IAAA,GAAkDD,SAAlD;IAAA,WACG1C,UADH,aACGA,UADH,uBACGA,UAAU,CAAEpE,GAAZ,CAAgBgH,KAAK,IAAI;MACxB,OAAO;QAAO,IAAI,EAAC,QAAZ;QAAA,GAA0CA;MAA1C,GAA0BA,KAAK,CAAC3L,IAAhC,CAAP;IACD,CAFA,CADH,EAIE,gEAAC,wEAAD;MAAQ,QAAQ,EAAC,SAAjB;MAA2B,IAAI,EAAC,QAAhC;MAAyC,IAAI,EAAC,IAA9C;MAAA,GAAuD0L,IAAvD;MAAA,UACGF;IADH,EAJF;EAAA,EADF;AAUD;AArBuB9J;;AAuBxB;AACA,MAAMkK,MAAM,GAAG,8EAAO,MAAP;EAAA;AAAA,MAAH,2GAOUlF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQkF,cAPvB,4BAQcnF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQmF,WAR3B,eASCZ,+DAAK,CAAC,CAAD,CATN,yBAAZ;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;;;AAEe,SAASvJ,cAAT,OAAsD;EAAA,IAA9B;IAACqK;EAAD,CAA8B;EACnE,OACE,iEAAC,MAAD;IAAA,WACE,gEAAC,gBAAD,KADF,EAEE,gEAAC,wEAAD;MAAQ,QAAQ,MAAhB;MAAiB,IAAI,EAAEA,OAAvB;MAAgC,IAAI,EAAC,IAArC;MAAA,UACGzK,gDAAC,CAAC,YAAD;IADJ,EAFF;EAAA,EADF;AAQD;AATuBI;;AAWxB,MAAM+I,MAAM,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,oGAOCQ,+DAAK,CAAC,CAAD,CAPN,kBAQIxE,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQsF,UARjB,+BASiBvF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQmF,WAT9B,yBAAZ;;AAYA,MAAMI,gBAAgB,GAAG,8EAAOH,oEAAP;EAAA;AAAA,MAAH,mCAGXrF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQwF,SAHF,yBAAtB;;;;;;;;;;;;;;;;;;AC9BA;AAEA;AAEO,SAASC,IAAT,GAAgB;EACrBvM,+FAAsB,CAACa,MAAM,CAAC2L,aAAR,CAAtB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACND;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMI,cAA2D,GAAG;EAClEC,sBAAsB,EAAE,CAACvB,+DAAD,EAAyB,2BAAzB,CAD0C;EAElEwB,uBAAuB,EAAE,CAAC3E,gEAAD,EAA0B,2BAA1B,CAFyC;EAGlE4E,uBAAuB,EAAE,CAACtK,gEAAD,EAA0B,kCAA1B,CAHyC;EAIlEuK,uBAAuB,EAAE,CAAC9G,gEAAD,EAA0B,0BAA1B;AAJyC,CAApE;;AAYA;AACA;AACA;AACA,SAAS5F,YAAT,OAAuD;EAAA,IAAjC;IAACE,YAAD;IAAe,GAAGC;EAAlB,CAAiC;EACrD,MAAMwM,OAAO,GAAGL,cAAc,CAACpM,YAAD,CAA9B;;EAEA,IAAI,CAACyM,OAAL,EAAc;IACZ,MAAM,IAAIrG,KAAJ,CAAW,yBAAwBpG,YAAa,EAAhD,CAAN;EACD;;EAED,MAAM,CAACO,SAAD,EAAYmM,KAAZ,IAAqBD,OAA3B,CAPqD,CASrD;;EACAR,gDAAS,CAAC,MAAM,MAAM9L,QAAQ,CAACuM,KAAT,GAAiBA,KAAvB,CAAP,EAAsC,CAACA,KAAD,CAAtC,CAAT;EAEA,OACE,iEAAC,+EAAD;IAAA,WACE,gEAAC,oEAAD;MAAY,SAAS,EAAC;IAAtB,EADF,EAEE,gEAAC,SAAD,OAAezM;IAAf,EAFF;EAAA,EADF;AAMD;;AAlBQH;AAoBT,iEAAeA,YAAf;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,SAAS;AACpB;AACA,WAAW,UAAU;AACrB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;;;;ACtBA,kBAAkB,mBAAO,CAAC,8DAAgB;AAC1C,eAAe,mBAAO,CAAC,wDAAa;AACpC,mBAAmB,mBAAO,CAAC,gEAAiB;AAC5C,iBAAiB,mBAAO,CAAC,4DAAe;AACxC,cAAc,mBAAO,CAAC,oDAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,cAAc,wBAAwB;AACtC;AACA;AACA,IAAI,IAAI;AACR,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA","sources":["webpack:///./app/bootstrap/initializePipelineView.tsx","webpack:///./app/bootstrap/renderPipelineView.tsx","webpack:///./app/views/integrationPipeline/awsLambdaCloudformation.tsx","webpack:///./app/views/integrationPipeline/awsLambdaFailureDetails.tsx","webpack:///./app/views/integrationPipeline/awsLambdaFunctionSelect.tsx","webpack:///./app/views/integrationPipeline/awsLambdaProjectSelect.tsx","webpack:///./app/views/integrationPipeline/components/footerWithButtons.tsx","webpack:///./app/views/integrationPipeline/components/headerWithHelp.tsx","webpack:///./app/views/integrationPipeline/init.tsx","webpack:///./app/views/integrationPipeline/pipelineView.tsx","webpack:///../node_modules/lodash/_baseReduce.js","webpack:///../node_modules/lodash/reduce.js"],"sourcesContent":["import {Config} from 'sentry/types';\nimport {metric} from 'sentry/utils/analytics';\n\nimport {commonInitialization} from './commonInitialization';\nimport {initializeSdk} from './initializeSdk';\nimport {renderOnDomReady} from './renderOnDomReady';\nimport {renderPipelineView} from './renderPipelineView';\n\nexport function initializePipelineView(config: Config) {\n  commonInitialization(config);\n  /**\n   * XXX: Note we do not include routingInstrumentation because importing\n   * `app/routes` significantly increases bundle size.\n   *\n   * A potential solution would be to use dynamic imports here to import\n   * `app/routes` to pass to `initializeSdk()`\n   */\n  initializeSdk(config);\n\n  // Used for operational metrics to determine that the application js\n  // bundle was loaded by browser.\n  metric.mark({name: 'sentry-pipeline-init'});\n  renderOnDomReady(renderPipelineView);\n}\n","import {render} from 'react-dom';\n\nimport {ROOT_ELEMENT} from 'sentry/constants';\nimport {PipelineInitialData} from 'sentry/types';\nimport PipelineView from 'sentry/views/integrationPipeline/pipelineView';\n\nfunction renderDom(pipelineName: string, props: PipelineInitialData['props']) {\n  const rootEl = document.getElementById(ROOT_ELEMENT);\n  render(<PipelineView pipelineName={pipelineName} {...props} />, rootEl);\n}\n\nexport function renderPipelineView() {\n  const {name, props} = window.__pipelineInitialData;\n  renderDom(name, props);\n}\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport * as qs from 'query-string';\n\nimport {addErrorMessage, addLoadingMessage} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/actions/button';\nimport SelectField from 'sentry/components/forms/selectField';\nimport TextField from 'sentry/components/forms/textField';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {uniqueId} from 'sentry/utils/guid';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\n\nimport FooterWithButtons from './components/footerWithButtons';\nimport HeaderWithHelp from './components/headerWithHelp';\n\n// let the browser generate and store the external ID\n// this way the same user always has the same external ID if they restart the pipeline\nconst ID_NAME = 'AWS_EXTERNAL_ID';\nconst getAwsExternalId = () => {\n  let awsExternalId = window.localStorage.getItem(ID_NAME);\n  if (!awsExternalId) {\n    awsExternalId = uniqueId();\n    window.localStorage.setItem(ID_NAME, awsExternalId);\n  }\n  return awsExternalId;\n};\n\nconst accountNumberRegex = /^\\d{12}$/;\nconst testAccountNumber = (arn: string) => accountNumberRegex.test(arn);\n\ntype Props = {\n  baseCloudformationUrl: string;\n  initialStepNumber: number;\n  organization: Organization;\n  regionList: string[];\n  stackName: string;\n  templateUrl: string;\n  accountNumber?: string;\n  awsExternalId?: string;\n  error?: string;\n  region?: string;\n};\n\ntype State = {\n  accountNumber?: string;\n  accountNumberError?: string;\n  awsExternalId?: string;\n  region?: string;\n  showInputs?: boolean;\n  submitting?: boolean;\n};\n\nexport default class AwsLambdaCloudformation extends Component<Props, State> {\n  state: State = {\n    accountNumber: this.props.accountNumber,\n    region: this.props.region,\n    awsExternalId: this.props.awsExternalId ?? getAwsExternalId(),\n    showInputs: !!this.props.awsExternalId,\n  };\n\n  componentDidMount() {\n    // show the error if we have it\n    const {error} = this.props;\n    if (error) {\n      addErrorMessage(error, {duration: 10000});\n    }\n  }\n\n  get initialData() {\n    const {region, accountNumber} = this.props;\n    const {awsExternalId} = this.state;\n    return {\n      awsExternalId,\n      region,\n      accountNumber,\n    };\n  }\n\n  get cloudformationUrl() {\n    // generate the cloudformation URL using the params we get from the server\n    // and the external id we generate\n    const {baseCloudformationUrl, templateUrl, stackName} = this.props;\n    // always us the generated AWS External ID in local storage\n    const awsExternalId = getAwsExternalId();\n    const query = qs.stringify({\n      templateURL: templateUrl,\n      stackName,\n      param_ExternalId: awsExternalId,\n    });\n    return `${baseCloudformationUrl}?${query}`;\n  }\n\n  get regionOptions() {\n    return this.props.regionList.map(region => ({value: region, label: region}));\n  }\n\n  handleSubmit = (e: React.MouseEvent) => {\n    this.setState({submitting: true});\n    e.preventDefault();\n    // use the external ID from the form on on the submission\n    const {accountNumber, region, awsExternalId} = this.state;\n    const data = {\n      accountNumber,\n      region,\n      awsExternalId,\n    };\n    addLoadingMessage(t('Submitting\\u2026'));\n    const {\n      location: {origin},\n    } = window;\n    // redirect to the extensions endpoint with the form fields as query params\n    // this is needed so we don't restart the pipeline loading from the original\n    // OrganizationIntegrationSetupView route\n    const newUrl = `${origin}/extensions/aws_lambda/setup/?${qs.stringify(data)}`;\n    window.location.assign(newUrl);\n  };\n\n  validateAccountNumber = (value: string) => {\n    // validate the account number\n    let accountNumberError = '';\n    if (!value) {\n      accountNumberError = t('Account number required');\n    } else if (!testAccountNumber(value)) {\n      accountNumberError = t('Invalid account number');\n    }\n    this.setState({accountNumberError});\n  };\n\n  handleChangeArn = (accountNumber: string) => {\n    this.debouncedTrackValueChanged('accountNumber');\n    // reset the error if we ever get a valid account number\n    if (testAccountNumber(accountNumber)) {\n      this.setState({accountNumberError: ''});\n    }\n    this.setState({accountNumber});\n  };\n\n  handleChangeRegion = (region: string) => {\n    this.debouncedTrackValueChanged('region');\n    this.setState({region});\n  };\n\n  handleChangeExternalId = (awsExternalId: string) => {\n    this.debouncedTrackValueChanged('awsExternalId');\n    awsExternalId = awsExternalId.trim();\n    this.setState({awsExternalId});\n  };\n\n  handleChangeShowInputs = () => {\n    this.setState({showInputs: true});\n    trackIntegrationAnalytics('integrations.installation_input_value_changed', {\n      integration: 'aws_lambda',\n      integration_type: 'first_party',\n      field_name: 'showInputs',\n      organization: this.props.organization,\n    });\n  };\n\n  get formValid() {\n    const {accountNumber, region, awsExternalId} = this.state;\n    return !!region && testAccountNumber(accountNumber || '') && !!awsExternalId;\n  }\n\n  // debounce so we don't send a request on every input change\n  debouncedTrackValueChanged = debounce((fieldName: string) => {\n    trackIntegrationAnalytics('integrations.installation_input_value_changed', {\n      integration: 'aws_lambda',\n      integration_type: 'first_party',\n      field_name: fieldName,\n      organization: this.props.organization,\n    });\n  }, 200);\n\n  trackOpenCloudFormation = () => {\n    trackIntegrationAnalytics('integrations.cloudformation_link_clicked', {\n      integration: 'aws_lambda',\n      integration_type: 'first_party',\n      organization: this.props.organization,\n    });\n  };\n\n  render() {\n    const {initialStepNumber} = this.props;\n    const {\n      accountNumber,\n      region,\n      accountNumberError,\n      submitting,\n      awsExternalId,\n      showInputs,\n    } = this.state;\n    return (\n      <Fragment>\n        <HeaderWithHelp docsUrl=\"https://docs.sentry.io/product/integrations/cloud-monitoring/aws-lambda/\" />\n        <StyledList symbol=\"colored-numeric\" initialCounterValue={initialStepNumber}>\n          <ListItem>\n            <h3>{t(\"Add Sentry's CloudFormation\")}</h3>\n            <StyledButton\n              priority=\"primary\"\n              onClick={this.trackOpenCloudFormation}\n              external\n              href={this.cloudformationUrl}\n            >\n              {t('Go to AWS')}\n            </StyledButton>\n            {!showInputs && (\n              <Fragment>\n                <p>\n                  {t(\n                    \"Once you've created Sentry's CloudFormation stack (or if you already have one) press the button below to continue.\"\n                  )}\n                </p>\n                <Button name=\"showInputs\" onClick={this.handleChangeShowInputs}>\n                  {t(\"I've created the stack\")}\n                </Button>\n              </Fragment>\n            )}\n          </ListItem>\n          {showInputs ? (\n            <ListItem>\n              <h3>{t('Add AWS Account Information')}</h3>\n              <TextField\n                name=\"accountNumber\"\n                value={accountNumber}\n                onChange={this.handleChangeArn}\n                onBlur={this.validateAccountNumber}\n                error={accountNumberError}\n                inline={false}\n                stacked\n                label={t('AWS Account Number')}\n                showHelpInTooltip\n                help={t(\n                  'Your account number can be found on the right side of the header in AWS'\n                )}\n              />\n              <SelectField\n                name=\"region\"\n                value={region}\n                onChange={this.handleChangeRegion}\n                options={this.regionOptions}\n                allowClear={false}\n                inline={false}\n                stacked\n                label={t('AWS Region')}\n                showHelpInTooltip\n                help={t(\n                  'Your current region can be found on the right side of the header in AWS'\n                )}\n              />\n              <TextField\n                name=\"awsExternalId\"\n                value={awsExternalId}\n                onChange={this.handleChangeExternalId}\n                inline={false}\n                stacked\n                error={awsExternalId ? '' : t('External ID Required')}\n                label={t('External ID')}\n                showHelpInTooltip\n                help={t(\n                  'Do not edit unless you are copying from a previously created CloudFormation stack'\n                )}\n              />\n            </ListItem>\n          ) : (\n            <Fragment />\n          )}\n        </StyledList>\n        <FooterWithButtons\n          buttonText={t('Next')}\n          onClick={this.handleSubmit}\n          disabled={submitting || !this.formValid}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledList = styled(List)`\n  padding: 100px 50px 50px 50px;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-bottom: 20px;\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelItem} from 'sentry/components/panels';\nimport {IconCheckmark, IconWarning} from 'sentry/icons';\nimport {t, tct, tn} from 'sentry/locale';\n\nimport FooterWithButtons from './components/footerWithButtons';\nimport HeaderWithHelp from './components/headerWithHelp';\n\ntype ErrorDetail = {error: string; name: string};\n\ntype Props = {\n  lambdaFunctionFailures: ErrorDetail[];\n  successCount: number;\n};\n\nexport default function AwsLambdaFailureDetails({\n  lambdaFunctionFailures,\n  successCount,\n}: Props) {\n  const baseDocsUrl =\n    'https://docs.sentry.io/product/integrations/cloud-monitoring/aws-lambda/';\n  return (\n    <Fragment>\n      <HeaderWithHelp docsUrl={baseDocsUrl} />\n      <Wrapper>\n        <div>\n          <StyledCheckmark isCircled color=\"green300\" />\n          <h3>\n            {tn(\n              'successfully updated %s function',\n              'successfully updated %s functions',\n              successCount\n            )}\n          </h3>\n        </div>\n        <div>\n          <StyledWarning color=\"red300\" />\n          <h3>\n            {tn(\n              'Failed to update %s function',\n              'Failed to update %s functions',\n              lambdaFunctionFailures.length\n            )}\n          </h3>\n          <Troubleshooting>\n            {tct('See [link:Troubleshooting Docs]', {\n              link: <ExternalLink href={baseDocsUrl + '#troubleshooting'} />,\n            })}\n          </Troubleshooting>\n        </div>\n        <StyledPanel>{lambdaFunctionFailures.map(SingleFailure)}</StyledPanel>\n      </Wrapper>\n      <FooterWithButtons buttonText={t('Finish Setup')} href=\"?finish_pipeline=1\" />\n    </Fragment>\n  );\n}\n\nfunction SingleFailure(errorDetail: ErrorDetail) {\n  return (\n    <StyledRow key={errorDetail.name}>\n      <span>{errorDetail.name}</span>\n      <Error>{errorDetail.error}</Error>\n    </StyledRow>\n  );\n}\n\nconst Wrapper = styled('div')`\n  padding: 100px 50px 50px 50px;\n`;\n\nconst StyledRow = styled(PanelItem)`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Error = styled('span')`\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledPanel = styled(Panel)`\n  overflow: hidden;\n  margin-left: 34px;\n`;\n\nconst Troubleshooting = styled('p')`\n  margin-left: 34px;\n`;\n\nconst StyledCheckmark = styled(IconCheckmark)`\n  float: left;\n  margin-right: 10px;\n  height: 24px;\n  width: 24px;\n`;\n\nconst StyledWarning = styled(IconWarning)`\n  float: left;\n  margin-right: 10px;\n  height: 24px;\n  width: 24px;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport reduce from 'lodash/reduce';\nimport {computed, makeObservable} from 'mobx';\nimport {Observer} from 'mobx-react';\n\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport FormModel from 'sentry/components/forms/model';\nimport {JsonFormObject} from 'sentry/components/forms/type';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {PanelHeader} from 'sentry/components/panels';\nimport Switch from 'sentry/components/switchButton';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t, tn} from 'sentry/locale';\n\nimport FooterWithButtons from './components/footerWithButtons';\nimport HeaderWithHelp from './components/headerWithHelp';\n\nconst LAMBDA_COUNT_THRESHOLD = 10;\n\ntype LambdaFunction = {FunctionName: string; Runtime: string};\n\ntype Props = {\n  initialStepNumber: number;\n  lambdaFunctions: LambdaFunction[];\n};\n\ntype State = {\n  submitting: boolean;\n};\n\nconst getLabel = (func: LambdaFunction) => func.FunctionName;\n\nexport default class AwsLambdaFunctionSelect extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    makeObservable(this, {allStatesToggled: computed});\n  }\n  state: State = {\n    submitting: false,\n  };\n\n  model = new FormModel();\n\n  get initialData() {\n    const {lambdaFunctions} = this.props;\n    const initialData = lambdaFunctions.reduce((accum, func) => {\n      accum[func.FunctionName] = true;\n      return accum;\n    }, {});\n    return initialData;\n  }\n\n  get lambdaFunctions() {\n    return this.props.lambdaFunctions.sort((a, b) =>\n      getLabel(a).toLowerCase() < getLabel(b).toLowerCase() ? -1 : 1\n    );\n  }\n\n  get enabledCount() {\n    const data = this.model.getTransformedData();\n    return reduce(data, (acc: number, val: boolean) => (val ? acc + 1 : acc), 0);\n  }\n\n  get allStatesToggled() {\n    // check if any of the lambda functions have a falsy value\n    // no falsy values means everything is enabled\n    return Object.values(this.model.getData()).every(val => val);\n  }\n\n  get formFields() {\n    const data = this.model.getTransformedData();\n    return Object.entries(data).map(([name, value]) => ({name, value}));\n  }\n\n  handleSubmit = () => {\n    this.setState({submitting: true});\n  };\n\n  handleToggle = () => {\n    const newState = !this.allStatesToggled;\n    this.lambdaFunctions.forEach(lambda => {\n      this.model.setValue(lambda.FunctionName, newState, {quiet: true});\n    });\n  };\n\n  renderWhatWeFound = () => {\n    const count = this.lambdaFunctions.length;\n    return (\n      <h4>\n        {tn(\n          'We found %s function with a Node or Python runtime',\n          'We found %s functions with Node or Python runtimes',\n          count\n        )}\n      </h4>\n    );\n  };\n\n  renderLoadingScreen = () => {\n    const count = this.enabledCount;\n    const text =\n      count > LAMBDA_COUNT_THRESHOLD\n        ? t('This might take a while\\u2026', count)\n        : t('This might take a sec\\u2026');\n    return (\n      <LoadingWrapper>\n        <StyledLoadingIndicator />\n        <h4>{t('Adding Sentry to %s functions', count)}</h4>\n        {text}\n      </LoadingWrapper>\n    );\n  };\n\n  renderCore = () => {\n    const {initialStepNumber} = this.props;\n\n    const FormHeader = (\n      <StyledPanelHeader>\n        {t('Lambda Functions')}\n        <SwitchHolder>\n          <Observer>\n            {() => (\n              <Tooltip\n                title={this.allStatesToggled ? t('Disable All') : t('Enable All')}\n                position=\"left\"\n              >\n                <StyledSwitch\n                  size=\"lg\"\n                  name=\"toggleAll\"\n                  toggle={this.handleToggle}\n                  isActive={this.allStatesToggled}\n                />\n              </Tooltip>\n            )}\n          </Observer>\n        </SwitchHolder>\n      </StyledPanelHeader>\n    );\n\n    const formFields: JsonFormObject = {\n      fields: this.lambdaFunctions.map(func => ({\n        name: func.FunctionName,\n        type: 'boolean',\n        required: false,\n        label: getLabel(func),\n        alignRight: true,\n      })),\n    };\n\n    return (\n      <List symbol=\"colored-numeric\" initialCounterValue={initialStepNumber}>\n        <ListItem>\n          <Header>{this.renderWhatWeFound()}</Header>\n          {t('Decide which functions you would like to enable for Sentry monitoring')}\n          <StyledForm\n            initialData={this.initialData}\n            model={this.model}\n            apiEndpoint=\"/extensions/aws_lambda/setup/\"\n            hideFooter\n            preventFormResetOnUnmount\n          >\n            <JsonForm renderHeader={() => FormHeader} forms={[formFields]} />\n          </StyledForm>\n        </ListItem>\n        <Fragment />\n      </List>\n    );\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <HeaderWithHelp docsUrl=\"https://docs.sentry.io/product/integrations/cloud-monitoring/aws-lambda/\" />\n        <Wrapper>\n          {this.state.submitting ? this.renderLoadingScreen() : this.renderCore()}\n        </Wrapper>\n        <Observer>\n          {() => (\n            <FooterWithButtons\n              formProps={{\n                action: '/extensions/aws_lambda/setup/',\n                method: 'post',\n                onSubmit: this.handleSubmit,\n              }}\n              formFields={this.formFields}\n              buttonText={t('Finish Setup')}\n              disabled={\n                this.model.isError || this.model.isSaving || this.state.submitting\n              }\n            />\n          )}\n        </Observer>\n      </Fragment>\n    );\n  }\n}\n\nconst Wrapper = styled('div')`\n  padding: 100px 50px 50px 50px;\n`;\n\n// TODO(ts): Understand why styled is not correctly inheriting props here\nconst StyledForm = styled(Form)<Form['props']>`\n  margin-top: 10px;\n`;\n\nconst Header = styled('div')`\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nconst LoadingWrapper = styled('div')`\n  padding: 50px;\n  text-align: center;\n`;\n\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  margin: 0;\n`;\n\nconst SwitchHolder = styled('div')`\n  display: flex;\n`;\n\nconst StyledSwitch = styled(Switch)`\n  margin: auto;\n`;\n\n// padding is based on fom control width\nconst StyledPanelHeader = styled(PanelHeader)`\n  padding-right: 36px;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Observer} from 'mobx-react';\nimport * as qs from 'query-string';\n\nimport {addLoadingMessage} from 'sentry/actionCreators/indicator';\nimport Alert from 'sentry/components/alert';\nimport Form from 'sentry/components/forms/form';\nimport FormModel from 'sentry/components/forms/model';\nimport SentryProjectSelectorField from 'sentry/components/forms/sentryProjectSelectorField';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\n\nimport FooterWithButtons from './components/footerWithButtons';\nimport HeaderWithHelp from './components/headerWithHelp';\n\ntype Props = {projects: Project[]};\n\nexport default class AwsLambdaProjectSelect extends Component<Props> {\n  model = new FormModel();\n\n  handleSubmit = (e: React.MouseEvent) => {\n    e.preventDefault();\n    const data = this.model.getData();\n    addLoadingMessage(t('Submitting\\u2026'));\n    this.model.setFormSaving();\n    const {\n      location: {origin},\n    } = window;\n    // redirect to the extensions endpoint with the form fields as query params\n    // this is needed so we don't restart the pipeline loading from the original\n    // OrganizationIntegrationSetupView route\n    const newUrl = `${origin}/extensions/aws_lambda/setup/?${qs.stringify(data)}`;\n    window.location.assign(newUrl);\n  };\n\n  render() {\n    const {projects} = this.props;\n    // TODO: Add logic if no projects\n    return (\n      <Fragment>\n        <HeaderWithHelp docsUrl=\"https://docs.sentry.io/product/integrations/cloud-monitoring/aws-lambda/\" />\n        <StyledList symbol=\"colored-numeric\">\n          <Fragment />\n          <ListItem>\n            <h3>{t('Select a project for your AWS Lambdas')}</h3>\n            <Form model={this.model} hideFooter>\n              <StyledSentryProjectSelectorField\n                placeholder={t('Select a project')}\n                name=\"projectId\"\n                projects={projects}\n                inline={false}\n                hasControlState\n                flexibleControlStateSize\n                stacked\n              />\n              <Alert type=\"info\">\n                {t('Currently only supports Node and Python Lambda functions')}\n              </Alert>\n            </Form>\n          </ListItem>\n        </StyledList>\n        <Observer>\n          {() => (\n            <FooterWithButtons\n              buttonText={t('Next')}\n              onClick={this.handleSubmit}\n              disabled={this.model.isSaving || !this.model.getValue('projectId')}\n            />\n          )}\n        </Observer>\n      </Fragment>\n    );\n  }\n}\n\nconst StyledList = styled(List)`\n  padding: 100px 50px 50px 50px;\n`;\n\nconst StyledSentryProjectSelectorField = styled(SentryProjectSelectorField)`\n  padding: 0 0 ${space(2)} 0;\n`;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/actions/button';\nimport {ButtonProps} from 'sentry/components/button';\nimport space from 'sentry/styles/space';\n\ninterface FooterWithButtonsProps\n  extends Partial<Pick<ButtonProps, 'disabled' | 'onClick' | 'href'>> {\n  buttonText: string;\n  formFields?: Array<{name: string; value: any}>;\n  formProps?: React.FormHTMLAttributes<HTMLFormElement>;\n}\n\nexport default function FooterWithButtons({\n  buttonText,\n  formFields,\n  formProps,\n  ...rest\n}: FooterWithButtonsProps) {\n  /**\n   * We use a form post here to replicate what we do with standard HTML views for the integration pipeline.\n   * Since this is a form post, we need to pass a hidden replica of the form inputs\n   * so we can submit this form instead of the one collecting the user inputs.\n   */\n  return (\n    <Footer data-test-id=\"aws-lambda-footer-form\" {...formProps}>\n      {formFields?.map(field => {\n        return <input type=\"hidden\" key={field.name} {...field} />;\n      })}\n      <Button priority=\"primary\" type=\"submit\" size=\"xs\" {...rest}>\n        {buttonText}\n      </Button>\n    </Footer>\n  );\n}\n\n// wrap in form so we can keep form submission behavior\nconst Footer = styled('form')`\n  width: 100%;\n  position: fixed;\n  display: flex;\n  justify-content: flex-end;\n  bottom: 0;\n  z-index: 100;\n  background-color: ${p => p.theme.bodyBackground};\n  border-top: 1px solid ${p => p.theme.innerBorder};\n  padding: ${space(2)};\n`;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/actions/button';\nimport LogoSentry from 'sentry/components/logoSentry';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nexport default function HeaderWithHelp({docsUrl}: {docsUrl: string}) {\n  return (\n    <Header>\n      <StyledLogoSentry />\n      <Button external href={docsUrl} size=\"xs\">\n        {t('Need Help?')}\n      </Button>\n    </Header>\n  );\n}\n\nconst Header = styled('div')`\n  width: 100%;\n  position: fixed;\n  display: flex;\n  justify-content: space-between;\n  top: 0;\n  z-index: 100;\n  padding: ${space(2)};\n  background: ${p => p.theme.background};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n`;\n\nconst StyledLogoSentry = styled(LogoSentry)`\n  width: 130px;\n  height: 30px;\n  color: ${p => p.theme.textColor};\n`;\n","import 'focus-visible';\n\nimport {initializePipelineView} from 'sentry/bootstrap/initializePipelineView';\n\nexport function init() {\n  initializePipelineView(window.__initialData);\n}\n","import {useEffect} from 'react';\n\nimport Indicators from 'sentry/components/indicators';\nimport ThemeAndStyleProvider from 'sentry/components/themeAndStyleProvider';\n\nimport AwsLambdaCloudformation from './awsLambdaCloudformation';\nimport AwsLambdaFailureDetails from './awsLambdaFailureDetails';\nimport AwsLambdaFunctionSelect from './awsLambdaFunctionSelect';\nimport AwsLambdaProjectSelect from './awsLambdaProjectSelect';\n\nconst pipelineMapper: Record<string, [React.ElementType, string]> = {\n  awsLambdaProjectSelect: [AwsLambdaProjectSelect, 'AWS Lambda Select Project'],\n  awsLambdaFunctionSelect: [AwsLambdaFunctionSelect, 'AWS Lambda Select Lambdas'],\n  awsLambdaCloudformation: [AwsLambdaCloudformation, 'AWS Lambda Create Cloudformation'],\n  awsLambdaFailureDetails: [AwsLambdaFailureDetails, 'AWS Lambda View Failures'],\n};\n\ntype Props = {\n  [key: string]: any;\n  pipelineName: string;\n};\n\n/**\n * This component is a wrapper for specific pipeline views for integrations\n */\nfunction PipelineView({pipelineName, ...props}: Props) {\n  const mapping = pipelineMapper[pipelineName];\n\n  if (!mapping) {\n    throw new Error(`Invalid pipeline name ${pipelineName}`);\n  }\n\n  const [Component, title] = mapping;\n\n  // Set the page title\n  useEffect(() => void (document.title = title), [title]);\n\n  return (\n    <ThemeAndStyleProvider>\n      <Indicators className=\"indicators-container\" />\n      <Component {...props} />\n    </ThemeAndStyleProvider>\n  );\n}\n\nexport default PipelineView;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n","var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;\n"],"names":["metric","commonInitialization","initializeSdk","renderOnDomReady","renderPipelineView","initializePipelineView","config","mark","name","render","ROOT_ELEMENT","PipelineView","renderDom","pipelineName","props","rootEl","document","getElementById","window","__pipelineInitialData","Component","Fragment","debounce","qs","addErrorMessage","addLoadingMessage","Button","SelectField","TextField","List","ListItem","t","uniqueId","trackIntegrationAnalytics","FooterWithButtons","HeaderWithHelp","ID_NAME","getAwsExternalId","awsExternalId","localStorage","getItem","setItem","accountNumberRegex","testAccountNumber","arn","test","AwsLambdaCloudformation","accountNumber","region","showInputs","e","setState","submitting","preventDefault","state","data","location","origin","newUrl","stringify","assign","value","accountNumberError","debouncedTrackValueChanged","trim","integration","integration_type","field_name","organization","fieldName","componentDidMount","error","duration","initialData","cloudformationUrl","baseCloudformationUrl","templateUrl","stackName","query","templateURL","param_ExternalId","regionOptions","regionList","map","label","formValid","initialStepNumber","trackOpenCloudFormation","handleChangeShowInputs","handleChangeArn","validateAccountNumber","handleChangeRegion","handleChangeExternalId","handleSubmit","StyledList","StyledButton","ExternalLink","Panel","PanelItem","IconCheckmark","IconWarning","tct","tn","AwsLambdaFailureDetails","lambdaFunctionFailures","successCount","baseDocsUrl","length","link","SingleFailure","errorDetail","Wrapper","StyledRow","Error","p","theme","subText","StyledPanel","Troubleshooting","StyledCheckmark","StyledWarning","reduce","computed","makeObservable","Observer","Form","JsonForm","FormModel","LoadingIndicator","PanelHeader","Switch","Tooltip","LAMBDA_COUNT_THRESHOLD","getLabel","func","FunctionName","AwsLambdaFunctionSelect","constructor","newState","allStatesToggled","lambdaFunctions","forEach","lambda","model","setValue","quiet","count","enabledCount","text","FormHeader","handleToggle","formFields","fields","type","required","alignRight","renderWhatWeFound","accum","sort","a","b","toLowerCase","getTransformedData","acc","val","Object","values","getData","every","entries","renderLoadingScreen","renderCore","action","method","onSubmit","isError","isSaving","StyledForm","Header","LoadingWrapper","StyledLoadingIndicator","SwitchHolder","StyledSwitch","StyledPanelHeader","Alert","SentryProjectSelectorField","space","AwsLambdaProjectSelect","setFormSaving","projects","getValue","StyledSentryProjectSelectorField","buttonText","formProps","rest","field","Footer","bodyBackground","innerBorder","LogoSentry","docsUrl","background","StyledLogoSentry","textColor","init","__initialData","useEffect","Indicators","ThemeAndStyleProvider","pipelineMapper","awsLambdaProjectSelect","awsLambdaFunctionSelect","awsLambdaCloudformation","awsLambdaFailureDetails","mapping","title"],"sourceRoot":""}