{"version":3,"file":"chunks/app_components_modals_redirectToProject_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/modals/redirectToProject.tsx","webpack:///./app/components/text.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/replaceRouterParams.tsx","webpack:///../node_modules/lodash/findLastIndex.js"],"sourcesContent":["import {Component, Fragment} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport Text from 'sentry/components/text';\nimport {t, tct} from 'sentry/locale';\nimport recreateRoute from 'sentry/utils/recreateRoute';\n\ntype Props = ModalRenderProps &\n  WithRouterProps & {\n    slug: string;\n  };\n\ntype State = {\n  timer: number;\n};\n\nclass RedirectToProjectModal extends Component<Props, State> {\n  state: State = {\n    timer: 5,\n  };\n\n  componentDidMount() {\n    this.redirectInterval = window.setInterval(() => {\n      if (this.state.timer <= 1) {\n        window.location.assign(this.newPath);\n        return;\n      }\n\n      this.setState(state => ({\n        timer: state.timer - 1,\n      }));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.redirectInterval) {\n      window.clearInterval(this.redirectInterval);\n    }\n  }\n\n  redirectInterval: number | null = null;\n\n  get newPath() {\n    const {params, slug} = this.props;\n\n    return recreateRoute('', {\n      ...this.props,\n      params: {\n        ...params,\n        projectId: slug,\n      },\n    });\n  }\n\n  render() {\n    const {slug, Header, Body} = this.props;\n    return (\n      <Fragment>\n        <Header>{t('Redirecting to New Project...')}</Header>\n\n        <Body>\n          <div>\n            <Text>\n              <p>{t('The project slug has been changed.')}</p>\n\n              <p>\n                {tct(\n                  'You will be redirected to the new project [project] in [timer] seconds...',\n                  {\n                    project: <strong>{slug}</strong>,\n                    timer: `${this.state.timer}`,\n                  }\n                )}\n              </p>\n              <ButtonWrapper>\n                <Button priority=\"primary\" href={this.newPath}>\n                  {t('Continue to %s', slug)}\n                </Button>\n              </ButtonWrapper>\n            </Text>\n          </div>\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(RedirectToProjectModal);\nexport {RedirectToProjectModal};\n\nconst ButtonWrapper = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import styled from '@emotion/styled';\n\nimport Panel from 'sentry/components/panels/panel';\nimport space from 'sentry/styles/space';\nimport textStyles from 'sentry/styles/text';\n\nconst Text = styled('div')`\n  ${textStyles};\n\n  ${/* sc-selector */ Panel} & {\n    padding-left: ${space(2)};\n    padding-right: ${space(2)};\n\n    &:first-child {\n      padding-top: ${space(2)};\n    }\n  }\n`;\n\nexport default Text;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","/**\n * Given a route string, replace path parameters (e.g. `:id`) with value from `params`\n *\n * e.g. {id: 'test'}\n */\nexport default function replaceRouterParams(\n  route: string,\n  params: {[key: string]: string | number | undefined}\n): string {\n  // parse route params from route\n  const matches = route.match(/:\\w+/g);\n\n  if (!matches || !matches.length) {\n    return route;\n  }\n\n  // replace with current params\n  matches.forEach(param => {\n    const paramName = param.slice(1);\n    if (typeof params[paramName] === 'undefined') {\n      return;\n    }\n\n    route = route.replace(param, String(params[paramName]));\n  });\n\n  return route;\n}\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n"],"names":["Component","Fragment","withRouter","Button","Text","t","tct","recreateRoute","RedirectToProjectModal","timer","componentDidMount","redirectInterval","window","setInterval","state","location","assign","newPath","setState","componentWillUnmount","clearInterval","params","slug","props","projectId","render","Header","Body","project","ButtonWrapper","Panel","space","textStyles","findLastIndex","replaceRouterParams","to","options","routes","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","slice","baseRoute","search","hash","fullRoute","join","route","matches","match","length","forEach","param","paramName","replace","String"],"sourceRoot":""}