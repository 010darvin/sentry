{"version":3,"file":"chunks/app_views_settings_account_accountSecurity_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/data/forms/accountPassword.tsx","webpack:///./app/utils/getPendingInvite.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountSecurity/components/confirmHeader.tsx","webpack:///./app/views/settings/account/accountSecurity/components/removeConfirm.tsx","webpack:///./app/views/settings/account/accountSecurity/components/twoFactorRequired.tsx","webpack:///./app/views/settings/account/accountSecurity/index.tsx","webpack:///./app/views/settings/account/passwordForm.tsx"],"sourcesContent":["import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {JsonFormObject} from 'sentry/components/forms/type';\n\nconst getUserIsNotManaged = ({user}) => !user.isManaged;\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Password',\n    fields: [\n      {\n        name: 'password',\n        type: 'secret',\n        autoComplete: 'current-password',\n        label: 'Current Password',\n        placeholder: '',\n        help: 'Your current password',\n        visible: getUserIsNotManaged,\n        required: true,\n      },\n      {\n        name: 'passwordNew',\n        type: 'secret',\n        autoComplete: 'new-password',\n        label: 'New Password',\n        placeholder: '',\n        help: '',\n        required: true,\n        visible: getUserIsNotManaged,\n        validate: ({id, form}) => (form[id] !== form.passwordVerify ? [[id, '']] : []),\n      },\n      {\n        name: 'passwordVerify',\n        type: 'secret',\n        autoComplete: 'new-password',\n        label: 'Verify New Password',\n        placeholder: '',\n        help: 'Verify your new password',\n        required: true,\n        visible: getUserIsNotManaged,\n        validate: ({id, form}) => {\n          // If password is set, and passwords don't match, then return an error\n          if (form.passwordNew && form.passwordNew !== form[id]) {\n            return [[id, 'Passwords do not match']];\n          }\n\n          return [];\n        },\n      },\n    ],\n  },\n];\n\nexport const route = '/settings/account/security/';\nexport default formGroups;\n","import Cookies from 'js-cookie';\nimport * as qs from 'query-string';\n\ntype PendingInvite = {\n  memberId: number;\n  token: string;\n  url: string;\n};\n\nexport default function getPendingInvite(): PendingInvite | null {\n  const data = Cookies.get('pending-invite');\n\n  if (!data) {\n    return null;\n  }\n\n  return qs.parse(data) as any;\n}\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nconst ConfirmHeader = styled('div')`\n  font-size: 1.2em;\n  margin-bottom: 10px;\n`;\n\nexport default ConfirmHeader;\n","import {Fragment} from 'react';\n\nimport Confirm from 'sentry/components/confirm';\nimport {t} from 'sentry/locale';\nimport ConfirmHeader from 'sentry/views/settings/account/accountSecurity/components/confirmHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = React.ComponentProps<typeof Confirm>;\n\nconst message = (\n  <Fragment>\n    <ConfirmHeader>{t('Do you want to remove this method?')}</ConfirmHeader>\n    <TextBlock>\n      {t(\n        'Removing the last authentication method will disable two-factor authentication completely.'\n      )}\n    </TextBlock>\n  </Fragment>\n);\n\nconst RemoveConfirm = (props: Props) => <Confirm {...props} message={message} />;\n\nexport default RemoveConfirm;\n","import styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport getPendingInvite from 'sentry/utils/getPendingInvite';\n\nconst TwoFactorRequired = () =>\n  !getPendingInvite() ? null : (\n    <StyledAlert data-test-id=\"require-2fa\" type=\"error\" showIcon>\n      {tct(\n        'You have been invited to an organization that requires [link:two-factor authentication].' +\n          ' Setup two-factor authentication below to join your organization.',\n        {\n          link: <ExternalLink href=\"https://docs.sentry.io/accounts/require-2fa/\" />,\n        }\n      )}\n    </StyledAlert>\n  );\n\nconst StyledAlert = styled(Alert)`\n  margin: ${space(3)} 0;\n`;\n\nexport default TwoFactorRequired;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {openEmailVerification} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport Field from 'sentry/components/forms/field';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Authenticator, OrganizationSummary} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport AsyncView from 'sentry/views/asyncView';\nimport RemoveConfirm from 'sentry/views/settings/account/accountSecurity/components/removeConfirm';\nimport TwoFactorRequired from 'sentry/views/settings/account/accountSecurity/components/twoFactorRequired';\nimport PasswordForm from 'sentry/views/settings/account/passwordForm';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = {\n  authenticators: Authenticator[] | null;\n  countEnrolled: number;\n  deleteDisabled: boolean;\n  handleRefresh: () => void;\n  hasVerifiedEmail: boolean;\n  onDisable: (auth: Authenticator) => void;\n  orgsRequire2fa: OrganizationSummary[];\n} & AsyncView['props'] &\n  RouteComponentProps<{}, {}>;\n\n/**\n * Lists 2fa devices + password change form\n */\nclass AccountSecurity extends AsyncView<Props> {\n  getTitle() {\n    return t('Security');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [];\n  }\n\n  handleSessionClose = async () => {\n    try {\n      await this.api.requestPromise('/auth/', {\n        method: 'DELETE',\n        data: {all: true},\n      });\n      window.location.assign('/auth/login/');\n    } catch (err) {\n      addErrorMessage(t('There was a problem closing all sessions'));\n      throw err;\n    }\n  };\n\n  formatOrgSlugs = () => {\n    const {orgsRequire2fa} = this.props;\n    const slugs = orgsRequire2fa.map(({slug}) => slug);\n\n    return [slugs.slice(0, -1).join(', '), slugs.slice(-1)[0]].join(\n      slugs.length > 1 ? ' and ' : ''\n    );\n  };\n\n  handleAdd2FAClicked = () => {\n    const {handleRefresh} = this.props;\n    openEmailVerification({\n      onClose: () => {\n        handleRefresh();\n      },\n      actionMessage: 'enrolling a 2FA device',\n    });\n  };\n\n  renderBody() {\n    const {authenticators, countEnrolled, deleteDisabled, onDisable, hasVerifiedEmail} =\n      this.props;\n    const isEmpty = !authenticators?.length;\n    return (\n      <div>\n        <SettingsPageHeader\n          title={t('Security')}\n          tabs={\n            <NavTabs underlined>\n              <ListLink to={recreateRoute('', this.props)} index>\n                {t('Settings')}\n              </ListLink>\n              <ListLink to={recreateRoute('session-history/', this.props)}>\n                {t('Session History')}\n              </ListLink>\n            </NavTabs>\n          }\n        />\n\n        {!isEmpty && countEnrolled === 0 && <TwoFactorRequired />}\n\n        <PasswordForm />\n\n        <Panel>\n          <PanelHeader>{t('Sessions')}</PanelHeader>\n          <PanelBody>\n            <Field\n              alignRight\n              flexibleControlStateSize\n              label={t('Sign out of all devices')}\n              help={t(\n                'Signing out of all devices will sign you out of this device as well.'\n              )}\n            >\n              <Button data-test-id=\"signoutAll\" onClick={this.handleSessionClose}>\n                {t('Sign out of all devices')}\n              </Button>\n            </Field>\n          </PanelBody>\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Two-Factor Authentication')}</PanelHeader>\n\n          {isEmpty && (\n            <EmptyMessage>{t('No available authenticators to add')}</EmptyMessage>\n          )}\n\n          <PanelBody>\n            {!isEmpty &&\n              authenticators?.map(auth => {\n                const {\n                  id,\n                  authId,\n                  description,\n                  isBackupInterface,\n                  isEnrolled,\n                  disallowNewEnrollment,\n                  configureButton,\n                  name,\n                } = auth;\n                if (disallowNewEnrollment && !isEnrolled) {\n                  return null;\n                }\n                return (\n                  <AuthenticatorPanelItem key={id}>\n                    <AuthenticatorHeader>\n                      <AuthenticatorTitle>\n                        <AuthenticatorStatus enabled={isEnrolled} />\n                        <AuthenticatorName>{name}</AuthenticatorName>\n                      </AuthenticatorTitle>\n\n                      <Actions>\n                        {!isBackupInterface && !isEnrolled && hasVerifiedEmail && (\n                          <Button\n                            to={`/settings/account/security/mfa/${id}/enroll/`}\n                            size=\"sm\"\n                            priority=\"primary\"\n                            className=\"enroll-button\"\n                          >\n                            {t('Add')}\n                          </Button>\n                        )}\n                        {!isBackupInterface && !isEnrolled && !hasVerifiedEmail && (\n                          <Button\n                            onClick={this.handleAdd2FAClicked}\n                            size=\"sm\"\n                            priority=\"primary\"\n                            className=\"enroll-button\"\n                          >\n                            {t('Add')}\n                          </Button>\n                        )}\n\n                        {isEnrolled && authId && (\n                          <Button\n                            to={`/settings/account/security/mfa/${authId}/`}\n                            size=\"sm\"\n                            className=\"details-button\"\n                          >\n                            {configureButton}\n                          </Button>\n                        )}\n\n                        {!isBackupInterface && isEnrolled && (\n                          <Tooltip\n                            title={t(\n                              `Two-factor authentication is required for organization(s): ${this.formatOrgSlugs()}.`\n                            )}\n                            disabled={!deleteDisabled}\n                          >\n                            <RemoveConfirm\n                              onConfirm={() => onDisable(auth)}\n                              disabled={deleteDisabled}\n                            >\n                              <Button\n                                size=\"sm\"\n                                aria-label={t('delete')}\n                                icon={<IconDelete />}\n                              />\n                            </RemoveConfirm>\n                          </Tooltip>\n                        )}\n                      </Actions>\n\n                      {isBackupInterface && !isEnrolled ? t('requires 2FA') : null}\n                    </AuthenticatorHeader>\n\n                    <Description>{description}</Description>\n                  </AuthenticatorPanelItem>\n                );\n              })}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst AuthenticatorName = styled('span')`\n  font-size: 1.2em;\n`;\n\nconst AuthenticatorPanelItem = styled(PanelItem)`\n  flex-direction: column;\n`;\n\nconst AuthenticatorHeader = styled('div')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst AuthenticatorTitle = styled('div')`\n  flex: 1;\n`;\n\nconst Actions = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n`;\n\nconst AuthenticatorStatus = styled(CircleIndicator)`\n  margin-right: ${space(1)};\n`;\n\nconst Description = styled(TextBlock)`\n  margin-top: ${space(2)};\n  margin-bottom: 0;\n`;\n\nexport default AccountSecurity;\n","import styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport {PanelAlert, PanelItem} from 'sentry/components/panels';\nimport accountPasswordFields from 'sentry/data/forms/accountPassword';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\n\ntype OnSubmitSuccess = Parameters<NonNullable<Form['props']['onSubmitSuccess']>>;\n\nfunction PasswordForm() {\n  function handleSubmitSuccess(_change: OnSubmitSuccess[0], model: OnSubmitSuccess[1]) {\n    // Reset form on success\n    model.resetForm();\n    addSuccessMessage('Password has been changed');\n  }\n\n  function handleSubmitError() {\n    addErrorMessage('Error changing password');\n  }\n\n  const user = ConfigStore.get('user');\n\n  return (\n    <Form\n      apiMethod=\"PUT\"\n      apiEndpoint=\"/users/me/password/\"\n      initialData={{}}\n      onSubmitSuccess={handleSubmitSuccess}\n      onSubmitError={handleSubmitError}\n      hideFooter\n    >\n      <JsonForm\n        forms={accountPasswordFields}\n        additionalFieldProps={{user}}\n        renderFooter={() => (\n          <Actions>\n            <Button type=\"submit\" priority=\"primary\">\n              {t('Change password')}\n            </Button>\n          </Actions>\n        )}\n        renderHeader={() => (\n          <PanelAlert type=\"info\">\n            {t('Changing your password will invalidate all logged in sessions.')}\n          </PanelAlert>\n        )}\n      />\n    </Form>\n  );\n}\n\nconst Actions = styled(PanelItem)`\n  justify-content: flex-end;\n`;\n\nexport default PasswordForm;\n"],"names":["Component","Link","RouterLink","withRouter","classNames","omit","qs","ListLink","_classNames","className","activeClassName","props","isActive","to","query","index","router","queryData","parse","undefined","target","pathname","render","children","disabled","carriedProps","getClassName","StyledLi","shouldForwardProp","prop","p","theme","getUserIsNotManaged","user","isManaged","formGroups","title","fields","name","type","autoComplete","label","placeholder","help","visible","required","validate","id","form","passwordVerify","passwordNew","route","Cookies","getPendingInvite","data","get","findLastIndex","replaceRouterParams","recreateRoute","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","slice","baseRoute","search","hash","fullRoute","join","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","renderComponent","ConfirmHeader","Fragment","Confirm","t","TextBlock","message","RemoveConfirm","Alert","ExternalLink","tct","space","TwoFactorRequired","link","StyledAlert","addErrorMessage","openEmailVerification","Button","CircleIndicator","Field","NavTabs","Panel","PanelBody","PanelHeader","PanelItem","Tooltip","IconDelete","PasswordForm","EmptyMessage","SettingsPageHeader","AccountSecurity","api","requestPromise","method","all","window","assign","err","orgsRequire2fa","slugs","slug","length","handleRefresh","onClose","actionMessage","getEndpoints","renderBody","authenticators","countEnrolled","deleteDisabled","onDisable","hasVerifiedEmail","isEmpty","handleSessionClose","auth","authId","description","isBackupInterface","isEnrolled","disallowNewEnrollment","configureButton","handleAdd2FAClicked","formatOrgSlugs","AuthenticatorName","AuthenticatorPanelItem","AuthenticatorHeader","AuthenticatorTitle","Actions","AuthenticatorStatus","Description","addSuccessMessage","Form","JsonForm","PanelAlert","accountPasswordFields","ConfigStore","handleSubmitSuccess","_change","model","resetForm","handleSubmitError"],"sourceRoot":""}