{"version":3,"file":"chunks/app_views_performance_data_tsx-app_views_performance_landing_utils_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/performance/contexts/metricsEnhancedSetting.tsx","webpack:///./app/views/performance/data.tsx","webpack:///./app/views/performance/landing/utils.tsx"],"sourcesContent":["import {Dispatch, ReactNode, useCallback, useReducer} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport localStorage from 'sentry/utils/localStorage';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {createDefinedContext} from './utils';\n\nexport interface MetricsEnhancedSettingContext {\n  autoSampleState: AutoSampleState;\n  memoizationKey: string;\n  metricSettingState: MEPState | null;\n  setAutoSampleState: Dispatch<AutoSampleState>;\n  setMetricSettingState: Dispatch<MEPState>;\n  shouldQueryProvideMEPAutoParams: boolean;\n  shouldQueryProvideMEPMetricParams: boolean;\n  shouldQueryProvideMEPTransactionParams: boolean;\n}\n\nconst [_MEPSettingProvider, _useMEPSettingContext, _MEPSettingContext] =\n  createDefinedContext<MetricsEnhancedSettingContext>({\n    name: 'MetricsEnhancedSettingContext',\n  });\n\nexport const MEPConsumer = _MEPSettingContext.Consumer;\n\n/**\n * These will be called something else in the copy, but functionally the data is coming from metrics / transactions.\n * \"Unset\" should be the initial state before any queries return for the first time.\n */\nexport enum AutoSampleState {\n  unset = 'unset',\n  metrics = 'metrics',\n  transactions = 'transactions',\n}\n\n/**\n * Metrics/transactions will be called something else in the copy, but functionally the data is coming from metrics / transactions.\n */\nexport enum MEPState {\n  auto = 'auto',\n  metricsOnly = 'metricsOnly',\n  transactionsOnly = 'transactionsOnly',\n}\n\nexport const METRIC_SETTING_PARAM = 'metricSetting';\nexport const METRIC_SEARCH_SETTING_PARAM = 'metricSearchSetting'; // TODO: Clean this up since we don't need multiple params in practice.\n\nconst storageKey = 'performance.metrics-enhanced-setting';\nexport class MEPSetting {\n  static get(): MEPState | null {\n    const value = localStorage.getItem(storageKey);\n    if (value) {\n      if (!(value in MEPState)) {\n        localStorage.removeItem(storageKey);\n        return null;\n      }\n      return MEPState[value];\n    }\n    return null;\n  }\n\n  static set(value: MEPState) {\n    localStorage.setItem(storageKey, value);\n  }\n}\n\nexport function canUseMetricsDevUI(organization: Organization) {\n  return organization.features.includes('performance-use-metrics');\n}\n\nexport function canUseMetricsData(organization: Organization) {\n  const isDevFlagOn = canUseMetricsDevUI(organization); // Forces metrics data on as well.\n  const isInternalViewOn = organization.features.includes(\n    'performance-transaction-name-only-search'\n  ); // TODO: Swap this flag out.\n\n  const samplingRolloutFlag = organization.features.includes('server-side-sampling');\n  const isRollingOut =\n    samplingRolloutFlag && organization.features.includes('mep-rollout-flag');\n\n  return isDevFlagOn || isInternalViewOn || isRollingOut;\n}\n\nexport const MEPSettingProvider = ({\n  children,\n  location,\n  _hasMEPState,\n  forceTransactions,\n}: {\n  children: ReactNode;\n  _hasMEPState?: MEPState;\n  forceTransactions?: boolean;\n  location?: Location;\n}) => {\n  const organization = useOrganization();\n\n  const canUseMEP = canUseMetricsData(organization);\n\n  const allowedStates = [MEPState.metricsOnly, MEPState.transactionsOnly];\n  const _metricSettingFromParam = location\n    ? decodeScalar(location.query[METRIC_SETTING_PARAM])\n    : MEPState.metricsOnly;\n  let defaultMetricsState = MEPState.metricsOnly;\n\n  if (forceTransactions) {\n    defaultMetricsState = MEPState.transactionsOnly;\n  }\n\n  const metricSettingFromParam =\n    allowedStates.find(s => s === _metricSettingFromParam) ?? defaultMetricsState;\n\n  const isControlledMEP = typeof _hasMEPState !== 'undefined';\n\n  const [_metricSettingState, _setMetricSettingState] = useReducer(\n    (_: MEPState, next: MEPState) => next,\n    metricSettingFromParam\n  );\n\n  const setMetricSettingState = useCallback(\n    (settingState: MEPState) => {\n      if (!location) {\n        return;\n      }\n      browserHistory.replace({\n        ...location,\n        query: {\n          ...location.query,\n          [METRIC_SETTING_PARAM]: settingState,\n        },\n      });\n      _setMetricSettingState(settingState);\n    },\n    [location, _setMetricSettingState]\n  );\n\n  const [autoSampleState, setAutoSampleState] = useReducer(\n    (_: AutoSampleState, next: AutoSampleState) => next,\n    AutoSampleState.unset\n  );\n\n  const metricSettingState = isControlledMEP ? _hasMEPState : _metricSettingState;\n\n  const shouldQueryProvideMEPAutoParams =\n    canUseMEP && metricSettingState === MEPState.auto;\n  const shouldQueryProvideMEPMetricParams =\n    canUseMEP && metricSettingState === MEPState.metricsOnly;\n  const shouldQueryProvideMEPTransactionParams =\n    canUseMEP && metricSettingState === MEPState.transactionsOnly;\n\n  const memoizationKey = `${metricSettingState}`;\n\n  return (\n    <_MEPSettingProvider\n      value={{\n        autoSampleState,\n        metricSettingState,\n        shouldQueryProvideMEPAutoParams,\n        shouldQueryProvideMEPMetricParams,\n        shouldQueryProvideMEPTransactionParams,\n        memoizationKey,\n        setMetricSettingState,\n        setAutoSampleState,\n      }}\n    >\n      {children}\n    </_MEPSettingProvider>\n  );\n};\n\nexport const useMEPSettingContext = _useMEPSettingContext;\n","import {Location} from 'history';\n\nimport {COL_WIDTH_UNDEFINED} from 'sentry/components/gridEditable';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport {NewQuery, Organization, Project, SelectValue} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  MEPState,\n  METRIC_SEARCH_SETTING_PARAM,\n  METRIC_SETTING_PARAM,\n} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getCurrentTrendParameter} from 'sentry/views/performance/trends/utils';\n\nimport {getCurrentLandingDisplay, LandingDisplayField} from './landing/utils';\nimport {\n  getVitalDetailTableMehStatusFunction,\n  getVitalDetailTablePoorStatusFunction,\n  vitalNameFromLocation,\n} from './vitalDetail/utils';\n\nexport const DEFAULT_STATS_PERIOD = '24h';\nexport const DEFAULT_PROJECT_THRESHOLD_METRIC = 'duration';\nexport const DEFAULT_PROJECT_THRESHOLD = 300;\n\nexport const COLUMN_TITLES = [\n  'transaction',\n  'project',\n  'tpm',\n  'p50',\n  'p95',\n  'failure rate',\n  'apdex',\n  'users',\n  'user misery',\n];\n\nexport enum PERFORMANCE_TERM {\n  TPM = 'tpm',\n  THROUGHPUT = 'throughput',\n  FAILURE_RATE = 'failureRate',\n  P50 = 'p50',\n  P75 = 'p75',\n  P95 = 'p95',\n  P99 = 'p99',\n  LCP = 'lcp',\n  FCP = 'fcp',\n  FID = 'fid',\n  CLS = 'cls',\n  STATUS_BREAKDOWN = 'statusBreakdown',\n  DURATION_DISTRIBUTION = 'durationDistribution',\n  USER_MISERY = 'userMisery',\n  APDEX = 'apdex',\n  APP_START_COLD = 'appStartCold',\n  APP_START_WARM = 'appStartWarm',\n  SLOW_FRAMES = 'slowFrames',\n  FROZEN_FRAMES = 'frozenFrames',\n  STALL_PERCENTAGE = 'stallPercentage',\n  MOST_ISSUES = 'mostIssues',\n  MOST_ERRORS = 'mostErrors',\n  SLOW_HTTP_SPANS = 'slowHTTPSpans',\n}\n\nexport type TooltipOption = SelectValue<string> & {\n  tooltip: string;\n};\n\nexport function getAxisOptions(organization: Organization): TooltipOption[] {\n  return [\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APDEX),\n      value: 'apdex()',\n      label: t('Apdex'),\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.TPM),\n      value: 'tpm()',\n      label: t('Transactions Per Minute'),\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE),\n      value: 'failure_rate()',\n      label: t('Failure Rate'),\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P50),\n      value: 'p50()',\n      label: t('p50 Duration'),\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P95),\n      value: 'p95()',\n      label: t('p95 Duration'),\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P99),\n      value: 'p99()',\n      label: t('p99 Duration'),\n    },\n  ];\n}\n\nexport type AxisOption = TooltipOption & {\n  field: string;\n  label: string;\n  backupOption?: AxisOption;\n  isDistribution?: boolean;\n  isLeftDefault?: boolean;\n  isRightDefault?: boolean;\n};\n\nexport function getFrontendAxisOptions(organization: Organization): AxisOption[] {\n  return [\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.LCP),\n      value: `p75(lcp)`,\n      label: t('LCP p75'),\n      field: 'p75(measurements.lcp)',\n      isLeftDefault: true,\n      backupOption: {\n        tooltip: getTermHelp(organization, PERFORMANCE_TERM.FCP),\n        value: `p75(fcp)`,\n        label: t('FCP p75'),\n        field: 'p75(measurements.fcp)',\n      },\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n      value: 'lcp_distribution',\n      label: t('LCP Distribution'),\n      field: 'measurements.lcp',\n      isDistribution: true,\n      isRightDefault: true,\n      backupOption: {\n        tooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n        value: 'fcp_distribution',\n        label: t('FCP Distribution'),\n        field: 'measurements.fcp',\n        isDistribution: true,\n      },\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.TPM),\n      value: 'tpm()',\n      label: t('Transactions Per Minute'),\n      field: 'tpm()',\n    },\n  ];\n}\n\nexport function getFrontendOtherAxisOptions(organization: Organization): AxisOption[] {\n  return [\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P50),\n      value: `p50()`,\n      label: t('Duration p50'),\n      field: 'p50(transaction.duration)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P75),\n      value: `p75()`,\n      label: t('Duration p75'),\n      field: 'p75(transaction.duration)',\n      isLeftDefault: true,\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P95),\n      value: `p95()`,\n      label: t('Duration p95'),\n      field: 'p95(transaction.duration)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n      value: 'duration_distribution',\n      label: t('Duration Distribution'),\n      field: 'transaction.duration',\n      isDistribution: true,\n      isRightDefault: true,\n    },\n  ];\n}\n\nexport function getBackendAxisOptions(organization: Organization): AxisOption[] {\n  return [\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P50),\n      value: `p50()`,\n      label: t('Duration p50'),\n      field: 'p50(transaction.duration)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P75),\n      value: `p75()`,\n      label: t('Duration p75'),\n      field: 'p75(transaction.duration)',\n      isLeftDefault: true,\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P95),\n      value: `p95()`,\n      label: t('Duration p95'),\n      field: 'p95(transaction.duration)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P99),\n      value: `p99()`,\n      label: t('Duration p99'),\n      field: 'p99(transaction.duration)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.TPM),\n      value: 'tpm()',\n      label: t('Transactions Per Minute'),\n      field: 'tpm()',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE),\n      value: 'failure_rate()',\n      label: t('Failure Rate'),\n      field: 'failure_rate()',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n      value: 'duration_distribution',\n      label: t('Duration Distribution'),\n      field: 'transaction.duration',\n      isDistribution: true,\n      isRightDefault: true,\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APDEX),\n      value: 'apdex()',\n      label: t('Apdex'),\n      field: 'apdex()',\n    },\n  ];\n}\n\nexport function getMobileAxisOptions(organization: Organization): AxisOption[] {\n  return [\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_COLD),\n      value: `p50(measurements.app_start_cold)`,\n      label: t('Cold Start Duration p50'),\n      field: 'p50(measurements.app_start_cold)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_COLD),\n      value: `p75(measurements.app_start_cold)`,\n      label: t('Cold Start Duration p75'),\n      field: 'p75(measurements.app_start_cold)',\n      isLeftDefault: true,\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_COLD),\n      value: `p95(measurements.app_start_cold)`,\n      label: t('Cold Start Duration p95'),\n      field: 'p95(measurements.app_start_cold)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_COLD),\n      value: `p99(measurements.app_start_cold)`,\n      label: t('Cold Start Duration p99'),\n      field: 'p99(measurements.app_start_cold)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n      value: 'app_start_cold_distribution',\n      label: t('Cold Start Distribution'),\n      field: 'measurements.app_start_cold',\n      isDistribution: true,\n      isRightDefault: true,\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_WARM),\n      value: `p50(measurements.app_start_warm)`,\n      label: t('Warm Start Duration p50'),\n      field: 'p50(measurements.app_start_warm)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_WARM),\n      value: `p75(measurements.app_start_warm)`,\n      label: t('Warm Start Duration p75'),\n      field: 'p75(measurements.app_start_warm)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_WARM),\n      value: `p95(measurements.app_start_warm)`,\n      label: t('Warm Start Duration p95'),\n      field: 'p95(measurements.app_start_warm)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_WARM),\n      value: `p99(measurements.app_start_warm)`,\n      label: t('Warm Start Duration p99'),\n      field: 'p99(measurements.app_start_warm)',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n      value: 'app_start_warm_distribution',\n      label: t('Warm Start Distribution'),\n      field: 'measurements.app_start_warm',\n      isDistribution: true,\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.TPM),\n      value: 'tpm()',\n      label: t('Transactions Per Minute'),\n      field: 'tpm()',\n    },\n    {\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE),\n      value: 'failure_rate()',\n      label: t('Failure Rate'),\n      field: 'failure_rate()',\n    },\n  ];\n}\n\ntype TermFormatter = (organization: Organization) => string;\n\nexport const PERFORMANCE_TERMS: Record<PERFORMANCE_TERM, TermFormatter> = {\n  tpm: () => t('TPM is the number of recorded transaction events per minute.'),\n  throughput: () =>\n    t('Throughput is the number of recorded transaction events per minute.'),\n  failureRate: () =>\n    t(\n      'Failure rate is the percentage of recorded transactions that had a known and unsuccessful status.'\n    ),\n  p50: () => t('p50 indicates the duration that 50% of transactions are faster than.'),\n  p75: () => t('p75 indicates the duration that 75% of transactions are faster than.'),\n  p95: () => t('p95 indicates the duration that 95% of transactions are faster than.'),\n  p99: () => t('p99 indicates the duration that 99% of transactions are faster than.'),\n  lcp: () =>\n    t('Largest contentful paint (LCP) is a web vital meant to represent user load times'),\n  fcp: () =>\n    t('First contentful paint (FCP) is a web vital meant to represent user load times'),\n  fid: () =>\n    t(\n      'First input delay (FID) is a web vital representing load for the first user interaction on a page.'\n    ),\n  cls: () =>\n    t(\n      'Cumulative layout shift (CLS) is a web vital measuring unexpected visual shifting a user experiences.'\n    ),\n  statusBreakdown: () =>\n    t(\n      'The breakdown of transaction statuses. This may indicate what type of failure it is.'\n    ),\n  durationDistribution: () =>\n    t(\n      'Distribution buckets counts of transactions at specifics times for your current date range'\n    ),\n  userMisery: () =>\n    t(\n      \"User Misery is a score that represents the number of unique users who have experienced load times 4x the project's configured threshold. Adjust project threshold in project performance settings.\"\n    ),\n  apdex: () =>\n    t(\n      'Apdex is the ratio of both satisfactory and tolerable response times to all response times. To adjust the tolerable threshold, go to project performance settings.'\n    ),\n  appStartCold: () =>\n    t('Cold start is a measure of the application start up time from scratch.'),\n  appStartWarm: () =>\n    t('Warm start is a measure of the application start up time while still in memory.'),\n  slowFrames: () => t('The count of the number of slow frames in the transaction.'),\n  frozenFrames: () => t('The count of the number of frozen frames in the transaction.'),\n  mostErrors: () => t('Transactions with the most associated errors.'),\n  mostIssues: () => t('The most instances of an issue for a related transaction.'),\n  slowHTTPSpans: () => t('The transactions with the slowest spans of a certain type.'),\n  stallPercentage: () =>\n    t(\n      'The percentage of the transaction duration in which the application is in a stalled state.'\n    ),\n};\n\nexport function getTermHelp(\n  organization: Organization,\n  term: keyof typeof PERFORMANCE_TERMS\n): string {\n  if (!PERFORMANCE_TERMS.hasOwnProperty(term)) {\n    return '';\n  }\n  return PERFORMANCE_TERMS[term](organization);\n}\n\nfunction shouldAddDefaultConditions(location: Location) {\n  const {query} = location;\n  const searchQuery = decodeScalar(query.query, '');\n  const isDefaultQuery = decodeScalar(query.isDefaultQuery);\n  return !searchQuery && isDefaultQuery !== 'false';\n}\n\nfunction isUsingLimitedSearch(location: Location, withStaticFilters: boolean) {\n  const {query} = location;\n  const mepSearchState = decodeScalar(query[METRIC_SEARCH_SETTING_PARAM], '');\n  const mepSettingState = decodeScalar(query[METRIC_SETTING_PARAM], ''); // TODO: Can be removed since it's for dev ui only.\n  return (\n    withStaticFilters &&\n    (mepSearchState === MEPState.metricsOnly || mepSettingState === MEPState.metricsOnly)\n  );\n}\n\nfunction generateGenericPerformanceEventView(\n  location: Location,\n  withStaticFilters: boolean\n): EventView {\n  const {query} = location;\n\n  const fields = [\n    'team_key_transaction',\n    'transaction',\n    'project',\n    'tpm()',\n    'p50()',\n    'p95()',\n    'failure_rate()',\n    'apdex()',\n    'count_unique(user)',\n    'count_miserable(user)',\n    'user_misery()',\n  ];\n\n  const hasStartAndEnd = query.start && query.end;\n  const savedQuery: NewQuery = {\n    id: undefined,\n    name: t('Performance'),\n    query: 'event.type:transaction',\n    projects: [],\n    fields,\n    version: 2,\n  };\n\n  const widths = Array(savedQuery.fields.length).fill(COL_WIDTH_UNDEFINED);\n  widths[savedQuery.fields.length - 1] = '110';\n  savedQuery.widths = widths;\n\n  if (!query.statsPeriod && !hasStartAndEnd) {\n    savedQuery.range = DEFAULT_STATS_PERIOD;\n  }\n  savedQuery.orderby = decodeScalar(query.sort, '-tpm');\n\n  const searchQuery = decodeScalar(query.query, '');\n  const conditions = new MutableSearch(searchQuery);\n  const isLimitedSearch = isUsingLimitedSearch(location, withStaticFilters);\n\n  // This is not an override condition since we want the duration to appear in the search bar as a default.\n  if (shouldAddDefaultConditions(location) && !withStaticFilters) {\n    conditions.setFilterValues('transaction.duration', ['<15m']);\n  }\n\n  // If there is a bare text search, we want to treat it as a search\n  // on the transaction name.\n  if (conditions.freeText.length > 0) {\n    const parsedFreeText = isLimitedSearch\n      ? decodeScalar(conditions.freeText, '')\n      : conditions.freeText.join(' ');\n\n    if (isLimitedSearch) {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`${parsedFreeText}`], false);\n    } else {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`*${parsedFreeText}*`], false);\n    }\n    conditions.freeText = [];\n  }\n  savedQuery.query = conditions.formatString();\n\n  const eventView = EventView.fromNewQueryWithLocation(savedQuery, location);\n  eventView.additionalConditions.addFilterValues('event.type', ['transaction']);\n\n  if (query.trendParameter) {\n    // projects and projectIds are not necessary here since trendParameter will always\n    // be present in location and will not be determined based on the project type\n    const trendParameter = getCurrentTrendParameter(location, [], []);\n    if (Boolean(WEB_VITAL_DETAILS[trendParameter.column])) {\n      eventView.additionalConditions.addFilterValues('has', [trendParameter.column]);\n    }\n  }\n\n  return eventView;\n}\n\nfunction generateBackendPerformanceEventView(\n  location: Location,\n  withStaticFilters: boolean\n): EventView {\n  const {query} = location;\n\n  const fields = [\n    'team_key_transaction',\n    'transaction',\n    'project',\n    'transaction.op',\n    'http.method',\n    'tpm()',\n    'p50()',\n    'p95()',\n    'failure_rate()',\n    'apdex()',\n    'count_unique(user)',\n    'count_miserable(user)',\n    'user_misery()',\n  ];\n\n  const hasStartAndEnd = query.start && query.end;\n  const savedQuery: NewQuery = {\n    id: undefined,\n    name: t('Performance'),\n    query: 'event.type:transaction',\n    projects: [],\n    fields,\n    version: 2,\n  };\n\n  const widths = Array(savedQuery.fields.length).fill(COL_WIDTH_UNDEFINED);\n  widths[savedQuery.fields.length - 1] = '110';\n  savedQuery.widths = widths;\n\n  if (!query.statsPeriod && !hasStartAndEnd) {\n    savedQuery.range = DEFAULT_STATS_PERIOD;\n  }\n  savedQuery.orderby = decodeScalar(query.sort, '-tpm');\n\n  const searchQuery = decodeScalar(query.query, '');\n  const conditions = new MutableSearch(searchQuery);\n  const isLimitedSearch = isUsingLimitedSearch(location, withStaticFilters);\n\n  // This is not an override condition since we want the duration to appear in the search bar as a default.\n  if (shouldAddDefaultConditions(location) && !withStaticFilters) {\n    conditions.setFilterValues('transaction.duration', ['<15m']);\n  }\n\n  // If there is a bare text search, we want to treat it as a search\n  // on the transaction name.\n  if (conditions.freeText.length > 0) {\n    const parsedFreeText = isLimitedSearch\n      ? decodeScalar(conditions.freeText, '')\n      : conditions.freeText.join(' ');\n\n    if (isLimitedSearch) {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`${parsedFreeText}`], false);\n    } else {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`*${parsedFreeText}*`], false);\n    }\n    conditions.freeText = [];\n  }\n  savedQuery.query = conditions.formatString();\n\n  const eventView = EventView.fromNewQueryWithLocation(savedQuery, location);\n\n  eventView.additionalConditions.addFilterValues('event.type', ['transaction']);\n\n  return eventView;\n}\n\nfunction generateMobilePerformanceEventView(\n  location: Location,\n  projects: Project[],\n  genericEventView: EventView,\n  withStaticFilters: boolean\n): EventView {\n  const {query} = location;\n\n  const fields = [\n    'team_key_transaction',\n    'transaction',\n    'project',\n    'transaction.op',\n    'tpm()',\n    'p75(measurements.frames_slow_rate)',\n    'p75(measurements.frames_frozen_rate)',\n  ];\n\n  // At this point, all projects are mobile projects.\n  // If in addition to that, all projects are react-native projects,\n  // then show the stall percentage as well.\n  const projectIds = genericEventView.project;\n  if (projectIds.length > 0 && projectIds[0] !== ALL_ACCESS_PROJECTS) {\n    const selectedProjects = projects.filter(p =>\n      projectIds.includes(parseInt(p.id, 10))\n    );\n    if (\n      selectedProjects.length > 0 &&\n      selectedProjects.every(project => project.platform === 'react-native')\n    ) {\n      fields.push('p75(measurements.stall_percentage)');\n    }\n  }\n\n  const hasStartAndEnd = query.start && query.end;\n  const savedQuery: NewQuery = {\n    id: undefined,\n    name: t('Performance'),\n    query: 'event.type:transaction',\n    projects: [],\n    fields: [...fields, 'count_unique(user)', 'count_miserable(user)', 'user_misery()'],\n    version: 2,\n  };\n\n  const widths = Array(savedQuery.fields.length).fill(COL_WIDTH_UNDEFINED);\n  widths[savedQuery.fields.length - 1] = '110';\n  savedQuery.widths = widths;\n\n  if (!query.statsPeriod && !hasStartAndEnd) {\n    savedQuery.range = DEFAULT_STATS_PERIOD;\n  }\n  savedQuery.orderby = decodeScalar(query.sort, '-tpm');\n\n  const searchQuery = decodeScalar(query.query, '');\n  const conditions = new MutableSearch(searchQuery);\n  const isLimitedSearch = isUsingLimitedSearch(location, withStaticFilters);\n\n  // This is not an override condition since we want the duration to appear in the search bar as a default.\n  if (shouldAddDefaultConditions(location) && !withStaticFilters) {\n    conditions.setFilterValues('transaction.duration', ['<15m']);\n  }\n\n  // If there is a bare text search, we want to treat it as a search\n  // on the transaction name.\n  if (conditions.freeText.length > 0) {\n    const parsedFreeText = isLimitedSearch\n      ? // pick first element to search transactions by name\n        decodeScalar(conditions.freeText, '')\n      : conditions.freeText.join(' ');\n\n    if (isLimitedSearch) {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`${parsedFreeText}`], false);\n    } else {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`*${parsedFreeText}*`], false);\n    }\n    conditions.freeText = [];\n  }\n  savedQuery.query = conditions.formatString();\n\n  const eventView = EventView.fromNewQueryWithLocation(savedQuery, location);\n\n  eventView.additionalConditions.addFilterValues('event.type', ['transaction']);\n\n  return eventView;\n}\n\nfunction generateFrontendPageloadPerformanceEventView(\n  location: Location,\n  withStaticFilters: boolean\n): EventView {\n  const {query} = location;\n\n  const fields = [\n    'team_key_transaction',\n    'transaction',\n    'project',\n    'tpm()',\n    'p75(measurements.fcp)',\n    'p75(measurements.lcp)',\n    'p75(measurements.fid)',\n    'p75(measurements.cls)',\n    'count_unique(user)',\n    'count_miserable(user)',\n    'user_misery()',\n  ];\n\n  const hasStartAndEnd = query.start && query.end;\n  const savedQuery: NewQuery = {\n    id: undefined,\n    name: t('Performance'),\n    query: 'event.type:transaction',\n    projects: [],\n    fields,\n    version: 2,\n  };\n\n  const widths = Array(savedQuery.fields.length).fill(COL_WIDTH_UNDEFINED);\n  widths[savedQuery.fields.length - 1] = '110';\n  savedQuery.widths = widths;\n\n  if (!query.statsPeriod && !hasStartAndEnd) {\n    savedQuery.range = DEFAULT_STATS_PERIOD;\n  }\n  savedQuery.orderby = decodeScalar(query.sort, '-tpm');\n\n  const searchQuery = decodeScalar(query.query, '');\n  const conditions = new MutableSearch(searchQuery);\n  const isLimitedSearch = isUsingLimitedSearch(location, withStaticFilters);\n\n  // This is not an override condition since we want the duration to appear in the search bar as a default.\n  if (shouldAddDefaultConditions(location) && !withStaticFilters) {\n    conditions.setFilterValues('transaction.duration', ['<15m']);\n  }\n\n  // If there is a bare text search, we want to treat it as a search\n  // on the transaction name.\n  if (conditions.freeText.length > 0) {\n    const parsedFreeText = isLimitedSearch\n      ? // pick first element to search transactions by name\n        decodeScalar(conditions.freeText, '')\n      : conditions.freeText.join(' ');\n\n    if (isLimitedSearch) {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`${parsedFreeText}`], false);\n    } else {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`*${parsedFreeText}*`], false);\n    }\n    conditions.freeText = [];\n  }\n  savedQuery.query = conditions.formatString();\n\n  const eventView = EventView.fromNewQueryWithLocation(savedQuery, location);\n\n  eventView.additionalConditions.addFilterValues('event.type', ['transaction']);\n  eventView.additionalConditions.addFilterValues('transaction.op', ['pageload']);\n\n  return eventView;\n}\n\nfunction generateFrontendOtherPerformanceEventView(\n  location: Location,\n  withStaticFilters: boolean\n): EventView {\n  const {query} = location;\n\n  const fields = [\n    'team_key_transaction',\n    'transaction',\n    'project',\n    'transaction.op',\n    'tpm()',\n    'p50(transaction.duration)',\n    'p75(transaction.duration)',\n    'p95(transaction.duration)',\n    'count_unique(user)',\n    'count_miserable(user)',\n    'user_misery()',\n  ];\n\n  const hasStartAndEnd = query.start && query.end;\n  const savedQuery: NewQuery = {\n    id: undefined,\n    name: t('Performance'),\n    query: 'event.type:transaction',\n    projects: [],\n    fields,\n    version: 2,\n  };\n\n  const widths = Array(savedQuery.fields.length).fill(COL_WIDTH_UNDEFINED);\n  widths[savedQuery.fields.length - 1] = '110';\n  savedQuery.widths = widths;\n\n  if (!query.statsPeriod && !hasStartAndEnd) {\n    savedQuery.range = DEFAULT_STATS_PERIOD;\n  }\n  savedQuery.orderby = decodeScalar(query.sort, '-tpm');\n\n  const searchQuery = decodeScalar(query.query, '');\n  const conditions = new MutableSearch(searchQuery);\n  const isLimitedSearch = isUsingLimitedSearch(location, withStaticFilters);\n\n  // This is not an override condition since we want the duration to appear in the search bar as a default.\n  if (shouldAddDefaultConditions(location) && !withStaticFilters) {\n    conditions.setFilterValues('transaction.duration', ['<15m']);\n  }\n\n  // If there is a bare text search, we want to treat it as a search\n  // on the transaction name.\n  if (conditions.freeText.length > 0 && !isLimitedSearch) {\n    const parsedFreeText = isLimitedSearch\n      ? // pick first element to search transactions by name\n        decodeScalar(conditions.freeText, '')\n      : conditions.freeText.join(' ');\n\n    if (isLimitedSearch) {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`${parsedFreeText}`], false);\n    } else {\n      // the query here is a user entered condition, no need to escape it\n      conditions.setFilterValues('transaction', [`*${parsedFreeText}*`], false);\n    }\n\n    conditions.freeText = [];\n  }\n  savedQuery.query = conditions.formatString();\n\n  const eventView = EventView.fromNewQueryWithLocation(savedQuery, location);\n\n  eventView.additionalConditions.addFilterValues('event.type', ['transaction']);\n\n  return eventView;\n}\n\nexport function generatePerformanceEventView(\n  location: Location,\n  projects: Project[],\n  {isTrends = false, withStaticFilters = false} = {}\n) {\n  const eventView = generateGenericPerformanceEventView(location, withStaticFilters);\n  if (isTrends) {\n    return eventView;\n  }\n\n  const display = getCurrentLandingDisplay(location, projects, eventView);\n  switch (display?.field) {\n    case LandingDisplayField.FRONTEND_PAGELOAD:\n      return generateFrontendPageloadPerformanceEventView(location, withStaticFilters);\n    case LandingDisplayField.FRONTEND_OTHER:\n      return generateFrontendOtherPerformanceEventView(location, withStaticFilters);\n    case LandingDisplayField.BACKEND:\n      return generateBackendPerformanceEventView(location, withStaticFilters);\n    case LandingDisplayField.MOBILE:\n      return generateMobilePerformanceEventView(\n        location,\n        projects,\n        eventView,\n        withStaticFilters\n      );\n    default:\n      return eventView;\n  }\n}\n\nexport function generatePerformanceVitalDetailView(location: Location): EventView {\n  const {query} = location;\n\n  const vitalName = vitalNameFromLocation(location);\n\n  const hasStartAndEnd = query.start && query.end;\n  const savedQuery: NewQuery = {\n    id: undefined,\n    name: t('Vitals Performance Details'),\n    query: 'event.type:transaction',\n    projects: [],\n    fields: [\n      'team_key_transaction',\n      'transaction',\n      'project',\n      'count_unique(user)',\n      'count()',\n      `p50(${vitalName})`,\n      `p75(${vitalName})`,\n      `p95(${vitalName})`,\n      getVitalDetailTablePoorStatusFunction(vitalName),\n      getVitalDetailTableMehStatusFunction(vitalName),\n    ],\n    version: 2,\n    yAxis: [`p75(${vitalName})`],\n  };\n\n  if (!query.statsPeriod && !hasStartAndEnd) {\n    savedQuery.range = DEFAULT_STATS_PERIOD;\n  }\n  savedQuery.orderby = decodeScalar(query.sort, '-count');\n\n  const searchQuery = decodeScalar(query.query, '');\n  const conditions = new MutableSearch(searchQuery);\n\n  // If there is a bare text search, we want to treat it as a search\n  // on the transaction name.\n  if (conditions.freeText.length > 0) {\n    // the query here is a user entered condition, no need to escape it\n    conditions.setFilterValues(\n      'transaction',\n      [`*${conditions.freeText.join(' ')}*`],\n      false\n    );\n    conditions.freeText = [];\n  }\n  conditions.setFilterValues('event.type', ['transaction']);\n  savedQuery.query = conditions.formatString();\n\n  const eventView = EventView.fromNewQueryWithLocation(savedQuery, location);\n\n  eventView.additionalConditions.addFilterValues('event.type', ['transaction']);\n  eventView.additionalConditions.addFilterValues('has', [vitalName]);\n\n  return eventView;\n}\n","import {browserHistory} from 'react-router';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  formatAbbreviatedNumber,\n  formatFloat,\n  formatPercentage,\n  getDuration,\n} from 'sentry/utils/formatters';\nimport {HistogramData} from 'sentry/utils/performance/histogram/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {AxisOption, getTermHelp, PERFORMANCE_TERM} from '../data';\nimport {Rectangle} from '../transactionSummary/transactionVitals/types';\nimport {platformToPerformanceType, PROJECT_PERFORMANCE_TYPE} from '../utils';\n\nexport const LEFT_AXIS_QUERY_KEY = 'left';\nexport const RIGHT_AXIS_QUERY_KEY = 'right';\n\ntype LandingDisplay = {\n  field: LandingDisplayField;\n  label: string;\n};\n\nexport enum LandingDisplayField {\n  ALL = 'all',\n  FRONTEND_PAGELOAD = 'frontend_pageload',\n  FRONTEND_OTHER = 'frontend_other',\n  BACKEND = 'backend',\n  MOBILE = 'mobile',\n}\n\nexport const LANDING_DISPLAYS = [\n  {\n    label: 'All Transactions',\n    field: LandingDisplayField.ALL,\n  },\n  {\n    label: 'Web Vitals',\n    field: LandingDisplayField.FRONTEND_PAGELOAD,\n  },\n  {\n    label: 'Frontend',\n    field: LandingDisplayField.FRONTEND_OTHER,\n  },\n  {\n    label: 'Backend',\n    field: LandingDisplayField.BACKEND,\n  },\n  {\n    label: 'Mobile',\n    field: LandingDisplayField.MOBILE,\n  },\n];\n\nexport function excludeTransaction(\n  transaction: string | React.ReactText,\n  props: {eventView: EventView; location: Location}\n) {\n  const {eventView, location} = props;\n\n  const searchConditions = new MutableSearch(eventView.query);\n  searchConditions.addFilterValues('!transaction', [`${transaction}`]);\n\n  browserHistory.push({\n    pathname: location.pathname,\n    query: {\n      ...location.query,\n      cursor: undefined,\n      query: searchConditions.formatString(),\n    },\n  });\n}\n\nexport function getLandingDisplayFromParam(location: Location) {\n  const landingField = decodeScalar(location?.query?.landingDisplay);\n\n  const display = LANDING_DISPLAYS.find(({field}) => field === landingField);\n  return display;\n}\n\nexport function getDefaultDisplayForPlatform(projects: Project[], eventView?: EventView) {\n  const defaultDisplayField = getDefaultDisplayFieldForPlatform(projects, eventView);\n\n  const defaultDisplay = LANDING_DISPLAYS.find(\n    ({field}) => field === defaultDisplayField\n  );\n  return defaultDisplay || LANDING_DISPLAYS[0];\n}\n\nexport function getCurrentLandingDisplay(\n  location: Location,\n  projects: Project[],\n  eventView?: EventView\n): LandingDisplay {\n  const display = getLandingDisplayFromParam(location);\n  if (display) {\n    return display;\n  }\n\n  return getDefaultDisplayForPlatform(projects, eventView);\n}\n\nexport function handleLandingDisplayChange(\n  field: LandingDisplayField,\n  location: Location,\n  projects: Project[],\n  organization: Organization,\n  eventView?: EventView\n) {\n  // Transaction op can affect the display and show no results if it is explicitly set.\n  const query = decodeScalar(location.query.query, '');\n  const searchConditions = new MutableSearch(query);\n  searchConditions.removeFilter('transaction.op');\n\n  const queryWithConditions = {\n    ...omit(location.query, ['landingDisplay', 'sort']),\n    query: searchConditions.formatString(),\n  };\n\n  delete queryWithConditions[LEFT_AXIS_QUERY_KEY];\n  delete queryWithConditions[RIGHT_AXIS_QUERY_KEY];\n\n  const defaultDisplay = getDefaultDisplayFieldForPlatform(projects, eventView);\n  const currentDisplay = getCurrentLandingDisplay(location, projects, eventView).field;\n\n  const newQuery: {query: string; landingDisplay?: LandingDisplayField} =\n    defaultDisplay === field\n      ? {...queryWithConditions}\n      : {...queryWithConditions, landingDisplay: field};\n\n  trackAdvancedAnalyticsEvent('performance_views.landingv3.display_change', {\n    organization,\n    change_to_display: field,\n    default_display: defaultDisplay,\n    current_display: currentDisplay,\n    is_default: defaultDisplay === currentDisplay,\n  });\n\n  browserHistory.push({\n    pathname: location.pathname,\n    query: newQuery,\n  });\n}\n\nexport function getChartWidth(chartData: HistogramData, refPixelRect: Rectangle | null) {\n  const distance = refPixelRect ? refPixelRect.point2.x - refPixelRect.point1.x : 0;\n  const chartWidth = chartData.length * distance;\n\n  return {\n    chartWidth,\n  };\n}\n\nexport function getDefaultDisplayFieldForPlatform(\n  projects: Project[],\n  eventView?: EventView\n) {\n  if (!eventView) {\n    return LandingDisplayField.ALL;\n  }\n  const projectIds = eventView.project;\n\n  const performanceTypeToDisplay = {\n    [PROJECT_PERFORMANCE_TYPE.ANY]: LandingDisplayField.ALL,\n    [PROJECT_PERFORMANCE_TYPE.FRONTEND]: LandingDisplayField.FRONTEND_PAGELOAD,\n    [PROJECT_PERFORMANCE_TYPE.BACKEND]: LandingDisplayField.BACKEND,\n    [PROJECT_PERFORMANCE_TYPE.MOBILE]: LandingDisplayField.MOBILE,\n  };\n  const performanceType = platformToPerformanceType(projects, projectIds);\n  const landingField =\n    performanceTypeToDisplay[performanceType] ?? LandingDisplayField.ALL;\n  return landingField;\n}\n\ntype VitalCardDetail = {\n  formatter: (value: number) => string | number;\n  title: string;\n  tooltip: string;\n};\n\nexport const vitalCardDetails = (\n  organization: Organization\n): {[key: string]: VitalCardDetail | undefined} => {\n  return {\n    'p75(transaction.duration)': {\n      title: t('Duration (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P75),\n      formatter: value => getDuration(value / 1000, value >= 1000 ? 3 : 0, true),\n    },\n    'tpm()': {\n      title: t('Throughput'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.THROUGHPUT),\n      formatter: formatAbbreviatedNumber,\n    },\n    'failure_rate()': {\n      title: t('Failure Rate'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE),\n      formatter: value => formatPercentage(value, 2),\n    },\n    'apdex()': {\n      title: t('Apdex'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APDEX),\n      formatter: value => formatFloat(value, 4),\n    },\n    'p75(measurements.frames_slow_rate)': {\n      title: t('Slow Frames (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_FRAMES),\n      formatter: value => formatPercentage(value, 2),\n    },\n    'p75(measurements.frames_frozen_rate)': {\n      title: t('Frozen Frames (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.FROZEN_FRAMES),\n      formatter: value => formatPercentage(value, 2),\n    },\n    'p75(measurements.app_start_cold)': {\n      title: t('Cold Start (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_COLD),\n      formatter: value => getDuration(value / 1000, value >= 1000 ? 3 : 0, true),\n    },\n    'p75(measurements.app_start_warm)': {\n      title: t('Warm Start (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_WARM),\n      formatter: value => getDuration(value / 1000, value >= 1000 ? 3 : 0, true),\n    },\n    'p75(measurements.stall_percentage)': {\n      title: t('Stall Percentage (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.STALL_PERCENTAGE),\n      formatter: value => formatPercentage(value, 2),\n    },\n  };\n};\n\nexport function getDisplayAxes(options: AxisOption[], location: Location) {\n  const leftDefault = options.find(opt => opt.isLeftDefault) || options[0];\n  const rightDefault = options.find(opt => opt.isRightDefault) || options[1];\n\n  const leftAxis =\n    options.find(opt => opt.value === location.query[LEFT_AXIS_QUERY_KEY]) || leftDefault;\n  const rightAxis =\n    options.find(opt => opt.value === location.query[RIGHT_AXIS_QUERY_KEY]) ||\n    rightDefault;\n  return {\n    leftAxis,\n    rightAxis,\n  };\n}\n\nexport function checkIsReactNative(eventView) {\n  // only react native should contain the stall percentage column\n  return Boolean(\n    eventView.getFields().find(field => field.includes('measurements.stall_percentage'))\n  );\n}\n"],"names":["useCallback","useReducer","browserHistory","localStorage","decodeScalar","useOrganization","createDefinedContext","_MEPSettingProvider","_useMEPSettingContext","_MEPSettingContext","name","MEPConsumer","Consumer","AutoSampleState","MEPState","METRIC_SETTING_PARAM","METRIC_SEARCH_SETTING_PARAM","storageKey","MEPSetting","get","value","getItem","removeItem","set","setItem","canUseMetricsDevUI","organization","features","includes","canUseMetricsData","isDevFlagOn","isInternalViewOn","samplingRolloutFlag","isRollingOut","MEPSettingProvider","children","location","_hasMEPState","forceTransactions","canUseMEP","allowedStates","metricsOnly","transactionsOnly","_metricSettingFromParam","query","defaultMetricsState","metricSettingFromParam","find","s","isControlledMEP","_metricSettingState","_setMetricSettingState","_","next","setMetricSettingState","settingState","replace","autoSampleState","setAutoSampleState","unset","metricSettingState","shouldQueryProvideMEPAutoParams","auto","shouldQueryProvideMEPMetricParams","shouldQueryProvideMEPTransactionParams","memoizationKey","useMEPSettingContext","COL_WIDTH_UNDEFINED","ALL_ACCESS_PROJECTS","t","EventView","WEB_VITAL_DETAILS","MutableSearch","getCurrentTrendParameter","getCurrentLandingDisplay","LandingDisplayField","getVitalDetailTableMehStatusFunction","getVitalDetailTablePoorStatusFunction","vitalNameFromLocation","DEFAULT_STATS_PERIOD","DEFAULT_PROJECT_THRESHOLD_METRIC","DEFAULT_PROJECT_THRESHOLD","COLUMN_TITLES","PERFORMANCE_TERM","getAxisOptions","tooltip","getTermHelp","APDEX","label","TPM","FAILURE_RATE","P50","P95","P99","getFrontendAxisOptions","LCP","field","isLeftDefault","backupOption","FCP","DURATION_DISTRIBUTION","isDistribution","isRightDefault","getFrontendOtherAxisOptions","P75","getBackendAxisOptions","getMobileAxisOptions","APP_START_COLD","APP_START_WARM","PERFORMANCE_TERMS","tpm","throughput","failureRate","p50","p75","p95","p99","lcp","fcp","fid","cls","statusBreakdown","durationDistribution","userMisery","apdex","appStartCold","appStartWarm","slowFrames","frozenFrames","mostErrors","mostIssues","slowHTTPSpans","stallPercentage","term","hasOwnProperty","shouldAddDefaultConditions","searchQuery","isDefaultQuery","isUsingLimitedSearch","withStaticFilters","mepSearchState","mepSettingState","generateGenericPerformanceEventView","fields","hasStartAndEnd","start","end","savedQuery","id","undefined","projects","version","widths","Array","length","fill","statsPeriod","range","orderby","sort","conditions","isLimitedSearch","setFilterValues","freeText","parsedFreeText","join","formatString","eventView","fromNewQueryWithLocation","additionalConditions","addFilterValues","trendParameter","Boolean","column","generateBackendPerformanceEventView","generateMobilePerformanceEventView","genericEventView","projectIds","project","selectedProjects","filter","p","parseInt","every","platform","push","generateFrontendPageloadPerformanceEventView","generateFrontendOtherPerformanceEventView","generatePerformanceEventView","isTrends","display","FRONTEND_PAGELOAD","FRONTEND_OTHER","BACKEND","MOBILE","generatePerformanceVitalDetailView","vitalName","yAxis","omit","trackAdvancedAnalyticsEvent","formatAbbreviatedNumber","formatFloat","formatPercentage","getDuration","platformToPerformanceType","PROJECT_PERFORMANCE_TYPE","LEFT_AXIS_QUERY_KEY","RIGHT_AXIS_QUERY_KEY","LANDING_DISPLAYS","ALL","excludeTransaction","transaction","props","searchConditions","pathname","cursor","getLandingDisplayFromParam","landingField","landingDisplay","getDefaultDisplayForPlatform","defaultDisplayField","getDefaultDisplayFieldForPlatform","defaultDisplay","handleLandingDisplayChange","removeFilter","queryWithConditions","currentDisplay","newQuery","change_to_display","default_display","current_display","is_default","getChartWidth","chartData","refPixelRect","distance","point2","x","point1","chartWidth","performanceTypeToDisplay","ANY","FRONTEND","performanceType","vitalCardDetails","title","formatter","THROUGHPUT","SLOW_FRAMES","FROZEN_FRAMES","STALL_PERCENTAGE","getDisplayAxes","options","leftDefault","opt","rightDefault","leftAxis","rightAxis","checkIsReactNative","getFields"],"sourceRoot":""}