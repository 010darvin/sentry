{"version":3,"file":"chunks/app_views_organizationIntegrations_abstractIntegrationDetailedView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/organizationIntegrations/abstractIntegrationDetailedView.tsx","webpack:///./app/views/organizationIntegrations/constants.tsx","webpack:///./app/views/organizationIntegrations/integrationRequest/RequestIntegrationButton.tsx","webpack:///./app/views/organizationIntegrations/integrationRequest/RequestIntegrationModal.tsx","webpack:///./app/views/organizationIntegrations/integrationStatus.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/breadcrumbTitle.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport startCase from 'lodash/startCase';\n\nimport Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel} from 'sentry/components/panels';\nimport Tag from 'sentry/components/tag';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconClose, IconDocs, IconGeneric, IconGithub, IconProject} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport PluginIcon from 'sentry/plugins/components/pluginIcon';\nimport space from 'sentry/styles/space';\nimport {\n  IntegrationFeature,\n  IntegrationInstallationStatus,\n  IntegrationType,\n  Organization,\n} from 'sentry/types';\nimport {\n  IntegrationAnalyticsKey,\n  IntegrationEventParameters,\n} from 'sentry/utils/analytics/integrations';\nimport {\n  getCategories,\n  getIntegrationFeatureGate,\n  trackIntegrationAnalytics,\n} from 'sentry/utils/integrationUtil';\nimport marked, {singleLineRenderer} from 'sentry/utils/marked';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport BreadcrumbTitle from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbTitle';\n\nimport RequestIntegrationButton from './integrationRequest/RequestIntegrationButton';\nimport IntegrationStatus from './integrationStatus';\n\ntype Tab = 'overview' | 'configurations';\n\ntype AlertType = React.ComponentProps<typeof Alert> & {\n  text: string;\n};\n\ntype State = {\n  tab: Tab;\n} & AsyncComponent['state'];\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{integrationSlug: string; orgId: string}, {}> &\n  AsyncComponent['props'];\n\nclass AbstractIntegrationDetailedView<\n  P extends Props = Props,\n  S extends State = State\n> extends AsyncComponent<P, S> {\n  tabs: Tab[] = ['overview', 'configurations'];\n\n  componentDidMount() {\n    const {location} = this.props;\n    const value = location.query.tab === 'configurations' ? 'configurations' : 'overview';\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({tab: value});\n  }\n\n  onLoadAllEndpointsSuccess() {\n    this.trackIntegrationAnalytics('integrations.integration_viewed', {\n      integration_tab: this.state.tab,\n    });\n  }\n\n  /**\n   * Abstract methods defined below\n   */\n\n  // The analytics type used in analytics which is snake case\n  get integrationType(): IntegrationType {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  get description(): string {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  get author(): string | undefined {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  get alerts(): AlertType[] {\n    // default is no alerts\n    return [];\n  }\n\n  // Returns a list of the resources displayed at the bottom of the overview card\n  get resourceLinks(): Array<{title: string; url: string}> {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  get installationStatus(): IntegrationInstallationStatus | null {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  get integrationName(): string {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  // Checks to see if integration requires admin access to install, doc integrations don't\n  get requiresAccess(): boolean {\n    // default is integration requires access to install\n    return true;\n  }\n\n  // Returns an array of RawIntegrationFeatures which is used in feature gating\n  // and displaying what the integration does\n  get featureData(): IntegrationFeature[] {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  getIcon(title: string) {\n    switch (title) {\n      case 'View Source':\n        return <IconProject />;\n      case 'Report Issue':\n        return <IconGithub />;\n      case 'Documentation':\n      case 'Splunk Setup Instructions':\n      case 'Trello Setup Instructions':\n        return <IconDocs />;\n      default:\n        return <IconGeneric />;\n    }\n  }\n\n  onTabChange = (value: Tab) => {\n    this.trackIntegrationAnalytics('integrations.integration_tab_clicked', {\n      integration_tab: value,\n    });\n    this.setState({tab: value});\n  };\n\n  // Returns the string that is shown as the title of a tab\n  getTabDisplay(tab: Tab): string {\n    // default is return the tab\n    return tab;\n  }\n\n  // Render the button at the top which is usually just an installation button\n  renderTopButton(\n    _disabledFromFeatures: boolean, // from the feature gate\n    _userHasAccess: boolean // from user permissions\n  ): React.ReactElement {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  // Returns the permission descriptions, only use by Sentry Apps\n  renderPermissions(): React.ReactElement | null {\n    // default is don't render permissions\n    return null;\n  }\n\n  renderEmptyConfigurations() {\n    return (\n      <Panel>\n        <EmptyMessage\n          title={t(\"You haven't set anything up yet\")}\n          description={t(\n            'But that doesn’t have to be the case for long! Add an installation to get started.'\n          )}\n          action={this.renderAddInstallButton(true)}\n        />\n      </Panel>\n    );\n  }\n\n  // Returns the list of configurations for the integration\n  renderConfigurations() {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * Actually implemented methods below\n   */\n\n  get integrationSlug() {\n    return this.props.params.integrationSlug;\n  }\n\n  // Wrapper around trackIntegrationAnalytics that automatically provides many fields and the org\n  trackIntegrationAnalytics = <T extends IntegrationAnalyticsKey>(\n    eventKey: IntegrationAnalyticsKey,\n    options?: Partial<IntegrationEventParameters[T]>\n  ) => {\n    options = options || {};\n    // If we use this intermediate type we get type checking on the things we care about\n    const params = {\n      view: 'integrations_directory_integration_detail',\n      integration: this.integrationSlug,\n      integration_type: this.integrationType,\n      already_installed: this.installationStatus !== 'Not Installed', // pending counts as installed here\n      organization: this.props.organization,\n      ...options,\n    };\n    trackIntegrationAnalytics(eventKey, params);\n  };\n\n  // Returns the props as needed by the hooks integrations:feature-gates\n  get featureProps() {\n    const {organization} = this.props;\n    const featureData = this.featureData;\n\n    // Prepare the features list\n    const features = featureData.map(f => ({\n      featureGate: f.featureGate,\n      description: (\n        <FeatureListItem\n          dangerouslySetInnerHTML={{__html: singleLineRenderer(f.description)}}\n        />\n      ),\n    }));\n\n    return {organization, features};\n  }\n\n  cleanTags() {\n    return getCategories(this.featureData);\n  }\n\n  renderAlert(): React.ReactNode {\n    return null;\n  }\n\n  renderAdditionalCTA(): React.ReactNode {\n    return null;\n  }\n\n  renderIntegrationIcon() {\n    return <PluginIcon pluginId={this.integrationSlug} size={50} />;\n  }\n\n  renderRequestIntegrationButton() {\n    return (\n      <RequestIntegrationButton\n        organization={this.props.organization}\n        name={this.integrationName}\n        slug={this.integrationSlug}\n        type={this.integrationType}\n      />\n    );\n  }\n\n  renderAddInstallButton(hideButtonIfDisabled = false) {\n    const {organization} = this.props;\n    const {IntegrationFeatures} = getIntegrationFeatureGate();\n\n    return (\n      <IntegrationFeatures {...this.featureProps}>\n        {({disabled, disabledReason}) => (\n          <DisableWrapper>\n            <Access organization={organization} access={['org:integrations']}>\n              {({hasAccess}) => (\n                <Tooltip\n                  title={t(\n                    'You must be an organization owner, manager or admin to install this.'\n                  )}\n                  disabled={hasAccess || !this.requiresAccess}\n                >\n                  {!hideButtonIfDisabled && disabled ? (\n                    <div />\n                  ) : (\n                    this.renderTopButton(disabled, hasAccess)\n                  )}\n                </Tooltip>\n              )}\n            </Access>\n            {disabled && <DisabledNotice reason={disabledReason} />}\n          </DisableWrapper>\n        )}\n      </IntegrationFeatures>\n    );\n  }\n\n  // Returns the content shown in the top section of the integration detail\n  renderTopSection() {\n    const tags = this.cleanTags();\n\n    return (\n      <TopSectionWrapper>\n        <Flex>\n          {this.renderIntegrationIcon()}\n          <NameContainer>\n            <Flex>\n              <Name>{this.integrationName}</Name>\n              <StatusWrapper>\n                {this.installationStatus && (\n                  <IntegrationStatus status={this.installationStatus} />\n                )}\n              </StatusWrapper>\n            </Flex>\n            <Flex>\n              {tags.map(feature => (\n                <StyledTag key={feature}>{startCase(feature)}</StyledTag>\n              ))}\n            </Flex>\n          </NameContainer>\n        </Flex>\n        <Flex>\n          {this.renderAddInstallButton()}\n          {this.renderAdditionalCTA()}\n        </Flex>\n      </TopSectionWrapper>\n    );\n  }\n\n  // Returns the tabs divider with the clickable tabs\n  renderTabs() {\n    // TODO: Convert to styled component\n    return (\n      <ul className=\"nav nav-tabs border-bottom\" style={{paddingTop: '30px'}}>\n        {this.tabs.map(tabName => (\n          <li\n            key={tabName}\n            className={this.state.tab === tabName ? 'active' : ''}\n            onClick={() => this.onTabChange(tabName)}\n          >\n            <CapitalizedLink>{t(this.getTabDisplay(tabName))}</CapitalizedLink>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  // Returns the information about the integration description and features\n  renderInformationCard() {\n    const {FeatureList} = getIntegrationFeatureGate();\n\n    return (\n      <Fragment>\n        <Flex>\n          <FlexContainer>\n            <Description dangerouslySetInnerHTML={{__html: marked(this.description)}} />\n            <FeatureList\n              {...this.featureProps}\n              provider={{key: this.props.params.integrationSlug}}\n            />\n            {this.renderPermissions()}\n            {this.alerts.map((alert, i) => (\n              <Alert key={i} type={alert.type} showIcon>\n                <span\n                  dangerouslySetInnerHTML={{__html: singleLineRenderer(alert.text)}}\n                />\n              </Alert>\n            ))}\n          </FlexContainer>\n          <Metadata>\n            {!!this.author && (\n              <AuthorInfo>\n                <CreatedContainer>{t('Created By')}</CreatedContainer>\n                <div>{this.author}</div>\n              </AuthorInfo>\n            )}\n            {this.resourceLinks.map(({title, url}) => (\n              <ExternalLinkContainer key={url}>\n                {this.getIcon(title)}\n                <ExternalLink href={url}>{t(title)}</ExternalLink>\n              </ExternalLinkContainer>\n            ))}\n          </Metadata>\n        </Flex>\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    return (\n      <Fragment>\n        <BreadcrumbTitle routes={this.props.routes} title={this.integrationName} />\n        {this.renderAlert()}\n        {this.renderTopSection()}\n        {this.renderTabs()}\n        {this.state.tab === 'overview'\n          ? this.renderInformationCard()\n          : this.renderConfigurations()}\n      </Fragment>\n    );\n  }\n}\n\nconst Flex = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst FlexContainer = styled('div')`\n  flex: 1;\n`;\n\nconst CapitalizedLink = styled('a')`\n  text-transform: capitalize;\n`;\n\nconst StyledTag = styled(Tag)`\n  text-transform: none;\n  &:not(:first-child) {\n    margin-left: ${space(0.5)};\n  }\n`;\n\nconst NameContainer = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: ${space(2)};\n`;\n\nconst Name = styled('div')`\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-bottom: ${space(0.5)};\n`;\n\nconst IconCloseCircle = styled(IconClose)`\n  color: ${p => p.theme.red300};\n  margin-right: ${space(1)};\n`;\n\nconst DisabledNotice = styled(({reason, ...p}: {reason: React.ReactNode}) => (\n  <div\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n    }}\n    {...p}\n  >\n    <IconCloseCircle isCircled />\n    <span>{reason}</span>\n  </div>\n))`\n  padding-top: ${space(0.5)};\n  font-size: 0.9em;\n`;\n\nconst FeatureListItem = styled('span')`\n  line-height: 24px;\n`;\n\nconst Description = styled('div')`\n  li {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Metadata = styled(Flex)`\n  display: grid;\n  grid-auto-rows: max-content;\n  grid-auto-flow: row;\n  gap: ${space(1)};\n  font-size: 0.9em;\n  margin-left: ${space(4)};\n  margin-right: 100px;\n  align-self: flex-start;\n`;\n\nconst AuthorInfo = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst ExternalLinkContainer = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1)};\n  align-items: center;\n`;\n\nconst StatusWrapper = styled('div')`\n  margin-bottom: ${space(0.5)};\n  padding-left: ${space(2)};\n`;\n\nconst DisableWrapper = styled('div')`\n  margin-left: auto;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst CreatedContainer = styled('div')`\n  text-transform: uppercase;\n  padding-bottom: ${space(1)};\n  color: ${p => p.theme.gray300};\n  font-weight: 600;\n  font-size: 12px;\n`;\n\nconst TopSectionWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport default AbstractIntegrationDetailedView;\n","export const INSTALLED = 'Installed' as const;\nexport const NOT_INSTALLED = 'Not Installed' as const;\nexport const PENDING = 'Pending' as const;\nexport const DISABLED = 'Disabled' as const;\nexport const LEARN_MORE = 'Learn More' as const;\n\nexport const COLORS = {\n  [INSTALLED]: 'success',\n  [NOT_INSTALLED]: 'gray300',\n  [DISABLED]: 'gray300',\n  [PENDING]: 'pink300',\n  [LEARN_MORE]: 'gray300',\n} as const;\n\n/**\n * Integrations in the integration directory should be sorted by their popularity (weight).\n * The weights should reflect the relative popularity of each integration are hardcoded, except for\n * Sentry-apps which read popularity from the db.\n */\n\nexport const POPULARITY_WEIGHT: {\n  [key: string]: number;\n} = {\n  // First-party-integrations\n  slack: 50,\n  github: 20,\n  jira: 10,\n  bitbucket: 10,\n  gitlab: 10,\n  pagerduty: 10,\n  vsts: 10,\n  jira_server: 10,\n  bitbucket_server: 10,\n  github_enterprise: 10,\n  vercel: 10,\n  msteams: 10,\n  aws_lambda: 10,\n\n  // Plugins\n  webhooks: 10,\n  asana: 8,\n  trello: 8,\n  heroku: 8,\n  pivotal: 8,\n  twilio: 8,\n  pushover: 5,\n  redmine: 5,\n  phabricator: 5,\n  opsgenie: 5,\n  victorops: 5,\n  sessionstack: 5,\n  segment: 2,\n  'amazon-sqs': 2,\n  splunk: 2,\n} as const;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {openModal} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {IntegrationType, Organization} from 'sentry/types';\n\nimport RequestIntegrationModal from './RequestIntegrationModal';\n\ntype Props = {\n  name: string;\n  organization: Organization;\n  slug: string;\n  type: IntegrationType;\n};\ntype State = {\n  isOpen: boolean;\n  isSent: boolean;\n};\n\nexport default class RequestIntegrationButton extends Component<Props, State> {\n  state: State = {\n    isOpen: false,\n    isSent: false,\n  };\n\n  openRequestModal() {\n    this.setState({isOpen: true});\n    openModal(\n      renderProps => (\n        <RequestIntegrationModal\n          {...this.props}\n          {...renderProps}\n          onSuccess={() => this.setState({isSent: true})}\n        />\n      ),\n      {\n        onClose: () => this.setState({isOpen: false}),\n      }\n    );\n  }\n\n  render() {\n    const {isOpen, isSent} = this.state;\n\n    let buttonText;\n    if (isOpen) {\n      buttonText = t('Requesting Installation');\n    } else if (isSent) {\n      buttonText = t('Installation Requested');\n    } else {\n      buttonText = t('Request Installation');\n    }\n\n    return (\n      <StyledRequestIntegrationButton\n        data-test-id=\"request-integration-button\"\n        disabled={isOpen || isSent}\n        onClick={() => this.openRequestModal()}\n        priority=\"primary\"\n        size=\"sm\"\n      >\n        {buttonText}\n      </StyledRequestIntegrationButton>\n    );\n  }\n}\n\nconst StyledRequestIntegrationButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n","import {Fragment} from 'react';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport TextareaField from 'sentry/components/forms/textareaField';\nimport {t} from 'sentry/locale';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport RequestIntegrationButton from './RequestIntegrationButton';\n\ntype Props = {\n  onSuccess: () => void;\n} & RequestIntegrationButton['props'] &\n  ModalRenderProps &\n  AsyncComponent['props'];\ntype State = {\n  isSending: boolean;\n  message: string;\n} & AsyncComponent['state'];\n\n/**\n * This modal serves as a non-owner's confirmation step before sending\n * organization owners an email requesting a new organization integration. It\n * lets the user attach an optional message to be included in the email.\n */\nexport default class RequestIntegrationModal extends AsyncComponent<Props, State> {\n  state: State = {\n    ...this.getDefaultState(),\n    isSending: false,\n    message: '',\n  };\n\n  sendRequest = () => {\n    const {organization, slug, type} = this.props;\n    const {message} = this.state;\n\n    trackIntegrationAnalytics('integrations.request_install', {\n      integration_type: type,\n      integration: slug,\n      organization,\n    });\n\n    const endpoint = `/organizations/${organization.slug}/integration-requests/`;\n    this.api.request(endpoint, {\n      method: 'POST',\n      data: {\n        providerSlug: slug,\n        providerType: type,\n        message,\n      },\n      success: this.handleSubmitSuccess,\n      error: this.handleSubmitError,\n    });\n  };\n\n  handleSubmitSuccess = () => {\n    const {closeModal, onSuccess} = this.props;\n\n    addSuccessMessage(t('Request successfully sent.'));\n    this.setState({isSending: false});\n    onSuccess();\n    closeModal();\n  };\n\n  handleSubmitError = () => {\n    addErrorMessage('Error sending the request');\n    this.setState({isSending: false});\n  };\n\n  render() {\n    const {Header, Body, Footer, name} = this.props;\n\n    const buttonText = this.state.isSending ? t('Sending Request') : t('Send Request');\n\n    return (\n      <Fragment>\n        <Header>\n          <h4>{t('Request %s Installation', name)}</h4>\n        </Header>\n        <Body>\n          <TextBlock>\n            {t(\n              'Looks like your organization owner, manager, or admin needs to install %s. Want to send them a request?',\n              name\n            )}\n          </TextBlock>\n          <TextBlock>\n            {t(\n              '(Optional) You’ve got good reasons for installing the %s Integration. Share them with your organization owner.',\n              name\n            )}\n          </TextBlock>\n          <TextareaField\n            inline={false}\n            flexibleControlStateSize\n            stacked\n            name=\"message\"\n            type=\"string\"\n            onChange={value => this.setState({message: value})}\n            placeholder={t('Optional message…')}\n          />\n          <TextBlock>\n            {t(\n              'When you click “Send Request”, we’ll email your request to your organization’s owners. So just keep that in mind.'\n            )}\n          </TextBlock>\n        </Body>\n        <Footer>\n          <Button onClick={this.sendRequest}>{buttonText}</Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n","import {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {IntegrationInstallationStatus} from 'sentry/types';\n\nimport {COLORS} from './constants';\n\ntype StatusProps = {\n  status: IntegrationInstallationStatus;\n};\n\nconst StatusWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst IntegrationStatus = styled(({status, ...p}: StatusProps) => {\n  const theme = useTheme();\n\n  return (\n    <StatusWrapper>\n      <CircleIndicator size={6} color={theme[COLORS[status]]} />\n      <div {...p}>{`${t(status)}`}</div>\n    </StatusWrapper>\n  );\n})`\n  color: ${p => p.theme[COLORS[p.status]]};\n  margin-left: ${space(0.5)};\n  font-weight: light;\n  margin-right: ${space(0.75)};\n`;\n\nexport default IntegrationStatus;\n","import {PlainRoute} from 'react-router';\n\nimport {useBreadcrumbTitleEffect} from './context';\n\ntype Props = {\n  routes: Array<PlainRoute>;\n  title: string;\n};\n\n/**\n * Breadcrumb title sets the breadcrumb label for the provided route match\n */\nfunction BreadcrumbTitle(props: Props) {\n  useBreadcrumbTitleEffect(props);\n\n  return null;\n}\n\nexport default BreadcrumbTitle;\n"],"names":["Fragment","startCase","Access","Alert","AsyncComponent","ExternalLink","Panel","Tag","Tooltip","IconClose","IconDocs","IconGeneric","IconGithub","IconProject","t","PluginIcon","space","getCategories","getIntegrationFeatureGate","trackIntegrationAnalytics","marked","singleLineRenderer","EmptyMessage","BreadcrumbTitle","RequestIntegrationButton","IntegrationStatus","AbstractIntegrationDetailedView","value","integration_tab","setState","tab","eventKey","options","params","view","integration","integrationSlug","integration_type","integrationType","already_installed","installationStatus","organization","props","componentDidMount","location","query","onLoadAllEndpointsSuccess","state","Error","description","author","alerts","resourceLinks","integrationName","requiresAccess","featureData","getIcon","title","getTabDisplay","renderTopButton","_disabledFromFeatures","_userHasAccess","renderPermissions","renderEmptyConfigurations","renderAddInstallButton","renderConfigurations","featureProps","features","map","f","featureGate","__html","cleanTags","renderAlert","renderAdditionalCTA","renderIntegrationIcon","renderRequestIntegrationButton","hideButtonIfDisabled","IntegrationFeatures","disabled","disabledReason","hasAccess","renderTopSection","tags","feature","renderTabs","paddingTop","tabs","tabName","onTabChange","renderInformationCard","FeatureList","key","alert","i","type","text","url","renderBody","routes","Flex","FlexContainer","CapitalizedLink","StyledTag","NameContainer","Name","IconCloseCircle","p","theme","red300","DisabledNotice","reason","display","alignItems","FeatureListItem","Description","Metadata","AuthorInfo","ExternalLinkContainer","StatusWrapper","DisableWrapper","CreatedContainer","gray300","TopSectionWrapper","INSTALLED","NOT_INSTALLED","PENDING","DISABLED","LEARN_MORE","COLORS","POPULARITY_WEIGHT","slack","github","jira","bitbucket","gitlab","pagerduty","vsts","jira_server","bitbucket_server","github_enterprise","vercel","msteams","aws_lambda","webhooks","asana","trello","heroku","pivotal","twilio","pushover","redmine","phabricator","opsgenie","victorops","sessionstack","segment","splunk","Component","openModal","Button","RequestIntegrationModal","isOpen","isSent","openRequestModal","renderProps","onClose","render","buttonText","StyledRequestIntegrationButton","addErrorMessage","addSuccessMessage","TextareaField","TextBlock","getDefaultState","isSending","message","slug","endpoint","api","request","method","data","providerSlug","providerType","success","handleSubmitSuccess","error","handleSubmitError","closeModal","onSuccess","Header","Body","Footer","name","sendRequest","useTheme","CircleIndicator","status","useBreadcrumbTitleEffect"],"sourceRoot":""}