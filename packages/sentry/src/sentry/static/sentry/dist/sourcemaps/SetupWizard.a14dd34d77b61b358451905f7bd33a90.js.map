{"version":3,"file":"chunks/SetupWizard.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;AAMA,SAASS,WAAT,OAA4C;EAAA,IAAvB;IAACC,IAAI,GAAG;EAAR,CAAuB;EAC1C,MAAMC,GAAG,GAAGH,+DAAM,EAAlB;EACA,MAAMI,eAAe,GAAGV,6CAAM,CAAqBW,SAArB,CAA9B;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,+CAAQ,CAAC,KAAD,CAAxC;EAEAF,gDAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIW,eAAe,CAACI,OAApB,EAA6B;QAC3BC,MAAM,CAACC,YAAP,CAAoBN,eAAe,CAACI,OAApC;MACD;IACF,CAJD;EAKD,CANQ,CAAT;EAQAf,gDAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXgB,MAAM,CAACC,YAAP,CAAoBN,eAAe,CAACI,OAApC;IACD,CAFD;EAGD,CAJQ,CAAT;EAMA,MAAMG,aAAa,GAAGnB,kDAAW,CAAC,YAAY;IAC5C,IAAI;MACF,MAAMW,GAAG,CAACS,cAAJ,CAAoB,WAAUV,IAAK,GAAnC,CAAN;IACD,CAFD,CAEE,MAAM;MACNK,WAAW,CAAC,IAAD,CAAX;MACAE,MAAM,CAACC,YAAP,CAAoBN,eAAe,CAACI,OAApC;MACAJ,eAAe,CAACI,OAAhB,GAA0BC,MAAM,CAACI,UAAP,CAAkB,MAAMJ,MAAM,CAACK,KAAP,EAAxB,EAAwC,KAAxC,CAA1B;IACD;EACF,CARgC,EAQ9B,CAACX,GAAD,EAAMD,IAAN,CAR8B,CAAjC;EAUAT,gDAAS,CAAC,MAAM;IACd,MAAMsB,eAAe,GAAGN,MAAM,CAACO,WAAP,CAAmBL,aAAnB,EAAkC,IAAlC,CAAxB;IACA,OAAO,MAAMF,MAAM,CAACQ,aAAP,CAAqBF,eAArB,CAAb;EACD,CAHQ,EAGN,CAACJ,aAAD,CAHM,CAAT;EAKA,OACE,gEAAC,+EAAD;IAAA,UACE;MAAK,SAAS,EAAC,WAAf;MAAA,UACG,CAACL,QAAD,GACC,gEAAC,0EAAD;QAAkB,KAAK,EAAE;UAACY,MAAM,EAAE;QAAT,CAAzB;QAAA,UACE;UAAK,SAAS,EAAC,KAAf;UAAA,UACE;YAAA,UAAKnB,gDAAC,CAAC,+BAAD;UAAN;QADF;MADF,EADD,GAOC;QAAK,SAAS,EAAC,KAAf;QAAA,WACE;UAAA,UAAKA,gDAAC,CAAC,gDAAD;QAAN,EADF,EAEE;UAAA,UAAKA,gDAAC,CAAC,wCAAD;QAAN,EAFF,EAGE,gEAAC,gEAAD;UAAQ,OAAO,EAAE,MAAMU,MAAM,CAACK,KAAP,EAAvB;UAAA,UAAwCf,gDAAC,CAAC,mBAAD;QAAzC,EAHF;MAAA;IARJ;EADF,EADF;AAmBD;;AArDQE;AAuDT,iEAAeA,WAAf","sources":["webpack:///./app/views/setupWizard/index.tsx"],"sourcesContent":["import {useCallback, useEffect, useRef, useState} from 'react';\n\nimport Button from 'sentry/components/button';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport ThemeAndStyleProvider from 'sentry/components/themeAndStyleProvider';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  hash?: boolean | string;\n};\n\nfunction SetupWizard({hash = false}: Props) {\n  const api = useApi();\n  const closeTimeoutRef = useRef<number | undefined>(undefined);\n  const [finished, setFinished] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      if (closeTimeoutRef.current) {\n        window.clearTimeout(closeTimeoutRef.current);\n      }\n    };\n  });\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(closeTimeoutRef.current);\n    };\n  });\n\n  const checkFinished = useCallback(async () => {\n    try {\n      await api.requestPromise(`/wizard/${hash}/`);\n    } catch {\n      setFinished(true);\n      window.clearTimeout(closeTimeoutRef.current);\n      closeTimeoutRef.current = window.setTimeout(() => window.close(), 10000);\n    }\n  }, [api, hash]);\n\n  useEffect(() => {\n    const pollingInterval = window.setInterval(checkFinished, 1000);\n    return () => window.clearInterval(pollingInterval);\n  }, [checkFinished]);\n\n  return (\n    <ThemeAndStyleProvider>\n      <div className=\"container\">\n        {!finished ? (\n          <LoadingIndicator style={{margin: '2em auto'}}>\n            <div className=\"row\">\n              <h5>{t('Waiting for wizard to connect')}</h5>\n            </div>\n          </LoadingIndicator>\n        ) : (\n          <div className=\"row\">\n            <h5>{t('Return to your terminal to complete your setup')}</h5>\n            <h5>{t('(This window will close in 10 seconds)')}</h5>\n            <Button onClick={() => window.close()}>{t('Close browser tab')}</Button>\n          </div>\n        )}\n      </div>\n    </ThemeAndStyleProvider>\n  );\n}\n\nexport default SetupWizard;\n"],"names":["useCallback","useEffect","useRef","useState","Button","LoadingIndicator","ThemeAndStyleProvider","t","useApi","SetupWizard","hash","api","closeTimeoutRef","undefined","finished","setFinished","current","window","clearTimeout","checkFinished","requestPromise","setTimeout","close","pollingInterval","setInterval","clearInterval","margin"],"sourceRoot":""}