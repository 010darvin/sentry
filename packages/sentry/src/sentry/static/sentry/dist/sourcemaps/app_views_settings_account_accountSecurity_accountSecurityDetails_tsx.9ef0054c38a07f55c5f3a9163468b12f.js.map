{"version":3,"file":"chunks/app_views_settings_account_accountSecurity_accountSecurityDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountSecurity/accountSecurityDetails.tsx","webpack:///./app/views/settings/account/accountSecurity/components/confirmHeader.tsx","webpack:///./app/views/settings/account/accountSecurity/components/recoveryCodes.tsx","webpack:///./app/views/settings/account/accountSecurity/components/removeConfirm.tsx","webpack:///./app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","/**\n * AccountSecurityDetails is only displayed when user is enrolled in the 2fa method.\n * It displays created + last used time of the 2fa method.\n *\n * Also displays 2fa method specific details.\n */\nimport {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport DateTime from 'sentry/components/dateTime';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Authenticator, AuthenticatorDevice} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport RecoveryCodes from 'sentry/views/settings/account/accountSecurity/components/recoveryCodes';\nimport RemoveConfirm from 'sentry/views/settings/account/accountSecurity/components/removeConfirm';\nimport U2fEnrolledDetails from 'sentry/views/settings/account/accountSecurity/components/u2fEnrolledDetails';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst ENDPOINT = '/users/me/authenticators/';\n\ntype AuthenticatorDateProps = {\n  /**\n   * Can be null or a Date object.\n   * Component will have value \"never\" if it is null\n   */\n  date: string | null;\n  label: string;\n};\n\nfunction AuthenticatorDate({label, date}: AuthenticatorDateProps) {\n  return (\n    <Fragment>\n      <DateLabel>{label}</DateLabel>\n      <div>{date ? <DateTime date={date} /> : t('never')}</div>\n    </Fragment>\n  );\n}\n\ntype Props = {\n  deleteDisabled: boolean;\n  onRegenerateBackupCodes: () => void;\n} & RouteComponentProps<{authId: string}, {}>;\n\ntype State = {\n  authenticator: Authenticator | null;\n} & AsyncView['state'];\n\nclass AccountSecurityDetails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Security');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params} = this.props;\n    const {authId} = params;\n\n    return [['authenticator', `${ENDPOINT}${authId}/`]];\n  }\n\n  handleRemove = async (device?: AuthenticatorDevice) => {\n    const {authenticator} = this.state;\n\n    if (!authenticator || !authenticator.authId) {\n      return;\n    }\n\n    // if the device is defined, it means that U2f is being removed\n    // reason for adding a trailing slash is a result of the endpoint on line 109 needing it but it can't be set there as if deviceId is None, the route will end with '//'\n    const deviceId = device ? `${device.key_handle}/` : '';\n    const deviceName = device ? device.name : t('Authenticator');\n\n    this.setState({loading: true});\n\n    try {\n      await this.api.requestPromise(`${ENDPOINT}${authenticator.authId}/${deviceId}`, {\n        method: 'DELETE',\n      });\n      this.props.router.push('/settings/account/security');\n      addSuccessMessage(t('%s has been removed', deviceName));\n    } catch {\n      // Error deleting authenticator\n      this.setState({loading: false});\n      addErrorMessage(t('Error removing %s', deviceName));\n    }\n  };\n\n  handleRename = async (device: AuthenticatorDevice, deviceName: string) => {\n    const {authenticator} = this.state;\n\n    if (!authenticator?.authId) {\n      return;\n    }\n    // if the device is defined, it means that U2f is being renamed\n    // reason for adding a trailing slash is a result of the endpoint on line 109 needing it but it can't be set there as if deviceId is None, the route will end with '//'\n    const deviceId = device ? `${device.key_handle}/` : '';\n\n    this.setState({loading: true});\n    const data = {\n      name: deviceName,\n    };\n\n    try {\n      await this.api.requestPromise(`${ENDPOINT}${authenticator.authId}/${deviceId}`, {\n        method: 'PUT',\n        data,\n      });\n      this.props.router.push(`/settings/account/security/mfa/${authenticator.authId}`);\n      addSuccessMessage(t('Device was renamed'));\n    } catch {\n      this.setState({loading: false});\n      addErrorMessage(t('Error renaming the device'));\n    }\n  };\n\n  renderBody() {\n    const {authenticator} = this.state;\n\n    if (!authenticator) {\n      return null;\n    }\n\n    const {deleteDisabled, onRegenerateBackupCodes} = this.props;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              <span>{authenticator.name}</span>\n              <AuthenticatorStatus enabled={authenticator.isEnrolled} />\n            </Fragment>\n          }\n          action={\n            <AuthenticatorActions>\n              {authenticator.isEnrolled && authenticator.allowRotationInPlace && (\n                <Button to={`/settings/account/security/mfa/${authenticator.id}/enroll/`}>\n                  {t('Rotate Secret Key')}\n                </Button>\n              )}\n              {authenticator.isEnrolled && authenticator.removeButton && (\n                <Tooltip\n                  title={t(\n                    \"Two-factor authentication is required for at least one organization you're a member of.\"\n                  )}\n                  disabled={!deleteDisabled}\n                >\n                  <RemoveConfirm onConfirm={this.handleRemove} disabled={deleteDisabled}>\n                    <Button priority=\"danger\">{authenticator.removeButton}</Button>\n                  </RemoveConfirm>\n                </Tooltip>\n              )}\n            </AuthenticatorActions>\n          }\n        />\n\n        <TextBlock>{authenticator.description}</TextBlock>\n\n        <AuthenticatorDates>\n          <AuthenticatorDate label={t('Created at')} date={authenticator.createdAt} />\n          <AuthenticatorDate label={t('Last used')} date={authenticator.lastUsedAt} />\n        </AuthenticatorDates>\n\n        <U2fEnrolledDetails\n          isEnrolled={authenticator.isEnrolled}\n          id={authenticator.id}\n          devices={authenticator.devices}\n          onRemoveU2fDevice={this.handleRemove}\n          onRenameU2fDevice={this.handleRename}\n        />\n\n        {authenticator.isEnrolled && authenticator.phone && (\n          <PhoneWrapper>\n            {t('Confirmation codes are sent to the following phone number')}:\n            <Phone>{authenticator.phone}</Phone>\n          </PhoneWrapper>\n        )}\n\n        <RecoveryCodes\n          onRegenerateBackupCodes={onRegenerateBackupCodes}\n          isEnrolled={authenticator.isEnrolled}\n          codes={authenticator.codes}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default AccountSecurityDetails;\n\nconst AuthenticatorStatus = styled(CircleIndicator)`\n  margin-left: ${space(1)};\n`;\n\nconst AuthenticatorActions = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  > * {\n    margin-left: ${space(1)};\n  }\n`;\n\nconst AuthenticatorDates = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: max-content auto;\n`;\n\nconst DateLabel = styled('span')`\n  font-weight: bold;\n`;\n\nconst PhoneWrapper = styled('div')`\n  margin-top: ${space(4)};\n`;\n\nconst Phone = styled('span')`\n  font-weight: bold;\n  margin-left: ${space(1)};\n`;\n","import styled from '@emotion/styled';\n\nconst ConfirmHeader = styled('div')`\n  font-size: 1.2em;\n  margin-bottom: 10px;\n`;\n\nexport default ConfirmHeader;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Clipboard from 'sentry/components/clipboard';\nimport Confirm from 'sentry/components/confirm';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport {IconCopy, IconDownload, IconPrint} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\ntype Props = {\n  codes: string[];\n  isEnrolled: boolean;\n  onRegenerateBackupCodes: () => void;\n  className?: string;\n};\n\nconst RecoveryCodes = ({\n  className,\n  isEnrolled,\n  codes,\n  onRegenerateBackupCodes,\n}: Props) => {\n  const printCodes = () => {\n    // eslint-disable-next-line dot-notation\n    const iframe = window.frames['printable'];\n    iframe.document.write(codes.join('<br>'));\n    iframe.print();\n    iframe.document.close();\n  };\n\n  if (!isEnrolled || !codes) {\n    return null;\n  }\n\n  const formattedCodes = codes.join(' \\n');\n\n  return (\n    <CodeContainer className={className}>\n      <PanelHeader hasButtons>\n        {t('Unused Codes')}\n\n        <Actions>\n          <Clipboard hideUnsupported value={formattedCodes}>\n            <Button size=\"sm\" aria-label={t('copy')}>\n              <IconCopy />\n            </Button>\n          </Clipboard>\n          <Button size=\"sm\" onClick={printCodes} aria-label={t('print')}>\n            <IconPrint />\n          </Button>\n          <Button\n            size=\"sm\"\n            download=\"sentry-recovery-codes.txt\"\n            href={`data:text/plain;charset=utf-8,${formattedCodes}`}\n            aria-label={t('download')}\n          >\n            <IconDownload />\n          </Button>\n          <Confirm\n            onConfirm={onRegenerateBackupCodes}\n            message={t(\n              'Are you sure you want to regenerate recovery codes? Your old codes will no longer work.'\n            )}\n          >\n            <Button priority=\"danger\" size=\"sm\">\n              {t('Regenerate Codes')}\n            </Button>\n          </Confirm>\n        </Actions>\n      </PanelHeader>\n      <PanelBody>\n        <PanelAlert type=\"warning\">\n          {t(\n            'Make sure to save a copy of your recovery codes and store them in a safe place.'\n          )}\n        </PanelAlert>\n        <div>{!!codes.length && codes.map(code => <Code key={code}>{code}</Code>)}</div>\n        {!codes.length && (\n          <EmptyMessage>{t('You have no more recovery codes to use')}</EmptyMessage>\n        )}\n      </PanelBody>\n      <iframe name=\"printable\" style={{display: 'none'}} />\n    </CodeContainer>\n  );\n};\n\nexport default RecoveryCodes;\n\nconst CodeContainer = styled(Panel)`\n  margin-top: ${space(4)};\n`;\n\nconst Actions = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n`;\n\nconst Code = styled(PanelItem)`\n  font-family: ${p => p.theme.text.familyMono};\n  padding: ${space(2)};\n`;\n","import {Fragment} from 'react';\n\nimport Confirm from 'sentry/components/confirm';\nimport {t} from 'sentry/locale';\nimport ConfirmHeader from 'sentry/views/settings/account/accountSecurity/components/confirmHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = React.ComponentProps<typeof Confirm>;\n\nconst message = (\n  <Fragment>\n    <ConfirmHeader>{t('Do you want to remove this method?')}</ConfirmHeader>\n    <TextBlock>\n      {t(\n        'Removing the last authentication method will disable two-factor authentication completely.'\n      )}\n    </TextBlock>\n  </Fragment>\n);\n\nconst RemoveConfirm = (props: Props) => <Confirm {...props} message={message} />;\n\nexport default RemoveConfirm;\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport Input from 'sentry/components/input';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconClose, IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport ConfirmHeader from 'sentry/views/settings/account/accountSecurity/components/confirmHeader';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst U2fEnrolledDetails = props => {\n  const {className, isEnrolled, devices, id, onRemoveU2fDevice, onRenameU2fDevice} =\n    props;\n\n  if (id !== 'u2f' || !isEnrolled) {\n    return null;\n  }\n\n  const hasDevices = devices?.length;\n  // Note Tooltip doesn't work because of bootstrap(?) pointer events for disabled buttons\n  const isLastDevice = hasDevices === 1;\n  return (\n    <Panel className={className}>\n      <PanelHeader>{t('Device name')}</PanelHeader>\n\n      <PanelBody>\n        {!hasDevices && (\n          <EmptyMessage>{t('You have not added any U2F devices')}</EmptyMessage>\n        )}\n        {hasDevices &&\n          devices?.map((device, i) => (\n            <Device\n              key={i}\n              device={device}\n              isLastDevice={isLastDevice}\n              onRenameU2fDevice={onRenameU2fDevice}\n              onRemoveU2fDevice={onRemoveU2fDevice}\n            />\n          ))}\n        <AddAnotherPanelItem>\n          <Button type=\"button\" to=\"/settings/account/security/mfa/u2f/enroll/\" size=\"sm\">\n            {t('Add Another Device')}\n          </Button>\n        </AddAnotherPanelItem>\n      </PanelBody>\n    </Panel>\n  );\n};\n\nconst Device = props => {\n  const {device, isLastDevice, onRenameU2fDevice, onRemoveU2fDevice} = props;\n  const [deviceName, setDeviceName] = useState(device.name);\n  const [isEditing, setEditting] = useState(false);\n\n  if (!isEditing) {\n    return (\n      <DevicePanelItem key={device.name}>\n        <DeviceInformation>\n          <Name>{device.name}</Name>\n          <FadedDateTime date={device.timestamp} />\n        </DeviceInformation>\n        <Actions>\n          <Button size=\"sm\" onClick={() => setEditting(true)}>\n            {t('Rename Device')}\n          </Button>\n        </Actions>\n        <Actions>\n          <Confirm\n            onConfirm={() => onRemoveU2fDevice(device)}\n            disabled={isLastDevice}\n            message={\n              <Fragment>\n                <ConfirmHeader>{t('Do you want to remove U2F device?')}</ConfirmHeader>\n                <TextBlock>\n                  {t(`Are you sure you want to remove the U2F device \"${device.name}\"?`)}\n                </TextBlock>\n              </Fragment>\n            }\n          >\n            <Button size=\"sm\" priority=\"danger\">\n              <Tooltip\n                disabled={!isLastDevice}\n                title={t('Can not remove last U2F device')}\n              >\n                <IconDelete size=\"xs\" />\n              </Tooltip>\n            </Button>\n          </Confirm>\n        </Actions>\n      </DevicePanelItem>\n    );\n  }\n\n  return (\n    <DevicePanelItem key={device.name}>\n      <DeviceInformation>\n        <DeviceNameInput\n          type=\"text\"\n          value={deviceName}\n          onChange={e => {\n            setDeviceName(e.target.value);\n          }}\n        />\n        <FadedDateTime date={device.timestamp} />\n      </DeviceInformation>\n      <Actions>\n        <Button\n          priority=\"primary\"\n          size=\"sm\"\n          onClick={() => {\n            onRenameU2fDevice(device, deviceName);\n            setEditting(false);\n          }}\n        >\n          Rename Device\n        </Button>\n      </Actions>\n\n      <Actions>\n        <Button\n          size=\"sm\"\n          title=\"Cancel rename\"\n          onClick={() => {\n            setDeviceName(device.name);\n            setEditting(false);\n          }}\n        >\n          <IconClose size=\"xs\" />\n        </Button>\n      </Actions>\n    </DevicePanelItem>\n  );\n};\n\nconst DeviceNameInput = styled(Input)`\n  width: 50%;\n  margin-right: ${space(2)};\n`;\n\nconst DevicePanelItem = styled(PanelItem)`\n  padding: 0;\n`;\n\nconst DeviceInformation = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1 1;\n  height: 72px;\n\n  padding: ${space(2)};\n  padding-right: 0;\n`;\n\nconst FadedDateTime = styled(DateTime)`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  opacity: 0.6;\n`;\n\nconst Name = styled('div')`\n  flex: 1;\n`;\n\nconst Actions = styled('div')`\n  margin: ${space(2)};\n`;\n\nconst AddAnotherPanelItem = styled(PanelItem)`\n  justify-content: flex-end;\n  padding: ${space(2)};\n`;\n\nexport default styled(U2fEnrolledDetails)`\n  margin-top: ${space(4)};\n`;\n"],"names":["AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Fragment","addErrorMessage","addSuccessMessage","Button","CircleIndicator","DateTime","Tooltip","t","space","RecoveryCodes","RemoveConfirm","U2fEnrolledDetails","SettingsPageHeader","TextBlock","ENDPOINT","AuthenticatorDate","label","date","AccountSecurityDetails","device","authenticator","state","authId","deviceId","key_handle","deviceName","name","setState","loading","api","requestPromise","method","props","router","push","data","getEndpoints","params","renderBody","deleteDisabled","onRegenerateBackupCodes","isEnrolled","allowRotationInPlace","id","removeButton","handleRemove","description","createdAt","lastUsedAt","devices","handleRename","phone","codes","AuthenticatorStatus","AuthenticatorActions","AuthenticatorDates","DateLabel","PhoneWrapper","Phone","ConfirmHeader","Clipboard","Confirm","Panel","PanelAlert","PanelBody","PanelHeader","PanelItem","IconCopy","IconDownload","IconPrint","EmptyMessage","className","printCodes","iframe","window","frames","document","write","join","print","close","formattedCodes","length","map","code","display","CodeContainer","Actions","Code","p","theme","text","familyMono","message","useState","Input","IconClose","IconDelete","onRemoveU2fDevice","onRenameU2fDevice","hasDevices","isLastDevice","i","Device","setDeviceName","isEditing","setEditting","timestamp","e","target","value","DeviceNameInput","DevicePanelItem","DeviceInformation","FadedDateTime","fontSizeRelativeSmall","Name","AddAnotherPanelItem"],"sourceRoot":""}