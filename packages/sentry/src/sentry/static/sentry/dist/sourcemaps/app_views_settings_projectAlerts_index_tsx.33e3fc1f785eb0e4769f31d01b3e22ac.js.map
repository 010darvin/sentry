{"version":3,"file":"chunks/app_views_settings_projectAlerts_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;AAAA;AAGA;;;AASA,MAAMI,aAAa,GAAG;EAAA,IAAC;IAACC,QAAD;IAAWC;EAAX,CAAD;EAAA,OACpB,gEAAC,oEAAD;IAAQ,YAAY,EAAEA,YAAtB;IAAoC,MAAM,EAAE,CAAC,eAAD,CAA5C;IAAA,UACG;MAAA,IAAC;QAACC;MAAD,CAAD;MAAA,OACC,gEAAC,2CAAD;QAAA,UACG,aAAAL,qDAAc,CAACG,QAAD,CAAd,iBACCL,mDAAY,CAACK,QAAD,EAAW;UACrBC,YADqB;UAErBE,WAAW,EAAED;QAFQ,CAAX;MAFhB,EADD;IAAA;EADH,EADoB;AAAA,CAAtB;;AAAMH;AAcN,iEAAeA,aAAf","sources":["webpack:///./app/views/settings/projectAlerts/index.tsx"],"sourcesContent":["import {cloneElement, Fragment, isValidElement} from 'react';\nimport type {RouteComponentProps} from 'react-router';\n\nimport Access from 'sentry/components/acl/access';\nimport {Organization} from 'sentry/types';\n\ninterface Props\n  extends RouteComponentProps<{organizationId: string; projectId: string}, {}> {\n  children: React.ReactNode;\n  organization: Organization;\n}\n\nconst ProjectAlerts = ({children, organization}: Props) => (\n  <Access organization={organization} access={['project:write']}>\n    {({hasAccess}) => (\n      <Fragment>\n        {isValidElement(children) &&\n          cloneElement(children, {\n            organization,\n            canEditRule: hasAccess,\n          })}\n      </Fragment>\n    )}\n  </Access>\n);\n\nexport default ProjectAlerts;\n"],"names":["cloneElement","Fragment","isValidElement","Access","ProjectAlerts","children","organization","hasAccess","canEditRule"],"sourceRoot":""}