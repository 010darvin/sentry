{"version":3,"file":"chunks/app_components_replays_walker_urlWalker_tsx-app_utils_replays_replayDataUtils_tsx-app_utils_u-d549a4.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/type/icon.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/utils.tsx","webpack:///./app/components/replays/breadcrumbs/utils.tsx","webpack:///./app/components/replays/playerRelativeTime.tsx","webpack:///./app/components/replays/replayContext.tsx","webpack:///./app/components/replays/utils.tsx","webpack:///./app/components/replays/walker/chevronDividedList.tsx","webpack:///./app/components/replays/walker/splitCrumbs.tsx","webpack:///./app/components/replays/walker/urlWalker.tsx","webpack:///./app/types/breadcrumbs.tsx","webpack:///./app/utils/replays/highlightNode.tsx","webpack:///./app/utils/replays/hooks/useRAF.tsx","webpack:///./app/utils/replays/replayDataUtils.tsx","webpack:///./app/utils/useLocation.tsx","webpack:///./app/views/replays/detail/breadcrumbs/breadcrumbItem.tsx"],"sourcesContent":["import {\n  IconFire,\n  IconFix,\n  IconInfo,\n  IconLocation,\n  IconMobile,\n  IconRefresh,\n  IconSort,\n  IconSpan,\n  IconStack,\n  IconTerminal,\n  IconUser,\n  IconWarning,\n} from 'sentry/icons';\nimport {BreadcrumbType} from 'sentry/types/breadcrumbs';\n\ntype Props = {\n  type: BreadcrumbType;\n};\n\nfunction Icon({type}: Props) {\n  switch (type) {\n    case BreadcrumbType.USER:\n    case BreadcrumbType.UI:\n      return <IconUser size=\"xs\" />;\n    case BreadcrumbType.NAVIGATION:\n      return <IconLocation size=\"xs\" />;\n    case BreadcrumbType.DEBUG:\n      return <IconFix size=\"xs\" />;\n    case BreadcrumbType.INFO:\n      return <IconInfo size=\"xs\" />;\n    case BreadcrumbType.ERROR:\n      return <IconFire size=\"xs\" />;\n    case BreadcrumbType.HTTP:\n      return <IconSort size=\"xs\" rotated />;\n    case BreadcrumbType.WARNING:\n      return <IconWarning size=\"xs\" />;\n    case BreadcrumbType.QUERY:\n      return <IconStack size=\"xs\" />;\n    case BreadcrumbType.SYSTEM:\n      return <IconMobile size=\"xs\" />;\n    case BreadcrumbType.SESSION:\n      return <IconRefresh size=\"xs\" />;\n    case BreadcrumbType.TRANSACTION:\n      return <IconSpan size=\"xs\" />;\n    default:\n      return <IconTerminal size=\"xs\" />;\n  }\n}\n\nexport default Icon;\n","import {t} from 'sentry/locale';\nimport {\n  BreadcrumbLevelType,\n  BreadcrumbType,\n  Crumb,\n  RawCrumb,\n} from 'sentry/types/breadcrumbs';\nimport {EntryType, Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\n\nexport function convertCrumbType(breadcrumb: RawCrumb): RawCrumb {\n  if (breadcrumb.type === BreadcrumbType.EXCEPTION) {\n    return {\n      ...breadcrumb,\n      type: BreadcrumbType.ERROR,\n    };\n  }\n  // special case for 'ui.' and `sentry.` category breadcrumbs\n  // TODO: find a better way to customize UI around non-schema data\n  if (breadcrumb.type === BreadcrumbType.DEFAULT && defined(breadcrumb?.category)) {\n    const [category, subcategory] = breadcrumb.category.split('.');\n    if (category === 'ui') {\n      return {\n        ...breadcrumb,\n        type: BreadcrumbType.UI,\n      };\n    }\n\n    if (category === 'console') {\n      return {\n        ...breadcrumb,\n        type: BreadcrumbType.DEBUG,\n      };\n    }\n\n    if (category === 'navigation') {\n      return {\n        ...breadcrumb,\n        type: BreadcrumbType.NAVIGATION,\n      };\n    }\n\n    if (\n      category === 'sentry' &&\n      (subcategory === 'transaction' || subcategory === 'event')\n    ) {\n      return {\n        ...breadcrumb,\n        type: BreadcrumbType.TRANSACTION,\n      };\n    }\n  }\n\n  if (!Object.values(BreadcrumbType).includes(breadcrumb.type)) {\n    return {\n      ...breadcrumb,\n      type: BreadcrumbType.DEFAULT,\n    };\n  }\n\n  return breadcrumb;\n}\n\nfunction getCrumbDescriptionAndColor(\n  type: BreadcrumbType\n): Pick<Crumb, 'color' | 'description'> {\n  switch (type) {\n    case BreadcrumbType.USER:\n    case BreadcrumbType.UI:\n      return {\n        color: 'purple300',\n        description: t('User Action'),\n      };\n\n    case BreadcrumbType.NAVIGATION:\n      return {\n        color: 'green300',\n        description: t('Navigation'),\n      };\n\n    case BreadcrumbType.DEBUG:\n      return {\n        color: 'purple300',\n        description: t('Debug'),\n      };\n\n    case BreadcrumbType.INFO:\n      return {\n        color: 'blue300',\n        description: t('Info'),\n      };\n\n    case BreadcrumbType.ERROR:\n      return {\n        color: 'red300',\n        description: t('Error'),\n      };\n\n    case BreadcrumbType.HTTP:\n      return {\n        color: 'green300',\n        description: t('HTTP request'),\n      };\n\n    case BreadcrumbType.WARNING:\n      return {\n        color: 'yellow300',\n        description: t('Warning'),\n      };\n    case BreadcrumbType.QUERY:\n      return {\n        color: 'blue300',\n        description: t('Query'),\n      };\n    case BreadcrumbType.SYSTEM:\n      return {\n        color: 'pink300',\n        description: t('System'),\n      };\n    case BreadcrumbType.SESSION:\n      return {\n        color: 'pink300',\n        description: t('Session'),\n      };\n    case BreadcrumbType.TRANSACTION:\n      return {\n        color: 'pink300',\n        description: t('Transaction'),\n      };\n    default:\n      return {\n        color: 'gray300',\n        description: t('Default'),\n      };\n  }\n}\n\nexport function transformCrumbs(breadcrumbs: Array<RawCrumb>): Crumb[] {\n  return breadcrumbs.map((breadcrumb, index) => {\n    const convertedCrumbType = convertCrumbType(breadcrumb);\n    const {color, description} = getCrumbDescriptionAndColor(convertedCrumbType.type);\n    return {\n      ...convertedCrumbType,\n      id: index,\n      color,\n      description,\n      level: convertedCrumbType.level ?? BreadcrumbLevelType.UNDEFINED,\n    };\n  });\n}\n\nfunction moduleToCategory(module: string | null | undefined) {\n  if (!module) {\n    return undefined;\n  }\n  const match = module.match(/^.*\\/(.*?)(:\\d+)/);\n  if (!match) {\n    return module.split(/./)[0];\n  }\n  return match[1];\n}\n\nexport function getVirtualCrumb(event: Event): RawCrumb | undefined {\n  const exception = event.entries.find(entry => entry.type === EntryType.EXCEPTION);\n\n  if (!exception && !event.message) {\n    return undefined;\n  }\n\n  const timestamp = event.dateCreated;\n\n  if (exception) {\n    const {type, value, module: mdl} = exception.data.values[0];\n    return {\n      type: BreadcrumbType.ERROR,\n      level: BreadcrumbLevelType.ERROR,\n      category: moduleToCategory(mdl) || 'exception',\n      data: {\n        type,\n        value,\n      },\n      timestamp,\n    };\n  }\n\n  const levelTag = (event.tags || []).find(tag => tag.key === 'level');\n\n  return {\n    type: BreadcrumbType.INFO,\n    level: (levelTag?.value as BreadcrumbLevelType) || BreadcrumbLevelType.UNDEFINED,\n    category: 'message',\n    message: event.message,\n    timestamp,\n  };\n}\n","import {BreadcrumbType, Crumb} from 'sentry/types/breadcrumbs';\n\n/**\n * Generate breadcrumb descriptions based on type\n */\nexport function getDescription(crumb: Crumb) {\n  switch (crumb.type) {\n    case BreadcrumbType.NAVIGATION:\n      return `${crumb.data?.to ?? ''}`;\n    case BreadcrumbType.DEFAULT:\n      return JSON.stringify(crumb.data);\n    default:\n      return crumb.message || '';\n  }\n}\n\n/**\n * Get title of breadcrumb\n */\nexport function getTitle(crumb: Crumb) {\n  const [type, action] = crumb.category?.split('.') || [];\n\n  // Supports replay specific breadcrumbs\n  if (crumb.data && 'label' in crumb.data) {\n    return crumb.data.label;\n  }\n\n  return `${type === 'ui' ? 'User' : type} ${action || ''}`;\n}\n\n/**\n * Generate breadcrumb title + descriptions\n */\nexport function getDetails(crumb: Crumb) {\n  return {title: getTitle(crumb), description: getDescription(crumb)};\n}\n","import styled from '@emotion/styled';\n\nimport DateTime from 'sentry/components/dateTime';\nimport {showPlayerTime} from 'sentry/components/replays/utils';\nimport Tooltip from 'sentry/components/tooltip';\n\ntype Props = {\n  relativeTimeMs: number | undefined;\n  timestamp: string | undefined;\n};\n\nconst PlayerRelativeTime = ({relativeTimeMs, timestamp}: Props) => {\n  if (!timestamp || !relativeTimeMs) {\n    return <div />;\n  }\n\n  return (\n    <Tooltip\n      title={<DateTime date={timestamp} seconds />}\n      disabled={!timestamp}\n      skipWrapper\n      disableForVisualTest\n      underlineColor=\"gray300\"\n      showUnderline\n    >\n      <Value>{showPlayerTime(timestamp, relativeTimeMs)}</Value>\n    </Tooltip>\n  );\n};\n\nconst Value = styled('p')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-variant-numeric: tabular-nums;\n  margin-bottom: 0;\n`;\n\nexport default PlayerRelativeTime;\n","import React, {useCallback, useContext, useEffect, useRef, useState} from 'react';\nimport {useTheme} from '@emotion/react';\nimport {Replayer, ReplayerEvents} from 'rrweb';\n\nimport {\n  clearAllHighlights,\n  highlightNode,\n  removeHighlightedNode,\n} from 'sentry/utils/replays/highlightNode';\nimport useRAF from 'sentry/utils/replays/hooks/useRAF';\nimport type ReplayReader from 'sentry/utils/replays/replayReader';\nimport usePrevious from 'sentry/utils/usePrevious';\n\ntype Dimensions = {height: number; width: number};\ntype RootElem = null | HTMLDivElement;\n\ntype HighlightParams = {\n  nodeId: number;\n  annotation?: string;\n};\n\n// Important: Don't allow context Consumers to access `Replayer` directly.\n// It has state that, when changed, will not trigger a react render.\n// Instead only expose methods that wrap `Replayer` and manage state.\ntype ReplayPlayerContextProps = {\n  /**\n   * Clear all existing highlights in replay\n   */\n  clearAllHighlights: () => void;\n\n  /**\n   * The time, in milliseconds, where the user focus is.\n   * The user focus can be reported by any collaborating object, usually on\n   * hover.\n   */\n  currentHoverTime: undefined | number;\n\n  /**\n   * The current time of the video, in milliseconds\n   * The value is updated on every animation frame, about every 16.6ms\n   */\n  currentTime: number;\n\n  /**\n   * Original dimensions in pixels of the captured browser window\n   */\n  dimensions: Dimensions;\n\n  /**\n   * The calculated speed of the player when fast-forwarding through idle moments in the video\n   * The value is set to `0` when the video is not fast-forwarding\n   * The speed is automatically determined by the length of each idle period\n   */\n  fastForwardSpeed: number;\n\n  /**\n   * Highlight a node in the replay\n   */\n  highlight: (args: HighlightParams) => void;\n\n  /**\n   * Required to be called with a <div> Ref\n   * Represents the location in the DOM where the iframe video should be mounted\n   *\n   * @param _root\n   */\n  initRoot: (root: RootElem) => void;\n\n  /**\n   * Set to true while the library is reconstructing the DOM\n   */\n  isBuffering: boolean;\n\n  /**\n   * Set to true when the replay finish event is fired\n   */\n  isFinished: boolean;\n\n  /**\n   * Whether the video is currently playing\n   */\n  isPlaying: boolean;\n\n  /**\n   * Whether fast-forward mode is enabled if RRWeb detects idle moments in the video\n   */\n  isSkippingInactive: boolean;\n\n  /**\n   * Removes a highlighted node from the replay\n   */\n  removeHighlight: ({nodeId}: {nodeId: number}) => void;\n\n  /**\n   * The core replay data\n   */\n  replay: ReplayReader | null;\n\n  /**\n   * Restart the replay\n   */\n  restart: () => void;\n\n  /**\n   * Set the currentHoverTime so collaborating components can highlight related\n   * information\n   */\n  setCurrentHoverTime: (time: undefined | number) => void;\n\n  /**\n   * Jump the video to a specific time\n   */\n  setCurrentTime: (time: number) => void;\n\n  /**\n   * Set speed for normal playback\n   */\n  setSpeed: (speed: number) => void;\n\n  /**\n   * The speed for normal playback\n   */\n  speed: number;\n\n  /**\n   * Start or stop playback\n   *\n   * @param play\n   */\n  togglePlayPause: (play: boolean) => void;\n\n  /**\n   * Allow RRWeb to use Fast-Forward mode for idle moments in the video\n   *\n   * @param skip\n   */\n  toggleSkipInactive: (skip: boolean) => void;\n};\n\nconst ReplayPlayerContext = React.createContext<ReplayPlayerContextProps>({\n  clearAllHighlights: () => {},\n  currentHoverTime: undefined,\n  currentTime: 0,\n  dimensions: {height: 0, width: 0},\n  fastForwardSpeed: 0,\n  highlight: () => {},\n  initRoot: () => {},\n  isBuffering: false,\n  isFinished: false,\n  isPlaying: false,\n  isSkippingInactive: true,\n  removeHighlight: () => {},\n  replay: null,\n  restart: () => {},\n  setCurrentHoverTime: () => {},\n  setCurrentTime: () => {},\n  setSpeed: () => {},\n  speed: 1,\n  togglePlayPause: () => {},\n  toggleSkipInactive: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n  replay: ReplayReader | null;\n\n  /**\n   * Time, in seconds, when the video should start\n   */\n  initialTimeOffset?: number;\n\n  /**\n   * Override return fields for testing\n   */\n  value?: Partial<ReplayPlayerContextProps>;\n};\n\nfunction useCurrentTime(callback: () => number) {\n  const [currentTime, setCurrentTime] = useState(0);\n  useRAF(() => setCurrentTime(callback));\n  return currentTime;\n}\n\nexport function Provider({children, replay, initialTimeOffset = 0, value = {}}: Props) {\n  const events = replay?.getRRWebEvents();\n\n  const theme = useTheme();\n  const oldEvents = usePrevious(events);\n  // Note we have to check this outside of hooks, see `usePrevious` comments\n  const hasNewEvents = events !== oldEvents;\n  const replayerRef = useRef<Replayer>(null);\n  const [dimensions, setDimensions] = useState<Dimensions>({height: 0, width: 0});\n  const [currentHoverTime, setCurrentHoverTime] = useState<undefined | number>();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [finishedAtMS, setFinishedAtMS] = useState<number>(-1);\n  const [isSkippingInactive, setIsSkippingInactive] = useState(true);\n  const [speed, setSpeedState] = useState(1);\n  const [fastForwardSpeed, setFFSpeed] = useState(0);\n  const [buffer, setBufferTime] = useState({target: -1, previous: -1});\n  const playTimer = useRef<number | undefined>(undefined);\n  const unMountedRef = useRef(false);\n\n  const isFinished = replayerRef.current?.getCurrentTime() === finishedAtMS;\n\n  const forceDimensions = (dimension: Dimensions) => {\n    setDimensions(dimension);\n  };\n  const onFastForwardStart = (e: {speed: number}) => {\n    setFFSpeed(e.speed);\n  };\n  const onFastForwardEnd = () => {\n    setFFSpeed(0);\n  };\n\n  const highlight = useCallback(({nodeId, annotation}: HighlightParams) => {\n    const replayer = replayerRef.current;\n    if (!replayer) {\n      return;\n    }\n\n    highlightNode({replayer, nodeId, annotation});\n  }, []);\n\n  const clearAllHighlightsCallback = useCallback(() => {\n    const replayer = replayerRef.current;\n    if (!replayer) {\n      return;\n    }\n\n    clearAllHighlights({replayer});\n  }, []);\n\n  const removeHighlight = useCallback(({nodeId}: {nodeId: number}) => {\n    const replayer = replayerRef.current;\n    if (!replayer) {\n      return;\n    }\n\n    removeHighlightedNode({replayer, nodeId});\n  }, []);\n\n  const setReplayFinished = useCallback(() => {\n    setFinishedAtMS(replayerRef.current?.getCurrentTime() ?? -1);\n    setIsPlaying(false);\n  }, []);\n\n  const initRoot = useCallback(\n    (root: RootElem) => {\n      if (events === undefined) {\n        return;\n      }\n\n      if (root === null) {\n        return;\n      }\n\n      if (replayerRef.current) {\n        if (!hasNewEvents && !unMountedRef.current) {\n          // Already have a player for these events, the parent node must've re-rendered\n          return;\n        }\n\n        if (replayerRef.current.iframe.contentDocument?.body.childElementCount === 0) {\n          // If this is true, then no need to clear old iframe as nothing was rendered\n          return;\n        }\n\n        // We have new events, need to clear out the old iframe because a new\n        // `Replayer` instance is about to be created\n        while (root.firstChild) {\n          root.removeChild(root.firstChild);\n        }\n      }\n\n      // eslint-disable-next-line no-new\n      const inst = new Replayer(events, {\n        root,\n        blockClass: 'sr-block',\n        // liveMode: false,\n        // triggerFocus: false,\n        mouseTail: {\n          duration: 0.75 * 1000,\n          lineCap: 'round',\n          lineWidth: 2,\n          strokeStyle: theme.purple200,\n        },\n        // unpackFn: _ => _,\n        // plugins: [],\n        skipInactive: true,\n      });\n\n      // @ts-expect-error: rrweb types event handlers with `unknown` parameters\n      inst.on(ReplayerEvents.Resize, forceDimensions);\n      inst.on(ReplayerEvents.Finish, setReplayFinished);\n      // @ts-expect-error: rrweb types event handlers with `unknown` parameters\n      inst.on(ReplayerEvents.SkipStart, onFastForwardStart);\n      inst.on(ReplayerEvents.SkipEnd, onFastForwardEnd);\n\n      // `.current` is marked as readonly, but it's safe to set the value from\n      // inside a `useEffect` hook.\n      // See: https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables\n      // @ts-expect-error\n      replayerRef.current = inst;\n\n      if (unMountedRef.current) {\n        unMountedRef.current = false;\n      }\n    },\n    [events, theme.purple200, setReplayFinished, hasNewEvents]\n  );\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState !== 'visible') {\n        replayerRef.current?.pause();\n      }\n    };\n\n    if (replayerRef.current && events) {\n      initRoot(replayerRef.current.wrapper.parentElement as RootElem);\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n    }\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [initRoot, events]);\n\n  const getCurrentTime = useCallback(\n    () => (replayerRef.current ? Math.max(replayerRef.current.getCurrentTime(), 0) : 0),\n    []\n  );\n\n  const setCurrentTime = useCallback(\n    (requestedTimeMs: number) => {\n      const replayer = replayerRef.current;\n      if (!replayer) {\n        return;\n      }\n\n      const maxTimeMs = replayerRef.current?.getMetaData().totalTime;\n      const time = requestedTimeMs > maxTimeMs ? 0 : requestedTimeMs;\n\n      // Sometimes rrweb doesn't get to the exact target time, as long as it has\n      // changed away from the previous time then we can hide then buffering message.\n      setBufferTime({target: time, previous: getCurrentTime()});\n\n      // Clear previous timers. Without this (but with the setTimeout) multiple\n      // requests to set the currentTime could finish out of order and cause jumping.\n      if (playTimer.current) {\n        window.clearTimeout(playTimer.current);\n      }\n\n      if (isPlaying) {\n        playTimer.current = window.setTimeout(() => replayer.play(time), 0);\n        setIsPlaying(true);\n      } else {\n        playTimer.current = window.setTimeout(() => replayer.pause(time), 0);\n        setIsPlaying(false);\n      }\n    },\n    [getCurrentTime, isPlaying]\n  );\n\n  const setSpeed = useCallback(\n    (newSpeed: number) => {\n      const replayer = replayerRef.current;\n      if (!replayer) {\n        return;\n      }\n      if (isPlaying) {\n        replayer.pause();\n        replayer.setConfig({speed: newSpeed});\n        replayer.play(getCurrentTime());\n      } else {\n        replayer.setConfig({speed: newSpeed});\n      }\n      setSpeedState(newSpeed);\n    },\n    [getCurrentTime, isPlaying]\n  );\n\n  const togglePlayPause = useCallback(\n    (play: boolean) => {\n      const replayer = replayerRef.current;\n      if (!replayer) {\n        return;\n      }\n\n      if (play) {\n        replayer.play(getCurrentTime());\n      } else {\n        replayer.pause(getCurrentTime());\n      }\n      setIsPlaying(play);\n    },\n    [getCurrentTime]\n  );\n\n  const restart = useCallback(() => {\n    if (replayerRef.current) {\n      replayerRef.current.play(0);\n      setIsPlaying(true);\n    }\n  }, []);\n\n  const toggleSkipInactive = useCallback((skip: boolean) => {\n    const replayer = replayerRef.current;\n    if (!replayer) {\n      return;\n    }\n    if (skip !== replayer.config.skipInactive) {\n      replayer.setConfig({skipInactive: skip});\n    }\n    setIsSkippingInactive(skip);\n  }, []);\n\n  // Only on pageload: set the initial playback timestamp\n  useEffect(() => {\n    if (initialTimeOffset && events && replayerRef.current) {\n      setCurrentTime(initialTimeOffset * 1000);\n    }\n\n    return () => {\n      unMountedRef.current = true;\n    };\n  }, [events, replayerRef.current]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const currentPlayerTime = useCurrentTime(getCurrentTime);\n\n  const [isBuffering, currentTime] =\n    buffer.target !== -1 &&\n    buffer.previous === currentPlayerTime &&\n    buffer.target !== buffer.previous\n      ? [true, buffer.target]\n      : [false, currentPlayerTime];\n\n  if (!isBuffering && buffer.target !== -1) {\n    setBufferTime({target: -1, previous: -1});\n  }\n\n  return (\n    <ReplayPlayerContext.Provider\n      value={{\n        clearAllHighlights: clearAllHighlightsCallback,\n        currentHoverTime,\n        currentTime,\n        dimensions,\n        fastForwardSpeed,\n        highlight,\n        initRoot,\n        isBuffering,\n        isFinished,\n        isPlaying,\n        isSkippingInactive,\n        removeHighlight,\n        replay,\n        restart,\n        setCurrentHoverTime,\n        setCurrentTime,\n        setSpeed,\n        speed,\n        togglePlayPause,\n        toggleSkipInactive,\n        ...value,\n      }}\n    >\n      {children}\n    </ReplayPlayerContext.Provider>\n  );\n}\n\nexport const useReplayContext = () => useContext(ReplayPlayerContext);\n","import padStart from 'lodash/padStart';\n\nimport {Crumb} from 'sentry/types/breadcrumbs';\nimport type {ReplaySpan} from 'sentry/views/replays/types';\n\nfunction padZero(num: number, len = 2): string {\n  const str = String(num);\n  return padStart(str, len, '0');\n}\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\n\n/**\n * @param timestamp The timestamp that is our reference point. Can be anything that `moment` accepts such as `'2022-05-04T19:47:52.915000Z'` or `1651664872.915`\n * @param diffMs Number of milliseconds to adjust the timestamp by, either positive (future) or negative (past)\n * @returns Unix timestamp of the adjusted timestamp, in milliseconds\n */\nexport function relativeTimeInMs(\n  timestamp: ConstructorParameters<typeof Date>[0],\n  diffMs: number\n): number {\n  return Math.abs(new Date(timestamp).getTime() - diffMs);\n}\n\nexport function showPlayerTime(\n  timestamp: ConstructorParameters<typeof Date>[0],\n  relativeTimeMs: number,\n  showMs: boolean = false\n): string {\n  return formatTime(relativeTimeInMs(timestamp, relativeTimeMs), showMs);\n}\n\n// TODO: move into 'sentry/utils/formatters'\nexport function formatTime(ms: number, showMs?: boolean): string {\n  if (ms <= 0 || isNaN(ms)) {\n    if (showMs) {\n      return '00:00.000';\n    }\n\n    return '00:00';\n  }\n\n  const hour = Math.floor(ms / HOUR);\n  ms = ms % HOUR;\n  const minute = Math.floor(ms / MINUTE);\n  ms = ms % MINUTE;\n  const second = Math.floor(ms / SECOND);\n\n  let formattedTime = '00:00';\n\n  if (hour) {\n    formattedTime = `${padZero(hour)}:${padZero(minute)}:${padZero(second)}`;\n  } else {\n    formattedTime = `${padZero(minute)}:${padZero(second)}`;\n  }\n\n  if (showMs) {\n    const milliseconds = Math.floor(ms % SECOND);\n    formattedTime = `${formattedTime}.${padZero(milliseconds, 3)}`;\n  }\n\n  return formattedTime;\n}\n\n/**\n * Figure out how many ticks to show in an area.\n * If there is more space available, we can show more granular ticks, but if\n * less space is available, fewer ticks.\n * Similarly if the duration is short, the ticks will represent a short amount\n * of time (like every second) but if the duration is long one tick may\n * represent an hour.\n *\n * @param durationMs The amount of time that we need to chop up into even sections\n * @param width Total width available, pixels\n * @param minWidth Minimum space for each column, pixels. Ex: So we can show formatted time like `1:00:00` between major ticks\n * @returns\n */\nexport function countColumns(durationMs: number, width: number, minWidth: number = 50) {\n  let maxCols = Math.floor(width / minWidth);\n  const remainder = durationMs - maxCols * width > 0 ? 1 : 0;\n  maxCols -= remainder;\n\n  // List of all the possible time granularities to display\n  // We could generate the list, which is basically a version of fizzbuzz, hard-coding is quicker.\n  const timeOptions = [\n    1 * HOUR,\n    30 * MINUTE,\n    20 * MINUTE,\n    15 * MINUTE,\n    10 * MINUTE,\n    5 * MINUTE,\n    2 * MINUTE,\n    1 * MINUTE,\n    30 * SECOND,\n    10 * SECOND,\n    5 * SECOND,\n    1 * SECOND,\n  ];\n\n  const timeBasedCols = timeOptions.reduce<Map<number, number>>((map, time) => {\n    map.set(time, Math.floor(durationMs / time));\n    return map;\n  }, new Map());\n\n  const [timespan, cols] = Array.from(timeBasedCols.entries())\n    .filter(([_span, c]) => c <= maxCols) // Filter for any valid timespan option where all ticks would fit\n    .reduce((best, next) => (next[1] > best[1] ? next : best), [0, 0]); // select the timespan option with the most ticks\n\n  const remaining = (durationMs - timespan * cols) / timespan;\n  return {timespan, cols, remaining};\n}\n\n/**\n * Group Crumbs for display along the timeline.\n *\n * The timeline is broken down into columns (aka buckets, or time-slices).\n * Columns translate to a fixed width on the screen, to prevent side-scrolling.\n *\n * This function groups crumbs into columns based on the number of columns available\n * and the timestamp of the crumb.\n */\nexport function getCrumbsByColumn(\n  startTimestampMs: number,\n  durationMs: number,\n  crumbs: Crumb[],\n  totalColumns: number\n) {\n  const safeDurationMs = isNaN(durationMs) ? 1 : durationMs;\n\n  const columnCrumbPairs = crumbs.map(breadcrumb => {\n    const {timestamp} = breadcrumb;\n    const timestampMilliSeconds = +new Date(String(timestamp));\n    const sinceStart = isNaN(timestampMilliSeconds)\n      ? 0\n      : timestampMilliSeconds - startTimestampMs;\n\n    const columnPositionCalc =\n      Math.floor((sinceStart / safeDurationMs) * (totalColumns - 1)) + 1;\n\n    // Should start at minimum in the first column\n    const column = Math.max(1, columnPositionCalc);\n\n    return [column, breadcrumb] as [number, Crumb];\n  });\n\n  const crumbsByColumn = columnCrumbPairs.reduce((map, [column, breadcrumb]) => {\n    if (map.has(column)) {\n      map.get(column)?.push(breadcrumb);\n    } else {\n      map.set(column, [breadcrumb]);\n    }\n    return map;\n  }, new Map() as Map<number, Crumb[]>);\n\n  return crumbsByColumn;\n}\n\ntype FlattenedSpanRange = {\n  /**\n   * Duration of this range\n   */\n  duration: number;\n  /**\n   * Absolute time in ms when the range ends\n   */\n  endTimestamp: number;\n  /**\n   * Number of spans that got flattened into this range\n   */\n  spanCount: number;\n  /**\n   * ID of the original span that created this range\n   */\n  spanId: string;\n  //\n  /**\n   * Absolute time in ms when the span starts\n   */\n  startTimestamp: number;\n};\n\nfunction doesOverlap(a: FlattenedSpanRange, b: FlattenedSpanRange) {\n  const bStartsWithinA =\n    a.startTimestamp <= b.startTimestamp && b.startTimestamp <= a.endTimestamp;\n  const bEndsWithinA =\n    a.startTimestamp <= b.endTimestamp && b.endTimestamp <= a.endTimestamp;\n  return bStartsWithinA || bEndsWithinA;\n}\n\nexport function flattenSpans(rawSpans: ReplaySpan[]): FlattenedSpanRange[] {\n  if (!rawSpans.length) {\n    return [];\n  }\n\n  const spans = rawSpans.map(span => {\n    const startTimestamp = span.startTimestamp * 1000;\n\n    // `endTimestamp` is at least msPerPixel wide, otherwise it disappears\n    const endTimestamp = span.endTimestamp * 1000;\n    return {\n      spanCount: 1,\n      // spanId: span.span_id,\n      startTimestamp,\n      endTimestamp,\n      duration: endTimestamp - startTimestamp,\n    } as FlattenedSpanRange;\n  });\n\n  const [firstSpan, ...restSpans] = spans;\n  const flatSpans = [firstSpan];\n\n  for (const span of restSpans) {\n    let overlap = false;\n    for (const fspan of flatSpans) {\n      if (doesOverlap(fspan, span)) {\n        overlap = true;\n        fspan.spanCount += 1;\n        fspan.startTimestamp = Math.min(fspan.startTimestamp, span.startTimestamp);\n        fspan.endTimestamp = Math.max(fspan.endTimestamp, span.endTimestamp);\n        fspan.duration = fspan.endTimestamp - fspan.startTimestamp;\n        break;\n      }\n    }\n    if (!overlap) {\n      flatSpans.push(span);\n    }\n  }\n  return flatSpans;\n}\n\n/**\n * Divide two numbers safely\n */\nexport function divide(numerator: number, denominator: number | undefined) {\n  if (denominator === undefined || isNaN(denominator) || denominator === 0) {\n    return 0;\n  }\n  return numerator / denominator;\n}\n","import {ReactElement} from 'react';\nimport styled from '@emotion/styled';\n\nimport {IconChevron} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  items: ReactElement[];\n};\n\nfunction ChevronDividedList({items}: Props) {\n  return (\n    <List cols={items.length}>\n      {items.flatMap((item, i) => {\n        const li = <Item key={`${i}-item`}>{item}</Item>;\n\n        return i === 0\n          ? li\n          : [\n              <Item key={`${i}-chev`}>\n                <Chevron>\n                  <IconChevron color=\"gray300\" size=\"xs\" direction=\"right\" />\n                </Chevron>\n              </Item>,\n              li,\n            ];\n      })}\n    </List>\n  );\n}\n\nconst List = styled('ul')<{cols: number}>`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: ${p =>\n    `minmax(auto, max-content) repeat(${\n      (p.cols - 2) * 2 + 1\n    }, max-content) minmax(auto, max-content)`};\n  flex-wrap: nowrap;\n  align-items: center;\n  overflow: hidden;\n`;\n\nconst Item = styled('li')`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst Chevron = styled('span')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 1;\n`;\n\nexport default ChevronDividedList;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport first from 'lodash/first';\nimport last from 'lodash/last';\n\nimport {Hovercard} from 'sentry/components/hovercard';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport Tooltip from 'sentry/components/tooltip';\nimport {tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {BreadcrumbTypeNavigation, Crumb} from 'sentry/types/breadcrumbs';\nimport BreadcrumbItem from 'sentry/views/replays/detail/breadcrumbs/breadcrumbItem';\n\ntype MaybeOnClickHandler = null | ((crumb: Crumb) => void);\n\nfunction splitCrumbs({\n  crumbs,\n  onClick,\n  startTimestampMs,\n}: {\n  crumbs: BreadcrumbTypeNavigation[];\n  onClick: MaybeOnClickHandler;\n  startTimestampMs: number;\n}) {\n  const firstUrl = first(crumbs)?.data?.to;\n  const summarizedCrumbs = crumbs.slice(1, -1) as Crumb[];\n  const lastUrl = last(crumbs)?.data?.to;\n\n  if (crumbs.length === 0) {\n    // This one shouldn't overflow, but by including the component css stays\n    // consistent with the other Segment types\n    return [\n      <Span key=\"summary\">\n        <TextOverflow>{tn('%s Page', '%s Pages', 0)}</TextOverflow>\n      </Span>,\n    ];\n  }\n\n  if (crumbs.length > 3) {\n    return [\n      <SingleLinkSegment\n        key=\"first\"\n        path={firstUrl}\n        onClick={onClick ? () => onClick(first(crumbs) as Crumb) : null}\n      />,\n      <SummarySegment\n        key=\"summary\"\n        crumbs={summarizedCrumbs}\n        startTimestampMs={startTimestampMs}\n        handleOnClick={onClick}\n      />,\n      <SingleLinkSegment\n        key=\"last\"\n        path={lastUrl}\n        onClick={onClick ? () => onClick(last(crumbs) as Crumb) : null}\n      />,\n    ];\n  }\n\n  return crumbs.map((crumb, i) => (\n    <SingleLinkSegment\n      key={i}\n      path={firstUrl}\n      onClick={onClick ? () => onClick(crumb as Crumb) : null}\n    />\n  ));\n}\n\nfunction SingleLinkSegment({\n  onClick,\n  path,\n}: {\n  onClick: null | (() => void);\n  path: undefined | string;\n}) {\n  if (!path) {\n    return null;\n  }\n  const content = (\n    <Tooltip title={path}>\n      <TextOverflow ellipsisDirection=\"left\">{path}</TextOverflow>\n    </Tooltip>\n  );\n  if (onClick) {\n    return (\n      <Link href=\"#\" onClick={onClick}>\n        {content}\n      </Link>\n    );\n  }\n  return <Span>{content}</Span>;\n}\n\nfunction SummarySegment({\n  crumbs,\n  handleOnClick,\n  startTimestampMs,\n}: {\n  crumbs: Crumb[];\n  handleOnClick: MaybeOnClickHandler;\n  startTimestampMs: number;\n}) {\n  const summaryItems = crumbs.map(crumb => (\n    <BreadcrumbItem\n      key={crumb.id}\n      crumb={crumb}\n      startTimestampMs={startTimestampMs}\n      isHovered={false}\n      isSelected={false}\n      onClick={handleOnClick}\n    />\n  ));\n\n  return (\n    <Span>\n      <HalfPaddingHovercard body={summaryItems} position=\"right\">\n        <TextOverflow>{tn('%s Page', '%s Pages', summaryItems.length)}</TextOverflow>\n      </HalfPaddingHovercard>\n    </Span>\n  );\n}\n\nconst Span = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 0;\n`;\n\nconst Link = styled('a')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 0;\n  text-decoration: underline;\n`;\n\nconst HalfPaddingHovercard = styled(\n  ({children, bodyClassName, ...props}: React.ComponentProps<typeof Hovercard>) => (\n    <Hovercard bodyClassName={bodyClassName || '' + ' half-padding'} {...props}>\n      {children}\n    </Hovercard>\n  )\n)`\n  .half-padding {\n    padding: ${space(0.5)};\n  }\n`;\n\nexport default splitCrumbs;\n","import {memo, useCallback} from 'react';\n\nimport {useReplayContext} from 'sentry/components/replays/replayContext';\nimport {relativeTimeInMs} from 'sentry/components/replays/utils';\nimport ChevronDividedList from 'sentry/components/replays/walker/chevronDividedList';\nimport splitCrumbs from 'sentry/components/replays/walker/splitCrumbs';\nimport {\n  BreadcrumbLevelType,\n  BreadcrumbType,\n  BreadcrumbTypeNavigation,\n  Crumb,\n} from 'sentry/types/breadcrumbs';\nimport type {ReplayRecord} from 'sentry/views/replays/types';\n\ntype CrumbProps = {\n  crumbs: Crumb[];\n  replayRecord: ReplayRecord;\n};\n\ntype StringProps = {\n  urls: string[];\n};\n\nexport const CrumbWalker = memo(function CrumbWalker({crumbs, replayRecord}: CrumbProps) {\n  const {setCurrentTime} = useReplayContext();\n\n  const startTimestampMs = replayRecord.startedAt.getTime();\n\n  const handleClick = useCallback(\n    (crumb: Crumb) => {\n      crumb.timestamp !== undefined\n        ? setCurrentTime(relativeTimeInMs(crumb.timestamp, startTimestampMs))\n        : null;\n    },\n    [setCurrentTime, startTimestampMs]\n  );\n\n  const navCrumbs = crumbs.filter(\n    crumb => crumb.type === BreadcrumbType.NAVIGATION\n  ) as BreadcrumbTypeNavigation[];\n\n  return (\n    <ChevronDividedList\n      items={splitCrumbs({\n        crumbs: navCrumbs,\n        startTimestampMs,\n        onClick: handleClick,\n      })}\n    />\n  );\n});\n\nexport const StringWalker = memo(function StringWalker({urls}: StringProps) {\n  return (\n    <ChevronDividedList\n      items={splitCrumbs({\n        crumbs: urls.map(urlToCrumb),\n        startTimestampMs: 0,\n        onClick: null,\n      })}\n    />\n  );\n});\n\nfunction urlToCrumb(url: string) {\n  return {\n    type: BreadcrumbType.NAVIGATION,\n    category: BreadcrumbType.NAVIGATION,\n    level: BreadcrumbLevelType.INFO,\n    description: 'Navigation',\n\n    id: 0,\n    color: 'green300',\n    timestamp: undefined,\n    data: {to: url},\n  } as BreadcrumbTypeNavigation;\n}\n","import type {Color} from 'sentry/utils/theme';\n\nexport enum BreadcrumbLevelType {\n  FATAL = 'fatal',\n  ERROR = 'error',\n  WARNING = 'warning',\n  INFO = 'info',\n  DEBUG = 'debug',\n  UNDEFINED = 'undefined',\n  LOG = 'log',\n}\n\nexport enum BreadcrumbType {\n  INFO = 'info',\n  DEBUG = 'debug',\n  MESSAGE = 'message',\n  QUERY = 'query',\n  UI = 'ui',\n  USER = 'user',\n  EXCEPTION = 'exception',\n  WARNING = 'warning',\n  ERROR = 'error',\n  DEFAULT = 'default',\n  HTTP = 'http',\n  NAVIGATION = 'navigation',\n  SYSTEM = 'system',\n  SESSION = 'session',\n  TRANSACTION = 'transaction',\n  INIT = 'init',\n}\n\ninterface BreadcrumbTypeBase {\n  level: BreadcrumbLevelType;\n  // it's recommended\n  category?: string | null;\n  event_id?: string | null;\n  message?: string;\n  timestamp?: string;\n}\n\nexport interface BreadcrumbTypeSystem extends BreadcrumbTypeBase {\n  action: string;\n  extras: Record<string, any>;\n  type: BreadcrumbType.SYSTEM;\n}\n\nexport interface BreadcrumbTypeSession extends BreadcrumbTypeBase {\n  action: string;\n  extras: Record<string, any>;\n  type: BreadcrumbType.SESSION;\n}\n\nexport interface BreadcrumbTypeNavigation extends BreadcrumbTypeBase {\n  type: BreadcrumbType.NAVIGATION;\n  data?: null | {\n    from?: string;\n    to?: string;\n  };\n}\n\nexport interface BreadcrumbTypeHTTP extends BreadcrumbTypeBase {\n  type: BreadcrumbType.HTTP;\n  data?: null | {\n    method?:\n      | 'POST'\n      | 'PUT'\n      | 'GET'\n      | 'HEAD'\n      | 'DELETE'\n      | 'CONNECT'\n      | 'OPTIONS'\n      | 'TRACE'\n      | 'PATCH';\n    reason?: string;\n    status_code?: number;\n    url?: string;\n  };\n}\n\nexport interface BreadcrumbTypeDefault extends BreadcrumbTypeBase {\n  type:\n    | BreadcrumbType.INFO\n    | BreadcrumbType.DEBUG\n    | BreadcrumbType.QUERY\n    | BreadcrumbType.UI\n    | BreadcrumbType.USER\n    | BreadcrumbType.EXCEPTION\n    | BreadcrumbType.WARNING\n    | BreadcrumbType.ERROR\n    | BreadcrumbType.DEFAULT\n    | BreadcrumbType.INIT\n    | BreadcrumbType.SESSION\n    | BreadcrumbType.SYSTEM\n    | BreadcrumbType.TRANSACTION;\n  data?: Record<string, any> | null;\n}\n\nexport type RawCrumb =\n  | BreadcrumbTypeNavigation\n  | BreadcrumbTypeHTTP\n  | BreadcrumbTypeDefault;\n\nexport type Crumb = RawCrumb & {\n  color: Color;\n  description: string;\n  id: number;\n};\n\nexport function isBreadcrumbTypeDefault(\n  breadcrumb: Crumb\n): breadcrumb is Extract<Crumb, BreadcrumbTypeDefault> {\n  return ![BreadcrumbType.HTTP, BreadcrumbType.NAVIGATION].includes(breadcrumb.type);\n}\n","import type {Replayer} from 'rrweb';\n\nconst DEFAULT_HIGHLIGHT_COLOR = 'rgba(168, 196, 236, 0.75)';\n\nconst highlightsByNodeId: Map<number, {canvas: HTMLCanvasElement}> = new Map();\n\ninterface AddHighlightParams {\n  nodeId: number;\n  replayer: Replayer;\n  annotation?: string;\n  color?: string;\n}\n\ninterface RemoveHighlightParams {\n  nodeId: number;\n  replayer: Replayer;\n}\n\ninterface ClearAllHighlightsParams {\n  replayer: Replayer;\n}\n\nexport function clearAllHighlights({replayer}: ClearAllHighlightsParams) {\n  for (const nodeId of highlightsByNodeId.keys()) {\n    removeHighlightedNode({replayer, nodeId});\n  }\n}\n\n/**\n * Remove the canvas that has the highlight for a node.\n *\n * XXX: This is potentially not good if we have a lot of highlights, as we\n * are creating a new canvas PER highlight.\n */\nexport function removeHighlightedNode({replayer, nodeId}: RemoveHighlightParams) {\n  if (!highlightsByNodeId.has(nodeId)) {\n    return false;\n  }\n\n  const highlightObj = highlightsByNodeId.get(nodeId);\n\n  if (!highlightObj || !replayer.wrapper.contains(highlightObj.canvas)) {\n    return false;\n  }\n\n  replayer.wrapper.removeChild(highlightObj.canvas);\n  highlightsByNodeId.delete(nodeId);\n\n  return true;\n}\n\n/**\n * Attempt to highlight the node inside of a replay recording\n */\nexport function highlightNode({\n  replayer,\n  nodeId,\n  annotation = '',\n  color,\n}: AddHighlightParams) {\n  // @ts-expect-error mouseTail is private\n  const {mouseTail, wrapper} = replayer;\n  const mirror = replayer.getMirror();\n  const node = mirror.getNode(nodeId);\n\n  // TODO(replays): There is some sort of race condition here when you \"rewind\" a replay,\n  // mirror will be empty and highlight does not get added because node is null\n  if (!node || !replayer.iframe.contentDocument?.body?.contains(node)) {\n    return null;\n  }\n\n  // @ts-ignore This builds locally, but fails in CI -- ignoring for now\n  const {top, left, width, height} = node.getBoundingClientRect();\n  const highlightColor = color ?? DEFAULT_HIGHLIGHT_COLOR;\n\n  // Clone the mouseTail canvas as it has the dimensions and position that we\n  // want on top of the replay. We may need to revisit this strategy as we\n  // create a new canvas for every highlight. See additional notes in\n  // removeHighlight() method.\n  const canvas = mouseTail.cloneNode();\n\n  const ctx = canvas.getContext('2d');\n\n  if (!ctx) {\n    return null;\n  }\n\n  // TODO(replays): Does not account for scrolling (should we attempt to keep highlight visible, or does it disappear)\n\n  // Draw a rectangle to highlight element\n  ctx.fillStyle = highlightColor;\n  ctx.fillRect(left, top, width, height);\n\n  // Draw a dashed border around highlight\n  ctx.beginPath();\n  ctx.setLineDash([5, 5]);\n  ctx.moveTo(left, top);\n  ctx.lineTo(left + width, top);\n  ctx.lineTo(left + width, top + height);\n  ctx.lineTo(left, top + height);\n  ctx.closePath();\n  ctx.stroke();\n\n  ctx.font = '24px Rubik';\n  ctx.textAlign = 'right';\n  ctx.textBaseline = 'bottom';\n\n  const textWidth = ctx.measureText(annotation).width;\n\n  // Draw rect around text\n  ctx.fillStyle = 'rgba(30, 30, 30, 0.75)';\n  ctx.fillRect(left + width - textWidth, top + height - 30, textWidth, 30);\n\n  // Draw text\n  ctx.fillStyle = 'white';\n  ctx.fillText(annotation, left + width, top + height);\n\n  highlightsByNodeId.set(nodeId, {\n    canvas,\n  });\n\n  wrapper.insertBefore(canvas, mouseTail);\n\n  return {\n    canvas,\n  };\n}\n","import {useEffect} from 'react';\n\n// TODO: move into app/utils/*\nexport default function useRAF(callback: () => unknown) {\n  useEffect(() => {\n    const timer = window.requestAnimationFrame(callback);\n    return () => window.cancelAnimationFrame(timer);\n  }, [callback]);\n}\n","import first from 'lodash/first';\n\nimport {transformCrumbs} from 'sentry/components/events/interfaces/breadcrumbs/utils';\nimport {t} from 'sentry/locale';\nimport type {\n  BreadcrumbTypeDefault,\n  BreadcrumbTypeNavigation,\n  Crumb,\n  RawCrumb,\n} from 'sentry/types/breadcrumbs';\nimport {BreadcrumbLevelType, BreadcrumbType} from 'sentry/types/breadcrumbs';\nimport type {\n  RecordingEvent,\n  ReplayCrumb,\n  ReplayError,\n  ReplayRecord,\n  ReplaySpan,\n} from 'sentry/views/replays/types';\n\nexport function mapResponseToReplayRecord(apiResponse: any): ReplayRecord {\n  return {\n    ...apiResponse,\n    ...(apiResponse.startedAt ? {startedAt: new Date(apiResponse.startedAt)} : {}),\n    ...(apiResponse.finishedAt ? {finishedAt: new Date(apiResponse.finishedAt)} : {}),\n    user: {\n      email: apiResponse.user.email || '',\n      id: apiResponse.user.id || '',\n      ip_address: apiResponse.user.ip_address || '',\n      name: apiResponse.user.name || '',\n      username: '',\n    },\n  };\n}\n\nexport function rrwebEventListFactory(\n  replayRecord: ReplayRecord,\n  rrwebEvents: RecordingEvent[]\n) {\n  const events = ([] as RecordingEvent[]).concat(rrwebEvents).concat({\n    type: 5, // EventType.Custom,\n    timestamp: replayRecord.finishedAt.getTime(),\n    data: {\n      tag: 'replay-end',\n    },\n  });\n\n  events.sort((a, b) => a.timestamp - b.timestamp);\n\n  const firstRRWebEvent = first(events) as RecordingEvent;\n  firstRRWebEvent.timestamp = replayRecord.startedAt.getTime();\n\n  return events;\n}\n\nexport function breadcrumbFactory(\n  replayRecord: ReplayRecord,\n  errors: ReplayError[],\n  rawCrumbs: ReplayCrumb[],\n  spans: ReplaySpan[]\n): Crumb[] {\n  const initialUrl = replayRecord.tags.url;\n  const initBreadcrumb = {\n    type: BreadcrumbType.INIT,\n    timestamp: replayRecord.startedAt.toISOString(),\n    level: BreadcrumbLevelType.INFO,\n    message: initialUrl,\n    data: {\n      action: 'replay-init',\n      label: t('Start recording'),\n      url: initialUrl,\n    },\n  } as BreadcrumbTypeDefault;\n\n  const errorCrumbs: RawCrumb[] = errors.map(error => ({\n    type: BreadcrumbType.ERROR,\n    level: BreadcrumbLevelType.ERROR,\n    category: 'exception',\n    message: error['error.value'],\n    data: {\n      label: error['error.type'],\n    },\n    timestamp: error.timestamp,\n  }));\n\n  const spanCrumbs: (BreadcrumbTypeDefault | BreadcrumbTypeNavigation)[] = spans\n    .filter(span =>\n      ['navigation.navigate', 'navigation.reload', 'largest-contentful-paint'].includes(\n        span.op\n      )\n    )\n    .map(span => {\n      if (span.op.startsWith('navigation')) {\n        const [, action] = span.op.split('.');\n        return {\n          category: 'default',\n          type: BreadcrumbType.NAVIGATION,\n          timestamp: new Date(span.startTimestamp * 1000).toISOString(),\n          level: BreadcrumbLevelType.INFO,\n          message: span.description,\n          action,\n          data: {\n            to: span.description,\n            label:\n              action === 'reload'\n                ? t('Reload')\n                : action === 'navigate'\n                ? t('Page load')\n                : t('Navigation'),\n            ...span.data,\n          },\n        };\n      }\n\n      return {\n        type: BreadcrumbType.DEBUG,\n        timestamp: new Date(span.startTimestamp * 1000).toISOString(),\n        level: BreadcrumbLevelType.INFO,\n        category: 'default',\n        data: {\n          action: span.op,\n          ...span.data,\n          label: span.op === 'largest-contentful-paint' ? t('LCP') : span.op,\n        },\n      };\n    });\n\n  const hasPageLoad = spans.find(span => span.op === 'navigation.navigate');\n\n  const result = transformCrumbs([\n    ...(!hasPageLoad ? [initBreadcrumb] : []),\n    ...(rawCrumbs.map(({timestamp, ...crumb}) => ({\n      ...crumb,\n      type: BreadcrumbType.DEFAULT,\n      timestamp: new Date(timestamp * 1000).toISOString(),\n    })) as RawCrumb[]),\n    ...errorCrumbs,\n    ...spanCrumbs,\n  ]);\n\n  return result.sort((a, b) => +new Date(a.timestamp || 0) - +new Date(b.timestamp || 0));\n}\n\nexport function spansFactory(spans: ReplaySpan[]) {\n  return spans.sort((a, b) => a.startTimestamp - b.startTimestamp);\n}\n\n/**\n * We need to figure out the real start and end timestamps based on when\n * first and last bits of data were collected. In milliseconds.\n *\n * @deprecated Once the backend returns the corrected timestamps, this is not needed.\n */\nexport function replayTimestamps(\n  rrwebEvents: RecordingEvent[],\n  rawCrumbs: ReplayCrumb[],\n  rawSpanData: ReplaySpan[]\n) {\n  const rrwebTimestamps = rrwebEvents.map(event => event.timestamp);\n  const breadcrumbTimestamps = (\n    rawCrumbs.map(rawCrumb => rawCrumb.timestamp).filter(Boolean) as number[]\n  ).map(timestamp => +new Date(timestamp * 1000));\n  const spanStartTimestamps = rawSpanData.map(span => span.startTimestamp * 1000);\n  const spanEndTimestamps = rawSpanData.map(span => span.endTimestamp * 1000);\n\n  return {\n    startTimestampMs: Math.min(\n      ...[...rrwebTimestamps, ...breadcrumbTimestamps, ...spanStartTimestamps]\n    ),\n    endTimestampMs: Math.max(\n      ...[...rrwebTimestamps, ...breadcrumbTimestamps, ...spanEndTimestamps]\n    ),\n  };\n}\n","import {Location, Query} from 'history';\n\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\n\ntype DefaultQuery<T = string> = {\n  [key: string]: T | T[] | null | undefined;\n};\n\nexport function useLocation<Q extends Query = DefaultQuery>(): Location<Q> {\n  const route = useRouteContext();\n  return route.location;\n}\n","import {memo, useCallback} from 'react';\nimport styled from '@emotion/styled';\n\nimport BreadcrumbIcon from 'sentry/components/events/interfaces/breadcrumbs/breadcrumb/type/icon';\nimport {PanelItem} from 'sentry/components/panels';\nimport {getDetails} from 'sentry/components/replays/breadcrumbs/utils';\nimport PlayerRelativeTime from 'sentry/components/replays/playerRelativeTime';\nimport {SVGIconProps} from 'sentry/icons/svgIcon';\nimport space from 'sentry/styles/space';\nimport type {Crumb} from 'sentry/types/breadcrumbs';\n\ntype MouseCallback = (crumb: Crumb, e: React.MouseEvent<HTMLElement>) => void;\n\ninterface Props {\n  crumb: Crumb;\n  isHovered: boolean;\n  isSelected: boolean;\n  onClick: null | MouseCallback;\n  startTimestampMs: number;\n  onMouseEnter?: MouseCallback;\n  onMouseLeave?: MouseCallback;\n}\n\nfunction BreadcrumbItem({\n  crumb,\n  isHovered,\n  isSelected,\n  startTimestampMs,\n  onMouseEnter,\n  onMouseLeave,\n  onClick,\n}: Props) {\n  const {title, description} = getDetails(crumb);\n\n  const handleMouseEnter = useCallback(\n    (e: React.MouseEvent<HTMLElement>) => onMouseEnter && onMouseEnter(crumb, e),\n    [onMouseEnter, crumb]\n  );\n  const handleMouseLeave = useCallback(\n    (e: React.MouseEvent<HTMLElement>) => onMouseLeave && onMouseLeave(crumb, e),\n    [onMouseLeave, crumb]\n  );\n  const handleClick = useCallback(\n    (e: React.MouseEvent<HTMLElement>) => onClick?.(crumb, e),\n    [onClick, crumb]\n  );\n\n  return (\n    <CrumbItem\n      as={onClick ? 'button' : 'span'}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onClick={handleClick}\n      isHovered={isHovered}\n      isSelected={isSelected}\n      aria-current={isSelected}\n    >\n      <IconWrapper color={crumb.color}>\n        <BreadcrumbIcon type={crumb.type} />\n      </IconWrapper>\n      <CrumbDetails>\n        <TitleContainer>\n          <Title>{title}</Title>\n          <PlayerRelativeTime\n            relativeTimeMs={startTimestampMs}\n            timestamp={crumb.timestamp}\n          />\n        </TitleContainer>\n\n        <Description title={description}>{description}</Description>\n      </CrumbDetails>\n    </CrumbItem>\n  );\n}\n\nconst CrumbDetails = styled('div')`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst TitleContainer = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  gap: ${space(1)};\n`;\n\nconst Title = styled('span')`\n  ${p => p.theme.overflowEllipsis};\n  text-transform: capitalize;\n  font-weight: 600;\n  color: ${p => p.theme.gray400};\n  line-height: ${p => p.theme.text.lineHeightBody};\n`;\n\nconst Description = styled('span')`\n  ${p => p.theme.overflowEllipsis};\n  font-size: 0.7rem;\n  font-variant-numeric: tabular-nums;\n  line-height: ${p => p.theme.text.lineHeightBody};\n  color: ${p => p.theme.subText};\n`;\n\ntype CrumbItemProps = {\n  isHovered: boolean;\n  isSelected: boolean;\n};\n\nconst CrumbItem = styled(PanelItem)<CrumbItemProps>`\n  display: grid;\n  grid-template-columns: max-content auto;\n  align-items: flex-start;\n  gap: ${space(1)};\n  width: 100%;\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  background: transparent;\n  padding: ${space(1)};\n  text-align: left;\n  border: none;\n  position: relative;\n  ${p => p.isSelected && `background-color: ${p.theme.purple100};`}\n  ${p => p.isHovered && `background-color: ${p.theme.surface100};`}\n  border-radius: ${p => p.theme.borderRadius};\n\n  /* Draw a vertical line behind the breadcrumb icon. The line connects each row together, but is truncated for the first and last items */\n  &::after {\n    content: '';\n    position: absolute;\n    left: 19.5px;\n    width: 1px;\n    background: ${p => p.theme.gray200};\n    height: 100%;\n  }\n\n  &:first-of-type::after {\n    top: ${space(1)};\n    bottom: 0;\n  }\n\n  &:last-of-type::after {\n    top: 0;\n    height: ${space(1)};\n  }\n\n  &:only-of-type::after {\n    height: 0;\n  }\n`;\n\n/**\n * Taken `from events/interfaces/.../breadcrumbs/types`\n */\nconst IconWrapper = styled('div')<Required<Pick<SVGIconProps, 'color'>>>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  color: ${p => p.theme.white};\n  background: ${p => p.theme[p.color] ?? p.color};\n  box-shadow: ${p => p.theme.dropShadowLightest};\n  position: relative;\n  z-index: ${p => p.theme.zIndex.initial};\n`;\n\nconst MemoizedBreadcrumbItem = memo(BreadcrumbItem);\n\nexport default MemoizedBreadcrumbItem;\n"],"names":["IconFire","IconFix","IconInfo","IconLocation","IconMobile","IconRefresh","IconSort","IconSpan","IconStack","IconTerminal","IconUser","IconWarning","BreadcrumbType","Icon","type","USER","UI","NAVIGATION","DEBUG","INFO","ERROR","HTTP","WARNING","QUERY","SYSTEM","SESSION","TRANSACTION","t","BreadcrumbLevelType","EntryType","defined","convertCrumbType","breadcrumb","EXCEPTION","DEFAULT","category","subcategory","split","Object","values","includes","getCrumbDescriptionAndColor","color","description","transformCrumbs","breadcrumbs","map","index","convertedCrumbType","id","level","UNDEFINED","moduleToCategory","module","undefined","match","getVirtualCrumb","event","exception","entries","find","entry","message","timestamp","dateCreated","value","mdl","data","levelTag","tags","tag","key","getDescription","crumb","to","JSON","stringify","getTitle","action","label","getDetails","title","DateTime","showPlayerTime","Tooltip","PlayerRelativeTime","relativeTimeMs","Value","p","theme","subText","fontSizeSmall","React","useCallback","useContext","useEffect","useRef","useState","useTheme","Replayer","ReplayerEvents","clearAllHighlights","highlightNode","removeHighlightedNode","useRAF","usePrevious","ReplayPlayerContext","createContext","currentHoverTime","currentTime","dimensions","height","width","fastForwardSpeed","highlight","initRoot","isBuffering","isFinished","isPlaying","isSkippingInactive","removeHighlight","replay","restart","setCurrentHoverTime","setCurrentTime","setSpeed","speed","togglePlayPause","toggleSkipInactive","useCurrentTime","callback","Provider","children","initialTimeOffset","events","getRRWebEvents","oldEvents","hasNewEvents","replayerRef","setDimensions","setIsPlaying","finishedAtMS","setFinishedAtMS","setIsSkippingInactive","setSpeedState","setFFSpeed","buffer","setBufferTime","target","previous","playTimer","unMountedRef","current","getCurrentTime","forceDimensions","dimension","onFastForwardStart","e","onFastForwardEnd","nodeId","annotation","replayer","clearAllHighlightsCallback","setReplayFinished","root","iframe","contentDocument","body","childElementCount","firstChild","removeChild","inst","blockClass","mouseTail","duration","lineCap","lineWidth","strokeStyle","purple200","skipInactive","on","Resize","Finish","SkipStart","SkipEnd","handleVisibilityChange","document","visibilityState","pause","wrapper","parentElement","addEventListener","removeEventListener","Math","max","requestedTimeMs","maxTimeMs","getMetaData","totalTime","time","window","clearTimeout","setTimeout","play","newSpeed","setConfig","skip","config","currentPlayerTime","useReplayContext","padStart","padZero","num","len","str","String","SECOND","MINUTE","HOUR","relativeTimeInMs","diffMs","abs","Date","getTime","showMs","formatTime","ms","isNaN","hour","floor","minute","second","formattedTime","milliseconds","countColumns","durationMs","minWidth","maxCols","remainder","timeOptions","timeBasedCols","reduce","set","Map","timespan","cols","Array","from","filter","_span","c","best","next","remaining","getCrumbsByColumn","startTimestampMs","crumbs","totalColumns","safeDurationMs","columnCrumbPairs","timestampMilliSeconds","sinceStart","columnPositionCalc","column","crumbsByColumn","has","get","push","doesOverlap","a","b","bStartsWithinA","startTimestamp","endTimestamp","bEndsWithinA","flattenSpans","rawSpans","length","spans","span","spanCount","firstSpan","restSpans","flatSpans","overlap","fspan","min","divide","numerator","denominator","IconChevron","space","ChevronDividedList","items","flatMap","item","i","li","List","Item","Chevron","gray300","first","last","Hovercard","TextOverflow","tn","BreadcrumbItem","splitCrumbs","onClick","firstUrl","summarizedCrumbs","slice","lastUrl","SingleLinkSegment","path","content","SummarySegment","handleOnClick","summaryItems","Span","Link","HalfPaddingHovercard","bodyClassName","props","memo","CrumbWalker","replayRecord","startedAt","handleClick","navCrumbs","StringWalker","urls","urlToCrumb","url","isBreadcrumbTypeDefault","DEFAULT_HIGHLIGHT_COLOR","highlightsByNodeId","keys","highlightObj","contains","canvas","delete","mirror","getMirror","node","getNode","top","left","getBoundingClientRect","highlightColor","cloneNode","ctx","getContext","fillStyle","fillRect","beginPath","setLineDash","moveTo","lineTo","closePath","stroke","font","textAlign","textBaseline","textWidth","measureText","fillText","insertBefore","timer","requestAnimationFrame","cancelAnimationFrame","mapResponseToReplayRecord","apiResponse","finishedAt","user","email","ip_address","name","username","rrwebEventListFactory","rrwebEvents","concat","sort","firstRRWebEvent","breadcrumbFactory","errors","rawCrumbs","initialUrl","initBreadcrumb","INIT","toISOString","errorCrumbs","error","spanCrumbs","op","startsWith","hasPageLoad","result","spansFactory","replayTimestamps","rawSpanData","rrwebTimestamps","breadcrumbTimestamps","rawCrumb","Boolean","spanStartTimestamps","spanEndTimestamps","endTimestampMs","useRouteContext","useLocation","route","location","BreadcrumbIcon","PanelItem","isHovered","isSelected","onMouseEnter","onMouseLeave","handleMouseEnter","handleMouseLeave","CrumbDetails","TitleContainer","Title","overflowEllipsis","gray400","text","lineHeightBody","Description","CrumbItem","fontSizeMedium","purple100","surface100","borderRadius","gray200","IconWrapper","white","dropShadowLightest","zIndex","initial","MemoizedBreadcrumbItem"],"sourceRoot":""}