{"version":3,"file":"chunks/app_utils_profiling_tableRenderer_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;AACA;;;;AAeA,SAASG,QAAT,OAAwF;EAAA,IAAtE;IAACC,KAAD;IAAQC,KAAR;IAAeC,OAAf;IAAwBC,gBAAxB;IAA0CC,OAA1C;IAAmDC;EAAnD,CAAsE;EACtF,MAAMC,MAAM,GAAGH,gBAAgB,EAA/B;;EAEA,IAAI,CAACG,MAAD,IAAW,CAACJ,OAAhB,EAAyB;IACvB,OAAO,gEAAC,aAAD;MAAe,KAAK,EAAEF,KAAtB;MAAA,UAA8BC;IAA9B,EAAP;EACD;;EAED,MAAMM,KAAK,GAAG,CAACF,SAAD,GAAa,IAAb,GACZ,gEAAC,eAAD;IAAiB,IAAI,EAAC,IAAtB;IAA2B,SAAS,EAAEA,SAAS,KAAK,MAAd,GAAuB,MAAvB,GAAgC;EAAtE,EADF;EAIA,OACE,iEAAC,UAAD;IAAY,KAAK,EAAEL,KAAnB;IAA0B,EAAE,EAAEM,MAA9B;IAAsC,OAAO,EAAEF,OAA/C;IAAA,WACGH,KADH,OACWM,KADX;EAAA,EADF;AAKD;;AAhBQR;;AAqBT,MAAMS,UAAU,GAAG,8EAAQC,KAAD,IAA4B;EACpD,MAAMC,YAAY,GAAGd,kDAAI,CAACa,KAAD,EAAQ,CAAC,OAAD,CAAR,CAAzB;EACA,OAAO,gEAAC,oEAAD,OAAUC;EAAV,EAAP;AACD,CAHkB;EAAA;AAAA,MAAH,iHAgBXC,CAAD,IAAyBA,CAAC,CAACX,KAAF,GAAW,eAAcW,CAAC,CAACX,KAAM,GAAjC,GAAsC,EAhBnD,yBAAhB;;AAmBA,MAAMY,aAAa,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,iDAIdD,CAAD,IAA6BA,CAAC,CAACX,KAAF,GAAW,eAAcW,CAAC,CAACX,KAAM,GAAjC,GAAsC,EAJpD,yBAAnB;;AAOA,MAAMa,eAAe,GAAG,8EAAOf,mDAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAArB;;AAIA,iEAAeC,QAAf;;;;;;;;;;;;;;;;ACpEA;;AAcO,SAASe,eAAT,OAKe;EAAA,IALa;IACjCC,WADiC;IAEjCZ,gBAFiC;IAGjCa,mBAHiC;IAIjCC;EAJiC,CAKb;EACpB,OAAO,CAACC,MAAD,EAA6BC,YAA7B,KAAsD;IAAA;;IAC3D,OACE,gEAAC,+EAAD;MACE,KAAK,EAAEH,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,IAAAA,mBAAmB,CAAEI,GAArB,CAAyBF,MAAM,CAACG,GAAhC,IAAuC,OAAvC,GAAiD,MAD1D;MAEE,KAAK,EAAEH,MAAM,CAACI,IAFhB;MAGE,SAAS,EACP,CAAAP,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEG,MAAb,MAAwBA,MAAM,CAACG,GAA/B,GAAqCN,WAArC,aAAqCA,WAArC,uBAAqCA,WAAW,CAAEV,SAAlD,GAA8DkB,SAJlE;MAME,OAAO,EAAE,CAAAN,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEG,GAAjB,CAAqBF,MAAM,CAACG,GAA5B,MAAoC,KAN/C;MAOE,gBAAgB,uBAAElB,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAGe,MAAM,CAACG,GAAV,CAAlB,iEAAqC,MAAME;IAP7D,EADF;EAWD,CAZD;AAaD","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/utils/profiling/tableRenderer.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {LocationDescriptorObject} from 'history';\n\nimport {GridColumnOrder} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\n\ntype Sort<K> = {\n  column: K;\n  direction: 'asc' | 'desc';\n};\n\ninterface TableHeadProps<K> {\n  currentSort?: Sort<K>;\n  generateSortLink?: (column: K) => () => LocationDescriptorObject | undefined;\n  rightAlignedColumns?: Set<K>;\n  sortableColumns?: Set<K>;\n}\n\nexport function renderTableHead<K>({\n  currentSort,\n  generateSortLink,\n  rightAlignedColumns,\n  sortableColumns,\n}: TableHeadProps<K>) {\n  return (column: GridColumnOrder<K>, _columnIndex: number) => {\n    return (\n      <SortLink\n        align={rightAlignedColumns?.has(column.key) ? 'right' : 'left'}\n        title={column.name}\n        direction={\n          currentSort?.column === column.key ? currentSort?.direction : undefined\n        }\n        canSort={sortableColumns?.has(column.key) || false}\n        generateSortLink={generateSortLink?.(column.key) ?? (() => undefined)}\n      />\n    );\n  };\n}\n"],"names":["omit","Link","IconArrow","SortLink","align","title","canSort","generateSortLink","onClick","direction","target","arrow","StyledLink","props","forwardProps","p","StyledNonLink","StyledIconArrow","renderTableHead","currentSort","rightAlignedColumns","sortableColumns","column","_columnIndex","has","key","name","undefined"],"sourceRoot":""}