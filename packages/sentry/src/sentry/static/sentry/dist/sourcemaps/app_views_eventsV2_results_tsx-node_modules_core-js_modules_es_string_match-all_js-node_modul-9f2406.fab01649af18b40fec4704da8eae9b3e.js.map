{"version":3,"file":"chunks/app_views_eventsV2_results_tsx-node_modules_core-js_modules_es_string_match-all_js-node_modul-9f2406.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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,oGAAmC;AAC5D,0BAA0B,mBAAO,CAAC,wFAA6B;AAC/D,cAAc,mBAAO,CAAC,0EAAsB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,oEAAoE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;AChGA,kBAAkB,mBAAO,CAAC,8DAAgB;AAC1C,iBAAiB,mBAAO,CAAC,4DAAe;AACxC,qBAAqB,mBAAO,CAAC,oEAAmB;AAChD,kBAAkB,mBAAO,CAAC,4DAAe;AACzC,kBAAkB,mBAAO,CAAC,8DAAgB;AAC1C,WAAW,mBAAO,CAAC,8CAAQ;;AAE3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;ACzDA,mBAAmB,mBAAO,CAAC,gEAAiB;AAC5C,aAAa,mBAAO,CAAC,oDAAW;AAChC,mBAAmB,mBAAO,CAAC,gEAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,GAAG;AAChB;AACA;AACA,oBAAoB,QAAQ,IAAI,QAAQ;AACxC;AACA,kCAAkC,aAAa;AAC/C,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvCA,mBAAmB,mBAAO,CAAC,gEAAiB;AAC5C,aAAa,mBAAO,CAAC,kDAAU;AAC/B,aAAa,mBAAO,CAAC,kDAAU;;AAE/B;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA","sources":["webpack:///./app/components/createAlertButton.tsx","webpack:///./app/components/dataExport.tsx","webpack:///./app/utils/performance/urls.ts","webpack:///./app/utils/useOverlay.tsx","webpack:///./app/utils/useTags.tsx","webpack:///./app/views/alerts/rules/metric/types.tsx","webpack:///./app/views/alerts/wizard/options.tsx","webpack:///./app/views/eventsV2/breadcrumb.tsx","webpack:///./app/views/eventsV2/chartFooter.tsx","webpack:///./app/views/eventsV2/eventInputName.tsx","webpack:///./app/views/eventsV2/results.tsx","webpack:///./app/views/eventsV2/resultsChart.tsx","webpack:///./app/views/eventsV2/resultsHeader.tsx","webpack:///./app/views/eventsV2/savedQuery/index.tsx","webpack:///./app/views/eventsV2/table/columnEditModal.tsx","webpack:///./app/views/eventsV2/table/index.tsx","webpack:///./app/views/eventsV2/table/tableActions.tsx","webpack:///./app/views/eventsV2/table/tableView.tsx","webpack:///./app/views/eventsV2/tags.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/views/performance/trends/types.tsx","webpack:///./app/views/performance/trends/utils.tsx","webpack:///./app/views/performance/utils.tsx","webpack:///../node_modules/core-js/internals/a-constructor.js","webpack:///../node_modules/core-js/internals/species-constructor.js","webpack:///../node_modules/core-js/modules/es.string.match-all.js","webpack:///../node_modules/lodash/assign.js","webpack:///../node_modules/lodash/maxBy.js","webpack:///../node_modules/lodash/negate.js","webpack:///../node_modules/lodash/omitBy.js"],"sourcesContent":["// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {navigateTo} from 'sentry/actionCreators/navigation';\nimport Access from 'sentry/components/acl/access';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport {IconSiren} from 'sentry/icons';\nimport type {SVGIconProps} from 'sentry/icons/svgIcon';\nimport {t, tct} from 'sentry/locale';\nimport type {Organization, Project} from 'sentry/types';\nimport type EventView from 'sentry/utils/discover/eventView';\nimport useApi from 'sentry/utils/useApi';\nimport {\n  AlertType,\n  AlertWizardAlertNames,\n  AlertWizardRuleTemplates,\n  DEFAULT_WIZARD_TEMPLATE,\n} from 'sentry/views/alerts/wizard/options';\n\nexport type CreateAlertFromViewButtonProps = ButtonProps & {\n  /**\n   * Discover query used to create the alert\n   */\n  eventView: EventView;\n  organization: Organization;\n  projects: Project[];\n  alertType?: AlertType;\n  className?: string;\n  /**\n   * Passed in value to override any metrics decision and switch back to transactions dataset.\n   * We currently do a few checks on metrics data on performance pages and this passes the decision onward to alerts.\n   */\n  disableMetricDataset?: boolean;\n  /**\n   * Called when the user is redirected to the alert builder\n   */\n  onClick?: () => void;\n\n  referrer?: string;\n};\n\n/**\n * Provide a button that can create an alert from an event view.\n * Emits incompatible query issues on click\n */\nfunction CreateAlertFromViewButton({\n  projects,\n  eventView,\n  organization,\n  referrer,\n  onClick,\n  alertType,\n  disableMetricDataset,\n  ...buttonProps\n}: CreateAlertFromViewButtonProps) {\n  const project = projects.find(p => p.id === `${eventView.project[0]}`);\n  const queryParams = eventView.generateQueryStringObject();\n  if (queryParams.query?.includes(`project:${project?.slug}`)) {\n    queryParams.query = (queryParams.query as string).replace(\n      `project:${project?.slug}`,\n      ''\n    );\n  }\n\n  const alertTemplate = alertType\n    ? AlertWizardRuleTemplates[alertType]\n    : DEFAULT_WIZARD_TEMPLATE;\n\n  const to = {\n    pathname: `/organizations/${organization.slug}/alerts/new/metric/`,\n    query: {\n      ...queryParams,\n      createFromDiscover: true,\n      disableMetricDataset,\n      referrer,\n      ...alertTemplate,\n      project: project?.slug,\n      aggregate: queryParams.yAxis ?? alertTemplate.aggregate,\n    },\n  };\n\n  const handleClick = () => {\n    onClick?.();\n  };\n\n  return (\n    <CreateAlertButton\n      organization={organization}\n      onClick={handleClick}\n      to={to}\n      aria-label={t('Create Alert')}\n      {...buttonProps}\n    />\n  );\n}\n\ntype CreateAlertButtonProps = {\n  organization: Organization;\n  alertOption?: keyof typeof AlertWizardAlertNames;\n  hideIcon?: boolean;\n  iconProps?: SVGIconProps;\n  /**\n   * Callback when the button is clicked.\n   * This is different from `onClick` which always overrides the default\n   * behavior when the button was clicked.\n   */\n  onEnter?: () => void;\n  projectSlug?: string;\n  referrer?: string;\n  showPermissionGuide?: boolean;\n} & WithRouterProps &\n  ButtonProps;\n\nconst CreateAlertButton = withRouter(\n  ({\n    organization,\n    projectSlug,\n    iconProps,\n    referrer,\n    router,\n    hideIcon,\n    showPermissionGuide,\n    alertOption,\n    onEnter,\n    ...buttonProps\n  }: CreateAlertButtonProps) => {\n    const api = useApi();\n    const createAlertUrl = (providedProj: string) => {\n      const alertsBaseUrl = `/organizations/${organization.slug}/alerts`;\n      const alertsArgs = [\n        `${referrer ? `referrer=${referrer}` : ''}`,\n        `${\n          providedProj && providedProj !== ':projectId' ? `project=${providedProj}` : ''\n        }`,\n        alertOption ? `alert_option=${alertOption}` : '',\n      ].filter(item => item !== '');\n\n      return `${alertsBaseUrl}/wizard/${alertsArgs.length ? '?' : ''}${alertsArgs.join(\n        '&'\n      )}`;\n    };\n\n    function handleClickWithoutProject(event: React.MouseEvent) {\n      event.preventDefault();\n      onEnter?.();\n\n      navigateTo(createAlertUrl(':projectId'), router);\n    }\n\n    async function enableAlertsMemberWrite() {\n      const settingsEndpoint = `/organizations/${organization.slug}/`;\n      addLoadingMessage();\n      try {\n        await api.requestPromise(settingsEndpoint, {\n          method: 'PUT',\n          data: {\n            alertsMemberWrite: true,\n          },\n        });\n        addSuccessMessage(t('Successfully updated organization settings'));\n      } catch (err) {\n        addErrorMessage(t('Unable to update organization settings'));\n      }\n    }\n\n    const permissionTooltipText = tct(\n      'Ask your organization owner or manager to [settingsLink:enable alerts access] for you.',\n      {settingsLink: <Link to={`/settings/${organization.slug}`} />}\n    );\n\n    const renderButton = (hasAccess: boolean) => (\n      <Button\n        disabled={!hasAccess}\n        title={!hasAccess ? permissionTooltipText : undefined}\n        icon={!hideIcon && <IconSiren {...iconProps} />}\n        to={projectSlug ? createAlertUrl(projectSlug) : undefined}\n        tooltipProps={{\n          isHoverable: true,\n          position: 'top',\n          overlayStyle: {\n            maxWidth: '270px',\n          },\n        }}\n        onClick={projectSlug ? onEnter : handleClickWithoutProject}\n        {...buttonProps}\n      >\n        {buttonProps.children ?? t('Create Alert')}\n      </Button>\n    );\n\n    const showGuide = !organization.alertsMemberWrite && !!showPermissionGuide;\n\n    return (\n      <Access organization={organization} access={['alerts:write']}>\n        {({hasAccess}) =>\n          showGuide ? (\n            <Access organization={organization} access={['org:write']}>\n              {({hasAccess: isOrgAdmin}) => (\n                <GuideAnchor\n                  target={isOrgAdmin ? 'alerts_write_owner' : 'alerts_write_member'}\n                  onFinish={isOrgAdmin ? enableAlertsMemberWrite : undefined}\n                >\n                  {renderButton(hasAccess)}\n                </GuideAnchor>\n              )}\n            </Access>\n          ) : (\n            renderButton(hasAccess)\n          )\n        }\n      </Access>\n    );\n  }\n);\n\nexport {CreateAlertFromViewButton};\nexport default CreateAlertButton;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport debounce from 'lodash/debounce';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\n// NOTE: Coordinate with other ExportQueryType (src/sentry/data_export/base.py)\nexport enum ExportQueryType {\n  IssuesByTag = 'Issues-by-Tag',\n  Discover = 'Discover',\n}\n\ninterface DataExportPayload {\n  queryInfo: any;\n  queryType: ExportQueryType; // TODO(ts): Formalize different possible payloads\n}\n\ninterface DataExportProps {\n  api: Client;\n  organization: Organization;\n  payload: DataExportPayload;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n}\n\nfunction DataExport({\n  api,\n  children,\n  disabled,\n  organization,\n  payload,\n  icon,\n}: DataExportProps): React.ReactElement {\n  const unmountedRef = useRef(false);\n  const [inProgress, setInProgress] = useState(false);\n\n  // We clear the indicator if export props change so that the user\n  // can fire another export without having to wait for the previous one to finish.\n  useEffect(() => {\n    if (inProgress) {\n      setInProgress(false);\n    }\n    // We are skipping the inProgress dependency because it would have fired on each handleDataExport\n    // call and would have immediately turned off the value giving users no feedback on their click action.\n    // An alternative way to handle this would have probably been to key the component by payload/queryType,\n    // but that seems like it can be a complex object so tracking changes could result in very brittle behavior.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [payload.queryType, payload.queryInfo]);\n\n  // Tracking unmounting of the component to prevent setState call on unmounted component\n  useEffect(() => {\n    return () => {\n      unmountedRef.current = true;\n    };\n  }, []);\n\n  const handleDataExport = useCallback(() => {\n    setInProgress(true);\n\n    // This is a fire and forget request.\n    api\n      .requestPromise(`/organizations/${organization.slug}/data-export/`, {\n        includeAllArgs: true,\n        method: 'POST',\n        data: {\n          query_type: payload.queryType,\n          query_info: payload.queryInfo,\n        },\n      })\n      .then(([_data, _, response]) => {\n        // If component has unmounted, don't do anything\n        if (unmountedRef.current) {\n          return;\n        }\n\n        addSuccessMessage(\n          response?.status === 201\n            ? t(\n                \"Sit tight. We'll shoot you an email when your data is ready for download.\"\n              )\n            : t(\"It looks like we're already working on it. Sit tight, we'll email you.\")\n        );\n      })\n      .catch(err => {\n        // If component has unmounted, don't do anything\n        if (unmountedRef.current) {\n          return;\n        }\n        const message =\n          err?.responseJSON?.detail ??\n          \"We tried our hardest, but we couldn't export your data. Give it another go.\";\n\n        addErrorMessage(t(message));\n        setInProgress(false);\n      });\n  }, [payload.queryInfo, payload.queryType, organization.slug, api]);\n\n  return (\n    <Feature features={['organizations:discover-query']}>\n      {inProgress ? (\n        <Button\n          size=\"sm\"\n          priority=\"default\"\n          title=\"You can get on with your life. We'll email you when your data's ready.\"\n          disabled\n          icon={icon}\n        >\n          {t(\"We're working on it...\")}\n        </Button>\n      ) : (\n        <Button\n          onClick={debounce(handleDataExport, 500)}\n          disabled={disabled || false}\n          size=\"sm\"\n          priority=\"default\"\n          title=\"Put your data to work. Start your export and we'll email you when it's finished.\"\n          icon={icon}\n        >\n          {children ? children : t('Export All to CSV')}\n        </Button>\n      )}\n    </Feature>\n  );\n}\n\nexport {DataExport};\nexport default withApi(withOrganization(DataExport));\n","import {LocationDescriptor, Query} from 'history';\n\nimport {spanTargetHash} from 'sentry/components/events/interfaces/spans/utils';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport function getTransactionDetailsUrl(\n  orgSlug: Organization['slug'],\n  eventSlug: string,\n  transaction?: string,\n  query?: Query,\n  spanId?: string\n): LocationDescriptor {\n  const locationQuery = {\n    ...(query || {}),\n    transaction,\n  };\n  if (!defined(locationQuery.transaction)) {\n    delete locationQuery.transaction;\n  }\n\n  const target = {\n    pathname: `/organizations/${orgSlug}/performance/${eventSlug}/`,\n    query: locationQuery,\n    hash: defined(spanId) ? spanTargetHash(spanId) : undefined,\n  };\n  if (!defined(target.hash)) {\n    delete target.hash;\n  }\n\n  return target;\n}\n","import {useMemo, useState} from 'react';\nimport {PopperProps, usePopper} from 'react-popper';\nimport {useButton} from '@react-aria/button';\nimport {\n  OverlayProps,\n  OverlayTriggerProps,\n  useOverlay as useAriaOverlay,\n  useOverlayTrigger,\n} from '@react-aria/overlays';\nimport {mergeProps} from '@react-aria/utils';\nimport {useOverlayTriggerState} from '@react-stately/overlays';\nimport {OverlayTriggerProps as OverlayTriggerStateProps} from '@react-types/overlays';\n\ninterface UseOverlayProps\n  extends Partial<OverlayProps>,\n    Partial<OverlayTriggerProps>,\n    Partial<OverlayTriggerStateProps> {\n  /**\n   * Offset along the main axis.\n   */\n  offset?: number;\n  /**\n   * Position for the overlay.\n   */\n  position?: PopperProps<any>['placement'];\n}\n\nfunction useOverlay({\n  isOpen,\n  defaultOpen,\n  onOpenChange,\n  type = 'dialog',\n  offset = 8,\n  position = 'top',\n  isDismissable = true,\n  shouldCloseOnBlur = false,\n  isKeyboardDismissDisabled,\n  shouldCloseOnInteractOutside,\n}: UseOverlayProps = {}) {\n  // Callback refs for react-popper\n  const [triggerElement, setTriggerElement] = useState<HTMLButtonElement | null>(null);\n  const [overlayElement, setOverlayElement] = useState<HTMLDivElement | null>(null);\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null);\n\n  // Ref objects for react-aria (useOverlayTrigger & useOverlay)\n  const triggerRef = useMemo(() => ({current: triggerElement}), [triggerElement]);\n  const overlayRef = useMemo(() => ({current: overlayElement}), [overlayElement]);\n\n  // Get props for trigger button\n  const openState = useOverlayTriggerState({isOpen, defaultOpen, onOpenChange});\n  const {buttonProps} = useButton({onPress: openState.open}, triggerRef);\n  const {triggerProps, overlayProps: overlayTriggerProps} = useOverlayTrigger(\n    {type},\n    openState,\n    triggerRef\n  );\n\n  // Get props for overlay element\n  const {overlayProps} = useAriaOverlay(\n    {\n      onClose: openState.close,\n      isOpen: openState.isOpen,\n      isDismissable,\n      shouldCloseOnBlur,\n      isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside,\n    },\n    overlayRef\n  );\n\n  const modifiers = useMemo(\n    () => [\n      {\n        name: 'hide',\n        enabled: false,\n      },\n      {\n        name: 'computeStyles',\n        options: {\n          // Using the `transform` attribute causes our borders to get blurry\n          // in chrome. See [0]. This just causes it to use `top` / `left`\n          // positions, which should be fine.\n          //\n          // [0]: https://stackoverflow.com/questions/29543142/css3-transformation-blurry-borders\n          gpuAcceleration: false,\n        },\n      },\n      {\n        name: 'arrow',\n        options: {\n          element: arrowElement,\n          // Set padding to avoid the arrow reaching the side of the tooltip\n          // and overflowing out of the rounded border\n          padding: 4,\n        },\n      },\n      {\n        name: 'offset',\n        options: {\n          offset: [0, offset],\n        },\n      },\n      {\n        name: 'preventOverflow',\n        enabled: true,\n        options: {\n          padding: 12,\n          altAxis: true,\n        },\n      },\n    ],\n    [arrowElement, offset]\n  );\n  const {styles: popperStyles, state: popperState} = usePopper(\n    triggerElement,\n    overlayElement,\n    {modifiers, placement: position}\n  );\n\n  return {\n    isOpen: openState.isOpen,\n    triggerProps: {\n      ref: setTriggerElement,\n      ...mergeProps(buttonProps, triggerProps),\n    },\n    overlayProps: {\n      ref: setOverlayElement,\n      style: popperStyles.popper,\n      ...mergeProps(overlayTriggerProps, overlayProps),\n    },\n    arrowProps: {\n      ref: setArrowElement,\n      style: popperStyles.arrow,\n      placement: popperState?.placement,\n    },\n  };\n}\n\nexport default useOverlay;\n","import TagStore from 'sentry/stores/tagStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {TagCollection} from 'sentry/types';\n\ntype Result = {\n  tags: TagCollection;\n};\n\nfunction useTags(): Result {\n  const tags = useLegacyStore(TagStore);\n\n  return {\n    tags,\n  };\n}\n\nexport default useTags;\n","import {t} from 'sentry/locale';\nimport {MEPAlertsQueryType} from 'sentry/views/alerts/wizard/options';\nimport type {SchemaFormConfig} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\n\nimport type {Incident} from '../../types';\n\nexport enum AlertRuleThresholdType {\n  ABOVE,\n  BELOW,\n}\n\nexport enum AlertRuleTriggerType {\n  CRITICAL = 'critical',\n  WARNING = 'warning',\n  RESOLVE = 'resolve',\n}\n\nexport enum AlertRuleComparisonType {\n  COUNT = 'count',\n  CHANGE = 'change',\n  PERCENT = 'percent',\n}\n\nexport enum Dataset {\n  ERRORS = 'events',\n  TRANSACTIONS = 'transactions',\n  /** Also used for performance alerts **/\n  GENERIC_METRICS = 'generic_metrics',\n  SESSIONS = 'sessions',\n  /** Also used for crash free alerts */\n  METRICS = 'metrics',\n}\n\nexport enum EventTypes {\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n  USER = 'user',\n  SESSION = 'session',\n}\n\nexport enum Datasource {\n  ERROR_DEFAULT = 'error_default',\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n}\n\n/**\n * This is not a real aggregate as crash-free sessions/users can be only calculated on frontend by comparing the count of sessions broken down by status\n * It is here nevertheless to shoehorn sessions dataset into existing alerts codebase\n * This will most likely be revised as we introduce the metrics dataset\n */\nexport enum SessionsAggregate {\n  CRASH_FREE_SESSIONS = 'percentage(sessions_crashed, sessions) AS _crash_rate_alert_aggregate',\n  CRASH_FREE_USERS = 'percentage(users_crashed, users) AS _crash_rate_alert_aggregate',\n}\n\nexport type UnsavedTrigger = {\n  actions: Action[];\n  alertThreshold: number | '' | null;\n  label: AlertRuleTriggerType;\n  // UnsavedTrigger can be a part of an Unsaved Alert Rule that does not have an\n  // id yet\n  alertRuleId?: string;\n};\n\nexport type ThresholdControlValue = {\n  /**\n   * Resolve threshold is optional, so it can be null\n   */\n  threshold: number | '' | null;\n  thresholdType: AlertRuleThresholdType;\n};\n\ntype SavedTrigger = Omit<UnsavedTrigger, 'actions'> & {\n  actions: Action[];\n  dateCreated: string;\n  id: string;\n};\n\nexport type Trigger = Partial<SavedTrigger> & UnsavedTrigger;\n\nexport type UnsavedMetricRule = {\n  aggregate: string;\n  dataset: Dataset;\n  environment: string | null;\n  projects: string[];\n  query: string;\n  resolveThreshold: number | '' | null;\n  thresholdPeriod: number | null;\n  thresholdType: AlertRuleThresholdType;\n  timeWindow: TimeWindow;\n  triggers: Trigger[];\n  comparisonDelta?: number | null;\n  eventTypes?: EventTypes[];\n  owner?: string | null;\n  queryType?: MEPAlertsQueryType | null;\n};\n\nexport interface SavedMetricRule extends UnsavedMetricRule {\n  dateCreated: string;\n  dateModified: string;\n  id: string;\n  name: string;\n  status: number;\n  createdBy?: {email: string; id: number; name: string} | null;\n  errors?: {detail: string}[];\n  /**\n   * Returned with the expand=latestIncident query parameter\n   */\n  latestIncident?: Incident | null;\n  originalAlertRuleId?: number | null;\n}\n\nexport type MetricRule = Partial<SavedMetricRule> & UnsavedMetricRule;\n\nexport enum TimePeriod {\n  SIX_HOURS = '6h',\n  ONE_DAY = '1d',\n  THREE_DAYS = '3d',\n  // Seven days is actually 10080m but we have a max of 10000 events\n  SEVEN_DAYS = '10000m',\n  FOURTEEN_DAYS = '14d',\n  THIRTY_DAYS = '30d',\n}\n\nexport enum TimeWindow {\n  ONE_MINUTE = 1,\n  FIVE_MINUTES = 5,\n  TEN_MINUTES = 10,\n  FIFTEEN_MINUTES = 15,\n  THIRTY_MINUTES = 30,\n  ONE_HOUR = 60,\n  TWO_HOURS = 120,\n  FOUR_HOURS = 240,\n  ONE_DAY = 1440,\n}\n\nexport enum ActionType {\n  EMAIL = 'email',\n  SLACK = 'slack',\n  PAGERDUTY = 'pagerduty',\n  MSTEAMS = 'msteams',\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const ActionLabel = {\n  // \\u200B is needed because Safari disregards autocomplete=\"off\". It's seeing \"Email\" and\n  // opening up the browser autocomplete for email. https://github.com/JedWatson/react-select/issues/3500\n  [ActionType.EMAIL]: t('Emai\\u200Bl'),\n  [ActionType.SLACK]: t('Slack'),\n  [ActionType.PAGERDUTY]: t('Pagerduty'),\n  [ActionType.MSTEAMS]: t('MS Teams'),\n  [ActionType.SENTRY_APP]: t('Notification'),\n};\n\nexport enum TargetType {\n  // A direct reference, like an email address, Slack channel, or PagerDuty service\n  SPECIFIC = 'specific',\n\n  // A specific user. This could be used to grab the user's email address.\n  USER = 'user',\n\n  // A specific team. This could be used to send an email to everyone associated with a team.\n  TEAM = 'team',\n\n  // A Sentry App instead of any of the above.\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const TargetLabel = {\n  [TargetType.USER]: t('Member'),\n  [TargetType.TEAM]: t('Team'),\n};\n\n/**\n * This is an available action template that is associated to a Trigger in a\n * Metric Alert Rule. They are defined by the available-actions API.\n */\nexport type MetricActionTemplate = {\n  /**\n   * See `TargetType`\n   */\n  allowedTargetTypes: TargetType[];\n\n  /**\n   * The integration type e.g. 'email'\n   */\n  type: ActionType;\n\n  /**\n   * Integration id for this `type`, should be passed to backend as `integrationId` when creating an action\n   */\n  integrationId?: number;\n\n  /**\n   * Name of the integration. This is a text field that differentiates integrations from the same provider from each other\n   */\n  integrationName?: string;\n\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options?: Array<{label: string; value: any}>;\n\n  /**\n   * SentryApp id for this `type`, should be passed to backend as `sentryAppId` when creating an action.\n   */\n  sentryAppId?: number;\n\n  sentryAppInstallationUuid?: string;\n  /**\n   * Name of the SentryApp. Like `integrationName`, this differentiates SentryApps from each other.\n   */\n  sentryAppName?: string;\n\n  /**\n   * Sentry App Alert Rule UI Component settings\n   */\n  settings?: SchemaFormConfig;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n\n/**\n * This is the user's configured action\n */\nexport type Action = UnsavedAction & Partial<SavedActionFields>;\n\ntype SavedActionFields = {\n  /**\n   * The id of the alert rule this action belongs to\n   */\n  alertRuleTriggerId: string;\n\n  /**\n   * date created\n   */\n  dateCreated: string;\n\n  /**\n   * A human readable description of the action generated by server\n   */\n  desc: string;\n\n  /**\n   * model id of the action\n   */\n  id: string;\n\n  /**\n   *  Could not fetch details from SentryApp. Show the rule but make it disabled.\n   */\n  disabled?: boolean;\n};\n\ntype UnsavedAction = {\n  /**\n   * An optional Slack channel or user id the user can input to avoid rate limiting issues.\n   */\n  inputChannelId: string | null;\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options: Array<{label: string; value: any}> | null;\n  /**\n   * How to identify the target. Can be email, slack channel, pagerduty service,\n   * user_id, team_id, SentryApp id, etc\n   */\n  targetIdentifier: string | null;\n\n  targetType: TargetType | null;\n\n  type: ActionType;\n  /** Used to maintain order of unsaved actions */\n  unsavedDateCreated: string;\n  unsavedId: string;\n\n  /**\n   * The id of the integration, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  integrationId?: number | null;\n\n  /**\n   * The id of the SentryApp, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  sentryAppId?: number | null;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n","import {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {\n  Dataset,\n  EventTypes,\n  SessionsAggregate,\n} from 'sentry/views/alerts/rules/metric/types';\n\nexport type AlertType =\n  | 'issues'\n  | 'num_errors'\n  | 'users_experiencing_errors'\n  | 'throughput'\n  | 'trans_duration'\n  | 'apdex'\n  | 'failure_rate'\n  | 'lcp'\n  | 'fid'\n  | 'cls'\n  | 'custom'\n  | 'crash_free_sessions'\n  | 'crash_free_users';\n\nexport enum MEPAlertsQueryType {\n  ERROR = 0,\n  PERFORMANCE = 1,\n  CRASH_RATE = 2,\n}\n\nexport enum MEPAlertsDataset {\n  DISCOVER = 'discover',\n  METRICS = 'metrics',\n  METRICS_ENHANCED = 'metricsEnhanced',\n}\n\nexport type MetricAlertType = Exclude<AlertType, 'issues'>;\n\nexport const DatasetMEPAlertQueryTypes: Record<Dataset, MEPAlertsQueryType> = {\n  [Dataset.ERRORS]: MEPAlertsQueryType.ERROR,\n  [Dataset.TRANSACTIONS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.GENERIC_METRICS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.METRICS]: MEPAlertsQueryType.CRASH_RATE,\n  [Dataset.SESSIONS]: MEPAlertsQueryType.CRASH_RATE,\n};\n\nexport const AlertWizardAlertNames: Record<AlertType, string> = {\n  issues: t('Issues'),\n  num_errors: t('Number of Errors'),\n  users_experiencing_errors: t('Users Experiencing Errors'),\n  throughput: t('Throughput'),\n  trans_duration: t('Transaction Duration'),\n  apdex: t('Apdex'),\n  failure_rate: t('Failure Rate'),\n  lcp: t('Largest Contentful Paint'),\n  fid: t('First Input Delay'),\n  cls: t('Cumulative Layout Shift'),\n  custom: t('Custom Metric'),\n  crash_free_sessions: t('Crash Free Session Rate'),\n  crash_free_users: t('Crash Free User Rate'),\n};\n\ntype AlertWizardCategory = {\n  categoryHeading: string;\n  options: AlertType[];\n};\nexport const getAlertWizardCategories = (org: Organization): AlertWizardCategory[] => [\n  {\n    categoryHeading: t('Errors'),\n    options: ['issues', 'num_errors', 'users_experiencing_errors'],\n  },\n  ...(org.features.includes('crash-rate-alerts')\n    ? [\n        {\n          categoryHeading: t('Sessions'),\n          options: ['crash_free_sessions', 'crash_free_users'] as AlertType[],\n        },\n      ]\n    : []),\n  {\n    categoryHeading: t('Performance'),\n    options: [\n      'throughput',\n      'trans_duration',\n      'apdex',\n      'failure_rate',\n      'lcp',\n      'fid',\n      'cls',\n    ],\n  },\n  {\n    categoryHeading: t('Other'),\n    options: ['custom'],\n  },\n];\n\nexport type WizardRuleTemplate = {\n  aggregate: string;\n  dataset: Dataset;\n  eventTypes: EventTypes;\n};\n\nexport const AlertWizardRuleTemplates: Record<\n  MetricAlertType,\n  Readonly<WizardRuleTemplate>\n> = {\n  num_errors: {\n    aggregate: 'count()',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  users_experiencing_errors: {\n    aggregate: 'count_unique(user)',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  throughput: {\n    aggregate: 'count()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  trans_duration: {\n    aggregate: 'p95(transaction.duration)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  apdex: {\n    aggregate: 'apdex(300)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  failure_rate: {\n    aggregate: 'failure_rate()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  lcp: {\n    aggregate: 'p95(measurements.lcp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  fid: {\n    aggregate: 'p95(measurements.fid)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  cls: {\n    aggregate: 'p95(measurements.cls)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  custom: {\n    aggregate: 'p95(measurements.fp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  crash_free_sessions: {\n    aggregate: SessionsAggregate.CRASH_FREE_SESSIONS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.SESSION,\n  },\n  crash_free_users: {\n    aggregate: SessionsAggregate.CRASH_FREE_USERS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.USER,\n  },\n};\n\nexport const DEFAULT_WIZARD_TEMPLATE = AlertWizardRuleTemplates.num_errors;\n\nexport const hidePrimarySelectorSet = new Set<AlertType>([\n  'num_errors',\n  'users_experiencing_errors',\n  'throughput',\n  'apdex',\n  'failure_rate',\n  'crash_free_sessions',\n  'crash_free_users',\n]);\n\nexport const hideParameterSelectorSet = new Set<AlertType>([\n  'trans_duration',\n  'lcp',\n  'fid',\n  'cls',\n]);\n\nexport function getMEPAlertsDataset(\n  dataset: Dataset,\n  newAlert: boolean\n): MEPAlertsDataset {\n  // Dataset.ERRORS overrides all cases\n  if (dataset === Dataset.ERRORS) {\n    return MEPAlertsDataset.DISCOVER;\n  }\n\n  if (newAlert) {\n    return MEPAlertsDataset.METRICS_ENHANCED;\n  }\n\n  if (dataset === Dataset.GENERIC_METRICS) {\n    return MEPAlertsDataset.METRICS;\n  }\n\n  return MEPAlertsDataset.DISCOVER;\n}\n","import {Location} from 'history';\n\nimport Breadcrumbs, {Crumb} from 'sentry/components/breadcrumbs';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {getDiscoverLandingUrl} from 'sentry/utils/discover/urls';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  event?: Event;\n};\n\nfunction DiscoverBreadcrumb({eventView, event, organization, location}: Props) {\n  const crumbs: Crumb[] = [];\n  const discoverTarget = organization.features.includes('discover-query')\n    ? {\n        pathname: getDiscoverLandingUrl(organization),\n        query: {\n          ...location.query,\n          ...eventView.generateBlankQueryStringObject(),\n          ...eventView.getPageFiltersQuery(),\n        },\n      }\n    : null;\n\n  crumbs.push({\n    to: discoverTarget,\n    label: t('Discover'),\n  });\n\n  if (eventView && eventView.isValid()) {\n    crumbs.push({\n      to: eventView.getResultsViewUrlTarget(organization.slug),\n      label: eventView.name || '',\n    });\n  }\n\n  if (event) {\n    crumbs.push({\n      label: t('Event Detail'),\n    });\n  }\n\n  return <Breadcrumbs crumbs={crumbs} />;\n}\n\nexport default DiscoverBreadcrumb;\n","import OptionSelector from 'sentry/components/charts/optionSelector';\nimport {\n  ChartControls,\n  InlineContainer,\n  SectionHeading,\n  SectionValue,\n} from 'sentry/components/charts/styles';\nimport {t} from 'sentry/locale';\nimport {Organization, SelectValue} from 'sentry/types';\nimport {TOP_EVENT_MODES} from 'sentry/utils/discover/types';\n\ntype Props = {\n  displayMode: string;\n  displayOptions: SelectValue<string>[];\n  onAxisChange: (value: string[]) => void;\n  onDisplayChange: (value: string) => void;\n  onTopEventsChange: (value: string) => void;\n  organization: Organization;\n  topEvents: string;\n  total: number | null;\n  yAxisOptions: SelectValue<string>[];\n  yAxisValue: string[];\n};\n\nexport default function ChartFooter({\n  total,\n  yAxisValue,\n  yAxisOptions,\n  onAxisChange,\n  displayMode,\n  displayOptions,\n  onDisplayChange,\n  onTopEventsChange,\n  topEvents,\n}: Props) {\n  const elements: React.ReactNode[] = [];\n\n  elements.push(<SectionHeading key=\"total-label\">{t('Total Events')}</SectionHeading>);\n  elements.push(\n    total === null ? (\n      <SectionValue data-test-id=\"loading-placeholder\" key=\"total-value\">\n        &mdash;\n      </SectionValue>\n    ) : (\n      <SectionValue key=\"total-value\">{total.toLocaleString()}</SectionValue>\n    )\n  );\n  const topEventOptions: SelectValue<string>[] = [];\n  for (let i = 1; i <= 10; i++) {\n    topEventOptions.push({value: i.toString(), label: i.toString()});\n  }\n\n  return (\n    <ChartControls>\n      <InlineContainer>{elements}</InlineContainer>\n      <InlineContainer>\n        <OptionSelector\n          title={t('Display')}\n          selected={displayMode}\n          options={displayOptions}\n          onChange={onDisplayChange}\n        />\n        {TOP_EVENT_MODES.includes(displayMode) && (\n          <OptionSelector\n            title={t('Limit')}\n            selected={topEvents}\n            options={topEventOptions}\n            onChange={onTopEventsChange}\n          />\n        )}\n        {TOP_EVENT_MODES.includes(displayMode) ? (\n          <OptionSelector\n            title={t('Y-Axis')}\n            selected={yAxisValue[0]}\n            options={yAxisOptions}\n            onChange={yAxis => onAxisChange([yAxis])}\n          />\n        ) : (\n          <OptionSelector\n            multiple\n            isClearable\n            menuTitle={\n              yAxisOptions.length > 3 ? t('Select up to 3 options') : t('Y-axis')\n            }\n            title={t('Y-Axis')}\n            selected={yAxisValue}\n            options={yAxisOptions}\n            onChange={onAxisChange}\n          />\n        )}\n      </InlineContainer>\n    </ChartControls>\n  );\n}\n","import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport EditableText from 'sentry/components/editableText';\nimport {Title} from 'sentry/components/layouts/thirds';\nimport {t} from 'sentry/locale';\nimport {Organization, SavedQuery} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport useApi from 'sentry/utils/useApi';\n\nimport {handleUpdateQueryName} from './savedQuery/utils';\n\ntype Props = {\n  eventView: EventView;\n  organization: Organization;\n  savedQuery?: SavedQuery;\n};\n\nconst NAME_DEFAULT = t('Untitled query');\n\n/**\n * Allows user to edit the name of the query.\n * By pressing Enter or clicking outside the component, the changes will be saved, if valid.\n */\nfunction EventInputName({organization, eventView, savedQuery}: Props) {\n  const api = useApi();\n\n  function handleChange(nextQueryName: string) {\n    // Do not update automatically if\n    // 1) It is a new query\n    // 2) The new name is same as the old name\n    if (!savedQuery || savedQuery.name === nextQueryName) {\n      return;\n    }\n\n    // This ensures that we are updating SavedQuery.name only.\n    // Changes on QueryBuilder table will not be saved.\n    const nextEventView = EventView.fromSavedQuery({\n      ...savedQuery,\n      name: nextQueryName,\n    });\n\n    handleUpdateQueryName(api, organization, nextEventView).then(\n      (_updatedQuery: SavedQuery) => {\n        // The current eventview may have changes that are not explicitly saved.\n        // So, we just preserve them and change its name\n        const renamedEventView = eventView.clone();\n        renamedEventView.name = nextQueryName;\n\n        browserHistory.push(renamedEventView.getResultsViewUrlTarget(organization.slug));\n      }\n    );\n  }\n\n  const value = eventView.name || NAME_DEFAULT;\n\n  return (\n    <StyledTitle data-test-id={`discover2-query-name-${value}`}>\n      <EditableText\n        value={value}\n        onChange={handleChange}\n        isDisabled={!eventView.id}\n        errorMessage={t('Please set a name for this query')}\n      />\n    </StyledTitle>\n  );\n}\n\nconst StyledTitle = styled(Title)`\n  overflow: unset;\n`;\n\nexport default EventInputName;\n","import {Component} from 'react';\nimport {browserHistory, InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport {Location} from 'history';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\n\nimport {updateSavedQueryVisit} from 'sentry/actionCreators/discoverSavedQueries';\nimport {fetchTotalCount} from 'sentry/actionCreators/events';\nimport {fetchProjectsCount} from 'sentry/actionCreators/projects';\nimport {loadOrganizationTags} from 'sentry/actionCreators/tags';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Confirm from 'sentry/components/confirm';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters, SavedQuery} from 'sentry/types';\nimport {defined, generateQueryWithTag} from 'sentry/utils';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView, {isAPIPayloadSimilar} from 'sentry/utils/discover/eventView';\nimport {formatTagKey, generateAggregateFields} from 'sentry/utils/discover/fields';\nimport {\n  DisplayModes,\n  MULTI_Y_AXIS_SUPPORTED_DISPLAY_MODES,\n} from 'sentry/utils/discover/types';\nimport localStorage from 'sentry/utils/localStorage';\nimport {decodeList, decodeScalar} from 'sentry/utils/queryString';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport {addRoutePerformanceContext} from '../performance/utils';\n\nimport {DEFAULT_EVENT_VIEW} from './data';\nimport ResultsChart from './resultsChart';\nimport ResultsHeader from './resultsHeader';\nimport Table from './table';\nimport Tags from './tags';\nimport {generateTitle} from './utils';\n\ntype Props = {\n  api: Client;\n  loading: boolean;\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n  selection: PageFilters;\n  savedQuery?: SavedQuery;\n};\n\ntype State = {\n  confirmedQuery: boolean;\n  error: string;\n  errorCode: number;\n  eventView: EventView;\n  needConfirmation: boolean;\n  showTags: boolean;\n  totalValues: null | number;\n  savedQuery?: SavedQuery;\n  showMetricsAlert?: boolean;\n  showUnparameterizedBanner?: boolean;\n};\nconst SHOW_TAGS_STORAGE_KEY = 'discover2:show-tags';\nconst SHOW_UNPARAM_BANNER = 'showUnparameterizedBanner';\n\nfunction readShowTagsState() {\n  const value = localStorage.getItem(SHOW_TAGS_STORAGE_KEY);\n  return value === '1';\n}\n\nfunction getYAxis(location: Location, eventView: EventView, savedQuery?: SavedQuery) {\n  if (location.query.yAxis) {\n    return decodeList(location.query.yAxis);\n  }\n  if (location.query.yAxis === null) {\n    return [];\n  }\n  return savedQuery?.yAxis && savedQuery?.yAxis.length > 0\n    ? decodeList(savedQuery?.yAxis)\n    : [eventView.getYAxis()];\n}\n\nclass Results extends Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Readonly<Props>, prevState: State): State {\n    if (nextProps.savedQuery || !nextProps.loading) {\n      const eventView = EventView.fromSavedQueryOrLocation(\n        nextProps.savedQuery,\n        nextProps.location\n      );\n      return {...prevState, eventView, savedQuery: nextProps.savedQuery};\n    }\n    return prevState;\n  }\n\n  state: State = {\n    eventView: EventView.fromSavedQueryOrLocation(\n      this.props.savedQuery,\n      this.props.location\n    ),\n    error: '',\n    errorCode: 200,\n    totalValues: null,\n    showTags: readShowTagsState(),\n    needConfirmation: false,\n    confirmedQuery: false,\n  };\n\n  componentDidMount() {\n    const {organization, selection, location} = this.props;\n    if (location.query.fromMetric) {\n      this.setState({showMetricsAlert: true});\n      browserHistory.replace({\n        ...location,\n        query: {...location.query, fromMetric: undefined},\n      });\n    }\n    if (location.query[SHOW_UNPARAM_BANNER]) {\n      this.setState({showUnparameterizedBanner: true});\n      browserHistory.replace({\n        ...location,\n        query: {...location.query, [SHOW_UNPARAM_BANNER]: undefined},\n      });\n    }\n    loadOrganizationTags(this.tagsApi, organization.slug, selection);\n    addRoutePerformanceContext(selection);\n    this.checkEventView();\n    this.canLoadEvents();\n    if (defined(location.query.id)) {\n      updateSavedQueryVisit(organization.slug, location.query.id);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const {api, location, organization, selection} = this.props;\n    const {eventView, confirmedQuery, savedQuery} = this.state;\n\n    this.checkEventView();\n    const currentQuery = eventView.getEventsAPIPayload(location);\n    const prevQuery = prevState.eventView.getEventsAPIPayload(prevProps.location);\n    const yAxisArray = getYAxis(location, eventView, savedQuery);\n    const prevYAxisArray = getYAxis(prevProps.location, eventView, prevState.savedQuery);\n\n    if (\n      !isAPIPayloadSimilar(currentQuery, prevQuery) ||\n      this.hasChartParametersChanged(\n        prevState.eventView,\n        eventView,\n        prevYAxisArray,\n        yAxisArray\n      )\n    ) {\n      api.clear();\n      this.canLoadEvents();\n    }\n    if (\n      !isEqual(prevProps.selection.datetime, selection.datetime) ||\n      !isEqual(prevProps.selection.projects, selection.projects)\n    ) {\n      loadOrganizationTags(this.tagsApi, organization.slug, selection);\n      addRoutePerformanceContext(selection);\n    }\n\n    if (prevState.confirmedQuery !== confirmedQuery) {\n      this.fetchTotalCount();\n    }\n  }\n\n  tagsApi: Client = new Client();\n\n  hasChartParametersChanged(\n    prevEventView: EventView,\n    eventView: EventView,\n    prevYAxisArray: string[],\n    yAxisArray: string[]\n  ) {\n    if (!isEqual(prevYAxisArray, yAxisArray)) {\n      return true;\n    }\n\n    const prevDisplay = prevEventView.getDisplayMode();\n    const display = eventView.getDisplayMode();\n\n    return prevDisplay !== display;\n  }\n\n  canLoadEvents = async () => {\n    const {api, location, organization} = this.props;\n    const {eventView} = this.state;\n    let needConfirmation = false;\n    let confirmedQuery = true;\n    const currentQuery = eventView.getEventsAPIPayload(location);\n    const duration = eventView.getDays();\n\n    if (duration > 30 && currentQuery.project) {\n      let projectLength = currentQuery.project.length;\n\n      if (\n        projectLength === 0 ||\n        (projectLength === 1 && currentQuery.project[0] === '-1')\n      ) {\n        try {\n          const results = await fetchProjectsCount(api, organization.slug);\n\n          if (projectLength === 0) {\n            projectLength = results.myProjects;\n          } else {\n            projectLength = results.allProjects;\n          }\n        } catch (err) {\n          // do nothing, so the length is 0 or 1 and the query is assumed safe\n        }\n      }\n\n      if (projectLength > 10) {\n        needConfirmation = true;\n        confirmedQuery = false;\n      }\n    }\n    // Once confirmed, a change of project or datetime will happen before this can set it to false,\n    // this means a query will still happen even if the new conditions need confirmation\n    // using a state callback to return this to false\n    this.setState({needConfirmation, confirmedQuery}, () => {\n      this.setState({confirmedQuery: false});\n    });\n    if (needConfirmation) {\n      this.openConfirm();\n    }\n  };\n\n  openConfirm = () => {};\n\n  setOpenFunction = ({open}) => {\n    this.openConfirm = open;\n    return null;\n  };\n\n  handleConfirmed = () => {\n    this.setState({needConfirmation: false, confirmedQuery: true}, () => {\n      this.setState({confirmedQuery: false});\n    });\n  };\n\n  handleCancelled = () => {\n    this.setState({needConfirmation: false, confirmedQuery: false});\n  };\n\n  async fetchTotalCount() {\n    const {api, organization, location} = this.props;\n    const {eventView, confirmedQuery} = this.state;\n\n    if (confirmedQuery === false || !eventView.isValid()) {\n      return;\n    }\n\n    try {\n      const totals = await fetchTotalCount(\n        api,\n        organization.slug,\n        eventView.getEventsAPIPayload(location)\n      );\n      this.setState({totalValues: totals});\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  checkEventView() {\n    const {eventView} = this.state;\n    const {loading} = this.props;\n    if (eventView.isValid() || loading) {\n      return;\n    }\n\n    // If the view is not valid, redirect to a known valid state.\n    const {location, organization, selection} = this.props;\n    const nextEventView = EventView.fromNewQueryWithLocation(\n      DEFAULT_EVENT_VIEW,\n      location\n    );\n    if (nextEventView.project.length === 0 && selection.projects) {\n      nextEventView.project = selection.projects;\n    }\n    if (location.query?.query) {\n      nextEventView.query = decodeScalar(location.query.query, '');\n    }\n\n    browserHistory.replace(nextEventView.getResultsViewUrlTarget(organization.slug));\n  }\n\n  handleChangeShowTags = () => {\n    const {organization} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.results.toggle_tag_facets',\n      eventName: 'Discoverv2: Toggle Tag Facets',\n      organization_id: parseInt(organization.id, 10),\n    });\n    this.setState(state => {\n      const newValue = !state.showTags;\n      localStorage.setItem(SHOW_TAGS_STORAGE_KEY, newValue ? '1' : '0');\n      return {...state, showTags: newValue};\n    });\n  };\n\n  handleSearch = (query: string) => {\n    const {router, location} = this.props;\n\n    const queryParams = normalizeDateTimeParams({\n      ...(location.query || {}),\n      query,\n    });\n\n    // do not propagate pagination when making a new search\n    const searchQueryParams = omit(queryParams, 'cursor');\n\n    router.push({\n      pathname: location.pathname,\n      query: searchQueryParams,\n    });\n  };\n\n  handleYAxisChange = (value: string[]) => {\n    const {router, location} = this.props;\n    const isDisplayMultiYAxisSupported = MULTI_Y_AXIS_SUPPORTED_DISPLAY_MODES.includes(\n      location.query.display as DisplayModes\n    );\n\n    const newQuery = {\n      ...location.query,\n      yAxis: value.length > 0 ? value : [null],\n      // If using Multi Y-axis and not in a supported display, change to the default display mode\n      display:\n        value.length > 1 && !isDisplayMultiYAxisSupported\n          ? location.query.display === DisplayModes.DAILYTOP5\n            ? DisplayModes.DAILY\n            : DisplayModes.DEFAULT\n          : location.query.display,\n    };\n\n    router.push({\n      pathname: location.pathname,\n      query: newQuery,\n    });\n\n    // Treat axis changing like the user already confirmed the query\n    if (!this.state.needConfirmation) {\n      this.handleConfirmed();\n    }\n\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.y_axis_change',\n      eventName: \"Discoverv2: Change chart's y axis\",\n      organization_id: parseInt(this.props.organization.id, 10),\n      y_axis_value: value,\n    });\n  };\n\n  handleDisplayChange = (value: string) => {\n    const {router, location} = this.props;\n\n    const newQuery = {\n      ...location.query,\n      display: value,\n    };\n\n    router.push({\n      pathname: location.pathname,\n      query: newQuery,\n    });\n\n    // Treat display changing like the user already confirmed the query\n    if (!this.state.needConfirmation) {\n      this.handleConfirmed();\n    }\n  };\n\n  handleTopEventsChange = (value: string) => {\n    const {router, location} = this.props;\n\n    const newQuery = {\n      ...location.query,\n      topEvents: value,\n    };\n\n    router.push({\n      pathname: location.pathname,\n      query: newQuery,\n    });\n\n    // Treat display changing like the user already confirmed the query\n    if (!this.state.needConfirmation) {\n      this.handleConfirmed();\n    }\n  };\n\n  getDocumentTitle(): string {\n    const {organization} = this.props;\n    const {eventView} = this.state;\n    if (!eventView) {\n      return '';\n    }\n    return generateTitle({eventView, organization});\n  }\n\n  renderTagsTable() {\n    const {organization, location} = this.props;\n    const {eventView, totalValues, confirmedQuery} = this.state;\n\n    return (\n      <Layout.Side>\n        <Tags\n          generateUrl={this.generateTagUrl}\n          totalValues={totalValues}\n          eventView={eventView}\n          organization={organization}\n          location={location}\n          confirmedQuery={confirmedQuery}\n        />\n      </Layout.Side>\n    );\n  }\n\n  generateTagUrl = (key: string, value: string) => {\n    const {organization} = this.props;\n    const {eventView} = this.state;\n\n    const url = eventView.getResultsViewUrlTarget(organization.slug);\n    url.query = generateQueryWithTag(url.query, {\n      key: formatTagKey(key),\n      value,\n    });\n    return url;\n  };\n\n  renderError(error: string) {\n    if (!error) {\n      return null;\n    }\n    return (\n      <Alert type=\"error\" showIcon>\n        {error}\n      </Alert>\n    );\n  }\n\n  setError = (error: string, errorCode: number) => {\n    this.setState({error, errorCode});\n  };\n\n  renderMetricsFallbackBanner() {\n    if (this.state.showMetricsAlert) {\n      return (\n        <Alert type=\"info\" showIcon>\n          {t(\n            \"You've navigated to this page from a performance metric widget generated from processed events. The results here only show indexed events.\"\n          )}\n        </Alert>\n      );\n    }\n    if (this.state.showUnparameterizedBanner) {\n      return (\n        <Alert type=\"info\" showIcon>\n          {tct(\n            'These are unparameterized transactions. To better organize your transactions, [link:set transaction names manually].',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/javascript/guides/react/configuration/integrations/react-router/#parameterized-transaction-names\" />\n              ),\n            }\n          )}\n        </Alert>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const {organization, location, router} = this.props;\n    const {\n      eventView,\n      error,\n      errorCode,\n      totalValues,\n      showTags,\n      confirmedQuery,\n      savedQuery,\n    } = this.state;\n    const fields = eventView.hasAggregateField()\n      ? generateAggregateFields(organization, eventView.fields)\n      : eventView.fields;\n    const query = eventView.query;\n    const title = this.getDocumentTitle();\n    const yAxisArray = getYAxis(location, eventView, savedQuery);\n\n    return (\n      <SentryDocumentTitle title={title} orgSlug={organization.slug}>\n        <StyledPageContent>\n          <NoProjectMessage organization={organization}>\n            <ResultsHeader\n              errorCode={errorCode}\n              organization={organization}\n              location={location}\n              eventView={eventView}\n              yAxis={yAxisArray}\n              router={router}\n            />\n            <Layout.Body>\n              <Top fullWidth>\n                {this.renderMetricsFallbackBanner()}\n                {this.renderError(error)}\n                <StyledPageFilterBar condensed>\n                  <ProjectPageFilter />\n                  <EnvironmentPageFilter />\n                  <DatePageFilter alignDropdown=\"left\" />\n                </StyledPageFilterBar>\n                <StyledSearchBar\n                  searchSource=\"eventsv2\"\n                  organization={organization}\n                  projectIds={eventView.project}\n                  query={query}\n                  fields={fields}\n                  onSearch={this.handleSearch}\n                  maxQueryLength={MAX_QUERY_LENGTH}\n                />\n                <ResultsChart\n                  router={router}\n                  organization={organization}\n                  eventView={eventView}\n                  location={location}\n                  onAxisChange={this.handleYAxisChange}\n                  onDisplayChange={this.handleDisplayChange}\n                  onTopEventsChange={this.handleTopEventsChange}\n                  total={totalValues}\n                  confirmedQuery={confirmedQuery}\n                  yAxis={yAxisArray}\n                />\n              </Top>\n              <Layout.Main fullWidth={!showTags}>\n                <Table\n                  organization={organization}\n                  eventView={eventView}\n                  location={location}\n                  title={title}\n                  setError={this.setError}\n                  onChangeShowTags={this.handleChangeShowTags}\n                  showTags={showTags}\n                  confirmedQuery={confirmedQuery}\n                />\n              </Layout.Main>\n              {showTags ? this.renderTagsTable() : null}\n              <Confirm\n                priority=\"primary\"\n                header={<strong>{t('May lead to thumb twiddling')}</strong>}\n                confirmText={t('Do it')}\n                cancelText={t('Nevermind')}\n                onConfirm={this.handleConfirmed}\n                onCancel={this.handleCancelled}\n                message={\n                  <p>\n                    {tct(\n                      `You've created a query that will search for events made\n                      [dayLimit:over more than 30 days] for [projectLimit:more than 10 projects].\n                      A lot has happened during that time, so this might take awhile.\n                      Are you sure you want to do this?`,\n                      {\n                        dayLimit: <strong />,\n                        projectLimit: <strong />,\n                      }\n                    )}\n                  </p>\n                }\n              >\n                {this.setOpenFunction}\n              </Confirm>\n            </Layout.Body>\n          </NoProjectMessage>\n        </StyledPageContent>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nconst StyledPageFilterBar = styled(PageFilterBar)`\n  margin-bottom: ${space(1)};\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  margin-bottom: ${space(2)};\n`;\n\nconst Top = styled(Layout.Main)`\n  flex-grow: 0;\n`;\n\ntype SavedQueryState = AsyncComponent['state'] & {\n  savedQuery?: SavedQuery | null;\n};\n\nclass SavedQueryAPI extends AsyncComponent<Props, SavedQueryState> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, location} = this.props;\n    if (location.query.id) {\n      return [\n        [\n          'savedQuery',\n          `/organizations/${organization.slug}/discover/saved/${location.query.id}/`,\n        ],\n      ];\n    }\n    return [];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody(): React.ReactNode {\n    const {savedQuery, loading} = this.state;\n    return (\n      <Results {...this.props} savedQuery={savedQuery ?? undefined} loading={loading} />\n    );\n  }\n}\n\nfunction ResultsContainer(props: Props) {\n  /**\n   * Block `<Results>` from mounting until GSH is ready since there are API\n   * requests being performed on mount.\n   *\n   * Also, we skip loading last used projects if you have multiple projects feature as\n   * you no longer need to enforce a project if it is empty. We assume an empty project is\n   * the desired behavior because saved queries can contain a project filter. The only\n   * exception is if we are showing a prebuilt saved query in which case we want to\n   * respect pinned filters.\n   */\n\n  return (\n    <PageFiltersContainer\n      skipLoadLastUsed={\n        props.organization.features.includes('global-views') && !!props.savedQuery\n      }\n    >\n      <SavedQueryAPI {...props} />\n    </PageFiltersContainer>\n  );\n}\n\nexport default withApi(withOrganization(withPageFilters(ResultsContainer)));\n","import {Component, Fragment} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport isEqual from 'lodash/isEqual';\n\nimport {Client} from 'sentry/api';\nimport {BarChart} from 'sentry/components/charts/barChart';\nimport EventsChart from 'sentry/components/charts/eventsChart';\nimport {getInterval, getPreviousSeriesName} from 'sentry/components/charts/utils';\nimport {WorldMapChart} from 'sentry/components/charts/worldMapChart';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {Panel} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {valueIsEqual} from 'sentry/utils';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {isEquation, stripEquationPrefix} from 'sentry/utils/discover/fields';\nimport {\n  DisplayModes,\n  MULTI_Y_AXIS_SUPPORTED_DISPLAY_MODES,\n  TOP_EVENT_MODES,\n  TOP_N,\n} from 'sentry/utils/discover/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport withApi from 'sentry/utils/withApi';\n\nimport ChartFooter from './chartFooter';\n\ntype ResultsChartProps = {\n  api: Client;\n  confirmedQuery: boolean;\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n  yAxisValue: string[];\n};\n\nclass ResultsChart extends Component<ResultsChartProps> {\n  shouldComponentUpdate(nextProps: ResultsChartProps) {\n    const {eventView, ...restProps} = this.props;\n    const {eventView: nextEventView, ...restNextProps} = nextProps;\n\n    if (!eventView.isEqualTo(nextEventView)) {\n      return true;\n    }\n\n    return !isEqual(restProps, restNextProps);\n  }\n\n  render() {\n    const {api, eventView, location, organization, router, confirmedQuery, yAxisValue} =\n      this.props;\n\n    const hasPerformanceChartInterpolation = organization.features.includes(\n      'performance-chart-interpolation'\n    );\n\n    const globalSelection = eventView.getPageFilters();\n    const start = globalSelection.datetime.start\n      ? getUtcToLocalDateObject(globalSelection.datetime.start)\n      : null;\n\n    const end = globalSelection.datetime.end\n      ? getUtcToLocalDateObject(globalSelection.datetime.end)\n      : null;\n\n    const {utc} = normalizeDateTimeParams(location.query);\n    const apiPayload = eventView.getEventsAPIPayload(location);\n    const display = eventView.getDisplayMode();\n    const isTopEvents =\n      display === DisplayModes.TOP5 || display === DisplayModes.DAILYTOP5;\n    const isPeriod = display === DisplayModes.DEFAULT || display === DisplayModes.TOP5;\n    const isDaily = display === DisplayModes.DAILYTOP5 || display === DisplayModes.DAILY;\n    const isPrevious = display === DisplayModes.PREVIOUS;\n    const referrer = `api.discover.${display}-chart`;\n    const topEvents = eventView.topEvents ? parseInt(eventView.topEvents, 10) : TOP_N;\n    const chartComponent =\n      display === DisplayModes.WORLDMAP\n        ? WorldMapChart\n        : display === DisplayModes.BAR\n        ? BarChart\n        : undefined;\n    const interval =\n      display === DisplayModes.BAR\n        ? getInterval(\n            {\n              start,\n              end,\n              period: globalSelection.datetime.period,\n              utc: utc === 'true',\n            },\n            'low'\n          )\n        : eventView.interval;\n\n    const seriesLabels = yAxisValue.map(stripEquationPrefix);\n    const disableableSeries = [\n      ...seriesLabels,\n      ...seriesLabels.map(getPreviousSeriesName),\n    ];\n    return (\n      <Fragment>\n        {getDynamicText({\n          value: (\n            <EventsChart\n              api={api}\n              router={router}\n              query={apiPayload.query}\n              organization={organization}\n              showLegend\n              yAxis={yAxisValue}\n              projects={globalSelection.projects}\n              environments={globalSelection.environments}\n              start={start}\n              end={end}\n              period={globalSelection.datetime.period}\n              disablePrevious={!isPrevious}\n              disableReleases={!isPeriod}\n              field={isTopEvents ? apiPayload.field : undefined}\n              interval={interval}\n              showDaily={isDaily}\n              topEvents={isTopEvents ? topEvents : undefined}\n              orderby={isTopEvents ? decodeScalar(apiPayload.sort) : undefined}\n              utc={utc === 'true'}\n              confirmedQuery={confirmedQuery}\n              withoutZerofill={hasPerformanceChartInterpolation}\n              chartComponent={chartComponent}\n              referrer={referrer}\n              fromDiscover\n              disableableSeries={disableableSeries}\n            />\n          ),\n          fixed: <Placeholder height=\"200px\" testId=\"skeleton-ui\" />,\n        })}\n      </Fragment>\n    );\n  }\n}\n\ntype ContainerProps = {\n  api: Client;\n  confirmedQuery: boolean;\n  eventView: EventView;\n  location: Location;\n  onAxisChange: (value: string[]) => void;\n  onDisplayChange: (value: string) => void;\n  onTopEventsChange: (value: string) => void;\n\n  organization: Organization;\n  router: InjectedRouter;\n  // chart footer props\n  total: number | null;\n  yAxis: string[];\n};\n\nclass ResultsChartContainer extends Component<ContainerProps> {\n  state = {\n    yAxisOptions: this.getYAxisOptions(this.props.eventView),\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const yAxisOptions = this.getYAxisOptions(this.props.eventView);\n    const nextYAxisOptions = this.getYAxisOptions(nextProps.eventView);\n\n    if (!valueIsEqual(yAxisOptions, nextYAxisOptions, true)) {\n      this.setState({yAxisOptions: nextYAxisOptions});\n    }\n  }\n\n  shouldComponentUpdate(nextProps: ContainerProps) {\n    const {eventView, ...restProps} = this.props;\n    const {eventView: nextEventView, ...restNextProps} = nextProps;\n\n    if (\n      !eventView.isEqualTo(nextEventView) ||\n      this.props.confirmedQuery !== nextProps.confirmedQuery\n    ) {\n      return true;\n    }\n\n    return !isEqual(restProps, restNextProps);\n  }\n\n  getYAxisOptions(eventView) {\n    const yAxisOptions = eventView.getYAxisOptions();\n\n    // Equations on World Map isn't supported on the events-geo endpoint\n    // Disabling equations as an option to prevent erroring out\n    if (eventView.getDisplayMode() === DisplayModes.WORLDMAP) {\n      return yAxisOptions.filter(({value}) => !isEquation(value));\n    }\n\n    return yAxisOptions;\n  }\n\n  render() {\n    const {\n      api,\n      eventView,\n      location,\n      router,\n      total,\n      onAxisChange,\n      onDisplayChange,\n      onTopEventsChange,\n      organization,\n      confirmedQuery,\n      yAxis,\n    } = this.props;\n\n    const {yAxisOptions} = this.state;\n\n    const hasQueryFeature = organization.features.includes('discover-query');\n    const displayOptions = eventView\n      .getDisplayOptions()\n      .filter(opt => {\n        // top5 modes are only available with larger packages in saas.\n        // We remove instead of disable here as showing tooltips in dropdown\n        // menus is clunky.\n        if (TOP_EVENT_MODES.includes(opt.value) && !hasQueryFeature) {\n          return false;\n        }\n        return true;\n      })\n      .map(opt => {\n        // Can only use default display or total daily with multi y axis\n        if (TOP_EVENT_MODES.includes(opt.value)) {\n          opt.label = DisplayModes.TOP5 === opt.value ? 'Top Period' : 'Top Daily';\n        }\n        if (\n          yAxis.length > 1 &&\n          !MULTI_Y_AXIS_SUPPORTED_DISPLAY_MODES.includes(opt.value as DisplayModes)\n        ) {\n          return {\n            ...opt,\n            disabled: true,\n            tooltip: t(\n              'Change the Y-Axis dropdown to display only 1 function to use this view.'\n            ),\n          };\n        }\n        return opt;\n      });\n\n    return (\n      <StyledPanel>\n        {(yAxis.length > 0 && (\n          <ResultsChart\n            api={api}\n            eventView={eventView}\n            location={location}\n            organization={organization}\n            router={router}\n            confirmedQuery={confirmedQuery}\n            yAxisValue={yAxis}\n          />\n        )) || <NoChartContainer>{t('No Y-Axis selected.')}</NoChartContainer>}\n        <ChartFooter\n          organization={organization}\n          total={total}\n          yAxisValue={yAxis}\n          yAxisOptions={yAxisOptions}\n          onAxisChange={onAxisChange}\n          displayOptions={displayOptions}\n          displayMode={eventView.getDisplayMode()}\n          onDisplayChange={onDisplayChange}\n          onTopEventsChange={onTopEventsChange}\n          topEvents={eventView.topEvents ?? TOP_N.toString()}\n        />\n      </StyledPanel>\n    );\n  }\n}\n\nexport default withApi(ResultsChartContainer);\n\nconst StyledPanel = styled(Panel)`\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    margin: 0;\n  }\n`;\n\nconst NoChartContainer = styled('div')<{height?: string}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height || '200px'};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {fetchSavedQuery} from 'sentry/actionCreators/discoverSavedQueries';\nimport {Client} from 'sentry/api';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport TimeSince from 'sentry/components/timeSince';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, SavedQuery} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\n\nimport DiscoverBreadcrumb from './breadcrumb';\nimport EventInputName from './eventInputName';\nimport SavedQueryButtonGroup from './savedQuery';\n\ntype Props = {\n  api: Client;\n  errorCode: number;\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n  yAxis: string[];\n};\n\ntype State = {\n  loading: boolean;\n  savedQuery: SavedQuery | undefined;\n};\n\nclass ResultsHeader extends Component<Props, State> {\n  state: State = {\n    savedQuery: undefined,\n    loading: true,\n  };\n\n  componentDidMount() {\n    if (this.props.eventView.id) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.eventView &&\n      this.props.eventView &&\n      prevProps.eventView.id !== this.props.eventView.id\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData() {\n    const {api, eventView, organization} = this.props;\n    if (typeof eventView.id === 'string') {\n      this.setState({loading: true});\n      fetchSavedQuery(api, organization.slug, eventView.id).then(savedQuery => {\n        this.setState({savedQuery, loading: false});\n      });\n    }\n  }\n\n  renderAuthor() {\n    const {eventView} = this.props;\n    const {savedQuery} = this.state;\n    // No saved query in use.\n    if (!eventView.id) {\n      return null;\n    }\n    let createdBy = ' \\u2014 ';\n    let lastEdit: React.ReactNode = ' \\u2014 ';\n    if (savedQuery !== undefined) {\n      createdBy = savedQuery.createdBy?.email || '\\u2014';\n      lastEdit = <TimeSince date={savedQuery.dateUpdated} />;\n    }\n    return (\n      <Subtitle>\n        {t('Created by:')} {createdBy} | {t('Last edited:')} {lastEdit}\n      </Subtitle>\n    );\n  }\n\n  render() {\n    const {organization, location, errorCode, eventView, yAxis, router} = this.props;\n    const {savedQuery, loading} = this.state;\n\n    return (\n      <Layout.Header>\n        <StyledHeaderContent>\n          <DiscoverBreadcrumb\n            eventView={eventView}\n            organization={organization}\n            location={location}\n          />\n          <EventInputName\n            savedQuery={savedQuery}\n            organization={organization}\n            eventView={eventView}\n          />\n          {this.renderAuthor()}\n        </StyledHeaderContent>\n        <Layout.HeaderActions>\n          <SavedQueryButtonGroup\n            location={location}\n            organization={organization}\n            eventView={eventView}\n            savedQuery={savedQuery}\n            savedQueryLoading={loading}\n            disabled={errorCode >= 400 && errorCode < 500}\n            updateCallback={() => this.fetchData()}\n            yAxis={yAxis}\n            router={router}\n          />\n        </Layout.HeaderActions>\n      </Layout.Header>\n    );\n  }\n}\n\nconst Subtitle = styled('h4')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  font-weight: normal;\n  color: ${p => p.theme.gray300};\n  margin: ${space(0.5)} 0 0 0;\n`;\n\nconst StyledHeaderContent = styled(Layout.HeaderContent)`\n  overflow: unset;\n`;\n\nexport default withApi(ResultsHeader);\n","import {Fragment, PureComponent} from 'react';\nimport {browserHistory, InjectedRouter} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {FocusScope} from '@react-aria/focus';\nimport {AnimatePresence} from 'framer-motion';\nimport {Location} from 'history';\nimport isEqual from 'lodash/isEqual';\n\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Banner from 'sentry/components/banner';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {CreateAlertFromViewButton} from 'sentry/components/createAlertButton';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport InputControl from 'sentry/components/input';\nimport {Overlay, PositionWrapper} from 'sentry/components/overlay';\nimport {IconDelete, IconStar} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project, SavedQuery} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {getDiscoverLandingUrl} from 'sentry/utils/discover/urls';\nimport useOverlay from 'sentry/utils/useOverlay';\nimport withApi from 'sentry/utils/withApi';\nimport withProjects from 'sentry/utils/withProjects';\nimport {handleAddQueryToDashboard} from 'sentry/views/eventsV2/utils';\n\nimport {handleCreateQuery, handleDeleteQuery, handleUpdateQuery} from './utils';\n\ntype SaveAsDropdownProps = {\n  disabled: boolean;\n  modifiedHandleCreateQuery: (e: React.MouseEvent<Element>) => void;\n  onChangeInput: (e: React.FormEvent<HTMLInputElement>) => void;\n  queryName: string;\n};\n\nfunction SaveAsDropdown({\n  queryName,\n  disabled,\n  onChangeInput,\n  modifiedHandleCreateQuery,\n}: SaveAsDropdownProps) {\n  const {isOpen, triggerProps, overlayProps, arrowProps} = useOverlay();\n  const theme = useTheme();\n\n  return (\n    <div>\n      <Button\n        {...triggerProps}\n        icon={<IconStar />}\n        aria-label={t('Save as')}\n        disabled={disabled}\n      >\n        {`${t('Save as')}\\u2026`}\n      </Button>\n      <AnimatePresence>\n        {isOpen && (\n          <FocusScope contain restoreFocus autoFocus>\n            <PositionWrapper zIndex={theme.zIndex.dropdown} {...overlayProps}>\n              <StyledOverlay arrowProps={arrowProps} animated>\n                <SaveAsInput\n                  type=\"text\"\n                  name=\"query_name\"\n                  placeholder={t('Display name')}\n                  value={queryName || ''}\n                  onChange={onChangeInput}\n                  disabled={disabled}\n                />\n                <SaveAsButton\n                  onClick={modifiedHandleCreateQuery}\n                  priority=\"primary\"\n                  disabled={disabled || !queryName}\n                >\n                  {t('Save for Org')}\n                </SaveAsButton>\n              </StyledOverlay>\n            </PositionWrapper>\n          </FocusScope>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ntype DefaultProps = {\n  disabled: boolean;\n};\n\ntype Props = DefaultProps & {\n  api: Client;\n\n  eventView: EventView;\n  /**\n   * DO NOT USE `Location` TO GENERATE `EventView` IN THIS COMPONENT.\n   *\n   * In this component, state is generated from EventView and SavedQueriesStore.\n   * Using Location to rebuild EventView will break the tests. `Location` is\n   * passed down only because it is needed for navigation.\n   */\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  router: InjectedRouter;\n  savedQuery: SavedQuery | undefined;\n  savedQueryLoading: boolean;\n  updateCallback: () => void;\n  yAxis: string[];\n};\n\ntype State = {\n  isEditingQuery: boolean;\n  isNewQuery: boolean;\n\n  queryName: string;\n};\n\nclass SavedQueryButtonGroup extends PureComponent<Props, State> {\n  static getDerivedStateFromProps(nextProps: Readonly<Props>, prevState: State): State {\n    const {eventView: nextEventView, savedQuery, savedQueryLoading, yAxis} = nextProps;\n\n    // For a new unsaved query\n    if (!savedQuery) {\n      return {\n        isNewQuery: true,\n        isEditingQuery: false,\n        queryName: prevState.queryName || '',\n      };\n    }\n\n    if (savedQueryLoading) {\n      return prevState;\n    }\n\n    const savedEventView = EventView.fromSavedQuery(savedQuery);\n\n    // Switching from a SavedQuery to another SavedQuery\n    if (savedEventView.id !== nextEventView.id) {\n      return {\n        isNewQuery: false,\n        isEditingQuery: false,\n        queryName: '',\n      };\n    }\n\n    // For modifying a SavedQuery\n    const isEqualQuery = nextEventView.isEqualTo(savedEventView);\n    // undefined saved yAxis defaults to count() and string values are converted to array\n    const isEqualYAxis = isEqual(\n      yAxis,\n      !savedQuery.yAxis\n        ? ['count()']\n        : typeof savedQuery.yAxis === 'string'\n        ? [savedQuery.yAxis]\n        : savedQuery.yAxis\n    );\n    return {\n      isNewQuery: false,\n      isEditingQuery: !isEqualQuery || !isEqualYAxis,\n\n      // HACK(leedongwei): See comment at SavedQueryButtonGroup.onFocusInput\n      queryName: prevState.queryName || '',\n    };\n  }\n\n  /**\n   * Stop propagation for the input and container so people can interact with\n   * the inputs in the dropdown.\n   */\n  static stopEventPropagation = (event: React.MouseEvent) => {\n    const capturedElements = ['LI', 'INPUT'];\n\n    if (\n      event.target instanceof Element &&\n      capturedElements.includes(event.target.nodeName)\n    ) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  static defaultProps: DefaultProps = {\n    disabled: false,\n  };\n\n  state: State = {\n    isNewQuery: true,\n    isEditingQuery: false,\n\n    queryName: '',\n  };\n\n  onChangeInput = (event: React.FormEvent<HTMLInputElement>) => {\n    const target = event.target as HTMLInputElement;\n    this.setState({queryName: target.value});\n  };\n\n  /**\n   * There are two ways to create a query\n   * 1) Creating a query from scratch and saving it\n   * 2) Modifying an existing query and saving it\n   */\n  handleCreateQuery = (event: React.MouseEvent<Element>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const {api, organization, eventView, yAxis} = this.props;\n\n    if (!this.state.queryName) {\n      return;\n    }\n\n    const nextEventView = eventView.clone();\n    nextEventView.name = this.state.queryName;\n\n    // Checks if \"Save as\" button is clicked from a clean state, or it is\n    // clicked while modifying an existing query\n    const isNewQuery = !eventView.id;\n\n    handleCreateQuery(api, organization, nextEventView, yAxis, isNewQuery).then(\n      (savedQuery: SavedQuery) => {\n        const view = EventView.fromSavedQuery(savedQuery);\n\n        Banner.dismiss('discover');\n        this.setState({queryName: ''});\n        browserHistory.push(view.getResultsViewUrlTarget(organization.slug));\n      }\n    );\n  };\n\n  handleUpdateQuery = (event: React.MouseEvent<Element>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const {api, organization, eventView, updateCallback, yAxis} = this.props;\n\n    handleUpdateQuery(api, organization, eventView, yAxis).then(\n      (savedQuery: SavedQuery) => {\n        const view = EventView.fromSavedQuery(savedQuery);\n        this.setState({queryName: ''});\n        browserHistory.push(view.getResultsViewShortUrlTarget(organization.slug));\n        updateCallback();\n      }\n    );\n  };\n\n  handleDeleteQuery = (event: React.MouseEvent<Element>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const {api, organization, eventView} = this.props;\n\n    handleDeleteQuery(api, organization, eventView).then(() => {\n      browserHistory.push({\n        pathname: getDiscoverLandingUrl(organization),\n        query: {},\n      });\n    });\n  };\n\n  handleCreateAlertSuccess = () => {\n    const {organization} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.create_alert_clicked',\n      eventName: 'Discoverv2: Create alert clicked',\n      status: 'success',\n      organization_id: organization.id,\n      url: window.location.href,\n    });\n  };\n\n  renderButtonSaveAs(disabled: boolean) {\n    const {queryName} = this.state;\n    return (\n      <SaveAsDropdown\n        queryName={queryName}\n        onChangeInput={this.onChangeInput}\n        modifiedHandleCreateQuery={this.handleCreateQuery}\n        disabled={disabled}\n      />\n    );\n  }\n\n  renderButtonSave(disabled: boolean) {\n    const {isNewQuery, isEditingQuery} = this.state;\n\n    // Existing query that hasn't been modified.\n    if (!isNewQuery && !isEditingQuery) {\n      return (\n        <Button\n          icon={<IconStar color=\"yellow100\" isSolid size=\"sm\" />}\n          disabled\n          data-test-id=\"discover2-savedquery-button-saved\"\n        >\n          {t('Saved for Org')}\n        </Button>\n      );\n    }\n    // Existing query with edits, show save and save as.\n    if (!isNewQuery && isEditingQuery) {\n      return (\n        <Fragment>\n          <Button\n            onClick={this.handleUpdateQuery}\n            data-test-id=\"discover2-savedquery-button-update\"\n            disabled={disabled}\n          >\n            <IconUpdate />\n            {t('Save Changes')}\n          </Button>\n          {this.renderButtonSaveAs(disabled)}\n        </Fragment>\n      );\n    }\n\n    // Is a new query enable saveas\n    return this.renderButtonSaveAs(disabled);\n  }\n\n  renderButtonDelete(disabled: boolean) {\n    const {isNewQuery} = this.state;\n\n    if (isNewQuery) {\n      return null;\n    }\n\n    return (\n      <Button\n        data-test-id=\"discover2-savedquery-button-delete\"\n        onClick={this.handleDeleteQuery}\n        disabled={disabled}\n        icon={<IconDelete />}\n        aria-label={t('Delete')}\n      />\n    );\n  }\n\n  renderButtonCreateAlert() {\n    const {eventView, organization, projects} = this.props;\n\n    return (\n      <GuideAnchor target=\"create_alert_from_discover\">\n        <CreateAlertFromViewButton\n          eventView={eventView}\n          organization={organization}\n          projects={projects}\n          onClick={this.handleCreateAlertSuccess}\n          referrer=\"discover\"\n          aria-label={t('Create Alert')}\n          data-test-id=\"discover2-create-from-discover\"\n        />\n      </GuideAnchor>\n    );\n  }\n\n  renderButtonAddToDashboard() {\n    const {organization, eventView, savedQuery, yAxis, router, location} = this.props;\n    return (\n      <Button\n        key=\"add-dashboard-widget-from-discover\"\n        data-test-id=\"add-dashboard-widget-from-discover\"\n        onClick={() =>\n          handleAddQueryToDashboard({\n            organization,\n            location,\n            eventView,\n            query: savedQuery,\n            yAxis,\n            router,\n          })\n        }\n      >\n        {t('Add to Dashboard')}\n      </Button>\n    );\n  }\n\n  render() {\n    const {organization} = this.props;\n\n    const renderDisabled = p => (\n      <Hovercard\n        body={\n          <FeatureDisabled\n            features={p.features}\n            hideHelpToggle\n            message={t('Discover queries are disabled')}\n            featureName={t('Discover queries')}\n          />\n        }\n      >\n        {p.children(p)}\n      </Hovercard>\n    );\n\n    const renderQueryButton = (renderFunc: (disabled: boolean) => React.ReactNode) => {\n      return (\n        <Feature\n          organization={organization}\n          features={['discover-query']}\n          hookName=\"feature-disabled:discover-saved-query-create\"\n          renderDisabled={renderDisabled}\n        >\n          {({hasFeature}) => renderFunc(!hasFeature || this.props.disabled)}\n        </Feature>\n      );\n    };\n\n    return (\n      <ResponsiveButtonBar gap={1}>\n        {renderQueryButton(disabled => this.renderButtonSave(disabled))}\n        <Feature organization={organization} features={['incidents']}>\n          {({hasFeature}) => hasFeature && this.renderButtonCreateAlert()}\n        </Feature>\n        <Feature organization={organization} features={['dashboards-edit']}>\n          {({hasFeature}) => hasFeature && this.renderButtonAddToDashboard()}\n        </Feature>\n        {renderQueryButton(disabled => this.renderButtonDelete(disabled))}\n      </ResponsiveButtonBar>\n    );\n  }\n}\n\nconst ResponsiveButtonBar = styled(ButtonBar)`\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    margin-top: 0;\n  }\n`;\n\nconst StyledOverlay = styled(Overlay)`\n  padding: ${space(1)};\n`;\n\nconst SaveAsButton = styled(Button)`\n  width: 100%;\n`;\n\nconst SaveAsInput = styled(InputControl)`\n  height: 40px;\n  margin-bottom: ${space(1)};\n`;\n\nconst IconUpdate = styled('div')`\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n\n  margin-right: ${space(0.75)};\n  border-radius: 5px;\n  background-color: ${p => p.theme.yellow300};\n`;\n\nexport default withProjects(withApi(SavedQueryButtonGroup));\n","import {Fragment, useEffect, useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {DISCOVER2_DOCS_URL} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {Column} from 'sentry/utils/discover/fields';\nimport theme from 'sentry/utils/theme';\nimport useTags from 'sentry/utils/useTags';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\n\nimport ColumnEditCollection from './columnEditCollection';\n\ntype Props = {\n  columns: Column[];\n  measurementKeys: null | string[];\n  // Fired when column selections have been applied.\n  onApply: (columns: Column[]) => void;\n  organization: Organization;\n  spanOperationBreakdownKeys?: string[];\n} & ModalRenderProps;\n\nfunction ColumnEditModal(props: Props) {\n  const {\n    Header,\n    Body,\n    Footer,\n    measurementKeys,\n    spanOperationBreakdownKeys,\n    organization,\n    onApply,\n    closeModal,\n  } = props;\n\n  // Only run once for each organization.id.\n  useEffect(() => {\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.column_editor.open',\n      eventName: 'Discoverv2: Open column editor',\n      organization_id: parseInt(organization.id, 10),\n    });\n  }, [organization.id]);\n\n  const {tags} = useTags();\n  const tagKeys = Object.values(tags).map(({key}) => key);\n\n  const [columns, setColumns] = useState<Column[]>(props.columns);\n\n  function handleApply() {\n    onApply(columns);\n    closeModal();\n  }\n\n  const fieldOptions = generateFieldOptions({\n    organization,\n    tagKeys,\n    measurementKeys,\n    spanOperationBreakdownKeys,\n  });\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{t('Edit Columns')}</h4>\n      </Header>\n      <Body>\n        <Instruction>\n          {tct(\n            'To group events, add [functionLink: functions] f(x) that may take in additional parameters. [fieldTagLink: Tag and field] columns will help you view more details about the events (i.e. title).',\n            {\n              functionLink: (\n                <ExternalLink href=\"https://docs.sentry.io/product/discover-queries/query-builder/#filter-by-table-columns\" />\n              ),\n              fieldTagLink: (\n                <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/search/searchable-properties/#event-properties\" />\n              ),\n            }\n          )}\n        </Instruction>\n        <ColumnEditCollection\n          columns={columns}\n          fieldOptions={fieldOptions}\n          onChange={setColumns}\n          organization={organization}\n        />\n      </Body>\n      <Footer>\n        <ButtonBar gap={1}>\n          <Button priority=\"default\" href={DISCOVER2_DOCS_URL} external>\n            {t('Read the Docs')}\n          </Button>\n          <Button aria-label={t('Apply')} priority=\"primary\" onClick={handleApply}>\n            {t('Apply')}\n          </Button>\n        </ButtonBar>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst Instruction = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst modalCss = css`\n  @media (min-width: ${theme.breakpoints.medium}) {\n    width: auto;\n    max-width: 900px;\n  }\n`;\n\nexport default ColumnEditModal;\nexport {modalCss};\n","import {PureComponent} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {Client} from 'sentry/api';\nimport Pagination from 'sentry/components/pagination';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {metric, trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {TableData} from 'sentry/utils/discover/discoverQuery';\nimport EventView, {\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'sentry/utils/discover/eventView';\nimport {SPAN_OP_BREAKDOWN_FIELDS} from 'sentry/utils/discover/fields';\nimport Measurements from 'sentry/utils/measurements/measurements';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport withApi from 'sentry/utils/withApi';\n\nimport TableView from './tableView';\n\ntype TableProps = {\n  api: Client;\n  confirmedQuery: boolean;\n  eventView: EventView;\n  location: Location;\n  onChangeShowTags: () => void;\n  organization: Organization;\n  setError: (msg: string, code: number) => void;\n  showTags: boolean;\n  title: string;\n};\n\ntype TableState = {\n  error: null | string;\n  isLoading: boolean;\n  pageLinks: null | string;\n  tableData: TableData | null | undefined;\n  tableFetchID: symbol | undefined;\n};\n\n/**\n * `Table` is a container element that handles 2 things\n * 1. Fetch data from source\n * 2. Handle pagination of data\n *\n * It will pass the data it fetched to `TableView`, where the state of the\n * Table is maintained and controlled\n */\nclass Table extends PureComponent<TableProps, TableState> {\n  state: TableState = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    pageLinks: null,\n    tableData: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: TableProps) {\n    // Reload data if we aren't already loading, or if we've moved\n    // from an invalid view state to a valid one.\n    if (\n      (!this.state.isLoading && this.shouldRefetchData(prevProps)) ||\n      (prevProps.eventView.isValid() === false && this.props.eventView.isValid()) ||\n      prevProps.confirmedQuery !== this.props.confirmedQuery\n    ) {\n      this.fetchData();\n    }\n  }\n\n  shouldRefetchData = (prevProps: TableProps): boolean => {\n    const thisAPIPayload = this.props.eventView.getEventsAPIPayload(this.props.location);\n    const otherAPIPayload = prevProps.eventView.getEventsAPIPayload(prevProps.location);\n\n    return !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload);\n  };\n\n  fetchData = () => {\n    const {eventView, organization, location, setError, confirmedQuery} = this.props;\n\n    if (!eventView.isValid() || !confirmedQuery) {\n      return;\n    }\n\n    // note: If the eventView has no aggregates, the endpoint will automatically add the event id in\n    // the API payload response\n\n    const shouldUseEvents = organization.features.includes(\n      'discover-frontend-use-events-endpoint'\n    );\n    const url = shouldUseEvents\n      ? `/organizations/${organization.slug}/events/`\n      : `/organizations/${organization.slug}/eventsv2/`;\n    const tableFetchID = Symbol('tableFetchID');\n\n    const apiPayload = eventView.getEventsAPIPayload(location) as LocationQuery &\n      EventQuery;\n    apiPayload.referrer = 'api.discover.query-table';\n\n    setError('', 200);\n\n    this.setState({isLoading: true, tableFetchID});\n    metric.mark({name: `discover-events-start-${apiPayload.query}`});\n\n    this.props.api.clear();\n    this.props.api\n      .requestPromise(url, {\n        method: 'GET',\n        includeAllArgs: true,\n        query: apiPayload,\n      })\n      .then(([data, _, resp]) => {\n        // We want to measure this metric regardless of whether we use the result\n        metric.measure({\n          name: 'app.api.discover-query',\n          start: `discover-events-start-${apiPayload.query}`,\n          data: {\n            status: resp && resp.status,\n          },\n        });\n        if (this.state.tableFetchID !== tableFetchID) {\n          // invariant: a different request was initiated after this request\n          return;\n        }\n\n        const {fields, ...nonFieldsMeta} = data.meta ?? {};\n        // events api uses a different response format so we need to construct tableData differently\n        const tableData = shouldUseEvents\n          ? {\n              ...data,\n              meta: {...fields, nonFieldsMeta},\n            }\n          : data;\n\n        this.setState(prevState => ({\n          isLoading: false,\n          tableFetchID: undefined,\n          error: null,\n          pageLinks: resp ? resp.getResponseHeader('Link') : prevState.pageLinks,\n          tableData,\n        }));\n      })\n      .catch(err => {\n        metric.measure({\n          name: 'app.api.discover-query',\n          start: `discover-events-start-${apiPayload.query}`,\n          data: {\n            status: err.status,\n          },\n        });\n\n        const message = err?.responseJSON?.detail || t('An unknown error occurred.');\n        this.setState({\n          isLoading: false,\n          tableFetchID: undefined,\n          error: message,\n          pageLinks: null,\n          tableData: null,\n        });\n\n        trackAnalyticsEvent({\n          eventKey: 'discover_search.failed',\n          eventName: 'Discover Search: Failed',\n          organization_id: this.props.organization.id,\n          search_type: 'events',\n          search_source: 'discover_search',\n          error: message,\n        });\n\n        setError(message, err.status);\n      });\n  };\n\n  render() {\n    const {eventView} = this.props;\n    const {pageLinks, tableData, isLoading, error} = this.state;\n\n    const isFirstPage = pageLinks\n      ? parseLinkHeader(pageLinks).previous.results === false\n      : false;\n\n    return (\n      <Container>\n        <Measurements>\n          {({measurements}) => {\n            const measurementKeys = Object.values(measurements).map(({key}) => key);\n\n            return (\n              <TableView\n                {...this.props}\n                isLoading={isLoading}\n                isFirstPage={isFirstPage}\n                error={error}\n                eventView={eventView}\n                tableData={tableData}\n                measurementKeys={measurementKeys}\n                spanOperationBreakdownKeys={SPAN_OP_BREAKDOWN_FIELDS}\n              />\n            );\n          }}\n        </Measurements>\n        <Pagination pageLinks={pageLinks} />\n      </Container>\n    );\n  }\n}\n\nexport default withApi(Table);\n\nconst Container = styled('div')`\n  min-width: 0;\n`;\n","import {Fragment} from 'react';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport DataExport, {ExportQueryType} from 'sentry/components/dataExport';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {IconDownload, IconStack, IconTag} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {OrganizationSummary} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {TableData} from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\n\nimport {downloadAsCsv} from '../utils';\n\ntype Props = {\n  error: string | null;\n  eventView: EventView;\n  isLoading: boolean;\n  location: Location;\n  onChangeShowTags: () => void;\n  onEdit: () => void;\n  organization: OrganizationSummary;\n  showTags: boolean;\n  tableData: TableData | null | undefined;\n  title: string;\n};\n\nfunction handleDownloadAsCsv(title: string, {organization, eventView, tableData}: Props) {\n  trackAnalyticsEvent({\n    eventKey: 'discover_v2.results.download_csv',\n    eventName: 'Discoverv2: Download CSV',\n    organization_id: parseInt(organization.id, 10),\n  });\n  downloadAsCsv(tableData, eventView.getColumns(true), title);\n}\n\nfunction renderDownloadButton(canEdit: boolean, props: Props) {\n  const {tableData} = props;\n  return (\n    <Feature\n      features={['organizations:discover-query']}\n      renderDisabled={() => renderBrowserExportButton(canEdit, props)}\n    >\n      {tableData?.data && tableData.data.length < 50\n        ? renderBrowserExportButton(canEdit, props)\n        : renderAsyncExportButton(canEdit, props)}\n    </Feature>\n  );\n}\n\nfunction renderBrowserExportButton(canEdit: boolean, props: Props) {\n  const {isLoading, error} = props;\n  const disabled = isLoading || error !== null || canEdit === false;\n  const onClick = disabled ? undefined : () => handleDownloadAsCsv(props.title, props);\n\n  return (\n    <Button\n      size=\"sm\"\n      disabled={disabled}\n      onClick={onClick}\n      data-test-id=\"grid-download-csv\"\n      icon={<IconDownload size=\"xs\" />}\n      title={t(\n        \"There aren't that many results, start your export and it'll download immediately.\"\n      )}\n    >\n      {t('Export All')}\n    </Button>\n  );\n}\n\nfunction renderAsyncExportButton(canEdit: boolean, props: Props) {\n  const {isLoading, error, location, eventView} = props;\n  const disabled = isLoading || error !== null || canEdit === false;\n  return (\n    <DataExport\n      payload={{\n        queryType: ExportQueryType.Discover,\n        queryInfo: eventView.getEventsAPIPayload(location),\n      }}\n      disabled={disabled}\n      icon={<IconDownload size=\"xs\" />}\n    >\n      {t('Export All')}\n    </DataExport>\n  );\n}\n// Placate eslint proptype checking\n\nfunction renderEditButton(canEdit: boolean, props: Props) {\n  const onClick = canEdit ? props.onEdit : undefined;\n  return (\n    <GuideAnchor target=\"columns_header_button\">\n      <Button\n        size=\"sm\"\n        disabled={!canEdit}\n        onClick={onClick}\n        data-test-id=\"grid-edit-enable\"\n        icon={<IconStack size=\"xs\" />}\n      >\n        {t('Columns')}\n      </Button>\n    </GuideAnchor>\n  );\n}\n// Placate eslint proptype checking\n\nfunction renderSummaryButton({onChangeShowTags, showTags}: Props) {\n  return (\n    <Button\n      data-test-id=\"toggle-show-tags\"\n      size=\"sm\"\n      onClick={onChangeShowTags}\n      icon={<IconTag size=\"xs\" />}\n    >\n      {showTags ? t('Hide Tags') : t('Show Tags')}\n    </Button>\n  );\n}\n\ntype FeatureWrapperProps = Props & {\n  children: (hasFeature: boolean, props: Props) => React.ReactNode;\n};\n\nfunction FeatureWrapper(props: FeatureWrapperProps) {\n  const noEditMessage = t('Requires discover query feature.');\n  const editFeatures = ['organizations:discover-query'];\n\n  const renderDisabled = p => (\n    <Hovercard\n      body={\n        <FeatureDisabled\n          features={p.features}\n          hideHelpToggle\n          message={noEditMessage}\n          featureName={noEditMessage}\n        />\n      }\n    >\n      {p.children(p)}\n    </Hovercard>\n  );\n  return (\n    <Feature\n      hookName=\"feature-disabled:grid-editable-actions\"\n      renderDisabled={renderDisabled}\n      features={editFeatures}\n    >\n      {({hasFeature}) => props.children(hasFeature, props)}\n    </Feature>\n  );\n}\n\nfunction HeaderActions(props: Props) {\n  return (\n    <Fragment>\n      <FeatureWrapper {...props} key=\"edit\">\n        {renderEditButton}\n      </FeatureWrapper>\n      <FeatureWrapper {...props} key=\"download\">\n        {renderDownloadButton}\n      </FeatureWrapper>\n      {renderSummaryButton(props)}\n    </Fragment>\n  );\n}\n\nexport default HeaderActions;\n","import {Component, Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport {Location, LocationDescriptorObject} from 'history';\n\nimport {openModal} from 'sentry/actionCreators/modal';\nimport GridEditable, {\n  COL_WIDTH_MINIMUM,\n  COL_WIDTH_UNDEFINED,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport Truncate from 'sentry/components/truncate';\nimport {IconStack} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {TableData, TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport EventView, {\n  isFieldSortable,\n  pickRelevantLocationQueryStrings,\n} from 'sentry/utils/discover/eventView';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {\n  Column,\n  fieldAlignment,\n  getEquationAliasIndex,\n  isEquationAlias,\n} from 'sentry/utils/discover/fields';\nimport {DisplayModes, TOP_N} from 'sentry/utils/discover/types';\nimport {\n  eventDetailsRouteWithEventView,\n  generateEventSlug,\n} from 'sentry/utils/discover/urls';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withProjects from 'sentry/utils/withProjects';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nimport {getExpandedResults, pushEventViewToLocation} from '../utils';\n\nimport CellAction, {Actions, updateQuery} from './cellAction';\nimport ColumnEditModal, {modalCss} from './columnEditModal';\nimport TableActions from './tableActions';\nimport TopResultsIndicator from './topResultsIndicator';\nimport {TableColumn} from './types';\n\nexport type TableViewProps = {\n  error: string | null;\n  eventView: EventView;\n  isFirstPage: boolean;\n\n  isLoading: boolean;\n  location: Location;\n\n  measurementKeys: null | string[];\n  onChangeShowTags: () => void;\n  organization: Organization;\n  projects: Project[];\n  showTags: boolean;\n  tableData: TableData | null | undefined;\n\n  title: string;\n  spanOperationBreakdownKeys?: string[];\n};\n\n/**\n * The `TableView` is marked with leading _ in its method names. It consumes\n * the EventView object given in its props to generate new EventView objects\n * for actions like resizing column.\n\n * The entire state of the table view (or event view) is co-located within\n * the EventView object. This object is fed from the props.\n *\n * Attempting to modify the state, and therefore, modifying the given EventView\n * object given from its props, will generate new instances of EventView objects.\n *\n * In most cases, the new EventView object differs from the previous EventView\n * object. The new EventView object is pushed to the location object.\n */\nclass TableView extends Component<TableViewProps> {\n  /**\n   * Updates a column on resizing\n   */\n  _resizeColumn = (columnIndex: number, nextColumn: TableColumn<keyof TableDataRow>) => {\n    const {location, eventView} = this.props;\n\n    const newWidth = nextColumn.width ? Number(nextColumn.width) : COL_WIDTH_UNDEFINED;\n    const nextEventView = eventView.withResizedColumn(columnIndex, newWidth);\n\n    pushEventViewToLocation({\n      location,\n      nextEventView,\n      extraQuery: pickRelevantLocationQueryStrings(location),\n    });\n  };\n\n  _renderPrependColumns = (\n    isHeader: boolean,\n    dataRow?: any,\n    rowIndex?: number\n  ): React.ReactNode[] => {\n    const {organization, eventView, tableData, location} = this.props;\n    const hasAggregates = eventView.hasAggregateField();\n    const hasIdField = eventView.hasIdField();\n\n    if (isHeader) {\n      if (hasAggregates) {\n        return [\n          <PrependHeader key=\"header-icon\">\n            <IconStack size=\"sm\" />\n          </PrependHeader>,\n        ];\n      }\n      if (!hasIdField) {\n        return [\n          <PrependHeader key=\"header-event-id\">\n            <SortLink\n              align=\"left\"\n              title={t('event id')}\n              direction={undefined}\n              canSort={false}\n              generateSortLink={() => undefined}\n            />\n          </PrependHeader>,\n        ];\n      }\n      return [];\n    }\n\n    if (hasAggregates) {\n      const nextView = getExpandedResults(eventView, {}, dataRow);\n\n      const target = {\n        pathname: location.pathname,\n        query: nextView.generateQueryStringObject(),\n      };\n\n      return [\n        <Tooltip key={`eventlink${rowIndex}`} title={t('Open Group')}>\n          <Link\n            to={target}\n            data-test-id=\"open-group\"\n            onClick={() => {\n              if (nextView.isEqualTo(eventView)) {\n                Sentry.captureException(new Error('Failed to drilldown'));\n              }\n            }}\n          >\n            <StyledIcon size=\"sm\" />\n          </Link>\n        </Tooltip>,\n      ];\n    }\n    if (!hasIdField) {\n      let value = dataRow.id;\n\n      if (tableData && tableData.meta) {\n        const fieldRenderer = getFieldRenderer('id', tableData.meta);\n        value = fieldRenderer(dataRow, {organization, location});\n      }\n\n      const eventSlug = generateEventSlug(dataRow);\n\n      const target = eventDetailsRouteWithEventView({\n        orgSlug: organization.slug,\n        eventSlug,\n        eventView,\n      });\n\n      return [\n        <Tooltip key={`eventlink${rowIndex}`} title={t('View Event')}>\n          <StyledLink data-test-id=\"view-event\" to={target}>\n            {value}\n          </StyledLink>\n        </Tooltip>,\n      ];\n    }\n    return [];\n  };\n\n  _renderGridHeaderCell = (column: TableColumn<keyof TableDataRow>): React.ReactNode => {\n    const {eventView, location, tableData} = this.props;\n    const tableMeta = tableData?.meta;\n\n    const align = fieldAlignment(column.name, column.type, tableMeta);\n    const field = {field: column.key as string, width: column.width};\n    function generateSortLink(): LocationDescriptorObject | undefined {\n      if (!tableMeta) {\n        return undefined;\n      }\n\n      const nextEventView = eventView.sortOnField(field, tableMeta);\n      const queryStringObject = nextEventView.generateQueryStringObject();\n      // Need to pull yAxis from location since eventView only stores 1 yAxis field at time\n      queryStringObject.yAxis = decodeList(location.query.yAxis);\n\n      return {\n        ...location,\n        query: queryStringObject,\n      };\n    }\n    const currentSort = eventView.sortForField(field, tableMeta);\n    const canSort = isFieldSortable(field, tableMeta);\n    const titleText = isEquationAlias(column.name)\n      ? eventView.getEquations()[getEquationAliasIndex(column.name)]\n      : column.name;\n\n    const title = (\n      <StyledTooltip title={titleText}>\n        <Truncate value={titleText} maxLength={60} expandable={false} />\n      </StyledTooltip>\n    );\n\n    return (\n      <SortLink\n        align={align}\n        title={title}\n        direction={currentSort ? currentSort.kind : undefined}\n        canSort={canSort}\n        generateSortLink={generateSortLink}\n      />\n    );\n  };\n\n  _renderGridBodyCell = (\n    column: TableColumn<keyof TableDataRow>,\n    dataRow: TableDataRow,\n    rowIndex: number,\n    columnIndex: number\n  ): React.ReactNode => {\n    const {isFirstPage, eventView, location, organization, tableData} = this.props;\n\n    if (!tableData || !tableData.meta) {\n      return dataRow[column.key];\n    }\n\n    const columnKey = String(column.key);\n    const fieldRenderer = getFieldRenderer(\n      columnKey,\n      tableData.meta,\n      !organization.features.includes('discover-frontend-use-events-endpoint')\n    );\n\n    const display = eventView.getDisplayMode();\n    const isTopEvents =\n      display === DisplayModes.TOP5 || display === DisplayModes.DAILYTOP5;\n\n    const topEvents = eventView.topEvents ? parseInt(eventView.topEvents, 10) : TOP_N;\n    const count = Math.min(tableData?.data?.length ?? topEvents, topEvents);\n\n    let cell = fieldRenderer(dataRow, {organization, location});\n\n    if (columnKey === 'id') {\n      const eventSlug = generateEventSlug(dataRow);\n\n      const target = eventDetailsRouteWithEventView({\n        orgSlug: organization.slug,\n        eventSlug,\n        eventView,\n      });\n\n      cell = (\n        <Tooltip title={t('View Event')}>\n          <StyledLink data-test-id=\"view-event\" to={target}>\n            {cell}\n          </StyledLink>\n        </Tooltip>\n      );\n    } else if (columnKey === 'trace') {\n      const dateSelection = eventView.normalizeDateSelection(location);\n      if (dataRow.trace) {\n        const target = getTraceDetailsUrl(\n          organization,\n          String(dataRow.trace),\n          dateSelection,\n          {}\n        );\n\n        cell = (\n          <Tooltip title={t('View Trace')}>\n            <StyledLink data-test-id=\"view-trace\" to={target}>\n              {cell}\n            </StyledLink>\n          </Tooltip>\n        );\n      }\n    }\n\n    const fieldName = columnKey;\n    const value = dataRow[fieldName];\n    if (tableData.meta[fieldName] === 'integer' && defined(value) && value > 999) {\n      return (\n        <Tooltip\n          title={value.toLocaleString()}\n          containerDisplayMode=\"block\"\n          position=\"right\"\n        >\n          <CellAction\n            column={column}\n            dataRow={dataRow}\n            handleCellAction={this.handleCellAction(dataRow, column)}\n          >\n            {cell}\n          </CellAction>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <Fragment>\n        {isFirstPage && isTopEvents && rowIndex < topEvents && columnIndex === 0 ? (\n          // Add one if we need to include Other in the series\n          <TopResultsIndicator count={count} index={rowIndex} />\n        ) : null}\n        <CellAction\n          column={column}\n          dataRow={dataRow}\n          handleCellAction={this.handleCellAction(dataRow, column)}\n        >\n          {cell}\n        </CellAction>\n      </Fragment>\n    );\n  };\n\n  handleEditColumns = () => {\n    const {organization, eventView, measurementKeys, spanOperationBreakdownKeys} =\n      this.props;\n\n    const hasBreakdownFeature = organization.features.includes(\n      'performance-ops-breakdown'\n    );\n\n    openModal(\n      modalProps => (\n        <ColumnEditModal\n          {...modalProps}\n          organization={organization}\n          measurementKeys={measurementKeys}\n          spanOperationBreakdownKeys={\n            hasBreakdownFeature ? spanOperationBreakdownKeys : undefined\n          }\n          columns={eventView.getColumns().map(col => col.column)}\n          onApply={this.handleUpdateColumns}\n        />\n      ),\n      {modalCss, backdrop: 'static'}\n    );\n  };\n\n  handleCellAction = (dataRow: TableDataRow, column: TableColumn<keyof TableDataRow>) => {\n    return (action: Actions, value: React.ReactText) => {\n      const {eventView, organization, projects, location} = this.props;\n\n      const query = new MutableSearch(eventView.query);\n\n      let nextView = eventView.clone();\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.results.cellaction',\n        eventName: 'Discoverv2: Cell Action Clicked',\n        organization_id: parseInt(organization.id, 10),\n        action,\n      });\n\n      switch (action) {\n        case Actions.TRANSACTION: {\n          const maybeProject = projects.find(\n            project =>\n              project.slug &&\n              [dataRow['project.name'], dataRow.project].includes(project.slug)\n          );\n          const projectID = maybeProject ? [maybeProject.id] : undefined;\n\n          const next = transactionSummaryRouteWithQuery({\n            orgSlug: organization.slug,\n            transaction: String(value),\n            projectID,\n            query: nextView.getPageFiltersQuery(),\n          });\n\n          browserHistory.push(next);\n          return;\n        }\n        case Actions.RELEASE: {\n          const maybeProject = projects.find(project => {\n            return project.slug === dataRow.project;\n          });\n\n          browserHistory.push({\n            pathname: `/organizations/${organization.slug}/releases/${encodeURIComponent(\n              value\n            )}/`,\n            query: {\n              ...nextView.getPageFiltersQuery(),\n\n              project: maybeProject ? maybeProject.id : undefined,\n            },\n          });\n\n          return;\n        }\n        case Actions.DRILLDOWN: {\n          // count_unique(column) drilldown\n\n          trackAnalyticsEvent({\n            eventKey: 'discover_v2.results.drilldown',\n            eventName: 'Discoverv2: Click aggregate drilldown',\n            organization_id: parseInt(organization.id, 10),\n          });\n\n          // Drilldown into each distinct value and get a count() for each value.\n          nextView = getExpandedResults(nextView, {}, dataRow).withNewColumn({\n            kind: 'function',\n            function: ['count', '', undefined, undefined],\n          });\n\n          browserHistory.push(nextView.getResultsViewUrlTarget(organization.slug));\n\n          return;\n        }\n        default: {\n          updateQuery(query, action, column, value);\n        }\n      }\n      nextView.query = query.formatString();\n\n      const target = nextView.getResultsViewUrlTarget(organization.slug);\n      // Get yAxis from location\n      target.query.yAxis = decodeList(location.query.yAxis);\n      browserHistory.push(target);\n    };\n  };\n\n  handleUpdateColumns = (columns: Column[]): void => {\n    const {organization, eventView, location} = this.props;\n\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.update_columns',\n      eventName: 'Discoverv2: Update columns',\n      organization_id: parseInt(organization.id, 10),\n    });\n\n    const nextView = eventView.withColumns(columns);\n    const resultsViewUrlTarget = nextView.getResultsViewUrlTarget(organization.slug);\n    // Need to pull yAxis from location since eventView only stores 1 yAxis field at time\n    const previousYAxis = decodeList(location.query.yAxis);\n    resultsViewUrlTarget.query.yAxis = previousYAxis.filter(yAxis =>\n      nextView.getYAxisOptions().find(({value}) => value === yAxis)\n    );\n    browserHistory.push(resultsViewUrlTarget);\n  };\n\n  renderHeaderButtons = () => {\n    const {\n      organization,\n      title,\n      eventView,\n      isLoading,\n      error,\n      tableData,\n      location,\n      onChangeShowTags,\n      showTags,\n    } = this.props;\n\n    return (\n      <TableActions\n        title={title}\n        isLoading={isLoading}\n        error={error}\n        organization={organization}\n        eventView={eventView}\n        onEdit={this.handleEditColumns}\n        tableData={tableData}\n        location={location}\n        onChangeShowTags={onChangeShowTags}\n        showTags={showTags}\n      />\n    );\n  };\n\n  render() {\n    const {isLoading, error, location, tableData, eventView, organization} = this.props;\n\n    const columnOrder = eventView.getColumns(\n      organization.features.includes('discover-frontend-use-events-endpoint')\n    );\n    const columnSortBy = eventView.getSorts();\n\n    const prependColumnWidths = eventView.hasAggregateField()\n      ? ['40px']\n      : eventView.hasIdField()\n      ? []\n      : [`minmax(${COL_WIDTH_MINIMUM}px, max-content)`];\n\n    return (\n      <GridEditable\n        isLoading={isLoading}\n        error={error}\n        data={tableData ? tableData.data : []}\n        columnOrder={columnOrder}\n        columnSortBy={columnSortBy}\n        title={t('Results')}\n        grid={{\n          renderHeadCell: this._renderGridHeaderCell as any,\n          renderBodyCell: this._renderGridBodyCell as any,\n          onResizeColumn: this._resizeColumn as any,\n          renderPrependColumns: this._renderPrependColumns as any,\n          prependColumnWidths,\n        }}\n        headerButtons={this.renderHeaderButtons}\n        location={location}\n      />\n    );\n  }\n}\n\nconst PrependHeader = styled('span')`\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledTooltip = styled(Tooltip)`\n  display: initial;\n`;\n\nconst StyledLink = styled(Link)`\n  > div {\n    display: inline;\n  }\n`;\n\nconst StyledIcon = styled(IconStack)`\n  vertical-align: middle;\n`;\n\nexport default withProjects(TableView);\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport {Location, LocationDescriptor} from 'history';\n\nimport {fetchTagFacets, Tag, TagSegment} from 'sentry/actionCreators/events';\nimport {Client} from 'sentry/api';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport Placeholder from 'sentry/components/placeholder';\nimport TagDistributionMeter from 'sentry/components/tagDistributionMeter';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView, {isAPIPayloadSimilar} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  eventView: EventView;\n  generateUrl: (key: string, value: string) => LocationDescriptor;\n  location: Location;\n  organization: Organization;\n  totalValues: null | number;\n  confirmedQuery?: boolean;\n};\n\ntype State = {\n  error: string;\n  loading: boolean;\n  tags: Tag[];\n  totalValues: null | number;\n};\n\nclass Tags extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    tags: [],\n    totalValues: null,\n    error: '',\n  };\n\n  componentDidMount() {\n    this.fetchData(true);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      this.shouldRefetchData(prevProps) ||\n      prevProps.confirmedQuery !== this.props.confirmedQuery\n    ) {\n      this.fetchData();\n    }\n  }\n\n  shouldRefetchData = (prevProps: Props): boolean => {\n    const thisAPIPayload = this.props.eventView.getFacetsAPIPayload(this.props.location);\n    const otherAPIPayload = prevProps.eventView.getFacetsAPIPayload(prevProps.location);\n\n    return !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload);\n  };\n\n  fetchData = async (forceFetchData = false) => {\n    const {api, organization, eventView, location, confirmedQuery} = this.props;\n    this.setState({loading: true, error: '', tags: []});\n\n    // Fetch should be forced after mounting as confirmedQuery isn't guaranteed\n    // since this component can mount/unmount via show/hide tags separate from\n    // data being loaded for the rest of the page.\n    if (!forceFetchData && confirmedQuery === false) {\n      return;\n    }\n\n    try {\n      const tags = await fetchTagFacets(\n        api,\n        organization.slug,\n        eventView.getFacetsAPIPayload(location)\n      );\n      this.setState({loading: false, tags});\n    } catch (err) {\n      Sentry.captureException(err);\n      this.setState({loading: false, error: err});\n    }\n  };\n\n  handleTagClick = (tag: string) => {\n    const {organization} = this.props;\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.facet_map.clicked',\n      eventName: 'Discoverv2: Clicked on a tag on the facet map',\n      tag,\n      organization_id: parseInt(organization.id, 10),\n    });\n  };\n\n  renderTag(tag: Tag) {\n    const {generateUrl, totalValues} = this.props;\n\n    const segments: TagSegment[] = tag.topValues.map(segment => {\n      segment.url = generateUrl(tag.key, segment.value);\n\n      return segment;\n    });\n    // Ensure we don't show >100% if there's a slight mismatch between the facets\n    // endpoint and the totals endpoint\n    const maxTotalValues =\n      segments.length > 0\n        ? Math.max(Number(totalValues), segments[0].count)\n        : totalValues;\n    return (\n      <TagDistributionMeter\n        key={tag.key}\n        title={tag.key}\n        segments={segments}\n        totalValues={Number(maxTotalValues)}\n        renderLoading={() => <StyledPlaceholder height=\"16px\" />}\n        onTagClick={this.handleTagClick}\n        showReleasePackage\n      />\n    );\n  }\n\n  renderPlaceholders() {\n    return (\n      <Fragment>\n        <StyledPlaceholderTitle key=\"title-1\" />\n        <StyledPlaceholder key=\"bar-1\" />\n        <StyledPlaceholderTitle key=\"title-2\" />\n        <StyledPlaceholder key=\"bar-2\" />\n        <StyledPlaceholderTitle key=\"title-3\" />\n        <StyledPlaceholder key=\"bar-3\" />\n      </Fragment>\n    );\n  }\n\n  renderBody = () => {\n    const {loading, error, tags} = this.state;\n    if (loading) {\n      return this.renderPlaceholders();\n    }\n    if (error) {\n      return (\n        <ErrorPanel height=\"132px\">\n          <IconWarning color=\"gray300\" size=\"lg\" />\n        </ErrorPanel>\n      );\n    }\n    if (tags.length > 0) {\n      return tags.map(tag => this.renderTag(tag));\n    }\n    return <StyledEmptyStateWarning small>{t('No tags found')}</StyledEmptyStateWarning>;\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <SectionHeading>{t('Tag Summary')}</SectionHeading>\n        {this.renderBody()}\n      </Fragment>\n    );\n  }\n}\n\nconst StyledEmptyStateWarning = styled(EmptyStateWarning)`\n  height: 132px;\n  padding: 54px 15%;\n`;\n\nconst StyledPlaceholder = styled(Placeholder)`\n  border-radius: ${p => p.theme.borderRadius};\n  height: 16px;\n  margin-bottom: ${space(1.5)};\n`;\n\nconst StyledPlaceholderTitle = styled(Placeholder)`\n  width: 100px;\n  height: 12px;\n  margin-bottom: ${space(0.5)};\n`;\n\nexport {Tags};\nexport default withApi(Tags);\n","import styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","import moment from 'moment';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {EventsStatsData, Project} from 'sentry/types';\nimport EventView, {LocationQuery} from 'sentry/utils/discover/eventView';\n\nexport type TrendView = EventView & {\n  middle?: string;\n  orderby?: string;\n  trendFunction?: string;\n  trendType?: TrendChangeType;\n};\n\nexport type TrendsQuery = EventQuery &\n  LocationQuery & {\n    interval?: string;\n    middle?: string;\n    trendFunction?: string;\n    trendType?: TrendChangeType;\n  };\n\nexport type TrendFunction = {\n  alias: string;\n  field: TrendFunctionField;\n  label: string;\n  legendLabel: string;\n};\n\nexport type TrendParameter = {\n  column: string;\n  label: string;\n};\n\nexport enum TrendChangeType {\n  IMPROVED = 'improved',\n  REGRESSION = 'regression',\n}\n\nexport enum TrendFunctionField {\n  P50 = 'p50',\n  P75 = 'p75',\n  P95 = 'p95',\n  P99 = 'p99',\n  AVG = 'avg',\n}\n\nexport enum TrendColumnField {\n  DURATION = 'transaction.duration',\n  LCP = 'measurements.lcp',\n  FCP = 'measurements.fcp',\n  FID = 'measurements.fid',\n  CLS = 'measurements.cls',\n  SPANS_DB = 'spans.db',\n  SPANS_HTTP = 'spans.http',\n  SPANS_BROWSER = 'spans.browser',\n  SPANS_RESOURCE = 'spans.resource',\n}\n\nexport type TrendStat = {\n  data: EventsStatsData;\n  order: number;\n};\n\nexport type TrendsStats = {\n  [transaction: string]: TrendStat;\n};\n\nexport type TrendsTransaction = {\n  aggregate_range_1: number;\n  aggregate_range_2: number;\n  count: number;\n\n  count_percentage: number;\n  count_range_1: number;\n  count_range_2: number;\n  project: string;\n  transaction: string;\n  trend_difference: number;\n  trend_percentage: number;\n};\n\nexport type TrendsDataEvents = {\n  data: TrendsTransaction[];\n  meta: any;\n};\n\nexport type TrendsData = {\n  events: TrendsDataEvents;\n  projects: Project[];\n  stats: TrendsStats;\n};\n\nexport type NormalizedTrendsTransaction = TrendsTransaction & {\n  received_at: Readonly<moment.Moment>;\n};\n","import {ASAP} from 'downsample/methods/ASAP';\nimport {Location} from 'history';\nimport moment from 'moment';\n\nimport {getInterval} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  AggregationKeyWithAlias,\n  Field,\n  generateFieldAsString,\n  Sort,\n} from 'sentry/utils/discover/fields';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport theme from 'sentry/utils/theme';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {platformToPerformanceType, PROJECT_PERFORMANCE_TYPE} from '../utils';\n\nimport {\n  NormalizedTrendsTransaction,\n  TrendChangeType,\n  TrendColumnField,\n  TrendFunction,\n  TrendFunctionField,\n  TrendParameter,\n  TrendsTransaction,\n  TrendView,\n} from './types';\n\nexport const DEFAULT_TRENDS_STATS_PERIOD = '14d';\nexport const DEFAULT_MAX_DURATION = '15min';\n\nexport const TRENDS_FUNCTIONS: TrendFunction[] = [\n  {\n    label: 'p50',\n    field: TrendFunctionField.P50,\n    alias: 'percentile_range',\n    legendLabel: 'p50',\n  },\n  {\n    label: 'p75',\n    field: TrendFunctionField.P75,\n    alias: 'percentile_range',\n    legendLabel: 'p75',\n  },\n  {\n    label: 'p95',\n    field: TrendFunctionField.P95,\n    alias: 'percentile_range',\n    legendLabel: 'p95',\n  },\n  {\n    label: 'p99',\n    field: TrendFunctionField.P99,\n    alias: 'percentile_range',\n    legendLabel: 'p99',\n  },\n  {\n    label: 'average',\n    field: TrendFunctionField.AVG,\n    alias: 'avg_range',\n    legendLabel: 'average',\n  },\n];\n\nexport const TRENDS_PARAMETERS: TrendParameter[] = [\n  {\n    label: 'Duration',\n    column: TrendColumnField.DURATION,\n  },\n  {\n    label: 'LCP',\n    column: TrendColumnField.LCP,\n  },\n  {\n    label: 'FCP',\n    column: TrendColumnField.FCP,\n  },\n  {\n    label: 'FID',\n    column: TrendColumnField.FID,\n  },\n  {\n    label: 'CLS',\n    column: TrendColumnField.CLS,\n  },\n  {\n    label: 'Spans (http)',\n    column: TrendColumnField.SPANS_HTTP,\n  },\n  {\n    label: 'Spans (db)',\n    column: TrendColumnField.SPANS_DB,\n  },\n  {\n    label: 'Spans (browser)',\n    column: TrendColumnField.SPANS_BROWSER,\n  },\n  {\n    label: 'Spans (resource)',\n    column: TrendColumnField.SPANS_RESOURCE,\n  },\n];\n\nexport const trendToColor = {\n  [TrendChangeType.IMPROVED]: {\n    lighter: theme.green200,\n    default: theme.green300,\n  },\n  [TrendChangeType.REGRESSION]: {\n    lighter: theme.red200,\n    default: theme.red300,\n  },\n};\n\nexport const trendSelectedQueryKeys = {\n  [TrendChangeType.IMPROVED]: 'improvedSelected',\n  [TrendChangeType.REGRESSION]: 'regressionSelected',\n};\n\nexport const trendUnselectedSeries = {\n  [TrendChangeType.IMPROVED]: 'improvedUnselectedSeries',\n  [TrendChangeType.REGRESSION]: 'regressionUnselectedSeries',\n};\n\nexport const trendCursorNames = {\n  [TrendChangeType.IMPROVED]: 'improvedCursor',\n  [TrendChangeType.REGRESSION]: 'regressionCursor',\n};\n\nexport function resetCursors() {\n  const cursors = {};\n  Object.values(trendCursorNames).forEach(cursor => (cursors[cursor] = undefined)); // Resets both cursors\n  return cursors;\n}\n\nexport function getCurrentTrendFunction(\n  location: Location,\n  _trendFunctionField?: TrendFunctionField\n): TrendFunction {\n  const trendFunctionField =\n    _trendFunctionField ?? decodeScalar(location?.query?.trendFunction);\n  const trendFunction = TRENDS_FUNCTIONS.find(({field}) => field === trendFunctionField);\n  return trendFunction || TRENDS_FUNCTIONS[0];\n}\n\nfunction getDefaultTrendParameter(\n  projects: Project[],\n  projectIds: Readonly<number[]>\n): TrendParameter {\n  const performanceType = platformToPerformanceType(projects, projectIds);\n  const trendParameter = performanceTypeToTrendParameterLabel(performanceType);\n\n  return trendParameter;\n}\n\nexport function getCurrentTrendParameter(\n  location: Location,\n  projects: Project[],\n  projectIds: Readonly<number[]>\n): TrendParameter {\n  const trendParameterLabel = decodeScalar(location?.query?.trendParameter);\n  const trendParameter = TRENDS_PARAMETERS.find(\n    ({label}) => label === trendParameterLabel\n  );\n\n  if (trendParameter) {\n    return trendParameter;\n  }\n\n  const defaultTrendParameter = getDefaultTrendParameter(projects, projectIds);\n  return defaultTrendParameter;\n}\n\nexport function performanceTypeToTrendParameterLabel(\n  performanceType: PROJECT_PERFORMANCE_TYPE\n): TrendParameter {\n  switch (performanceType) {\n    case PROJECT_PERFORMANCE_TYPE.FRONTEND:\n      return {\n        label: 'LCP',\n        column: TrendColumnField.LCP,\n      };\n    case PROJECT_PERFORMANCE_TYPE.ANY:\n    case PROJECT_PERFORMANCE_TYPE.BACKEND:\n    case PROJECT_PERFORMANCE_TYPE.FRONTEND_OTHER:\n    default:\n      return {\n        label: 'Duration',\n        column: TrendColumnField.DURATION,\n      };\n  }\n}\n\nexport function generateTrendFunctionAsString(\n  trendFunction: TrendFunctionField,\n  trendParameter: string\n): string {\n  return generateFieldAsString({\n    kind: 'function',\n    function: [\n      trendFunction as AggregationKeyWithAlias,\n      trendParameter,\n      undefined,\n      undefined,\n    ],\n  });\n}\n\nexport function transformDeltaSpread(from: number, to: number) {\n  const fromSeconds = from / 1000;\n  const toSeconds = to / 1000;\n\n  const showDigits = from > 1000 || to > 1000 || from < 10 || to < 10; // Show digits consistently if either has them\n\n  return {fromSeconds, toSeconds, showDigits};\n}\n\nexport function getTrendProjectId(\n  trend: NormalizedTrendsTransaction,\n  projects?: Project[]\n): string | undefined {\n  if (!trend.project || !projects) {\n    return undefined;\n  }\n  const transactionProject = projects.find(project => project.slug === trend.project);\n  return transactionProject?.id;\n}\n\nexport function modifyTrendView(\n  trendView: TrendView,\n  location: Location,\n  trendsType: TrendChangeType,\n  projects: Project[],\n  isProjectOnly?: boolean\n) {\n  const trendFunction = getCurrentTrendFunction(location);\n  const trendParameter = getCurrentTrendParameter(location, projects, trendView.project);\n\n  const transactionField = isProjectOnly ? [] : ['transaction'];\n  const fields = [...transactionField, 'project'].map(field => ({\n    field,\n  })) as Field[];\n\n  const trendSort = {\n    field: 'trend_percentage()',\n    kind: 'asc',\n  } as Sort;\n\n  trendView.trendType = trendsType;\n  if (trendsType === TrendChangeType.REGRESSION) {\n    trendSort.kind = 'desc';\n  }\n\n  if (trendFunction && trendParameter) {\n    trendView.trendFunction = generateTrendFunctionAsString(\n      trendFunction.field,\n      trendParameter.column\n    );\n  }\n  trendView.query = getLimitTransactionItems(trendView.query);\n\n  trendView.interval = getQueryInterval(location, trendView);\n\n  trendView.sorts = [trendSort];\n  trendView.fields = fields;\n}\n\nexport function modifyTrendsViewDefaultPeriod(eventView: EventView, location: Location) {\n  const {query} = location;\n\n  const hasStartAndEnd = query.start && query.end;\n\n  if (!query.statsPeriod && !hasStartAndEnd) {\n    eventView.statsPeriod = DEFAULT_TRENDS_STATS_PERIOD;\n  }\n  return eventView;\n}\n\nfunction getQueryInterval(location: Location, eventView: TrendView) {\n  const intervalFromQueryParam = decodeScalar(location?.query?.interval);\n  const {start, end, statsPeriod} = eventView;\n\n  const datetimeSelection = {\n    start: start || null,\n    end: end || null,\n    period: statsPeriod,\n  };\n\n  const intervalFromSmoothing = getInterval(datetimeSelection, 'high');\n\n  return intervalFromQueryParam || intervalFromSmoothing;\n}\n\nexport function transformValueDelta(value: number, trendType: TrendChangeType) {\n  const absoluteValue = Math.abs(value);\n\n  const changeLabel =\n    trendType === TrendChangeType.REGRESSION ? t('slower') : t('faster');\n\n  const seconds = absoluteValue / 1000;\n\n  const fixedDigits = absoluteValue > 1000 || absoluteValue < 10 ? 1 : 0;\n\n  return {seconds, fixedDigits, changeLabel};\n}\n\n/**\n * This will normalize the trends transactions while the current trend function and current data are out of sync\n * To minimize extra renders with missing results.\n */\nexport function normalizeTrends(\n  data: Array<TrendsTransaction>\n): Array<NormalizedTrendsTransaction> {\n  const received_at = moment(); // Adding the received time for the transaction so calls to get baseline always line up with the transaction\n  return data.map(row => {\n    return {\n      ...row,\n      received_at,\n      transaction: row.transaction,\n    } as NormalizedTrendsTransaction;\n  });\n}\n\nexport function getSelectedQueryKey(trendChangeType: TrendChangeType) {\n  return trendSelectedQueryKeys[trendChangeType];\n}\n\nexport function getUnselectedSeries(trendChangeType: TrendChangeType) {\n  return trendUnselectedSeries[trendChangeType];\n}\n\nexport function movingAverage(data, index, size) {\n  return (\n    data\n      .slice(index - size, index)\n      .map(a => a.value)\n      .reduce((a, b) => a + b, 0) / size\n  );\n}\n\n/**\n * This function applies defaults for trend and count percentage, and adds the confidence limit to the query\n */\nfunction getLimitTransactionItems(query: string) {\n  const limitQuery = new MutableSearch(query);\n  if (!limitQuery.hasFilter('count_percentage()')) {\n    limitQuery.addFilterValues('count_percentage()', ['>0.25', '<4']);\n  }\n  if (!limitQuery.hasFilter('trend_percentage()')) {\n    limitQuery.addFilterValues('trend_percentage()', ['>0%']);\n  }\n  if (!limitQuery.hasFilter('confidence()')) {\n    limitQuery.addFilterValues('confidence()', ['>6']);\n  }\n  return limitQuery.formatString();\n}\n\nexport const smoothTrend = (data: [number, number][], resolution = 100) => {\n  return ASAP(data, resolution);\n};\n\nexport const replaceSeriesName = (seriesName: string) => {\n  return ['p50', 'p75'].find(aggregate => seriesName.includes(aggregate));\n};\n\nexport const replaceSmoothedSeriesName = (seriesName: string) => {\n  return `Smoothed ${['p50', 'p75'].find(aggregate => seriesName.includes(aggregate))}`;\n};\n\nexport function transformEventStatsSmoothed(data?: Series[], seriesName?: string) {\n  let minValue = Number.MAX_SAFE_INTEGER;\n  let maxValue = 0;\n  if (!data) {\n    return {\n      maxValue,\n      minValue,\n      smoothedResults: undefined,\n    };\n  }\n\n  const smoothedResults: Series[] = [];\n\n  for (const current of data) {\n    const currentData = current.data;\n    const resultData: SeriesDataUnit[] = [];\n\n    const smoothed = smoothTrend(\n      currentData.map(({name, value}) => [Number(name), value])\n    );\n\n    for (let i = 0; i < smoothed.length; i++) {\n      const point = smoothed[i] as any;\n      const value = point.y;\n      resultData.push({\n        name: point.x,\n        value,\n      });\n      if (!isNaN(value)) {\n        const rounded = Math.round(value);\n        minValue = Math.min(rounded, minValue);\n        maxValue = Math.max(rounded, maxValue);\n      }\n    }\n    smoothedResults.push({\n      seriesName: seriesName || current.seriesName || 'Current',\n      data: resultData,\n      lineStyle: current.lineStyle,\n      color: current.color,\n    });\n  }\n\n  return {\n    minValue,\n    maxValue,\n    smoothedResults,\n  };\n}\n","import {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {backend, frontend, mobile} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\nimport {\n  NewQuery,\n  Organization,\n  OrganizationSummary,\n  PageFilters,\n  Project,\n  ReleaseProject,\n} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {statsPeriodToDays} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {TRACING_FIELDS} from 'sentry/utils/discover/fields';\nimport {getDuration} from 'sentry/utils/formatters';\nimport getCurrentSentryReactTransaction from 'sentry/utils/getCurrentSentryReactTransaction';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {DEFAULT_MAX_DURATION} from './trends/utils';\n\nexport const QUERY_KEYS = [\n  'environment',\n  'project',\n  'query',\n  'start',\n  'end',\n  'statsPeriod',\n] as const;\n\nexport const UNPARAMETERIZED_TRANSACTION = '<< unparameterized >>'; // Represents 'other' transactions with high cardinality names that were dropped on the metrics dataset.\nconst UNPARAMETRIZED_TRANSACTION = '<< unparametrized >>'; // Old spelling. Can be deleted in the future when all data for this transaction name is gone.\nexport const EXCLUDE_METRICS_UNPARAM_CONDITIONS = `(!transaction:\"${UNPARAMETERIZED_TRANSACTION}\" AND !transaction:\"${UNPARAMETRIZED_TRANSACTION}\")`;\nconst SHOW_UNPARAM_BANNER = 'showUnparameterizedBanner';\n\nexport function createUnnamedTransactionsDiscoverTarget(props: {\n  location: Location;\n  organization: Organization;\n}) {\n  const fields = [\n    'transaction',\n    'project',\n    'transaction.source',\n    'epm()',\n    'p50()',\n    'p95()',\n  ];\n\n  const query: NewQuery = {\n    id: undefined,\n    name: t('Performance - Unparameterized Transactions '),\n    query: 'event.type:transaction transaction.source:\"url\"',\n    projects: [],\n    fields,\n    version: 2,\n  };\n\n  const discoverEventView = EventView.fromNewQueryWithLocation(\n    query,\n    props.location\n  ).withSorts([{field: 'epm', kind: 'desc'}]);\n  const target = discoverEventView.getResultsViewUrlTarget(props.organization.slug);\n  target.query[SHOW_UNPARAM_BANNER] = 'true';\n  return target;\n}\n\n/**\n * Performance type can used to determine a default view or which specific field should be used by default on pages\n * where we don't want to wait for transaction data to return to determine how to display aspects of a page.\n */\nexport enum PROJECT_PERFORMANCE_TYPE {\n  ANY = 'any', // Fallback to transaction duration\n  FRONTEND = 'frontend',\n  BACKEND = 'backend',\n  FRONTEND_OTHER = 'frontend_other',\n  MOBILE = 'mobile',\n}\n\n// The native SDK is equally used on clients and end-devices as on\n// backend, the default view should be \"All Transactions\".\nconst FRONTEND_PLATFORMS: string[] = [...frontend];\nconst BACKEND_PLATFORMS: string[] = backend.filter(platform => platform !== 'native');\nconst MOBILE_PLATFORMS: string[] = [...mobile];\n\nexport function platformToPerformanceType(\n  projects: (Project | ReleaseProject)[],\n  projectIds: readonly number[]\n) {\n  if (projectIds.length === 0 || projectIds[0] === ALL_ACCESS_PROJECTS) {\n    return PROJECT_PERFORMANCE_TYPE.ANY;\n  }\n\n  const selectedProjects = projects.filter(p =>\n    projectIds.includes(parseInt(`${p.id}`, 10))\n  );\n\n  if (selectedProjects.length === 0 || selectedProjects.some(p => !p.platform)) {\n    return PROJECT_PERFORMANCE_TYPE.ANY;\n  }\n\n  if (\n    selectedProjects.every(project =>\n      FRONTEND_PLATFORMS.includes(project.platform as string)\n    )\n  ) {\n    return PROJECT_PERFORMANCE_TYPE.FRONTEND;\n  }\n\n  if (\n    selectedProjects.every(project =>\n      BACKEND_PLATFORMS.includes(project.platform as string)\n    )\n  ) {\n    return PROJECT_PERFORMANCE_TYPE.BACKEND;\n  }\n\n  if (\n    selectedProjects.every(project =>\n      MOBILE_PLATFORMS.includes(project.platform as string)\n    )\n  ) {\n    return PROJECT_PERFORMANCE_TYPE.MOBILE;\n  }\n\n  return PROJECT_PERFORMANCE_TYPE.ANY;\n}\n\n/**\n * Used for transaction summary to determine appropriate columns on a page, since there is no display field set for the page.\n */\nexport function platformAndConditionsToPerformanceType(\n  projects: Project[],\n  eventView: EventView\n) {\n  const performanceType = platformToPerformanceType(projects, eventView.project);\n  if (performanceType === PROJECT_PERFORMANCE_TYPE.FRONTEND) {\n    const conditions = new MutableSearch(eventView.query);\n    const ops = conditions.getFilterValues('!transaction.op');\n    if (ops.some(op => op === 'pageload')) {\n      return PROJECT_PERFORMANCE_TYPE.FRONTEND_OTHER;\n    }\n  }\n\n  return performanceType;\n}\n\n/**\n * Used for transaction summary to check the view itself, since it can have conditions which would exclude it from having vitals aside from platform.\n */\nexport function isSummaryViewFrontendPageLoad(eventView: EventView, projects: Project[]) {\n  return (\n    platformAndConditionsToPerformanceType(projects, eventView) ===\n    PROJECT_PERFORMANCE_TYPE.FRONTEND\n  );\n}\n\nexport function isSummaryViewFrontend(eventView: EventView, projects: Project[]) {\n  return (\n    platformAndConditionsToPerformanceType(projects, eventView) ===\n      PROJECT_PERFORMANCE_TYPE.FRONTEND ||\n    platformAndConditionsToPerformanceType(projects, eventView) ===\n      PROJECT_PERFORMANCE_TYPE.FRONTEND_OTHER\n  );\n}\n\nexport function getPerformanceLandingUrl(organization: OrganizationSummary): string {\n  return `/organizations/${organization.slug}/performance/`;\n}\n\nexport function getPerformanceTrendsUrl(organization: OrganizationSummary): string {\n  return `/organizations/${organization.slug}/performance/trends/`;\n}\n\nexport function getTransactionSearchQuery(location: Location, query: string = '') {\n  return decodeScalar(location.query.query, query).trim();\n}\n\nexport function handleTrendsClick({\n  location,\n  organization,\n  projectPlatforms,\n}: {\n  location: Location;\n  organization: Organization;\n  projectPlatforms: string;\n}) {\n  trackAnalyticsEvent({\n    eventKey: 'performance_views.change_view',\n    eventName: 'Performance Views: Change View',\n    organization_id: parseInt(organization.id, 10),\n    view_name: 'TRENDS',\n    project_platforms: projectPlatforms,\n  });\n\n  const target = trendsTargetRoute({location, organization});\n\n  browserHistory.push(target);\n}\n\nexport function trendsTargetRoute({\n  location,\n  organization,\n  initialConditions,\n  additionalQuery,\n}: {\n  location: Location;\n  organization: Organization;\n  additionalQuery?: {[x: string]: string};\n  initialConditions?: MutableSearch;\n}) {\n  const newQuery = {\n    ...location.query,\n    ...additionalQuery,\n  };\n\n  const query = decodeScalar(location.query.query, '');\n  const conditions = new MutableSearch(query);\n\n  const modifiedConditions = initialConditions ?? new MutableSearch([]);\n\n  if (conditions.hasFilter('tpm()')) {\n    modifiedConditions.setFilterValues('tpm()', conditions.getFilterValues('tpm()'));\n  } else {\n    modifiedConditions.setFilterValues('tpm()', ['>0.01']);\n  }\n  if (conditions.hasFilter('transaction.duration')) {\n    modifiedConditions.setFilterValues(\n      'transaction.duration',\n      conditions.getFilterValues('transaction.duration')\n    );\n  } else {\n    modifiedConditions.setFilterValues('transaction.duration', [\n      '>0',\n      `<${DEFAULT_MAX_DURATION}`,\n    ]);\n  }\n  newQuery.query = modifiedConditions.formatString();\n\n  return {pathname: getPerformanceTrendsUrl(organization), query: {...newQuery}};\n}\n\nexport function removeTracingKeysFromSearch(\n  currentFilter: MutableSearch,\n  options: {excludeTagKeys: Set<string>} = {\n    excludeTagKeys: new Set([\n      // event type can be \"transaction\" but we're searching for issues\n      'event.type',\n      // the project is already determined by the transaction,\n      // and issue search does not support the project filter\n      'project',\n    ]),\n  }\n) {\n  currentFilter.getFilterKeys().forEach(tagKey => {\n    const searchKey = tagKey.startsWith('!') ? tagKey.substr(1) : tagKey;\n    // Remove aggregates and transaction event fields\n    if (\n      // aggregates\n      searchKey.match(/\\w+\\(.*\\)/) ||\n      // transaction event fields\n      TRACING_FIELDS.includes(searchKey) ||\n      // tags that we don't want to pass to pass to issue search\n      options.excludeTagKeys.has(searchKey)\n    ) {\n      currentFilter.removeFilter(tagKey);\n    }\n  });\n\n  return currentFilter;\n}\n\nexport function addRoutePerformanceContext(selection: PageFilters) {\n  const transaction = getCurrentSentryReactTransaction();\n  const days = statsPeriodToDays(\n    selection.datetime.period,\n    selection.datetime.start,\n    selection.datetime.end\n  );\n  const oneDay = 86400;\n  const seconds = Math.floor(days * oneDay);\n\n  transaction?.setTag('query.period', seconds.toString());\n  let groupedPeriod = '>30d';\n  if (seconds <= oneDay) {\n    groupedPeriod = '<=1d';\n  } else if (seconds <= oneDay * 7) {\n    groupedPeriod = '<=7d';\n  } else if (seconds <= oneDay * 14) {\n    groupedPeriod = '<=14d';\n  } else if (seconds <= oneDay * 30) {\n    groupedPeriod = '<=30d';\n  }\n  transaction?.setTag('query.period.grouped', groupedPeriod);\n}\n\nexport function getTransactionName(location: Location): string | undefined {\n  const {transaction} = location.query;\n\n  return decodeScalar(transaction);\n}\n\nexport function getPerformanceDuration(milliseconds: number) {\n  return getDuration(milliseconds / 1000, milliseconds > 1000 ? 2 : 0, true);\n}\n\nexport function areMultipleProjectsSelected(eventView: EventView) {\n  if (!eventView.project.length) {\n    return true; // My projects\n  }\n  if (eventView.project.length === 1 && eventView.project[0] === ALL_ACCESS_PROJECTS) {\n    return true; // All projects\n  }\n  return false;\n}\n\nexport function getSelectedProjectPlatformsArray(\n  location: Location,\n  projects: Project[]\n) {\n  const projectQuery = location.query.project;\n  const selectedProjectIdSet = Array.isArray(projectQuery)\n    ? new Set(projectQuery)\n    : new Set([projectQuery]);\n\n  const selectedProjectPlatforms = projects.reduce((acc: string[], project) => {\n    if (selectedProjectIdSet.has(project.id)) {\n      acc.push(project.platform ?? 'undefined');\n    }\n\n    return acc;\n  }, []);\n\n  return selectedProjectPlatforms;\n}\n\nexport function getSelectedProjectPlatforms(location: Location, projects: Project[]) {\n  const selectedProjectPlatforms = getSelectedProjectPlatformsArray(location, projects);\n  return selectedProjectPlatforms.join(', ');\n}\n","var isConstructor = require('../internals/is-constructor');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsConstructor(argument) is true`\nmodule.exports = function (argument) {\n  if (isConstructor(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a constructor');\n};\n","var anObject = require('../internals/an-object');\nvar aConstructor = require('../internals/a-constructor');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aConstructor(S);\n};\n","'use strict';\n/* eslint-disable es-x/no-string-prototype-matchall -- safe */\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof-raw');\nvar isRegExp = require('../internals/is-regexp');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getMethod = require('../internals/get-method');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\nvar InternalStateModule = require('../internals/internal-state');\nvar IS_PURE = require('../internals/is-pure');\n\nvar MATCH_ALL = wellKnownSymbol('matchAll');\nvar REGEXP_STRING = 'RegExp String';\nvar REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);\nvar RegExpPrototype = RegExp.prototype;\nvar $TypeError = TypeError;\nvar stringIndexOf = uncurryThis(''.indexOf);\nvar un$MatchAll = uncurryThis(''.matchAll);\n\nvar WORKS_WITH_NON_GLOBAL_REGEX = !!un$MatchAll && !fails(function () {\n  un$MatchAll('a', /./);\n});\n\nvar $RegExpStringIterator = createIteratorConstructor(function RegExpStringIterator(regexp, string, $global, fullUnicode) {\n  setInternalState(this, {\n    type: REGEXP_STRING_ITERATOR,\n    regexp: regexp,\n    string: string,\n    global: $global,\n    unicode: fullUnicode,\n    done: false\n  });\n}, REGEXP_STRING, function next() {\n  var state = getInternalState(this);\n  if (state.done) return { value: undefined, done: true };\n  var R = state.regexp;\n  var S = state.string;\n  var match = regExpExec(R, S);\n  if (match === null) return { value: undefined, done: state.done = true };\n  if (state.global) {\n    if (toString(match[0]) === '') R.lastIndex = advanceStringIndex(S, toLength(R.lastIndex), state.unicode);\n    return { value: match, done: false };\n  }\n  state.done = true;\n  return { value: match, done: false };\n});\n\nvar $matchAll = function (string) {\n  var R = anObject(this);\n  var S = toString(string);\n  var C = speciesConstructor(R, RegExp);\n  var flags = toString(getRegExpFlags(R));\n  var matcher, $global, fullUnicode;\n  matcher = new C(C === RegExp ? R.source : R, flags);\n  $global = !!~stringIndexOf(flags, 'g');\n  fullUnicode = !!~stringIndexOf(flags, 'u');\n  matcher.lastIndex = toLength(R.lastIndex);\n  return new $RegExpStringIterator(matcher, S, $global, fullUnicode);\n};\n\n// `String.prototype.matchAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.matchall\n$({ target: 'String', proto: true, forced: WORKS_WITH_NON_GLOBAL_REGEX }, {\n  matchAll: function matchAll(regexp) {\n    var O = requireObjectCoercible(this);\n    var flags, S, matcher, rx;\n    if (regexp != null) {\n      if (isRegExp(regexp)) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(regexp)));\n        if (!~stringIndexOf(flags, 'g')) throw $TypeError('`.matchAll` does not allow non-global regexes');\n      }\n      if (WORKS_WITH_NON_GLOBAL_REGEX) return un$MatchAll(O, regexp);\n      matcher = getMethod(regexp, MATCH_ALL);\n      if (matcher === undefined && IS_PURE && classof(regexp) == 'RegExp') matcher = $matchAll;\n      if (matcher) return call(matcher, regexp, O);\n    } else if (WORKS_WITH_NON_GLOBAL_REGEX) return un$MatchAll(O, regexp);\n    S = toString(O);\n    rx = new RegExp(regexp, 'g');\n    return IS_PURE ? call($matchAll, rx, S) : rx[MATCH_ALL](S);\n  }\n});\n\nIS_PURE || MATCH_ALL in RegExpPrototype || defineBuiltIn(RegExpPrototype, MATCH_ALL, $matchAll);\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nmodule.exports = maxBy;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n"],"names":["withRouter","addErrorMessage","addLoadingMessage","addSuccessMessage","navigateTo","Access","GuideAnchor","Button","Link","IconSiren","t","tct","useApi","AlertWizardRuleTemplates","DEFAULT_WIZARD_TEMPLATE","CreateAlertFromViewButton","projects","eventView","organization","referrer","onClick","alertType","disableMetricDataset","buttonProps","project","find","p","id","queryParams","generateQueryStringObject","query","includes","slug","replace","alertTemplate","to","pathname","createFromDiscover","aggregate","yAxis","handleClick","CreateAlertButton","projectSlug","iconProps","router","hideIcon","showPermissionGuide","alertOption","onEnter","api","createAlertUrl","providedProj","alertsBaseUrl","alertsArgs","filter","item","length","join","handleClickWithoutProject","event","preventDefault","enableAlertsMemberWrite","settingsEndpoint","requestPromise","method","data","alertsMemberWrite","err","permissionTooltipText","settingsLink","renderButton","hasAccess","undefined","isHoverable","position","overlayStyle","maxWidth","children","showGuide","isOrgAdmin","useCallback","useEffect","useRef","useState","debounce","Feature","withApi","withOrganization","ExportQueryType","DataExport","disabled","payload","icon","unmountedRef","inProgress","setInProgress","queryType","queryInfo","current","handleDataExport","includeAllArgs","query_type","query_info","then","_data","_","response","status","catch","message","responseJSON","detail","spanTargetHash","defined","getTransactionDetailsUrl","orgSlug","eventSlug","transaction","spanId","locationQuery","target","hash","useMemo","usePopper","useButton","useOverlay","useAriaOverlay","useOverlayTrigger","mergeProps","useOverlayTriggerState","isOpen","defaultOpen","onOpenChange","type","offset","isDismissable","shouldCloseOnBlur","isKeyboardDismissDisabled","shouldCloseOnInteractOutside","triggerElement","setTriggerElement","overlayElement","setOverlayElement","arrowElement","setArrowElement","triggerRef","overlayRef","openState","onPress","open","triggerProps","overlayProps","overlayTriggerProps","onClose","close","modifiers","name","enabled","options","gpuAcceleration","element","padding","altAxis","styles","popperStyles","state","popperState","placement","ref","style","popper","arrowProps","arrow","TagStore","useLegacyStore","useTags","tags","AlertRuleThresholdType","AlertRuleTriggerType","AlertRuleComparisonType","Dataset","EventTypes","Datasource","SessionsAggregate","TimePeriod","TimeWindow","ActionType","ActionLabel","EMAIL","SLACK","PAGERDUTY","MSTEAMS","SENTRY_APP","TargetType","TargetLabel","USER","TEAM","MEPAlertsQueryType","MEPAlertsDataset","DatasetMEPAlertQueryTypes","ERRORS","ERROR","TRANSACTIONS","PERFORMANCE","GENERIC_METRICS","METRICS","CRASH_RATE","SESSIONS","AlertWizardAlertNames","issues","num_errors","users_experiencing_errors","throughput","trans_duration","apdex","failure_rate","lcp","fid","cls","custom","crash_free_sessions","crash_free_users","getAlertWizardCategories","org","categoryHeading","features","dataset","eventTypes","TRANSACTION","CRASH_FREE_SESSIONS","SESSION","CRASH_FREE_USERS","hidePrimarySelectorSet","Set","hideParameterSelectorSet","getMEPAlertsDataset","newAlert","DISCOVER","METRICS_ENHANCED","Breadcrumbs","getDiscoverLandingUrl","DiscoverBreadcrumb","location","crumbs","discoverTarget","generateBlankQueryStringObject","getPageFiltersQuery","push","label","isValid","getResultsViewUrlTarget","OptionSelector","ChartControls","InlineContainer","SectionHeading","SectionValue","TOP_EVENT_MODES","ChartFooter","total","yAxisValue","yAxisOptions","onAxisChange","displayMode","displayOptions","onDisplayChange","onTopEventsChange","topEvents","elements","toLocaleString","topEventOptions","i","value","toString","browserHistory","EditableText","Title","EventView","handleUpdateQueryName","NAME_DEFAULT","EventInputName","savedQuery","handleChange","nextQueryName","nextEventView","fromSavedQuery","_updatedQuery","renamedEventView","clone","StyledTitle","Component","Sentry","isEqual","omit","updateSavedQueryVisit","fetchTotalCount","fetchProjectsCount","loadOrganizationTags","Client","Alert","AsyncComponent","Confirm","DatePageFilter","EnvironmentPageFilter","SearchBar","Layout","ExternalLink","NoProjectMessage","PageFilterBar","PageFiltersContainer","normalizeDateTimeParams","ProjectPageFilter","SentryDocumentTitle","MAX_QUERY_LENGTH","PageContent","space","generateQueryWithTag","trackAnalyticsEvent","isAPIPayloadSimilar","formatTagKey","generateAggregateFields","DisplayModes","MULTI_Y_AXIS_SUPPORTED_DISPLAY_MODES","localStorage","decodeList","decodeScalar","withPageFilters","addRoutePerformanceContext","DEFAULT_EVENT_VIEW","ResultsChart","ResultsHeader","Table","Tags","generateTitle","SHOW_TAGS_STORAGE_KEY","SHOW_UNPARAM_BANNER","readShowTagsState","getItem","getYAxis","Results","fromSavedQueryOrLocation","props","error","errorCode","totalValues","showTags","needConfirmation","confirmedQuery","currentQuery","getEventsAPIPayload","duration","getDays","projectLength","results","myProjects","allProjects","setState","openConfirm","eventKey","eventName","organization_id","parseInt","newValue","setItem","searchQueryParams","isDisplayMultiYAxisSupported","display","newQuery","DAILYTOP5","DAILY","DEFAULT","handleConfirmed","y_axis_value","key","url","getDerivedStateFromProps","nextProps","prevState","loading","componentDidMount","selection","fromMetric","showMetricsAlert","showUnparameterizedBanner","tagsApi","checkEventView","canLoadEvents","componentDidUpdate","prevProps","prevQuery","yAxisArray","prevYAxisArray","hasChartParametersChanged","clear","datetime","prevEventView","prevDisplay","getDisplayMode","totals","captureException","fromNewQueryWithLocation","getDocumentTitle","renderTagsTable","generateTagUrl","renderError","renderMetricsFallbackBanner","link","render","fields","hasAggregateField","title","handleSearch","handleYAxisChange","handleDisplayChange","handleTopEventsChange","setError","handleChangeShowTags","handleCancelled","dayLimit","projectLimit","setOpenFunction","StyledPageContent","StyledPageFilterBar","StyledSearchBar","Top","Main","SavedQueryAPI","getEndpoints","renderLoading","renderBody","ResultsContainer","Fragment","BarChart","EventsChart","getInterval","getPreviousSeriesName","WorldMapChart","Panel","Placeholder","valueIsEqual","getUtcToLocalDateObject","isEquation","stripEquationPrefix","TOP_N","getDynamicText","shouldComponentUpdate","restProps","restNextProps","isEqualTo","hasPerformanceChartInterpolation","globalSelection","getPageFilters","start","end","utc","apiPayload","isTopEvents","TOP5","isPeriod","isDaily","isPrevious","PREVIOUS","chartComponent","WORLDMAP","BAR","interval","period","seriesLabels","map","disableableSeries","environments","field","sort","fixed","ResultsChartContainer","getYAxisOptions","componentWillReceiveProps","nextYAxisOptions","hasQueryFeature","getDisplayOptions","opt","tooltip","StyledPanel","theme","breakpoints","large","NoChartContainer","height","gray300","fontSizeExtraLarge","fetchSavedQuery","TimeSince","SavedQueryButtonGroup","fetchData","renderAuthor","createdBy","lastEdit","email","dateUpdated","Subtitle","fontSizeLarge","StyledHeaderContent","HeaderContent","PureComponent","useTheme","FocusScope","AnimatePresence","FeatureDisabled","Banner","ButtonBar","Hovercard","InputControl","Overlay","PositionWrapper","IconDelete","IconStar","withProjects","handleAddQueryToDashboard","handleCreateQuery","handleDeleteQuery","handleUpdateQuery","SaveAsDropdown","queryName","onChangeInput","modifiedHandleCreateQuery","zIndex","dropdown","isNewQuery","isEditingQuery","stopPropagation","view","dismiss","updateCallback","getResultsViewShortUrlTarget","window","href","savedQueryLoading","savedEventView","isEqualQuery","isEqualYAxis","renderButtonSaveAs","renderButtonSave","renderButtonDelete","renderButtonCreateAlert","handleCreateAlertSuccess","renderButtonAddToDashboard","renderDisabled","renderQueryButton","renderFunc","hasFeature","capturedElements","Element","nodeName","ResponsiveButtonBar","medium","StyledOverlay","SaveAsButton","SaveAsInput","IconUpdate","yellow300","css","DISCOVER2_DOCS_URL","generateFieldOptions","ColumnEditCollection","ColumnEditModal","Header","Body","Footer","measurementKeys","spanOperationBreakdownKeys","onApply","closeModal","tagKeys","Object","values","columns","setColumns","handleApply","fieldOptions","functionLink","fieldTagLink","Instruction","modalCss","Pagination","metric","SPAN_OP_BREAKDOWN_FIELDS","Measurements","parseLinkHeader","TableView","isLoading","tableFetchID","pageLinks","tableData","thisAPIPayload","otherAPIPayload","shouldUseEvents","Symbol","mark","resp","measure","nonFieldsMeta","meta","getResponseHeader","search_type","search_source","shouldRefetchData","isFirstPage","previous","measurements","Container","IconDownload","IconStack","IconTag","downloadAsCsv","handleDownloadAsCsv","getColumns","renderDownloadButton","canEdit","renderBrowserExportButton","renderAsyncExportButton","Discover","renderEditButton","onEdit","renderSummaryButton","onChangeShowTags","FeatureWrapper","noEditMessage","editFeatures","HeaderActions","openModal","GridEditable","COL_WIDTH_MINIMUM","COL_WIDTH_UNDEFINED","SortLink","Tooltip","Truncate","isFieldSortable","pickRelevantLocationQueryStrings","getFieldRenderer","fieldAlignment","getEquationAliasIndex","isEquationAlias","eventDetailsRouteWithEventView","generateEventSlug","MutableSearch","getTraceDetailsUrl","transactionSummaryRouteWithQuery","getExpandedResults","pushEventViewToLocation","CellAction","Actions","updateQuery","TableActions","TopResultsIndicator","columnIndex","nextColumn","newWidth","width","Number","withResizedColumn","extraQuery","isHeader","dataRow","rowIndex","hasAggregates","hasIdField","nextView","Error","fieldRenderer","column","tableMeta","align","generateSortLink","sortOnField","queryStringObject","currentSort","sortForField","canSort","titleText","getEquations","kind","columnKey","String","count","Math","min","cell","dateSelection","normalizeDateSelection","trace","fieldName","handleCellAction","hasBreakdownFeature","modalProps","col","handleUpdateColumns","backdrop","action","maybeProject","projectID","next","RELEASE","encodeURIComponent","DRILLDOWN","withNewColumn","function","formatString","withColumns","resultsViewUrlTarget","previousYAxis","handleEditColumns","columnOrder","columnSortBy","getSorts","prependColumnWidths","renderHeadCell","_renderGridHeaderCell","renderBodyCell","_renderGridBodyCell","onResizeColumn","_resizeColumn","renderPrependColumns","_renderPrependColumns","renderHeaderButtons","PrependHeader","subText","StyledTooltip","StyledLink","StyledIcon","fetchTagFacets","ErrorPanel","EmptyStateWarning","TagDistributionMeter","IconWarning","getFacetsAPIPayload","forceFetchData","tag","renderPlaceholders","renderTag","generateUrl","segments","topValues","segment","maxTotalValues","max","handleTagClick","StyledEmptyStateWarning","StyledPlaceholder","borderRadius","StyledPlaceholderTitle","TransactionFilterOptions","generateTransactionSummaryRoute","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","unselectedSeries","trendFunction","trendColumn","showTransactions","additionalQuery","searchFilter","environment","statsPeriod","generateTraceLink","tableRow","_query","traceId","generateTransactionLink","transactionName","SidebarSpacer","TrendChangeType","TrendFunctionField","TrendColumnField","ASAP","moment","generateFieldAsString","platformToPerformanceType","PROJECT_PERFORMANCE_TYPE","DEFAULT_TRENDS_STATS_PERIOD","DEFAULT_MAX_DURATION","TRENDS_FUNCTIONS","P50","alias","legendLabel","P75","P95","P99","AVG","TRENDS_PARAMETERS","DURATION","LCP","FCP","FID","CLS","SPANS_HTTP","SPANS_DB","SPANS_BROWSER","SPANS_RESOURCE","trendToColor","IMPROVED","lighter","green200","default","green300","REGRESSION","red200","red300","trendSelectedQueryKeys","trendUnselectedSeries","trendCursorNames","resetCursors","cursors","forEach","cursor","getCurrentTrendFunction","_trendFunctionField","trendFunctionField","getDefaultTrendParameter","projectIds","performanceType","trendParameter","performanceTypeToTrendParameterLabel","getCurrentTrendParameter","trendParameterLabel","defaultTrendParameter","FRONTEND","ANY","BACKEND","FRONTEND_OTHER","generateTrendFunctionAsString","transformDeltaSpread","from","fromSeconds","toSeconds","showDigits","getTrendProjectId","trend","transactionProject","modifyTrendView","trendView","trendsType","isProjectOnly","transactionField","trendSort","trendType","getLimitTransactionItems","getQueryInterval","sorts","modifyTrendsViewDefaultPeriod","hasStartAndEnd","intervalFromQueryParam","datetimeSelection","intervalFromSmoothing","transformValueDelta","absoluteValue","abs","changeLabel","seconds","fixedDigits","normalizeTrends","received_at","row","getSelectedQueryKey","trendChangeType","getUnselectedSeries","movingAverage","index","size","slice","a","reduce","b","limitQuery","hasFilter","addFilterValues","smoothTrend","resolution","replaceSeriesName","seriesName","replaceSmoothedSeriesName","transformEventStatsSmoothed","minValue","MAX_SAFE_INTEGER","maxValue","smoothedResults","currentData","resultData","smoothed","point","y","x","isNaN","rounded","round","lineStyle","color","ALL_ACCESS_PROJECTS","backend","frontend","mobile","statsPeriodToDays","TRACING_FIELDS","getDuration","getCurrentSentryReactTransaction","QUERY_KEYS","UNPARAMETERIZED_TRANSACTION","UNPARAMETRIZED_TRANSACTION","EXCLUDE_METRICS_UNPARAM_CONDITIONS","createUnnamedTransactionsDiscoverTarget","version","discoverEventView","withSorts","FRONTEND_PLATFORMS","BACKEND_PLATFORMS","platform","MOBILE_PLATFORMS","selectedProjects","some","every","MOBILE","platformAndConditionsToPerformanceType","conditions","ops","getFilterValues","op","isSummaryViewFrontendPageLoad","isSummaryViewFrontend","getPerformanceLandingUrl","getPerformanceTrendsUrl","getTransactionSearchQuery","trim","handleTrendsClick","projectPlatforms","view_name","project_platforms","trendsTargetRoute","initialConditions","modifiedConditions","setFilterValues","removeTracingKeysFromSearch","currentFilter","excludeTagKeys","getFilterKeys","tagKey","searchKey","startsWith","substr","match","has","days","oneDay","floor","setTag","groupedPeriod","getTransactionName","getPerformanceDuration","milliseconds","areMultipleProjectsSelected","getSelectedProjectPlatformsArray","projectQuery","selectedProjectIdSet","Array","isArray","selectedProjectPlatforms","acc","getSelectedProjectPlatforms"],"sourceRoot":""}