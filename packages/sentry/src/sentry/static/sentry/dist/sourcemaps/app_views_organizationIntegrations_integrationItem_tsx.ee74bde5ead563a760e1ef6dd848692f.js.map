{"version":3,"file":"chunks/app_views_organizationIntegrations_integrationItem_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AAEA;;;AASe,MAAMG,eAAN,SAA8BH,4CAA9B,CAA+C;EAK5DI,MAAM,GAAG;IACP,MAAM;MAACC,WAAD;MAAcC;IAAd,IAAyB,KAAKC,KAApC;IACA,OACE,iEAAC,IAAD;MAAA,WACE;QAAA,UACE,gEAAC,6FAAD;UAAiB,IAAI,EAAED,OAAO,GAAG,EAAH,GAAQ,EAAtC;UAA0C,WAAW,EAAED;QAAvD;MADF,EADF,EAIE,iEAAC,MAAD;QAAQ,OAAO,EAAEC,OAAjB;QAAA,WACE,gEAAC,eAAD;UAAiB,gBAAa,kBAA9B;UAAA,UACGD,WAAW,CAACG;QADf,EADF,EAIE,gEAAC,UAAD;UAAY,OAAO,EAAEF,OAArB;UAAA,UAA+BD,WAAW,CAACI;QAA3C,EAJF;MAAA,EAJF;IAAA,EADF;EAaD;;AApB2D;AAAzCN;;kFAAAA,iCACiB;EAClCG,OAAO,EAAE;AADyB;;AAsBtC,MAAMI,IAAI,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH;EAAA;EAAA;AAAA,MAAV;;AAKA,MAAMC,MAAM,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,wCAGRC,CAAC,IAAKA,CAAC,CAACN,OAAF,GAAY,sBAAZ,GAAqC,EAHnC,sBAIQM,CAAC,IAAKA,CAAC,CAACN,OAAF,GAAY,KAAZ,GAAoB,QAJlC,oBAKML,+DAAK,CAAC,CAAD,CALX,4DAAZ;;AAUA,MAAMY,eAAe,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,eACND,CAAC,IAAIA,CAAC,CAACE,KAAF,CAAQC,cADP,0CAArB,EAKA;AACA;AACA;;;AACA,MAAMC,UAAU,GAAG,8EAAO,KAAP;EAAA;AAAA,MAAH,WACLJ,CAAC,IAAIA,CAAC,CAACE,KAAF,CAAQG,OADR,mBAECL,CAAC,IAAKA,CAAC,CAACN,OAAF,GAAYL,+DAAK,CAAC,CAAD,CAAjB,GAAuB,SAF9B,kBAGAW,CAAC,IAAK,CAACA,CAAC,CAACN,OAAH,GAAa,CAAb,GAAiB,SAHvB,iBAIDM,CAAC,IAAIA,CAAC,CAACE,KAAF,CAAQI,aAJZ,gEAAhB","sources":["webpack:///./app/views/organizationIntegrations/integrationItem.tsx"],"sourcesContent":["import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Integration} from 'sentry/types';\nimport IntegrationIcon from 'sentry/views/organizationIntegrations/integrationIcon';\n\ntype DefaultProps = {\n  compact: boolean;\n};\n\ntype Props = DefaultProps & {\n  integration: Integration;\n};\nexport default class IntegrationItem extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    compact: false,\n  };\n\n  render() {\n    const {integration, compact} = this.props;\n    return (\n      <Flex>\n        <div>\n          <IntegrationIcon size={compact ? 22 : 32} integration={integration} />\n        </div>\n        <Labels compact={compact}>\n          <IntegrationName data-test-id=\"integration-name\">\n            {integration.name}\n          </IntegrationName>\n          <DomainName compact={compact}>{integration.domainName}</DomainName>\n        </Labels>\n      </Flex>\n    );\n  }\n}\n\nconst Flex = styled('div')`\n  display: flex;\n  align-items: center;\n`;\ntype StyledProps = Pick<Props, 'compact'>;\nconst Labels = styled('div')<StyledProps>`\n  box-sizing: border-box;\n  display: flex;\n  ${p => (p.compact ? 'align-items: center;' : '')};\n  flex-direction: ${p => (p.compact ? 'row' : 'column')};\n  padding-left: ${space(1)};\n  min-width: 0;\n  justify-content: center;\n`;\n\nconst IntegrationName = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: bold;\n`;\n\n// Not using the overflowEllipsis style import here\n// as it sets width 100% which causes layout issues in the\n// integration list.\nconst DomainName = styled('div')<StyledProps>`\n  color: ${p => p.theme.subText};\n  margin-left: ${p => (p.compact ? space(1) : 'inherit')};\n  margin-top: ${p => (!p.compact ? 0 : 'inherit')};\n  font-size: ${p => p.theme.fontSizeSmall};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n"],"names":["Component","space","IntegrationIcon","IntegrationItem","render","integration","compact","props","name","domainName","Flex","Labels","p","IntegrationName","theme","fontSizeMedium","DomainName","subText","fontSizeSmall"],"sourceRoot":""}