{"version":3,"file":"chunks/app_views_settings_organizationRepositories_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/organizationRepositories/index.tsx","webpack:///./app/views/settings/organizationRepositories/organizationRepositories.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport Pagination from 'sentry/components/pagination';\nimport {t} from 'sentry/locale';\nimport {Repository} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport OrganizationRepositories from './organizationRepositories';\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & AsyncView['props'];\n\ntype State = AsyncView['state'] & {\n  itemList: Repository[] | null;\n};\n\nexport default class OrganizationRepositoriesContainer extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n    return [['itemList', `/organizations/${orgId}/repos/`, {query: {status: ''}}]];\n  }\n\n  // Callback used by child component to signal state change\n  onRepositoryChange = (data: Pick<Repository, 'id' | 'status'>) => {\n    const itemList = this.state.itemList;\n    itemList?.forEach(item => {\n      if (item.id === data.id) {\n        item.status = data.status;\n      }\n    });\n    this.setState({itemList});\n  };\n\n  getTitle() {\n    const {orgId} = this.props.params;\n    return routeTitleGen(t('Repositories'), orgId, false);\n  }\n\n  renderBody() {\n    const {itemList, itemListPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <OrganizationRepositories\n          {...this.props}\n          itemList={itemList!}\n          onRepositoryChange={this.onRepositoryChange}\n        />\n        {itemListPageLinks && (\n          <Pagination pageLinks={itemListPageLinks} {...this.props} />\n        )}\n      </Fragment>\n    );\n  }\n}\n","import {RouteComponentProps} from 'react-router';\n\nimport AlertLink from 'sentry/components/alertLink';\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport RepositoryRow from 'sentry/components/repositoryRow';\nimport {IconCommit} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Repository, RepositoryStatus} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  itemList: Repository[];\n  onRepositoryChange: (data: {id: string; status: RepositoryStatus}) => void;\n};\n\nfunction OrganizationRepositories({itemList, onRepositoryChange, params}: Props) {\n  const api = useApi();\n\n  const {orgId} = params;\n  const hasItemList = itemList && itemList.length > 0;\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('Repositories')} />\n      <AlertLink to={`/settings/${orgId}/integrations/`}>\n        {t(\n          'Want to add a repository to start tracking commits? Install or configure your version control integration here.'\n        )}\n      </AlertLink>\n      {!hasItemList && (\n        <div className=\"m-b-2\">\n          <TextBlock>\n            {t(\n              'Connecting a repository allows Sentry to capture commit data via webhooks. ' +\n                'This enables features like suggested assignees and resolving issues via commit message. ' +\n                \"Once you've connected a repository, you can associate commits with releases via the API.\"\n            )}\n            &nbsp;\n            {tct('See our [link:documentation] for more details.', {\n              link: <ExternalLink href=\"https://docs.sentry.io/learn/releases/\" />,\n            })}\n          </TextBlock>\n        </div>\n      )}\n\n      {hasItemList ? (\n        <Panel>\n          <PanelHeader>{t('Added Repositories')}</PanelHeader>\n          <PanelBody>\n            <div>\n              {itemList.map(repo => (\n                <RepositoryRow\n                  api={api}\n                  key={repo.id}\n                  repository={repo}\n                  showProvider\n                  orgId={orgId}\n                  onRepositoryChange={onRepositoryChange}\n                />\n              ))}\n            </div>\n          </PanelBody>\n        </Panel>\n      ) : (\n        <Panel>\n          <EmptyMessage\n            icon={<IconCommit size=\"xl\" />}\n            title={t('Sentry is better with commit data')}\n            description={t(\n              'Adding one or more repositories will enable enhanced releases and the ability to resolve Sentry Issues via git message.'\n            )}\n            action={\n              <Button external href=\"https://docs.sentry.io/learn/releases/\">\n                {t('Learn more')}\n              </Button>\n            }\n          />\n        </Panel>\n      )}\n    </div>\n  );\n}\n\nexport default OrganizationRepositories;\n"],"names":["routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","Fragment","Pagination","t","AsyncView","OrganizationRepositories","OrganizationRepositoriesContainer","data","itemList","state","forEach","item","id","status","setState","getEndpoints","orgId","props","params","query","getTitle","renderBody","itemListPageLinks","onRepositoryChange","AlertLink","Button","ExternalLink","Panel","PanelBody","PanelHeader","RepositoryRow","IconCommit","tct","useApi","EmptyMessage","SettingsPageHeader","TextBlock","api","hasItemList","length","link","map","repo"],"sourceRoot":""}