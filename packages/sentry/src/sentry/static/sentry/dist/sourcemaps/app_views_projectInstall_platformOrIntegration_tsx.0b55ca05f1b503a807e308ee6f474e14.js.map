{"version":3,"file":"chunks/app_views_projectInstall_platformOrIntegration_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/onboarding/components/firstEventFooter.tsx","webpack:///./app/views/onboarding/components/firstEventIndicator.tsx","webpack:///./app/views/onboarding/components/integrations/addInstallationInstructions.tsx","webpack:///./app/views/onboarding/components/integrations/postInstallCodeSnippet.tsx","webpack:///./app/views/onboarding/createSampleEventButton.tsx","webpack:///./app/views/organizationIntegrations/addIntegration.tsx","webpack:///./app/views/organizationIntegrations/addIntegrationButton.tsx","webpack:///./app/views/projectInstall/components/platformHeaderButtonBar.tsx","webpack:///./app/views/projectInstall/platform.tsx","webpack:///./app/views/projectInstall/platformIntegrationSetup.tsx","webpack:///./app/views/projectInstall/platformOrIntegration.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport CreateSampleEventButton from 'sentry/views/onboarding/createSampleEventButton';\n\nimport FirstEventIndicator from './firstEventIndicator';\n\ninterface FirstEventFooterProps {\n  organization: Organization;\n  project: Project;\n  docsLink?: string;\n  docsOnClick?: () => void;\n}\n\nexport default function FirstEventFooter({\n  organization,\n  project,\n  docsLink,\n  docsOnClick,\n}: FirstEventFooterProps) {\n  return (\n    <Fragment>\n      <FirstEventIndicator\n        organization={organization}\n        project={project}\n        eventType=\"error\"\n      >\n        {({indicator, firstEventButton}) => (\n          <CTAFooter>\n            <Actions gap={2}>\n              {firstEventButton}\n              <Button external href={docsLink} onClick={docsOnClick}>\n                {t('View full documentation')}\n              </Button>\n            </Actions>\n            {indicator}\n          </CTAFooter>\n        )}\n      </FirstEventIndicator>\n      <CTASecondary>\n        {tct(\n          'Just want to poke around before getting too cozy with the SDK? [sample:View a sample event for this SDK] or [skip:finish setup later].',\n          {\n            sample: (\n              <CreateSampleEventButton\n                aria-label=\"View a sample event\"\n                project={project}\n                source=\"onboarding\"\n                priority=\"link\"\n              />\n            ),\n            skip: (\n              <Button priority=\"link\" href=\"/\" aria-label={t('Finish setup later')} />\n            ),\n          }\n        )}\n      </CTASecondary>\n    </Fragment>\n  );\n}\n\nconst CTAFooter = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  margin: ${space(2)} 0;\n  margin-top: ${space(4)};\n`;\n\nconst CTASecondary = styled('p')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0;\n  max-width: 500px;\n`;\n\nconst Actions = styled(ButtonBar)`\n  display: inline-grid;\n  justify-self: start;\n`;\n","import styled from '@emotion/styled';\nimport {AnimatePresence, HTMLMotionProps, motion, Variants} from 'framer-motion';\n\nimport Button from 'sentry/components/button';\nimport {IconCheckmark} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport pulsingIndicatorStyles from 'sentry/styles/pulsingIndicator';\nimport space from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventWaiter, {EventWaiterProps} from 'sentry/utils/eventWaiter';\nimport testableTransition from 'sentry/utils/testableTransition';\n\ntype RenderProps = {\n  firstEventButton: React.ReactNode;\n  indicator: React.ReactNode;\n};\n\ninterface FirstEventIndicatorProps extends Omit<EventWaiterProps, 'children' | 'api'> {\n  children: (props: RenderProps) => React.ReactNode;\n}\n\nconst FirstEventIndicator = ({children, ...props}: FirstEventIndicatorProps) => (\n  <EventWaiter {...props}>\n    {({firstIssue}) =>\n      children({\n        indicator: <Indicator firstIssue={firstIssue} {...props} />,\n        firstEventButton: (\n          <Button\n            title={t(\"You'll need to send your first error to continue\")}\n            tooltipProps={{disabled: !!firstIssue}}\n            disabled={!firstIssue}\n            priority=\"primary\"\n            onClick={() =>\n              trackAdvancedAnalyticsEvent('growth.onboarding_take_to_error', {\n                organization: props.organization,\n              })\n            }\n            to={`/organizations/${props.organization.slug}/issues/${\n              firstIssue !== true && firstIssue !== null ? `${firstIssue.id}/` : ''\n            }`}\n          >\n            {t('Take me to my error')}\n          </Button>\n        ),\n      })\n    }\n  </EventWaiter>\n);\n\ninterface IndicatorProps extends Omit<EventWaiterProps, 'children' | 'api'> {\n  firstIssue: Group | null | true;\n}\n\nconst Indicator = ({firstIssue}: IndicatorProps) => (\n  <Container>\n    <AnimatePresence>\n      {!firstIssue ? <Waiting key=\"waiting\" /> : <Success key=\"received\" />}\n    </AnimatePresence>\n  </Container>\n);\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: right;\n`;\n\nconst StatusWrapper = styled(motion.div)`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  gap: ${space(1)};\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  /* Keep the wrapper in the parent grids first cell for transitions */\n  grid-column: 1;\n  grid-row: 1;\n`;\n\nStatusWrapper.defaultProps = {\n  initial: 'initial',\n  animate: 'animate',\n  exit: 'exit',\n  variants: {\n    initial: {opacity: 0, y: -10},\n    animate: {\n      opacity: 1,\n      y: 0,\n      transition: testableTransition({when: 'beforeChildren', staggerChildren: 0.35}),\n    },\n    exit: {opacity: 0, y: 10},\n  },\n};\n\nconst Waiting = (props: HTMLMotionProps<'div'>) => (\n  <StatusWrapper {...props}>\n    <AnimatedText>{t('Waiting to receive first event to continue')}</AnimatedText>\n    <WaitingIndicator />\n  </StatusWrapper>\n);\n\nconst Success = (props: HTMLMotionProps<'div'>) => (\n  <StatusWrapper {...props}>\n    <AnimatedText>{t('Event was received!')}</AnimatedText>\n    <ReceivedIndicator />\n  </StatusWrapper>\n);\n\nconst indicatorAnimation: Variants = {\n  initial: {opacity: 0, y: -10},\n  animate: {opacity: 1, y: 0},\n  exit: {opacity: 0, y: 10},\n};\n\nconst AnimatedText = styled(motion.div)``;\n\nAnimatedText.defaultProps = {\n  variants: indicatorAnimation,\n  transition: testableTransition(),\n};\n\nconst WaitingIndicator = styled(motion.div)`\n  margin: 0 6px;\n  ${pulsingIndicatorStyles};\n`;\n\nWaitingIndicator.defaultProps = {\n  variants: indicatorAnimation,\n  transition: testableTransition(),\n};\n\nconst ReceivedIndicator = styled(IconCheckmark)`\n  color: #fff;\n  background: ${p => p.theme.green300};\n  border-radius: 50%;\n  padding: 3px;\n  margin: 0 ${space(0.25)};\n`;\n\nReceivedIndicator.defaultProps = {\n  size: 'sm',\n};\n\nexport {Indicator};\n\nexport default FirstEventIndicator;\n","import {Fragment} from 'react';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\n\n// TODO: Make dyanmic for other platforms/integrations\nexport default function AddInstallationInstructions() {\n  return (\n    <Fragment>\n      <p>\n        {tct(\n          'The automated AWS Lambda setup will instrument your Lambda functions with Sentry error and performance monitoring without any code changes. We use CloudFormation Stack ([learnMore]) to create the Sentry role which gives us access to your AWS account.',\n          {\n            learnMore: (\n              <ExternalLink href=\"https://aws.amazon.com/cloudformation/\">\n                {t('Learn more about CloudFormation')}\n              </ExternalLink>\n            ),\n          }\n        )}\n      </p>\n      <p>\n        {tct(\n          'Just press the [addInstallation] button below and complete the steps in the popup that opens.',\n          {addInstallation: <strong>{t('Add Installation')}</strong>}\n        )}\n      </p>\n      <p>\n        {tct(\n          'If you don’t want to add CloudFormation stack to your AWS environment, press the [manualSetup] button instead.',\n          {manualSetup: <strong>{t('Manual Setup')}</strong>}\n        )}\n      </p>\n    </Fragment>\n  );\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {PlatformKey} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\nimport {IntegrationProvider} from 'sentry/types';\n\ntype Props = {\n  provider: IntegrationProvider;\n  isOnboarding?: boolean;\n  platform?: PlatformKey;\n};\n\nexport default function PostInstallCodeSnippet({\n  provider,\n  platform,\n  isOnboarding,\n}: Props) {\n  // currently supporting both Python and Node\n  const token_punctuation: string = platform === 'python-awslambda' ? '()' : '();';\n  return (\n    <div>\n      <p>\n        {t(\n          \"Congrats, you just installed the %s integration! Now that it's is installed, the next time you trigger an error it will go to your Sentry.\",\n          provider.name\n        )}\n      </p>\n      <p>\n        {t(\n          'This snippet includes an intentional error, so you can test that everything is working as soon as you set it up:'\n        )}\n      </p>\n      <div>\n        <CodeWrapper>\n          <code>\n            <TokenFunction>myUndefinedFunction</TokenFunction>\n            <TokenPunctuation>{token_punctuation}</TokenPunctuation>)\n          </code>\n        </CodeWrapper>\n      </div>\n      {isOnboarding && (\n        <Fragment>\n          <p>\n            {t(\n              \"If you're new to Sentry, use the email alert to access your account and complete a product tour.\"\n            )}\n          </p>\n          <p>\n            {t(\n              \"If you're an existing user and have disabled alerts, you won't receive this email.\"\n            )}\n          </p>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nconst CodeWrapper = styled('pre')`\n  padding: 1em;\n  overflow: auto;\n  background: #251f3d;\n  font-size: 15px;\n`;\n\nconst TokenFunction = styled('span')`\n  color: #7cc5c4;\n`;\n\nconst TokenPunctuation = styled('span')`\n  color: #b3acc1;\n`;\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype CreateSampleEventButtonProps = {\n  api: Client;\n  organization: Organization;\n  source: string;\n  project?: Project;\n} & ButtonProps;\n\ntype State = {\n  creating: boolean;\n};\n\nconst EVENT_POLL_RETRIES = 30;\nconst EVENT_POLL_INTERVAL = 1000;\n\nasync function latestEventAvailable(\n  api: Client,\n  groupID: string\n): Promise<{eventCreated: boolean; retries: number}> {\n  let retries = 0;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (retries > EVENT_POLL_RETRIES) {\n      return {eventCreated: false, retries: retries - 1};\n    }\n\n    await new Promise(resolve => window.setTimeout(resolve, EVENT_POLL_INTERVAL));\n\n    try {\n      await api.requestPromise(`/issues/${groupID}/events/latest/`);\n      return {eventCreated: true, retries};\n    } catch {\n      ++retries;\n    }\n  }\n}\n\nclass CreateSampleEventButton extends Component<CreateSampleEventButtonProps, State> {\n  state: State = {\n    creating: false,\n  };\n\n  componentDidMount() {\n    const {organization, project, source} = this.props;\n\n    if (!project) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('sample_event.button_viewed', {\n      organization,\n      project_id: project.id,\n      source,\n    });\n  }\n\n  recordAnalytics({eventCreated, retries, duration}) {\n    const {organization, project, source} = this.props;\n\n    if (!project) {\n      return;\n    }\n\n    const eventKey = `sample_event.${eventCreated ? 'created' : 'failed'}` as const;\n\n    trackAdvancedAnalyticsEvent(eventKey, {\n      organization,\n      project_id: project.id,\n      platform: project.platform || '',\n      interval: EVENT_POLL_INTERVAL,\n      retries,\n      duration,\n      source,\n    });\n  }\n\n  createSampleGroup = async () => {\n    // TODO(dena): swap out for action creator\n    const {api, organization, project} = this.props;\n    let eventData;\n\n    if (!project) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('growth.onboarding_view_sample_event', {\n      platform: project.platform,\n      organization,\n    });\n\n    addLoadingMessage(t('Processing sample event...'), {\n      duration: EVENT_POLL_RETRIES * EVENT_POLL_INTERVAL,\n    });\n    this.setState({creating: true});\n\n    try {\n      const url = `/projects/${organization.slug}/${project.slug}/create-sample/`;\n      eventData = await api.requestPromise(url, {method: 'POST'});\n    } catch (error) {\n      Sentry.withScope(scope => {\n        scope.setExtra('error', error);\n        Sentry.captureException(new Error('Failed to create sample event'));\n      });\n      this.setState({creating: false});\n      clearIndicators();\n      addErrorMessage(t('Failed to create a new sample event'));\n      return;\n    }\n\n    // Wait for the event to be fully processed and available on the group\n    // before redirecting.\n    const t0 = performance.now();\n    const {eventCreated, retries} = await latestEventAvailable(api, eventData.groupID);\n    const t1 = performance.now();\n\n    clearIndicators();\n    this.setState({creating: false});\n\n    const duration = Math.ceil(t1 - t0);\n    this.recordAnalytics({eventCreated, retries, duration});\n\n    if (!eventCreated) {\n      addErrorMessage(t('Failed to load sample event'));\n\n      Sentry.withScope(scope => {\n        scope.setTag('groupID', eventData.groupID);\n        scope.setTag('platform', project.platform || '');\n        scope.setTag('interval', EVENT_POLL_INTERVAL.toString());\n        scope.setTag('retries', retries.toString());\n        scope.setTag('duration', duration.toString());\n\n        scope.setLevel('warning');\n        Sentry.captureMessage('Failed to load sample event');\n      });\n      return;\n    }\n\n    browserHistory.push(\n      `/organizations/${organization.slug}/issues/${eventData.groupID}/?project=${project.id}`\n    );\n  };\n\n  render() {\n    const {\n      api: _api,\n      organization: _organization,\n      project: _project,\n      source: _source,\n      ...props\n    } = this.props;\n    const {creating} = this.state;\n\n    return (\n      <Button\n        {...props}\n        disabled={props.disabled || creating}\n        onClick={this.createSampleGroup}\n      />\n    );\n  }\n}\n\nexport default withApi(withOrganization(CreateSampleEventButton));\n","import {Component} from 'react';\nimport * as qs from 'query-string';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\nimport {IntegrationProvider, IntegrationWithConfig, Organization} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\n\ntype Props = {\n  children: (\n    openDialog: (urlParams?: {[key: string]: string}) => void\n  ) => React.ReactNode;\n  onInstall: (data: IntegrationWithConfig) => void;\n  organization: Organization;\n  provider: IntegrationProvider;\n  account?: string; // for analytics\n  analyticsParams?: {\n    already_installed: boolean;\n    view:\n      | 'integrations_directory_integration_detail'\n      | 'integrations_directory'\n      | 'onboarding'\n      | 'project_creation';\n  };\n  modalParams?: {[key: string]: string};\n};\n\nexport default class AddIntegration extends Component<Props> {\n  componentDidMount() {\n    window.addEventListener('message', this.didReceiveMessage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.didReceiveMessage);\n    this.dialog && this.dialog.close();\n  }\n\n  dialog: Window | null = null;\n\n  computeCenteredWindow(width: number, height: number) {\n    // Taken from: https://stackoverflow.com/questions/4068373/center-a-popup-window-on-screen\n    const screenLeft =\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n\n    const screenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const innerWidth = window.innerWidth\n      ? window.innerWidth\n      : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : screen.width;\n\n    const innerHeight = window.innerHeight\n      ? window.innerHeight\n      : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : screen.height;\n\n    const left = innerWidth / 2 - width / 2 + screenLeft;\n    const top = innerHeight / 2 - height / 2 + screenTop;\n\n    return {left, top};\n  }\n\n  openDialog = (urlParams?: {[key: string]: string}) => {\n    const {account, analyticsParams, modalParams, organization, provider} = this.props;\n\n    trackIntegrationAnalytics('integrations.installation_start', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    const name = 'sentryAddIntegration';\n    const {url, width, height} = provider.setupDialog;\n    const {left, top} = this.computeCenteredWindow(width, height);\n\n    let query: {[key: string]: string} = {...urlParams};\n\n    if (account) {\n      query.account = account;\n    }\n\n    if (modalParams) {\n      query = {...query, ...modalParams};\n    }\n\n    const installUrl = `${url}?${qs.stringify(query)}`;\n    const opts = `scrollbars=yes,width=${width},height=${height},top=${top},left=${left}`;\n\n    this.dialog = window.open(installUrl, name, opts);\n    this.dialog && this.dialog.focus();\n  };\n\n  didReceiveMessage = (message: MessageEvent) => {\n    const {analyticsParams, onInstall, organization, provider} = this.props;\n\n    if (message.origin !== document.location.origin) {\n      return;\n    }\n\n    if (message.source !== this.dialog) {\n      return;\n    }\n\n    const {success, data} = message.data;\n    this.dialog = null;\n\n    if (!success) {\n      addErrorMessage(data.error);\n      return;\n    }\n\n    if (!data) {\n      return;\n    }\n    trackIntegrationAnalytics('integrations.installation_complete', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    addSuccessMessage(t('%s added', provider.name));\n    onInstall(data);\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return children(this.openDialog);\n  }\n}\n","import {Component} from 'react';\n\nimport Button, {ButtonPropsWithoutAriaLabel} from 'sentry/components/button';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {IntegrationWithConfig} from 'sentry/types';\n\nimport AddIntegration from './addIntegration';\n\ninterface AddIntegrationButtonProps\n  extends Omit<ButtonPropsWithoutAriaLabel, 'children'>,\n    Pick<\n      React.ComponentProps<typeof AddIntegration>,\n      'provider' | 'organization' | 'analyticsParams' | 'modalParams'\n    > {\n  onAddIntegration: (data: IntegrationWithConfig) => void;\n  buttonText?: string;\n  reinstall?: boolean;\n}\n\nexport default class AddIntegrationButton extends Component<AddIntegrationButtonProps> {\n  render() {\n    const {\n      provider,\n      buttonText,\n      onAddIntegration,\n      organization,\n      reinstall,\n      analyticsParams,\n      modalParams,\n      ...buttonProps\n    } = this.props;\n\n    const label =\n      buttonText || t(reinstall ? 'Enable' : 'Add %s', provider.metadata.noun);\n\n    return (\n      <Tooltip\n        disabled={provider.canAdd}\n        title={`Integration cannot be added on Sentry. Enable this integration via the ${provider.name} instance.`}\n      >\n        <AddIntegration\n          provider={provider}\n          onInstall={onAddIntegration}\n          organization={organization}\n          analyticsParams={analyticsParams}\n          modalParams={modalParams}\n        >\n          {onClick => (\n            <Button\n              disabled={!provider.canAdd}\n              {...buttonProps}\n              onClick={() => onClick()}\n              aria-label={t('Add integration')}\n            >\n              {label}\n            </Button>\n          )}\n        </AddIntegration>\n      </Tooltip>\n    );\n  }\n}\n","import Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  docsLink: string;\n  gettingStartedLink: string;\n};\nexport default function PlatformHeaderButtonBar({gettingStartedLink, docsLink}: Props) {\n  return (\n    <ButtonBar gap={1}>\n      <Button size=\"sm\" to={gettingStartedLink}>\n        {t('< Back')}\n      </Button>\n      <Button size=\"sm\" href={docsLink} external>\n        {t('Full Documentation')}\n      </Button>\n    </ButtonBar>\n  );\n}\n","import 'prism-sentry/index.css';\n\nimport {Component, Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {loadDocs} from 'sentry/actionCreators/projects';\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport NotFound from 'sentry/components/errors/notFound';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {\n  performance as performancePlatforms,\n  PlatformKey,\n} from 'sentry/data/platformCategories';\nimport platforms from 'sentry/data/platforms';\nimport {t, tct} from 'sentry/locale';\nimport {PageHeader} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport Projects from 'sentry/utils/projects';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n} & RouteComponentProps<{orgId: string; platform: string; projectId: string}, {}>;\n\ntype State = {\n  error: boolean;\n  html: string;\n  loading: boolean;\n};\n\nclass ProjectInstallPlatform extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    html: '',\n  };\n\n  componentDidMount() {\n    this.fetchData();\n    window.scrollTo(0, 0);\n\n    const {platform} = this.props.params;\n\n    // redirect if platform is not known.\n    if (!platform || platform === 'other') {\n      this.redirectToNeutralDocs();\n    }\n  }\n\n  get isGettingStarted() {\n    return window.location.href.indexOf('getting-started') > 0;\n  }\n\n  fetchData = async () => {\n    const {api, params} = this.props;\n    const {orgId, projectId, platform} = params;\n\n    this.setState({loading: true});\n\n    try {\n      const {html} = await loadDocs(api, orgId, projectId, platform as PlatformKey);\n      this.setState({html});\n    } catch (error) {\n      this.setState({error});\n    }\n\n    this.setState({loading: false});\n  };\n\n  redirectToNeutralDocs() {\n    const {orgId, projectId} = this.props.params;\n\n    const url = `/organizations/${orgId}/projects/${projectId}/getting-started/`;\n\n    browserHistory.push(url);\n  }\n\n  render() {\n    const {params} = this.props;\n    const {orgId, projectId} = params;\n\n    const platform = platforms.find(p => p.id === params.platform);\n\n    if (!platform) {\n      return <NotFound />;\n    }\n\n    const issueStreamLink = `/organizations/${orgId}/issues/`;\n    const performanceOverviewLink = `/organizations/${orgId}/performance/`;\n    const gettingStartedLink = `/organizations/${orgId}/projects/${projectId}/getting-started/`;\n    const platformLink = platform.link ?? undefined;\n\n    return (\n      <Fragment>\n        <StyledPageHeader>\n          <h2>{t('Configure %(platform)s', {platform: platform.name})}</h2>\n          <ButtonBar gap={1}>\n            <Button size=\"sm\" to={gettingStartedLink}>\n              {t('< Back')}\n            </Button>\n            <Button size=\"sm\" href={platformLink} external>\n              {t('Full Documentation')}\n            </Button>\n          </ButtonBar>\n        </StyledPageHeader>\n\n        <div>\n          <Alert type=\"info\" showIcon>\n            {tct(\n              `\n             This is a quick getting started guide. For in-depth instructions\n             on integrating Sentry with [platform], view\n             [docLink:our complete documentation].`,\n              {\n                platform: platform.name,\n                docLink: <a href={platformLink} />,\n              }\n            )}\n          </Alert>\n\n          {this.state.loading ? (\n            <LoadingIndicator />\n          ) : this.state.error ? (\n            <LoadingError onRetry={this.fetchData} />\n          ) : (\n            <Fragment>\n              <SentryDocumentTitle\n                title={`${t('Configure')} ${platform.name}`}\n                projectSlug={projectId}\n              />\n              <DocumentationWrapper dangerouslySetInnerHTML={{__html: this.state.html}} />\n            </Fragment>\n          )}\n\n          {this.isGettingStarted && (\n            <Projects\n              key={`${orgId}-${projectId}`}\n              orgId={orgId}\n              slugs={[projectId]}\n              passthroughPlaceholderProject={false}\n            >\n              {({projects, initiallyLoaded, fetching, fetchError}) => {\n                const projectsLoading = !initiallyLoaded && fetching;\n                const projectFilter =\n                  !projectsLoading && !fetchError && projects.length\n                    ? {\n                        project: (projects[0] as Project).id,\n                      }\n                    : {};\n                const showPerformancePrompt = performancePlatforms.includes(\n                  platform.id as PlatformKey\n                );\n\n                return (\n                  <Fragment>\n                    {showPerformancePrompt && (\n                      <Feature\n                        features={['performance-view']}\n                        hookName=\"feature-disabled:performance-new-project\"\n                      >\n                        {({hasFeature}) => {\n                          if (hasFeature) {\n                            return null;\n                          }\n                          return (\n                            <StyledAlert type=\"info\" showIcon>\n                              {t(\n                                `Your selected platform supports performance, but your organization does not have performance enabled.`\n                              )}\n                            </StyledAlert>\n                          );\n                        }}\n                      </Feature>\n                    )}\n\n                    <StyledButtonBar gap={1}>\n                      <Button\n                        priority=\"primary\"\n                        busy={projectsLoading}\n                        to={{\n                          pathname: issueStreamLink,\n                          query: projectFilter,\n                          hash: '#welcome',\n                        }}\n                      >\n                        {t('Take me to Issues')}\n                      </Button>\n                      <Button\n                        busy={projectsLoading}\n                        to={{\n                          pathname: performanceOverviewLink,\n                          query: projectFilter,\n                        }}\n                      >\n                        {t('Take me to Performance')}\n                      </Button>\n                    </StyledButtonBar>\n                  </Fragment>\n                );\n              }}\n            </Projects>\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst DocumentationWrapper = styled('div')`\n  line-height: 1.5;\n\n  .gatsby-highlight {\n    margin-bottom: ${space(3)};\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  .alert {\n    margin-bottom: ${space(3)};\n    border-radius: ${p => p.theme.borderRadius};\n  }\n\n  pre {\n    word-break: break-all;\n    white-space: pre-wrap;\n  }\n\n  blockquote {\n    padding: ${space(1)};\n    margin-left: 0;\n    background: ${p => p.theme.alert.info.backgroundLight};\n    border-left: 2px solid ${p => p.theme.alert.info.border};\n  }\n  blockquote > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  margin-top: ${space(3)};\n  width: max-content;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    width: auto;\n    grid-row-gap: ${space(1)};\n    grid-auto-flow: row;\n  }\n`;\n\nconst StyledPageHeader = styled(PageHeader)`\n  margin-bottom: ${space(3)};\n\n  h2 {\n    margin: 0;\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    flex-direction: column;\n    align-items: flex-start;\n\n    h2 {\n      margin-bottom: ${space(2)};\n    }\n  }\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin-top: ${space(2)};\n`;\n\nexport {ProjectInstallPlatform};\nexport default withApi(withOrganization(ProjectInstallPlatform));\n","import 'prism-sentry/index.css';\n\nimport {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport platforms from 'sentry/data/platforms';\nimport {t} from 'sentry/locale';\nimport {PageHeader} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {IntegrationProvider, Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport FirstEventFooter from 'sentry/views/onboarding/components/firstEventFooter';\nimport AddInstallationInstructions from 'sentry/views/onboarding/components/integrations/addInstallationInstructions';\nimport PostInstallCodeSnippet from 'sentry/views/onboarding/components/integrations/postInstallCodeSnippet';\nimport AddIntegrationButton from 'sentry/views/organizationIntegrations/addIntegrationButton';\n\nimport PlatformHeaderButtonBar from './components/platformHeaderButtonBar';\n\ntype Props = {\n  integrationSlug: string;\n  organization: Organization;\n} & RouteComponentProps<{orgId: string; platform: string; projectId: string}, {}> &\n  AsyncComponent['props'];\n\ntype State = {\n  installed: boolean;\n  integrations: {providers: IntegrationProvider[]};\n  project: Project | null;\n} & AsyncComponent['state'];\n\nclass PlatformIntegrationSetup extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      installed: false,\n      integrations: {providers: []},\n      project: null,\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    const {platform} = this.props.params;\n\n    // redirect if platform is not known.\n    if (!platform || platform === 'other') {\n      this.redirectToNeutralDocs();\n    }\n  }\n\n  get provider() {\n    const {providers} = this.state.integrations;\n    return providers.length ? providers[0] : null;\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, integrationSlug, params} = this.props;\n\n    if (!integrationSlug) {\n      return [];\n    }\n\n    return [\n      [\n        'integrations',\n        `/organizations/${organization.slug}/config/integrations/?provider_key=${integrationSlug}`,\n      ],\n      ['project', `/projects/${organization.slug}/${params.projectId}/`],\n    ];\n  }\n\n  handleFullDocsClick = () => {\n    const {organization} = this.props;\n    trackAdvancedAnalyticsEvent('growth.onboarding_view_full_docs', {organization});\n  };\n\n  redirectToNeutralDocs() {\n    const {orgId, projectId} = this.props.params;\n\n    const url = `/organizations/${orgId}/projects/${projectId}/getting-started/`;\n\n    browserHistory.push(url);\n  }\n\n  handleAddIntegration = () => {\n    this.setState({installed: true});\n  };\n\n  trackSwitchToManual = () => {\n    const {organization, integrationSlug} = this.props;\n    trackIntegrationAnalytics('integrations.switch_manual_sdk_setup', {\n      integration_type: 'first_party',\n      integration: integrationSlug,\n      view: 'project_creation',\n      organization,\n    });\n  };\n\n  render() {\n    const {organization, params} = this.props;\n    const {installed, project} = this.state;\n    const {projectId, orgId, platform} = params;\n    const provider = this.provider;\n\n    const platformIntegration = platforms.find(p => p.id === platform);\n    if (!provider || !platformIntegration || !project) {\n      return null;\n    }\n    const gettingStartedLink = `/organizations/${orgId}/projects/${projectId}/getting-started/`;\n\n    // TODO: make dynamic when adding more integrations\n    const docsLink =\n      'https://docs.sentry.io/product/integrations/cloud-monitoring/aws-lambda/';\n\n    return (\n      <OuterWrapper>\n        <StyledPageHeader>\n          <StyledTitle>\n            {t('Automatically instrument %s', platformIntegration.name)}\n          </StyledTitle>\n          <PlatformHeaderButtonBar\n            gettingStartedLink={gettingStartedLink}\n            docsLink={docsLink}\n          />\n        </StyledPageHeader>\n        <InnerWrapper>\n          {!installed ? (\n            <Fragment>\n              <AddInstallationInstructions />\n              <StyledButtonBar gap={1}>\n                <AddIntegrationButton\n                  provider={provider}\n                  onAddIntegration={this.handleAddIntegration}\n                  organization={organization}\n                  priority=\"primary\"\n                  size=\"sm\"\n                  analyticsParams={{view: 'project_creation', already_installed: false}}\n                  modalParams={{projectId: project.id}}\n                  aria-label={t('Add integration')}\n                />\n                <Button\n                  size=\"sm\"\n                  to={{\n                    pathname: window.location.pathname,\n                    query: {manual: '1'},\n                  }}\n                  onClick={this.trackSwitchToManual}\n                >\n                  {t('Manual Setup')}\n                </Button>\n              </StyledButtonBar>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <PostInstallCodeSnippet provider={provider} />\n              <FirstEventFooter\n                project={project}\n                organization={organization}\n                docsLink={docsLink}\n                docsOnClick={this.handleFullDocsClick}\n              />\n            </Fragment>\n          )}\n        </InnerWrapper>\n      </OuterWrapper>\n    );\n  }\n}\n\nconst StyledButtonBar = styled(ButtonBar)`\n  margin-top: ${space(3)};\n  width: max-content;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    width: auto;\n    grid-row-gap: ${space(1)};\n    grid-auto-flow: row;\n  }\n`;\n\nconst InnerWrapper = styled('div')`\n  width: 850px;\n`;\n\nconst OuterWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nconst StyledPageHeader = styled(PageHeader)`\n  margin-bottom: ${space(3)};\n`;\n\nconst StyledTitle = styled('h2')`\n  margin: 0 ${space(3)} 0 0;\n`;\n\nexport default withOrganization(PlatformIntegrationSetup);\n","import * as qs from 'query-string';\n\nimport {platformToIntegrationMap} from 'sentry/utils/integrationUtil';\n\nimport Platform from './platform';\nimport PlatformIntegrationSetup from './platformIntegrationSetup';\n\ntype Props = React.ComponentProps<typeof Platform> &\n  Omit<React.ComponentProps<typeof PlatformIntegrationSetup>, 'integrationSlug'>;\n\nconst PlatformOrIntegration = (props: Props) => {\n  const parsed = qs.parse(window.location.search);\n  const {platform} = props.params;\n  const integrationSlug = platform && platformToIntegrationMap[platform];\n  // check for manual override query param\n  if (integrationSlug && parsed.manual !== '1') {\n    return <PlatformIntegrationSetup integrationSlug={integrationSlug} {...props} />;\n  }\n  return <Platform {...props} />;\n};\n\nexport default PlatformOrIntegration;\n"],"names":["Fragment","Button","ButtonBar","t","tct","space","CreateSampleEventButton","FirstEventIndicator","FirstEventFooter","organization","project","docsLink","docsOnClick","indicator","firstEventButton","sample","skip","CTAFooter","CTASecondary","p","theme","subText","fontSizeMedium","Actions","AnimatePresence","motion","IconCheckmark","pulsingIndicatorStyles","trackAdvancedAnalyticsEvent","EventWaiter","testableTransition","children","props","firstIssue","disabled","slug","id","Indicator","Container","StatusWrapper","div","defaultProps","initial","animate","exit","variants","opacity","y","transition","when","staggerChildren","Waiting","Success","indicatorAnimation","AnimatedText","WaitingIndicator","ReceivedIndicator","green300","size","ExternalLink","AddInstallationInstructions","learnMore","addInstallation","manualSetup","PostInstallCodeSnippet","provider","platform","isOnboarding","token_punctuation","name","CodeWrapper","TokenFunction","TokenPunctuation","Component","browserHistory","Sentry","addErrorMessage","addLoadingMessage","clearIndicators","withApi","withOrganization","EVENT_POLL_RETRIES","EVENT_POLL_INTERVAL","latestEventAvailable","api","groupID","retries","eventCreated","Promise","resolve","window","setTimeout","requestPromise","creating","eventData","duration","setState","url","method","error","withScope","scope","setExtra","captureException","Error","t0","performance","now","t1","Math","ceil","recordAnalytics","setTag","toString","setLevel","captureMessage","push","componentDidMount","source","project_id","eventKey","interval","render","_api","_organization","_project","_source","state","createSampleGroup","qs","addSuccessMessage","trackIntegrationAnalytics","AddIntegration","urlParams","account","analyticsParams","modalParams","integration","key","integration_type","width","height","setupDialog","left","top","computeCenteredWindow","query","installUrl","stringify","opts","dialog","open","focus","message","onInstall","origin","document","location","success","data","addEventListener","didReceiveMessage","componentWillUnmount","removeEventListener","close","screenLeft","undefined","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","openDialog","Tooltip","AddIntegrationButton","buttonText","onAddIntegration","reinstall","buttonProps","label","metadata","noun","canAdd","onClick","PlatformHeaderButtonBar","gettingStartedLink","loadDocs","Feature","Alert","NotFound","LoadingError","LoadingIndicator","SentryDocumentTitle","performancePlatforms","platforms","PageHeader","Projects","ProjectInstallPlatform","loading","html","params","orgId","projectId","fetchData","scrollTo","redirectToNeutralDocs","isGettingStarted","href","indexOf","find","issueStreamLink","performanceOverviewLink","platformLink","link","docLink","__html","projects","initiallyLoaded","fetching","fetchError","projectsLoading","projectFilter","length","showPerformancePrompt","includes","hasFeature","pathname","hash","DocumentationWrapper","borderRadius","alert","info","backgroundLight","border","StyledButtonBar","breakpoints","small","StyledPageHeader","StyledAlert","AsyncComponent","PlatformIntegrationSetup","installed","integrationSlug","view","getDefaultState","integrations","providers","getEndpoints","platformIntegration","handleAddIntegration","already_installed","manual","trackSwitchToManual","handleFullDocsClick","InnerWrapper","OuterWrapper","StyledTitle","platformToIntegrationMap","Platform","PlatformOrIntegration","parsed","parse","search"],"sourceRoot":""}