{"version":3,"file":"chunks/app_views_settings_project_projectServiceHookDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/projectServiceHookDetails.tsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport Field from 'sentry/components/forms/field';\nimport TextCopyInput from 'sentry/components/forms/textCopyInput';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {ServiceHook} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport AsyncView from 'sentry/views/asyncView';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport ServiceHookSettingsForm from 'sentry/views/settings/project/serviceHookSettingsForm';\n\ntype Params = {hookId: string; orgId: string; projectId: string};\n\ntype StatsProps = {\n  params: Params;\n};\n\ntype StatsState = {\n  stats: {total: number; ts: number}[] | null;\n} & AsyncComponent['state'];\n\nclass HookStats extends AsyncComponent<StatsProps, StatsState> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n    const {hookId, orgId, projectId} = this.props.params;\n    return [\n      [\n        'stats',\n        `/projects/${orgId}/${projectId}/hooks/${hookId}/stats/`,\n        {\n          query: {\n            since,\n            until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderBody() {\n    const {stats} = this.state;\n    if (stats === null) {\n      return null;\n    }\n    let emptyStats = true;\n\n    const series = {\n      seriesName: t('Events'),\n      data: stats.map(p => {\n        if (p.total) {\n          emptyStats = false;\n        }\n        return {\n          name: p.ts * 1000,\n          value: p.total,\n        };\n      }),\n    };\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Events in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {!emptyStats ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              series={[series]}\n              height={150}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total webhooks fired for this configuration.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype Props = RouteComponentProps<Params, {}>;\ntype State = {\n  hook: ServiceHook | null;\n} & AsyncView['state'];\n\nexport default class ProjectServiceHookDetails extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId, hookId} = this.props.params;\n    return [['hook', `/projects/${orgId}/${projectId}/hooks/${hookId}/`]];\n  }\n\n  onDelete = () => {\n    const {orgId, projectId, hookId} = this.props.params;\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(`/projects/${orgId}/${projectId}/hooks/${hookId}/`, {\n      method: 'DELETE',\n      success: () => {\n        clearIndicators();\n        browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n      },\n      error: () => {\n        addErrorMessage(t('Unable to remove application. Please try again.'));\n      },\n    });\n  };\n\n  renderBody() {\n    const {orgId, projectId, hookId} = this.props.params;\n    const {hook} = this.state;\n    if (!hook) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <SettingsPageHeader title={t('Service Hook Details')} />\n\n        <ErrorBoundary>\n          <HookStats params={this.props.params} />\n        </ErrorBoundary>\n\n        <ServiceHookSettingsForm\n          orgId={orgId}\n          projectId={projectId}\n          hookId={hookId}\n          initialData={{\n            ...hook,\n            isActive: hook.status !== 'disabled',\n          }}\n        />\n        <Panel>\n          <PanelHeader>{t('Event Validation')}</PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\" showIcon>\n              Sentry will send the <code>X-ServiceHook-Signature</code> header built using{' '}\n              <code>HMAC(SHA256, [secret], [payload])</code>. You should always verify\n              this signature before trusting the information provided in the webhook.\n            </PanelAlert>\n            <Field\n              label={t('Secret')}\n              flexibleControlStateSize\n              inline={false}\n              help={t('The shared secret used for generating event HMAC signatures.')}\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: hook.secret,\n                  fixed: 'a dynamic secret value',\n                })}\n              </TextCopyInput>\n            </Field>\n          </PanelBody>\n        </Panel>\n        <Panel>\n          <PanelHeader>{t('Delete Hook')}</PanelHeader>\n          <PanelBody>\n            <Field\n              label={t('Delete Hook')}\n              help={t('Removing this hook is immediate and permanent.')}\n            >\n              <div>\n                <Button priority=\"danger\" onClick={this.onDelete}>\n                  {t('Delete Hook')}\n                </Button>\n              </div>\n            </Field>\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport ApiForm from 'sentry/components/forms/apiForm';\nimport BooleanField from 'sentry/components/forms/booleanField';\nimport MultipleCheckbox from 'sentry/components/forms/controls/multipleCheckbox';\nimport FormField from 'sentry/components/forms/formField';\nimport TextField from 'sentry/components/forms/textField';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Choices, ServiceHook} from 'sentry/types';\n\nconst EVENT_CHOICES: Choices = ['event.alert', 'event.created'].map(e => [e, e]);\n\ntype Props = {\n  initialData: Partial<ServiceHook> & {isActive: boolean};\n  orgId: string;\n  projectId: string;\n  hookId?: string;\n};\n\nexport default class ServiceHookSettingsForm extends Component<Props> {\n  onSubmitSuccess = () => {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n  };\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({value, onChange}) => (\n                <MultipleCheckbox\n                  onChange={onChange}\n                  value={value}\n                  choices={EVENT_CHOICES}\n                />\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n"],"names":["AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Fragment","browserHistory","addErrorMessage","addLoadingMessage","clearIndicators","Button","MiniBarChart","ErrorBoundary","Field","TextCopyInput","Panel","PanelAlert","PanelBody","PanelHeader","t","getDynamicText","EmptyMessage","SettingsPageHeader","ServiceHookSettingsForm","HookStats","getEndpoints","until","Math","floor","Date","getTime","since","hookId","orgId","projectId","props","params","query","resolution","renderBody","stats","state","emptyStats","series","seriesName","data","map","p","total","name","ts","value","ProjectServiceHookDetails","api","request","method","success","push","error","hook","isActive","status","secret","fixed","onDelete","Component","ApiForm","BooleanField","MultipleCheckbox","FormField","TextField","EVENT_CHOICES","e","initialData","endpoint","onSubmitSuccess","marginTop","paddingRight","onChange"],"sourceRoot":""}