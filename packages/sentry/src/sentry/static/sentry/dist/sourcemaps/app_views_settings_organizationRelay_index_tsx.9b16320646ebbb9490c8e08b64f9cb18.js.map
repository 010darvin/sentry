{"version":3,"file":"chunks/app_views_settings_organizationRelay_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/commandLine.tsx","webpack:///./app/components/confirmDelete.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx","webpack:///./app/views/settings/organizationRelay/emptyState.tsx","webpack:///./app/views/settings/organizationRelay/index.tsx","webpack:///./app/views/settings/organizationRelay/list/activityList.tsx","webpack:///./app/views/settings/organizationRelay/list/cardHeader.tsx","webpack:///./app/views/settings/organizationRelay/list/index.tsx","webpack:///./app/views/settings/organizationRelay/list/utils.tsx","webpack:///./app/views/settings/organizationRelay/list/waitingActivity.tsx","webpack:///./app/views/settings/organizationRelay/modals/add/index.tsx","webpack:///./app/views/settings/organizationRelay/modals/add/item.tsx","webpack:///./app/views/settings/organizationRelay/modals/add/terminal.tsx","webpack:///./app/views/settings/organizationRelay/modals/edit.tsx","webpack:///./app/views/settings/organizationRelay/modals/form.tsx","webpack:///./app/views/settings/organizationRelay/modals/handleXhrErrorResponse.tsx","webpack:///./app/views/settings/organizationRelay/modals/modal.tsx","webpack:///./app/views/settings/organizationRelay/modals/modalManager.tsx","webpack:///./app/views/settings/organizationRelay/relayWrapper.tsx","webpack:///../node_modules/lodash/orderBy.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * The text interface\n   */\n  children: string;\n};\n\nconst CommandLine = ({children}: Props) => <Wrapper>{children}</Wrapper>;\n\nexport default CommandLine;\n\nconst Wrapper = styled('code')`\n  padding: ${space(0.5)} ${space(1)};\n  color: ${p => p.theme.pink300};\n  background: ${p => p.theme.pink100};\n  border: 1px solid ${p => p.theme.pink200};\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: ${p => p.theme.fontSizeMedium};\n  white-space: nowrap;\n`;\n","import {Fragment} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport Confirm from 'sentry/components/confirm';\nimport Field from 'sentry/components/forms/field';\nimport Input from 'sentry/components/input';\nimport {t} from 'sentry/locale';\n\ninterface Props\n  extends Omit<React.ComponentProps<typeof Confirm>, 'renderConfirmMessage'> {\n  /**\n   * The string that the user must enter to confirm the deletion\n   */\n  confirmInput: string;\n}\n\nconst ConfirmDelete = ({message, confirmInput, ...props}: Props) => (\n  <Confirm\n    {...props}\n    bypass={false}\n    disableConfirmButton\n    renderMessage={({disableConfirmButton}) => (\n      <Fragment>\n        <Alert type=\"error\">{message}</Alert>\n        <Field\n          flexibleControlStateSize\n          inline={false}\n          label={t(\n            'Please enter %s to confirm the deletion',\n            <code>{confirmInput}</code>\n          )}\n        >\n          <Input\n            type=\"text\"\n            placeholder={confirmInput}\n            onChange={e => disableConfirmButton(e.target.value !== confirmInput)}\n          />\n        </Field>\n      </Fragment>\n    )}\n  />\n);\n\nexport default ConfirmDelete;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {ReactNode} from 'react';\n\nimport Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'> & {\n    message?: ReactNode;\n  };\n\nconst PermissionAlert = ({\n  access = ['org:write'],\n  message = t(\n    'These settings can only be edited by users with the organization owner or manager role.'\n  ),\n  ...props\n}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" showIcon {...props}>\n          {message}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nconst EmptyState = () => (\n  <Panel>\n    <EmptyMessage>{t('No Keys Registered.')}</EmptyMessage>\n  </Panel>\n);\n\nexport default EmptyState;\n","import Feature from 'sentry/components/acl/feature';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport RelayWrapper from './relayWrapper';\n\nfunction OrganizationRelay(props: Omit<RelayWrapper['props'], 'organization'>) {\n  const organization = useOrganization();\n  return (\n    <Feature\n      organization={organization}\n      features={['relay']}\n      hookName=\"feature-disabled:relay\"\n    >\n      <RelayWrapper\n        organization={organization as RelayWrapper['props']['organization']}\n        {...props}\n      />\n    </Feature>\n  );\n}\n\nexport default OrganizationRelay;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport DateTime from 'sentry/components/dateTime';\nimport {PanelTable} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {RelayActivity} from 'sentry/types';\n\ntype Props = {\n  activities: Array<RelayActivity>;\n};\n\nconst ActivityList = ({activities}: Props) => (\n  <StyledPanelTable headers={[t('Version'), t('First Used'), t('Last Used')]}>\n    {activities.map(({relayId, version, firstSeen, lastSeen}) => {\n      return (\n        <Fragment key={relayId}>\n          <Version>{version}</Version>\n          <DateTime date={firstSeen} seconds={false} />\n          <DateTime date={lastSeen} seconds={false} />\n        </Fragment>\n      );\n    })}\n  </StyledPanelTable>\n);\n\nexport default ActivityList;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: repeat(3, 2fr);\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    grid-template-columns: 2fr repeat(2, 1fr);\n  }\n`;\n\nconst Version = styled('div')`\n  font-variant-numeric: tabular-nums;\n`;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Clipboard from 'sentry/components/clipboard';\nimport ConfirmDelete from 'sentry/components/confirmDelete';\nimport DateTime from 'sentry/components/dateTime';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconCopy, IconDelete, IconEdit} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Relay} from 'sentry/types';\n\ntype Props = Relay & {\n  disabled: boolean;\n  onDelete: (publicKey: Relay['publicKey']) => () => void;\n  onEdit: (publicKey: Relay['publicKey']) => () => void;\n};\n\nconst CardHeader = ({\n  publicKey,\n  name,\n  description,\n  created,\n  disabled,\n  onEdit,\n  onDelete,\n}: Props) => {\n  const deleteButton = (\n    <Button\n      size=\"sm\"\n      icon={<IconDelete />}\n      aria-label={t('Delete Key')}\n      disabled={disabled}\n      title={disabled ? t('You do not have permission to delete keys') : undefined}\n    />\n  );\n  return (\n    <Header>\n      <KeyName>\n        {name}\n        {description && <QuestionTooltip position=\"top\" size=\"sm\" title={description} />}\n      </KeyName>\n      <DateCreated>\n        {tct('Created on [date]', {date: <DateTime date={created} />})}\n      </DateCreated>\n      <StyledButtonBar gap={1}>\n        <Clipboard value={publicKey}>\n          <Button size=\"sm\" icon={<IconCopy />}>\n            {t('Copy Key')}\n          </Button>\n        </Clipboard>\n        <Button\n          size=\"sm\"\n          onClick={onEdit(publicKey)}\n          icon={<IconEdit />}\n          aria-label={t('Edit Key')}\n          disabled={disabled}\n          title={disabled ? t('You do not have permission to edit keys') : undefined}\n        />\n        {disabled ? (\n          deleteButton\n        ) : (\n          <ConfirmDelete\n            message={t(\n              'After removing this Public Key, your Relay will no longer be able to communicate with Sentry and events will be dropped.'\n            )}\n            onConfirm={onDelete(publicKey)}\n            confirmInput={name}\n          >\n            {deleteButton}\n          </ConfirmDelete>\n        )}\n      </StyledButtonBar>\n    </Header>\n  );\n};\n\nexport default CardHeader;\n\nconst KeyName = styled('div')`\n  grid-row: 1/2;\n  display: grid;\n  grid-template-columns: repeat(2, max-content);\n  grid-column-gap: ${space(0.5)};\n`;\n\nconst DateCreated = styled('div')`\n  grid-row: 2/3;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-row: 1/3;\n  }\n`;\n\nconst Header = styled('div')`\n  display: grid;\n  grid-row-gap: ${space(1)};\n  margin-bottom: ${space(1)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: 1fr max-content;\n    grid-template-rows: repeat(2, max-content);\n  }\n`;\n","import orderBy from 'lodash/orderBy';\n\nimport {Relay, RelayActivity} from 'sentry/types';\n\nimport ActivityList from './activityList';\nimport CardHeader from './cardHeader';\nimport {getRelaysByPublicKey} from './utils';\nimport WaitingActivity from './waitingActivity';\n\ntype CardHeaderProps = React.ComponentProps<typeof CardHeader>;\ntype WaitingActivityProps = React.ComponentProps<typeof WaitingActivity>;\n\ntype Props = {\n  disabled: boolean;\n  relayActivities: Array<RelayActivity>;\n  relays: Array<Relay>;\n} & Pick<CardHeaderProps, 'onDelete' | 'onEdit'> &\n  Pick<WaitingActivityProps, 'onRefresh'>;\n\nconst List = ({\n  relays,\n  relayActivities,\n  onRefresh,\n  onDelete,\n  onEdit,\n  disabled,\n}: Props) => {\n  const orderedRelays = orderBy(relays, relay => relay.created, ['desc']);\n\n  const relaysByPublicKey = getRelaysByPublicKey(orderedRelays, relayActivities);\n\n  const renderCardContent = (activities: Array<RelayActivity>) => {\n    if (!activities.length) {\n      return <WaitingActivity onRefresh={onRefresh} disabled={disabled} />;\n    }\n\n    return <ActivityList activities={activities} />;\n  };\n\n  return (\n    <div>\n      {Object.keys(relaysByPublicKey).map(relayByPublicKey => {\n        const {name, description, created, activities} =\n          relaysByPublicKey[relayByPublicKey];\n        return (\n          <div key={relayByPublicKey}>\n            <CardHeader\n              publicKey={relayByPublicKey}\n              name={name}\n              description={description}\n              created={created}\n              onEdit={onEdit}\n              onDelete={onDelete}\n              disabled={disabled}\n            />\n            {renderCardContent(activities)}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default List;\n","import {Relay, RelayActivity, RelaysByPublickey} from 'sentry/types';\n\n/**\n * Convert list of individual relay objects into a per-file summary grouped by publicKey\n */\nexport function getRelaysByPublicKey(\n  relays: Array<Relay>,\n  relayActivities: Array<RelayActivity>\n) {\n  return relays.reduce<RelaysByPublickey>((relaysByPublicKey, relay) => {\n    const {name, description, created, publicKey} = relay;\n\n    if (!relaysByPublicKey.hasOwnProperty(publicKey)) {\n      relaysByPublicKey[publicKey] = {name, description, created, activities: []};\n    }\n\n    if (!relaysByPublicKey[publicKey].activities.length) {\n      relaysByPublicKey[publicKey].activities = relayActivities.filter(\n        activity => activity.publicKey === publicKey\n      );\n    }\n\n    return relaysByPublicKey;\n  }, {});\n}\n\n/**\n * Returns a short publicKey with only 20 characters\n */\nexport function getShortPublicKey(publicKey: Relay['publicKey']) {\n  return publicKey.substring(0, 20);\n}\n","import Button from 'sentry/components/button';\nimport CommandLine from 'sentry/components/commandLine';\nimport {Panel} from 'sentry/components/panels';\nimport {IconRefresh} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\ntype Props = {\n  disabled: boolean;\n  onRefresh: () => void;\n};\n\nconst WaitingActivity = ({onRefresh, disabled}: Props) => (\n  <Panel>\n    <EmptyMessage\n      title={t('Waiting on Activity!')}\n      description={\n        disabled\n          ? undefined\n          : tct('Run relay in your terminal with [commandLine]', {\n              commandLine: <CommandLine>{'relay run'}</CommandLine>,\n            })\n      }\n      action={\n        <Button icon={<IconRefresh />} onClick={onRefresh}>\n          {t('Refresh')}\n        </Button>\n      }\n    />\n  </Panel>\n);\n\nexport default WaitingActivity;\n","import styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport ModalManager from '../modalManager';\n\nimport Item from './item';\nimport Terminal from './terminal';\n\nclass Add extends ModalManager {\n  getTitle() {\n    return t('Register Key');\n  }\n\n  getBtnSaveLabel() {\n    return t('Register');\n  }\n\n  getData() {\n    const {savedRelays} = this.props;\n    const trustedRelays = [...savedRelays, this.state.values];\n\n    return {trustedRelays};\n  }\n\n  getContent() {\n    return (\n      <StyledList symbol=\"colored-numeric\">\n        <Item\n          title={tct('Initialize the configuration. [link: Learn how]', {\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/product/relay/getting-started/#initializing-configuration\" />\n            ),\n          })}\n          subtitle={t('Within your terminal:')}\n        >\n          <Terminal command=\"relay config init\" />\n        </Item>\n        <Item\n          title={tct(\n            'Go to the file [jsonFile: credentials.json] to find the public key and enter it below.',\n            {\n              jsonFile: (\n                <ExternalLink href=\"https://docs.sentry.io/product/relay/getting-started/#registering-relay-with-sentry\" />\n              ),\n            }\n          )}\n        >\n          {super.getForm()}\n        </Item>\n      </StyledList>\n    );\n  }\n}\n\nexport default Add;\n\nconst StyledList = styled(List)`\n  display: grid;\n  gap: ${space(3)};\n`;\n","import styled from '@emotion/styled';\n\nimport ListItem from 'sentry/components/list/listItem';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactElement;\n  title: React.ReactNode;\n  className?: string;\n  subtitle?: React.ReactNode;\n};\n\nconst Item = styled(({title, subtitle, children, className}: Props) => (\n  <ListItem className={className}>\n    {title}\n    {subtitle && <small>{subtitle}</small>}\n    <div>{children}</div>\n  </ListItem>\n))`\n  display: grid;\n  gap: ${space(1.5)};\n`;\n\nexport default Item;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  command: string;\n};\n\nconst Terminal = ({command}: Props) => (\n  <Wrapper>\n    <Prompt>{'\\u0024'}</Prompt>\n    {command}\n  </Wrapper>\n);\n\nexport default Terminal;\n\nconst Wrapper = styled('div')`\n  background: ${p => p.theme.gray500};\n  padding: ${space(1.5)} ${space(3)};\n  font-family: ${p => p.theme.text.familyMono};\n  color: ${p => p.theme.white};\n  border-radius: ${p => p.theme.borderRadius};\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(0.75)};\n`;\n\nconst Prompt = styled('div')`\n  color: ${p => p.theme.gray300};\n`;\n","import {t} from 'sentry/locale';\nimport {Relay} from 'sentry/types';\n\nimport ModalManager from './modalManager';\n\ntype Props = {\n  relay: Relay;\n} & ModalManager['props'];\n\ntype State = ModalManager['state'];\n\nclass Edit extends ModalManager<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      values: {\n        name: this.props.relay.name,\n        publicKey: this.props.relay.publicKey,\n        description: this.props.relay.description || '',\n      },\n      disables: {publicKey: true},\n    };\n  }\n\n  getTitle() {\n    return t('Edit Key');\n  }\n\n  getData() {\n    const {savedRelays} = this.props;\n    const updatedRelay = this.state.values;\n\n    const trustedRelays = savedRelays.map(relay => {\n      if (relay.publicKey === updatedRelay.publicKey) {\n        return updatedRelay;\n      }\n      return relay;\n    });\n\n    return {trustedRelays};\n  }\n}\n\nexport default Edit;\n","import styled from '@emotion/styled';\n\nimport Textarea from 'sentry/components/forms/controls/textarea';\nimport Field from 'sentry/components/forms/field';\nimport FieldHelp from 'sentry/components/forms/field/fieldHelp';\nimport TextCopyInput from 'sentry/components/forms/textCopyInput';\nimport Input from 'sentry/components/input';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Relay} from 'sentry/types';\n\ntype FormField = keyof Pick<Relay, 'name' | 'publicKey' | 'description'>;\ntype Values = Record<FormField, string>;\n\ntype Props = {\n  disables: Partial<Record<FormField, boolean>>;\n  errors: Partial<Values>;\n  isFormValid: boolean;\n  onChange: (field: FormField, value: string) => void;\n  onSave: () => void;\n  onValidate: (field: FormField) => () => void;\n  onValidateKey: () => void;\n  values: Values;\n};\n\nconst Form = ({\n  values,\n  onChange,\n  errors,\n  onValidate,\n  isFormValid,\n  disables,\n  onValidateKey,\n  onSave,\n}: Props) => {\n  const handleChange =\n    (field: FormField) =>\n    (\n      event: React.ChangeEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>\n    ) => {\n      onChange(field, event.target.value);\n    };\n\n  const handleSubmit = () => {\n    if (isFormValid) {\n      onSave();\n    }\n  };\n\n  // code below copied from app/views/organizationIntegrations/SplitInstallationIdModal.tsx\n  // TODO: fix the common method selectText\n  const onCopy = (value: string) => async () =>\n    // This hack is needed because the normal copying methods with TextCopyInput do not work correctly\n    await navigator.clipboard.writeText(value);\n\n  return (\n    <form onSubmit={handleSubmit} id=\"relay-form\">\n      <Field\n        flexibleControlStateSize\n        label={t('Display Name')}\n        error={errors.name}\n        inline={false}\n        stacked\n        required\n      >\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder={t('Display Name')}\n          onChange={handleChange('name')}\n          value={values.name}\n          onBlur={onValidate('name')}\n          disabled={disables.name}\n        />\n      </Field>\n\n      {disables.publicKey ? (\n        <Field flexibleControlStateSize label={t('Public Key')} inline={false} stacked>\n          <TextCopyInput onCopy={onCopy(values.publicKey)}>\n            {values.publicKey}\n          </TextCopyInput>\n        </Field>\n      ) : (\n        <FieldWrapper>\n          <StyledField\n            label={t('Public Key')}\n            error={errors.publicKey}\n            flexibleControlStateSize\n            inline={false}\n            stacked\n            required\n          >\n            <Input\n              type=\"text\"\n              name=\"publicKey\"\n              placeholder={t('Public Key')}\n              onChange={handleChange('publicKey')}\n              value={values.publicKey}\n              onBlur={onValidateKey}\n            />\n          </StyledField>\n          <FieldHelp>\n            {t(\n              'Only enter the Public Key value from your credentials file. Never share the Secret key with Sentry or any third party'\n            )}\n          </FieldHelp>\n        </FieldWrapper>\n      )}\n      <Field flexibleControlStateSize label={t('Description')} inline={false} stacked>\n        <Textarea\n          name=\"description\"\n          placeholder={t('Description')}\n          onChange={handleChange('description')}\n          value={values.description}\n          disabled={disables.description}\n          autosize\n        />\n      </Field>\n    </form>\n  );\n};\n\nexport default Form;\n\nconst FieldWrapper = styled('div')`\n  padding-bottom: ${space(2)};\n`;\n\nconst StyledField = styled(Field)`\n  padding-bottom: 0;\n`;\n","import {t} from 'sentry/locale';\n\ntype Error = {\n  message: string;\n  type:\n    | 'unknown'\n    | 'bad-structure'\n    | 'missing-name'\n    | 'empty-name'\n    | 'missing-key'\n    | 'invalid-key'\n    | 'duplicated-key';\n};\n\ntype XhrError = {\n  responseJSON?: {\n    trustedRelays: Array<string>;\n  };\n};\n\nfunction handleError(error: XhrError): Error {\n  const errorMessage = error.responseJSON?.trustedRelays[0];\n\n  if (!errorMessage) {\n    return {\n      type: 'unknown',\n      message: t('An unknown error occurred while saving Relay public key.'),\n    };\n  }\n\n  if (errorMessage === 'Bad structure received for Trusted Relays') {\n    return {\n      type: 'bad-structure',\n      message: t('An invalid structure was sent.'),\n    };\n  }\n\n  if (errorMessage === 'Relay key info with missing name in Trusted Relays') {\n    return {\n      type: 'missing-name',\n      message: t('Field Required'),\n    };\n  }\n\n  if (errorMessage === 'Relay key info with empty name in Trusted Relays') {\n    return {\n      type: 'empty-name',\n      message: t('Invalid Field'),\n    };\n  }\n\n  if (errorMessage.startsWith('Missing public key for Relay key info with name:')) {\n    return {\n      type: 'missing-key',\n      message: t('Field Required'),\n    };\n  }\n\n  if (errorMessage.startsWith('Invalid public key for relay key info with name:')) {\n    return {\n      type: 'invalid-key',\n      message: t('Invalid Relay key'),\n    };\n  }\n\n  if (errorMessage.startsWith('Duplicated key in Trusted Relays:')) {\n    return {\n      type: 'duplicated-key',\n      message: t('Relay key already taken'),\n    };\n  }\n\n  return {\n    type: 'unknown',\n    message: t('An unknown error occurred while saving Relay public key.'),\n  };\n}\n\nexport default handleError;\n","import {Fragment} from 'react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  content: React.ReactElement;\n  disabled: boolean;\n  onSave: () => void;\n  title: string;\n  btnSaveLabel?: string;\n} & ModalRenderProps;\n\nconst Modal = ({\n  title,\n  onSave,\n  content,\n  disabled,\n  Header,\n  Body,\n  Footer,\n  closeModal,\n  btnSaveLabel = t('Save'),\n}: Props) => (\n  <Fragment>\n    <Header closeButton>{title}</Header>\n    <Body>{content}</Body>\n    <Footer>\n      <ButtonBar gap={1.5}>\n        <Button onClick={closeModal}>{t('Cancel')}</Button>\n        <Button\n          onClick={event => {\n            event.preventDefault();\n            onSave();\n          }}\n          disabled={disabled}\n          type=\"submit\"\n          priority=\"primary\"\n          form=\"relay-form\"\n        >\n          {btnSaveLabel}\n        </Button>\n      </ButtonBar>\n    </Footer>\n  </Fragment>\n);\n\nexport default Modal;\n","import {Component} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {Organization, Relay} from 'sentry/types';\n\nimport Form from './form';\nimport handleXhrErrorResponse from './handleXhrErrorResponse';\nimport Modal from './modal';\n\ntype FormProps = React.ComponentProps<typeof Form>;\ntype Values = FormProps['values'];\n\ntype Props = ModalRenderProps & {\n  api: Client;\n  onSubmitSuccess: (organization: Organization) => void;\n  orgSlug: Organization['slug'];\n  savedRelays: Array<Relay>;\n};\n\ntype State = {\n  disables: FormProps['disables'];\n  errors: FormProps['errors'];\n  isFormValid: boolean;\n  requiredValues: Array<keyof Values>;\n  title: string;\n  values: Values;\n};\n\nclass DialogManager<P extends Props = Props, S extends State = State> extends Component<\n  P,\n  S\n> {\n  state = this.getDefaultState();\n\n  componentDidMount() {\n    this.validateForm();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: S) {\n    if (!isEqual(prevState.values, this.state.values)) {\n      this.validateForm();\n    }\n    if (\n      !isEqual(prevState.errors, this.state.errors) &&\n      Object.keys(this.state.errors).length > 0\n    ) {\n      this.setValidForm(false);\n    }\n  }\n\n  getDefaultState(): Readonly<S> {\n    return {\n      values: {name: '', publicKey: '', description: ''},\n      requiredValues: ['name', 'publicKey'],\n      errors: {},\n      disables: {},\n      isFormValid: false,\n      title: this.getTitle(),\n    } as Readonly<S>;\n  }\n\n  getTitle(): string {\n    return '';\n  }\n\n  getData(): {trustedRelays: Array<Relay>} {\n    // Child has to implement this\n    throw new Error('Not implemented');\n  }\n\n  getBtnSaveLabel(): string | undefined {\n    return undefined;\n  }\n\n  setValidForm(isFormValid: boolean) {\n    this.setState({isFormValid});\n  }\n\n  validateForm() {\n    const {values, requiredValues, errors} = this.state;\n\n    const isFormValid = requiredValues.every(\n      requiredValue =>\n        !!values[requiredValue].replace(/\\s/g, '') && !errors[requiredValue]\n    );\n\n    this.setValidForm(isFormValid);\n  }\n\n  clearError<F extends keyof Values>(field: F) {\n    this.setState(prevState => ({\n      errors: omit(prevState.errors, field),\n    }));\n  }\n\n  convertErrorXhrResponse(error: ReturnType<typeof handleXhrErrorResponse>) {\n    switch (error.type) {\n      case 'invalid-key':\n      case 'missing-key':\n        this.setState(prevState => ({\n          errors: {...prevState.errors, publicKey: error.message},\n        }));\n        break;\n      case 'empty-name':\n      case 'missing-name':\n        this.setState(prevState => ({\n          errors: {...prevState.errors, name: error.message},\n        }));\n        break;\n      default:\n        addErrorMessage(error.message);\n    }\n  }\n\n  handleChange = <F extends keyof Values>(field: F, value: Values[F]) => {\n    this.setState(prevState => ({\n      values: {\n        ...prevState.values,\n        [field]: value,\n      },\n      errors: omit(prevState.errors, field),\n    }));\n  };\n\n  handleSave = async () => {\n    const {onSubmitSuccess, closeModal, orgSlug, api} = this.props;\n\n    const trustedRelays = this.getData().trustedRelays.map(trustedRelay =>\n      omit(trustedRelay, ['created', 'lastModified'])\n    );\n\n    try {\n      const response = await api.requestPromise(`/organizations/${orgSlug}/`, {\n        method: 'PUT',\n        data: {trustedRelays},\n      });\n      onSubmitSuccess(response);\n      closeModal();\n    } catch (error) {\n      this.convertErrorXhrResponse(handleXhrErrorResponse(error));\n    }\n  };\n\n  handleValidate =\n    <F extends keyof Values>(field: F) =>\n    () => {\n      const isFieldValueEmpty = !this.state.values[field].replace(/\\s/g, '');\n\n      const fieldErrorAlreadyExist = this.state.errors[field];\n\n      if (isFieldValueEmpty && fieldErrorAlreadyExist) {\n        return;\n      }\n\n      if (isFieldValueEmpty && !fieldErrorAlreadyExist) {\n        this.setState(prevState => ({\n          errors: {\n            ...prevState.errors,\n            [field]: t('Field Required'),\n          },\n        }));\n        return;\n      }\n\n      if (!isFieldValueEmpty && fieldErrorAlreadyExist) {\n        this.clearError(field);\n      }\n    };\n\n  handleValidateKey = () => {\n    const {savedRelays} = this.props;\n    const {values, errors} = this.state;\n    const isKeyAlreadyTaken = savedRelays.find(\n      savedRelay => savedRelay.publicKey === values.publicKey\n    );\n\n    if (isKeyAlreadyTaken && !errors.publicKey) {\n      this.setState({\n        errors: {\n          ...errors,\n          publicKey: t('Relay key already taken'),\n        },\n      });\n      return;\n    }\n\n    if (errors.publicKey) {\n      this.setState({\n        errors: omit(errors, 'publicKey'),\n      });\n    }\n\n    this.handleValidate('publicKey')();\n  };\n\n  getForm() {\n    const {values, errors, disables, isFormValid} = this.state;\n    return (\n      <Form\n        isFormValid={isFormValid}\n        onSave={this.handleSave}\n        onChange={this.handleChange}\n        onValidate={this.handleValidate}\n        onValidateKey={this.handleValidateKey}\n        errors={errors}\n        values={values}\n        disables={disables}\n      />\n    );\n  }\n\n  getContent(): React.ReactElement {\n    return this.getForm();\n  }\n\n  render() {\n    const {title, isFormValid} = this.state;\n    const btnSaveLabel = this.getBtnSaveLabel();\n    const content = this.getContent();\n\n    return (\n      <Modal\n        {...this.props}\n        title={title}\n        onSave={this.handleSave}\n        btnSaveLabel={btnSaveLabel}\n        disabled={!isFormValid}\n        content={content}\n      />\n    );\n  }\n}\n\nexport default DialogManager;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {updateOrganization} from 'sentry/actionCreators/organizations';\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconAdd} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Relay, RelayActivity} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/organization/permissionAlert';\n\nimport Add from './modals/add';\nimport Edit from './modals/edit';\nimport EmptyState from './emptyState';\nimport List from './list';\n\nconst RELAY_DOCS_LINK = 'https://getsentry.github.io/relay/';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = {\n  relayActivities: Array<RelayActivity>;\n  relays: Array<Relay>;\n} & AsyncView['state'];\n\nclass RelayWrapper extends AsyncView<Props, State> {\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (!isEqual(prevState.relays, this.state.relays)) {\n      // Fetch fresh activities\n      this.fetchData();\n      updateOrganization({...prevProps.organization, trustedRelays: this.state.relays});\n    }\n\n    super.componentDidUpdate(prevProps, prevState);\n  }\n\n  getTitle() {\n    return t('Relay');\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      relays: this.props.organization.trustedRelays,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization} = this.props;\n    return [['relayActivities', `/organizations/${organization.slug}/relay_usage/`]];\n  }\n\n  setRelays(trustedRelays: Array<Relay>) {\n    this.setState({relays: trustedRelays});\n  }\n\n  handleDelete = (publicKey: Relay['publicKey']) => async () => {\n    const {relays} = this.state;\n\n    const trustedRelays = relays\n      .filter(relay => relay.publicKey !== publicKey)\n      .map(relay => omit(relay, ['created', 'lastModified']));\n\n    try {\n      const response = await this.api.requestPromise(\n        `/organizations/${this.props.organization.slug}/`,\n        {\n          method: 'PUT',\n          data: {trustedRelays},\n        }\n      );\n      addSuccessMessage(t('Successfully deleted Relay public key'));\n      this.setRelays(response.trustedRelays);\n    } catch {\n      addErrorMessage(t('An unknown error occurred while deleting Relay public key'));\n    }\n  };\n\n  successfullySaved(response: Organization, successMessage: string) {\n    addSuccessMessage(successMessage);\n    this.setRelays(response.trustedRelays);\n  }\n\n  handleOpenEditDialog = (publicKey: Relay['publicKey']) => () => {\n    const editRelay = this.state.relays.find(relay => relay.publicKey === publicKey);\n\n    if (!editRelay) {\n      return;\n    }\n\n    openModal(modalProps => (\n      <Edit\n        {...modalProps}\n        savedRelays={this.state.relays}\n        api={this.api}\n        orgSlug={this.props.organization.slug}\n        relay={editRelay}\n        onSubmitSuccess={response => {\n          this.successfullySaved(response, t('Successfully updated Relay public key'));\n        }}\n      />\n    ));\n  };\n\n  handleOpenAddDialog = () => {\n    openModal(modalProps => (\n      <Add\n        {...modalProps}\n        savedRelays={this.state.relays}\n        api={this.api}\n        orgSlug={this.props.organization.slug}\n        onSubmitSuccess={response => {\n          this.successfullySaved(response, t('Successfully added Relay public key'));\n        }}\n      />\n    ));\n  };\n\n  handleRefresh = () => {\n    // Fetch fresh activities\n    this.fetchData();\n  };\n\n  renderContent(disabled: boolean) {\n    const {relays, relayActivities, loading} = this.state;\n\n    if (loading) {\n      return this.renderLoading();\n    }\n\n    if (!relays.length) {\n      return <EmptyState />;\n    }\n\n    return (\n      <List\n        relays={relays}\n        relayActivities={relayActivities}\n        onEdit={this.handleOpenEditDialog}\n        onRefresh={this.handleRefresh}\n        onDelete={this.handleDelete}\n        disabled={disabled}\n      />\n    );\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const disabled = !organization.access.includes('org:write');\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Relay')}\n          action={\n            <Button\n              title={\n                disabled ? t('You do not have permission to register keys') : undefined\n              }\n              priority=\"primary\"\n              size=\"sm\"\n              icon={<IconAdd size=\"xs\" isCircled />}\n              onClick={this.handleOpenAddDialog}\n              disabled={disabled}\n            >\n              {t('Register Key')}\n            </Button>\n          }\n        />\n        <PermissionAlert />\n        <TextBlock>\n          {tct(\n            'Sentry Relay offers enterprise-grade data security by providing a standalone service that acts as a middle layer between your application and sentry.io. Go to [link:Relay Documentation] for setup and details.',\n            {link: <ExternalLink href={RELAY_DOCS_LINK} />}\n          )}\n        </TextBlock>\n        {this.renderContent(disabled)}\n      </Fragment>\n    );\n  }\n}\n\nexport default RelayWrapper;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n"],"names":["space","CommandLine","children","Wrapper","p","theme","pink300","pink100","pink200","text","familyMono","fontSizeMedium","Fragment","Alert","Confirm","Field","Input","t","ConfirmDelete","message","confirmInput","props","disableConfirmButton","e","target","value","AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","Access","PermissionAlert","access","hasAccess","Panel","EmptyMessage","EmptyState","Feature","useOrganization","RelayWrapper","OrganizationRelay","organization","DateTime","PanelTable","ActivityList","activities","map","relayId","version","firstSeen","lastSeen","StyledPanelTable","breakpoints","large","Version","Button","ButtonBar","Clipboard","QuestionTooltip","IconCopy","IconDelete","IconEdit","tct","CardHeader","publicKey","name","description","created","disabled","onEdit","onDelete","deleteButton","undefined","date","KeyName","DateCreated","gray300","StyledButtonBar","medium","Header","orderBy","getRelaysByPublicKey","WaitingActivity","List","relays","relayActivities","onRefresh","orderedRelays","relay","relaysByPublicKey","renderCardContent","length","Object","keys","relayByPublicKey","reduce","hasOwnProperty","filter","activity","getShortPublicKey","substring","IconRefresh","commandLine","ExternalLink","ModalManager","Item","Terminal","Add","getBtnSaveLabel","getData","savedRelays","trustedRelays","state","values","getContent","link","jsonFile","getForm","StyledList","ListItem","title","subtitle","className","command","gray500","white","borderRadius","Prompt","Edit","getDefaultState","disables","updatedRelay","Textarea","FieldHelp","TextCopyInput","Form","onChange","errors","onValidate","isFormValid","onValidateKey","onSave","handleChange","field","event","handleSubmit","onCopy","navigator","clipboard","writeText","FieldWrapper","StyledField","handleError","error","errorMessage","responseJSON","type","startsWith","Modal","content","Body","Footer","closeModal","btnSaveLabel","preventDefault","Component","isEqual","omit","addErrorMessage","handleXhrErrorResponse","DialogManager","setState","prevState","onSubmitSuccess","orgSlug","api","trustedRelay","response","requestPromise","method","data","convertErrorXhrResponse","isFieldValueEmpty","replace","fieldErrorAlreadyExist","clearError","isKeyAlreadyTaken","find","savedRelay","handleValidate","componentDidMount","validateForm","componentDidUpdate","_prevProps","setValidForm","requiredValues","Error","every","requiredValue","handleSave","handleValidateKey","addSuccessMessage","openModal","updateOrganization","IconAdd","SettingsPageHeader","TextBlock","RELAY_DOCS_LINK","slug","setRelays","editRelay","modalProps","successfullySaved","fetchData","prevProps","getEndpoints","successMessage","renderContent","loading","renderLoading","handleOpenEditDialog","handleRefresh","handleDelete","renderBody","includes","handleOpenAddDialog"],"sourceRoot":""}