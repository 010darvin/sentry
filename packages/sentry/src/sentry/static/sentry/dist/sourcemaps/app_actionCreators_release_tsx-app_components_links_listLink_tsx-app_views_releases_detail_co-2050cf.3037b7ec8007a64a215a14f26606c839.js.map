{"version":3,"file":"chunks/app_actionCreators_release_tsx-app_components_links_listLink_tsx-app_views_releases_detail_co-2050cf.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/release.tsx","webpack:///./app/actionCreators/repositories.tsx","webpack:///./app/actions/releaseActions.tsx","webpack:///./app/actions/repositoryActions.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/stores/releaseStore.tsx","webpack:///./app/stores/repositoryStore.tsx","webpack:///./app/utils/withRepositories.tsx","webpack:///./app/views/releases/detail/commitsAndFiles/emptyState.tsx","webpack:///./app/views/releases/detail/commitsAndFiles/repositorySwitcher.tsx","webpack:///./app/views/releases/detail/commitsAndFiles/withReleaseRepos.tsx","webpack:///./app/views/releases/detail/utils.tsx"],"sourcesContent":["import * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport ReleaseActions from 'sentry/actions/releaseActions';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport ReleaseStore, {getReleaseStoreKey} from 'sentry/stores/releaseStore';\nimport {Deploy, Release, ReleaseStatus} from 'sentry/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n  projectSlug: string;\n  releaseVersion: string;\n};\n\nexport function getProjectRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/projects/${orgSlug}/${projectSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/`;\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRelease for the same\n  // release to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  ReleaseStore.state.releaseLoading[getReleaseStoreKey(projectSlug, releaseVersion)] =\n    true;\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getRelease-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function getReleaseDeploys(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n  const path = `/organizations/${orgSlug}/releases/${encodeURIComponent(\n    releaseVersion\n  )}/deploys/`;\n\n  // HACK(leedongwei): Same as above\n  ReleaseStore.state.deploysLoading[getReleaseStoreKey(projectSlug, releaseVersion)] =\n    true;\n  ReleaseActions.loadDeploys(orgSlug, projectSlug, releaseVersion);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Deploy[]) => {\n      ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, res);\n    })\n    .catch(err => {\n      // This happens when a Project is not linked to a specific Release\n      if (err.status === 404) {\n        ReleaseActions.loadDeploysSuccess(projectSlug, releaseVersion, null);\n        return;\n      }\n\n      ReleaseActions.loadDeploysError(projectSlug, releaseVersion, err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getReleaseDeploys-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n\nexport function archiveRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Archiving Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Archived,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully archived.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be archived.')\n      );\n      throw error;\n    });\n}\n\nexport function restoreRelease(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, releaseVersion} = params;\n\n  ReleaseActions.loadRelease(orgSlug, projectSlug, releaseVersion);\n  addLoadingMessage(t('Restoring Release\\u2026'));\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/releases/`, {\n      method: 'POST',\n      data: {\n        status: ReleaseStatus.Active,\n        projects: [],\n        version: releaseVersion,\n      },\n    })\n    .then((release: Release) => {\n      ReleaseActions.loadReleaseSuccess(projectSlug, releaseVersion, release);\n      addSuccessMessage(t('Release was successfully restored.'));\n    })\n    .catch(error => {\n      ReleaseActions.loadReleaseError(projectSlug, releaseVersion, error);\n      addErrorMessage(\n        error.responseJSON?.detail ?? t('Release could not be be restored.')\n      );\n      throw error;\n    });\n}\n","import * as Sentry from '@sentry/react';\n\nimport RepositoryActions from 'sentry/actions/repositoryActions';\nimport {Client} from 'sentry/api';\nimport RepositoryStore from 'sentry/stores/repositoryStore';\nimport {Repository} from 'sentry/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n};\n\nexport function getRepositories(api: Client, params: ParamsGet) {\n  const {orgSlug} = params;\n  const path = `/organizations/${orgSlug}/repos/`;\n\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRepo for the same\n  // repo to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  RepositoryStore.state.repositoriesLoading = true;\n  RepositoryActions.loadRepositories(orgSlug);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Repository[]) => {\n      RepositoryActions.loadRepositoriesSuccess(res);\n    })\n    .catch(err => {\n      RepositoryActions.loadRepositoriesError(err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getRepositories-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n","import {createActions} from 'reflux';\n\nconst ReleaseActions = createActions([\n  'loadRelease', // Singular as it loads 1 release\n  'loadReleaseError',\n  'loadReleaseSuccess',\n  'loadDeploys', // Plural as it loads all deploys related to a release\n  'loadDeploysError',\n  'loadDeploysSuccess',\n]);\n\nexport default ReleaseActions;\n","import {createActions} from 'reflux';\n\nconst RepositoryActions = createActions([\n  'resetRepositories',\n  'loadRepositories',\n  'loadRepositoriesError',\n  'loadRepositoriesSuccess',\n]);\n\nexport default RepositoryActions;\n","import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport OrganizationActions from 'sentry/actions/organizationActions';\nimport ReleaseActions from 'sentry/actions/releaseActions';\nimport {Deploy, Organization, Release} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ntype StoreRelease = Map<string, Release>;\ntype StoreDeploys = Map<string, Array<Deploy>>;\ntype StoreLoading = Map<string, boolean>;\ntype StoreError = Map<string, Error>;\n\ninterface ReleaseStoreDefinition extends StoreDefinition {\n  get(\n    projectSlug: string,\n    releaseVersion: string\n  ): {\n    deploys: Array<Deploy> | undefined;\n    deploysError: Error | undefined;\n    deploysLoading: boolean | undefined;\n    release: Release | undefined;\n    releaseError: Error | undefined;\n    releaseLoading: boolean | undefined;\n  };\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string): void;\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error): void;\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release): void;\n  state: {\n    deploys: StoreDeploys;\n    deploysError: StoreError;\n    deploysLoading: StoreLoading;\n    orgSlug: string | undefined;\n    release: StoreRelease;\n    releaseError: StoreError;\n    releaseLoading: StoreLoading;\n  };\n  updateOrganization(org: Organization): void;\n}\n\nexport const getReleaseStoreKey = (projectSlug: string, releaseVersion: string) =>\n  `${projectSlug}${releaseVersion}`;\n\nconst storeConfig: ReleaseStoreDefinition = {\n  state: {\n    orgSlug: undefined,\n    release: new Map() as StoreRelease,\n    releaseLoading: new Map() as StoreLoading,\n    releaseError: new Map() as StoreError,\n    deploys: new Map() as StoreDeploys,\n    deploysLoading: new Map() as StoreLoading,\n    deploysError: new Map() as StoreError,\n  },\n\n  listenables: ReleaseActions,\n  unsubscribeListeners: [],\n\n  init() {\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationActions.update, this.updateOrganization)\n    );\n    this.reset();\n  },\n\n  reset() {\n    this.state = {\n      orgSlug: undefined,\n      release: new Map() as StoreRelease,\n      releaseLoading: new Map() as StoreLoading,\n      releaseError: new Map() as StoreError,\n      deploys: new Map() as StoreDeploys,\n      deploysLoading: new Map() as StoreLoading,\n      deploysError: new Map() as StoreError,\n    };\n    this.trigger(this.state);\n  },\n\n  updateOrganization(org: Organization) {\n    this.reset();\n    this.state.orgSlug = org.slug;\n    this.trigger(this.state);\n  },\n\n  loadRelease(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: true,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {releaseLoading, releaseError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadReleaseSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {release, releaseLoading, releaseError, ...state} = this.state;\n    this.state = {\n      ...state,\n      release: {\n        ...release,\n        [releaseKey]: data,\n      },\n      releaseLoading: {\n        ...releaseLoading,\n        [releaseKey]: false,\n      },\n      releaseError: {\n        ...releaseError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploys(orgSlug: string, projectSlug: string, releaseVersion: string) {\n    // Wipe entire store if the user switched organizations\n    if (!this.orgSlug || this.orgSlug !== orgSlug) {\n      this.reset();\n      this.orgSlug = orgSlug;\n    }\n\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: true,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysError(projectSlug: string, releaseVersion: string, error: Error) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: error,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  loadDeploysSuccess(projectSlug: string, releaseVersion: string, data: Release) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n    const {deploys, deploysLoading, deploysError, ...state} = this.state;\n\n    this.state = {\n      ...state,\n      deploys: {\n        ...deploys,\n        [releaseKey]: data,\n      },\n      deploysLoading: {\n        ...deploysLoading,\n        [releaseKey]: false,\n      },\n      deploysError: {\n        ...deploysError,\n        [releaseKey]: undefined,\n      },\n    };\n    this.trigger(this.state);\n  },\n\n  get(projectSlug: string, releaseVersion: string) {\n    const releaseKey = getReleaseStoreKey(projectSlug, releaseVersion);\n\n    return {\n      release: this.state.release[releaseKey],\n      releaseLoading: this.state.releaseLoading[releaseKey],\n      releaseError: this.state.releaseError[releaseKey],\n      deploys: this.state.deploys[releaseKey],\n      deploysLoading: this.state.deploysLoading[releaseKey],\n      deploysError: this.state.deploysError[releaseKey],\n    };\n  },\n};\n\nconst ReleaseStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ReleaseStore;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport RepoActions from 'sentry/actions/repositoryActions';\nimport {Repository} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface RepositoryStoreDefinition extends StoreDefinition {\n  get(): {\n    orgSlug?: string;\n    repositories?: Repository[];\n    repositoriesError?: Error;\n    repositoriesLoading?: boolean;\n  };\n\n  loadRepositories(orgSlug: string): void;\n\n  loadRepositoriesError(error: Error): void;\n  loadRepositoriesSuccess(data: Repository[]): void;\n  state: {\n    orgSlug?: string;\n    repositories?: Repository[];\n    repositoriesError?: Error;\n    repositoriesLoading?: boolean;\n  };\n}\n\nconst storeConfig: RepositoryStoreDefinition = {\n  listenables: RepoActions,\n  state: {\n    orgSlug: undefined,\n    repositories: undefined,\n    repositoriesLoading: undefined,\n    repositoriesError: undefined,\n  },\n\n  init() {\n    this.resetRepositories();\n  },\n\n  resetRepositories() {\n    this.state = {\n      orgSlug: undefined,\n      repositories: undefined,\n      repositoriesLoading: undefined,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositories(orgSlug: string) {\n    this.state = {\n      orgSlug,\n      repositories: orgSlug === this.state.orgSlug ? this.state.repositories : undefined,\n      repositoriesLoading: true,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositoriesError(err: Error) {\n    this.state = {\n      ...this.state,\n      repositories: undefined,\n      repositoriesLoading: false,\n      repositoriesError: err,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositoriesSuccess(data: Repository[]) {\n    this.state = {\n      ...this.state,\n      repositories: data,\n      repositoriesLoading: false,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  get() {\n    return {...this.state};\n  },\n};\n\nconst RepositoryStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default RepositoryStore;\n","import {Component} from 'react';\n\nimport {getRepositories} from 'sentry/actionCreators/repositories';\nimport RepositoryActions from 'sentry/actions/repositoryActions';\nimport {Client} from 'sentry/api';\nimport RepositoryStore from 'sentry/stores/repositoryStore';\nimport {Organization, Repository} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype DependentProps = {\n  api: Client;\n  organization: Organization;\n};\n\ntype InjectedProps = {\n  repositories?: Repository[];\n  repositoriesError?: Error;\n  repositoriesLoading?: boolean;\n};\n\nconst INITIAL_STATE: InjectedProps = {\n  repositories: undefined,\n  repositoriesLoading: undefined,\n  repositoriesError: undefined,\n};\n\nfunction withRepositories<P extends DependentProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithRepositories extends Component<P & DependentProps, InjectedProps> {\n    static displayName = `withRepositories(${getDisplayName(WrappedComponent)})`;\n\n    constructor(props: P & DependentProps, context: any) {\n      super(props, context);\n\n      const {organization} = this.props;\n      const orgSlug = organization.slug;\n      const repoData = RepositoryStore.get();\n\n      if (repoData.orgSlug !== orgSlug) {\n        RepositoryActions.resetRepositories();\n      }\n\n      this.state =\n        repoData.orgSlug === orgSlug\n          ? {...INITIAL_STATE, ...repoData}\n          : {...INITIAL_STATE};\n    }\n\n    componentDidMount() {\n      // XXX(leedongwei): Do not move this function call unless you modify the\n      // unit test named \"prevents repeated calls\"\n      this.fetchRepositories();\n    }\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n    unsubscribe = RepositoryStore.listen(() => this.onStoreUpdate(), undefined);\n\n    fetchRepositories() {\n      const {api, organization} = this.props;\n      const orgSlug = organization.slug;\n      const repoData = RepositoryStore.get();\n\n      // XXX(leedongwei): Do not check the orgSlug here. It would have been\n      // verified at `getInitialState`. The short-circuit hack in actionCreator\n      // does not update the orgSlug in the store.\n      if (\n        (!repoData.repositories && !repoData.repositoriesLoading) ||\n        repoData.repositoriesError\n      ) {\n        getRepositories(api, {orgSlug});\n      }\n    }\n\n    onStoreUpdate() {\n      const repoData = RepositoryStore.get();\n      this.setState({...repoData});\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return WithRepositories;\n}\n\nexport default withRepositories;\n","import EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport {Panel, PanelBody} from 'sentry/components/panels';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst EmptyState = ({children}: Props) => (\n  <Panel>\n    <PanelBody>\n      <EmptyStateWarning>\n        <p>{children}</p>\n      </EmptyStateWarning>\n    </PanelBody>\n  </Panel>\n);\n\nexport default EmptyState;\n","import {PureComponent} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Repository} from 'sentry/types';\n\ntype Props = {\n  location: Location;\n  repositories: Array<Repository>;\n  router: InjectedRouter;\n  activeRepository?: Repository;\n};\n\nclass RepositorySwitcher extends PureComponent<Props> {\n  handleRepoFilterChange = (activeRepo: string) => {\n    const {router, location} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, activeRepo},\n    });\n  };\n\n  render() {\n    const {activeRepository, repositories} = this.props;\n\n    const activeRepo = activeRepository?.name;\n\n    return (\n      <StyledCompactSelect\n        triggerLabel={activeRepo}\n        triggerProps={{prefix: t('Filter')}}\n        value={activeRepo}\n        options={repositories.map(repo => ({\n          value: repo.name,\n          label: <RepoLabel>{repo.name}</RepoLabel>,\n        }))}\n        onChange={opt => this.handleRepoFilterChange(opt?.value)}\n      />\n    );\n  }\n}\n\nexport default RepositorySwitcher;\n\nconst StyledCompactSelect = styled(CompactSelect)`\n  margin-bottom: ${space(1)};\n`;\n\nconst RepoLabel = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n`;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {Body, Main} from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel} from 'sentry/components/panels';\nimport {IconCommit} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Repository} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withRepositories from 'sentry/utils/withRepositories';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nimport {ReleaseContext} from '..';\n\n// These props are required when using this HoC\ntype DependentProps = RouteComponentProps<{orgId: string; release: string}, {}>;\n\ntype HoCsProps = {\n  api: Client;\n  organization: Organization;\n  repositories?: Repository[];\n  repositoriesError?: Error;\n  repositoriesLoading?: boolean;\n};\n\ntype State = {\n  isLoading: boolean;\n  releaseRepos: Repository[];\n  activeReleaseRepo?: Repository;\n};\n\nfunction withReleaseRepos<P extends DependentProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithReleaseRepos extends Component<P & HoCsProps, State> {\n    static displayName = `withReleaseRepos(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      releaseRepos: [],\n      isLoading: true,\n    };\n\n    componentDidMount() {\n      this.fetchReleaseRepos();\n    }\n\n    componentDidUpdate(prevProps: P & HoCsProps, prevState: State) {\n      if (\n        this.props.params.release !== prevProps.params.release ||\n        (!!prevProps.repositoriesLoading && !this.props.repositoriesLoading)\n      ) {\n        this.fetchReleaseRepos();\n        return;\n      }\n\n      if (\n        prevState.releaseRepos.length !== this.state.releaseRepos.length ||\n        prevProps.location.query?.activeRepo !== this.props.location.query?.activeRepo\n      ) {\n        this.setActiveReleaseRepo(this.props);\n      }\n    }\n\n    static contextType = ReleaseContext;\n\n    setActiveReleaseRepo(props: P & HoCsProps) {\n      const {releaseRepos, activeReleaseRepo} = this.state;\n\n      if (!releaseRepos.length) {\n        return;\n      }\n\n      const activeCommitRepo = props.location.query?.activeRepo;\n\n      if (!activeCommitRepo) {\n        this.setState({\n          activeReleaseRepo: releaseRepos[0] ?? null,\n        });\n        return;\n      }\n\n      if (activeCommitRepo === activeReleaseRepo?.name) {\n        return;\n      }\n\n      const matchedRepository = releaseRepos.find(\n        commitRepo => commitRepo.name === activeCommitRepo\n      );\n\n      if (matchedRepository) {\n        this.setState({\n          activeReleaseRepo: matchedRepository,\n        });\n        return;\n      }\n\n      addErrorMessage(t('The repository you were looking for was not found.'));\n    }\n\n    async fetchReleaseRepos() {\n      const {params, api, repositories, repositoriesLoading} = this.props;\n\n      if (repositoriesLoading === undefined || repositoriesLoading === true) {\n        return;\n      }\n\n      if (!repositories?.length) {\n        this.setState({isLoading: false});\n        return;\n      }\n\n      const {release, orgId} = params;\n      const {project} = this.context;\n\n      this.setState({isLoading: true});\n\n      try {\n        const releasePath = encodeURIComponent(release);\n        const releaseRepos = await api.requestPromise(\n          `/projects/${orgId}/${project.slug}/releases/${releasePath}/repositories/`\n        );\n        this.setState({releaseRepos, isLoading: false});\n        this.setActiveReleaseRepo(this.props);\n      } catch (error) {\n        Sentry.captureException(error);\n        addErrorMessage(\n          t(\n            'An error occurred while trying to fetch the repositories of the release: %s',\n            release\n          )\n        );\n      }\n    }\n\n    render() {\n      const {isLoading, activeReleaseRepo, releaseRepos} = this.state;\n      const {repositoriesLoading, repositories, params, router, location, organization} =\n        this.props;\n\n      if (isLoading || repositoriesLoading) {\n        return <LoadingIndicator />;\n      }\n\n      const noRepositoryOrgRelatedFound = !repositories?.length;\n\n      if (noRepositoryOrgRelatedFound) {\n        const {orgId} = params;\n        return (\n          <Body>\n            <Main fullWidth>\n              <Panel dashedBorder>\n                <EmptyMessage\n                  icon={<IconCommit size=\"xl\" />}\n                  title={t('Releases are better with commit data!')}\n                  description={t(\n                    'Connect a repository to see commit info, files changed, and authors involved in future releases.'\n                  )}\n                  action={\n                    <Button priority=\"primary\" to={`/settings/${orgId}/repos/`}>\n                      {t('Connect a repository')}\n                    </Button>\n                  }\n                />\n              </Panel>\n            </Main>\n          </Body>\n        );\n      }\n\n      const noReleaseReposFound = !releaseRepos.length;\n\n      if (noReleaseReposFound) {\n        return (\n          <Body>\n            <Main fullWidth>\n              <Panel dashedBorder>\n                <EmptyMessage\n                  icon={<IconCommit size=\"xl\" />}\n                  title={t('Releases are better with commit data!')}\n                  description={t(\n                    'No commits associated with this release have been found.'\n                  )}\n                />\n              </Panel>\n            </Main>\n          </Body>\n        );\n      }\n\n      if (activeReleaseRepo === undefined) {\n        return <LoadingIndicator />;\n      }\n\n      const {release} = params;\n      const orgSlug = organization.slug;\n\n      return (\n        <WrappedComponent\n          {...this.props}\n          orgSlug={orgSlug}\n          projectSlug={this.context.project.slug}\n          release={release}\n          router={router}\n          location={location}\n          releaseRepos={releaseRepos}\n          activeReleaseRepo={activeReleaseRepo}\n        />\n      );\n    }\n  }\n\n  return withApi(withOrganization(withRepositories(WithReleaseRepos)));\n}\n\nexport default withReleaseRepos;\n","import {Location} from 'history';\nimport pick from 'lodash/pick';\nimport moment from 'moment';\n\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport {parseStatsPeriod} from 'sentry/components/organizations/timeRangeSelector/utils';\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport {\n  Commit,\n  CommitFile,\n  FilesByRepository,\n  ReleaseComparisonChartType,\n  ReleaseProject,\n  ReleaseWithHealth,\n  Repository,\n} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {Theme} from 'sentry/utils/theme';\n\nimport {getReleaseBounds, getReleaseParams, isMobileRelease} from '../utils';\nimport {commonTermsDescription, SessionTerm} from '../utils/sessionTerm';\n\nexport type CommitsByRepository = {\n  [key: string]: Commit[];\n};\n\n/**\n * Convert list of individual file changes into a per-file summary grouped by repository\n */\nexport function getFilesByRepository(fileList: CommitFile[]) {\n  return fileList.reduce<FilesByRepository>((filesByRepository, file) => {\n    const {filename, repoName, author, type} = file;\n\n    if (!filesByRepository.hasOwnProperty(repoName)) {\n      filesByRepository[repoName] = {};\n    }\n\n    if (!filesByRepository[repoName].hasOwnProperty(filename)) {\n      filesByRepository[repoName][filename] = {\n        authors: {},\n        types: new Set(),\n      };\n    }\n\n    if (author.email) {\n      filesByRepository[repoName][filename].authors[author.email] = author;\n    }\n\n    filesByRepository[repoName][filename].types.add(type);\n\n    return filesByRepository;\n  }, {});\n}\n\n/**\n * Convert list of individual commits into a summary grouped by repository\n */\nexport function getCommitsByRepository(commitList: Commit[]): CommitsByRepository {\n  return commitList.reduce((commitsByRepository, commit) => {\n    const repositoryName = commit.repository?.name ?? t('unknown');\n\n    if (!commitsByRepository.hasOwnProperty(repositoryName)) {\n      commitsByRepository[repositoryName] = [];\n    }\n\n    commitsByRepository[repositoryName].push(commit);\n\n    return commitsByRepository;\n  }, {});\n}\n\n/**\n * Get request query according to the url params and active repository\n */\n\ntype GetQueryProps = {\n  location: Location;\n  activeRepository?: Repository;\n  perPage?: number;\n};\n\nexport function getQuery({location, perPage = 40, activeRepository}: GetQueryProps) {\n  const query = {\n    ...pick(location.query, [...Object.values(URL_PARAM), 'cursor']),\n    per_page: perPage,\n  };\n\n  if (!activeRepository) {\n    return query;\n  }\n\n  return {...query, repo_name: activeRepository.name};\n}\n\n/**\n * Get repositories to render according to the activeRepository\n */\nexport function getReposToRender(repos: Array<string>, activeRepository?: Repository) {\n  if (!activeRepository) {\n    return repos;\n  }\n  return [activeRepository.name];\n}\n\nexport const releaseComparisonChartLabels = {\n  [ReleaseComparisonChartType.CRASH_FREE_SESSIONS]: t('Crash Free Session Rate'),\n  [ReleaseComparisonChartType.HEALTHY_SESSIONS]: t('Healthy'),\n  [ReleaseComparisonChartType.ABNORMAL_SESSIONS]: t('Abnormal'),\n  [ReleaseComparisonChartType.ERRORED_SESSIONS]: t('Errored'),\n  [ReleaseComparisonChartType.CRASHED_SESSIONS]: t('Crashed Session Rate'),\n  [ReleaseComparisonChartType.CRASH_FREE_USERS]: t('Crash Free User Rate'),\n  [ReleaseComparisonChartType.HEALTHY_USERS]: t('Healthy'),\n  [ReleaseComparisonChartType.ABNORMAL_USERS]: t('Abnormal'),\n  [ReleaseComparisonChartType.ERRORED_USERS]: t('Errored'),\n  [ReleaseComparisonChartType.CRASHED_USERS]: t('Crashed User Rate'),\n  [ReleaseComparisonChartType.SESSION_COUNT]: t('Session Count'),\n  [ReleaseComparisonChartType.SESSION_DURATION]: t('Session Duration p50'),\n  [ReleaseComparisonChartType.USER_COUNT]: t('User Count'),\n  [ReleaseComparisonChartType.ERROR_COUNT]: t('Error Count'),\n  [ReleaseComparisonChartType.TRANSACTION_COUNT]: t('Transaction Count'),\n  [ReleaseComparisonChartType.FAILURE_RATE]: t('Failure Rate'),\n};\n\nexport const releaseComparisonChartTitles = {\n  [ReleaseComparisonChartType.CRASH_FREE_SESSIONS]: t('Crash Free Session Rate'),\n  [ReleaseComparisonChartType.HEALTHY_SESSIONS]: t('Healthy Session Rate'),\n  [ReleaseComparisonChartType.ABNORMAL_SESSIONS]: t('Abnormal Session Rate'),\n  [ReleaseComparisonChartType.ERRORED_SESSIONS]: t('Errored Session Rate'),\n  [ReleaseComparisonChartType.CRASHED_SESSIONS]: t('Crashed Session Rate'),\n  [ReleaseComparisonChartType.CRASH_FREE_USERS]: t('Crash Free User Rate'),\n  [ReleaseComparisonChartType.HEALTHY_USERS]: t('Healthy User Rate'),\n  [ReleaseComparisonChartType.ABNORMAL_USERS]: t('Abnormal User Rate'),\n  [ReleaseComparisonChartType.ERRORED_USERS]: t('Errored User Rate'),\n  [ReleaseComparisonChartType.CRASHED_USERS]: t('Crashed User Rate'),\n  [ReleaseComparisonChartType.SESSION_COUNT]: t('Session Count'),\n  [ReleaseComparisonChartType.SESSION_DURATION]: t('Session Duration'),\n  [ReleaseComparisonChartType.USER_COUNT]: t('User Count'),\n  [ReleaseComparisonChartType.ERROR_COUNT]: t('Error Count'),\n  [ReleaseComparisonChartType.TRANSACTION_COUNT]: t('Transaction Count'),\n  [ReleaseComparisonChartType.FAILURE_RATE]: t('Failure Rate'),\n};\n\nexport const releaseComparisonChartHelp = {\n  [ReleaseComparisonChartType.CRASH_FREE_SESSIONS]:\n    commonTermsDescription[SessionTerm.CRASH_FREE_SESSIONS],\n  [ReleaseComparisonChartType.CRASH_FREE_USERS]:\n    commonTermsDescription[SessionTerm.CRASH_FREE_USERS],\n  [ReleaseComparisonChartType.SESSION_COUNT]: t(\n    'The number of sessions in a given period.'\n  ),\n  [ReleaseComparisonChartType.USER_COUNT]: t('The number of users in a given period.'),\n};\n\ntype GenerateReleaseMarklineOptions = {\n  axisIndex?: number;\n  hideLabel?: boolean;\n};\n\nfunction generateReleaseMarkLine(\n  title: string,\n  position: number,\n  theme: Theme,\n  options?: GenerateReleaseMarklineOptions\n) {\n  const {hideLabel, axisIndex} = options || {};\n\n  return {\n    seriesName: title,\n    type: 'line',\n    data: [{name: position, value: null as any}], // TODO(ts): echart types\n    yAxisIndex: axisIndex ?? undefined,\n    xAxisIndex: axisIndex ?? undefined,\n    color: theme.gray300,\n    markLine: MarkLine({\n      silent: true,\n      lineStyle: {color: theme.gray300, type: 'solid'},\n      label: {\n        position: 'insideEndBottom',\n        formatter: hideLabel ? '' : title,\n        // @ts-expect-error weird echart types\n        font: 'Rubik',\n        fontSize: 11,\n      },\n      data: [\n        {\n          xAxis: position,\n        },\n      ],\n    }),\n  };\n}\n\nexport const releaseMarkLinesLabels = {\n  created: t('Release Created'),\n  adopted: t('Adopted'),\n  unadopted: t('Replaced'),\n};\n\nexport function generateReleaseMarkLines(\n  release: ReleaseWithHealth,\n  project: ReleaseProject,\n  theme: Theme,\n  location: Location,\n  options?: GenerateReleaseMarklineOptions\n) {\n  const markLines: Series[] = [];\n  const adoptionStages = release.adoptionStages?.[project.slug];\n  const isSingleEnv = decodeList(location.query.environment).length === 1;\n  const releaseBounds = getReleaseBounds(release);\n  const {statsPeriod, ...releaseParamsRest} = getReleaseParams({\n    location,\n    releaseBounds,\n  });\n  let {start, end} = releaseParamsRest;\n  const isDefaultPeriod = !(\n    location.query.pageStart ||\n    location.query.pageEnd ||\n    location.query.pageStatsPeriod\n  );\n\n  if (statsPeriod) {\n    const parsedStatsPeriod = parseStatsPeriod(statsPeriod, null);\n    start = parsedStatsPeriod.start;\n    end = parsedStatsPeriod.end;\n  }\n\n  const releaseCreated = moment(release.dateCreated).startOf('minute');\n  if (\n    releaseCreated.isBetween(start, end) ||\n    (isDefaultPeriod && releaseBounds.type === 'normal')\n  ) {\n    markLines.push(\n      generateReleaseMarkLine(\n        releaseMarkLinesLabels.created,\n        releaseCreated.valueOf(),\n        theme,\n        options\n      )\n    );\n  }\n\n  if (!isSingleEnv || !isMobileRelease(project.platform)) {\n    // for now want to show marklines only on mobile platforms with single environment selected\n    return markLines;\n  }\n\n  const releaseAdopted = adoptionStages?.adopted && moment(adoptionStages.adopted);\n  if (releaseAdopted && releaseAdopted.isBetween(start, end)) {\n    markLines.push(\n      generateReleaseMarkLine(\n        releaseMarkLinesLabels.adopted,\n        releaseAdopted.valueOf(),\n        theme,\n        options\n      )\n    );\n  }\n\n  const releaseReplaced = adoptionStages?.unadopted && moment(adoptionStages.unadopted);\n  if (releaseReplaced && releaseReplaced.isBetween(start, end)) {\n    markLines.push(\n      generateReleaseMarkLine(\n        releaseMarkLinesLabels.unadopted,\n        releaseReplaced.valueOf(),\n        theme,\n        options\n      )\n    );\n  }\n\n  return markLines;\n}\n"],"names":["Sentry","addErrorMessage","addLoadingMessage","addSuccessMessage","ReleaseActions","t","ReleaseStore","getReleaseStoreKey","ReleaseStatus","getProjectRelease","api","params","orgSlug","projectSlug","releaseVersion","path","encodeURIComponent","state","releaseLoading","loadRelease","requestPromise","method","then","res","loadReleaseSuccess","catch","err","status","loadReleaseError","withScope","scope","setLevel","setFingerprint","captureException","getReleaseDeploys","deploysLoading","loadDeploys","loadDeploysSuccess","loadDeploysError","archiveRelease","data","Archived","projects","version","release","error","responseJSON","detail","restoreRelease","Active","RepositoryActions","RepositoryStore","getRepositories","repositoriesLoading","loadRepositories","loadRepositoriesSuccess","loadRepositoriesError","createActions","Component","Link","RouterLink","withRouter","classNames","omit","qs","ListLink","_classNames","className","activeClassName","props","isActive","to","query","index","router","queryData","parse","undefined","target","pathname","render","children","disabled","carriedProps","getClassName","StyledLi","shouldForwardProp","prop","p","theme","createStore","OrganizationActions","makeSafeRefluxStore","storeConfig","Map","releaseError","deploys","deploysError","listenables","unsubscribeListeners","init","push","listenTo","update","updateOrganization","reset","trigger","org","slug","releaseKey","get","RepoActions","repositories","repositoriesError","resetRepositories","getDisplayName","INITIAL_STATE","withRepositories","WrappedComponent","WithRepositories","constructor","context","listen","onStoreUpdate","organization","repoData","componentDidMount","fetchRepositories","componentWillUnmount","unsubscribe","setState","EmptyStateWarning","Panel","PanelBody","EmptyState","PureComponent","CompactSelect","space","RepositorySwitcher","activeRepo","location","cursor","activeRepository","name","prefix","map","repo","value","label","opt","handleRepoFilterChange","StyledCompactSelect","RepoLabel","overflowEllipsis","Button","Body","Main","LoadingIndicator","IconCommit","withApi","withOrganization","EmptyMessage","ReleaseContext","withReleaseRepos","WithReleaseRepos","releaseRepos","isLoading","fetchReleaseRepos","componentDidUpdate","prevProps","prevState","length","setActiveReleaseRepo","activeReleaseRepo","activeCommitRepo","matchedRepository","find","commitRepo","orgId","project","releasePath","noRepositoryOrgRelatedFound","noReleaseReposFound","pick","moment","MarkLine","parseStatsPeriod","URL_PARAM","ReleaseComparisonChartType","decodeList","getReleaseBounds","getReleaseParams","isMobileRelease","commonTermsDescription","SessionTerm","getFilesByRepository","fileList","reduce","filesByRepository","file","filename","repoName","author","type","hasOwnProperty","authors","types","Set","email","add","getCommitsByRepository","commitList","commitsByRepository","commit","repositoryName","repository","getQuery","perPage","Object","values","per_page","repo_name","getReposToRender","repos","releaseComparisonChartLabels","CRASH_FREE_SESSIONS","HEALTHY_SESSIONS","ABNORMAL_SESSIONS","ERRORED_SESSIONS","CRASHED_SESSIONS","CRASH_FREE_USERS","HEALTHY_USERS","ABNORMAL_USERS","ERRORED_USERS","CRASHED_USERS","SESSION_COUNT","SESSION_DURATION","USER_COUNT","ERROR_COUNT","TRANSACTION_COUNT","FAILURE_RATE","releaseComparisonChartTitles","releaseComparisonChartHelp","generateReleaseMarkLine","title","position","options","hideLabel","axisIndex","seriesName","yAxisIndex","xAxisIndex","color","gray300","markLine","silent","lineStyle","formatter","font","fontSize","xAxis","releaseMarkLinesLabels","created","adopted","unadopted","generateReleaseMarkLines","markLines","adoptionStages","isSingleEnv","environment","releaseBounds","statsPeriod","releaseParamsRest","start","end","isDefaultPeriod","pageStart","pageEnd","pageStatsPeriod","parsedStatsPeriod","releaseCreated","dateCreated","startOf","isBetween","valueOf","platform","releaseAdopted","releaseReplaced"],"sourceRoot":""}