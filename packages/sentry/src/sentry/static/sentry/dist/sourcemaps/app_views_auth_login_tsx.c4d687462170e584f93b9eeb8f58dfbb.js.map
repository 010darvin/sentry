{"version":3,"file":"chunks/app_views_auth_login_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/auth/login.tsx","webpack:///./app/views/auth/loginForm.tsx","webpack:///./app/views/auth/registerForm.tsx","webpack:///./app/views/auth/ssoForm.tsx"],"sourcesContent":["import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NavTabs from 'sentry/components/navTabs';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AuthConfig} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\nimport LoginForm from './loginForm';\nimport RegisterForm from './registerForm';\nimport SsoForm from './ssoForm';\n\nconst FORM_COMPONENTS = {\n  login: LoginForm,\n  register: RegisterForm,\n  sso: SsoForm,\n} as const;\n\ntype ActiveTab = keyof typeof FORM_COMPONENTS;\n\ntype TabConfig = [key: ActiveTab, label: string, disabled?: boolean];\n\ntype Props = {\n  api: Client;\n};\n\ntype State = {\n  activeTab: ActiveTab;\n  authConfig: null | AuthConfig;\n  error: null | boolean;\n  loading: boolean;\n};\n\nclass Login extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: null,\n    activeTab: 'login',\n    authConfig: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  handleSetTab = (activeTab: ActiveTab, event: React.MouseEvent) => {\n    this.setState({activeTab});\n    event.preventDefault();\n  };\n\n  fetchData = async () => {\n    const {api} = this.props;\n    try {\n      const response = await api.requestPromise('/auth/config/');\n\n      const {vsts_login_link, github_login_link, google_login_link, ...config} = response;\n      const authConfig = {\n        ...config,\n        vstsLoginLink: vsts_login_link,\n        githubLoginLink: github_login_link,\n        googleLoginLink: google_login_link,\n      };\n\n      this.setState({authConfig});\n    } catch (e) {\n      this.setState({error: true});\n    }\n\n    this.setState({loading: false});\n  };\n\n  get hasAuthProviders() {\n    if (this.state.authConfig === null) {\n      return false;\n    }\n\n    const {githubLoginLink, googleLoginLink, vstsLoginLink} = this.state.authConfig;\n    return !!(githubLoginLink || vstsLoginLink || googleLoginLink);\n  }\n\n  render() {\n    const {api} = this.props;\n    const {loading, error, activeTab, authConfig} = this.state;\n\n    const FormComponent = FORM_COMPONENTS[activeTab];\n\n    const tabs: TabConfig[] = [\n      ['login', t('Login')],\n      ['sso', t('Single Sign-On')],\n      ['register', t('Register'), !authConfig?.canRegister],\n    ];\n\n    const renderTab = ([key, label, disabled]: TabConfig) =>\n      !disabled && (\n        <li key={key} className={activeTab === key ? 'active' : ''}>\n          <a href=\"#\" onClick={e => this.handleSetTab(key, e)}>\n            {label}\n          </a>\n        </li>\n      );\n\n    return (\n      <Fragment>\n        <Header>\n          <Heading>{t('Sign in to continue')}</Heading>\n          <AuthNavTabs>{tabs.map(renderTab)}</AuthNavTabs>\n        </Header>\n        {loading && <LoadingIndicator />}\n        {error && (\n          <StyledLoadingError\n            message={t('Unable to load authentication configuration')}\n            onRetry={this.fetchData}\n          />\n        )}\n        {!loading && authConfig !== null && !error && (\n          <FormWrapper hasAuthProviders={this.hasAuthProviders}>\n            <FormComponent {...{api, authConfig}} />\n          </FormWrapper>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst StyledLoadingError = styled(LoadingError)`\n  margin: ${space(2)};\n`;\n\nconst Header = styled('div')`\n  border-bottom: 1px solid ${p => p.theme.border};\n  padding: 20px 40px 0;\n`;\n\nconst Heading = styled('h3')`\n  font-size: 24px;\n  margin: 0 0 20px 0;\n`;\n\nconst AuthNavTabs = styled(NavTabs)`\n  margin: 0;\n`;\n\nconst FormWrapper = styled('div')<{hasAuthProviders: boolean}>`\n  padding: 35px;\n  width: ${p => (p.hasAuthProviders ? '600px' : '490px')};\n`;\n\nconst formFooterClass = `\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1)};\n  align-items: center;\n  justify-items: end;\n  border-top: none;\n  margin-bottom: 0;\n  padding: 0;\n`;\n\nexport {formFooterClass};\n\nexport default withApi(Login);\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport Form from 'sentry/components/deprecatedforms/form';\nimport PasswordField from 'sentry/components/deprecatedforms/passwordField';\nimport TextField from 'sentry/components/deprecatedforms/textField';\nimport Link from 'sentry/components/links/link';\nimport {IconGithub, IconGoogle, IconVsts} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {AuthConfig} from 'sentry/types';\nimport {formFooterClass} from 'sentry/views/auth/login';\n\ntype LoginProvidersProps = Partial<\n  Pick<AuthConfig, 'vstsLoginLink' | 'githubLoginLink' | 'googleLoginLink'>\n>;\n\n// TODO(epurkhiser): The abstraction here would be much nicer if we just\n// exposed a configuration object telling us what auth providers there are.\nconst LoginProviders = ({\n  vstsLoginLink,\n  githubLoginLink,\n  googleLoginLink,\n}: LoginProvidersProps) => (\n  <ProviderWrapper>\n    <ProviderHeading>{t('External Account Login')}</ProviderHeading>\n    {googleLoginLink && (\n      <Button\n        align=\"left\"\n        size=\"sm\"\n        icon={<IconGoogle size=\"xs\" />}\n        href={googleLoginLink}\n      >\n        {t('Sign in with Google')}\n      </Button>\n    )}\n    {githubLoginLink && (\n      <Button\n        align=\"left\"\n        size=\"sm\"\n        icon={<IconGithub size=\"xs\" />}\n        href={githubLoginLink}\n      >\n        {t('Sign in with GitHub')}\n      </Button>\n    )}\n    {vstsLoginLink && (\n      <Button align=\"left\" size=\"sm\" icon={<IconVsts size=\"xs\" />} href={vstsLoginLink}>\n        {t('Sign in with Azure DevOps')}\n      </Button>\n    )}\n  </ProviderWrapper>\n);\n\ntype Props = {\n  api: Client;\n  authConfig: AuthConfig;\n};\n\ntype State = {\n  errorMessage: null | string;\n  errors: Record<string, string>;\n};\n\nclass LoginForm extends Component<Props, State> {\n  state: State = {\n    errorMessage: null,\n    errors: {},\n  };\n\n  handleSubmit: Form['props']['onSubmit'] = async (data, onSuccess, onError) => {\n    try {\n      const response = await this.props.api.requestPromise('/auth/login/', {\n        method: 'POST',\n        data,\n      });\n      onSuccess(data);\n\n      // TODO(epurkhiser): There is likely more that needs to happen to update\n      // the application state after user login.\n\n      ConfigStore.set('user', response.user);\n\n      // TODO(epurkhiser): Reconfigure sentry SDK identity\n\n      browserHistory.push({pathname: response.nextUri});\n    } catch (e) {\n      if (!e.responseJSON || !e.responseJSON.errors) {\n        onError(e);\n        return;\n      }\n\n      let message = e.responseJSON.detail;\n      if (e.responseJSON.errors.__all__) {\n        message = e.responseJSON.errors.__all__;\n      }\n\n      this.setState({\n        errorMessage: message,\n        errors: e.responseJSON.errors || {},\n      });\n\n      onError(e);\n    }\n  };\n\n  render() {\n    const {errorMessage, errors} = this.state;\n    const {githubLoginLink, vstsLoginLink} = this.props.authConfig;\n\n    const hasLoginProvider = !!(githubLoginLink || vstsLoginLink);\n\n    return (\n      <ClassNames>\n        {({css}) => (\n          <FormWrapper hasLoginProvider={hasLoginProvider}>\n            <Form\n              submitLabel={t('Continue')}\n              onSubmit={this.handleSubmit}\n              footerClass={css`\n                ${formFooterClass}\n              `}\n              errorMessage={errorMessage}\n              extraButton={\n                <LostPasswordLink to=\"/account/recover/\">\n                  {t('Lost your password?')}\n                </LostPasswordLink>\n              }\n            >\n              <TextField\n                name=\"username\"\n                placeholder={t('username or email')}\n                label={t('Account')}\n                error={errors.username}\n                required\n              />\n              <PasswordField\n                name=\"password\"\n                placeholder={t('password')}\n                label={t('Password')}\n                error={errors.password}\n                required\n              />\n            </Form>\n            {hasLoginProvider && <LoginProviders {...{vstsLoginLink, githubLoginLink}} />}\n          </FormWrapper>\n        )}\n      </ClassNames>\n    );\n  }\n}\n\nconst FormWrapper = styled('div')<{hasLoginProvider: boolean}>`\n  display: grid;\n  gap: 60px;\n  grid-template-columns: ${p => (p.hasLoginProvider ? '1fr 0.8fr' : '1fr')};\n`;\n\nconst ProviderHeading = styled('div')`\n  margin: 0;\n  font-size: 15px;\n  font-weight: bold;\n  line-height: 24px;\n`;\n\nconst ProviderWrapper = styled('div')`\n  position: relative;\n  display: grid;\n  grid-auto-rows: max-content;\n  gap: ${space(1.5)};\n\n  &:before {\n    position: absolute;\n    display: block;\n    content: '';\n    top: 0;\n    bottom: 0;\n    left: -30px;\n    border-left: 1px solid ${p => p.theme.border};\n  }\n`;\n\nconst LostPasswordLink = styled(Link)`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default LoginForm;\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport Form from 'sentry/components/deprecatedforms/form';\nimport PasswordField from 'sentry/components/deprecatedforms/passwordField';\nimport RadioBooleanField from 'sentry/components/deprecatedforms/radioBooleanField';\nimport TextField from 'sentry/components/deprecatedforms/textField';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {AuthConfig} from 'sentry/types';\nimport {formFooterClass} from 'sentry/views/auth/login';\n\nconst SubscribeField = () => (\n  <RadioBooleanField\n    name=\"subscribe\"\n    yesLabel={t('Yes, I would like to receive updates via email')}\n    noLabel={t(\"No, I'd prefer not to receive these updates\")}\n    help={tct(\n      `We'd love to keep you updated via email with product and feature\n           announcements, promotions, educational materials, and events. Our\n           updates focus on relevant information, and we'll never sell your data\n           to third parties. See our [link] for more details.`,\n      {\n        link: <a href=\"https://sentry.io/privacy/\">Privacy Policy</a>,\n      }\n    )}\n  />\n);\n\ntype Props = {\n  api: Client;\n  authConfig: AuthConfig;\n};\n\ntype State = {\n  errorMessage: null | string;\n  errors: Record<string, string>;\n};\n\nclass RegisterForm extends Component<Props, State> {\n  state: State = {\n    errorMessage: null,\n    errors: {},\n  };\n\n  handleSubmit: Form['props']['onSubmit'] = async (data, onSuccess, onError) => {\n    const {api} = this.props;\n\n    try {\n      const response = await api.requestPromise('/auth/register/', {\n        method: 'POST',\n        data,\n      });\n      onSuccess(data);\n\n      // TODO(epurkhiser): There is more we need to do to setup the user. but\n      // definitely primarily we need to init our user.\n      ConfigStore.set('user', response.user);\n\n      browserHistory.push({pathname: response.nextUri});\n    } catch (e) {\n      if (!e.responseJSON || !e.responseJSON.errors) {\n        onError(e);\n        return;\n      }\n\n      let message = e.responseJSON.detail;\n      if (e.responseJSON.errors.__all__) {\n        message = e.responseJSON.errors.__all__;\n      }\n\n      this.setState({\n        errorMessage: message,\n        errors: e.responseJSON.errors || {},\n      });\n\n      onError(e);\n    }\n  };\n\n  render() {\n    const {hasNewsletter} = this.props.authConfig;\n    const {errorMessage, errors} = this.state;\n\n    return (\n      <ClassNames>\n        {({css}) => (\n          <Form\n            initialData={{subscribe: true}}\n            submitLabel={t('Continue')}\n            onSubmit={this.handleSubmit}\n            footerClass={css`\n              ${formFooterClass}\n            `}\n            errorMessage={errorMessage}\n            extraButton={\n              <PrivacyPolicyLink href=\"https://sentry.io/privacy/\">\n                {t('Privacy Policy')}\n              </PrivacyPolicyLink>\n            }\n          >\n            <TextField\n              name=\"name\"\n              placeholder={t('Jane Bloggs')}\n              label={t('Name')}\n              error={errors.name}\n              required\n            />\n            <TextField\n              name=\"username\"\n              placeholder={t('you@example.com')}\n              label={t('Email')}\n              error={errors.username}\n              required\n            />\n            <PasswordField\n              name=\"password\"\n              placeholder={t('something super secret')}\n              label={t('Password')}\n              error={errors.password}\n              required\n            />\n            {hasNewsletter && <SubscribeField />}\n          </Form>\n        )}\n      </ClassNames>\n    );\n  }\n}\n\nconst PrivacyPolicyLink = styled(ExternalLink)`\n  color: ${p => p.theme.gray300};\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default RegisterForm;\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\n\nimport {Client} from 'sentry/api';\nimport Form from 'sentry/components/deprecatedforms/form';\nimport TextField from 'sentry/components/deprecatedforms/textField';\nimport {t, tct} from 'sentry/locale';\nimport {AuthConfig} from 'sentry/types';\n\ntype Props = {\n  api: Client;\n  authConfig: AuthConfig;\n};\n\ntype State = {\n  errorMessage: string | null;\n};\n\nclass SsoForm extends Component<Props, State> {\n  state: State = {\n    errorMessage: null,\n  };\n\n  handleSubmit: Form['props']['onSubmit'] = async (data, onSuccess, onError) => {\n    const {api} = this.props;\n    try {\n      const response = await api.requestPromise('/auth/sso-locate/', {\n        method: 'POST',\n        data,\n      });\n      onSuccess(data);\n      browserHistory.push({pathname: response.nextUri});\n    } catch (e) {\n      if (!e.responseJSON) {\n        onError(e);\n        return;\n      }\n      const message = e.responseJSON.detail;\n      this.setState({errorMessage: message});\n      onError(e);\n    }\n  };\n\n  render() {\n    const {serverHostname} = this.props.authConfig;\n    const {errorMessage} = this.state;\n\n    return (\n      <Form\n        className=\"form-stacked\"\n        submitLabel={t('Continue')}\n        onSubmit={this.handleSubmit}\n        footerClass=\"auth-footer\"\n        errorMessage={errorMessage}\n      >\n        <TextField\n          name=\"organization\"\n          placeholder=\"acme\"\n          label={t('Organization ID')}\n          required\n          help={tct('Your ID is the slug after the hostname. e.g. [example] is [slug].', {\n            slug: <strong>acme</strong>,\n            example: <SlugExample slug=\"acme\" hostname={serverHostname} />,\n          })}\n        />\n      </Form>\n    );\n  }\n}\n\ntype SlugExampleProps = {\n  hostname: string;\n  slug: string;\n};\n\nconst SlugExample = ({hostname, slug}: SlugExampleProps) => (\n  <code>\n    {hostname}/<strong>{slug}</strong>\n  </code>\n);\n\nexport default SsoForm;\n"],"names":["Component","Fragment","LoadingError","LoadingIndicator","NavTabs","t","space","withApi","LoginForm","RegisterForm","SsoForm","FORM_COMPONENTS","login","register","sso","Login","loading","error","activeTab","authConfig","event","setState","preventDefault","api","props","response","requestPromise","vsts_login_link","github_login_link","google_login_link","config","vstsLoginLink","githubLoginLink","googleLoginLink","e","componentDidMount","fetchData","hasAuthProviders","state","render","FormComponent","tabs","canRegister","renderTab","key","label","disabled","handleSetTab","map","StyledLoadingError","Header","p","theme","border","Heading","AuthNavTabs","FormWrapper","formFooterClass","browserHistory","ClassNames","Button","Form","PasswordField","TextField","Link","IconGithub","IconGoogle","IconVsts","ConfigStore","LoginProviders","errorMessage","errors","data","onSuccess","onError","method","set","user","push","pathname","nextUri","responseJSON","message","detail","__all__","hasLoginProvider","css","handleSubmit","username","password","ProviderHeading","ProviderWrapper","LostPasswordLink","gray300","fontSizeMedium","textColor","RadioBooleanField","ExternalLink","tct","SubscribeField","link","hasNewsletter","subscribe","name","PrivacyPolicyLink","serverHostname","slug","example","SlugExample","hostname"],"sourceRoot":""}