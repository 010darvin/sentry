{"version":3,"file":"chunks/U2fSign.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/u2f/u2finterface.tsx","webpack:///./app/components/u2f/u2fsign.tsx","webpack:///./app/components/u2f/webAuthnHelper.tsx"],"sourcesContent":["import {Component} from 'react';\nimport * as Sentry from '@sentry/react';\nimport * as cbor from 'cbor-web';\n\nimport {base64urlToBuffer, bufferToBase64url} from 'sentry/components/u2f/webAuthnHelper';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {ChallengeData, Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype TapParams = {\n  challenge: string;\n  response: string;\n  isSuperuserModal?: boolean;\n  superuserAccessCategory?: string;\n  superuserReason?: string;\n};\n\ntype Props = {\n  challengeData: ChallengeData;\n  flowMode: string;\n  onTap: ({\n    response,\n    challenge,\n    isSuperuserModal,\n    superuserAccessCategory,\n    superuserReason,\n  }: TapParams) => Promise<void>;\n  organization: Organization;\n  silentIfUnsupported: boolean;\n  style?: React.CSSProperties;\n};\n\ntype State = {\n  challengeElement: HTMLInputElement | null;\n  deviceFailure: string | null;\n  failCount: number;\n  formElement: HTMLFormElement | null;\n  hasBeenTapped: boolean;\n  isSafari: boolean;\n  isSupported: boolean | null;\n  responseElement: HTMLInputElement | null;\n};\n\nclass U2fInterface extends Component<Props, State> {\n  state: State = {\n    isSupported: null,\n    formElement: null,\n    challengeElement: null,\n    hasBeenTapped: false,\n    deviceFailure: null,\n    responseElement: null,\n    isSafari: false,\n    failCount: 0,\n  };\n\n  componentDidMount() {\n    const supported = !!window.PublicKeyCredential;\n\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({isSupported: supported});\n\n    const isSafari =\n      navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome');\n\n    if (isSafari) {\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({\n        deviceFailure: 'safari: requires interaction',\n        isSafari,\n        hasBeenTapped: false,\n      });\n    }\n\n    if (supported && !isSafari) {\n      this.invokeU2fFlow();\n    }\n  }\n\n  getU2FResponse(data) {\n    if (!data.response) {\n      return JSON.stringify(data);\n    }\n\n    if (this.props.flowMode === 'sign') {\n      const authenticatorData = {\n        keyHandle: data.id,\n        clientData: bufferToBase64url(data.response.clientDataJSON),\n        signatureData: bufferToBase64url(data.response.signature),\n        authenticatorData: bufferToBase64url(data.response.authenticatorData),\n      };\n      return JSON.stringify(authenticatorData);\n    }\n    if (this.props.flowMode === 'enroll') {\n      const authenticatorData = {\n        id: data.id,\n        rawId: bufferToBase64url(data.rawId),\n        response: {\n          attestationObject: bufferToBase64url(data.response.attestationObject),\n          clientDataJSON: bufferToBase64url(data.response.clientDataJSON),\n        },\n        type: bufferToBase64url(data.type),\n      };\n      return JSON.stringify(authenticatorData);\n    }\n\n    throw new Error(`Unsupported flow mode '${this.props.flowMode}'`);\n  }\n\n  submitU2fResponse(promise) {\n    promise\n      .then(data => {\n        this.setState(\n          {\n            hasBeenTapped: true,\n          },\n          () => {\n            const u2fResponse = this.getU2FResponse(data);\n            const challenge = JSON.stringify(this.props.challengeData);\n\n            if (this.state.responseElement) {\n              // eslint-disable-next-line react/no-direct-mutation-state\n              this.state.responseElement.value = u2fResponse;\n            }\n\n            if (!this.props.onTap) {\n              this.state.formElement?.submit();\n              return;\n            }\n\n            this.props\n              .onTap({\n                response: u2fResponse,\n                challenge,\n              })\n              .catch(() => {\n                // This is kind of gross but I want to limit the amount of changes to this component\n                this.setState({\n                  deviceFailure: 'UNKNOWN_ERROR',\n                  hasBeenTapped: false,\n                });\n              });\n          }\n        );\n      })\n      .catch(err => {\n        let failure = 'DEVICE_ERROR';\n        // in some rare cases there is no metadata on the error which\n        // causes this to blow up badly.\n        if (err.metaData) {\n          if (err.metaData.type === 'DEVICE_INELIGIBLE') {\n            if (this.props.flowMode === 'enroll') {\n              failure = 'DUPLICATE_DEVICE';\n            } else {\n              failure = 'UNKNOWN_DEVICE';\n            }\n          } else if (err.metaData.type === 'BAD_REQUEST') {\n            failure = 'BAD_APPID';\n          }\n        }\n        // we want to know what is happening here.  There are some indicators\n        // that users are getting errors that should not happen through the\n        // regular u2f flow.\n        Sentry.captureException(err);\n        this.setState({\n          deviceFailure: failure,\n          hasBeenTapped: false,\n          failCount: this.state.failCount + 1,\n        });\n      });\n  }\n\n  webAuthnSignIn(publicKeyCredentialRequestOptions) {\n    const promise = navigator.credentials.get({\n      publicKey: publicKeyCredentialRequestOptions,\n    });\n    this.submitU2fResponse(promise);\n  }\n\n  webAuthnRegister(publicKey) {\n    const promise = navigator.credentials.create({\n      publicKey,\n    });\n    this.submitU2fResponse(promise);\n  }\n\n  invokeU2fFlow() {\n    if (this.props.flowMode === 'sign') {\n      const challengeArray = base64urlToBuffer(\n        this.props.challengeData.webAuthnAuthenticationData\n      );\n      const challenge = cbor.decodeFirst(challengeArray);\n      challenge\n        .then(data => {\n          this.webAuthnSignIn(data);\n        })\n        .catch(err => {\n          const failure = 'DEVICE_ERROR';\n          Sentry.captureException(err);\n          this.setState({\n            deviceFailure: failure,\n            hasBeenTapped: false,\n          });\n        });\n    } else if (this.props.flowMode === 'enroll') {\n      const challengeArray = base64urlToBuffer(\n        this.props.challengeData.webAuthnRegisterData\n      );\n      const challenge = cbor.decodeFirst(challengeArray);\n      // challenge contains a PublicKeyCredentialRequestOptions object for webauthn registration\n      challenge\n        .then(data => {\n          this.webAuthnRegister(data.publicKey);\n        })\n        .catch(err => {\n          const failure = 'DEVICE_ERROR';\n          Sentry.captureException(err);\n          this.setState({\n            deviceFailure: failure,\n            hasBeenTapped: false,\n          });\n        });\n    } else {\n      throw new Error(`Unsupported flow mode '${this.props.flowMode}'`);\n    }\n  }\n\n  onTryAgain = () => {\n    this.setState(\n      {hasBeenTapped: false, deviceFailure: null},\n      () => void this.invokeU2fFlow()\n    );\n  };\n\n  bindChallengeElement: React.RefCallback<HTMLInputElement> = ref => {\n    this.setState({\n      challengeElement: ref,\n      formElement: ref && ref.form,\n    });\n\n    if (ref) {\n      ref.value = JSON.stringify(this.props.challengeData);\n    }\n  };\n\n  bindResponseElement: React.RefCallback<HTMLInputElement> = ref =>\n    this.setState({responseElement: ref});\n\n  renderUnsupported() {\n    return this.props.silentIfUnsupported ? null : (\n      <div className=\"u2f-box\">\n        <div className=\"inner\">\n          <p className=\"error\">\n            {t(\n              `\n             Unfortunately your browser does not support U2F. You need to use\n             a different two-factor method or switch to a browser that supports\n             it (Google Chrome or Microsoft Edge).`\n            )}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  get canTryAgain() {\n    return this.state.deviceFailure !== 'BAD_APPID';\n  }\n\n  renderSafariWebAuthn = () => {\n    return (\n      <a onClick={this.onTryAgain} className=\"btn btn-primary\">\n        {this.props.flowMode === 'enroll'\n          ? t('Enroll with WebAuthn')\n          : t('Sign in with WebAuthn')}\n      </a>\n    );\n  };\n\n  renderFailure = () => {\n    const {deviceFailure} = this.state;\n    const supportMail = ConfigStore.get('supportEmail');\n    const support = supportMail ? (\n      <a href={'mailto:' + supportMail}>{supportMail}</a>\n    ) : (\n      <span>{t('Support')}</span>\n    );\n    if (this.state.isSafari && this.state.failCount === 0) {\n      return this.renderSafariWebAuthn();\n    }\n    return (\n      <div className=\"failure-message\">\n        <div>\n          <strong>{t('Error: ')}</strong>{' '}\n          {\n            {\n              UNKNOWN_ERROR: t('There was an unknown problem, please try again'),\n              DEVICE_ERROR: t('Your U2F device reported an error.'),\n              DUPLICATE_DEVICE: t('This device is already registered with Sentry.'),\n              UNKNOWN_DEVICE: t('The device you used for sign-in is unknown.'),\n              BAD_APPID: tct(\n                '[p1:The Sentry server administrator modified the ' +\n                  'device registrations.]' +\n                  '[p2:You need to remove and re-add the device to continue ' +\n                  'using your U2F device. Use a different sign-in method or ' +\n                  'contact [support] for assistance.]',\n                {\n                  p1: <p />,\n                  p2: <p />,\n                  support,\n                }\n              ),\n            }[deviceFailure || '']\n          }\n        </div>\n        {this.canTryAgain && (\n          <div style={{marginTop: 18}}>\n            <a onClick={this.onTryAgain} className=\"btn btn-primary\">\n              {t('Try Again')}\n            </a>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  renderBody() {\n    return this.state.deviceFailure ? this.renderFailure() : this.props.children;\n  }\n\n  renderPrompt() {\n    const {style} = this.props;\n\n    return (\n      <div\n        style={style}\n        className={\n          'u2f-box' +\n          (this.state.hasBeenTapped ? ' tapped' : '') +\n          (this.state.deviceFailure\n            ? this.state.failCount === 0 && this.state.isSafari\n              ? ' loading-dots'\n              : ' device-failure'\n            : '')\n        }\n      >\n        <div className=\"device-animation-frame\">\n          <div className=\"device-failed\" />\n          <div className=\"device-animation\" />\n          <div className=\"loading-dots\">\n            <span className=\"dot\" />\n            <span className=\"dot\" />\n            <span className=\"dot\" />\n          </div>\n        </div>\n        <input type=\"hidden\" name=\"challenge\" ref={this.bindChallengeElement} />\n        <input type=\"hidden\" name=\"response\" ref={this.bindResponseElement} />\n        <div className=\"inner\">{this.renderBody()}</div>\n      </div>\n    );\n  }\n\n  render() {\n    const {isSupported} = this.state;\n    // if we are still waiting for the browser to tell us if we can do u2f this\n    // will be null.\n    if (isSupported === null) {\n      return null;\n    }\n\n    if (!isSupported) {\n      return this.renderUnsupported();\n    }\n\n    return this.renderPrompt();\n  }\n}\n\nexport default withOrganization(U2fInterface);\n","import {t} from 'sentry/locale';\n\nimport U2fInterface from './u2finterface';\n\nconst MESSAGES = {\n  signin: t(\n    'Insert your U2F device or tap the button on it to confirm the sign-in request.'\n  ),\n  sudo: t('Alternatively you can use your U2F device to confirm the action.'),\n  enroll: t(\n    'To enroll your U2F device insert it now or tap the button on it to activate it.'\n  ),\n};\n\ntype InterfaceProps = React.ComponentProps<typeof U2fInterface>;\n\ntype Props = Omit<InterfaceProps, 'silentIfUnsupported' | 'flowMode'> & {\n  displayMode?: 'signin' | 'enroll' | 'sudo';\n};\n\nfunction U2fSign({displayMode = 'signin', ...props}: Props) {\n  const flowMode = displayMode === 'enroll' ? 'enroll' : 'sign';\n\n  return (\n    <U2fInterface\n      {...props}\n      silentIfUnsupported={displayMode === 'sudo'}\n      flowMode={flowMode}\n    >\n      <p>{MESSAGES[displayMode] ?? null}</p>\n    </U2fInterface>\n  );\n}\n\nexport default U2fSign;\n","// Copyright (c) 2019 GitHub, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"),\n// to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n// and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n// DEALINGS IN THE SOFTWARE.\n\n// below is from https://github.com/github/webauthn-json/tree/66322fc5c12184c5269691ab5abaac79545a3916\n\nexport function base64urlToBuffer(baseurl64String: string): ArrayBuffer {\n  // Base64url to Base64\n  const padding = '=='.slice(0, (4 - (baseurl64String.length % 4)) % 4);\n  const base64String = baseurl64String.replace(/-/g, '+').replace(/_/g, '/') + padding;\n\n  // Base64 to binary string\n  const str = atob(base64String);\n\n  // Binary string to buffer\n  const buffer = new ArrayBuffer(str.length);\n  const byteView = new Uint8Array(buffer);\n  for (let i = 0; i < str.length; i++) {\n    byteView[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function bufferToBase64url(buffer: ArrayBuffer): string {\n  // Buffer to binary string\n  const byteView = new Uint8Array(buffer);\n  let str = '';\n  for (const charCode of byteView) {\n    str += String.fromCharCode(charCode);\n  }\n\n  // Binary string to base64\n  const base64String = btoa(str);\n\n  // Base64 to base64url\n  // We assume that the base64url string is well-formed.\n  const base64urlString = base64String\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n  return base64urlString;\n}\n"],"names":["Component","Sentry","cbor","base64urlToBuffer","bufferToBase64url","t","tct","ConfigStore","withOrganization","U2fInterface","isSupported","formElement","challengeElement","hasBeenTapped","deviceFailure","responseElement","isSafari","failCount","setState","invokeU2fFlow","ref","form","value","JSON","stringify","props","challengeData","onTryAgain","flowMode","state","supportMail","get","support","renderSafariWebAuthn","UNKNOWN_ERROR","DEVICE_ERROR","DUPLICATE_DEVICE","UNKNOWN_DEVICE","BAD_APPID","p1","p2","canTryAgain","marginTop","componentDidMount","supported","window","PublicKeyCredential","navigator","userAgent","includes","getU2FResponse","data","response","authenticatorData","keyHandle","id","clientData","clientDataJSON","signatureData","signature","rawId","attestationObject","type","Error","submitU2fResponse","promise","then","u2fResponse","challenge","onTap","submit","catch","err","failure","metaData","captureException","webAuthnSignIn","publicKeyCredentialRequestOptions","credentials","publicKey","webAuthnRegister","create","challengeArray","webAuthnAuthenticationData","decodeFirst","webAuthnRegisterData","renderUnsupported","silentIfUnsupported","renderBody","renderFailure","children","renderPrompt","style","bindChallengeElement","bindResponseElement","render","MESSAGES","signin","sudo","enroll","U2fSign","displayMode","baseurl64String","padding","slice","length","base64String","replace","str","atob","buffer","ArrayBuffer","byteView","Uint8Array","i","charCodeAt","charCode","String","fromCharCode","btoa","base64urlString"],"sourceRoot":""}