{"version":3,"file":"chunks/app_views_alerts_rules_metric_details_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/events.tsx","webpack:///./app/components/alertBadge.tsx","webpack:///./app/components/charts/components/markArea.tsx","webpack:///./app/components/charts/eventsRequest.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/sessionsRequest.tsx","webpack:///./app/components/collapsePanel.tsx","webpack:///./app/components/keyValueTable.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/components/pageTimeRangeSelector.tsx","webpack:///./app/components/statusIndicator.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/getPeriod.tsx","webpack:///./app/utils/performance/urls.ts","webpack:///./app/utils/sessions.tsx","webpack:///./app/views/alerts/rules/details/utils.tsx","webpack:///./app/views/alerts/rules/metric/constants.tsx","webpack:///./app/views/alerts/rules/metric/details/body.tsx","webpack:///./app/views/alerts/rules/metric/details/constants.tsx","webpack:///./app/views/alerts/rules/metric/details/header.tsx","webpack:///./app/views/alerts/rules/metric/details/index.tsx","webpack:///./app/views/alerts/rules/metric/details/metricChart.tsx","webpack:///./app/views/alerts/rules/metric/details/metricChartOption.tsx","webpack:///./app/views/alerts/rules/metric/details/metricHistory.tsx","webpack:///./app/views/alerts/rules/metric/details/relatedIssues.tsx","webpack:///./app/views/alerts/rules/metric/details/relatedTransactions.tsx","webpack:///./app/views/alerts/rules/metric/details/sidebar.tsx","webpack:///./app/views/alerts/rules/metric/metricRulePresets.tsx","webpack:///./app/views/alerts/rules/metric/types.tsx","webpack:///./app/views/alerts/rules/metric/utils/getEventTypeFilter.tsx","webpack:///./app/views/alerts/rules/metric/utils/getMetricDatasetQueryExtras.tsx","webpack:///./app/views/alerts/rules/metric/utils/isCrashFreeAlert.tsx","webpack:///./app/views/alerts/types.tsx","webpack:///./app/views/alerts/utils/apiCalls.tsx","webpack:///./app/views/alerts/utils/getChangeStatus.tsx","webpack:///./app/views/alerts/utils/getMetricRuleDiscoverUrl.tsx","webpack:///./app/views/alerts/utils/index.tsx","webpack:///./app/views/alerts/wizard/options.tsx","webpack:///./app/views/alerts/wizard/utils.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///./app/views/releases/utils/index.tsx","webpack:///./app/views/releases/utils/sessionTerm.tsx","webpack:///../node_modules/lodash/_baseMean.js","webpack:///../node_modules/lodash/_baseSum.js","webpack:///../node_modules/lodash/mean.js","webpack:///../node_modules/lodash/negate.js","webpack:///../node_modules/lodash/omitBy.js"],"sourcesContent":["import {LocationDescriptor} from 'history';\nimport pick from 'lodash/pick';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {canIncludePreviousPeriod} from 'sentry/components/charts/utils';\nimport {\n  DateString,\n  EventsStats,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {LocationQuery} from 'sentry/utils/discover/eventView';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {PERFORMANCE_URL_PARAM} from 'sentry/utils/performance/constants';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\ntype Options = {\n  organization: OrganizationSummary;\n  partial: boolean;\n  comparisonDelta?: number;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  excludeOther?: boolean;\n  field?: string[];\n  generatePathname?: (org: OrganizationSummary) => string;\n  includePrevious?: boolean;\n  interval?: string;\n  limit?: number;\n  orderby?: string;\n  period?: string | null;\n  project?: Readonly<number[]>;\n  query?: string;\n  queryBatching?: QueryBatching;\n  queryExtras?: Record<string, string>;\n  referrer?: string;\n  start?: DateString;\n  team?: Readonly<string | string[]>;\n  topEvents?: number;\n  withoutZerofill?: boolean;\n  yAxis?: string | string[];\n};\n\n/**\n * Make requests to `events-stats` endpoint\n *\n * @param {Object} api API client instance\n * @param {Object} options Request parameters\n * @param {Object} options.organization Organization object\n * @param {Number[]} options.project List of project ids\n * @param {String[]} options.environment List of environments to query for\n * @param {Boolean} options.excludeOther Exclude the \"Other\" series when making a topEvents query\n * @param {String[]} options.team List of teams to query for\n * @param {String} options.period Time period to query for, in the format: <integer><units> where units are \"d\" or \"h\"\n * @param {String} options.interval Time interval to group results in, in the format: <integer><units> where units are \"d\", \"h\", \"m\", \"s\"\n * @param {Number} options.comparisonDelta Comparison delta for change alert event stats to include comparison stats\n * @param {Boolean} options.includePrevious Should request also return reqsults for previous period?\n * @param {Number} options.limit The number of rows to return\n * @param {String} options.query Search query\n * @param {QueryBatching} options.queryBatching A container for batching functions from a provider\n * @param {Record<string, string>} options.queryExtras A list of extra query parameters\n * @param {(org: OrganizationSummary) => string} options.generatePathname A function that returns an override for the pathname\n */\nexport const doEventsRequest = <IncludeAllArgsType extends boolean = false>(\n  api: Client,\n  {\n    organization,\n    project,\n    environment,\n    team,\n    period,\n    start,\n    end,\n    interval,\n    comparisonDelta,\n    includePrevious,\n    query,\n    yAxis,\n    field,\n    topEvents,\n    orderby,\n    partial,\n    withoutZerofill,\n    referrer,\n    queryBatching,\n    generatePathname,\n    queryExtras,\n    excludeOther,\n    includeAllArgs,\n  }: {includeAllArgs?: IncludeAllArgsType} & Options\n): IncludeAllArgsType extends true\n  ? Promise<\n      [EventsStats | MultiSeriesEventsStats, string | undefined, ResponseMeta | undefined]\n    >\n  : Promise<EventsStats | MultiSeriesEventsStats> => {\n  const pathname =\n    generatePathname?.(organization) ??\n    `/organizations/${organization.slug}/events-stats/`;\n\n  const shouldDoublePeriod = canIncludePreviousPeriod(includePrevious, period);\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      interval,\n      comparisonDelta,\n      project,\n      environment,\n      team,\n      query,\n      yAxis,\n      field,\n      topEvents,\n      orderby,\n      partial: partial ? '1' : undefined,\n      withoutZerofill: withoutZerofill ? '1' : undefined,\n      referrer: referrer ? referrer : 'api.organization-event-stats',\n      excludeOther: excludeOther ? '1' : undefined,\n    }).filter(([, value]) => typeof value !== 'undefined')\n  );\n\n  // Doubling period for absolute dates is not accurate unless starting and\n  // ending times are the same (at least for daily intervals). This is\n  // the tradeoff for now.\n  const periodObj = getPeriod({period, start, end}, {shouldDoublePeriod});\n\n  const queryObject = {\n    includeAllArgs,\n    query: {\n      ...urlQuery,\n      ...periodObj,\n      ...queryExtras,\n    },\n  };\n\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, pathname, queryObject);\n  }\n\n  return api.requestPromise<IncludeAllArgsType>(pathname, queryObject);\n};\n\nexport type EventQuery = {\n  field: string[];\n  query: string;\n  environment?: string[];\n  equation?: string[];\n  noPagination?: boolean;\n  per_page?: number;\n  project?: string | string[];\n  referrer?: string;\n  sort?: string | string[];\n  team?: string | string[];\n};\n\nexport type TagSegment = {\n  count: number;\n  name: string;\n  url: LocationDescriptor;\n  value: string;\n  isOther?: boolean;\n  key?: string;\n};\n\nexport type Tag = {\n  key: string;\n  topValues: Array<TagSegment>;\n};\n\n/**\n * Fetches tag facets for a query\n */\nexport function fetchTagFacets(\n  api: Client,\n  orgSlug: string,\n  query: EventQuery\n): Promise<Tag[]> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  return api.requestPromise(`/organizations/${orgSlug}/events-facets/`, {\n    query: queryOption,\n  });\n}\n\n/**\n * Fetches total count of events for a given query\n */\nexport function fetchTotalCount(\n  api: Client,\n  orgSlug: String,\n  query: EventQuery & LocationQuery\n): Promise<number> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  type Response = {\n    count: number;\n  };\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/events-meta/`, {\n      query: queryOption,\n    })\n    .then((res: Response) => res.count);\n}\n","import styled from '@emotion/styled';\n\nimport {\n  IconCheckmark,\n  IconDiamond,\n  IconExclamation,\n  IconFire,\n  IconIssues,\n} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Color} from 'sentry/utils/theme';\nimport {IncidentStatus} from 'sentry/views/alerts/types';\n\ntype Props = {\n  hideText?: boolean;\n  isIssue?: boolean;\n  status?: IncidentStatus;\n};\n\nfunction AlertBadge({status, hideText = false, isIssue}: Props) {\n  let statusText = t('Resolved');\n  let Icon = IconCheckmark;\n  let color: Color = 'green300';\n  if (isIssue) {\n    statusText = t('Issue');\n    Icon = IconIssues;\n    color = 'gray300';\n  } else if (status === IncidentStatus.CRITICAL) {\n    statusText = t('Critical');\n    Icon = IconFire;\n    color = 'red300';\n  } else if (status === IncidentStatus.WARNING) {\n    statusText = t('Warning');\n    Icon = IconExclamation;\n    color = 'yellow300';\n  }\n\n  return (\n    <Wrapper data-test-id=\"alert-badge\">\n      <AlertIconWrapper color={color} icon={Icon}>\n        <AlertIconBackground color={color} />\n        <Icon color=\"white\" />\n      </AlertIconWrapper>\n\n      {!hideText && <IncidentStatusValue color={color}>{statusText}</IncidentStatusValue>}\n    </Wrapper>\n  );\n}\n\nexport default AlertBadge;\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst AlertIconWrapper = styled('div')<{color: Color; icon: React.ReactNode}>`\n  width: 36px;\n  height: 36px;\n  position: relative;\n\n  svg:last-child {\n    width: ${p => (p.icon === IconIssues ? '13px' : '16px')};\n    z-index: 2;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n  }\n`;\n\nconst AlertIconBackground = styled(IconDiamond)<{color: Color}>`\n  width: 36px;\n  height: 36px;\n`;\n\nconst IncidentStatusValue = styled('div')`\n  margin-left: ${space(1)};\n`;\n","import 'echarts/lib/component/markArea';\n\nimport type {MarkAreaComponentOption} from 'echarts';\n\n/**\n * eCharts markArea\n *\n * See https://echarts.apache.org/en/option.html#series-line.markArea\n */\nexport default function MarkArea(\n  props: MarkAreaComponentOption\n): MarkAreaComponentOption {\n  return {\n    ...props,\n  };\n}\n","import {PureComponent} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omitBy from 'lodash/omitBy';\n\nimport {doEventsRequest} from 'sentry/actionCreators/events';\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\nimport {\n  canIncludePreviousPeriod,\n  getPreviousSeriesName,\n  isMultiSeriesStats,\n} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {\n  DateString,\n  EventsStats,\n  EventsStatsData,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport {stripEquationPrefix} from 'sentry/utils/discover/fields';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\nexport type TimeSeriesData = {\n  allTimeseriesData?: EventsStatsData;\n  comparisonTimeseriesData?: Series[];\n  originalPreviousTimeseriesData?: EventsStatsData | null;\n  originalTimeseriesData?: EventsStatsData;\n  previousTimeseriesData?: Series[] | null;\n  timeAggregatedData?: Series | {};\n  timeframe?: {end: number; start: number};\n  // timeseries data\n  timeseriesData?: Series[];\n  timeseriesTotals?: {count: number};\n};\n\ntype LoadingStatus = {\n  /**\n   * Whether there was an error retrieving data\n   */\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  errorMessage?: string;\n};\n\n// Can hold additional data from the root an events stat object (eg. start, end, order, isMetricsData).\ninterface AdditionalSeriesInfo {\n  isMetricsData?: boolean;\n}\n\nexport type RenderProps = LoadingStatus &\n  TimeSeriesData & {\n    results?: Series[]; // Chart with multiple series.\n    seriesAdditionalInfo?: Record<string, AdditionalSeriesInfo>;\n  };\n\ntype DefaultProps = {\n  /**\n   * Include data for previous period\n   */\n  includePrevious: boolean;\n  /**\n   * Transform the response data to be something ingestible by charts\n   */\n  includeTransformedData: boolean;\n  /**\n   * Interval to group results in\n   *\n   * e.g. 1d, 1h, 1m, 1s\n   */\n  interval: string;\n  /**\n   * number of rows to return\n   */\n  limit: number;\n  /**\n   * The query string to search events by\n   */\n  query: string;\n  /**\n   * Time delta for comparing intervals of alert metrics, in seconds\n   */\n  comparisonDelta?: number;\n  /**\n   * Absolute end date for query\n   */\n  end?: DateString;\n  /**\n   * Relative time period for query.\n   *\n   * Use `start` and `end` for absolute dates.\n   *\n   * e.g. 24h, 7d, 30d\n   */\n  period?: string | null;\n  /**\n   * Absolute start date for query\n   */\n  start?: DateString;\n};\n\ntype EventsRequestPartialProps = {\n  /**\n   * API client instance\n   */\n  api: Client;\n  children: (renderProps: RenderProps) => React.ReactNode;\n  organization: OrganizationSummary;\n  /**\n   * Whether or not to include the last partial bucket. This happens for example when the\n   * current time is 11:26 and the last bucket ranges from 11:25-11:30. This means that\n   * the last bucket contains 1 minute worth of data while the rest contains 5 minutes.\n   *\n   * This flag indicates whether or not this last bucket should be included in the result.\n   */\n  partial: boolean;\n  /**\n   * Discover needs confirmation to run >30 day >10 project queries,\n   * optional and when not passed confirmation is not required.\n   */\n  confirmedQuery?: boolean;\n  /**\n   * Name used for display current series dataset tooltip\n   */\n  currentSeriesNames?: string[];\n  /**\n   * Optional callback to further process raw events request response data\n   */\n  dataLoadedCallback?: (any: EventsStats | MultiSeriesEventsStats | null) => void;\n  /**\n   * List of environments to query\n   */\n  environment?: Readonly<string[]>;\n  /**\n   * Is query out of retention\n   */\n  expired?: boolean;\n  /**\n   * List of fields to group with when doing a topEvents request.\n   */\n  field?: string[];\n  /**\n   * Allows overriding the pathname.\n   */\n  generatePathname?: (org: OrganizationSummary) => string;\n  /**\n   * Hide error toast (used for pages which also query eventsV2). Stops error appearing as a toast.\n   */\n  hideError?: boolean;\n  /**\n   * Initial loading state\n   */\n  loading?: boolean;\n  /**\n   * Query name used for displaying error toast if it is out of retention\n   */\n  name?: string;\n  /**\n   * A way to control error if error handling is not owned by the toast.\n   */\n  onError?: (error: string) => void;\n  /**\n   * How to order results when getting top events.\n   */\n  orderby?: string;\n  previousSeriesNames?: string[];\n  /**\n   * List of project ids to query\n   */\n  project?: Readonly<number[]>;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * A unique name for what's triggering this request, see organization_events_stats for an allowlist\n   */\n  referrer?: string;\n  /**\n   * Should loading be shown.\n   */\n  showLoading?: boolean;\n  /**\n   * List of team ids to query\n   */\n  team?: Readonly<string | string[]>;\n  /**\n   * The number of top results to get. When set a multi-series result will be returned\n   * in the `results` child render function.\n   */\n  topEvents?: number;\n  /**\n   * Whether or not to zerofill results\n   */\n  withoutZerofill?: boolean;\n  /**\n   * The yAxis being plotted. If multiple yAxis are requested,\n   * the child render function will be called with `results`\n   */\n  yAxis?: string | string[];\n};\n\ntype TimeAggregationProps =\n  | {includeTimeAggregation: true; timeAggregationSeriesName: string}\n  | {includeTimeAggregation?: false; timeAggregationSeriesName?: undefined};\n\nexport type EventsRequestProps = DefaultProps &\n  TimeAggregationProps &\n  EventsRequestPartialProps;\n\ntype EventsRequestState = {\n  errored: boolean;\n  fetchedWithPrevious: boolean;\n  reloading: boolean;\n  timeseriesData: null | EventsStats | MultiSeriesEventsStats;\n  errorMessage?: string;\n};\n\nconst propNamesToIgnore = [\n  'api',\n  'children',\n  'organization',\n  'loading',\n  'queryBatching',\n  'generatePathname',\n];\nconst omitIgnoredProps = (props: EventsRequestProps) =>\n  omitBy(props, (_value, key) => propNamesToIgnore.includes(key));\n\nclass EventsRequest extends PureComponent<EventsRequestProps, EventsRequestState> {\n  static defaultProps: DefaultProps = {\n    period: undefined,\n    start: null,\n    end: null,\n    interval: '1d',\n    comparisonDelta: undefined,\n    limit: 15,\n    query: '',\n    includePrevious: true,\n    includeTransformedData: true,\n  };\n\n  state: EventsRequestState = {\n    reloading: !!this.props.loading,\n    errored: false,\n    timeseriesData: null,\n    fetchedWithPrevious: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: EventsRequestProps) {\n    if (isEqual(omitIgnoredProps(prevProps), omitIgnoredProps(this.props))) {\n      return;\n    }\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  private unmounting: boolean = false;\n\n  fetchData = async () => {\n    const {api, confirmedQuery, onError, expired, name, hideError, ...props} = this.props;\n    let timeseriesData: EventsStats | MultiSeriesEventsStats | null = null;\n\n    if (confirmedQuery === false) {\n      return;\n    }\n\n    this.setState(state => ({\n      reloading: state.timeseriesData !== null,\n      errored: false,\n      errorMessage: undefined,\n    }));\n\n    let errorMessage;\n    if (expired) {\n      errorMessage = t(\n        '%s has an invalid date range. Please try a more recent date range.',\n        name\n      );\n      addErrorMessage(errorMessage, {append: true});\n\n      this.setState({\n        errored: true,\n        errorMessage,\n      });\n    } else {\n      try {\n        api.clear();\n        timeseriesData = await doEventsRequest(api, props);\n      } catch (resp) {\n        if (resp && resp.responseJSON && resp.responseJSON.detail) {\n          errorMessage = resp.responseJSON.detail;\n        } else {\n          errorMessage = t('Error loading chart data');\n        }\n        if (!hideError) {\n          addErrorMessage(errorMessage);\n        }\n        if (onError) {\n          onError(errorMessage);\n        }\n        this.setState({\n          errored: true,\n          errorMessage,\n        });\n      }\n    }\n\n    if (this.unmounting) {\n      return;\n    }\n\n    this.setState({\n      reloading: false,\n      timeseriesData,\n      fetchedWithPrevious: props.includePrevious,\n    });\n    if (props.dataLoadedCallback) {\n      props.dataLoadedCallback(timeseriesData);\n    }\n  };\n\n  /**\n   * Retrieves dataset for the current period (since data can potentially\n   * contain previous period's data), as well as the previous period if\n   * possible.\n   *\n   * Returns `null` if data does not exist\n   */\n  getData = (\n    data: EventsStatsData\n  ): {current: EventsStatsData; previous: EventsStatsData | null} => {\n    const {fetchedWithPrevious} = this.state;\n    const {period, includePrevious} = this.props;\n\n    const hasPreviousPeriod =\n      fetchedWithPrevious || canIncludePreviousPeriod(includePrevious, period);\n    // Take the floor just in case, but data should always be divisible by 2\n    const dataMiddleIndex = Math.floor(data.length / 2);\n    return {\n      current: hasPreviousPeriod ? data.slice(dataMiddleIndex) : data,\n      previous: hasPreviousPeriod ? data.slice(0, dataMiddleIndex) : null,\n    };\n  };\n\n  // This aggregates all values per `timestamp`\n  calculateTotalsPerTimestamp(\n    data: EventsStatsData,\n    getName: (\n      timestamp: number,\n      countArray: {count: number}[],\n      i: number\n    ) => number = timestamp => timestamp * 1000\n  ): SeriesDataUnit[] {\n    return data.map(([timestamp, countArray], i) => ({\n      name: getName(timestamp, countArray, i),\n      value: countArray.reduce((acc, {count}) => acc + count, 0),\n    }));\n  }\n\n  /**\n   * Get previous period data, but transform timestamps so that data fits unto\n   * the current period's data axis\n   */\n  transformPreviousPeriodData(\n    current: EventsStatsData,\n    previous: EventsStatsData | null,\n    seriesName?: string\n  ): Series | null {\n    // Need the current period data array so we can take the timestamp\n    // so we can be sure the data lines up\n    if (!previous) {\n      return null;\n    }\n\n    return {\n      seriesName: seriesName ?? 'Previous',\n      data: this.calculateTotalsPerTimestamp(\n        previous,\n        (_timestamp, _countArray, i) => current[i][0] * 1000\n      ),\n      stack: 'previous',\n    };\n  }\n\n  /**\n   * Aggregate all counts for each time stamp\n   */\n  transformAggregatedTimeseries(data: EventsStatsData, seriesName: string = ''): Series {\n    return {\n      seriesName,\n      data: this.calculateTotalsPerTimestamp(data),\n    };\n  }\n\n  /**\n   * Transforms query response into timeseries data to be used in a chart\n   */\n  transformTimeseriesData(data: EventsStatsData, seriesName?: string): Series[] {\n    return [\n      {\n        seriesName: seriesName || 'Current',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce((acc, {count}) => acc + count, 0),\n        })),\n      },\n    ];\n  }\n\n  /**\n   * Transforms comparisonCount in query response into timeseries data to be used in a comparison chart for change alerts\n   */\n  transformComparisonTimeseriesData(data: EventsStatsData): Series[] {\n    return [\n      {\n        seriesName: 'comparisonCount()',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce(\n            (acc, {comparisonCount}) => acc + (comparisonCount ?? 0),\n            0\n          ),\n        })),\n      },\n    ];\n  }\n\n  processData(response: EventsStats, seriesIndex: number = 0, seriesName?: string) {\n    const {data, isMetricsData, totals} = response;\n    const {\n      includeTransformedData,\n      includeTimeAggregation,\n      timeAggregationSeriesName,\n      currentSeriesNames,\n      previousSeriesNames,\n      comparisonDelta,\n    } = this.props;\n    const {current, previous} = this.getData(data);\n    const transformedData = includeTransformedData\n      ? this.transformTimeseriesData(\n          current,\n          seriesName ?? currentSeriesNames?.[seriesIndex]\n        )\n      : [];\n    const transformedComparisonData =\n      includeTransformedData && comparisonDelta\n        ? this.transformComparisonTimeseriesData(current)\n        : [];\n    const previousData = includeTransformedData\n      ? this.transformPreviousPeriodData(\n          current,\n          previous,\n          (seriesName ? getPreviousSeriesName(seriesName) : undefined) ??\n            previousSeriesNames?.[seriesIndex]\n        )\n      : null;\n    const timeAggregatedData = includeTimeAggregation\n      ? this.transformAggregatedTimeseries(current, timeAggregationSeriesName || '')\n      : {};\n    const timeframe =\n      response.start && response.end\n        ? !previous\n          ? {\n              start: response.start * 1000,\n              end: response.end * 1000,\n            }\n          : {\n              // Find the midpoint of start & end since previous includes 2x data\n              start: (response.start + response.end) * 500,\n              end: response.end * 1000,\n            }\n        : undefined;\n\n    const processedData = {\n      data: transformedData,\n      comparisonData: transformedComparisonData,\n      allData: data,\n      originalData: current,\n      totals,\n      isMetricsData,\n      originalPreviousData: previous,\n      previousData,\n      timeAggregatedData,\n      timeframe,\n    };\n\n    return processedData;\n  }\n\n  render() {\n    const {children, showLoading, ...props} = this.props;\n    const {topEvents} = this.props;\n    const {timeseriesData, reloading, errored, errorMessage} = this.state;\n    // Is \"loading\" if data is null\n    const loading = this.props.loading || timeseriesData === null;\n\n    if (showLoading && loading) {\n      return <LoadingPanel data-test-id=\"events-request-loading\" />;\n    }\n    if (isMultiSeriesStats(timeseriesData, defined(topEvents))) {\n      // Convert multi-series results into chartable series. Multi series results\n      // are created when multiple yAxis are used or a topEvents request is made.\n      // Convert the timeseries data into a multi-series result set.\n      // As the server will have replied with a map like:\n      // {[titleString: string]: EventsStats}\n      let timeframe: {end: number; start: number} | undefined = undefined;\n      const seriesAdditionalInfo: Record<string, AdditionalSeriesInfo> = {};\n      const sortedTimeseriesData = Object.keys(timeseriesData)\n        .map(\n          (\n            seriesName: string,\n            index: number\n          ): [number, Series, Series | null, AdditionalSeriesInfo] => {\n            const seriesData: EventsStats = timeseriesData[seriesName];\n            const processedData = this.processData(\n              seriesData,\n              index,\n              stripEquationPrefix(seriesName)\n            );\n            if (!timeframe) {\n              timeframe = processedData.timeframe;\n            }\n            if (processedData.isMetricsData) {\n              seriesAdditionalInfo[seriesName] = {\n                isMetricsData: processedData.isMetricsData,\n              };\n            }\n            return [\n              seriesData.order || 0,\n              processedData.data[0],\n              processedData.previousData,\n              {isMetricsData: processedData.isMetricsData},\n            ];\n          }\n        )\n        .sort((a, b) => a[0] - b[0]);\n      const results: Series[] = sortedTimeseriesData.map(item => {\n        return item[1];\n      });\n      const previousTimeseriesData: Series[] | undefined = sortedTimeseriesData.some(\n        item => item[2] === null\n      )\n        ? undefined\n        : sortedTimeseriesData.map(item => {\n            return item[2] as Series;\n          });\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        results,\n        timeframe,\n        previousTimeseriesData,\n        seriesAdditionalInfo,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    if (timeseriesData) {\n      const {\n        data: transformedTimeseriesData,\n        comparisonData: transformedComparisonTimeseriesData,\n        allData: allTimeseriesData,\n        originalData: originalTimeseriesData,\n        totals: timeseriesTotals,\n        originalPreviousData: originalPreviousTimeseriesData,\n        previousData: previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        isMetricsData,\n      } = this.processData(timeseriesData);\n\n      const seriesAdditionalInfo = {\n        [this.props.currentSeriesNames?.[0] ?? 'current']: {isMetricsData},\n      };\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        // meta data,\n        seriesAdditionalInfo,\n        // timeseries data\n        timeseriesData: transformedTimeseriesData,\n        comparisonTimeseriesData: transformedComparisonTimeseriesData,\n        allTimeseriesData,\n        originalTimeseriesData,\n        timeseriesTotals,\n        originalPreviousTimeseriesData,\n        previousTimeseriesData: previousTimeseriesData\n          ? [previousTimeseriesData]\n          : previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    return children({\n      loading,\n      reloading,\n      errored,\n      errorMessage,\n      ...props,\n    });\n  }\n}\nexport default EventsRequest;\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import {Component} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omitBy from 'lodash/omitBy';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {Organization, SessionApiResponse, SessionFieldWithOperation} from 'sentry/types';\nimport {filterSessionsInTimeWindow, getSessionsInterval} from 'sentry/utils/sessions';\n\nconst propNamesToIgnore = ['api', 'children', 'organization'];\nconst omitIgnoredProps = (props: Props) =>\n  omitBy(props, (_value, key) => propNamesToIgnore.includes(key));\n\nexport type SessionsRequestRenderProps = {\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  response: SessionApiResponse | null;\n};\n\ntype Props = {\n  api: Client;\n  children: (renderProps: SessionsRequestRenderProps) => React.ReactNode;\n  field: SessionFieldWithOperation[];\n  organization: Organization;\n  end?: string;\n  environment?: string[];\n  groupBy?: string[];\n  interval?: string;\n  isDisabled?: boolean;\n  project?: number[];\n  query?: string;\n  shouldFilterSessionsInTimeWindow?: boolean;\n  start?: string;\n  statsPeriod?: string | null;\n};\n\ntype State = {\n  errored: boolean;\n  reloading: boolean;\n  response: SessionApiResponse | null;\n};\n\nclass SessionsRequest extends Component<Props, State> {\n  state: State = {\n    reloading: false,\n    errored: false,\n    response: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (isEqual(omitIgnoredProps(prevProps), omitIgnoredProps(this.props))) {\n      return;\n    }\n\n    this.fetchData();\n  }\n\n  get path() {\n    const {organization} = this.props;\n\n    return `/organizations/${organization.slug}/sessions/`;\n  }\n\n  get baseQueryParams() {\n    const {\n      project,\n      environment,\n      field,\n      statsPeriod,\n      start,\n      end,\n      query,\n      groupBy,\n      interval,\n      organization,\n    } = this.props;\n\n    return {\n      project,\n      environment,\n      field,\n      statsPeriod,\n      query,\n      groupBy,\n      start,\n      end,\n      interval: interval\n        ? interval\n        : getSessionsInterval(\n            {start, end, period: statsPeriod},\n            {highFidelity: organization.features.includes('minute-resolution-sessions')}\n          ),\n    };\n  }\n\n  fetchData = async () => {\n    const {api, isDisabled, shouldFilterSessionsInTimeWindow} = this.props;\n\n    if (isDisabled) {\n      return;\n    }\n\n    this.setState(state => ({\n      reloading: state.response !== null,\n      errored: false,\n    }));\n\n    try {\n      const response: SessionApiResponse = await api.requestPromise(this.path, {\n        query: this.baseQueryParams,\n      });\n\n      this.setState({\n        reloading: false,\n        response: shouldFilterSessionsInTimeWindow\n          ? filterSessionsInTimeWindow(\n              response,\n              this.baseQueryParams.start,\n              this.baseQueryParams.end\n            )\n          : response,\n      });\n    } catch (error) {\n      addErrorMessage(error.responseJSON?.detail ?? t('Error loading health data'));\n      this.setState({\n        reloading: false,\n        errored: true,\n      });\n    }\n  };\n\n  render() {\n    const {reloading, errored, response} = this.state;\n    const {children} = this.props;\n\n    const loading = response === null;\n\n    return children({\n      loading,\n      reloading,\n      errored,\n      response,\n    });\n  }\n}\n\nexport default SessionsRequest;\n","import {useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {IconChevron, IconList} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nexport const COLLAPSE_COUNT = 5;\n\ntype ChildRenderProps = {\n  isExpanded: boolean;\n  showMoreButton: React.ReactNode;\n};\n\ntype Props = {\n  children: (props: ChildRenderProps) => JSX.Element;\n  items: number;\n  buttonTitle?: string;\n  collapseCount?: number;\n  disableBorder?: boolean;\n};\n\n/**\n * Used to expand results.\n *\n * Our collapsible component was not used because we want our\n * expand button to be outside the list of children\n *\n */\nfunction CollapsePanel({\n  items,\n  children,\n  buttonTitle,\n  collapseCount = COLLAPSE_COUNT,\n  disableBorder = true,\n}: Props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  function expandResults() {\n    setIsExpanded(true);\n  }\n\n  return children({\n    isExpanded,\n    showMoreButton:\n      isExpanded || items <= collapseCount ? null : (\n        <ShowMoreButton\n          items={items}\n          buttonTitle={buttonTitle}\n          collapseCount={collapseCount}\n          disableBorder={disableBorder}\n          onClick={expandResults}\n        />\n      ),\n  });\n}\n\ntype ShowMoreButtonProps = {\n  items: number;\n  onClick: () => void;\n  buttonTitle?: string;\n  collapseCount?: number;\n  disableBorder?: boolean;\n};\n\nfunction ShowMoreButton({\n  items,\n  buttonTitle = 'More',\n  collapseCount = COLLAPSE_COUNT,\n  disableBorder = true,\n  onClick,\n}: ShowMoreButtonProps) {\n  return (\n    <ShowMore\n      onClick={onClick}\n      role=\"button\"\n      data-test-id=\"collapse-show-more\"\n      disableBorder={disableBorder}\n    >\n      <ShowMoreText>\n        <StyledIconList color=\"gray300\" />\n        {tct('Show [count] [buttonTitle]', {count: items - collapseCount, buttonTitle})}\n      </ShowMoreText>\n\n      <IconChevron color=\"gray300\" direction=\"down\" />\n    </ShowMore>\n  );\n}\n\nexport default CollapsePanel;\n\nconst ShowMore = styled('div')<{disableBorder: boolean}>`\n  display: flex;\n  align-items: center;\n  padding: ${space(1)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  cursor: pointer;\n  border-top: 1px solid ${p => p.theme.border};\n\n  ${p =>\n    !p.disableBorder &&\n    css`\n      border-left: 1px solid ${p.theme.border};\n      border-right: 1px solid ${p.theme.border};\n      border-bottom: 1px solid ${p.theme.border};\n      border-bottom-left-radius: ${p.theme.borderRadius};\n      border-bottom-right-radius: ${p.theme.borderRadius};\n      margin-bottom: ${space(2)};\n    `}\n`;\n\nconst StyledIconList = styled(IconList)`\n  margin-right: ${space(1)};\n`;\n\nconst ShowMoreText = styled('div')`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = {\n  keyName: React.ReactNode;\n  value: React.ReactNode;\n};\n\nexport const KeyValueTable = styled('dl')`\n  display: grid;\n  grid-template-columns: 50% 50%;\n`;\n\nexport const KeyValueTableRow = ({keyName, value}: Props) => {\n  return (\n    <Fragment>\n      <Key>{keyName}</Key>\n      <Value>{value}</Value>\n    </Fragment>\n  );\n};\n\nconst commonStyles = ({theme}: {theme: Theme}) => `\nfont-size: ${theme.fontSizeMedium};\npadding: ${space(0.5)} ${space(1)};\nfont-weight: normal;\nline-height: inherit;\n${p => p.theme.overflowEllipsis};\n&:nth-of-type(2n-1) {\n  background-color: ${theme.backgroundSecondary};\n}\n`;\n\nconst Key = styled('dt')`\n  ${commonStyles};\n  color: ${p => p.theme.textColor};\n`;\n\nconst Value = styled('dd')`\n  ${commonStyles};\n  color: ${p => p.theme.subText};\n  text-align: right;\n`;\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import styled from '@emotion/styled';\n\nimport TimeRangeSelector from 'sentry/components/organizations/timeRangeSelector';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = React.ComponentProps<typeof TimeRangeSelector> & {className?: string};\n\nfunction PageTimeRangeSelector({className, ...props}: Props) {\n  return (\n    <DropdownDate className={className}>\n      <TimeRangeSelector\n        key={`period:${props.relative}-start:${props.start}-end:${props.end}-utc:${props.utc}-defaultPeriod:${props.defaultPeriod}`}\n        label={<DropdownLabel>{t('Date Range:')}</DropdownLabel>}\n        detached\n        {...props}\n      />\n    </DropdownDate>\n  );\n}\n\nconst DropdownDate = styled(Panel)`\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 42px;\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n\n  > div {\n    width: 100%;\n    align-self: stretch;\n  }\n  /* StyledItemHeader used to show selected value of TimeRangeSelector */\n  > div > div:first-child > div {\n    padding: 0 ${space(2)};\n  }\n  /* Menu that dropdowns from TimeRangeSelector */\n  > div > div:last-child:not(:first-child) {\n    /* Remove awkward 1px width difference on dropdown due to border */\n    min-width: calc(100% + 2px);\n    transform: translateX(-1px);\n    right: auto;\n  }\n`;\n\nconst DropdownLabel = styled('span')`\n  text-align: left;\n  font-weight: 600;\n  color: ${p => p.theme.textColor};\n\n  > span:last-child {\n    font-weight: 400;\n  }\n`;\n\nexport default PageTimeRangeSelector;\n","import styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\n\ntype Props = {\n  status: string;\n  tooltipTitle: string;\n};\n\n/**\n * A badge/indicator at the beginning of the row that displays\n * the color of the status level (Warning, Error, Success, etc)\n *\n */\nfunction StatusIndicator({status, tooltipTitle}: Props) {\n  let color: string = 'error';\n\n  if (status === 'muted') {\n    color = 'muted';\n  } else if (status === 'info') {\n    color = 'info';\n  } else if (status === 'warning') {\n    color = 'warning';\n  } else if (status === 'success' || status === 'resolved') {\n    color = 'success';\n  }\n\n  return (\n    <Tooltip title={tooltipTitle} skipWrapper>\n      <StatusLevel color={color} />\n    </Tooltip>\n  );\n}\n\nexport default StatusIndicator;\n\nconst StatusLevel = styled('div')<{color: string}>`\n  position: absolute;\n  left: -1px;\n  width: 9px;\n  height: 15px;\n  border-radius: 0 3px 3px 0;\n\n  background-color: ${p => p.theme.alert[p.color].background};\n  & span {\n    display: block;\n    width: 9px;\n    height: 15px;\n  }\n`;\n","import {EventsMetaType, MetaType} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport {TransactionThresholdMetric} from 'sentry/views/performance/transactionSummary/transactionThresholdModal';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata from the events endpoint.\n */\nexport type EventsTableData = {\n  data: Array<TableDataRow>;\n  meta?: EventsMetaType;\n};\n\nexport type TableDataWithTitle = TableData & {title: string};\n\ntype DiscoverQueryPropsWithThresholds = DiscoverQueryProps & {\n  transactionName?: string;\n  transactionThreshold?: number;\n  transactionThresholdMetric?: TransactionThresholdMetric;\n};\n\ntype DiscoverQueryComponentProps = DiscoverQueryPropsWithThresholds & {\n  children: (props: GenericChildrenProps<TableData>) => React.ReactNode;\n  useEvents?: boolean;\n};\n\nfunction shouldRefetchData(\n  prevProps: DiscoverQueryPropsWithThresholds,\n  nextProps: DiscoverQueryPropsWithThresholds\n) {\n  return (\n    prevProps.transactionName !== nextProps.transactionName ||\n    prevProps.transactionThreshold !== nextProps.transactionThreshold ||\n    prevProps.transactionThresholdMetric !== nextProps.transactionThresholdMetric\n  );\n}\n\nfunction DiscoverQuery(props: DiscoverQueryComponentProps) {\n  const endpoint = props.useEvents ? 'events' : 'eventsv2';\n  const afterFetch = props.useEvents\n    ? (data, _) => {\n        const {fields, ...otherMeta} = data.meta ?? {};\n        return {\n          ...data,\n          meta: {...fields, ...otherMeta},\n        };\n      }\n    : undefined;\n  return (\n    <GenericDiscoverQuery<TableData, DiscoverQueryPropsWithThresholds>\n      route={endpoint}\n      shouldRefetchData={shouldRefetchData}\n      afterFetch={afterFetch}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(DiscoverQuery);\n","import moment from 'moment';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DateString} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\n\ntype DateObject = {\n  /**\n   * Ending date object\n   */\n  end?: DateString;\n  /**\n   * Relative period string in format \"<int><unit>\" (e.g. 4d for 4 days)\n   */\n  period?: string | null;\n  /**\n   * Starting date object\n   */\n  start?: DateString;\n};\n\ntype Options = {\n  /**\n   * Doubles the given period (useful for getting previous period data)\n   */\n  shouldDoublePeriod?: boolean;\n};\n\n/**\n * Gets the period to query with if we need to double the initial period in order\n * to get data for the previous period\n *\n * Returns an object with either a period or start/end dates ({statsPeriod: string} or {start: string, end: string})\n */\nexport function getPeriod(\n  {period, start, end}: DateObject,\n  {shouldDoublePeriod}: Options = {}\n) {\n  if (!period && !start && !end) {\n    period = DEFAULT_STATS_PERIOD;\n  }\n\n  // you can not specify both relative and absolute periods\n  // relative period takes precedence\n  if (period) {\n    if (!shouldDoublePeriod) {\n      return {statsPeriod: period};\n    }\n    const [, periodNumber, periodLength] = period.match(/([0-9]+)([mhdw])/)!;\n\n    return {statsPeriod: `${parseInt(periodNumber, 10) * 2}${periodLength}`};\n  }\n\n  if (!start || !end) {\n    throw new Error('start and end required');\n  }\n\n  const formattedStart = getUtcDateString(start);\n  const formattedEnd = getUtcDateString(end);\n\n  if (shouldDoublePeriod) {\n    // get duration of end - start and double\n    const diff = moment(end).diff(moment(start));\n\n    const previousPeriodStart = moment(start).subtract(diff);\n\n    // This is not as accurate as having 2 start/end objs\n    return {\n      start: getUtcDateString(previousPeriodStart),\n      end: formattedEnd,\n    };\n  }\n\n  return {\n    start: formattedStart,\n    end: formattedEnd,\n  };\n}\n","import {LocationDescriptor, Query} from 'history';\n\nimport {spanTargetHash} from 'sentry/components/events/interfaces/spans/utils';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport function getTransactionDetailsUrl(\n  orgSlug: Organization['slug'],\n  eventSlug: string,\n  transaction?: string,\n  query?: Query,\n  spanId?: string\n): LocationDescriptor {\n  const locationQuery = {\n    ...(query || {}),\n    transaction,\n  };\n  if (!defined(locationQuery.transaction)) {\n    delete locationQuery.transaction;\n  }\n\n  const target = {\n    pathname: `/organizations/${orgSlug}/performance/${eventSlug}/`,\n    query: locationQuery,\n    hash: defined(spanId) ? spanTargetHash(spanId) : undefined,\n  };\n  if (!defined(target.hash)) {\n    delete target.hash;\n  }\n\n  return target;\n}\n","import compact from 'lodash/compact';\nimport mean from 'lodash/mean';\nimport moment from 'moment';\n\nimport {\n  DateTimeObject,\n  getDiffInMinutes,\n  SIX_HOURS,\n  SIXTY_DAYS,\n  THIRTY_DAYS,\n} from 'sentry/components/charts/utils';\nimport {SessionApiResponse, SessionFieldWithOperation, SessionStatus} from 'sentry/types';\nimport {SeriesDataUnit} from 'sentry/types/echarts';\nimport {defined, percent} from 'sentry/utils';\nimport {Theme} from 'sentry/utils/theme';\nimport {getCrashFreePercent, getSessionStatusPercent} from 'sentry/views/releases/utils';\nimport {sessionTerm} from 'sentry/views/releases/utils/sessionTerm';\n\n/**\n * If the time window is less than or equal 10, seconds will be displayed on the graphs\n */\nexport const MINUTES_THRESHOLD_TO_DISPLAY_SECONDS = 10;\n\nexport function getCount(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation\n) {\n  return groups.reduce((acc, group) => acc + group.totals[field], 0);\n}\n\nexport function getCountAtIndex(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation,\n  index: number\n) {\n  return groups.reduce((acc, group) => acc + group.series[field][index], 0);\n}\n\nexport function getCrashFreeRate(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation\n) {\n  const crashedRate = getSessionStatusRate(groups, field, SessionStatus.CRASHED);\n\n  return defined(crashedRate) ? getCrashFreePercent(100 - crashedRate) : null;\n}\n\nexport function getSeriesAverage(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation\n) {\n  const totalCount = getCount(groups, field);\n\n  const dataPoints = groups.filter(group => !!group.totals[field]).length;\n\n  return !defined(totalCount) || dataPoints === null || totalCount === 0\n    ? null\n    : totalCount / dataPoints;\n}\n\nexport function getSeriesSum(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation,\n  intervals: SessionApiResponse['intervals'] = []\n) {\n  const dataPointsSums: number[] = Array(intervals.length).fill(0);\n  const groupSeries = groups.map(group => group.series[field]);\n\n  groupSeries.forEach(series => {\n    series.forEach((dataPoint, idx) => (dataPointsSums[idx] += dataPoint));\n  });\n\n  return dataPointsSums;\n}\n\nexport function getSessionStatusRate(\n  groups: SessionApiResponse['groups'] = [],\n  field: SessionFieldWithOperation,\n  status: SessionStatus\n) {\n  const totalCount = getCount(groups, field);\n\n  const crashedCount = getCount(\n    groups.filter(({by}) => by['session.status'] === status),\n    field\n  );\n\n  return !defined(totalCount) || totalCount === 0\n    ? null\n    : percent(crashedCount ?? 0, totalCount ?? 0);\n}\n\nexport function getCrashFreeRateSeries(\n  groups: SessionApiResponse['groups'] = [],\n  intervals: SessionApiResponse['intervals'] = [],\n  field: SessionFieldWithOperation\n): SeriesDataUnit[] {\n  return compact(\n    intervals.map((interval, i) => {\n      const intervalTotalSessions = groups.reduce(\n        (acc, group) => acc + (group.series[field]?.[i] ?? 0),\n        0\n      );\n\n      const intervalCrashedSessions =\n        groups.find(group => group.by['session.status'] === SessionStatus.CRASHED)\n          ?.series[field]?.[i] ?? 0;\n\n      const crashedSessionsPercent = percent(\n        intervalCrashedSessions,\n        intervalTotalSessions\n      );\n\n      if (intervalTotalSessions === 0) {\n        return null;\n      }\n\n      return {\n        name: interval,\n        value: getCrashFreePercent(100 - crashedSessionsPercent),\n      };\n    })\n  );\n}\n\nexport function getSessionStatusRateSeries(\n  groups: SessionApiResponse['groups'] = [],\n  intervals: SessionApiResponse['intervals'] = [],\n  field: SessionFieldWithOperation,\n  status: SessionStatus\n): SeriesDataUnit[] {\n  return compact(\n    intervals.map((interval, i) => {\n      const intervalTotalSessions = groups.reduce(\n        (acc, group) => acc + group.series[field][i],\n        0\n      );\n\n      const intervalStatusSessions =\n        groups.find(group => group.by['session.status'] === status)?.series[field][i] ??\n        0;\n\n      const statusSessionsPercent = percent(\n        intervalStatusSessions,\n        intervalTotalSessions\n      );\n\n      if (intervalTotalSessions === 0) {\n        return null;\n      }\n\n      return {\n        name: interval,\n        value: getSessionStatusPercent(statusSessionsPercent),\n      };\n    })\n  );\n}\n\nexport function getSessionP50Series(\n  groups: SessionApiResponse['groups'] = [],\n  intervals: SessionApiResponse['intervals'] = [],\n  field: SessionFieldWithOperation,\n  valueFormatter?: (value: number) => number\n): SeriesDataUnit[] {\n  return compact(\n    intervals.map((interval, i) => {\n      const meanValue = mean(\n        groups.map(group => group.series[field][i]).filter(v => !!v)\n      );\n\n      if (!meanValue) {\n        return null;\n      }\n\n      return {\n        name: interval,\n        value:\n          typeof valueFormatter === 'function' ? valueFormatter(meanValue) : meanValue,\n      };\n    })\n  );\n}\n\nexport function getAdoptionSeries(\n  releaseGroups: SessionApiResponse['groups'] = [],\n  allGroups: SessionApiResponse['groups'] = [],\n  intervals: SessionApiResponse['intervals'] = [],\n  field: SessionFieldWithOperation\n): SeriesDataUnit[] {\n  return intervals.map((interval, i) => {\n    const intervalReleaseSessions = releaseGroups.reduce(\n      (acc, group) => acc + (group.series[field]?.[i] ?? 0),\n      0\n    );\n    const intervalTotalSessions = allGroups.reduce(\n      (acc, group) => acc + (group.series[field]?.[i] ?? 0),\n      0\n    );\n\n    const intervalAdoption = percent(intervalReleaseSessions, intervalTotalSessions);\n\n    return {\n      name: interval,\n      value: Math.round(intervalAdoption),\n    };\n  });\n}\n\nexport function getCountSeries(\n  field: SessionFieldWithOperation,\n  group?: SessionApiResponse['groups'][0],\n  intervals: SessionApiResponse['intervals'] = []\n): SeriesDataUnit[] {\n  return intervals.map((interval, index) => ({\n    name: interval,\n    value: group?.series[field][index] ?? 0,\n  }));\n}\n\nexport function initSessionsChart(theme: Theme) {\n  const colors = theme.charts.getColorPalette(14);\n  return {\n    [SessionStatus.HEALTHY]: {\n      seriesName: sessionTerm.healthy,\n      data: [],\n      color: theme.green300,\n      areaStyle: {\n        color: theme.green300,\n        opacity: 1,\n      },\n      lineStyle: {\n        opacity: 0,\n        width: 0.4,\n      },\n    },\n    [SessionStatus.ERRORED]: {\n      seriesName: sessionTerm.errored,\n      data: [],\n      color: colors[12],\n      areaStyle: {\n        color: colors[12],\n        opacity: 1,\n      },\n      lineStyle: {\n        opacity: 0,\n        width: 0.4,\n      },\n    },\n    [SessionStatus.ABNORMAL]: {\n      seriesName: sessionTerm.abnormal,\n      data: [],\n      color: colors[15],\n      areaStyle: {\n        color: colors[15],\n        opacity: 1,\n      },\n      lineStyle: {\n        opacity: 0,\n        width: 0.4,\n      },\n    },\n    [SessionStatus.CRASHED]: {\n      seriesName: sessionTerm.crashed,\n      data: [],\n      color: theme.red300,\n      areaStyle: {\n        color: theme.red300,\n        opacity: 1,\n      },\n      lineStyle: {\n        opacity: 0,\n        width: 0.4,\n      },\n    },\n  };\n}\n\ntype GetSessionsIntervalOptions = {\n  highFidelity?: boolean;\n};\n\nexport function getSessionsInterval(\n  datetimeObj: DateTimeObject,\n  {highFidelity}: GetSessionsIntervalOptions = {}\n) {\n  const diffInMinutes = getDiffInMinutes(datetimeObj);\n\n  if (moment(datetimeObj.start).isSameOrBefore(moment().subtract(30, 'days'))) {\n    // we cannot use sub-hour session resolution on buckets older than 30 days\n    highFidelity = false;\n  }\n\n  if (diffInMinutes >= SIXTY_DAYS) {\n    return '1d';\n  }\n\n  if (diffInMinutes >= THIRTY_DAYS) {\n    return '4h';\n  }\n\n  if (diffInMinutes >= SIX_HOURS) {\n    return '1h';\n  }\n\n  // limit on backend for sub-hour session resolution is set to six hours\n  if (highFidelity) {\n    if (diffInMinutes <= MINUTES_THRESHOLD_TO_DISPLAY_SECONDS) {\n      // This only works for metrics-based session stats.\n      // Backend will silently replace with '1m' for session-based stats.\n      return '10s';\n    }\n\n    if (diffInMinutes <= 30) {\n      return '1m';\n    }\n\n    return '5m';\n  }\n\n  return '1h';\n}\n\n// Sessions API can only round intervals to the closest hour - this is especially problematic when using sub-hour resolution.\n// We filter out results that are out of bounds on frontend and recalculate totals.\nexport function filterSessionsInTimeWindow(\n  sessions: SessionApiResponse,\n  start?: string,\n  end?: string\n) {\n  if (!start || !end) {\n    return sessions;\n  }\n\n  const filteredIndexes: number[] = [];\n\n  const intervals = sessions.intervals.filter((interval, index) => {\n    const isBetween = moment\n      .utc(interval)\n      .isBetween(moment.utc(start), moment.utc(end), undefined, '[]');\n    if (isBetween) {\n      filteredIndexes.push(index);\n    }\n\n    return isBetween;\n  });\n\n  const groups = sessions.groups.map(group => {\n    const series = {};\n    const totals = {};\n    Object.keys(group.series).forEach(field => {\n      totals[field] = 0;\n      series[field] = group.series[field].filter((value, index) => {\n        const isBetween = filteredIndexes.includes(index);\n        if (isBetween) {\n          totals[field] = (totals[field] ?? 0) + value;\n        }\n\n        return isBetween;\n      });\n      if (field.startsWith('p50')) {\n        totals[field] = mean(series[field]);\n      }\n      if (field.startsWith('count_unique')) {\n        /* E.g. users\n        We cannot sum here because users would not be unique anymore.\n        User can be repeated and part of multiple buckets in series but it's still that one user so totals would be wrong.\n        This operation is not 100% correct, because we are filtering series in time window but the total is for unfiltered series (it's the closest thing we can do right now) */\n        totals[field] = group.totals[field];\n      }\n    });\n    return {...group, series, totals};\n  });\n\n  return {\n    start: intervals[0],\n    end: intervals[intervals.length - 1],\n    query: sessions.query,\n    intervals,\n    groups,\n  };\n}\n","import moment from 'moment';\n\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport {\n  API_INTERVAL_POINTS_LIMIT,\n  API_INTERVAL_POINTS_MIN,\n} from 'sentry/views/alerts/rules/metric/details/constants';\nimport type {Incident} from 'sentry/views/alerts/types';\n\n/**\n * Retrieve start/end date of a metric alert incident for the events graph\n * Will show at least 150 and no more than 10,000 data points\n */\nexport function buildMetricGraphDateRange(incident: Incident): {\n  end: string;\n  start: string;\n} {\n  const timeWindowMillis = incident.alertRule.timeWindow * 60 * 1000;\n  const minRange = timeWindowMillis * API_INTERVAL_POINTS_MIN;\n  const maxRange = timeWindowMillis * API_INTERVAL_POINTS_LIMIT;\n  const now = moment.utc();\n  const startDate = moment.utc(incident.dateStarted);\n  // make a copy of now since we will modify endDate and use now for comparing\n  const endDate = incident.dateClosed ? moment.utc(incident.dateClosed) : moment(now);\n  const incidentRange = Math.max(endDate.diff(startDate), 3 * timeWindowMillis);\n  const range = Math.min(maxRange, Math.max(minRange, incidentRange));\n  const halfRange = moment.duration(range / 2);\n\n  return {\n    start: getUtcDateString(startDate.subtract(halfRange)),\n    end: getUtcDateString(moment.min(endDate.add(halfRange), now)),\n  };\n}\n","import {t} from 'sentry/locale';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {AggregationKeyWithAlias, LooseFieldKey} from 'sentry/utils/discover/fields';\nimport {AggregationKey} from 'sentry/utils/fields';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {\n  AlertRuleComparisonType,\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  Dataset,\n  Datasource,\n  EventTypes,\n  TimeWindow,\n  Trigger,\n  UnsavedMetricRule,\n} from 'sentry/views/alerts/rules/metric/types';\nimport {\n  DATA_SOURCE_TO_SET_AND_EVENT_TYPES,\n  getQueryDatasource,\n  isSessionAggregate,\n} from 'sentry/views/alerts/utils';\nimport {AlertType, WizardRuleTemplate} from 'sentry/views/alerts/wizard/options';\n\nexport const DEFAULT_COUNT_TIME_WINDOW = 1; // 1min\nexport const DEFAULT_CHANGE_TIME_WINDOW = 60; // 1h\nexport const DEFAULT_CHANGE_COMP_DELTA = 10080; // 1w\n\nexport const DEFAULT_AGGREGATE = 'count()';\nexport const DEFAULT_TRANSACTION_AGGREGATE = 'p95(transaction.duration)';\n\nexport const DATASET_EVENT_TYPE_FILTERS = {\n  [Dataset.ERRORS]: 'event.type:error',\n  [Dataset.TRANSACTIONS]: 'event.type:transaction',\n  [Dataset.GENERIC_METRICS]: 'event.type:transaction',\n} as const;\n\nexport const DATASOURCE_EVENT_TYPE_FILTERS = {\n  [Datasource.ERROR_DEFAULT]: 'event.type:[error, default]',\n  [Datasource.ERROR]: 'event.type:error',\n  [Datasource.DEFAULT]: 'event.type:default',\n  [Datasource.TRANSACTION]: 'event.type:transaction',\n} as const;\n\nexport type OptionConfig = {\n  aggregations: AggregationKeyWithAlias[];\n  fields: LooseFieldKey[];\n  measurementKeys?: string[];\n};\n\n/**\n * Allowed error aggregations for alerts\n */\nexport const errorFieldConfig: OptionConfig = {\n  aggregations: [AggregationKey.Count, AggregationKey.CountUnique],\n  fields: ['user'],\n};\n\nconst commonAggregations = [\n  AggregationKey.Avg,\n  AggregationKey.Percentile,\n  AggregationKey.P50,\n  AggregationKey.P75,\n  AggregationKey.P95,\n  AggregationKey.P99,\n  AggregationKey.P100,\n];\n\nconst allAggregations = [\n  ...commonAggregations,\n  AggregationKey.FailureRate,\n  AggregationKey.Apdex,\n  AggregationKey.Count,\n];\n\nexport const DuplicateMetricFields: string[] = [\n  'dataset',\n  'eventTypes',\n  'aggregate',\n  'query',\n  'timeWindow',\n  'thresholdPeriod',\n  'projects',\n  'environment',\n  'resolveThreshold',\n  'thresholdType',\n  'owner',\n  'name',\n  'projectId',\n  'comparisonDelta',\n];\n\nexport const DuplicateTriggerFields: string[] = ['alertThreshold', 'label'];\n\nexport const DuplicateActionFields: string[] = [\n  'type',\n  'targetType',\n  'targetIdentifier',\n  'inputChannelId',\n  'options',\n];\n\nexport const COMPARISON_DELTA_OPTIONS = [\n  {value: 5, label: t('same time 5 minutes ago')}, // 5 minutes\n  {value: 15, label: t('same time 15 minutes ago')}, // 15 minutes\n  {value: 60, label: t('same time one hour ago')}, // one hour\n  {value: 1440, label: t('same time one day ago')}, // one day\n  {value: 10080, label: t('same time one week ago')}, // one week\n  {value: 43200, label: t('same time one month ago')}, // 30 days\n];\n\nexport function getWizardAlertFieldConfig(\n  alertType: AlertType,\n  dataset: Dataset\n): OptionConfig {\n  if (alertType === 'custom' && dataset === Dataset.ERRORS) {\n    return errorFieldConfig;\n  }\n  // If user selected apdex we must include that in the OptionConfig as it has a user specified column\n  const aggregations =\n    alertType === 'apdex' || alertType === 'custom'\n      ? allAggregations\n      : commonAggregations;\n  return {\n    aggregations,\n    fields: ['transaction.duration'],\n    measurementKeys: Object.keys(WEB_VITAL_DETAILS),\n  };\n}\n\n/**\n * Allowed transaction aggregations for alerts\n */\nexport const transactionFieldConfig: OptionConfig = {\n  aggregations: allAggregations,\n  fields: ['transaction.duration'],\n  measurementKeys: Object.keys(WEB_VITAL_DETAILS),\n};\n\nexport function createDefaultTrigger(label: AlertRuleTriggerType): Trigger {\n  return {\n    label,\n    alertThreshold: '',\n    actions: [],\n  };\n}\n\nexport function createDefaultRule(\n  defaultRuleOptions: Partial<UnsavedMetricRule> = {}\n): UnsavedMetricRule {\n  return {\n    dataset: Dataset.ERRORS,\n    eventTypes: [EventTypes.ERROR],\n    aggregate: DEFAULT_AGGREGATE,\n    query: '',\n    timeWindow: 60,\n    thresholdPeriod: 1,\n    triggers: [\n      createDefaultTrigger(AlertRuleTriggerType.CRITICAL),\n      createDefaultTrigger(AlertRuleTriggerType.WARNING),\n    ],\n    projects: [],\n    environment: null,\n    resolveThreshold: '',\n    thresholdType: AlertRuleThresholdType.ABOVE,\n    ...defaultRuleOptions,\n  };\n}\n\n/**\n * Create an unsaved alert from a discover EventView object\n */\nexport function createRuleFromEventView(eventView: EventView): UnsavedMetricRule {\n  const parsedQuery = getQueryDatasource(eventView.query);\n  const datasetAndEventtypes = parsedQuery\n    ? DATA_SOURCE_TO_SET_AND_EVENT_TYPES[parsedQuery.source]\n    : DATA_SOURCE_TO_SET_AND_EVENT_TYPES.error;\n\n  let aggregate = eventView.getYAxis();\n  if (\n    datasetAndEventtypes.dataset === 'transactions' &&\n    /^p\\d{2,3}\\(\\)/.test(eventView.getYAxis())\n  ) {\n    // p95() -> p95(transaction.duration)\n    aggregate = eventView.getYAxis().slice(0, 3) + '(transaction.duration)';\n  }\n\n  return {\n    ...createDefaultRule(),\n    ...datasetAndEventtypes,\n    query: parsedQuery?.query ?? eventView.query,\n    aggregate,\n    environment: eventView.environment.length ? eventView.environment[0] : null,\n  };\n}\n\nexport function createRuleFromWizardTemplate(\n  wizardTemplate: WizardRuleTemplate\n): UnsavedMetricRule {\n  const {eventTypes, aggregate, dataset} = wizardTemplate;\n  const defaultRuleOptions: Partial<UnsavedMetricRule> = {};\n\n  if (isSessionAggregate(aggregate)) {\n    defaultRuleOptions.thresholdType = AlertRuleThresholdType.BELOW;\n    defaultRuleOptions.timeWindow = TimeWindow.ONE_HOUR;\n  }\n\n  if (aggregate.includes('apdex')) {\n    defaultRuleOptions.thresholdType = AlertRuleThresholdType.BELOW;\n  }\n\n  return {\n    ...createDefaultRule(defaultRuleOptions),\n    eventTypes: [eventTypes],\n    aggregate,\n    dataset,\n  };\n}\n\nexport function getThresholdUnits(\n  aggregate: string,\n  comparisonType: AlertRuleComparisonType\n): string {\n  // cls is a number not a measurement of time\n  if (\n    isSessionAggregate(aggregate) ||\n    comparisonType === AlertRuleComparisonType.CHANGE\n  ) {\n    return '%';\n  }\n\n  if (aggregate.includes('measurements.cls')) {\n    return '';\n  }\n\n  if (aggregate.includes('duration') || aggregate.includes('measurements')) {\n    return 'ms';\n  }\n\n  return '';\n}\n","import {Component, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport moment from 'moment';\n\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport {getInterval} from 'sentry/components/charts/utils';\nimport Duration from 'sentry/components/duration';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport {ChangeData} from 'sentry/components/organizations/timeRangeSelector';\nimport PageTimeRangeSelector from 'sentry/components/pageTimeRangeSelector';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport MetricHistory from 'sentry/views/alerts/rules/metric/details/metricHistory';\nimport {Dataset, MetricRule, TimePeriod} from 'sentry/views/alerts/rules/metric/types';\nimport {extractEventTypeFilterFromRule} from 'sentry/views/alerts/rules/metric/utils/getEventTypeFilter';\n\nimport {AlertRuleStatus, Incident} from '../../../types';\nimport {isCrashFreeAlert} from '../utils/isCrashFreeAlert';\n\nimport {\n  API_INTERVAL_POINTS_LIMIT,\n  SELECTOR_RELATIVE_PERIODS,\n  TIME_WINDOWS,\n  TimePeriodType,\n} from './constants';\nimport MetricChart from './metricChart';\nimport RelatedIssues from './relatedIssues';\nimport RelatedTransactions from './relatedTransactions';\nimport Sidebar from './sidebar';\n\ntype Props = {\n  api: Client;\n  location: Location;\n  organization: Organization;\n  timePeriod: TimePeriodType;\n  incidents?: Incident[];\n  project?: Project;\n  rule?: MetricRule;\n  selectedIncident?: Incident | null;\n} & RouteComponentProps<{orgId: string}, {}>;\n\nexport default class DetailsBody extends Component<Props> {\n  getTimeWindow(): React.ReactNode {\n    const {rule} = this.props;\n\n    if (!rule) {\n      return '';\n    }\n\n    const {timeWindow} = rule;\n\n    return tct('[window]', {\n      window: <Duration seconds={timeWindow * 60} />,\n    });\n  }\n\n  getInterval() {\n    const {\n      timePeriod: {start, end},\n      rule,\n    } = this.props;\n    const startDate = moment.utc(start);\n    const endDate = moment.utc(end);\n    const timeWindow = rule?.timeWindow;\n    const startEndDifferenceMs = endDate.diff(startDate);\n\n    if (\n      timeWindow &&\n      (startEndDifferenceMs < API_INTERVAL_POINTS_LIMIT * timeWindow * 60 * 1000 ||\n        // Special case 7 days * 1m interval over the api limit\n        startEndDifferenceMs === TIME_WINDOWS[TimePeriod.SEVEN_DAYS])\n    ) {\n      return `${timeWindow}m`;\n    }\n\n    return getInterval({start, end}, 'high');\n  }\n\n  getFilter() {\n    const {rule} = this.props;\n    const {dataset, query} = rule ?? {};\n    if (!rule) {\n      return null;\n    }\n\n    const eventType = isCrashFreeAlert(dataset)\n      ? null\n      : extractEventTypeFilterFromRule(rule);\n    return [eventType, query].join(' ').split(' ');\n  }\n\n  handleTimePeriodChange = (datetime: ChangeData) => {\n    const {start, end, relative} = datetime;\n\n    if (start && end) {\n      return this.props.router.push({\n        ...this.props.location,\n        query: {\n          start: moment(start).utc().format(),\n          end: moment(end).utc().format(),\n        },\n      });\n    }\n\n    return this.props.router.push({\n      ...this.props.location,\n      query: {\n        period: relative,\n      },\n    });\n  };\n\n  renderLoading() {\n    return (\n      <Layout.Body>\n        <Layout.Main>\n          <Placeholder height=\"38px\" />\n          <ChartPanel>\n            <PanelBody withPadding>\n              <Placeholder height=\"200px\" />\n            </PanelBody>\n          </ChartPanel>\n        </Layout.Main>\n        <Layout.Side>\n          <Placeholder height=\"200px\" />\n        </Layout.Side>\n      </Layout.Body>\n    );\n  }\n\n  render() {\n    const {\n      api,\n      project,\n      rule,\n      incidents,\n      location,\n      organization,\n      timePeriod,\n      selectedIncident,\n      params: {orgId},\n    } = this.props;\n\n    if (!rule || !project) {\n      return this.renderLoading();\n    }\n\n    const {query, dataset} = rule;\n\n    const queryWithTypeFilter = `${query} ${extractEventTypeFilterFromRule(rule)}`.trim();\n    const relativeOptions = {\n      ...SELECTOR_RELATIVE_PERIODS,\n      ...(rule.timeWindow > 1 ? {[TimePeriod.FOURTEEN_DAYS]: t('Last 14 days')} : {}),\n    };\n\n    return (\n      <Fragment>\n        {selectedIncident &&\n          selectedIncident.alertRule.status === AlertRuleStatus.SNAPSHOT && (\n            <StyledLayoutBody>\n              <StyledAlert type=\"warning\" showIcon>\n                {t(\n                  'Alert Rule settings have been updated since this alert was triggered.'\n                )}\n              </StyledAlert>\n            </StyledLayoutBody>\n          )}\n        <Layout.Body>\n          <Layout.Main>\n            <StyledPageTimeRangeSelector\n              organization={organization}\n              relative={timePeriod.period ?? ''}\n              start={(timePeriod.custom && timePeriod.start) || null}\n              end={(timePeriod.custom && timePeriod.end) || null}\n              utc={null}\n              onUpdate={this.handleTimePeriodChange}\n              relativeOptions={relativeOptions}\n              showAbsolute={false}\n            />\n\n            <MetricChart\n              api={api}\n              rule={rule}\n              incidents={incidents}\n              timePeriod={timePeriod}\n              selectedIncident={selectedIncident}\n              organization={organization}\n              project={project}\n              interval={this.getInterval()}\n              query={isCrashFreeAlert(dataset) ? query : queryWithTypeFilter}\n              filter={this.getFilter()}\n              orgId={orgId}\n            />\n            <DetailWrapper>\n              <ActivityWrapper>\n                <MetricHistory organization={organization} incidents={incidents} />\n                {[Dataset.METRICS, Dataset.SESSIONS, Dataset.ERRORS].includes(\n                  dataset\n                ) && (\n                  <RelatedIssues\n                    organization={organization}\n                    rule={rule}\n                    projects={[project]}\n                    timePeriod={timePeriod}\n                    query={\n                      dataset === Dataset.ERRORS\n                        ? queryWithTypeFilter\n                        : isCrashFreeAlert(dataset)\n                        ? `${query} error.unhandled:true`\n                        : undefined\n                    }\n                  />\n                )}\n                {dataset === Dataset.TRANSACTIONS && (\n                  <RelatedTransactions\n                    organization={organization}\n                    location={location}\n                    rule={rule}\n                    projects={[project]}\n                    timePeriod={timePeriod}\n                    filter={extractEventTypeFilterFromRule(rule)}\n                  />\n                )}\n              </ActivityWrapper>\n            </DetailWrapper>\n          </Layout.Main>\n          <Layout.Side>\n            <Sidebar rule={rule} />\n          </Layout.Side>\n        </Layout.Body>\n      </Fragment>\n    );\n  }\n}\n\nconst DetailWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    flex-direction: column-reverse;\n  }\n`;\n\nconst StyledLayoutBody = styled(Layout.Body)`\n  flex-grow: 0;\n  padding-bottom: 0 !important;\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: auto;\n  }\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin: 0;\n`;\n\nconst ActivityWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst ChartPanel = styled(Panel)`\n  margin-top: ${space(2)};\n`;\n\nconst StyledPageTimeRangeSelector = styled(PageTimeRangeSelector)`\n  margin-bottom: ${space(2)};\n`;\n","import {t} from 'sentry/locale';\nimport {SelectValue} from 'sentry/types';\nimport {TimePeriod, TimeWindow} from 'sentry/views/alerts/rules/metric/types';\n\nexport const SELECTOR_RELATIVE_PERIODS = {\n  [TimePeriod.SIX_HOURS]: t('Last 6 hours'),\n  [TimePeriod.ONE_DAY]: t('Last 24 hours'),\n  [TimePeriod.THREE_DAYS]: t('Last 3 days'),\n  [TimePeriod.SEVEN_DAYS]: t('Last 7 days'),\n};\n\nexport const ALERT_DEFAULT_CHART_PERIOD = '7d';\n\nexport const TIME_OPTIONS: SelectValue<string>[] = [\n  {label: t('Last 6 hours'), value: TimePeriod.SIX_HOURS},\n  {label: t('Last 24 hours'), value: TimePeriod.ONE_DAY},\n  {label: t('Last 3 days'), value: TimePeriod.THREE_DAYS},\n  {label: t('Last 7 days'), value: TimePeriod.SEVEN_DAYS},\n  {label: t('Last 14 days'), value: TimePeriod.FOURTEEN_DAYS},\n];\n\nexport const TIME_WINDOWS = {\n  [TimePeriod.SIX_HOURS]: TimeWindow.ONE_HOUR * 6 * 60 * 1000,\n  [TimePeriod.ONE_DAY]: TimeWindow.ONE_DAY * 60 * 1000,\n  [TimePeriod.THREE_DAYS]: TimeWindow.ONE_DAY * 3 * 60 * 1000,\n  [TimePeriod.SEVEN_DAYS]: TimeWindow.ONE_DAY * 7 * 60 * 1000,\n  [TimePeriod.FOURTEEN_DAYS]: TimeWindow.ONE_DAY * 14 * 60 * 1000,\n};\n\nexport const SELECTOR_DEFAULT_PERIOD = TimePeriod.FOURTEEN_DAYS;\nexport const API_INTERVAL_POINTS_LIMIT = 10000;\nexport const API_INTERVAL_POINTS_MIN = 150;\n\nexport type TimePeriodType = {\n  display: React.ReactNode;\n  end: string;\n  label: string;\n  period: string;\n  start: string;\n  /**\n   * The start/end were chosen from the period and not the user\n   */\n  usingPeriod: boolean;\n  custom?: boolean;\n  utc?: boolean;\n};\n","import {RouteComponentProps} from 'react-router';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport Button from 'sentry/components/button';\nimport IdBadge from 'sentry/components/idBadge';\nimport PageHeading from 'sentry/components/pageHeading';\nimport {IconCopy, IconEdit} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {PageHeader} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport {MetricRule} from 'sentry/views/alerts/rules/metric/types';\n\nimport {isIssueAlert} from '../../../utils';\n\ntype Props = Pick<RouteComponentProps<{orgId: string}, {}>, 'params'> & {\n  hasMetricRuleDetailsError: boolean;\n  project?: Project;\n  rule?: MetricRule;\n};\n\nfunction DetailsHeader({hasMetricRuleDetailsError, rule, params, project}: Props) {\n  const isRuleReady = !!rule && !hasMetricRuleDetailsError;\n  const ruleTitle = rule && !hasMetricRuleDetailsError ? rule.name : '';\n  const settingsLink =\n    rule &&\n    `/organizations/${params.orgId}/alerts/${\n      isIssueAlert(rule) ? 'rules' : 'metric-rules'\n    }/${project?.slug ?? rule?.projects?.[0]}/${rule.id}/`;\n\n  const duplicateLink = {\n    pathname: `/organizations/${params.orgId}/alerts/new/metric/`,\n    query: {\n      project: project?.slug,\n      duplicateRuleId: rule?.id,\n      createFromDuplicate: true,\n      referrer: 'metric_rule_details',\n    },\n  };\n\n  return (\n    <Header>\n      <BreadCrumbBar>\n        <AlertBreadcrumbs\n          crumbs={[\n            {label: t('Alerts'), to: `/organizations/${params.orgId}/alerts/rules/`},\n            {label: ruleTitle},\n          ]}\n        />\n        <Controls>\n          <Button icon={<IconCopy />} to={duplicateLink}>\n            {t('Duplicate')}\n          </Button>\n          <Button icon={<IconEdit />} to={settingsLink}>\n            {t('Edit Rule')}\n          </Button>\n        </Controls>\n      </BreadCrumbBar>\n      <Details>\n        <RuleTitle data-test-id=\"incident-rule-title\" loading={!isRuleReady}>\n          {project && (\n            <IdBadge\n              project={project}\n              avatarSize={28}\n              hideName\n              avatarProps={{hasTooltip: true, tooltip: project.slug}}\n            />\n          )}\n          {ruleTitle}\n        </RuleTitle>\n      </Details>\n    </Header>\n  );\n}\n\nexport default DetailsHeader;\n\nconst Header = styled('div')`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst BreadCrumbBar = styled('div')`\n  display: flex;\n  margin-bottom: 0;\n  padding: ${space(2)} ${space(4)} ${space(1)};\n`;\n\nconst AlertBreadcrumbs = styled(Breadcrumbs)`\n  flex-grow: 1;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  padding: 0;\n`;\n\nconst Controls = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n`;\n\nconst Details = styled(PageHeader)`\n  margin-bottom: 0;\n  padding: ${space(1.5)} ${space(4)} ${space(2)};\n\n  grid-template-columns: max-content auto;\n  display: grid;\n  gap: ${space(3)};\n  grid-auto-flow: column;\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: auto;\n    grid-auto-flow: row;\n  }\n`;\n\nconst RuleTitle = styled(PageHeading, {\n  shouldForwardProp: p => typeof p === 'string' && isPropValid(p) && p !== 'loading',\n})<{loading: boolean}>`\n  ${p => p.loading && 'opacity: 0'};\n  line-height: 1.5;\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n`;\n","import {Component, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {Location} from 'history';\nimport moment from 'moment';\n\nimport {fetchOrgMembers} from 'sentry/actionCreators/members';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport DateTime from 'sentry/components/dateTime';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport withApi from 'sentry/utils/withApi';\nimport withProjects from 'sentry/utils/withProjects';\nimport {buildMetricGraphDateRange} from 'sentry/views/alerts/rules/details/utils';\nimport {MetricRule, TimePeriod} from 'sentry/views/alerts/rules/metric/types';\nimport type {Incident} from 'sentry/views/alerts/types';\nimport {\n  fetchAlertRule,\n  fetchIncident,\n  fetchIncidentsForRule,\n} from 'sentry/views/alerts/utils/apiCalls';\n\nimport DetailsBody from './body';\nimport {TIME_OPTIONS, TIME_WINDOWS, TimePeriodType} from './constants';\nimport DetailsHeader from './header';\n\ninterface Props extends RouteComponentProps<{orgId: string; ruleId: string}, {}> {\n  api: Client;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  loadingProjects?: boolean;\n}\n\ninterface State {\n  error: ResponseMeta | null;\n  hasError: boolean;\n  isLoading: boolean;\n  selectedIncident: Incident | null;\n  incidents?: Incident[];\n  rule?: MetricRule;\n}\n\nclass MetricAlertDetails extends Component<Props, State> {\n  state: State = {isLoading: false, hasError: false, error: null, selectedIncident: null};\n\n  componentDidMount() {\n    const {api, params} = this.props;\n\n    fetchOrgMembers(api, params.orgId);\n    this.fetchData();\n    this.trackView();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.location.search !== this.props.location.search ||\n      prevProps.params.orgId !== this.props.params.orgId ||\n      prevProps.params.ruleId !== this.props.params.ruleId\n    ) {\n      this.fetchData();\n      this.trackView();\n    }\n  }\n\n  trackView() {\n    const {params, organization, location} = this.props;\n\n    trackAdvancedAnalyticsEvent('alert_rule_details.viewed', {\n      organization,\n      rule_id: parseInt(params.ruleId, 10),\n      alert: (location.query.alert as string) ?? '',\n      has_chartcuterie: organization.features\n        .includes('metric-alert-chartcuterie')\n        .toString(),\n    });\n  }\n\n  getTimePeriod(selectedIncident: Incident | null): TimePeriodType {\n    const {location} = this.props;\n    const period = (location.query.period as string) ?? TimePeriod.SEVEN_DAYS;\n\n    if (location.query.start && location.query.end) {\n      return {\n        start: location.query.start as string,\n        end: location.query.end as string,\n        period,\n        usingPeriod: false,\n        label: t('Custom time'),\n        display: (\n          <Fragment>\n            <DateTime date={moment.utc(location.query.start)} />\n            {' — '}\n            <DateTime date={moment.utc(location.query.end)} />\n          </Fragment>\n        ),\n        custom: true,\n      };\n    }\n\n    if (location.query.alert && selectedIncident) {\n      const {start, end} = buildMetricGraphDateRange(selectedIncident);\n      return {\n        start,\n        end,\n        period,\n        usingPeriod: false,\n        label: t('Custom time'),\n        display: (\n          <Fragment>\n            <DateTime date={moment.utc(start)} />\n            {' — '}\n            <DateTime date={moment.utc(end)} />\n          </Fragment>\n        ),\n        custom: true,\n      };\n    }\n\n    const timeOption =\n      TIME_OPTIONS.find(item => item.value === period) ?? TIME_OPTIONS[1];\n    const start = getUtcDateString(\n      moment(moment.utc().diff(TIME_WINDOWS[timeOption.value]))\n    );\n    const end = getUtcDateString(moment.utc());\n\n    return {\n      start,\n      end,\n      period,\n      usingPeriod: true,\n      label: timeOption.label as string,\n      display: timeOption.label as string,\n    };\n  }\n\n  fetchData = async () => {\n    const {\n      api,\n      params: {orgId, ruleId},\n      location,\n    } = this.props;\n\n    this.setState({isLoading: true, hasError: false});\n\n    // Skip loading existing rule\n    const rulePromise =\n      ruleId === this.state.rule?.id\n        ? Promise.resolve(this.state.rule)\n        : fetchAlertRule(orgId, ruleId, {expand: 'latestIncident'});\n\n    // Fetch selected incident, if it exists. We need this to set the selected date range\n    let selectedIncident: Incident | null = null;\n    if (location.query.alert) {\n      try {\n        selectedIncident = await fetchIncident(\n          api,\n          orgId,\n          location.query.alert as string\n        );\n      } catch {\n        // TODO: selectedIncident specific error\n      }\n    }\n\n    const timePeriod = this.getTimePeriod(selectedIncident);\n    const {start, end} = timePeriod;\n    try {\n      const [incidents, rule] = await Promise.all([\n        fetchIncidentsForRule(orgId, ruleId, start, end),\n        rulePromise,\n      ]);\n      this.setState({\n        incidents,\n        rule,\n        selectedIncident,\n        isLoading: false,\n        hasError: false,\n      });\n    } catch (error) {\n      this.setState({selectedIncident, isLoading: false, hasError: true, error});\n    }\n  };\n\n  renderError() {\n    const {error} = this.state;\n\n    return (\n      <PageContent>\n        <Alert type=\"error\" showIcon>\n          {error?.status === 404\n            ? t('This alert rule could not be found.')\n            : t('An error occurred while fetching the alert rule.')}\n        </Alert>\n      </PageContent>\n    );\n  }\n\n  render() {\n    const {rule, incidents, hasError, selectedIncident} = this.state;\n    const {params, projects, loadingProjects} = this.props;\n    const timePeriod = this.getTimePeriod(selectedIncident);\n\n    if (hasError) {\n      return this.renderError();\n    }\n\n    const project = projects.find(({slug}) => slug === rule?.projects[0]) as\n      | Project\n      | undefined;\n    const isGlobalSelectionReady = project !== undefined && !loadingProjects;\n\n    return (\n      <PageFiltersContainer\n        skipLoadLastUsed\n        skipInitializeUrlParams\n        shouldForceProject={isGlobalSelectionReady}\n        forceProject={project}\n      >\n        <SentryDocumentTitle title={rule?.name ?? ''} />\n\n        <DetailsHeader\n          hasMetricRuleDetailsError={hasError}\n          params={params}\n          rule={rule}\n          project={project}\n        />\n        <DetailsBody\n          {...this.props}\n          rule={rule}\n          project={project}\n          incidents={incidents}\n          timePeriod={timePeriod}\n          selectedIncident={selectedIncident}\n        />\n      </PageFiltersContainer>\n    );\n  }\n}\n\nexport default withApi(withProjects(MetricAlertDetails));\n","import {PureComponent} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {browserHistory, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport color from 'color';\nimport type {LineSeriesOption} from 'echarts';\nimport capitalize from 'lodash/capitalize';\nimport moment from 'moment';\nimport momentTimezone from 'moment-timezone';\n\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport Button from 'sentry/components/button';\nimport {AreaChart, AreaChartSeries} from 'sentry/components/charts/areaChart';\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport MarkArea from 'sentry/components/charts/components/markArea';\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport EventsRequest from 'sentry/components/charts/eventsRequest';\nimport LineSeries from 'sentry/components/charts/series/lineSeries';\nimport SessionsRequest from 'sentry/components/charts/sessionsRequest';\nimport {\n  ChartControls,\n  HeaderTitleLegend,\n  InlineContainer,\n  SectionHeading,\n  SectionValue,\n} from 'sentry/components/charts/styles';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport {\n  parseStatsPeriod,\n  StatsPeriodType,\n} from 'sentry/components/organizations/pageFilters/parse';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport Truncate from 'sentry/components/truncate';\nimport {IconCheckmark, IconFire, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {DateString, Organization, Project} from 'sentry/types';\nimport {ReactEchartsRef, Series} from 'sentry/types/echarts';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport {getDuration} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {MINUTES_THRESHOLD_TO_DISPLAY_SECONDS} from 'sentry/utils/sessions';\nimport theme from 'sentry/utils/theme';\nimport {COMPARISON_DELTA_OPTIONS} from 'sentry/views/alerts/rules/metric/constants';\nimport {makeDefaultCta} from 'sentry/views/alerts/rules/metric/metricRulePresets';\nimport {\n  AlertRuleTriggerType,\n  MetricRule,\n  TimePeriod,\n} from 'sentry/views/alerts/rules/metric/types';\nimport {getChangeStatus} from 'sentry/views/alerts/utils/getChangeStatus';\nimport {AlertWizardAlertNames} from 'sentry/views/alerts/wizard/options';\nimport {getAlertTypeFromAggregateDataset} from 'sentry/views/alerts/wizard/utils';\n\nimport {Incident} from '../../../types';\nimport {\n  alertDetailsLink,\n  alertTooltipValueFormatter,\n  isSessionAggregate,\n  SESSION_AGGREGATE_TO_FIELD,\n} from '../../../utils';\nimport {getMetricDatasetQueryExtras} from '../utils/getMetricDatasetQueryExtras';\nimport {isCrashFreeAlert} from '../utils/isCrashFreeAlert';\n\nimport {TimePeriodType} from './constants';\nimport {\n  getMetricAlertChartOption,\n  transformSessionResponseToSeries,\n} from './metricChartOption';\n\ntype Props = WithRouterProps & {\n  api: Client;\n  filter: string[] | null;\n  interval: string;\n  orgId: string;\n  organization: Organization;\n  project: Project;\n  query: string;\n  rule: MetricRule;\n  timePeriod: TimePeriodType;\n  incidents?: Incident[];\n  selectedIncident?: Incident | null;\n};\n\ntype State = {\n  height: number;\n  width: number;\n};\n\nfunction formatTooltipDate(date: moment.MomentInput, format: string): string {\n  const {\n    options: {timezone},\n  } = ConfigStore.get('user');\n  return momentTimezone.tz(date, timezone).format(format);\n}\n\nfunction getRuleChangeSeries(\n  rule: MetricRule,\n  data: AreaChartSeries[]\n): LineSeriesOption[] {\n  const {dateModified} = rule;\n  if (!data.length || !data[0].data.length || !dateModified) {\n    return [];\n  }\n\n  const seriesData = data[0].data;\n  const seriesStart = new Date(seriesData[0].name).getTime();\n  const ruleChanged = new Date(dateModified).getTime();\n\n  if (ruleChanged < seriesStart) {\n    return [];\n  }\n\n  return [\n    {\n      type: 'line',\n      markLine: MarkLine({\n        silent: true,\n        animation: false,\n        lineStyle: {color: theme.gray200, type: 'solid', width: 1},\n        data: [{xAxis: ruleChanged}],\n        label: {\n          show: false,\n        },\n      }),\n      markArea: MarkArea({\n        silent: true,\n        itemStyle: {\n          color: color(theme.gray100).alpha(0.42).rgb().string(),\n        },\n        data: [[{xAxis: seriesStart}, {xAxis: ruleChanged}]],\n      }),\n      data: [],\n    },\n  ];\n}\n\nclass MetricChart extends PureComponent<Props, State> {\n  state = {\n    width: -1,\n    height: -1,\n  };\n\n  ref: null | ReactEchartsRef = null;\n\n  /**\n   * Syncs component state with the chart's width/heights\n   */\n  updateDimensions = () => {\n    const chartRef = this.ref?.getEchartsInstance?.();\n    if (!chartRef) {\n      return;\n    }\n\n    const width = chartRef.getWidth();\n    const height = chartRef.getHeight();\n    if (width !== this.state.width || height !== this.state.height) {\n      this.setState({\n        width,\n        height,\n      });\n    }\n  };\n\n  handleRef = (ref: ReactEchartsRef): void => {\n    if (ref && !this.ref) {\n      this.ref = ref;\n      this.updateDimensions();\n    }\n\n    if (!ref) {\n      this.ref = null;\n    }\n  };\n\n  handleZoom = (start: DateString, end: DateString) => {\n    const {location} = this.props;\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        start,\n        end,\n      },\n    });\n  };\n\n  renderChartActions(\n    totalDuration: number,\n    criticalDuration: number,\n    warningDuration: number\n  ) {\n    const {rule, orgId, project, timePeriod, query} = this.props;\n\n    const {buttonText, ...props} = makeDefaultCta({\n      orgSlug: orgId,\n      projects: [project],\n      rule,\n      timePeriod,\n      query,\n    });\n\n    const resolvedPercent =\n      (100 * Math.max(totalDuration - criticalDuration - warningDuration, 0)) /\n      totalDuration;\n    const criticalPercent = 100 * Math.min(criticalDuration / totalDuration, 1);\n    const warningPercent = 100 * Math.min(warningDuration / totalDuration, 1);\n\n    return (\n      <StyledChartControls>\n        <StyledInlineContainer>\n          <SectionHeading>{t('Summary')}</SectionHeading>\n          <StyledSectionValue>\n            <ValueItem>\n              <IconCheckmark color=\"green300\" isCircled />\n              {resolvedPercent ? resolvedPercent.toFixed(2) : 0}%\n            </ValueItem>\n            <ValueItem>\n              <IconWarning color=\"yellow300\" />\n              {warningPercent ? warningPercent.toFixed(2) : 0}%\n            </ValueItem>\n            <ValueItem>\n              <IconFire color=\"red300\" />\n              {criticalPercent ? criticalPercent.toFixed(2) : 0}%\n            </ValueItem>\n          </StyledSectionValue>\n        </StyledInlineContainer>\n        {!isSessionAggregate(rule.aggregate) && (\n          <Feature features={['discover-basic']}>\n            <Button size=\"sm\" {...props}>\n              {buttonText}\n            </Button>\n          </Feature>\n        )}\n      </StyledChartControls>\n    );\n  }\n\n  renderChart(\n    loading: boolean,\n    timeseriesData?: Series[],\n    minutesThresholdToDisplaySeconds?: number,\n    comparisonTimeseriesData?: Series[]\n  ) {\n    const {\n      router,\n      selectedIncident,\n      interval,\n      filter,\n      incidents,\n      rule,\n      organization,\n      timePeriod: {start, end},\n    } = this.props;\n    const {width} = this.state;\n    const {dateModified, timeWindow} = rule;\n\n    if (loading || !timeseriesData) {\n      return this.renderEmpty();\n    }\n\n    const handleIncidentClick = (incident: Incident) => {\n      router.push({\n        pathname: alertDetailsLink(organization, incident),\n        query: {alert: incident.identifier},\n      });\n    };\n\n    const {criticalDuration, warningDuration, totalDuration, chartOption} =\n      getMetricAlertChartOption({\n        timeseriesData,\n        rule,\n        incidents,\n        selectedIncident,\n        handleIncidentClick,\n      });\n\n    const comparisonSeriesName = capitalize(\n      COMPARISON_DELTA_OPTIONS.find(({value}) => value === rule.comparisonDelta)?.label ||\n        ''\n    );\n\n    const additionalSeries: LineSeriesOption[] = [\n      ...(comparisonTimeseriesData || []).map(({data: _data, ...otherSeriesProps}) =>\n        LineSeries({\n          name: comparisonSeriesName,\n          data: _data.map(({name, value}) => [name, value]),\n          lineStyle: {color: theme.gray200, type: 'dashed', width: 1},\n          itemStyle: {color: theme.gray200},\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n          ...otherSeriesProps,\n        })\n      ),\n      ...getRuleChangeSeries(rule, timeseriesData),\n    ];\n\n    const queryFilter =\n      filter?.join(' ') + t(' over ') + getDuration(rule.timeWindow * 60);\n\n    const percentOfWidth =\n      width >= 1151\n        ? 15\n        : width < 1151 && width >= 700\n        ? 14\n        : width < 700 && width >= 515\n        ? 13\n        : width < 515 && width >= 300\n        ? 12\n        : 8;\n    const truncateWidth = (percentOfWidth / 100) * width;\n\n    return (\n      <ChartPanel>\n        <StyledPanelBody withPadding>\n          <ChartHeader>\n            <HeaderTitleLegend>\n              {AlertWizardAlertNames[getAlertTypeFromAggregateDataset(rule)]}\n            </HeaderTitleLegend>\n          </ChartHeader>\n          <ChartFilters>\n            <StyledCircleIndicator size={8} />\n            <Filters>{rule.aggregate}</Filters>\n            <Truncate value={queryFilter ?? ''} maxLength={truncateWidth} />\n          </ChartFilters>\n          {getDynamicText({\n            value: (\n              <ChartZoom\n                router={router}\n                start={start}\n                end={end}\n                onZoom={zoomArgs => this.handleZoom(zoomArgs.start, zoomArgs.end)}\n                onFinished={() => {\n                  // We want to do this whenever the chart finishes re-rendering so that we can update the dimensions of\n                  // any graphics related to the triggers (e.g. the threshold areas + boundaries)\n                  this.updateDimensions();\n                }}\n              >\n                {zoomRenderProps => (\n                  <AreaChart\n                    {...zoomRenderProps}\n                    {...chartOption}\n                    showTimeInTooltip\n                    minutesThresholdToDisplaySeconds={minutesThresholdToDisplaySeconds}\n                    forwardedRef={this.handleRef}\n                    additionalSeries={additionalSeries}\n                    tooltip={{\n                      formatter: seriesParams => {\n                        // seriesParams can be object instead of array\n                        const pointSeries = Array.isArray(seriesParams)\n                          ? seriesParams\n                          : [seriesParams];\n                        const {marker, data: pointData, seriesName} = pointSeries[0];\n                        const [pointX, pointY] = pointData as [number, number];\n                        const pointYFormatted = alertTooltipValueFormatter(\n                          pointY,\n                          seriesName ?? '',\n                          rule.aggregate\n                        );\n\n                        const isModified =\n                          dateModified && pointX <= new Date(dateModified).getTime();\n\n                        const startTime = formatTooltipDate(moment(pointX), 'MMM D LT');\n                        const {period, periodLength} = parseStatsPeriod(interval) ?? {\n                          periodLength: 'm',\n                          period: `${timeWindow}`,\n                        };\n                        const endTime = formatTooltipDate(\n                          moment(pointX).add(\n                            parseInt(period, 10),\n                            periodLength as StatsPeriodType\n                          ),\n                          'MMM D LT'\n                        );\n\n                        const comparisonSeries =\n                          pointSeries.length > 1\n                            ? pointSeries.find(\n                                ({seriesName: _sn}) => _sn === comparisonSeriesName\n                              )\n                            : undefined;\n\n                        const comparisonPointY = comparisonSeries?.data[1] as\n                          | number\n                          | undefined;\n                        const comparisonPointYFormatted =\n                          comparisonPointY !== undefined\n                            ? alertTooltipValueFormatter(\n                                comparisonPointY,\n                                seriesName ?? '',\n                                rule.aggregate\n                              )\n                            : undefined;\n\n                        const changePercentage =\n                          comparisonPointY === undefined\n                            ? NaN\n                            : ((pointY - comparisonPointY) * 100) / comparisonPointY;\n\n                        const changeStatus = getChangeStatus(\n                          changePercentage,\n                          rule.thresholdType,\n                          rule.triggers\n                        );\n\n                        const changeStatusColor =\n                          changeStatus === AlertRuleTriggerType.CRITICAL\n                            ? theme.red300\n                            : changeStatus === AlertRuleTriggerType.WARNING\n                            ? theme.yellow300\n                            : theme.green300;\n\n                        return [\n                          `<div class=\"tooltip-series\">`,\n                          isModified &&\n                            `<div><span class=\"tooltip-label\"><strong>${t(\n                              'Alert Rule Modified'\n                            )}</strong></span></div>`,\n                          `<div><span class=\"tooltip-label\">${marker} <strong>${seriesName}</strong></span>${pointYFormatted}</div>`,\n                          comparisonSeries &&\n                            `<div><span class=\"tooltip-label\">${comparisonSeries.marker} <strong>${comparisonSeriesName}</strong></span>${comparisonPointYFormatted}</div>`,\n                          `</div>`,\n                          `<div class=\"tooltip-date\">`,\n                          `<span>${startTime} &mdash; ${endTime}</span>`,\n                          comparisonPointY !== undefined &&\n                            Math.abs(changePercentage) !== Infinity &&\n                            !isNaN(changePercentage) &&\n                            `<span style=\"color:${changeStatusColor};margin-left:10px;\">${\n                              Math.sign(changePercentage) === 1 ? '+' : '-'\n                            }${Math.abs(changePercentage).toFixed(2)}%</span>`,\n                          `</div>`,\n                          '<div class=\"tooltip-arrow\"></div>',\n                        ]\n                          .filter(e => e)\n                          .join('');\n                      },\n                    }}\n                  />\n                )}\n              </ChartZoom>\n            ),\n            fixed: <Placeholder height=\"200px\" testId=\"skeleton-ui\" />,\n          })}\n        </StyledPanelBody>\n        {this.renderChartActions(totalDuration, criticalDuration, warningDuration)}\n      </ChartPanel>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <ChartPanel>\n        <PanelBody withPadding>\n          <Placeholder height=\"200px\" />\n        </PanelBody>\n      </ChartPanel>\n    );\n  }\n\n  render() {\n    const {api, rule, organization, timePeriod, project, interval, query, location} =\n      this.props;\n    const {aggregate, timeWindow, environment, dataset} = rule;\n\n    // Fix for 7 days * 1m interval being over the max number of results from events api\n    // 10k events is the current max\n    if (\n      timePeriod.usingPeriod &&\n      timePeriod.period === TimePeriod.SEVEN_DAYS &&\n      interval === '1m'\n    ) {\n      timePeriod.start = getUtcDateString(\n        // -5 minutes provides a small cushion for rounding up minutes. This might be able to be smaller\n        moment(moment.utc(timePeriod.end).subtract(10000 - 5, 'minutes'))\n      );\n    }\n\n    // If the chart duration isn't as long as the rollup duration the events-stats\n    // endpoint will return an invalid timeseriesData dataset\n    const viableStartDate = getUtcDateString(\n      moment.min(\n        moment.utc(timePeriod.start),\n        moment.utc(timePeriod.end).subtract(timeWindow, 'minutes')\n      )\n    );\n\n    const viableEndDate = getUtcDateString(\n      moment.utc(timePeriod.end).add(timeWindow, 'minutes')\n    );\n\n    const queryExtras = getMetricDatasetQueryExtras({\n      organization,\n      location,\n      dataset,\n      newAlertOrQuery: false,\n    });\n\n    return isCrashFreeAlert(dataset) ? (\n      <SessionsRequest\n        api={api}\n        organization={organization}\n        project={project.id ? [Number(project.id)] : []}\n        environment={environment ? [environment] : undefined}\n        start={viableStartDate}\n        end={viableEndDate}\n        query={query}\n        interval={interval}\n        field={SESSION_AGGREGATE_TO_FIELD[aggregate]}\n        groupBy={['session.status']}\n      >\n        {({loading, response}) =>\n          this.renderChart(\n            loading,\n            transformSessionResponseToSeries(response, rule),\n            MINUTES_THRESHOLD_TO_DISPLAY_SECONDS\n          )\n        }\n      </SessionsRequest>\n    ) : (\n      <EventsRequest\n        api={api}\n        organization={organization}\n        query={query}\n        environment={environment ? [environment] : undefined}\n        project={project.id ? [Number(project.id)] : []}\n        interval={interval}\n        comparisonDelta={rule.comparisonDelta ? rule.comparisonDelta * 60 : undefined}\n        start={viableStartDate}\n        end={viableEndDate}\n        yAxis={aggregate}\n        includePrevious={false}\n        currentSeriesNames={[aggregate]}\n        partial={false}\n        queryExtras={queryExtras}\n        referrer=\"api.alerts.alert-rule-chart\"\n      >\n        {({loading, timeseriesData, comparisonTimeseriesData}) =>\n          this.renderChart(loading, timeseriesData, undefined, comparisonTimeseriesData)\n        }\n      </EventsRequest>\n    );\n  }\n}\n\nexport default withRouter(MetricChart);\n\nconst ChartPanel = styled(Panel)`\n  margin-top: ${space(2)};\n`;\n\nconst ChartHeader = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst StyledChartControls = styled(ChartControls)`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nconst StyledInlineContainer = styled(InlineContainer)`\n  grid-auto-flow: column;\n  grid-column-gap: ${space(1)};\n`;\n\nconst StyledCircleIndicator = styled(CircleIndicator)`\n  background: ${p => p.theme.formText};\n  height: ${space(1)};\n  margin-right: ${space(0.5)};\n`;\n\nconst ChartFilters = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-family: ${p => p.theme.text.family};\n  color: ${p => p.theme.textColor};\n  display: inline-grid;\n  grid-template-columns: repeat(3, max-content);\n  align-items: center;\n`;\n\nconst Filters = styled('span')`\n  margin-right: ${space(1)};\n`;\n\nconst StyledSectionValue = styled(SectionValue)`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  gap: ${space(1.5)};\n  margin: 0 0 0 ${space(1.5)};\n`;\n\nconst ValueItem = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  gap: ${space(0.5)};\n  align-items: center;\n  font-variant-numeric: tabular-nums;\n`;\n\n/* Override padding to make chart appear centered */\nconst StyledPanelBody = styled(PanelBody)`\n  padding-right: 6px;\n`;\n","import color from 'color';\nimport type {YAXisComponentOption} from 'echarts';\nimport moment from 'moment';\nimport momentTimezone from 'moment-timezone';\n\nimport type {AreaChartProps, AreaChartSeries} from 'sentry/components/charts/areaChart';\nimport MarkArea from 'sentry/components/charts/components/markArea';\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport CHART_PALETTE from 'sentry/constants/chartPalette';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport type {SessionApiResponse} from 'sentry/types';\nimport type {Series} from 'sentry/types/echarts';\nimport {getCrashFreeRateSeries} from 'sentry/utils/sessions';\nimport {lightTheme as theme} from 'sentry/utils/theme';\nimport {\n  AlertRuleTriggerType,\n  Dataset,\n  MetricRule,\n} from 'sentry/views/alerts/rules/metric/types';\nimport {Incident, IncidentActivityType, IncidentStatus} from 'sentry/views/alerts/types';\nimport {\n  ALERT_CHART_MIN_MAX_BUFFER,\n  alertAxisFormatter,\n  alertTooltipValueFormatter,\n  SESSION_AGGREGATE_TO_FIELD,\n  shouldScaleAlertChart,\n} from 'sentry/views/alerts/utils';\nimport {AlertWizardAlertNames} from 'sentry/views/alerts/wizard/options';\nimport {getAlertTypeFromAggregateDataset} from 'sentry/views/alerts/wizard/utils';\n\nimport {isCrashFreeAlert} from '../utils/isCrashFreeAlert';\n\nfunction formatTooltipDate(date: moment.MomentInput, format: string): string {\n  const {\n    options: {timezone},\n  } = ConfigStore.get('user');\n  return momentTimezone.tz(date, timezone).format(format);\n}\n\nfunction createStatusAreaSeries(\n  lineColor: string,\n  startTime: number,\n  endTime: number,\n  yPosition: number\n): AreaChartSeries {\n  return {\n    seriesName: '',\n    type: 'line',\n    markLine: MarkLine({\n      silent: true,\n      lineStyle: {color: lineColor, type: 'solid', width: 4},\n      data: [[{coord: [startTime, yPosition]}, {coord: [endTime, yPosition]}]],\n    }),\n    data: [],\n  };\n}\n\nfunction createThresholdSeries(lineColor: string, threshold: number): AreaChartSeries {\n  return {\n    seriesName: 'Threshold Line',\n    type: 'line',\n    markLine: MarkLine({\n      silent: true,\n      lineStyle: {color: lineColor, type: 'dashed', width: 1},\n      data: [{yAxis: threshold}],\n      label: {\n        show: false,\n      },\n    }),\n    data: [],\n  };\n}\n\nfunction createIncidentSeries(\n  incident: Incident,\n  lineColor: string,\n  incidentTimestamp: number,\n  dataPoint?: AreaChartSeries['data'][0],\n  seriesName?: string,\n  aggregate?: string,\n  handleIncidentClick?: (incident: Incident) => void\n): AreaChartSeries {\n  const formatter = ({value, marker}: any) => {\n    const time = formatTooltipDate(moment(value), 'MMM D, YYYY LT');\n    return [\n      `<div class=\"tooltip-series\"><div>`,\n      `<span class=\"tooltip-label\">${marker} <strong>${t('Alert')} #${\n        incident.identifier\n      }</strong></span>${\n        dataPoint?.value\n          ? `${seriesName} ${alertTooltipValueFormatter(\n              dataPoint.value,\n              seriesName ?? '',\n              aggregate ?? ''\n            )}`\n          : ''\n      }`,\n      `</div></div>`,\n      `<div class=\"tooltip-date\">${time}</div>`,\n      '<div class=\"tooltip-arrow\"></div>',\n    ].join('');\n  };\n\n  return {\n    seriesName: 'Incident Line',\n    type: 'line',\n    markLine: MarkLine({\n      silent: false,\n      lineStyle: {color: lineColor, type: 'solid'},\n      data: [\n        {\n          xAxis: incidentTimestamp,\n          // @ts-expect-error onClick not in echart types\n          onClick: () => handleIncidentClick?.(incident),\n        },\n      ],\n      label: {\n        silent: true,\n        show: !!incident.identifier,\n        position: 'insideEndBottom',\n        formatter: incident.identifier,\n        color: lineColor,\n        fontSize: 10,\n        fontFamily: 'Rubik',\n      },\n      tooltip: {\n        formatter,\n      },\n    }),\n    data: [],\n    tooltip: {\n      trigger: 'item',\n      alwaysShowContent: true,\n      formatter,\n    },\n  };\n}\n\nexport type MetricChartData = {\n  rule: MetricRule;\n  timeseriesData: Series[];\n  handleIncidentClick?: (incident: Incident) => void;\n  incidents?: Incident[];\n  selectedIncident?: Incident | null;\n};\n\ntype MetricChartOption = {\n  chartOption: AreaChartProps;\n  criticalDuration: number;\n  totalDuration: number;\n  warningDuration: number;\n};\n\nexport function getMetricAlertChartOption({\n  timeseriesData,\n  rule,\n  incidents,\n  selectedIncident,\n  handleIncidentClick,\n}: MetricChartData): MetricChartOption {\n  const criticalTrigger = rule.triggers.find(\n    ({label}) => label === AlertRuleTriggerType.CRITICAL\n  );\n  const warningTrigger = rule.triggers.find(\n    ({label}) => label === AlertRuleTriggerType.WARNING\n  );\n\n  const series: AreaChartSeries[] = [...timeseriesData];\n  const areaSeries: AreaChartSeries[] = [];\n  // Ensure series data appears below incident/mark lines\n  series[0].z = 1;\n  series[0].color = CHART_PALETTE[0][0];\n\n  const dataArr = timeseriesData[0].data;\n  const maxSeriesValue = dataArr.reduce(\n    (currMax, coord) => Math.max(currMax, coord.value),\n    0\n  );\n  // find the lowest value between chart data points, warning threshold,\n  // critical threshold and then apply some breathing space\n  const minChartValue = shouldScaleAlertChart(rule.aggregate)\n    ? Math.floor(\n        Math.min(\n          dataArr.reduce((currMax, coord) => Math.min(currMax, coord.value), Infinity),\n          typeof warningTrigger?.alertThreshold === 'number'\n            ? warningTrigger.alertThreshold\n            : Infinity,\n          typeof criticalTrigger?.alertThreshold === 'number'\n            ? criticalTrigger.alertThreshold\n            : Infinity\n        ) / ALERT_CHART_MIN_MAX_BUFFER\n      )\n    : 0;\n  const firstPoint = new Date(dataArr[0]?.name).getTime();\n  const lastPoint = new Date(dataArr[dataArr.length - 1]?.name).getTime();\n  const totalDuration = lastPoint - firstPoint;\n  let criticalDuration = 0;\n  let warningDuration = 0;\n\n  series.push(\n    createStatusAreaSeries(theme.green300, firstPoint, lastPoint, minChartValue)\n  );\n\n  if (incidents) {\n    // select incidents that fall within the graph range\n    incidents\n      .filter(\n        incident =>\n          !incident.dateClosed || new Date(incident.dateClosed).getTime() > firstPoint\n      )\n      .forEach(incident => {\n        const activities = incident.activities ?? [];\n        const statusChanges = activities\n          .filter(\n            ({type, value}) =>\n              type === IncidentActivityType.STATUS_CHANGE &&\n              [IncidentStatus.WARNING, IncidentStatus.CRITICAL].includes(Number(value))\n          )\n          .sort(\n            (a, b) =>\n              new Date(a.dateCreated).getTime() - new Date(b.dateCreated).getTime()\n          );\n\n        const incidentEnd = incident.dateClosed ?? new Date().getTime();\n\n        const timeWindowMs = rule.timeWindow * 60 * 1000;\n        const incidentColor =\n          warningTrigger &&\n          !statusChanges.find(({value}) => Number(value) === IncidentStatus.CRITICAL)\n            ? theme.yellow300\n            : theme.red300;\n\n        const incidentStartDate = new Date(incident.dateStarted).getTime();\n        const incidentCloseDate = incident.dateClosed\n          ? new Date(incident.dateClosed).getTime()\n          : lastPoint;\n        const incidentStartValue = dataArr.find(\n          point => new Date(point.name).getTime() >= incidentStartDate\n        );\n        series.push(\n          createIncidentSeries(\n            incident,\n            incidentColor,\n            incidentStartDate,\n            incidentStartValue,\n            series[0].seriesName,\n            rule.aggregate,\n            handleIncidentClick\n          )\n        );\n        const areaStart = Math.max(new Date(incident.dateStarted).getTime(), firstPoint);\n        const areaEnd = Math.min(\n          statusChanges.length && statusChanges[0].dateCreated\n            ? new Date(statusChanges[0].dateCreated).getTime() - timeWindowMs\n            : new Date(incidentEnd).getTime(),\n          lastPoint\n        );\n        const areaColor = warningTrigger ? theme.yellow300 : theme.red300;\n        if (areaEnd > areaStart) {\n          series.push(\n            createStatusAreaSeries(areaColor, areaStart, areaEnd, minChartValue)\n          );\n\n          if (areaColor === theme.yellow300) {\n            warningDuration += Math.abs(areaEnd - areaStart);\n          } else {\n            criticalDuration += Math.abs(areaEnd - areaStart);\n          }\n        }\n\n        statusChanges.forEach((activity, idx) => {\n          const statusAreaStart = Math.max(\n            new Date(activity.dateCreated).getTime() - timeWindowMs,\n            firstPoint\n          );\n          const statusAreaEnd = Math.min(\n            idx === statusChanges.length - 1\n              ? new Date(incidentEnd).getTime()\n              : new Date(statusChanges[idx + 1].dateCreated).getTime() - timeWindowMs,\n            lastPoint\n          );\n          const statusAreaColor =\n            activity.value === `${IncidentStatus.CRITICAL}`\n              ? theme.red300\n              : theme.yellow300;\n          if (statusAreaEnd > statusAreaStart) {\n            series.push(\n              createStatusAreaSeries(\n                statusAreaColor,\n                statusAreaStart,\n                statusAreaEnd,\n                minChartValue\n              )\n            );\n            if (statusAreaColor === theme.yellow300) {\n              warningDuration += Math.abs(statusAreaEnd - statusAreaStart);\n            } else {\n              criticalDuration += Math.abs(statusAreaEnd - statusAreaStart);\n            }\n          }\n        });\n\n        if (selectedIncident && incident.id === selectedIncident.id) {\n          const selectedIncidentColor =\n            incidentColor === theme.yellow300 ? theme.yellow100 : theme.red100;\n\n          areaSeries.push({\n            seriesName: '',\n            type: 'line',\n            markArea: MarkArea({\n              silent: true,\n              itemStyle: {\n                color: color(selectedIncidentColor).alpha(0.42).rgb().string(),\n              },\n              data: [[{xAxis: incidentStartDate}, {xAxis: incidentCloseDate}]],\n            }),\n            data: [],\n          });\n        }\n      });\n  }\n\n  let maxThresholdValue = 0;\n  if (!rule.comparisonDelta && warningTrigger?.alertThreshold) {\n    const {alertThreshold} = warningTrigger;\n    const warningThresholdLine = createThresholdSeries(theme.yellow300, alertThreshold);\n    series.push(warningThresholdLine);\n    maxThresholdValue = Math.max(maxThresholdValue, alertThreshold);\n  }\n\n  if (!rule.comparisonDelta && criticalTrigger?.alertThreshold) {\n    const {alertThreshold} = criticalTrigger;\n    const criticalThresholdLine = createThresholdSeries(theme.red300, alertThreshold);\n    series.push(criticalThresholdLine);\n    maxThresholdValue = Math.max(maxThresholdValue, alertThreshold);\n  }\n\n  if (!rule.comparisonDelta && rule.resolveThreshold) {\n    const resolveThresholdLine = createThresholdSeries(\n      theme.green300,\n      rule.resolveThreshold\n    );\n    series.push(resolveThresholdLine);\n    maxThresholdValue = Math.max(maxThresholdValue, rule.resolveThreshold);\n  }\n\n  const yAxis: YAXisComponentOption = {\n    axisLabel: {\n      formatter: (value: number) =>\n        alertAxisFormatter(value, timeseriesData[0].seriesName, rule.aggregate),\n    },\n    max: isCrashFreeAlert(rule.dataset)\n      ? 100\n      : maxThresholdValue > maxSeriesValue\n      ? maxThresholdValue\n      : undefined,\n    min: minChartValue || undefined,\n  };\n\n  return {\n    criticalDuration,\n    warningDuration,\n    totalDuration,\n    chartOption: {\n      isGroupedByDate: true,\n      yAxis,\n      series,\n      grid: {\n        left: space(0.25),\n        right: space(2),\n        top: space(3),\n        bottom: 0,\n      },\n    },\n  };\n}\n\nexport function transformSessionResponseToSeries(\n  response: SessionApiResponse | null,\n  rule: MetricRule\n): MetricChartData['timeseriesData'] {\n  const {aggregate} = rule;\n\n  return [\n    {\n      seriesName:\n        AlertWizardAlertNames[\n          getAlertTypeFromAggregateDataset({\n            aggregate,\n            dataset: Dataset.SESSIONS,\n          })\n        ],\n      data: getCrashFreeRateSeries(\n        response?.groups,\n        response?.intervals,\n        SESSION_AGGREGATE_TO_FIELD[aggregate]\n      ),\n    },\n  ];\n}\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport moment from 'moment-timezone';\n\nimport CollapsePanel from 'sentry/components/collapsePanel';\nimport DateTime from 'sentry/components/dateTime';\nimport Duration from 'sentry/components/duration';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport Link from 'sentry/components/links/link';\nimport PanelTable from 'sentry/components/panels/panelTable';\nimport StatusIndicator from 'sentry/components/statusIndicator';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {AlertRuleThresholdType} from 'sentry/views/alerts/rules/metric/types';\nimport {Incident, IncidentActivityType, IncidentStatus} from 'sentry/views/alerts/types';\nimport {alertDetailsLink} from 'sentry/views/alerts/utils';\nimport {AlertWizardAlertNames} from 'sentry/views/alerts/wizard/options';\nimport {getAlertTypeFromAggregateDataset} from 'sentry/views/alerts/wizard/utils';\n\nconst COLLAPSE_COUNT = 3;\n\nfunction getTriggerName(value: string | null) {\n  if (value === `${IncidentStatus.WARNING}`) {\n    return t('Warning');\n  }\n\n  if (value === `${IncidentStatus.CRITICAL}`) {\n    return t('Critical');\n  }\n\n  // Otherwise, activity type is not status change\n  return '';\n}\n\ntype MetricAlertActivityProps = {\n  incident: Incident;\n  organization: Organization;\n};\n\nfunction MetricAlertActivity({organization, incident}: MetricAlertActivityProps) {\n  const activities = (incident.activities ?? []).filter(\n    activity => activity.type === IncidentActivityType.STATUS_CHANGE\n  );\n  const criticalActivity = activities.filter(\n    activity => activity.value === `${IncidentStatus.CRITICAL}`\n  );\n  const warningActivity = activities.filter(\n    activity => activity.value === `${IncidentStatus.WARNING}`\n  );\n\n  const triggeredActivity = !!criticalActivity.length\n    ? criticalActivity[0]\n    : warningActivity[0];\n  const currentTrigger = getTriggerName(triggeredActivity.value);\n\n  const nextActivity = activities.find(\n    ({previousValue}) => previousValue === triggeredActivity.value\n  );\n\n  const activityDuration = (\n    nextActivity ? moment(nextActivity.dateCreated) : moment()\n  ).diff(moment(triggeredActivity.dateCreated), 'milliseconds');\n\n  const threshold =\n    activityDuration !== null &&\n    tct('[duration]', {\n      duration: <Duration abbreviation seconds={activityDuration / 1000} />,\n    });\n\n  const warningThreshold = incident.alertRule.triggers\n    .filter(trigger => trigger.label === 'warning')\n    .map(trig => trig.alertThreshold);\n  const criticalThreshold = incident.alertRule.triggers\n    .filter(trigger => trigger.label === 'critical')\n    .map(trig => trig.alertThreshold);\n\n  return (\n    <ErrorBoundary>\n      <Title data-test-id=\"alert-title\">\n        <StatusIndicator\n          status={currentTrigger.toLocaleLowerCase()}\n          tooltipTitle={tct('Status: [level]', {level: currentTrigger})}\n        />\n        <Link\n          to={{\n            pathname: alertDetailsLink(organization, incident),\n            query: {alert: incident.identifier},\n          }}\n        >\n          {tct('#[id]', {id: incident.identifier})}\n        </Link>\n      </Title>\n      <Cell>\n        {tct('[title] [selector] [threshold]', {\n          title:\n            AlertWizardAlertNames[getAlertTypeFromAggregateDataset(incident.alertRule)],\n          selector:\n            incident.alertRule.thresholdType === AlertRuleThresholdType.ABOVE\n              ? 'above'\n              : 'below',\n          threshold: currentTrigger === 'Warning' ? warningThreshold : criticalThreshold,\n        })}\n      </Cell>\n      <Cell>\n        {getDynamicText({\n          value: threshold,\n          fixed: '30s',\n        })}\n      </Cell>\n      <StyledDateTime\n        date={getDynamicText({\n          value: incident.dateCreated,\n          fixed: 'Mar 4, 2022 10:44:13 AM UTC',\n        })}\n        year\n        seconds\n        timeZone\n      />\n    </ErrorBoundary>\n  );\n}\n\ntype Props = {\n  organization: Organization;\n  incidents?: Incident[];\n};\n\nfunction MetricHistory({organization, incidents}: Props) {\n  const numOfIncidents = (incidents ?? []).length;\n\n  return (\n    <CollapsePanel\n      items={numOfIncidents}\n      collapseCount={COLLAPSE_COUNT}\n      disableBorder={false}\n      buttonTitle={tn('Hidden Alert', 'Hidden Alerts', numOfIncidents - COLLAPSE_COUNT)}\n    >\n      {({isExpanded, showMoreButton}) => (\n        <div>\n          <StyledPanelTable\n            headers={[t('Alert'), t('Reason'), t('Duration'), t('Date Triggered')]}\n            isEmpty={!numOfIncidents}\n            emptyMessage={t('No alerts triggered during this time.')}\n            expanded={numOfIncidents <= COLLAPSE_COUNT || isExpanded}\n          >\n            {incidents &&\n              incidents.map((incident, idx) => {\n                if (idx >= COLLAPSE_COUNT && !isExpanded) {\n                  return null;\n                }\n                return (\n                  <MetricAlertActivity\n                    key={idx}\n                    incident={incident}\n                    organization={organization}\n                  />\n                );\n              })}\n          </StyledPanelTable>\n          {showMoreButton}\n        </div>\n      )}\n    </CollapsePanel>\n  );\n}\n\nexport default MetricHistory;\n\nconst StyledPanelTable = styled(PanelTable)<{expanded: boolean; isEmpty: boolean}>`\n  grid-template-columns: max-content 1fr repeat(2, max-content);\n\n  & > div {\n    padding: ${space(1)} ${space(2)};\n  }\n\n  div:last-of-type {\n    padding: ${p => p.isEmpty && `48px ${space(1)}`};\n  }\n\n  ${p =>\n    !p.expanded &&\n    css`\n      margin-bottom: 0px;\n      border-bottom-left-radius: 0px;\n      border-bottom-right-radius: 0px;\n      border-bottom: none;\n    `}\n`;\n\nconst StyledDateTime = styled(DateTime)`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeMedium};\n  display: flex;\n  justify-content: flex-start;\n  padding: ${space(1)} ${space(2)} !important;\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  font-size: ${p => p.theme.fontSizeMedium};\n  padding: ${space(1)};\n`;\n\nconst Cell = styled('div')`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  font-size: ${p => p.theme.fontSizeMedium};\n  padding: ${space(1)};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport GroupList from 'sentry/components/issues/groupList';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {OrganizationSummary, Project} from 'sentry/types';\nimport {\n  RELATED_ISSUES_BOOLEAN_QUERY_ERROR,\n  RelatedIssuesNotAvailable,\n} from 'sentry/views/alerts/rules/metric/details/relatedIssuesNotAvailable';\nimport {makeDefaultCta} from 'sentry/views/alerts/rules/metric/metricRulePresets';\nimport {MetricRule} from 'sentry/views/alerts/rules/metric/types';\nimport {isSessionAggregate} from 'sentry/views/alerts/utils';\n\nimport {TimePeriodType} from './constants';\n\ninterface Props {\n  organization: OrganizationSummary;\n  projects: Project[];\n  rule: MetricRule;\n  timePeriod: TimePeriodType;\n  query?: string;\n}\n\nfunction RelatedIssues({rule, organization, projects, query, timePeriod}: Props) {\n  function renderErrorMessage({detail}: {detail: string}, retry: () => void) {\n    if (\n      detail === RELATED_ISSUES_BOOLEAN_QUERY_ERROR &&\n      !isSessionAggregate(rule.aggregate)\n    ) {\n      const {buttonText, to} = makeDefaultCta({\n        orgSlug: organization.slug,\n        projects,\n        rule,\n        query,\n        timePeriod,\n      });\n      return <RelatedIssuesNotAvailable buttonTo={to} buttonText={buttonText} />;\n    }\n\n    return <LoadingError onRetry={retry} />;\n  }\n\n  function renderEmptyMessage() {\n    return (\n      <Panel>\n        <PanelBody>\n          <EmptyStateWarning small withIcon={false}>\n            {t('No issues for this alert rule')}\n          </EmptyStateWarning>\n        </PanelBody>\n      </Panel>\n    );\n  }\n\n  const {start, end} = timePeriod;\n\n  const path = `/organizations/${organization.slug}/issues/`;\n  const queryParams = {\n    start,\n    end,\n    groupStatsPeriod: 'auto',\n    limit: 5,\n    ...(rule.environment ? {environment: rule.environment} : {}),\n    sort: rule.aggregate === 'count_unique(user)' ? 'user' : 'freq',\n    query,\n    project: projects.map(project => project.id),\n  };\n  const issueSearch = {\n    pathname: `/organizations/${organization.slug}/issues/`,\n    query: queryParams,\n  };\n\n  return (\n    <Fragment>\n      <ControlsWrapper>\n        <StyledSectionHeading>{t('Related Issues')}</StyledSectionHeading>\n        <Button data-test-id=\"issues-open\" size=\"xs\" to={issueSearch}>\n          {t('Open in Issues')}\n        </Button>\n      </ControlsWrapper>\n\n      <TableWrapper>\n        <GroupList\n          orgId={organization.slug}\n          endpointPath={path}\n          queryParams={queryParams}\n          query={`start=${start}&end=${end}&groupStatsPeriod=auto`}\n          canSelectGroups={false}\n          renderEmptyMessage={renderEmptyMessage}\n          renderErrorMessage={renderErrorMessage}\n          withChart\n          withPagination={false}\n          useFilteredStats\n          customStatsPeriod={timePeriod}\n          useTintRow={false}\n        />\n      </TableWrapper>\n    </Fragment>\n  );\n}\n\nconst StyledSectionHeading = styled(SectionHeading)`\n  display: flex;\n  align-items: center;\n`;\n\nconst ControlsWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(1)};\n`;\n\nconst TableWrapper = styled('div')`\n  margin-bottom: ${space(4)};\n  ${Panel} {\n    /* smaller space between table and pagination */\n    margin-bottom: -${space(1)};\n  }\n`;\n\nexport default RelatedIssues;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport type {Location} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumn,\n} from 'sentry/components/gridEditable';\nimport type {Alignments} from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport {Organization, Project} from 'sentry/types';\nimport DiscoverQuery, {\n  TableData,\n  TableDataRow,\n} from 'sentry/utils/discover/discoverQuery';\nimport EventView, {EventData} from 'sentry/utils/discover/eventView';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {fieldAlignment} from 'sentry/utils/discover/fields';\nimport type {MetricRule} from 'sentry/views/alerts/rules/metric/types';\nimport {getMetricRuleDiscoverQuery} from 'sentry/views/alerts/utils/getMetricRuleDiscoverUrl';\nimport type {TableColumn} from 'sentry/views/eventsV2/table/types';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nimport type {TimePeriodType} from './constants';\n\nfunction getProjectID(eventData: EventData, projects: Project[]): string | undefined {\n  const projectSlug = (eventData?.project as string) || undefined;\n\n  if (typeof projectSlug === undefined) {\n    return undefined;\n  }\n\n  const project = projects.find(currentProject => currentProject.slug === projectSlug);\n\n  if (!project) {\n    return undefined;\n  }\n\n  return project.id;\n}\n\ntype TableProps = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  summaryConditions: string;\n};\n\ntype TableState = {\n  widths: number[];\n};\nclass Table extends Component<TableProps, TableState> {\n  state: TableState = {\n    widths: [],\n  };\n\n  renderBodyCell(\n    tableData: TableData | null,\n    column: TableColumn<keyof TableDataRow>,\n    dataRow: TableDataRow\n  ): React.ReactNode {\n    const {eventView, organization, projects, location, summaryConditions} = this.props;\n\n    if (!tableData || !tableData.meta) {\n      return dataRow[column.key];\n    }\n    const tableMeta = tableData.meta;\n\n    const field = String(column.key);\n    const fieldRenderer = getFieldRenderer(field, tableMeta, false);\n    const rendered = fieldRenderer(dataRow, {organization, location});\n\n    if (field === 'transaction') {\n      const projectID = getProjectID(dataRow, projects);\n      const summaryView = eventView.clone();\n      summaryView.query = summaryConditions;\n\n      const target = transactionSummaryRouteWithQuery({\n        orgSlug: organization.slug,\n        transaction: String(dataRow.transaction) || '',\n        query: summaryView.generateQueryStringObject(),\n        projectID,\n      });\n\n      return <Link to={target}>{rendered}</Link>;\n    }\n\n    return rendered;\n  }\n\n  renderBodyCellWithData = (tableData: TableData | null) => {\n    return (\n      column: TableColumn<keyof TableDataRow>,\n      dataRow: TableDataRow\n    ): React.ReactNode => this.renderBodyCell(tableData, column, dataRow);\n  };\n\n  renderHeadCell(\n    tableMeta: TableData['meta'],\n    column: TableColumn<keyof TableDataRow>,\n    title: React.ReactNode\n  ): React.ReactNode {\n    const align = fieldAlignment(column.name, column.type, tableMeta);\n    const field = {field: column.name, width: column.width};\n\n    return <HeaderCell align={align}>{title || field.field}</HeaderCell>;\n  }\n\n  renderHeadCellWithMeta = (tableMeta: TableData['meta'], columnName: string) => {\n    const columnTitles = ['transactions', 'project', columnName, 'users', 'user misery'];\n\n    return (column: TableColumn<keyof TableDataRow>, index: number): React.ReactNode =>\n      this.renderHeadCell(tableMeta, column, columnTitles[index]);\n  };\n\n  handleResizeColumn = (columnIndex: number, nextColumn: GridColumn) => {\n    const widths: number[] = [...this.state.widths];\n    widths[columnIndex] = nextColumn.width\n      ? Number(nextColumn.width)\n      : COL_WIDTH_UNDEFINED;\n    this.setState({widths});\n  };\n\n  getSortedEventView() {\n    const {eventView} = this.props;\n    return eventView.withSorts([...eventView.sorts]);\n  }\n\n  render() {\n    const {eventView, organization, location} = this.props;\n\n    const {widths} = this.state;\n    const columnOrder = eventView\n      .getColumns()\n      .map((col: TableColumn<React.ReactText>, i: number) => {\n        if (typeof widths[i] === 'number') {\n          return {...col, width: widths[i]};\n        }\n        return col;\n      });\n\n    const sortedEventView = this.getSortedEventView();\n    const columnSortBy = sortedEventView.getSorts();\n\n    return (\n      <Fragment>\n        <DiscoverQuery\n          eventView={sortedEventView}\n          orgSlug={organization.slug}\n          location={location}\n          useEvents\n        >\n          {({isLoading, tableData}) => (\n            <GridEditable\n              isLoading={isLoading}\n              data={tableData ? tableData.data.slice(0, 5) : []}\n              columnOrder={columnOrder}\n              columnSortBy={columnSortBy}\n              grid={{\n                onResizeColumn: this.handleResizeColumn,\n                renderHeadCell: this.renderHeadCellWithMeta(\n                  tableData?.meta,\n                  columnOrder[2].name as string\n                ) as any,\n                renderBodyCell: this.renderBodyCellWithData(tableData) as any,\n              }}\n              location={location}\n            />\n          )}\n        </DiscoverQuery>\n      </Fragment>\n    );\n  }\n}\n\ninterface Props {\n  filter: string;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  rule: MetricRule;\n  timePeriod: TimePeriodType;\n}\n\nfunction RelatedTransactions({\n  rule,\n  projects,\n  filter,\n  location,\n  organization,\n  timePeriod,\n}: Props) {\n  const eventView = getMetricRuleDiscoverQuery({\n    rule,\n    timePeriod,\n    projects,\n  });\n\n  if (!eventView) {\n    return null;\n  }\n\n  return (\n    <Table\n      eventView={eventView}\n      projects={projects}\n      organization={organization}\n      location={location}\n      summaryConditions={`${rule.query} ${filter}`}\n    />\n  );\n}\n\nexport default RelatedTransactions;\n\nconst HeaderCell = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n","import {Fragment, PureComponent, ReactNode} from 'react';\nimport styled from '@emotion/styled';\n\nimport AlertBadge from 'sentry/components/alertBadge';\nimport ActorAvatar from 'sentry/components/avatar/actorAvatar';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport DateTime from 'sentry/components/dateTime';\nimport Duration from 'sentry/components/duration';\nimport {KeyValueTable, KeyValueTableRow} from 'sentry/components/keyValueTable';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconDiamond} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Actor} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {COMPARISON_DELTA_OPTIONS} from 'sentry/views/alerts/rules/metric/constants';\nimport {\n  Action,\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  MetricRule,\n} from 'sentry/views/alerts/rules/metric/types';\nimport {AlertWizardAlertNames} from 'sentry/views/alerts/wizard/options';\nimport {getAlertTypeFromAggregateDataset} from 'sentry/views/alerts/wizard/utils';\n\nimport {IncidentStatus} from '../../../types';\n\ninterface Props {\n  rule: MetricRule;\n}\n\nexport default class Sidebar extends PureComponent<Props> {\n  getTimeWindow(): ReactNode {\n    const {rule} = this.props;\n\n    if (!rule) {\n      return '';\n    }\n\n    const {timeWindow} = rule;\n\n    return tct('[window]', {\n      window: <Duration seconds={timeWindow * 60} />,\n    });\n  }\n\n  renderTrigger(label: string, threshold: number, actions: Action[]): ReactNode {\n    const {rule} = this.props;\n\n    const status =\n      label === AlertRuleTriggerType.CRITICAL\n        ? t('Critical')\n        : label === AlertRuleTriggerType.WARNING\n        ? t('Warning')\n        : t('Resolved');\n\n    const statusIconColor =\n      label === AlertRuleTriggerType.CRITICAL\n        ? 'red300'\n        : label === AlertRuleTriggerType.WARNING\n        ? 'yellow300'\n        : 'green300';\n\n    const defaultAction = t('Change alert status to %s', status);\n\n    const aboveThreshold =\n      label === AlertRuleTriggerType.RESOLVE\n        ? rule.thresholdType === AlertRuleThresholdType.BELOW\n        : rule.thresholdType === AlertRuleThresholdType.ABOVE;\n\n    const thresholdTypeText = aboveThreshold\n      ? rule.comparisonDelta\n        ? t('higher')\n        : t('above')\n      : rule.comparisonDelta\n      ? t('lower')\n      : t('below');\n\n    const thresholdText = rule.comparisonDelta\n      ? tct(\n          '[metric] is [threshold]% [comparisonType] in [timeWindow] compared to [comparisonDelta]',\n          {\n            metric: AlertWizardAlertNames[getAlertTypeFromAggregateDataset(rule)],\n            threshold,\n            comparisonType: thresholdTypeText,\n            timeWindow: this.getTimeWindow(),\n            comparisonDelta: (\n              COMPARISON_DELTA_OPTIONS.find(\n                ({value}) => value === rule.comparisonDelta\n              ) ?? COMPARISON_DELTA_OPTIONS[0]\n            ).label,\n          }\n        )\n      : tct('[metric] is [condition] in [timeWindow]', {\n          metric: AlertWizardAlertNames[getAlertTypeFromAggregateDataset(rule)],\n          condition: `${thresholdTypeText} ${threshold}`,\n          timeWindow: this.getTimeWindow(),\n        });\n\n    return (\n      <TriggerContainer>\n        <TriggerTitle>\n          <IconDiamond color={statusIconColor} size=\"xs\" />\n          <TriggerTitleText>{t('%s Conditions', status)}</TriggerTitleText>\n        </TriggerTitle>\n        <TriggerStep>\n          <TriggerTitleText>When</TriggerTitleText>\n          <TriggerActions>\n            <TriggerText>{thresholdText}</TriggerText>\n          </TriggerActions>\n        </TriggerStep>\n        <TriggerStep>\n          <TriggerTitleText>Then</TriggerTitleText>\n          <TriggerActions>\n            {actions.map(action => (\n              <TriggerText key={action.id}>{action.desc}</TriggerText>\n            ))}\n            <TriggerText>{defaultAction}</TriggerText>\n          </TriggerActions>\n        </TriggerStep>\n      </TriggerContainer>\n    );\n  }\n\n  render() {\n    const {rule} = this.props;\n\n    // get current status\n    const latestIncident = rule.latestIncident;\n    const status = latestIncident ? latestIncident.status : IncidentStatus.CLOSED;\n    // The date at which the alert was triggered or resolved\n    const activityDate =\n      latestIncident?.dateClosed ?? latestIncident?.dateStarted ?? null;\n\n    const criticalTrigger = rule?.triggers.find(\n      ({label}) => label === AlertRuleTriggerType.CRITICAL\n    );\n    const warningTrigger = rule?.triggers.find(\n      ({label}) => label === AlertRuleTriggerType.WARNING\n    );\n\n    const ownerId = rule.owner?.split(':')[1];\n    const teamActor = ownerId && {type: 'team' as Actor['type'], id: ownerId, name: ''};\n\n    return (\n      <Fragment>\n        <StatusContainer>\n          <HeaderItem>\n            <Heading noMargin>{t('Alert Status')}</Heading>\n            <Status>\n              <AlertBadge status={status} />\n            </Status>\n          </HeaderItem>\n          <HeaderItem>\n            <Heading noMargin>{t('Last Triggered')}</Heading>\n            <Status>\n              {activityDate ? (\n                <TimeSince date={activityDate} />\n              ) : (\n                t('No alerts triggered')\n              )}\n            </Status>\n          </HeaderItem>\n        </StatusContainer>\n        <SidebarGroup>\n          {typeof criticalTrigger?.alertThreshold === 'number' &&\n            this.renderTrigger(\n              criticalTrigger.label,\n              criticalTrigger.alertThreshold,\n              criticalTrigger.actions\n            )}\n          {typeof warningTrigger?.alertThreshold === 'number' &&\n            this.renderTrigger(\n              warningTrigger.label,\n              warningTrigger.alertThreshold,\n              warningTrigger.actions\n            )}\n          {typeof rule.resolveThreshold === 'number' &&\n            this.renderTrigger(AlertRuleTriggerType.RESOLVE, rule.resolveThreshold, [])}\n        </SidebarGroup>\n\n        <SidebarGroup>\n          <Heading>{t('Alert Rule Details')}</Heading>\n          <KeyValueTable>\n            <KeyValueTableRow\n              keyName={t('Environment')}\n              value={<OverflowTableValue>{rule.environment ?? '-'}</OverflowTableValue>}\n            />\n\n            <KeyValueTableRow\n              keyName={t('Date created')}\n              value={\n                <DateTime\n                  date={getDynamicText({\n                    value: rule.dateCreated,\n                    fixed: new Date('2021-04-20'),\n                  })}\n                  format=\"ll\"\n                />\n              }\n            />\n\n            {rule.createdBy && (\n              <KeyValueTableRow\n                keyName={t('Created By')}\n                value={\n                  <OverflowTableValue>{rule.createdBy.name ?? '-'}</OverflowTableValue>\n                }\n              />\n            )}\n\n            {rule.dateModified && (\n              <KeyValueTableRow\n                keyName={t('Last Modified')}\n                value={<TimeSince date={rule.dateModified} suffix={t('ago')} />}\n              />\n            )}\n\n            <KeyValueTableRow\n              keyName={t('Team')}\n              value={\n                teamActor ? <ActorAvatar actor={teamActor} size={24} /> : t('Unassigned')\n              }\n            />\n          </KeyValueTable>\n        </SidebarGroup>\n      </Fragment>\n    );\n  }\n}\n\nconst SidebarGroup = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst HeaderItem = styled('div')`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  > *:nth-child(2) {\n    flex: 1;\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst Status = styled('div')`\n  position: relative;\n  display: grid;\n  grid-template-columns: auto auto auto;\n  gap: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst StatusContainer = styled('div')`\n  height: 60px;\n  display: flex;\n  margin-bottom: ${space(1)};\n`;\n\nconst Heading = styled(SectionHeading)<{noMargin?: boolean}>`\n  margin-top: ${p => (p.noMargin ? 0 : space(2))};\n  margin-bottom: ${p => (p.noMargin ? 0 : space(1))};\n`;\n\nconst OverflowTableValue = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n`;\n\nconst TriggerContainer = styled('div')`\n  display: grid;\n  grid-template-rows: auto auto auto;\n  gap: ${space(1)};\n  margin-top: ${space(4)};\n`;\n\nconst TriggerTitle = styled('div')`\n  display: grid;\n  grid-template-columns: 20px 1fr;\n  align-items: center;\n`;\n\nconst TriggerTitleText = styled('h4')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0;\n  line-height: 24px;\n  min-width: 40px;\n`;\n\nconst TriggerStep = styled('div')`\n  display: grid;\n  grid-template-columns: 40px 1fr;\n  align-items: stretch;\n`;\n\nconst TriggerActions = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(1fr);\n  gap: ${space(0.25)};\n  align-items: center;\n`;\n\nconst TriggerText = styled('span')`\n  display: block;\n  background-color: ${p => p.theme.surface100};\n  padding: ${space(0.25)} ${space(0.75)};\n  border-radius: ${p => p.theme.borderRadius};\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeSmall};\n  width: 100%;\n  font-weight: 400;\n`;\n","import type {LinkProps} from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport type {Project} from 'sentry/types';\nimport {DisplayModes} from 'sentry/utils/discover/types';\nimport type {TimePeriodType} from 'sentry/views/alerts/rules/metric/details/constants';\nimport type {MetricRule} from 'sentry/views/alerts/rules/metric/types';\nimport {getMetricRuleDiscoverUrl} from 'sentry/views/alerts/utils/getMetricRuleDiscoverUrl';\n\ninterface PresetCta {\n  /**\n   * The CTA text\n   */\n  buttonText: string;\n  /**\n   * The location to direct to upon clicking the CTA.\n   */\n  to: LinkProps['to'];\n}\n\ninterface PresetCtaOpts {\n  orgSlug: string;\n  projects: Project[];\n  timePeriod: TimePeriodType;\n  query?: string;\n  rule?: MetricRule;\n}\n\n/**\n * Get the CTA used for alert rules that do not have a preset\n */\nexport function makeDefaultCta({\n  orgSlug,\n  projects,\n  rule,\n  timePeriod,\n  query,\n}: PresetCtaOpts): PresetCta {\n  if (!rule) {\n    return {\n      buttonText: t('Open in Discover'),\n      to: '',\n    };\n  }\n\n  const extraQueryParams = {\n    display: DisplayModes.TOP5,\n  };\n\n  return {\n    buttonText: t('Open in Discover'),\n    to: getMetricRuleDiscoverUrl({\n      orgSlug,\n      projects,\n      rule,\n      timePeriod,\n      query,\n      extraQueryParams,\n    }),\n  };\n}\n","import {t} from 'sentry/locale';\nimport {MEPAlertsQueryType} from 'sentry/views/alerts/wizard/options';\nimport type {SchemaFormConfig} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\n\nimport type {Incident} from '../../types';\n\nexport enum AlertRuleThresholdType {\n  ABOVE,\n  BELOW,\n}\n\nexport enum AlertRuleTriggerType {\n  CRITICAL = 'critical',\n  WARNING = 'warning',\n  RESOLVE = 'resolve',\n}\n\nexport enum AlertRuleComparisonType {\n  COUNT = 'count',\n  CHANGE = 'change',\n  PERCENT = 'percent',\n}\n\nexport enum Dataset {\n  ERRORS = 'events',\n  TRANSACTIONS = 'transactions',\n  /** Also used for performance alerts **/\n  GENERIC_METRICS = 'generic_metrics',\n  SESSIONS = 'sessions',\n  /** Also used for crash free alerts */\n  METRICS = 'metrics',\n}\n\nexport enum EventTypes {\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n  USER = 'user',\n  SESSION = 'session',\n}\n\nexport enum Datasource {\n  ERROR_DEFAULT = 'error_default',\n  DEFAULT = 'default',\n  ERROR = 'error',\n  TRANSACTION = 'transaction',\n}\n\n/**\n * This is not a real aggregate as crash-free sessions/users can be only calculated on frontend by comparing the count of sessions broken down by status\n * It is here nevertheless to shoehorn sessions dataset into existing alerts codebase\n * This will most likely be revised as we introduce the metrics dataset\n */\nexport enum SessionsAggregate {\n  CRASH_FREE_SESSIONS = 'percentage(sessions_crashed, sessions) AS _crash_rate_alert_aggregate',\n  CRASH_FREE_USERS = 'percentage(users_crashed, users) AS _crash_rate_alert_aggregate',\n}\n\nexport type UnsavedTrigger = {\n  actions: Action[];\n  alertThreshold: number | '' | null;\n  label: AlertRuleTriggerType;\n  // UnsavedTrigger can be a part of an Unsaved Alert Rule that does not have an\n  // id yet\n  alertRuleId?: string;\n};\n\nexport type ThresholdControlValue = {\n  /**\n   * Resolve threshold is optional, so it can be null\n   */\n  threshold: number | '' | null;\n  thresholdType: AlertRuleThresholdType;\n};\n\ntype SavedTrigger = Omit<UnsavedTrigger, 'actions'> & {\n  actions: Action[];\n  dateCreated: string;\n  id: string;\n};\n\nexport type Trigger = Partial<SavedTrigger> & UnsavedTrigger;\n\nexport type UnsavedMetricRule = {\n  aggregate: string;\n  dataset: Dataset;\n  environment: string | null;\n  projects: string[];\n  query: string;\n  resolveThreshold: number | '' | null;\n  thresholdPeriod: number | null;\n  thresholdType: AlertRuleThresholdType;\n  timeWindow: TimeWindow;\n  triggers: Trigger[];\n  comparisonDelta?: number | null;\n  eventTypes?: EventTypes[];\n  owner?: string | null;\n  queryType?: MEPAlertsQueryType | null;\n};\n\nexport interface SavedMetricRule extends UnsavedMetricRule {\n  dateCreated: string;\n  dateModified: string;\n  id: string;\n  name: string;\n  status: number;\n  createdBy?: {email: string; id: number; name: string} | null;\n  errors?: {detail: string}[];\n  /**\n   * Returned with the expand=latestIncident query parameter\n   */\n  latestIncident?: Incident | null;\n  originalAlertRuleId?: number | null;\n}\n\nexport type MetricRule = Partial<SavedMetricRule> & UnsavedMetricRule;\n\nexport enum TimePeriod {\n  SIX_HOURS = '6h',\n  ONE_DAY = '1d',\n  THREE_DAYS = '3d',\n  // Seven days is actually 10080m but we have a max of 10000 events\n  SEVEN_DAYS = '10000m',\n  FOURTEEN_DAYS = '14d',\n  THIRTY_DAYS = '30d',\n}\n\nexport enum TimeWindow {\n  ONE_MINUTE = 1,\n  FIVE_MINUTES = 5,\n  TEN_MINUTES = 10,\n  FIFTEEN_MINUTES = 15,\n  THIRTY_MINUTES = 30,\n  ONE_HOUR = 60,\n  TWO_HOURS = 120,\n  FOUR_HOURS = 240,\n  ONE_DAY = 1440,\n}\n\nexport enum ActionType {\n  EMAIL = 'email',\n  SLACK = 'slack',\n  PAGERDUTY = 'pagerduty',\n  MSTEAMS = 'msteams',\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const ActionLabel = {\n  // \\u200B is needed because Safari disregards autocomplete=\"off\". It's seeing \"Email\" and\n  // opening up the browser autocomplete for email. https://github.com/JedWatson/react-select/issues/3500\n  [ActionType.EMAIL]: t('Emai\\u200Bl'),\n  [ActionType.SLACK]: t('Slack'),\n  [ActionType.PAGERDUTY]: t('Pagerduty'),\n  [ActionType.MSTEAMS]: t('MS Teams'),\n  [ActionType.SENTRY_APP]: t('Notification'),\n};\n\nexport enum TargetType {\n  // A direct reference, like an email address, Slack channel, or PagerDuty service\n  SPECIFIC = 'specific',\n\n  // A specific user. This could be used to grab the user's email address.\n  USER = 'user',\n\n  // A specific team. This could be used to send an email to everyone associated with a team.\n  TEAM = 'team',\n\n  // A Sentry App instead of any of the above.\n  SENTRY_APP = 'sentry_app',\n}\n\nexport const TargetLabel = {\n  [TargetType.USER]: t('Member'),\n  [TargetType.TEAM]: t('Team'),\n};\n\n/**\n * This is an available action template that is associated to a Trigger in a\n * Metric Alert Rule. They are defined by the available-actions API.\n */\nexport type MetricActionTemplate = {\n  /**\n   * See `TargetType`\n   */\n  allowedTargetTypes: TargetType[];\n\n  /**\n   * The integration type e.g. 'email'\n   */\n  type: ActionType;\n\n  /**\n   * Integration id for this `type`, should be passed to backend as `integrationId` when creating an action\n   */\n  integrationId?: number;\n\n  /**\n   * Name of the integration. This is a text field that differentiates integrations from the same provider from each other\n   */\n  integrationName?: string;\n\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options?: Array<{label: string; value: any}>;\n\n  /**\n   * SentryApp id for this `type`, should be passed to backend as `sentryAppId` when creating an action.\n   */\n  sentryAppId?: number;\n\n  sentryAppInstallationUuid?: string;\n  /**\n   * Name of the SentryApp. Like `integrationName`, this differentiates SentryApps from each other.\n   */\n  sentryAppName?: string;\n\n  /**\n   * Sentry App Alert Rule UI Component settings\n   */\n  settings?: SchemaFormConfig;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n\n/**\n * This is the user's configured action\n */\nexport type Action = UnsavedAction & Partial<SavedActionFields>;\n\ntype SavedActionFields = {\n  /**\n   * The id of the alert rule this action belongs to\n   */\n  alertRuleTriggerId: string;\n\n  /**\n   * date created\n   */\n  dateCreated: string;\n\n  /**\n   * A human readable description of the action generated by server\n   */\n  desc: string;\n\n  /**\n   * model id of the action\n   */\n  id: string;\n\n  /**\n   *  Could not fetch details from SentryApp. Show the rule but make it disabled.\n   */\n  disabled?: boolean;\n};\n\ntype UnsavedAction = {\n  /**\n   * An optional Slack channel or user id the user can input to avoid rate limiting issues.\n   */\n  inputChannelId: string | null;\n  /**\n   * For some available actions, we pass in the list of available targets.\n   */\n  options: Array<{label: string; value: any}> | null;\n  /**\n   * How to identify the target. Can be email, slack channel, pagerduty service,\n   * user_id, team_id, SentryApp id, etc\n   */\n  targetIdentifier: string | null;\n\n  targetType: TargetType | null;\n\n  type: ActionType;\n  /** Used to maintain order of unsaved actions */\n  unsavedDateCreated: string;\n  unsavedId: string;\n\n  /**\n   * The id of the integration, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  integrationId?: number | null;\n\n  /**\n   * The id of the SentryApp, can be null (e.g. email) or undefined (server errors when posting w/ null value)\n   */\n  sentryAppId?: number | null;\n\n  /**\n   * If this is a `sentry_app` action, this is the Sentry App's status.\n   */\n  status?: 'unpublished' | 'published' | 'internal';\n};\n","import {convertDatasetEventTypesToSource} from 'sentry/views/alerts/utils';\n\nimport {DATASET_EVENT_TYPE_FILTERS, DATASOURCE_EVENT_TYPE_FILTERS} from '../constants';\nimport {Dataset, Datasource, EventTypes, MetricRule} from '../types';\n\nexport function extractEventTypeFilterFromRule(metricRule: MetricRule) {\n  const {dataset, eventTypes} = metricRule;\n  return getEventTypeFilter(dataset, eventTypes);\n}\n\nexport function getEventTypeFilter(\n  dataset: Dataset,\n  eventTypes: EventTypes[] | undefined\n) {\n  if (eventTypes) {\n    return DATASOURCE_EVENT_TYPE_FILTERS[\n      convertDatasetEventTypesToSource(dataset, eventTypes) ?? Datasource.ERROR\n    ];\n  }\n  return DATASET_EVENT_TYPE_FILTERS[dataset ?? Dataset.ERRORS];\n}\n","import {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {getMEPAlertsDataset} from 'sentry/views/alerts/wizard/options';\n\nimport {MetricRule} from '../types';\n\nexport function getMetricDatasetQueryExtras({\n  organization,\n  location,\n  dataset,\n  newAlertOrQuery,\n}: {\n  dataset: MetricRule['dataset'];\n  newAlertOrQuery: boolean;\n  organization: Organization;\n  location?: Location;\n}) {\n  const hasMetricDataset =\n    organization.features.includes('metrics-performance-alerts') ||\n    organization.features.includes('mep-rollout-flag');\n  const disableMetricDataset =\n    decodeScalar(location?.query?.disableMetricDataset) === 'true';\n\n  const queryExtras: Record<string, string> =\n    hasMetricDataset && !disableMetricDataset\n      ? {dataset: getMEPAlertsDataset(dataset, newAlertOrQuery)}\n      : {};\n\n  return queryExtras;\n}\n","import {Dataset} from '../types';\n\n/**\n * Currently we can tell if an alert is a crash free alert by the dataset,\n * but this may become more complicated soon\n */\nexport function isCrashFreeAlert(dataset?: Dataset): boolean {\n  return dataset !== undefined && [Dataset.SESSIONS, Dataset.METRICS].includes(dataset);\n}\n","import {User} from 'sentry/types';\nimport {IssueAlertRule} from 'sentry/types/alerts';\nimport {MetricRule} from 'sentry/views/alerts/rules/metric/types';\n\ntype Data = [number, {count: number}[]][];\n\nexport enum AlertRuleType {\n  METRIC = 'metric',\n  ISSUE = 'issue',\n}\n\nexport type Incident = {\n  alertRule: MetricRule;\n  dateClosed: string | null;\n  dateCreated: string;\n  dateDetected: string;\n  dateStarted: string;\n  // Array of group ids\n  discoverQuery: string;\n  groups: string[];\n  hasSeen: boolean;\n  id: string;\n  identifier: string;\n  isSubscribed: boolean;\n  organizationId: string;\n  projects: string[];\n  // Array of slugs\n  seenBy: User[];\n  status: IncidentStatus;\n  statusMethod: IncidentStatusMethod;\n  title: string;\n  activities?: ActivityType[];\n};\n\nexport type IncidentStats = {\n  eventStats: {\n    data: Data;\n  };\n  totalEvents: number;\n  uniqueUsers: number;\n};\n\nexport type ActivityTypeDraft = {\n  comment: null | string;\n  dateCreated: string;\n  id: string;\n  incidentIdentifier: string;\n  type: IncidentActivityType;\n  user: User | null;\n};\n\nexport type ActivityType = ActivityTypeDraft & {\n  previousValue: string | null;\n  value: string | null;\n  eventStats?: {data: Data};\n};\n\nexport enum IncidentActivityType {\n  CREATED = 0,\n  DETECTED = 1,\n  STATUS_CHANGE = 2,\n  COMMENT = 3,\n  STARTED = 4,\n}\n\nexport enum IncidentStatus {\n  OPENED = 1,\n  CLOSED = 2,\n  WARNING = 10,\n  CRITICAL = 20,\n}\n\nexport enum IncidentStatusMethod {\n  MANUAL = 1,\n  RULE_UPDATED = 2,\n  RULE_TRIGGERED = 3,\n}\n\nexport enum AlertRuleStatus {\n  PENDING = 0,\n  SNAPSHOT = 4,\n  DISABLED = 5,\n}\n\nexport enum CombinedAlertType {\n  METRIC = 'alert_rule',\n  ISSUE = 'rule',\n}\n\nexport type CombinedMetricIssueAlerts = (IssueAlertRule | MetricRule) & {\n  type: CombinedAlertType;\n  latestIncident?: Incident | null;\n};\n","import {Client} from 'sentry/api';\nimport {MetricRule} from 'sentry/views/alerts/rules/metric/types';\n\nimport type {Incident} from '../types';\n\n// Use this api for requests that are getting cancelled\nconst uncancellableApi = new Client();\n\nexport function fetchAlertRule(\n  orgId: string,\n  ruleId: string,\n  query?: Record<string, string>\n): Promise<MetricRule> {\n  return uncancellableApi.requestPromise(\n    `/organizations/${orgId}/alert-rules/${ruleId}/`,\n    {query}\n  );\n}\n\nexport function fetchIncidentsForRule(\n  orgId: string,\n  alertRule: string,\n  start: string,\n  end: string\n): Promise<Incident[]> {\n  return uncancellableApi.requestPromise(`/organizations/${orgId}/incidents/`, {\n    query: {\n      project: '-1',\n      alertRule,\n      includeSnapshots: true,\n      start,\n      end,\n      expand: ['activities', 'seen_by', 'original_alert_rule'],\n    },\n  });\n}\n\nexport function fetchIncident(\n  api: Client,\n  orgId: string,\n  alertId: string\n): Promise<Incident> {\n  return api.requestPromise(`/organizations/${orgId}/incidents/${alertId}/`);\n}\n","import {\n  AlertRuleThresholdType,\n  AlertRuleTriggerType,\n  Trigger,\n} from 'sentry/views/alerts/rules/metric/types';\n\nexport const getChangeStatus = (\n  value: number,\n  thresholdType: AlertRuleThresholdType,\n  triggers: Trigger[]\n): string => {\n  const criticalTrigger = triggers?.find(\n    trig => trig.label === AlertRuleTriggerType.CRITICAL\n  );\n  const warningTrigger = triggers?.find(\n    trig => trig.label === AlertRuleTriggerType.WARNING\n  );\n  const criticalTriggerAlertThreshold =\n    typeof criticalTrigger?.alertThreshold === 'number'\n      ? criticalTrigger.alertThreshold\n      : undefined;\n  const warningTriggerAlertThreshold =\n    typeof warningTrigger?.alertThreshold === 'number'\n      ? warningTrigger.alertThreshold\n      : undefined;\n\n  // Need to catch the critical threshold cases before warning threshold cases\n  if (\n    thresholdType === AlertRuleThresholdType.ABOVE &&\n    criticalTriggerAlertThreshold &&\n    value >= criticalTriggerAlertThreshold\n  ) {\n    return AlertRuleTriggerType.CRITICAL;\n  }\n  if (\n    thresholdType === AlertRuleThresholdType.ABOVE &&\n    warningTriggerAlertThreshold &&\n    value >= warningTriggerAlertThreshold\n  ) {\n    return AlertRuleTriggerType.WARNING;\n  }\n  // When threshold is below(lower than in comparison alerts) the % diff value is negative\n  // It crosses the threshold if its abs value is greater than threshold\n  // -80% change crosses below 60% threshold -1 * (-80) > 60\n  if (\n    thresholdType === AlertRuleThresholdType.BELOW &&\n    criticalTriggerAlertThreshold &&\n    -1 * value >= criticalTriggerAlertThreshold\n  ) {\n    return AlertRuleTriggerType.CRITICAL;\n  }\n  if (\n    thresholdType === AlertRuleThresholdType.BELOW &&\n    warningTriggerAlertThreshold &&\n    -1 * value >= warningTriggerAlertThreshold\n  ) {\n    return AlertRuleTriggerType.WARNING;\n  }\n\n  return '';\n};\n","import type {NewQuery, Project} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {getAggregateAlias} from 'sentry/utils/discover/fields';\nimport type {TimePeriodType} from 'sentry/views/alerts/rules/metric/details/constants';\nimport {Dataset, MetricRule, TimePeriod} from 'sentry/views/alerts/rules/metric/types';\nimport {DEFAULT_PROJECT_THRESHOLD} from 'sentry/views/performance/data';\n\ninterface MetricRuleDiscoverUrlOptions {\n  orgSlug: string;\n  projects: Project[];\n  timePeriod: Omit<TimePeriodType, 'display' | 'label'>;\n  extraQueryParams?: Partial<NewQuery>;\n  query?: string;\n  rule?: MetricRule;\n}\n\n/**\n * Gets the URL for a discover view of the rule with the following default\n * parameters:\n *\n * - Ordered by the rule aggregate, descending\n * - yAxis maps to the aggregate\n * - Start and end are the period's values selected in the chart header\n */\nexport function getMetricRuleDiscoverUrl({\n  orgSlug,\n  ...rest\n}: MetricRuleDiscoverUrlOptions) {\n  const discoverView = getMetricRuleDiscoverQuery(rest);\n  if (!discoverView || !rest.rule) {\n    return '';\n  }\n\n  const {query, ...toObject} = discoverView.getResultsViewUrlTarget(orgSlug);\n  const timeWindowString = `${rest.rule.timeWindow}m`;\n\n  return {\n    query: {...query, interval: timeWindowString},\n    ...toObject,\n  };\n}\n\nexport function getMetricRuleDiscoverQuery({\n  projects,\n  rule,\n  timePeriod,\n  query,\n  extraQueryParams,\n}: Omit<MetricRuleDiscoverUrlOptions, 'orgSlug'>) {\n  if (!projects || !projects.length || !rule) {\n    return '';\n  }\n\n  const aggregateAlias = getAggregateAlias(rule.aggregate);\n\n  const timePeriodFields = timePeriod.usingPeriod\n    ? {range: timePeriod.period === TimePeriod.SEVEN_DAYS ? '7d' : timePeriod.period}\n    : {start: timePeriod.start, end: timePeriod.end};\n\n  const fields =\n    rule.dataset === Dataset.ERRORS\n      ? ['issue', 'count()', 'count_unique(user)']\n      : [\n          'transaction',\n          'project',\n          `${rule.aggregate}`,\n          'count_unique(user)',\n          `user_misery(${DEFAULT_PROJECT_THRESHOLD})`,\n        ];\n\n  const eventQuery: NewQuery = {\n    id: undefined,\n    name: (rule && rule.name) || 'Transactions',\n    fields,\n    orderby: `-${aggregateAlias}`,\n    query: query ?? rule.query ?? '',\n    version: 2,\n    projects: projects\n      .filter(({slug}) => rule.projects.includes(slug))\n      .map(project => Number(project.id)),\n    environment: rule.environment ? [rule.environment] : undefined,\n    ...timePeriodFields,\n    ...extraQueryParams,\n  };\n\n  return EventView.fromSavedQuery(eventQuery);\n}\n","import round from 'lodash/round';\n\nimport {t} from 'sentry/locale';\nimport {Organization, SessionFieldWithOperation} from 'sentry/types';\nimport {IssueAlertRule} from 'sentry/types/alerts';\nimport {defined} from 'sentry/utils';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {\n  Dataset,\n  Datasource,\n  EventTypes,\n  MetricRule,\n  SavedMetricRule,\n  SessionsAggregate,\n} from 'sentry/views/alerts/rules/metric/types';\n\nimport {AlertRuleStatus, Incident, IncidentStats} from '../types';\n\n/**\n * Gets start and end date query parameters from stats\n */\nexport function getStartEndFromStats(stats: IncidentStats) {\n  const start = getUtcDateString(stats.eventStats.data[0][0] * 1000);\n  const end = getUtcDateString(\n    stats.eventStats.data[stats.eventStats.data.length - 1][0] * 1000\n  );\n\n  return {start, end};\n}\n\nexport function isIssueAlert(\n  data: IssueAlertRule | SavedMetricRule | MetricRule\n): data is IssueAlertRule {\n  return !data.hasOwnProperty('triggers');\n}\n\nexport const DATA_SOURCE_LABELS = {\n  [Dataset.ERRORS]: t('Errors'),\n  [Dataset.TRANSACTIONS]: t('Transactions'),\n  [Datasource.ERROR_DEFAULT]: 'event.type:error OR event.type:default',\n  [Datasource.ERROR]: 'event.type:error',\n  [Datasource.DEFAULT]: 'event.type:default',\n  [Datasource.TRANSACTION]: 'event.type:transaction',\n};\n\n// Maps a datasource to the relevant dataset and event_types for the backend to use\nexport const DATA_SOURCE_TO_SET_AND_EVENT_TYPES = {\n  [Datasource.ERROR_DEFAULT]: {\n    dataset: Dataset.ERRORS,\n    eventTypes: [EventTypes.ERROR, EventTypes.DEFAULT],\n  },\n  [Datasource.ERROR]: {\n    dataset: Dataset.ERRORS,\n    eventTypes: [EventTypes.ERROR],\n  },\n  [Datasource.DEFAULT]: {\n    dataset: Dataset.ERRORS,\n    eventTypes: [EventTypes.DEFAULT],\n  },\n  [Datasource.TRANSACTION]: {\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: [EventTypes.TRANSACTION],\n  },\n};\n\n// Converts the given dataset and event types array to a datasource for the datasource dropdown\nexport function convertDatasetEventTypesToSource(\n  dataset: Dataset,\n  eventTypes: EventTypes[]\n) {\n  // transactions and generic_metrics only have one datasource option regardless of event type\n  if (dataset === Dataset.TRANSACTIONS || dataset === Dataset.GENERIC_METRICS) {\n    return Datasource.TRANSACTION;\n  }\n  // if no event type was provided use the default datasource\n  if (!eventTypes) {\n    return Datasource.ERROR;\n  }\n\n  if (eventTypes.includes(EventTypes.DEFAULT) && eventTypes.includes(EventTypes.ERROR)) {\n    return Datasource.ERROR_DEFAULT;\n  }\n  if (eventTypes.includes(EventTypes.DEFAULT)) {\n    return Datasource.DEFAULT;\n  }\n  return Datasource.ERROR;\n}\n\n/**\n * Attempt to guess the data source of a discover query\n *\n * @returns An object containing the datasource and new query without the datasource.\n * Returns null on no datasource.\n */\nexport function getQueryDatasource(\n  query: string\n): {query: string; source: Datasource} | null {\n  let match = query.match(\n    /\\(?\\bevent\\.type:(error|default|transaction)\\)?\\WOR\\W\\(?event\\.type:(error|default|transaction)\\)?/i\n  );\n  if (match) {\n    // should be [error, default] or [default, error]\n    const eventTypes = match.slice(1, 3).sort().join(',');\n    if (eventTypes !== 'default,error') {\n      return null;\n    }\n\n    return {source: Datasource.ERROR_DEFAULT, query: query.replace(match[0], '').trim()};\n  }\n\n  match = query.match(/(^|\\s)event\\.type:(error|default|transaction)/i);\n  if (match && Datasource[match[2].toUpperCase()]) {\n    return {\n      source: Datasource[match[2].toUpperCase()],\n      query: query.replace(match[0], '').trim(),\n    };\n  }\n\n  return null;\n}\n\nexport function isSessionAggregate(aggregate: string) {\n  return Object.values(SessionsAggregate).includes(aggregate as SessionsAggregate);\n}\n\nexport const SESSION_AGGREGATE_TO_FIELD = {\n  [SessionsAggregate.CRASH_FREE_SESSIONS]: SessionFieldWithOperation.SESSIONS,\n  [SessionsAggregate.CRASH_FREE_USERS]: SessionFieldWithOperation.USERS,\n};\n\nexport function alertAxisFormatter(value: number, seriesName: string, aggregate: string) {\n  if (isSessionAggregate(aggregate)) {\n    return defined(value) ? `${round(value, 2)}%` : '\\u2015';\n  }\n\n  return axisLabelFormatter(value, aggregateOutputType(seriesName));\n}\n\nexport function alertTooltipValueFormatter(\n  value: number,\n  seriesName: string,\n  aggregate: string\n) {\n  if (isSessionAggregate(aggregate)) {\n    return defined(value) ? `${value}%` : '\\u2015';\n  }\n\n  return tooltipFormatter(value, aggregateOutputType(seriesName));\n}\n\nexport const ALERT_CHART_MIN_MAX_BUFFER = 1.03;\n\nexport function shouldScaleAlertChart(aggregate: string) {\n  // We want crash free rate charts to be scaled because they are usually too\n  // close to 100% and therefore too fine to see the spikes on 0%-100% scale.\n  return isSessionAggregate(aggregate);\n}\n\nexport function alertDetailsLink(organization: Organization, incident: Incident) {\n  return `/organizations/${organization.slug}/alerts/rules/details/${\n    incident.alertRule.status === AlertRuleStatus.SNAPSHOT &&\n    incident.alertRule.originalAlertRuleId\n      ? incident.alertRule.originalAlertRuleId\n      : incident.alertRule.id\n  }/`;\n}\n\n/**\n * Noramlizes a status string\n */\nexport function getQueryStatus(status: string | string[]): string {\n  if (Array.isArray(status) || status === '') {\n    return 'all';\n  }\n\n  return ['open', 'closed'].includes(status) ? status : 'all';\n}\n\nconst ALERT_LIST_QUERY_DEFAULT_TEAMS = ['myteams', 'unassigned'];\n\n/**\n * Noramlize a team slug from the query\n */\nexport function getTeamParams(team?: string | string[]): string[] {\n  if (team === undefined) {\n    return ALERT_LIST_QUERY_DEFAULT_TEAMS;\n  }\n\n  if (team === '') {\n    return [];\n  }\n\n  if (Array.isArray(team)) {\n    return team;\n  }\n\n  return [team];\n}\n","import {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {\n  Dataset,\n  EventTypes,\n  SessionsAggregate,\n} from 'sentry/views/alerts/rules/metric/types';\n\nexport type AlertType =\n  | 'issues'\n  | 'num_errors'\n  | 'users_experiencing_errors'\n  | 'throughput'\n  | 'trans_duration'\n  | 'apdex'\n  | 'failure_rate'\n  | 'lcp'\n  | 'fid'\n  | 'cls'\n  | 'custom'\n  | 'crash_free_sessions'\n  | 'crash_free_users';\n\nexport enum MEPAlertsQueryType {\n  ERROR = 0,\n  PERFORMANCE = 1,\n  CRASH_RATE = 2,\n}\n\nexport enum MEPAlertsDataset {\n  DISCOVER = 'discover',\n  METRICS = 'metrics',\n  METRICS_ENHANCED = 'metricsEnhanced',\n}\n\nexport type MetricAlertType = Exclude<AlertType, 'issues'>;\n\nexport const DatasetMEPAlertQueryTypes: Record<Dataset, MEPAlertsQueryType> = {\n  [Dataset.ERRORS]: MEPAlertsQueryType.ERROR,\n  [Dataset.TRANSACTIONS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.GENERIC_METRICS]: MEPAlertsQueryType.PERFORMANCE,\n  [Dataset.METRICS]: MEPAlertsQueryType.CRASH_RATE,\n  [Dataset.SESSIONS]: MEPAlertsQueryType.CRASH_RATE,\n};\n\nexport const AlertWizardAlertNames: Record<AlertType, string> = {\n  issues: t('Issues'),\n  num_errors: t('Number of Errors'),\n  users_experiencing_errors: t('Users Experiencing Errors'),\n  throughput: t('Throughput'),\n  trans_duration: t('Transaction Duration'),\n  apdex: t('Apdex'),\n  failure_rate: t('Failure Rate'),\n  lcp: t('Largest Contentful Paint'),\n  fid: t('First Input Delay'),\n  cls: t('Cumulative Layout Shift'),\n  custom: t('Custom Metric'),\n  crash_free_sessions: t('Crash Free Session Rate'),\n  crash_free_users: t('Crash Free User Rate'),\n};\n\ntype AlertWizardCategory = {\n  categoryHeading: string;\n  options: AlertType[];\n};\nexport const getAlertWizardCategories = (org: Organization): AlertWizardCategory[] => [\n  {\n    categoryHeading: t('Errors'),\n    options: ['issues', 'num_errors', 'users_experiencing_errors'],\n  },\n  ...(org.features.includes('crash-rate-alerts')\n    ? [\n        {\n          categoryHeading: t('Sessions'),\n          options: ['crash_free_sessions', 'crash_free_users'] as AlertType[],\n        },\n      ]\n    : []),\n  {\n    categoryHeading: t('Performance'),\n    options: [\n      'throughput',\n      'trans_duration',\n      'apdex',\n      'failure_rate',\n      'lcp',\n      'fid',\n      'cls',\n    ],\n  },\n  {\n    categoryHeading: t('Other'),\n    options: ['custom'],\n  },\n];\n\nexport type WizardRuleTemplate = {\n  aggregate: string;\n  dataset: Dataset;\n  eventTypes: EventTypes;\n};\n\nexport const AlertWizardRuleTemplates: Record<\n  MetricAlertType,\n  Readonly<WizardRuleTemplate>\n> = {\n  num_errors: {\n    aggregate: 'count()',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  users_experiencing_errors: {\n    aggregate: 'count_unique(user)',\n    dataset: Dataset.ERRORS,\n    eventTypes: EventTypes.ERROR,\n  },\n  throughput: {\n    aggregate: 'count()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  trans_duration: {\n    aggregate: 'p95(transaction.duration)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  apdex: {\n    aggregate: 'apdex(300)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  failure_rate: {\n    aggregate: 'failure_rate()',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  lcp: {\n    aggregate: 'p95(measurements.lcp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  fid: {\n    aggregate: 'p95(measurements.fid)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  cls: {\n    aggregate: 'p95(measurements.cls)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  custom: {\n    aggregate: 'p95(measurements.fp)',\n    dataset: Dataset.TRANSACTIONS,\n    eventTypes: EventTypes.TRANSACTION,\n  },\n  crash_free_sessions: {\n    aggregate: SessionsAggregate.CRASH_FREE_SESSIONS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.SESSION,\n  },\n  crash_free_users: {\n    aggregate: SessionsAggregate.CRASH_FREE_USERS,\n    // TODO(scttcper): Use Dataset.Metric on GA of alert-crash-free-metrics\n    dataset: Dataset.SESSIONS,\n    eventTypes: EventTypes.USER,\n  },\n};\n\nexport const DEFAULT_WIZARD_TEMPLATE = AlertWizardRuleTemplates.num_errors;\n\nexport const hidePrimarySelectorSet = new Set<AlertType>([\n  'num_errors',\n  'users_experiencing_errors',\n  'throughput',\n  'apdex',\n  'failure_rate',\n  'crash_free_sessions',\n  'crash_free_users',\n]);\n\nexport const hideParameterSelectorSet = new Set<AlertType>([\n  'trans_duration',\n  'lcp',\n  'fid',\n  'cls',\n]);\n\nexport function getMEPAlertsDataset(\n  dataset: Dataset,\n  newAlert: boolean\n): MEPAlertsDataset {\n  // Dataset.ERRORS overrides all cases\n  if (dataset === Dataset.ERRORS) {\n    return MEPAlertsDataset.DISCOVER;\n  }\n\n  if (newAlert) {\n    return MEPAlertsDataset.METRICS_ENHANCED;\n  }\n\n  if (dataset === Dataset.GENERIC_METRICS) {\n    return MEPAlertsDataset.METRICS;\n  }\n\n  return MEPAlertsDataset.DISCOVER;\n}\n","import {Dataset, SessionsAggregate} from 'sentry/views/alerts/rules/metric/types';\n\nimport {MetricAlertType, WizardRuleTemplate} from './options';\n\n// A set of unique identifiers to be able to tie aggregate and dataset back to a wizard alert type\nconst alertTypeIdentifiers: Record<Dataset, Partial<Record<MetricAlertType, string>>> = {\n  [Dataset.ERRORS]: {\n    num_errors: 'count()',\n    users_experiencing_errors: 'count_unique(user)',\n  },\n  [Dataset.TRANSACTIONS]: {\n    throughput: 'count()',\n    trans_duration: 'transaction.duration',\n    apdex: 'apdex',\n    failure_rate: 'failure_rate()',\n    lcp: 'measurements.lcp',\n    fid: 'measurements.fid',\n    cls: 'measurements.cls',\n  },\n  [Dataset.GENERIC_METRICS]: {\n    throughput: 'count()',\n    trans_duration: 'transaction.duration',\n    apdex: 'apdex',\n    failure_rate: 'failure_rate()',\n    lcp: 'measurements.lcp',\n    fid: 'measurements.fid',\n    cls: 'measurements.cls',\n  },\n  [Dataset.SESSIONS]: {\n    crash_free_sessions: SessionsAggregate.CRASH_FREE_SESSIONS,\n    crash_free_users: SessionsAggregate.CRASH_FREE_USERS,\n  },\n  [Dataset.METRICS]: {\n    crash_free_sessions: SessionsAggregate.CRASH_FREE_SESSIONS,\n    crash_free_users: SessionsAggregate.CRASH_FREE_USERS,\n  },\n};\n\n/**\n * Given an aggregate and dataset object, will return the corresponding wizard alert type\n * e.g. {aggregate: 'count()', dataset: 'events'} will yield 'num_errors'\n * @param template\n */\nexport function getAlertTypeFromAggregateDataset({\n  aggregate,\n  dataset,\n}: Pick<WizardRuleTemplate, 'aggregate' | 'dataset'>): MetricAlertType {\n  const identifierForDataset = alertTypeIdentifiers[dataset];\n  const matchingAlertTypeEntry = Object.entries(identifierForDataset).find(\n    ([_alertType, identifier]) => identifier && aggregate.includes(identifier)\n  );\n  const alertType =\n    matchingAlertTypeEntry && (matchingAlertTypeEntry[0] as MetricAlertType);\n  return alertType ? alertType : 'custom';\n}\n","import styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","import {Location} from 'history';\nimport pick from 'lodash/pick';\nimport round from 'lodash/round';\nimport moment from 'moment';\n\nimport {DateTimeObject} from 'sentry/components/charts/utils';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {PAGE_URL_PARAM, URL_PARAM} from 'sentry/constants/pageFilters';\nimport {desktop, mobile, PlatformKey} from 'sentry/data/platformCategories';\nimport {t, tct} from 'sentry/locale';\nimport {Release, ReleaseStatus} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {Theme} from 'sentry/utils/theme';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {IssueSortOptions} from 'sentry/views/issueList/utils';\n\nexport const CRASH_FREE_DECIMAL_THRESHOLD = 95;\n\nexport const roundDuration = (seconds: number) => {\n  return round(seconds, seconds > 60 ? 0 : 3);\n};\n\nexport const getCrashFreePercent = (\n  percent: number,\n  decimalThreshold = CRASH_FREE_DECIMAL_THRESHOLD,\n  decimalPlaces = 3\n): number => {\n  const roundedValue = round(percent, percent > decimalThreshold ? decimalPlaces : 0);\n  if (roundedValue === 100 && percent < 100) {\n    return (\n      Math.floor(percent * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces)\n    );\n  }\n\n  return roundedValue;\n};\n\nexport const displayCrashFreePercent = (\n  percent: number,\n  decimalThreshold = CRASH_FREE_DECIMAL_THRESHOLD,\n  decimalPlaces = 3\n): string => {\n  if (isNaN(percent)) {\n    return '\\u2015';\n  }\n\n  if (percent < 1 && percent > 0) {\n    return `<1\\u0025`;\n  }\n\n  const rounded = getCrashFreePercent(\n    percent,\n    decimalThreshold,\n    decimalPlaces\n  ).toLocaleString();\n\n  return `${rounded}\\u0025`;\n};\n\nexport const getSessionStatusPercent = (percent: number, absolute = true) => {\n  return round(absolute ? Math.abs(percent) : percent, 3);\n};\n\nexport const displaySessionStatusPercent = (percent: number, absolute = true) => {\n  return `${getSessionStatusPercent(percent, absolute).toLocaleString()}\\u0025`;\n};\n\nexport const getReleaseNewIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      project: projectId,\n      // we are resetting time selector because releases' new issues count doesn't take time selector into account\n      statsPeriod: undefined,\n      start: undefined,\n      end: undefined,\n      query: new MutableSearch([`firstRelease:${version}`]).formatString(),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const getReleaseUnhandledIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string,\n  dateTime: DateTimeObject = {}\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      ...dateTime,\n      project: projectId,\n      query: new MutableSearch([\n        `release:${version}`,\n        'error.unhandled:true',\n      ]).formatString(),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const getReleaseHandledIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string,\n  dateTime: DateTimeObject = {}\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      ...dateTime,\n      project: projectId,\n      query: new MutableSearch([\n        `release:${version}`,\n        'error.handled:true',\n      ]).formatString(),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const isReleaseArchived = (release: Release) =>\n  release.status === ReleaseStatus.Archived;\n\nexport type ReleaseBounds = {\n  type: 'normal' | 'clamped' | 'ancient';\n  releaseEnd?: string | null;\n  releaseStart?: string | null;\n};\n\nexport function getReleaseBounds(release?: Release): ReleaseBounds {\n  const retentionBound = moment().subtract(90, 'days');\n  const {lastEvent, currentProjectMeta, dateCreated} = release || {};\n  const {sessionsUpperBound} = currentProjectMeta || {};\n\n  let type: ReleaseBounds['type'] = 'normal';\n  let releaseStart = moment(dateCreated).startOf('minute');\n  let releaseEnd = moment(\n    (moment(sessionsUpperBound).isAfter(lastEvent) ? sessionsUpperBound : lastEvent) ??\n      undefined\n  ).endOf('minute');\n\n  if (moment(releaseStart).isSame(releaseEnd, 'minute')) {\n    releaseEnd = moment(releaseEnd).add(1, 'minutes');\n  }\n\n  if (releaseStart.isBefore(retentionBound)) {\n    releaseStart = retentionBound;\n    type = 'clamped';\n\n    if (\n      releaseEnd.isBefore(releaseStart) ||\n      (!defined(sessionsUpperBound) && !defined(lastEvent))\n    ) {\n      releaseEnd = moment();\n      type = 'ancient';\n    }\n  }\n\n  return {\n    type,\n    releaseStart: releaseStart.utc().format(),\n    releaseEnd: releaseEnd.utc().format(),\n  };\n}\n\ntype GetReleaseParams = {\n  location: Location;\n  releaseBounds: ReleaseBounds;\n};\n\nexport function getReleaseParams({location, releaseBounds}: GetReleaseParams) {\n  const params = normalizeDateTimeParams(\n    pick(location.query, [\n      ...Object.values(URL_PARAM),\n      ...Object.values(PAGE_URL_PARAM),\n      'cursor',\n    ]),\n    {\n      allowAbsolutePageDatetime: true,\n      allowEmptyPeriod: true,\n    }\n  );\n  if (\n    !Object.keys(params).some(param =>\n      [URL_PARAM.START, URL_PARAM.END, URL_PARAM.UTC, URL_PARAM.PERIOD].includes(param)\n    )\n  ) {\n    params[URL_PARAM.START] = releaseBounds.releaseStart;\n    params[URL_PARAM.END] = releaseBounds.releaseEnd;\n  }\n\n  return params;\n}\n\nconst adoptionStagesLink = (\n  <ExternalLink href=\"https://docs.sentry.io/product/releases/health/#adoption-stages\" />\n);\n\nexport const ADOPTION_STAGE_LABELS: Record<\n  string,\n  {name: string; tooltipTitle: React.ReactNode; type: keyof Theme['tag']}\n> = {\n  low_adoption: {\n    name: t('Low Adoption'),\n    tooltipTitle: tct(\n      'This release has a low percentage of sessions compared to other releases in this project. [link:Learn more]',\n      {link: adoptionStagesLink}\n    ),\n    type: 'warning',\n  },\n  adopted: {\n    name: t('Adopted'),\n    tooltipTitle: tct(\n      'This release has a high percentage of sessions compared to other releases in this project. [link:Learn more]',\n      {link: adoptionStagesLink}\n    ),\n    type: 'success',\n  },\n  replaced: {\n    name: t('Replaced'),\n    tooltipTitle: tct(\n      'This release was previously Adopted, but now has a lower level of sessions compared to other releases in this project. [link:Learn more]',\n      {link: adoptionStagesLink}\n    ),\n    type: 'default',\n  },\n};\n\nexport const isMobileRelease = (releaseProjectPlatform: PlatformKey) =>\n  ([...mobile, ...desktop] as string[]).includes(releaseProjectPlatform);\n","import {PlatformKey} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\n\nexport enum SessionTerm {\n  CRASHES = 'crashes',\n  CRASHED = 'crashed',\n  ABNORMAL = 'abnormal',\n  CRASH_FREE = 'crashFree',\n  CRASH_FREE_USERS = 'crash-free-users',\n  CRASH_FREE_SESSIONS = 'crash-free-sessions',\n  HEALTHY = 'healthy',\n  ERRORED = 'errored',\n  UNHANDLED = 'unhandled',\n  STABILITY = 'stability',\n  ADOPTION = 'adoption',\n}\n\nexport const sessionTerm = {\n  [SessionTerm.CRASHES]: t('Crashes'),\n  [SessionTerm.CRASHED]: t('Crashed'),\n  [SessionTerm.ABNORMAL]: t('Abnormal'),\n  [SessionTerm.CRASH_FREE_USERS]: t('Crash Free Users'),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Crash Free Sessions'),\n  [SessionTerm.HEALTHY]: t('Healthy'),\n  [SessionTerm.ERRORED]: t('Errored'),\n  [SessionTerm.UNHANDLED]: t('Unhandled'),\n  [SessionTerm.ADOPTION]: t('Adoption'),\n  duration: t('Session Duration'),\n  otherCrashed: t('Other Crashed'),\n  otherAbnormal: t('Other Abnormal'),\n  otherErrored: t('Other Errored'),\n  otherHealthy: t('Other Healthy'),\n  otherCrashFreeUsers: t('Other Crash Free Users'),\n  otherCrashFreeSessions: t('Other Crash Free Sessions'),\n  otherReleases: t('Other Releases'),\n};\n\n// This should never be used directly (except in tests)\nexport const commonTermsDescription = {\n  [SessionTerm.CRASHES]: t('Number of sessions with a crashed state'),\n  [SessionTerm.CRASH_FREE]: t(\n    'Percentage of sessions/users who did not experience a crash.'\n  ),\n  [SessionTerm.CRASH_FREE_USERS]: t(\n    'Percentage of unique users with non-crashed sessions'\n  ),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Percentage of non-crashed sessions'),\n  [SessionTerm.STABILITY]: t('The percentage of crash free sessions.'),\n  [SessionTerm.ADOPTION]: t(\n    'Adoption compares the sessions or users of a release with the total sessions or users for this project in the last 24 hours.'\n  ),\n};\n\n// This should never be used directly (except in tests)\nexport const mobileTermsDescription = {\n  [SessionTerm.CRASHED]: t(\n    'The process was terminated due to an unhandled exception or a request to the server that ended with an error'\n  ),\n  [SessionTerm.CRASH_FREE_SESSIONS]: t('Percentage of non-crashed sessions'),\n  [SessionTerm.ABNORMAL]: t(\n    'An unknown session exit. Like due to loss of power or killed by the operating system'\n  ),\n  [SessionTerm.HEALTHY]: t('A session without errors'),\n  [SessionTerm.ERRORED]: t('A session with errors'),\n  [SessionTerm.UNHANDLED]: t('Not handled by user code'),\n};\n\n// This should never be used directly (except in tests)\nexport const desktopTermDescriptions = {\n  crashed: t('The application crashed with a hard crash (eg. segfault)'),\n  [SessionTerm.ABNORMAL]: t(\n    'The application did not properly end the session, for example, due to force-quit'\n  ),\n  [SessionTerm.HEALTHY]: t(\n    'The application exited normally and did not observe any errors'\n  ),\n  [SessionTerm.ERRORED]: t(\n    'The application exited normally but observed error events while running'\n  ),\n  [SessionTerm.UNHANDLED]: t('The application crashed with a hard crash'),\n};\n\nfunction getTermDescriptions(platform: PlatformKey | null) {\n  const technology =\n    platform === 'react-native' ||\n    platform === 'java-spring' ||\n    platform === 'apple-ios' ||\n    platform === 'dotnet-aspnetcore'\n      ? platform\n      : platform?.split('-')[0];\n\n  switch (technology) {\n    case 'dotnet':\n    case 'java':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n      };\n    case 'java-spring':\n    case 'dotnet-aspnetcore':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHES]: t(\n          'A request that resulted in an unhandled exception and hence a Server Error response'\n        ),\n      };\n    case 'android':\n    case 'cordova':\n    case 'react-native':\n    case 'flutter':\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHED]: t(\n          'An unhandled exception that resulted in the application crashing'\n        ),\n      };\n\n    case 'apple': {\n      return {\n        ...commonTermsDescription,\n        ...mobileTermsDescription,\n        [SessionTerm.CRASHED]: t('An error that resulted in the application crashing'),\n      };\n    }\n    case 'node':\n    case 'javascript':\n      return {\n        ...commonTermsDescription,\n        [SessionTerm.CRASHED]: t(\n          'During the session an unhandled global error/promise rejection occurred.'\n        ),\n        [SessionTerm.ABNORMAL]: t('Non applicable for Javascript.'),\n        [SessionTerm.HEALTHY]: t('No errors were captured during session life-time.'),\n        [SessionTerm.ERRORED]: t(\n          'During the session at least one handled error occurred.'\n        ),\n        [SessionTerm.UNHANDLED]:\n          \"An error was captured by the global 'onerror' or 'onunhandledrejection' handler.\",\n      };\n    case 'apple-ios':\n    case 'minidump':\n    case 'native':\n      return {\n        ...commonTermsDescription,\n        ...desktopTermDescriptions,\n      };\n    case 'rust':\n      return {\n        ...commonTermsDescription,\n        ...desktopTermDescriptions,\n        [SessionTerm.CRASHED]: t('The application had an unrecoverable error (a panic)'),\n      };\n    default:\n      return {\n        ...commonTermsDescription,\n        [SessionTerm.CRASHED]: t('Number of users who experienced an unhandled error'),\n        [SessionTerm.ABNORMAL]: t('An unknown session exit'),\n        [SessionTerm.HEALTHY]: mobileTermsDescription.healthy,\n        [SessionTerm.ERRORED]: mobileTermsDescription.errored,\n        [SessionTerm.UNHANDLED]: mobileTermsDescription.unhandled,\n      };\n  }\n}\n\nexport function getSessionTermDescription(\n  term: SessionTerm,\n  platform: PlatformKey | null\n) {\n  return getTermDescriptions(platform)[term];\n}\n","var baseSum = require('./_baseSum');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.mean` and `_.meanBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the mean.\n */\nfunction baseMean(array, iteratee) {\n  var length = array == null ? 0 : array.length;\n  return length ? (baseSum(array, iteratee) / length) : NAN;\n}\n\nmodule.exports = baseMean;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","var baseMean = require('./_baseMean'),\n    identity = require('./identity');\n\n/**\n * Computes the mean of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the mean.\n * @example\n *\n * _.mean([4, 2, 8, 6]);\n * // => 5\n */\nfunction mean(array) {\n  return baseMean(array, identity);\n}\n\nmodule.exports = mean;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n"],"names":["pick","canIncludePreviousPeriod","getPeriod","PERFORMANCE_URL_PARAM","doEventsRequest","api","organization","project","environment","team","period","start","end","interval","comparisonDelta","includePrevious","query","yAxis","field","topEvents","orderby","partial","withoutZerofill","referrer","queryBatching","generatePathname","queryExtras","excludeOther","includeAllArgs","pathname","slug","shouldDoublePeriod","urlQuery","Object","fromEntries","entries","undefined","filter","value","periodObj","queryObject","batchRequest","requestPromise","fetchTagFacets","orgSlug","urlParams","values","queryOption","fetchTotalCount","then","res","count","IconCheckmark","IconDiamond","IconExclamation","IconFire","IconIssues","t","space","IncidentStatus","AlertBadge","status","hideText","isIssue","statusText","Icon","color","CRITICAL","WARNING","Wrapper","AlertIconWrapper","p","icon","AlertIconBackground","IncidentStatusValue","MarkArea","props","PureComponent","isEqual","omitBy","addErrorMessage","LoadingPanel","getPreviousSeriesName","isMultiSeriesStats","defined","stripEquationPrefix","propNamesToIgnore","omitIgnoredProps","_value","key","includes","EventsRequest","reloading","loading","errored","timeseriesData","fetchedWithPrevious","confirmedQuery","onError","expired","name","hideError","setState","state","errorMessage","append","clear","resp","responseJSON","detail","unmounting","dataLoadedCallback","data","hasPreviousPeriod","dataMiddleIndex","Math","floor","length","current","slice","previous","componentDidMount","fetchData","componentDidUpdate","prevProps","componentWillUnmount","calculateTotalsPerTimestamp","getName","timestamp","map","i","countArray","reduce","acc","transformPreviousPeriodData","seriesName","_timestamp","_countArray","stack","transformAggregatedTimeseries","transformTimeseriesData","countsForTimestamp","transformComparisonTimeseriesData","comparisonCount","processData","response","seriesIndex","isMetricsData","totals","includeTransformedData","includeTimeAggregation","timeAggregationSeriesName","currentSeriesNames","previousSeriesNames","getData","transformedData","transformedComparisonData","previousData","timeAggregatedData","timeframe","processedData","comparisonData","allData","originalData","originalPreviousData","render","children","showLoading","seriesAdditionalInfo","sortedTimeseriesData","keys","index","seriesData","order","sort","a","b","results","item","previousTimeseriesData","some","transformedTimeseriesData","transformedComparisonTimeseriesData","allTimeseriesData","originalTimeseriesData","timeseriesTotals","originalPreviousTimeseriesData","comparisonTimeseriesData","limit","LoadingMask","height","_height","defaultProps","Component","filterSessionsInTimeWindow","getSessionsInterval","SessionsRequest","isDisabled","shouldFilterSessionsInTimeWindow","path","baseQueryParams","error","statsPeriod","groupBy","highFidelity","features","useState","css","IconChevron","IconList","tct","COLLAPSE_COUNT","CollapsePanel","items","buttonTitle","collapseCount","disableBorder","isExpanded","setIsExpanded","expandResults","showMoreButton","ShowMoreButton","onClick","ShowMore","theme","fontSizeMedium","subText","border","borderRadius","StyledIconList","ShowMoreText","Fragment","KeyValueTable","KeyValueTableRow","keyName","commonStyles","overflowEllipsis","backgroundSecondary","Key","textColor","Value","TimeRangeSelector","Panel","PageTimeRangeSelector","className","relative","utc","defaultPeriod","DropdownDate","background","DropdownLabel","Tooltip","StatusIndicator","tooltipTitle","StatusLevel","alert","withApi","GenericDiscoverQuery","shouldRefetchData","nextProps","transactionName","transactionThreshold","transactionThresholdMetric","DiscoverQuery","endpoint","useEvents","afterFetch","_","fields","otherMeta","meta","moment","DEFAULT_STATS_PERIOD","getUtcDateString","periodNumber","periodLength","match","parseInt","Error","formattedStart","formattedEnd","diff","previousPeriodStart","subtract","spanTargetHash","getTransactionDetailsUrl","eventSlug","transaction","spanId","locationQuery","target","hash","compact","mean","getDiffInMinutes","SIX_HOURS","SIXTY_DAYS","THIRTY_DAYS","SessionStatus","percent","getCrashFreePercent","getSessionStatusPercent","sessionTerm","MINUTES_THRESHOLD_TO_DISPLAY_SECONDS","getCount","groups","group","getCountAtIndex","series","getCrashFreeRate","crashedRate","getSessionStatusRate","CRASHED","getSeriesAverage","totalCount","dataPoints","getSeriesSum","intervals","dataPointsSums","Array","fill","groupSeries","forEach","dataPoint","idx","crashedCount","by","getCrashFreeRateSeries","intervalTotalSessions","intervalCrashedSessions","find","crashedSessionsPercent","getSessionStatusRateSeries","intervalStatusSessions","statusSessionsPercent","getSessionP50Series","valueFormatter","meanValue","v","getAdoptionSeries","releaseGroups","allGroups","intervalReleaseSessions","intervalAdoption","round","getCountSeries","initSessionsChart","colors","charts","getColorPalette","HEALTHY","healthy","green300","areaStyle","opacity","lineStyle","width","ERRORED","ABNORMAL","abnormal","crashed","red300","datetimeObj","diffInMinutes","isSameOrBefore","sessions","filteredIndexes","isBetween","push","startsWith","API_INTERVAL_POINTS_LIMIT","API_INTERVAL_POINTS_MIN","buildMetricGraphDateRange","incident","timeWindowMillis","alertRule","timeWindow","minRange","maxRange","now","startDate","dateStarted","endDate","dateClosed","incidentRange","max","range","min","halfRange","duration","add","AggregationKey","WEB_VITAL_DETAILS","AlertRuleComparisonType","AlertRuleThresholdType","AlertRuleTriggerType","Dataset","Datasource","EventTypes","TimeWindow","DATA_SOURCE_TO_SET_AND_EVENT_TYPES","getQueryDatasource","isSessionAggregate","DEFAULT_COUNT_TIME_WINDOW","DEFAULT_CHANGE_TIME_WINDOW","DEFAULT_CHANGE_COMP_DELTA","DEFAULT_AGGREGATE","DEFAULT_TRANSACTION_AGGREGATE","DATASET_EVENT_TYPE_FILTERS","ERRORS","TRANSACTIONS","GENERIC_METRICS","DATASOURCE_EVENT_TYPE_FILTERS","ERROR_DEFAULT","ERROR","DEFAULT","TRANSACTION","errorFieldConfig","aggregations","Count","CountUnique","commonAggregations","Avg","Percentile","P50","P75","P95","P99","P100","allAggregations","FailureRate","Apdex","DuplicateMetricFields","DuplicateTriggerFields","DuplicateActionFields","COMPARISON_DELTA_OPTIONS","label","getWizardAlertFieldConfig","alertType","dataset","measurementKeys","transactionFieldConfig","createDefaultTrigger","alertThreshold","actions","createDefaultRule","defaultRuleOptions","eventTypes","aggregate","thresholdPeriod","triggers","projects","resolveThreshold","thresholdType","ABOVE","createRuleFromEventView","eventView","parsedQuery","datasetAndEventtypes","source","getYAxis","test","createRuleFromWizardTemplate","wizardTemplate","BELOW","ONE_HOUR","getThresholdUnits","comparisonType","CHANGE","Alert","getInterval","Duration","Layout","PanelBody","Placeholder","MetricHistory","TimePeriod","extractEventTypeFilterFromRule","AlertRuleStatus","isCrashFreeAlert","SELECTOR_RELATIVE_PERIODS","TIME_WINDOWS","MetricChart","RelatedIssues","RelatedTransactions","Sidebar","DetailsBody","datetime","router","location","format","getTimeWindow","rule","window","timePeriod","startEndDifferenceMs","SEVEN_DAYS","getFilter","eventType","join","split","renderLoading","incidents","selectedIncident","params","orgId","queryWithTypeFilter","trim","relativeOptions","FOURTEEN_DAYS","SNAPSHOT","custom","handleTimePeriodChange","METRICS","SESSIONS","DetailWrapper","breakpoints","small","StyledLayoutBody","Body","medium","StyledAlert","ActivityWrapper","ChartPanel","StyledPageTimeRangeSelector","ONE_DAY","THREE_DAYS","ALERT_DEFAULT_CHART_PERIOD","TIME_OPTIONS","SELECTOR_DEFAULT_PERIOD","isPropValid","Breadcrumbs","Button","IdBadge","PageHeading","IconCopy","IconEdit","PageHeader","isIssueAlert","DetailsHeader","hasMetricRuleDetailsError","isRuleReady","ruleTitle","settingsLink","id","duplicateLink","duplicateRuleId","createFromDuplicate","to","hasTooltip","tooltip","Header","BreadCrumbBar","AlertBreadcrumbs","fontSizeExtraLarge","Controls","Details","RuleTitle","shouldForwardProp","fetchOrgMembers","DateTime","PageFiltersContainer","SentryDocumentTitle","PageContent","trackAdvancedAnalyticsEvent","withProjects","fetchAlertRule","fetchIncident","fetchIncidentsForRule","MetricAlertDetails","isLoading","hasError","ruleId","rulePromise","Promise","resolve","expand","getTimePeriod","all","trackView","search","rule_id","has_chartcuterie","toString","usingPeriod","display","timeOption","renderError","loadingProjects","isGlobalSelectionReady","browserHistory","withRouter","capitalize","momentTimezone","Feature","AreaChart","ChartZoom","MarkLine","LineSeries","ChartControls","HeaderTitleLegend","InlineContainer","SectionHeading","SectionValue","CircleIndicator","parseStatsPeriod","Truncate","IconWarning","ConfigStore","getDuration","getDynamicText","makeDefaultCta","getChangeStatus","AlertWizardAlertNames","getAlertTypeFromAggregateDataset","alertDetailsLink","alertTooltipValueFormatter","SESSION_AGGREGATE_TO_FIELD","getMetricDatasetQueryExtras","getMetricAlertChartOption","transformSessionResponseToSeries","formatTooltipDate","date","options","timezone","get","tz","getRuleChangeSeries","dateModified","seriesStart","Date","getTime","ruleChanged","type","markLine","silent","animation","gray200","xAxis","show","markArea","itemStyle","gray100","alpha","rgb","string","chartRef","ref","getEchartsInstance","getWidth","getHeight","updateDimensions","renderChartActions","totalDuration","criticalDuration","warningDuration","buttonText","resolvedPercent","criticalPercent","warningPercent","toFixed","renderChart","minutesThresholdToDisplaySeconds","renderEmpty","handleIncidentClick","identifier","chartOption","comparisonSeriesName","additionalSeries","_data","otherSeriesProps","animationThreshold","animationDuration","queryFilter","percentOfWidth","truncateWidth","zoomArgs","handleZoom","zoomRenderProps","handleRef","formatter","seriesParams","pointSeries","isArray","marker","pointData","pointX","pointY","pointYFormatted","isModified","startTime","endTime","comparisonSeries","_sn","comparisonPointY","comparisonPointYFormatted","changePercentage","NaN","changeStatus","changeStatusColor","yellow300","abs","Infinity","isNaN","sign","e","fixed","viableStartDate","viableEndDate","newAlertOrQuery","Number","ChartHeader","StyledChartControls","StyledInlineContainer","StyledCircleIndicator","formText","ChartFilters","fontSizeSmall","text","family","Filters","StyledSectionValue","ValueItem","StyledPanelBody","CHART_PALETTE","lightTheme","IncidentActivityType","ALERT_CHART_MIN_MAX_BUFFER","alertAxisFormatter","shouldScaleAlertChart","createStatusAreaSeries","lineColor","yPosition","coord","createThresholdSeries","threshold","createIncidentSeries","incidentTimestamp","time","position","fontSize","fontFamily","trigger","alwaysShowContent","criticalTrigger","warningTrigger","areaSeries","z","dataArr","maxSeriesValue","currMax","minChartValue","firstPoint","lastPoint","activities","statusChanges","STATUS_CHANGE","dateCreated","incidentEnd","timeWindowMs","incidentColor","incidentStartDate","incidentCloseDate","incidentStartValue","point","areaStart","areaEnd","areaColor","activity","statusAreaStart","statusAreaEnd","statusAreaColor","selectedIncidentColor","yellow100","red100","maxThresholdValue","warningThresholdLine","criticalThresholdLine","resolveThresholdLine","axisLabel","isGroupedByDate","grid","left","right","top","bottom","ErrorBoundary","Link","PanelTable","tn","getTriggerName","MetricAlertActivity","criticalActivity","warningActivity","triggeredActivity","currentTrigger","nextActivity","previousValue","activityDuration","warningThreshold","trig","criticalThreshold","toLocaleLowerCase","level","title","selector","numOfIncidents","StyledPanelTable","isEmpty","expanded","StyledDateTime","gray300","Title","Cell","EmptyStateWarning","GroupList","LoadingError","RELATED_ISSUES_BOOLEAN_QUERY_ERROR","RelatedIssuesNotAvailable","renderErrorMessage","retry","renderEmptyMessage","queryParams","groupStatsPeriod","issueSearch","StyledSectionHeading","ControlsWrapper","TableWrapper","GridEditable","COL_WIDTH_UNDEFINED","getFieldRenderer","fieldAlignment","getMetricRuleDiscoverQuery","transactionSummaryRouteWithQuery","getProjectID","eventData","projectSlug","currentProject","Table","widths","tableData","column","dataRow","renderBodyCell","tableMeta","columnName","columnTitles","renderHeadCell","columnIndex","nextColumn","summaryConditions","String","fieldRenderer","rendered","projectID","summaryView","clone","generateQueryStringObject","align","getSortedEventView","withSorts","sorts","columnOrder","getColumns","col","sortedEventView","columnSortBy","getSorts","onResizeColumn","handleResizeColumn","renderHeadCellWithMeta","renderBodyCellWithData","HeaderCell","ActorAvatar","TimeSince","renderTrigger","statusIconColor","defaultAction","aboveThreshold","RESOLVE","thresholdTypeText","thresholdText","metric","condition","action","desc","latestIncident","CLOSED","activityDate","ownerId","owner","teamActor","createdBy","SidebarGroup","HeaderItem","Status","fontSizeLarge","StatusContainer","Heading","noMargin","OverflowTableValue","TriggerContainer","TriggerTitle","TriggerTitleText","TriggerStep","TriggerActions","TriggerText","surface100","DisplayModes","getMetricRuleDiscoverUrl","extraQueryParams","TOP5","SessionsAggregate","ActionType","ActionLabel","EMAIL","SLACK","PAGERDUTY","MSTEAMS","SENTRY_APP","TargetType","TargetLabel","USER","TEAM","convertDatasetEventTypesToSource","metricRule","getEventTypeFilter","decodeScalar","getMEPAlertsDataset","hasMetricDataset","disableMetricDataset","AlertRuleType","IncidentStatusMethod","CombinedAlertType","Client","uncancellableApi","includeSnapshots","alertId","criticalTriggerAlertThreshold","warningTriggerAlertThreshold","EventView","getAggregateAlias","DEFAULT_PROJECT_THRESHOLD","rest","discoverView","toObject","getResultsViewUrlTarget","timeWindowString","aggregateAlias","timePeriodFields","eventQuery","version","fromSavedQuery","SessionFieldWithOperation","axisLabelFormatter","tooltipFormatter","aggregateOutputType","getStartEndFromStats","stats","eventStats","hasOwnProperty","DATA_SOURCE_LABELS","replace","toUpperCase","CRASH_FREE_SESSIONS","CRASH_FREE_USERS","USERS","originalAlertRuleId","getQueryStatus","ALERT_LIST_QUERY_DEFAULT_TEAMS","getTeamParams","MEPAlertsQueryType","MEPAlertsDataset","DatasetMEPAlertQueryTypes","PERFORMANCE","CRASH_RATE","issues","num_errors","users_experiencing_errors","throughput","trans_duration","apdex","failure_rate","lcp","fid","cls","crash_free_sessions","crash_free_users","getAlertWizardCategories","org","categoryHeading","AlertWizardRuleTemplates","SESSION","DEFAULT_WIZARD_TEMPLATE","hidePrimarySelectorSet","Set","hideParameterSelectorSet","newAlert","DISCOVER","METRICS_ENHANCED","alertTypeIdentifiers","identifierForDataset","matchingAlertTypeEntry","_alertType","generateEventSlug","MutableSearch","getTraceDetailsUrl","TransactionFilterOptions","generateTransactionSummaryRoute","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","unselectedSeries","trendFunction","trendColumn","showTransactions","additionalQuery","searchFilter","formatString","generateTraceLink","dateSelection","tableRow","_query","traceId","trace","generateTransactionLink","SidebarSpacer","ExternalLink","normalizeDateTimeParams","PAGE_URL_PARAM","URL_PARAM","desktop","mobile","ReleaseStatus","IssueSortOptions","CRASH_FREE_DECIMAL_THRESHOLD","roundDuration","seconds","decimalThreshold","decimalPlaces","roundedValue","pow","displayCrashFreePercent","rounded","toLocaleString","absolute","displaySessionStatusPercent","getReleaseNewIssuesUrl","projectId","FREQ","getReleaseUnhandledIssuesUrl","dateTime","getReleaseHandledIssuesUrl","isReleaseArchived","release","Archived","getReleaseBounds","retentionBound","lastEvent","currentProjectMeta","sessionsUpperBound","releaseStart","startOf","releaseEnd","isAfter","endOf","isSame","isBefore","getReleaseParams","releaseBounds","allowAbsolutePageDatetime","allowEmptyPeriod","param","START","END","UTC","PERIOD","adoptionStagesLink","ADOPTION_STAGE_LABELS","low_adoption","link","adopted","replaced","isMobileRelease","releaseProjectPlatform","SessionTerm","CRASHES","UNHANDLED","ADOPTION","otherCrashed","otherAbnormal","otherErrored","otherHealthy","otherCrashFreeUsers","otherCrashFreeSessions","otherReleases","commonTermsDescription","CRASH_FREE","STABILITY","mobileTermsDescription","desktopTermDescriptions","getTermDescriptions","platform","technology","unhandled","getSessionTermDescription","term"],"sourceRoot":""}