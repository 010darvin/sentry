{"version":3,"file":"chunks/app_views_userFeedback_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/userFeedback/index.tsx","webpack:///./app/views/userFeedback/utils.tsx"],"sourcesContent":["import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\nimport omit from 'lodash/omit';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport EventUserFeedback from 'sentry/components/events/userFeedback';\nimport CompactIssue from 'sentry/components/issues/compactIssue';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport PageHeading from 'sentry/components/pageHeading';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Organization, UserReport} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport {UserFeedbackEmpty} from './userFeedbackEmpty';\nimport {getQuery} from './utils';\n\ntype State = AsyncView['state'] & {\n  reportList: UserReport[];\n};\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  organization: Organization;\n};\n\nclass OrganizationUserFeedback extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {\n      organization,\n      location: {search},\n    } = this.props;\n\n    return [\n      [\n        'reportList',\n        `/organizations/${organization.slug}/user-feedback/`,\n        {\n          query: getQuery(search),\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `${t('User Feedback')} - ${this.props.organization.slug}`;\n  }\n\n  get projectIds() {\n    const {project} = this.props.location.query;\n\n    return Array.isArray(project)\n      ? project\n      : typeof project === 'string'\n      ? [project]\n      : [];\n  }\n\n  renderResults() {\n    const {orgId} = this.props.params;\n\n    return (\n      <Panel className=\"issue-list\" data-test-id=\"user-feedback-list\">\n        {this.state.reportList.map(item => {\n          const issue = item.issue;\n          return (\n            <CompactIssue key={item.id} id={issue.id} data={issue} eventId={item.eventID}>\n              <StyledEventUserFeedback report={item} orgId={orgId} issueId={issue.id} />\n            </CompactIssue>\n          );\n        })}\n      </Panel>\n    );\n  }\n\n  renderEmpty() {\n    return <UserFeedbackEmpty projectIds={this.projectIds} />;\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderStreamBody() {\n    const {loading, reportList} = this.state;\n\n    if (loading) {\n      return (\n        <Panel>\n          <LoadingIndicator />\n        </Panel>\n      );\n    }\n\n    if (!reportList.length) {\n      return this.renderEmpty();\n    }\n\n    return this.renderResults();\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {location} = this.props;\n    const {pathname, search, query} = location;\n    const {status} = getQuery(search);\n    const {reportListPageLinks} = this.state;\n\n    const unresolvedQuery = omit(query, 'status');\n    const allIssuesQuery = {...query, status: ''};\n\n    return (\n      <PageFiltersContainer>\n        <PageContent>\n          <NoProjectMessage organization={organization}>\n            <div data-test-id=\"user-feedback\">\n              <Header>\n                <PageHeading>{t('User Feedback')}</PageHeading>\n              </Header>\n              <Filters>\n                <PageFilterBar>\n                  <ProjectPageFilter />\n                  <EnvironmentPageFilter />\n                  <DatePageFilter alignDropdown=\"right\" />\n                </PageFilterBar>\n                <ButtonBar active={!Array.isArray(status) ? status || '' : ''} merged>\n                  <Button barId=\"unresolved\" to={{pathname, query: unresolvedQuery}}>\n                    {t('Unresolved')}\n                  </Button>\n                  <Button barId=\"\" to={{pathname, query: allIssuesQuery}}>\n                    {t('All Issues')}\n                  </Button>\n                </ButtonBar>\n              </Filters>\n              {this.renderStreamBody()}\n              <Pagination pageLinks={reportListPageLinks} />\n            </div>\n          </NoProjectMessage>\n        </PageContent>\n      </PageFiltersContainer>\n    );\n  }\n}\n\nexport default withOrganization(withProfiler(OrganizationUserFeedback));\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n`;\n\nconst Filters = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(0, max-content) max-content;\n  justify-content: start;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: minmax(0, 1fr) max-content;\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst StyledEventUserFeedback = styled(EventUserFeedback)`\n  margin: ${space(2)} 0 0;\n`;\n","import pick from 'lodash/pick';\nimport * as qs from 'query-string';\n\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\n\nconst DEFAULT_STATUS = 'unresolved';\n\n/**\n * Get query for API given the current location.search string\n */\nexport function getQuery(search: string) {\n  const query = qs.parse(search);\n\n  const status = typeof query.status !== 'undefined' ? query.status : DEFAULT_STATUS;\n\n  const queryParams = {\n    status,\n    ...pick(query, ['cursor', ...Object.values(URL_PARAM)]),\n  };\n\n  return queryParams;\n}\n"],"names":["withProfiler","omit","Button","ButtonBar","DatePageFilter","EnvironmentPageFilter","EventUserFeedback","CompactIssue","LoadingIndicator","NoProjectMessage","PageFilterBar","PageFiltersContainer","PageHeading","Pagination","Panel","ProjectPageFilter","t","PageContent","space","withOrganization","AsyncView","UserFeedbackEmpty","getQuery","OrganizationUserFeedback","getEndpoints","organization","location","search","props","slug","query","getTitle","projectIds","project","Array","isArray","renderResults","orgId","params","state","reportList","map","item","issue","id","eventID","renderEmpty","renderLoading","renderBody","renderStreamBody","loading","length","pathname","status","reportListPageLinks","unresolvedQuery","allIssuesQuery","Header","Filters","p","theme","breakpoints","medium","small","StyledEventUserFeedback","pick","qs","URL_PARAM","DEFAULT_STATUS","parse","queryParams","Object","values"],"sourceRoot":""}