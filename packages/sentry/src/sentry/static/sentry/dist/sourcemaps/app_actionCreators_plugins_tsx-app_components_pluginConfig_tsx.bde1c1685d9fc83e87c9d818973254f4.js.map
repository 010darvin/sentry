{"version":3,"file":"chunks/app_actionCreators_plugins_tsx-app_components_pluginConfig_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/plugins.tsx","webpack:///./app/components/pluginConfig.tsx","webpack:///./app/stores/pluginsStore.tsx"],"sourcesContent":["import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {Client, RequestOptions} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport PluginsStore from 'sentry/stores/pluginsStore';\nimport {Plugin} from 'sentry/types';\n\nconst activeFetch = {};\n// PluginsStore always exists, so api client should be independent of component lifecycle\nconst api = new Client();\n\ntype Slugs = {\n  /**\n   * Organization slug\n   */\n  orgId: string;\n\n  /**\n   * Plugin slug\n   */\n  pluginId: string;\n\n  /**\n   * Project slug\n   */\n  projectId: string;\n};\n\ntype DoUpdateParams = Slugs & {\n  update: Partial<Plugin>;\n} & Partial<RequestOptions>;\n\nfunction doUpdate({orgId, projectId, pluginId, update, ...params}: DoUpdateParams) {\n  PluginsStore.onUpdate(pluginId, update);\n  const request = api.requestPromise(\n    `/projects/${orgId}/${projectId}/plugins/${pluginId}/`,\n    {\n      ...params,\n    }\n  );\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(() => {\n      PluginsStore.onUpdateSuccess(pluginId, update);\n    })\n    .catch(resp => {\n      const err =\n        resp && resp.responseJSON && typeof resp.responseJSON.detail === 'string'\n          ? new Error(resp.responseJSON.detail)\n          : new Error('Unable to update plugin');\n      PluginsStore.onUpdateError(pluginId, update, err);\n    });\n\n  return request;\n}\n\ntype FetchPluginsOptions = {\n  /**\n   * Reset will set loading state = true\n   */\n  resetLoading?: boolean;\n};\n\n/**\n * Fetches list of available plugins for a project\n */\nexport function fetchPlugins(\n  {orgId, projectId}: Pick<Slugs, 'orgId' | 'projectId'>,\n  options?: FetchPluginsOptions\n): Promise<Plugin[]> {\n  const path = `/projects/${orgId}/${projectId}/plugins/`;\n\n  // Make sure we throttle fetches\n  if (activeFetch[path]) {\n    return activeFetch[path];\n  }\n\n  PluginsStore.onFetchAll(options);\n  const request = api.requestPromise(path, {\n    method: 'GET',\n    includeAllArgs: true,\n  });\n\n  activeFetch[path] = request;\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(([data, _, resp]) => {\n      PluginsStore.onFetchAllSuccess(data, {\n        pageLinks: resp?.getResponseHeader('Link') ?? undefined,\n      });\n\n      return data;\n    })\n    .catch(err => {\n      PluginsStore.onFetchAllError(err);\n      throw new Error('Unable to fetch plugins');\n    })\n    .then(() => (activeFetch[path] = null));\n\n  return request;\n}\n\ntype EnableDisablePluginParams = Slugs;\n\n/**\n * Enables a plugin\n */\nexport function enablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Enabling...'));\n  return doUpdate({...params, update: {enabled: true}, method: 'POST'})\n    .then(() => addSuccessMessage(t('Plugin was enabled')))\n    .catch(() => addErrorMessage(t('Unable to enable plugin')));\n}\n\n/**\n * Disables a plugin\n */\nexport function disablePlugin(params: EnableDisablePluginParams) {\n  addLoadingMessage(t('Disabling...'));\n  return doUpdate({...params, update: {enabled: false}, method: 'DELETE'})\n    .then(() => addSuccessMessage(t('Plugin was disabled')))\n    .catch(() => addErrorMessage(t('Unable to disable plugin')));\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport plugins from 'sentry/plugins';\nimport PluginIcon from 'sentry/plugins/components/pluginIcon';\nimport space from 'sentry/styles/space';\nimport {Organization, Plugin, Project} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  data: Plugin;\n  onDisablePlugin: (data: Plugin) => void;\n  organization: Organization;\n  project: Project;\n  enabled?: boolean;\n};\n\ntype State = {\n  testResults: string;\n  loading?: boolean;\n};\n\nclass PluginConfig extends Component<Props, State> {\n  static defaultProps = {\n    onDisablePlugin: () => {},\n  };\n\n  state: State = {\n    loading: !plugins.isLoaded(this.props.data),\n    testResults: '',\n  };\n\n  componentDidMount() {\n    this.loadPlugin(this.props.data);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    this.loadPlugin(nextProps.data);\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    return !isEqual(nextState, this.state) || !isEqual(nextProps.data, this.props.data);\n  }\n\n  loadPlugin(data: Plugin) {\n    this.setState(\n      {\n        loading: true,\n      },\n      () => {\n        plugins.load(data, () => {\n          this.setState({loading: false});\n        });\n      }\n    );\n  }\n\n  getPluginEndpoint() {\n    const {organization, project, data} = this.props;\n    return `/projects/${organization.slug}/${project.slug}/plugins/${data.id}/`;\n  }\n\n  handleDisablePlugin = () => {\n    this.props.onDisablePlugin(this.props.data);\n  };\n\n  handleTestPlugin = async () => {\n    this.setState({testResults: ''});\n    addLoadingMessage(t('Sending test...'));\n\n    try {\n      const data = await this.props.api.requestPromise(this.getPluginEndpoint(), {\n        method: 'POST',\n        data: {\n          test: true,\n        },\n      });\n\n      this.setState({testResults: JSON.stringify(data.detail)});\n      addSuccessMessage(t('Test Complete!'));\n    } catch (_err) {\n      addErrorMessage(\n        t('An unexpected error occurred while testing your plugin. Please try again.')\n      );\n    }\n  };\n\n  createMarkup() {\n    return {__html: this.props.data.doc};\n  }\n\n  render() {\n    const {data} = this.props;\n    // If passed via props, use that value instead of from `data`\n    const enabled =\n      typeof this.props.enabled !== 'undefined' ? this.props.enabled : data.enabled;\n\n    return (\n      <Panel\n        className={`plugin-config ref-plugin-config-${data.id}`}\n        data-test-id=\"plugin-config\"\n      >\n        <PanelHeader hasButtons>\n          <PluginName>\n            <StyledPluginIcon pluginId={data.id} />\n            <span>{data.name}</span>\n          </PluginName>\n\n          {data.canDisable && enabled && (\n            <Actions>\n              {data.isTestable && (\n                <TestPluginButton onClick={this.handleTestPlugin} size=\"sm\">\n                  {t('Test Plugin')}\n                </TestPluginButton>\n              )}\n              <Button size=\"sm\" onClick={this.handleDisablePlugin}>\n                {t('Disable')}\n              </Button>\n            </Actions>\n          )}\n        </PanelHeader>\n\n        {data.status === 'beta' && (\n          <PanelAlert type=\"warning\">\n            {t('This plugin is considered beta and may change in the future.')}\n          </PanelAlert>\n        )}\n\n        {this.state.testResults !== '' && (\n          <PanelAlert type=\"info\">\n            <strong>Test Results</strong>\n            <div>{this.state.testResults}</div>\n          </PanelAlert>\n        )}\n\n        <StyledPanelBody>\n          <div dangerouslySetInnerHTML={this.createMarkup()} />\n          {this.state.loading ? (\n            <LoadingIndicator />\n          ) : (\n            plugins.get(data).renderSettings({\n              organization: this.props.organization,\n              project: this.props.project,\n            })\n          )}\n        </StyledPanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport {PluginConfig};\nexport default withApi(PluginConfig);\n\nconst PluginName = styled('div')`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n`;\nconst TestPluginButton = styled(Button)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledPanelBody = styled(PanelBody)`\n  padding: ${space(2)};\n  padding-bottom: 0;\n`;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport {Plugin} from 'sentry/types';\n\ninterface InternalDefinition {\n  plugins: Map<string, Plugin> | null;\n  state: {\n    error: Error | null;\n    loading: boolean;\n    pageLinks: string | null;\n    plugins: Plugin[];\n  };\n  updating: Map<string, Plugin>;\n}\n\ninterface PluginStoreDefinition extends StoreDefinition, InternalDefinition {\n  onFetchAll: (options?: {resetLoading?: boolean}) => void;\n  onFetchAllError: (err) => void;\n  onFetchAllSuccess: (data: Plugin[], links: {pageLinks?: string}) => void;\n\n  onUpdate: (id: string, updateObj: Partial<Plugin>) => void;\n  onUpdateError: (id: string, _updateObj: Partial<Plugin>, err) => void;\n  onUpdateSuccess: (id: string, _updateObj: Partial<Plugin>) => void;\n}\n\nconst defaultState = {\n  loading: true,\n  plugins: [],\n  error: null,\n  pageLinks: null,\n};\n\nconst storeConfig: PluginStoreDefinition = {\n  plugins: null,\n  state: {...defaultState},\n  updating: new Map(),\n\n  reset() {\n    // reset our state\n    this.plugins = null;\n    this.state = {...defaultState};\n    this.updating = new Map();\n    return this.state;\n  },\n\n  getInitialState() {\n    return this.getState();\n  },\n\n  getState() {\n    const {plugins: _plugins, ...state} = this.state;\n\n    return {\n      ...state,\n      plugins: this.plugins ? Array.from(this.plugins.values()) : [],\n    };\n  },\n\n  init() {\n    this.reset();\n  },\n\n  triggerState() {\n    this.trigger(this.getState());\n  },\n\n  onFetchAll({resetLoading} = {}) {\n    if (resetLoading) {\n      this.state.loading = true;\n      this.state.error = null;\n      this.plugins = null;\n    }\n\n    this.triggerState();\n  },\n\n  onFetchAllSuccess(data, {pageLinks}) {\n    this.plugins = new Map(data.map(plugin => [plugin.id, plugin]));\n    this.state.pageLinks = pageLinks || null;\n    this.state.loading = false;\n    this.triggerState();\n  },\n\n  onFetchAllError(err) {\n    this.plugins = null;\n    this.state.loading = false;\n    this.state.error = err;\n    this.triggerState();\n  },\n\n  onUpdate(id: string, updateObj: Partial<Plugin>) {\n    if (!this.plugins) {\n      return;\n    }\n\n    const plugin = this.plugins.get(id);\n    if (!plugin) {\n      return;\n    }\n    const newPlugin = {\n      ...plugin,\n      ...updateObj,\n    };\n\n    this.plugins.set(id, newPlugin);\n    this.updating.set(id, plugin);\n    this.triggerState();\n  },\n\n  onUpdateSuccess(id: string, _updateObj: Partial<Plugin>) {\n    this.updating.delete(id);\n  },\n\n  onUpdateError(id: string, _updateObj: Partial<Plugin>, err) {\n    const origPlugin = this.updating.get(id);\n    if (!origPlugin || !this.plugins) {\n      return;\n    }\n\n    this.plugins.set(id, origPlugin);\n    this.updating.delete(id);\n    this.state.error = err;\n    this.triggerState();\n  },\n};\n\nconst PluginStore = createStore(storeConfig);\nexport default PluginStore;\n"],"names":["addErrorMessage","addLoadingMessage","addSuccessMessage","Client","t","PluginsStore","activeFetch","api","doUpdate","orgId","projectId","pluginId","update","params","onUpdate","request","requestPromise","then","onUpdateSuccess","catch","resp","err","responseJSON","detail","Error","onUpdateError","fetchPlugins","options","path","onFetchAll","method","includeAllArgs","data","_","onFetchAllSuccess","pageLinks","getResponseHeader","undefined","onFetchAllError","enablePlugin","enabled","disablePlugin","Component","isEqual","Button","LoadingIndicator","Panel","PanelAlert","PanelBody","PanelHeader","plugins","PluginIcon","space","withApi","PluginConfig","loading","isLoaded","props","testResults","onDisablePlugin","setState","getPluginEndpoint","test","JSON","stringify","_err","componentDidMount","loadPlugin","UNSAFE_componentWillReceiveProps","nextProps","shouldComponentUpdate","nextState","state","load","organization","project","slug","id","createMarkup","__html","doc","render","name","canDisable","isTestable","handleTestPlugin","handleDisablePlugin","status","get","renderSettings","PluginName","StyledPluginIcon","Actions","TestPluginButton","StyledPanelBody","createStore","defaultState","error","storeConfig","updating","Map","reset","getInitialState","getState","_plugins","Array","from","values","init","triggerState","trigger","resetLoading","map","plugin","updateObj","newPlugin","set","_updateObj","delete","origPlugin","PluginStore"],"sourceRoot":""}