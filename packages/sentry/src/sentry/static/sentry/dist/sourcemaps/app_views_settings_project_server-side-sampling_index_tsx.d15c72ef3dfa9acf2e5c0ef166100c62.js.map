{"version":3,"file":"chunks/app_views_settings_project_server-side-sampling_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/serverSideSampling.tsx","webpack:///./app/components/actions/menuItemActionLink.tsx","webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/stores/serverSideSamplingStore.tsx","webpack:///./app/types/sampling.tsx","webpack:///./app/utils/findClosestNumber.tsx","webpack:///./app/views/organizationStats/types.tsx","webpack:///./app/views/performance/vitalDetail/colorBar.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx","webpack:///./app/views/settings/project/server-side-sampling/draggableRuleList.tsx","webpack:///./app/views/settings/project/server-side-sampling/draggableRuleListItem.tsx","webpack:///./app/views/settings/project/server-side-sampling/draggableRuleListSortableItem.tsx","webpack:///./app/views/settings/project/server-side-sampling/index.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/recommendedStepsModal.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/specificConditionsModal/conditions.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/specificConditionsModal/index.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/specificConditionsModal/tagValueAutocomplete.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/specificConditionsModal/truncatedLabel.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/specificConditionsModal/utils.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/specifyClientRateModal.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/styles.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/uniformRateChart.tsx","webpack:///./app/views/settings/project/server-side-sampling/modals/uniformRateModal.tsx","webpack:///./app/views/settings/project/server-side-sampling/rule.tsx","webpack:///./app/views/settings/project/server-side-sampling/samplingBreakdown.tsx","webpack:///./app/views/settings/project/server-side-sampling/samplingProjectIncompatibleAlert.tsx","webpack:///./app/views/settings/project/server-side-sampling/samplingPromo.tsx","webpack:///./app/views/settings/project/server-side-sampling/samplingSDKClientRateChangeAlert.tsx","webpack:///./app/views/settings/project/server-side-sampling/samplingSDKUpgradesAlert.tsx","webpack:///./app/views/settings/project/server-side-sampling/serverSideSampling.tsx","webpack:///./app/views/settings/project/server-side-sampling/utils/hasFirstBucketsEmpty.tsx","webpack:///./app/views/settings/project/server-side-sampling/utils/index.tsx","webpack:///./app/views/settings/project/server-side-sampling/utils/projectStatsToPredictedSeries.tsx","webpack:///./app/views/settings/project/server-side-sampling/utils/projectStatsToSampleRates.tsx","webpack:///./app/views/settings/project/server-side-sampling/utils/projectStatsToSeries.tsx","webpack:///./app/views/settings/project/server-side-sampling/utils/useProjectStats.tsx","webpack:///./app/views/settings/project/server-side-sampling/utils/useRecommendedSdkUpgrades.tsx","webpack:///../node_modules/core-js/internals/new-promise-capability.js","webpack:///../node_modules/core-js/internals/promise-native-constructor.js","webpack:///../node_modules/core-js/internals/promise-resolve.js","webpack:///../node_modules/core-js/modules/es.promise.finally.js"],"sourcesContent":["import {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {ServerSideSamplingStore} from 'sentry/stores/serverSideSamplingStore';\nimport {Organization, Project} from 'sentry/types';\nimport {SamplingDistribution, SamplingSdkVersion} from 'sentry/types/sampling';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\n\nexport function fetchSamplingSdkVersions({\n  api,\n  orgSlug,\n  projectID,\n}: {\n  api: Client;\n  orgSlug: Organization['slug'];\n  projectID: Project['id'];\n}): Promise<SamplingSdkVersion[]> {\n  const {samplingDistribution} = ServerSideSamplingStore.getState();\n  const {startTimestamp, endTimestamp, project_breakdown} = samplingDistribution;\n\n  if (!startTimestamp || !endTimestamp) {\n    ServerSideSamplingStore.setFetching(false);\n    ServerSideSamplingStore.loadSamplingSdkVersionsSuccess([]);\n    return new Promise(resolve => {\n      resolve([]);\n    });\n  }\n\n  const projectIds = [\n    projectID,\n    ...(project_breakdown?.map(projectBreakdown => projectBreakdown.project_id) ?? []),\n  ];\n\n  const promise = api.requestPromise(\n    `/organizations/${orgSlug}/dynamic-sampling/sdk-versions/`,\n    {\n      query: {\n        project: projectIds,\n        start: startTimestamp,\n        end: endTimestamp,\n      },\n    }\n  );\n\n  ServerSideSamplingStore.setFetching(true);\n\n  promise\n    .then(ServerSideSamplingStore.loadSamplingSdkVersionsSuccess)\n    .catch(response => {\n      const errorMessage = t('Unable to fetch sampling sdk versions');\n      handleXhrErrorResponse(errorMessage)(response);\n    })\n    .finally(() => {\n      ServerSideSamplingStore.setFetching(false);\n    });\n\n  return promise;\n}\n\nexport function fetchSamplingDistribution({\n  api,\n  orgSlug,\n  projSlug,\n}: {\n  api: Client;\n  orgSlug: Organization['slug'];\n  projSlug: Project['slug'];\n}): Promise<SamplingDistribution> {\n  ServerSideSamplingStore.reset();\n\n  ServerSideSamplingStore.setFetching(true);\n\n  const promise = api.requestPromise(\n    `/projects/${orgSlug}/${projSlug}/dynamic-sampling/distribution/`\n  );\n\n  promise\n    .then(ServerSideSamplingStore.loadSamplingDistributionSuccess)\n    .catch(response => {\n      const errorMessage = t('Unable to fetch sampling distribution');\n      handleXhrErrorResponse(errorMessage)(response);\n    })\n    .finally(() => {\n      ServerSideSamplingStore.setFetching(false);\n    });\n\n  return promise;\n}\n","import styled from '@emotion/styled';\n\nimport ActionLink from 'sentry/components/actions/actionLink';\nimport MenuItem from 'sentry/components/menuItem';\n\nfunction MenuItemActionLink({\n  className,\n  ...props\n}: React.ComponentProps<typeof ActionLink>) {\n  return (\n    <MenuItem noAnchor withBorder disabled={props.disabled} className={className}>\n      <InnerActionLink {...props} />\n    </MenuItem>\n  );\n}\nconst InnerActionLink = styled(ActionLink)`\n  color: ${p => p.theme.textColor};\n  ${p => p.theme.overflowEllipsis}\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n\n  .dropdown-menu > li > &,\n  .dropdown-menu > span > li > & {\n    &.disabled:hover {\n      background: ${p => p.theme.background};\n    }\n  }\n`;\n\nexport default MenuItemActionLink;\n","import styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  image: React.ReactNode;\n  className?: string;\n};\n\nfunction OnboardingPanel({className, image, children}: Props) {\n  return (\n    <Panel className={className}>\n      <Container>\n        <IlloBox>{image}</IlloBox>\n        <StyledBox>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')`\n  z-index: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","import {createStore} from 'reflux';\n\nimport {SamplingDistribution, SamplingSdkVersion} from 'sentry/types/sampling';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\nimport {CommonStoreDefinition} from './types';\n\ntype State = {\n  fetching: boolean;\n  samplingDistribution: SamplingDistribution;\n  samplingSdkVersions: SamplingSdkVersion[];\n};\n\ninterface ServerSideSamplingStoreDefinition extends CommonStoreDefinition<State> {\n  loadSamplingDistributionSuccess(data: SamplingDistribution): void;\n  loadSamplingSdkVersionsSuccess(data: SamplingSdkVersion[]): void;\n  reset(): void;\n  setFetching(fetching: boolean): void;\n}\n\nconst storeConfig: ServerSideSamplingStoreDefinition = {\n  state: {\n    samplingDistribution: {},\n    samplingSdkVersions: [],\n    fetching: false,\n  },\n\n  reset() {\n    this.state = {\n      samplingDistribution: {},\n      samplingSdkVersions: [],\n    };\n    this.trigger(this.state);\n  },\n\n  getState() {\n    return this.state;\n  },\n\n  setFetching(fetching: boolean) {\n    this.state.fetching = fetching;\n    this.trigger(this.state);\n  },\n\n  loadSamplingSdkVersionsSuccess(data: SamplingSdkVersion[]) {\n    this.state = {\n      ...this.state,\n      samplingSdkVersions: data,\n    };\n    this.trigger(this.state);\n  },\n\n  loadSamplingDistributionSuccess(data: SamplingDistribution) {\n    this.state = {\n      ...this.state,\n      samplingDistribution: data,\n    };\n    this.trigger(this.state);\n  },\n};\n\nexport const ServerSideSamplingStore = createStore(makeSafeRefluxStore(storeConfig));\n","import {Project} from './project';\n\nexport enum SamplingRuleType {\n  /**\n   * The rule applies to traces (transaction events considered in the context of a trace)\n   */\n  TRACE = 'trace',\n}\n\nexport enum SamplingConditionOperator {\n  /**\n   * Combine multiple sub-conditions with the operator 'and'\n   */\n  AND = 'and',\n}\n\nexport enum SamplingRuleOperator {\n  /**\n   * The first rule on the list\n   */\n  IF = 'if',\n  /**\n   * All other rules, except rules without a condition\n   */\n  ELSE_IF = 'else_if',\n  /**\n   * Rules without a condition. In this case the rule cannot be reordered and is “pinned” at the bottom of the list\n   */\n  ELSE = 'else',\n}\n\nexport enum SamplingInnerOperator {\n  /**\n   * It uses glob matches for checking (e.g. releases use glob matching \"1.1.*\" will match release 1.1.1 and 1.1.2)\n   */\n  GLOB_MATCH = 'glob',\n  /**\n   * It uses simple equality for checking\n   */\n  EQUAL = 'eq',\n}\n\n/**\n * String of the sampling category that's used on the backend.\n * Default naming strategy should be based on the path in the event, prefixed with `event.`.\n * To see the path in the event, click on the JSON button on the issue details page.\n */\nexport enum SamplingInnerName {\n  TRACE_RELEASE = 'trace.release',\n  TRACE_ENVIRONMENT = 'trace.environment',\n}\n\ntype SamplingConditionLogicalInnerGlob = {\n  name: SamplingInnerName.TRACE_RELEASE;\n  op: SamplingInnerOperator.GLOB_MATCH;\n  value: Array<string>;\n};\n\ntype SamplingConditionLogicalInnerEq = {\n  name: SamplingInnerName.TRACE_ENVIRONMENT;\n\n  op: SamplingInnerOperator.EQUAL;\n  options: {\n    ignoreCase: boolean;\n  };\n  value: Array<string>;\n};\n\nexport type SamplingConditionLogicalInner =\n  | SamplingConditionLogicalInnerGlob\n  | SamplingConditionLogicalInnerEq;\n\nexport type SamplingCondition = {\n  inner: Array<SamplingConditionLogicalInner>;\n  op: SamplingConditionOperator.AND;\n};\n\nexport type SamplingRule = {\n  /**\n   * It is a possibly empty list of conditions to which the rule applies.\n   * The conditions are combined using the and operator (so all the conditions must be satisfied for the rule to apply).\n   * If the conditions field is an empty list the rule applies for all events that satisfy the projectIds and the ty fields.\n   */\n  condition: SamplingCondition;\n  /**\n   * This is a unique number within a project\n   */\n  id: number;\n  /**\n   * It is the sampling rate that will be applied if the rule is selected\n   */\n  sampleRate: number;\n  /**\n   * Describes the type of rule\n   */\n  type: SamplingRuleType;\n  /**\n   * Indicates if the rule is enabled for server-side sampling\n   */\n  active?: boolean;\n};\n\nexport type SamplingDistribution = {\n  endTimestamp: string | null;\n  null_sample_rate_percentage: null | number;\n  project_breakdown:\n    | null\n    | {\n        'count()': number;\n        project: string;\n        project_id: number;\n      }[];\n  sample_rate_distributions: null | {\n    avg: null | number;\n    max: null | number;\n    min: null | number;\n    p50: null | number;\n    p90: null | number;\n    p95: null | number;\n    p99: null | number;\n  };\n  sample_size: number;\n  startTimestamp: string | null;\n};\n\nexport type SamplingSdkVersion = {\n  isSendingSampleRate: boolean;\n  isSendingSource: boolean;\n  isSupportedPlatform: boolean;\n  latestSDKName: string;\n  latestSDKVersion: string;\n  project: string;\n};\n\nexport type RecommendedSdkUpgrade = {\n  latestSDKName: SamplingSdkVersion['latestSDKName'];\n  latestSDKVersion: SamplingSdkVersion['latestSDKVersion'];\n  project: Project;\n};\n\nexport type UniformModalsSubmit = (props: {\n  sampleRate: number;\n  uniformRateModalOrigin: boolean;\n  onError?: () => void;\n  onSuccess?: (newRules: SamplingRule[]) => void;\n  recommendedSampleRate?: boolean;\n  rule?: SamplingRule;\n}) => void;\n","// Finds the closest match to the number from the provided numbers array\nexport function findClosestNumber(number: number, numbersArray: number[]) {\n  return numbersArray.reduce((previousBest: number, currentNumber) => {\n    return Math.abs(currentNumber - number) < Math.abs(previousBest - number)\n      ? currentNumber\n      : previousBest;\n  });\n}\n","import {SeriesApi} from 'sentry/types';\n\nexport enum Outcome {\n  ACCEPTED = 'accepted',\n  FILTERED = 'filtered',\n  INVALID = 'invalid',\n  DROPPED = 'dropped', // this is not a real outcome coming from the server\n  RATE_LIMITED = 'rate_limited',\n  CLIENT_DISCARD = 'client_discard',\n}\n\n/**\n * Raw response from API endpoint\n */\nexport interface UsageSeries extends SeriesApi {\n  // index signature is present because we often send this\n  // data to sentry as part of the event context.\n  end: string;\n  start: string;\n}\n\nexport type UsageStat = {\n  accepted: number;\n  date: string;\n  dropped: {\n    total: number;\n    other?: number;\n  };\n  filtered: number;\n  total: number;\n};\n","import {ReactNode} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Color} from 'sentry/utils/theme';\n\ntype ColorStop = {\n  color: Color | string;\n  percent: number;\n  renderBarStatus?: (barStatus: ReactNode, key: string) => ReactNode;\n};\n\ntype Props = {\n  colorStops: ColorStop[];\n  barHeight?: number;\n};\n\nconst ColorBar = (props: Props) => {\n  return (\n    <VitalBar\n      barHeight={props.barHeight}\n      fractions={props.colorStops.map(({percent}) => percent)}\n    >\n      {props.colorStops.map(colorStop => {\n        const barStatus = <BarStatus color={colorStop.color} key={colorStop.color} />;\n\n        return colorStop.renderBarStatus?.(barStatus, colorStop.color) ?? barStatus;\n      })}\n    </VitalBar>\n  );\n};\n\ntype VitalBarProps = {\n  fractions: number[];\n  barHeight?: number;\n};\n\nconst VitalBar = styled('div')<VitalBarProps>`\n  height: ${p => (p.barHeight ? `${p.barHeight}px` : '16px')};\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  background: ${p => p.theme.gray100};\n  display: grid;\n  grid-template-columns: ${p => p.fractions.map(f => `${f}fr`).join(' ')};\n  margin-bottom: ${p => (p.barHeight ? '' : space(1))};\n  border-radius: 2px;\n`;\n\ntype ColorProps = {\n  color: Color | string;\n};\n\nconst BarStatus = styled('div')<ColorProps>`\n  background-color: ${p => p.theme[p.color] ?? p.color};\n`;\n\nexport default ColorBar;\n","import {ReactNode} from 'react';\n\nimport Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'> & {\n    message?: ReactNode;\n  };\n\nconst PermissionAlert = ({\n  access = ['org:write'],\n  message = t(\n    'These settings can only be edited by users with the organization owner or manager role.'\n  ),\n  ...props\n}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" showIcon {...props}>\n          {message}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {DndContext, DragOverlay} from '@dnd-kit/core';\nimport {arrayMove, SortableContext, verticalListSortingStrategy} from '@dnd-kit/sortable';\n\nimport {SamplingRule} from 'sentry/types/sampling';\n\nimport {DraggableRuleListItem, DraggableRuleListItemProps} from './draggableRuleListItem';\nimport {\n  DraggableRuleListSortableItem,\n  SortableItemProps,\n} from './draggableRuleListSortableItem';\nimport {isUniformRule} from './utils';\n\nexport type DraggableRuleListUpdateItemsProps = {\n  activeIndex: string;\n  overIndex: string;\n  reorderedItems: Array<string>;\n};\n\ntype Props = Pick<SortableItemProps, 'disabled' | 'wrapperStyle'> &\n  Pick<DraggableRuleListItemProps, 'renderItem'> & {\n    items: Array<\n      Omit<SamplingRule, 'id'> & {\n        id: string;\n      }\n    >;\n    onUpdateItems: (props: DraggableRuleListUpdateItemsProps) => void;\n  };\n\ntype State = {\n  activeId?: string;\n};\n\nexport function DraggableRuleList({\n  items,\n  onUpdateItems,\n  renderItem,\n  disabled = false,\n  wrapperStyle = () => ({}),\n}: Props) {\n  const [state, setState] = useState<State>({});\n\n  const itemIds = items.map(item => item.id);\n  const getIndex = itemIds.indexOf.bind(itemIds);\n  const activeIndex = state.activeId ? getIndex(state.activeId) : -1;\n\n  return (\n    <DndContext\n      onDragStart={({active}) => {\n        if (!active) {\n          return;\n        }\n\n        setState({activeId: active.id});\n      }}\n      onDragEnd={({over}) => {\n        setState({activeId: undefined});\n\n        if (over) {\n          const overIndex = getIndex(over.id);\n\n          if (activeIndex !== overIndex) {\n            onUpdateItems({\n              activeIndex,\n              overIndex,\n              reorderedItems: arrayMove(itemIds, activeIndex, overIndex),\n            });\n          }\n        }\n      }}\n      onDragCancel={() => setState({activeId: undefined})}\n    >\n      <SortableContext items={itemIds} strategy={verticalListSortingStrategy}>\n        {itemIds.map((itemId, index) => (\n          <DraggableRuleListSortableItem\n            key={itemId}\n            id={itemId}\n            index={index}\n            renderItem={renderItem}\n            disabled={\n              disabled || isUniformRule({...items[index], id: Number(items[index].id)})\n            }\n            wrapperStyle={wrapperStyle}\n          />\n        ))}\n      </SortableContext>\n      {createPortal(\n        <DragOverlay>\n          {state.activeId ? (\n            <DraggableRuleListItem\n              value={itemIds[activeIndex]}\n              renderItem={renderItem}\n              wrapperStyle={wrapperStyle({\n                index: activeIndex,\n                isDragging: true,\n                isSorting: false,\n              })}\n            />\n          ) : null}\n        </DragOverlay>,\n        document.body\n      )}\n    </DndContext>\n  );\n}\n","import {DraggableSyntheticListeners} from '@dnd-kit/core';\nimport {useSortable} from '@dnd-kit/sortable';\nimport {Transform} from '@dnd-kit/utilities';\nimport styled from '@emotion/styled';\n\ntype UseSortableOutputProps = ReturnType<typeof useSortable>;\n\nexport type DraggableRuleListItemProps = {\n  renderItem(args: {\n    dragging: boolean;\n    sorting: boolean;\n    value: DraggableRuleListItemProps['value'];\n    attributes?: DraggableRuleListItemProps['attributes'];\n    index?: DraggableRuleListItemProps['index'];\n    listeners?: DraggableRuleListItemProps['listeners'];\n    transform?: DraggableRuleListItemProps['transform'];\n    transition?: DraggableRuleListItemProps['transition'];\n  }): React.ReactElement | null;\n  value: React.ReactNode;\n  attributes?: UseSortableOutputProps['attributes'];\n  dragging?: boolean;\n  forwardRef?: React.Ref<HTMLDivElement>;\n  index?: number;\n  listeners?: DraggableSyntheticListeners;\n  sorting?: boolean;\n  transform?: Transform | null;\n  transition?: string | null;\n  wrapperStyle?: React.CSSProperties;\n};\n\nexport function DraggableRuleListItem({\n  value,\n  dragging,\n  index,\n  transform,\n  listeners,\n  sorting,\n  transition,\n  forwardRef,\n  attributes,\n  renderItem,\n  wrapperStyle,\n}: DraggableRuleListItemProps) {\n  return (\n    <Wrapper\n      data-test-id=\"sampling-rule\"\n      ref={forwardRef}\n      style={\n        {\n          ...wrapperStyle,\n          transition,\n          '--translate-x': transform ? `${Math.round(transform.x)}px` : undefined,\n          '--translate-y': transform ? `${Math.round(transform.y)}px` : undefined,\n          '--scale-x': transform?.scaleX ? `${transform.scaleX}` : undefined,\n          '--scale-y': transform?.scaleY ? `${transform.scaleY}` : undefined,\n        } as React.CSSProperties\n      }\n    >\n      <InnerWrapper>\n        {renderItem({\n          dragging: Boolean(dragging),\n          sorting: Boolean(sorting),\n          listeners,\n          transform,\n          transition,\n          value,\n          index,\n          attributes,\n        })}\n      </InnerWrapper>\n    </Wrapper>\n  );\n}\n\nconst boxShadowBorder = '0 0 0 calc(1px / var(--scale-x, 1)) rgba(63, 63, 68, 0.05)';\nconst boxShadowCommon = '0 1px calc(3px / var(--scale-x, 1)) 0 rgba(34, 33, 81, 0.15)';\nconst boxShadow = `${boxShadowBorder}, ${boxShadowCommon}`;\n\nconst Wrapper = styled('div')`\n  transform: translate3d(var(--translate-x, 0), var(--translate-y, 0), 0)\n    scaleX(var(--scale-x, 1)) scaleY(var(--scale-y, 1));\n  transform-origin: 0 0;\n  touch-action: manipulation;\n  --box-shadow: ${boxShadow};\n  --box-shadow-picked-up: ${boxShadowBorder}, -1px 0 15px 0 rgba(34, 33, 81, 0.01),\n    0px 15px 15px 0 rgba(34, 33, 81, 0.25);\n`;\n\nconst InnerWrapper = styled('div')`\n  background-color: ${p => p.theme.background};\n\n  animation: pop 200ms cubic-bezier(0.18, 0.67, 0.6, 1.22);\n  box-shadow: var(--box-shadow-picked-up);\n  opacity: 1;\n\n  :focus {\n    box-shadow: 0 0px 4px 1px rgba(76, 159, 254, 1), ${boxShadow};\n  }\n\n  @keyframes pop {\n    0% {\n      transform: scale(1);\n      box-shadow: var(--box-shadow);\n    }\n    100% {\n      box-shadow: var(--box-shadow-picked-up);\n    }\n  }\n`;\n","import {useSortable} from '@dnd-kit/sortable';\n\nimport {DraggableRuleListItem} from './draggableRuleListItem';\n\nexport type SortableItemProps = Pick<\n  React.ComponentProps<typeof DraggableRuleListItem>,\n  'renderItem' | 'index'\n> & {\n  id: string;\n  index: number;\n  wrapperStyle(args: {\n    index: number;\n    isDragging: boolean;\n    isSorting: boolean;\n  }): React.CSSProperties;\n  disabled?: boolean;\n};\n\nexport function DraggableRuleListSortableItem({\n  id,\n  index,\n  renderItem,\n  disabled,\n  wrapperStyle,\n}: SortableItemProps) {\n  const {\n    attributes,\n    isSorting,\n    isDragging,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({id, disabled});\n\n  return (\n    <DraggableRuleListItem\n      forwardRef={setNodeRef}\n      value={id}\n      sorting={isSorting}\n      renderItem={renderItem}\n      index={index}\n      transform={transform}\n      transition={transition}\n      listeners={listeners}\n      attributes={attributes}\n      wrapperStyle={wrapperStyle({index, isDragging, isSorting})}\n    />\n  );\n}\n","import Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport {PanelAlert} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {ServerSideSampling} from './serverSideSampling';\n\ntype Props = {\n  project: Project;\n};\n\nexport default function ServerSideSamplingContainer({project}: Props) {\n  const organization = useOrganization();\n\n  return (\n    <Feature\n      features={['server-side-sampling', 'server-side-sampling-ui']}\n      organization={organization}\n      renderDisabled={() => (\n        <FeatureDisabled\n          alert={PanelAlert}\n          features={[\n            'organization:server-side-sampling',\n            'organization:server-side-sampling-ui',\n          ]}\n          featureName={t('Server-Side Sampling')}\n        />\n      )}\n    >\n      <ServerSideSampling project={project} />\n    </Feature>\n  );\n}\n","import 'prism-sentry/index.css';\n\nimport {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {\n  OutdatedVersion,\n  SdkOutdatedVersion,\n  SdkProjectBadge,\n  UpdatesList,\n} from 'sentry/components/sidebar/broadcastSdkUpdates';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {\n  RecommendedSdkUpgrade,\n  SamplingRule,\n  UniformModalsSubmit,\n} from 'sentry/types/sampling';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {formatPercentage} from 'sentry/utils/formatters';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport {SamplingProjectIncompatibleAlert} from '../samplingProjectIncompatibleAlert';\nimport {isValidSampleRate, SERVER_SIDE_SAMPLING_DOC_LINK} from '../utils';\nimport {projectStatsToSampleRates} from '../utils/projectStatsToSampleRates';\nimport useProjectStats from '../utils/useProjectStats';\nimport {useRecommendedSdkUpgrades} from '../utils/useRecommendedSdkUpgrades';\n\nimport {FooterActions, Stepper} from './uniformRateModal';\n\nexport type RecommendedStepsModalProps = ModalRenderProps & {\n  onReadDocs: () => void;\n  organization: Organization;\n  projectId: Project['id'];\n  recommendedSdkUpgrades: RecommendedSdkUpgrade[];\n  clientSampleRate?: number;\n  onGoBack?: () => void;\n  onSetRules?: (newRules: SamplingRule[]) => void;\n  onSubmit?: UniformModalsSubmit;\n  recommendedSampleRate?: boolean;\n  serverSampleRate?: number;\n  uniformRule?: SamplingRule;\n};\n\nexport function RecommendedStepsModal({\n  Header,\n  Body,\n  Footer,\n  closeModal,\n  organization,\n  recommendedSdkUpgrades,\n  onGoBack,\n  onReadDocs,\n  onSubmit,\n  clientSampleRate,\n  serverSampleRate,\n  uniformRule,\n  projectId,\n  recommendedSampleRate,\n  onSetRules,\n}: RecommendedStepsModalProps) {\n  const {isProjectIncompatible} = useRecommendedSdkUpgrades({\n    orgSlug: organization.slug,\n    projectId,\n  });\n  const [saving, setSaving] = useState(false);\n  const {projectStats} = useProjectStats({\n    orgSlug: organization.slug,\n    projectId,\n    interval: '1h',\n    statsPeriod: '48h',\n    disable: !!clientSampleRate,\n    groupBy: 'outcome',\n  });\n  const {maxSafeSampleRate} = projectStatsToSampleRates(projectStats);\n  const suggestedClientSampleRate = clientSampleRate ?? maxSafeSampleRate;\n\n  const isValid =\n    isValidSampleRate(clientSampleRate) && isValidSampleRate(serverSampleRate);\n\n  function handleDone() {\n    if (!onSubmit) {\n      closeModal();\n    }\n\n    if (!isValid) {\n      return;\n    }\n\n    setSaving(true);\n\n    onSubmit?.({\n      recommendedSampleRate: recommendedSampleRate ?? false, // the recommendedSampleRate prop will always be available in the wizard modal\n      uniformRateModalOrigin: false,\n      sampleRate: serverSampleRate!,\n      rule: uniformRule,\n      onSuccess: newRules => {\n        setSaving(false);\n        onSetRules?.(newRules);\n        closeModal();\n      },\n      onError: () => {\n        setSaving(false);\n      },\n    });\n  }\n\n  function handleGoBack() {\n    if (!onGoBack) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('sampling.settings.modal.recommended.next.steps_back', {\n      organization,\n      project_id: projectId,\n    });\n\n    onGoBack();\n  }\n\n  function handleReadDocs() {\n    trackAdvancedAnalyticsEvent(\n      'sampling.settings.modal.recommended.next.steps_read_docs',\n      {\n        organization,\n        project_id: projectId,\n      }\n    );\n\n    onReadDocs();\n  }\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{t('Next steps')}</h4>\n      </Header>\n      <Body>\n        <List symbol=\"colored-numeric\">\n          {!!recommendedSdkUpgrades.length && (\n            <ListItem>\n              <h5>{t('Update the following SDK versions')}</h5>\n              <TextBlock>\n                {t(\n                  'To activate server-side sampling rules, it’s a requirement to update the following project SDK(s):'\n                )}\n              </TextBlock>\n              <UpgradeSDKfromProjects>\n                {recommendedSdkUpgrades.map(\n                  ({project: upgradableProject, latestSDKName, latestSDKVersion}) => {\n                    return (\n                      <div key={upgradableProject.id}>\n                        <SdkProjectBadge\n                          project={upgradableProject}\n                          organization={organization}\n                        />\n                        <SdkOutdatedVersion>\n                          {tct('This project is on [current-version]', {\n                            ['current-version']: (\n                              <OutdatedVersion>{`${latestSDKName}@v${latestSDKVersion}`}</OutdatedVersion>\n                            ),\n                          })}\n                        </SdkOutdatedVersion>\n                      </div>\n                    );\n                  }\n                )}\n              </UpgradeSDKfromProjects>\n            </ListItem>\n          )}\n          <ListItem>\n            <h5>{t('Increase your client-side transaction sample rate')}</h5>\n            <TextBlock>\n              {t(\n                'Here’s your optimal client(SDK) sample rate based on your organization’s usage and quota. To make this change, find the tracesSampleRate option in your SDK Config, modify it’s value to what’s suggested below and re-deploy.'\n              )}\n            </TextBlock>\n            <div>\n              <pre className=\"language-javascript highlight\">\n                <code className=\"language-javascript\">\n                  Sentry\n                  <span className=\"token punctuation\">.</span>\n                  <span className=\"token function\">init</span>\n                  <span className=\"token punctuation\">(</span>\n                  <span className=\"token punctuation\">{'{'}</span>\n                  <span className=\"token comment\">\n                    {' // '}\n                    {t('JavaScript Example')}\n                  </span>\n                  <br />\n                  <span className=\"token punctuation\">{'  ...'}</span>\n                  <br />\n                  <span className=\"token literal-property property\">\n                    {'  traceSampleRate'}\n                  </span>\n                  <span className=\"token operator\">:</span>{' '}\n                  <span className=\"token string\">{suggestedClientSampleRate || ''}</span>\n                  <span className=\"token punctuation\">,</span>{' '}\n                  <span className=\"token comment\">\n                    //{' '}\n                    {suggestedClientSampleRate\n                      ? formatPercentage(suggestedClientSampleRate)\n                      : ''}\n                  </span>\n                  <br />\n                  <span className=\"token punctuation\">{'}'}</span>\n                  <span className=\"token punctuation\">)</span>\n                  <span className=\"token punctuation\">;</span>\n                </code>\n              </pre>\n            </div>\n            <SamplingProjectIncompatibleAlert\n              organization={organization}\n              projectId={projectId}\n              isProjectIncompatible={isProjectIncompatible}\n            />\n          </ListItem>\n        </List>\n      </Body>\n      <Footer>\n        <FooterActions>\n          <Button href={SERVER_SIDE_SAMPLING_DOC_LINK} onClick={handleReadDocs} external>\n            {t('Read Docs')}\n          </Button>\n          <ButtonBar gap={1}>\n            {onGoBack && (\n              <Fragment>\n                <Stepper>{t('Step 2 of 2')}</Stepper>\n                <Button onClick={handleGoBack}>{t('Back')}</Button>\n              </Fragment>\n            )}\n            {!onGoBack && <Button onClick={closeModal}>{t('Cancel')}</Button>}\n            <Button\n              priority=\"primary\"\n              onClick={handleDone}\n              disabled={onSubmit ? saving || !isValid || isProjectIncompatible : false} // do not disable the button if there's on onSubmit handler (modal was opened from the sdk alert)\n              title={\n                onSubmit\n                  ? !isValid\n                    ? t('Sample rate is not valid')\n                    : undefined\n                  : undefined\n              }\n            >\n              {t('Done')}\n            </Button>\n          </ButtonBar>\n        </FooterActions>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst UpgradeSDKfromProjects = styled(UpdatesList)`\n  margin-top: 0;\n  margin-bottom: ${space(3)};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport FieldRequiredBadge from 'sentry/components/forms/field/fieldRequiredBadge';\nimport TextareaField from 'sentry/components/forms/textareaField';\nimport {IconDelete} from 'sentry/icons/iconDelete';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {SamplingInnerName} from 'sentry/types/sampling';\n\nimport {getInnerNameLabel} from '../../utils';\n\nimport {TagValueAutocomplete, TagValueAutocompleteProps} from './tagValueAutocomplete';\nimport {getMatchFieldPlaceholder, getTagKey} from './utils';\n\nexport type Condition = {\n  category: SamplingInnerName;\n  match?: string;\n};\n\ninterface Props extends Pick<TagValueAutocompleteProps, 'orgSlug' | 'projectId'> {\n  conditions: Condition[];\n  onChange: <T extends keyof Condition>(\n    index: number,\n    field: T,\n    value: Condition[T]\n  ) => void;\n  onDelete: (index: number) => void;\n}\n\nexport function Conditions({conditions, orgSlug, projectId, onDelete, onChange}: Props) {\n  return (\n    <Fragment>\n      {conditions.map((condition, index) => {\n        const {category, match} = condition;\n\n        const isAutoCompleteField =\n          category === SamplingInnerName.TRACE_ENVIRONMENT ||\n          category === SamplingInnerName.TRACE_RELEASE;\n\n        return (\n          <ConditionWrapper key={index}>\n            <LeftCell>\n              <span>\n                {getInnerNameLabel(category)}\n                <FieldRequiredBadge />\n              </span>\n            </LeftCell>\n            <CenterCell>\n              {isAutoCompleteField ? (\n                <TagValueAutocomplete\n                  category={category}\n                  tagKey={getTagKey(condition)}\n                  orgSlug={orgSlug}\n                  projectId={projectId}\n                  value={match}\n                  onChange={value => onChange(index, 'match', value)}\n                />\n              ) : (\n                <StyledTextareaField\n                  name=\"match\"\n                  value={match}\n                  onChange={value => onChange(index, 'match', value)}\n                  placeholder={getMatchFieldPlaceholder(category)}\n                  inline={false}\n                  rows={1}\n                  autosize\n                  hideControlState\n                  flexibleControlStateSize\n                  required\n                  stacked\n                />\n              )}\n            </CenterCell>\n            <RightCell>\n              <Button\n                onClick={() => onDelete(index)}\n                icon={<IconDelete />}\n                aria-label={t('Delete Condition')}\n              />\n            </RightCell>\n          </ConditionWrapper>\n        );\n      })}\n    </Fragment>\n  );\n}\n\nconst ConditionWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n  align-items: flex-start;\n  padding: ${space(1)} ${space(2)};\n  :not(:last-child) {\n    border-bottom: 1px solid ${p => p.theme.gray100};\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 0.6fr) minmax(0, 1fr) max-content;\n  }\n`;\n\nconst Cell = styled('div')`\n  min-height: 40px;\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst LeftCell = styled(Cell)`\n  padding-right: ${space(1)};\n  line-height: 16px;\n`;\n\nconst CenterCell = styled(Cell)`\n  padding-top: ${space(1)};\n  grid-column: 1/-1;\n  grid-row: 2/2;\n  ${p => !p.children && 'display: none'};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-column: auto;\n    grid-row: auto;\n    padding-top: 0;\n  }\n`;\n\nconst RightCell = styled(Cell)`\n  justify-content: flex-end;\n  padding-left: ${space(1)};\n`;\n\nconst StyledTextareaField = styled(TextareaField)`\n  padding-bottom: 0;\n  width: 100%;\n`;\n","import {Fragment, KeyboardEvent, useEffect, useState} from 'react';\nimport {createFilter} from 'react-select';\nimport styled from '@emotion/styled';\nimport partition from 'lodash/partition';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport FieldRequiredBadge from 'sentry/components/forms/field/fieldRequiredBadge';\nimport NumberField from 'sentry/components/forms/numberField';\nimport Option from 'sentry/components/forms/selectOption';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconAdd} from 'sentry/icons';\nimport {IconSearch} from 'sentry/icons/iconSearch';\nimport {t} from 'sentry/locale';\nimport ProjectStore from 'sentry/stores/projectsStore';\nimport space from 'sentry/styles/space';\nimport {Organization, Project, SelectValue} from 'sentry/types';\nimport {\n  SamplingConditionOperator,\n  SamplingInnerName,\n  SamplingRule,\n  SamplingRuleType,\n} from 'sentry/types/sampling';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport useApi from 'sentry/utils/useApi';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport {isUniformRule, percentageToRate, rateToPercentage} from '../../utils';\n\nimport {Condition, Conditions} from './conditions';\nimport {\n  distributedTracesConditions,\n  generateConditionCategoriesOptions,\n  getErrorMessage,\n  getNewCondition,\n} from './utils';\n\nconst conditionAlreadyAddedTooltip = t('This condition has already been added');\n\ntype State = {\n  conditions: Condition[];\n  errors: {\n    sampleRate?: string;\n  };\n  samplePercentage: number | null;\n};\n\ntype Props = ModalRenderProps & {\n  organization: Organization;\n  project: Project;\n  rules: SamplingRule[];\n  rule?: SamplingRule;\n};\n\nexport function SpecificConditionsModal({\n  Header,\n  Body,\n  Footer,\n  closeModal,\n  project,\n  rule,\n  rules,\n  organization,\n}: Props) {\n  const api = useApi();\n\n  const [data, setData] = useState<State>(getInitialState());\n  const [isSaving, setIsSaving] = useState(false);\n\n  const conditionCategories = generateConditionCategoriesOptions(\n    distributedTracesConditions\n  );\n\n  useEffect(() => {\n    setData(d => {\n      if (!!d.errors.sampleRate) {\n        return {...d, errors: {...d.errors, sampleRate: undefined}};\n      }\n\n      return d;\n    });\n  }, [data.samplePercentage]);\n\n  function getInitialState(): State {\n    if (rule) {\n      const {condition: conditions, sampleRate} = rule;\n\n      const {inner} = conditions;\n\n      return {\n        conditions: inner.map(innerItem => {\n          const {name, value} = innerItem;\n\n          if (Array.isArray(value)) {\n            return {\n              category: name,\n              match: value.join('\\n'),\n            };\n          }\n          return {category: name};\n        }),\n        samplePercentage: rateToPercentage(sampleRate) ?? null,\n        errors: {},\n      };\n    }\n\n    return {\n      conditions: [],\n      samplePercentage: null,\n      errors: {},\n    };\n  }\n\n  const {errors, conditions, samplePercentage} = data;\n\n  function convertRequestErrorResponse(error: ReturnType<typeof getErrorMessage>) {\n    if (typeof error === 'string') {\n      addErrorMessage(error);\n      return;\n    }\n\n    switch (error.type) {\n      case 'sampleRate':\n        setData({...data, errors: {...errors, sampleRate: error.message}});\n        break;\n      default:\n        addErrorMessage(error.message);\n    }\n  }\n\n  async function handleSubmit() {\n    if (!defined(samplePercentage)) {\n      return;\n    }\n    const sampleRate = percentageToRate(samplePercentage)!;\n\n    const newRule: SamplingRule = {\n      // All new/updated rules must have id equal to 0\n      id: 0,\n      active: rule ? rule.active : false,\n      type: SamplingRuleType.TRACE,\n      condition: {\n        op: SamplingConditionOperator.AND,\n        inner: !conditions.length ? [] : conditions.map(getNewCondition),\n      },\n      sampleRate,\n    };\n\n    const newRules = rule\n      ? rules.map(existingRule => (existingRule.id === rule.id ? newRule : existingRule))\n      : [...rules, newRule];\n\n    // Make sure that a uniform rule is always send in the last position of the rules array\n    const [uniformRule, specificRules] = partition(newRules, isUniformRule);\n\n    setIsSaving(true);\n\n    try {\n      const response = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/`,\n        {\n          method: 'PUT',\n          data: {dynamicSampling: {rules: [...specificRules, ...uniformRule]}},\n        }\n      );\n      ProjectStore.onUpdateSuccess(response);\n      addSuccessMessage(\n        rule\n          ? t('Successfully edited sampling rule')\n          : t('Successfully added sampling rule')\n      );\n      closeModal();\n    } catch (error) {\n      const currentRuleIndex = newRules.findIndex(newR => newR === newRule);\n      convertRequestErrorResponse(getErrorMessage(error, currentRuleIndex));\n    }\n\n    setIsSaving(false);\n\n    const analyticsConditions = conditions.map(condition => condition.category);\n    const analyticsConditionsStringified = analyticsConditions.sort().join(', ');\n\n    trackAdvancedAnalyticsEvent('sampling.settings.rule.specific_save', {\n      organization,\n      project_id: project.id,\n      sampling_rate: sampleRate,\n      conditions: analyticsConditions,\n      conditions_stringified: analyticsConditionsStringified,\n    });\n\n    if (defined(rule)) {\n      trackAdvancedAnalyticsEvent('sampling.settings.rule.specific_update', {\n        organization,\n        project_id: project.id,\n        sampling_rate: sampleRate,\n        conditions: analyticsConditions,\n        conditions_stringified: analyticsConditionsStringified,\n        old_conditions: rule.condition.inner.map(({name}) => name),\n        old_conditions_stringified: rule.condition.inner\n          .map(({name}) => name)\n          .sort()\n          .join(', '),\n        old_sampling_rate: rule.sampleRate,\n      });\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('sampling.settings.rule.specific_create', {\n      organization,\n      project_id: project.id,\n      sampling_rate: sampleRate,\n      conditions: analyticsConditions,\n      conditions_stringified: analyticsConditionsStringified,\n    });\n  }\n\n  function handleAddCondition(selectedOptions: SelectValue<SamplingInnerName>[]) {\n    const previousCategories = conditions.map(({category}) => category);\n    const addedCategories = selectedOptions\n      .filter(({value}) => !previousCategories.includes(value))\n      .map(({value}) => value);\n\n    trackAdvancedAnalyticsEvent('sampling.settings.modal.specific.rule.condition_add', {\n      organization,\n      project_id: project.id,\n      conditions: addedCategories,\n    });\n\n    setData({\n      ...data,\n      conditions: [\n        ...conditions,\n        ...addedCategories.map(addedCategory => ({category: addedCategory, match: ''})),\n      ],\n    });\n  }\n\n  function handleDeleteCondition(index: number) {\n    const newConditions = [...conditions];\n    newConditions.splice(index, 1);\n    setData({...data, conditions: newConditions});\n  }\n\n  function handleChangeCondition<T extends keyof Condition>(\n    index: number,\n    field: T,\n    value: Condition[T]\n  ) {\n    const newConditions = [...conditions];\n    newConditions[index][field] = value;\n\n    // If custom tag key changes, reset the value\n    if (field === 'category') {\n      newConditions[index].match = '';\n\n      trackAdvancedAnalyticsEvent('sampling.settings.modal.specific.rule.condition_add', {\n        organization,\n        project_id: project.id,\n        conditions: [value as SamplingInnerName],\n      });\n    }\n\n    setData({...data, conditions: newConditions});\n  }\n\n  const predefinedConditionsOptions = conditionCategories.map(([value, label]) => {\n    const optionDisabled = conditions.some(condition => condition.category === value);\n    return {\n      value,\n      label,\n      disabled: optionDisabled,\n      tooltip: optionDisabled ? conditionAlreadyAddedTooltip : undefined,\n    };\n  });\n\n  const submitDisabled =\n    !defined(samplePercentage) ||\n    !conditions.length ||\n    conditions.some(condition => !condition.match);\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{rule ? t('Edit Rule') : t('Add Rule')}</h4>\n      </Header>\n      <Body>\n        <Fields>\n          <Description>\n            {t(\n              'Sample transactions under specific conditions. Multiple conditions are logically expressed as AND and OR for multiple values.'\n            )}\n          </Description>\n          <StyledPanel>\n            <StyledPanelHeader hasButtons>\n              <div>\n                {t('Conditions')}\n                <FieldRequiredBadge />\n              </div>\n              <StyledCompactSelect\n                placement=\"bottom right\"\n                triggerProps={{\n                  size: 'sm',\n                  'aria-label': t('Add Condition'),\n                }}\n                triggerLabel={\n                  <TriggerLabel>\n                    <IconAdd isCircled />\n                    {t('Add Condition')}\n                  </TriggerLabel>\n                }\n                placeholder={t('Filter conditions')}\n                isDisabled={isUniformRule(rule)}\n                options={predefinedConditionsOptions}\n                value={conditions.map(({category}) => category)}\n                onChange={handleAddCondition}\n                isSearchable\n                multiple\n                filterOption={(candidate, input) => createFilter(null)(candidate, input)}\n                components={{\n                  Option: containerProps => <Option {...containerProps} />,\n                }}\n              />\n            </StyledPanelHeader>\n            <PanelBody>\n              {!conditions.length ? (\n                <EmptyMessage\n                  icon={<IconSearch size=\"xl\" />}\n                  title={t('No conditions added')}\n                  description={t('Click on the button above to add (+) a condition')}\n                />\n              ) : (\n                <Conditions\n                  conditions={conditions}\n                  onDelete={handleDeleteCondition}\n                  onChange={handleChangeCondition}\n                  orgSlug={organization.slug}\n                  projectId={project.id}\n                />\n              )}\n            </PanelBody>\n          </StyledPanel>\n          <NumberField\n            label={`${t('Sample Rate')} \\u0025`}\n            name=\"sampleRate\"\n            onChange={value => {\n              setData({...data, samplePercentage: !!value ? Number(value) : null});\n            }}\n            onKeyDown={(_value: string, e: KeyboardEvent) => {\n              if (e.key === 'Enter') {\n                handleSubmit();\n              }\n            }}\n            placeholder={'\\u0025'}\n            step=\"10\"\n            value={samplePercentage}\n            inline={false}\n            hideControlState={!errors.sampleRate}\n            error={errors.sampleRate}\n            showHelpInTooltip\n            stacked\n            required\n          />\n        </Fields>\n      </Body>\n      <Footer>\n        <ButtonBar gap={1}>\n          <Button onClick={closeModal}>{t('Cancel')}</Button>\n          <Button\n            priority=\"primary\"\n            onClick={handleSubmit}\n            title={submitDisabled ? t('Required fields must be filled out') : undefined}\n            disabled={isSaving || submitDisabled}\n          >\n            {t('Save Rule')}\n          </Button>\n        </ButtonBar>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst Fields = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n`;\n\nconst StyledCompactSelect = styled(CompactSelect)`\n  font-weight: 400;\n  text-transform: none;\n`;\n\nconst StyledPanelHeader = styled(PanelHeader)`\n  padding-right: ${space(2)};\n`;\n\nconst StyledPanel = styled(Panel)`\n  margin-bottom: 0;\n`;\n\nconst TriggerLabel = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, max-content);\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst Description = styled(TextBlock)`\n  margin: 0;\n`;\n","import {components, MultiValueProps} from 'react-select';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport Count from 'sentry/components/count';\nimport SelectField from 'sentry/components/forms/selectField';\nimport {t} from 'sentry/locale';\nimport {Organization, Project, TagValue as IssueTagValue} from 'sentry/types';\nimport {SamplingInnerName} from 'sentry/types/sampling';\nimport useApi from 'sentry/utils/useApi';\n\nimport {TruncatedLabel} from './truncatedLabel';\nimport {formatCreateTagLabel, getMatchFieldPlaceholder} from './utils';\n\ntype TagValue = Pick<\n  IssueTagValue,\n  'key' | 'name' | 'value' | 'count' | 'lastSeen' | 'firstSeen'\n>;\n\nexport interface TagValueAutocompleteProps {\n  category: SamplingInnerName.TRACE_ENVIRONMENT | SamplingInnerName.TRACE_RELEASE;\n  onChange: (value: string) => void;\n  orgSlug: Organization['slug'];\n  projectId: Project['id'];\n  tagKey?: string;\n  value?: string;\n}\n\nfunction TagValueAutocomplete({\n  orgSlug,\n  projectId,\n  category,\n  onChange,\n  value,\n  tagKey,\n}: TagValueAutocompleteProps) {\n  const api = useApi();\n\n  function getAriaLabel() {\n    switch (category) {\n      case SamplingInnerName.TRACE_RELEASE:\n        return t('Search or add a release');\n      case SamplingInnerName.TRACE_ENVIRONMENT:\n        return t('Search or add an environment');\n      default:\n        return undefined;\n    }\n  }\n\n  const debouncedFetchValues = debounce(async (inputValue, resolve) => {\n    if (!tagKey) {\n      return resolve([]);\n    }\n\n    return resolve(\n      await fetchTagValues(\n        api,\n        orgSlug,\n        tagKey,\n        inputValue,\n        [projectId],\n        null,\n        true,\n        undefined,\n        '-count'\n      )\n    );\n  }, 250);\n\n  const loadOptions = async (inputValue: string) => {\n    const response: TagValue[] = await new Promise(resolve => {\n      debouncedFetchValues(inputValue, resolve);\n    });\n    // react-select doesn't seem to work very well when its value contains\n    // a created item that isn't listed in the options\n    const createdOptions: TagValue[] = value\n      ? value\n          .split('\\n')\n          .filter(v => !response.some(tagValue => tagValue.value === v))\n          .map(v => ({\n            value: v,\n            name: v,\n            key: tagKey,\n            count: 0,\n            firstSeen: '',\n            lastSeen: '',\n          }))\n      : [];\n\n    return [...response, ...createdOptions].map(tagValue => ({\n      value: tagValue.value,\n      label: <TruncatedLabel value={tagValue.value} />,\n      trailingItems: <StyledCount value={tagValue.count} />,\n    }));\n  };\n\n  return (\n    <StyledSelectField\n      name=\"match\"\n      // The key is used as a way to force a reload of the options:\n      // https://github.com/JedWatson/react-select/issues/1879#issuecomment-316871520\n      key={tagKey}\n      aria-label={getAriaLabel()}\n      value={value ? value?.split('\\n').map(v => ({value: v, label: v})) : []}\n      onChange={newValue => {\n        onChange(newValue?.join('\\n'));\n      }}\n      components={{\n        MultiValue: (multiValueProps: MultiValueProps<{}>) => (\n          <components.MultiValue\n            {...multiValueProps}\n            innerProps={{...multiValueProps.innerProps, 'data-test-id': 'multivalue'}}\n          />\n        ),\n      }}\n      formatCreateLabel={formatCreateTagLabel}\n      isValidNewOption={(inputValue, _selectValue, optionsArray) => {\n        // Do not show \"Add new\" for existing options\n        if (optionsArray.some(option => option.value === inputValue)) {\n          return false;\n        }\n        // Tag values cannot be empty and must have a maximum length of 200 characters\n        // https://github.com/getsentry/relay/blob/d8223d8d03ed4764063855eb3480f22684163d92/relay-general/src/store/normalize.rs#L230-L236\n        // In addition to that, it cannot contain a line-feed (newline) character\n        // https://github.com/getsentry/relay/blob/d8223d8d03ed4764063855eb3480f22684163d92/relay-general/src/protocol/tags.rs#L8\n        return (\n          !/\\\\n/.test(inputValue) &&\n          inputValue.trim().length > 0 &&\n          inputValue.trim().length <= 200\n        );\n      }}\n      filterOption={(option, filterText) => option.data.value.indexOf(filterText) > -1}\n      placeholder={getMatchFieldPlaceholder(category)}\n      inline={false}\n      multiple\n      hideControlState\n      flexibleControlStateSize\n      required\n      stacked\n      creatable\n      allowClear\n      async\n      cacheOptions\n      defaultOptions\n      loadOptions={loadOptions}\n    />\n  );\n}\n\nconst StyledSelectField = styled(SelectField)`\n  width: 100%;\n`;\n\nconst StyledCount = styled(Count)`\n  color: ${p => p.theme.subText};\n`;\n\nexport {TagValueAutocomplete};\n","import Truncate from 'sentry/components/truncate';\nimport theme from 'sentry/utils/theme';\nimport useMedia from 'sentry/utils/useMedia';\n\ntype Props = {\n  value: string;\n};\n\nexport function TruncatedLabel({value}: Props) {\n  const isSmallDevice = useMedia(`(max-width: ${theme.breakpoints.small})`);\n\n  return (\n    <Truncate value={value} maxLength={isSmallDevice ? 30 : 40} expandable={false} />\n  );\n}\n","import {t, tct} from 'sentry/locale';\nimport {\n  SamplingConditionLogicalInner,\n  SamplingInnerName,\n  SamplingInnerOperator,\n  SamplingRule,\n} from 'sentry/types/sampling';\n\nimport {getInnerNameLabel} from '../../utils';\n\nimport {Conditions} from './conditions';\nimport {TruncatedLabel} from './truncatedLabel';\n\ntype Condition = React.ComponentProps<typeof Conditions>['conditions'][0];\n\nexport function getMatchFieldPlaceholder(category: SamplingInnerName) {\n  switch (category) {\n    case SamplingInnerName.TRACE_ENVIRONMENT:\n      return t('ex. prod, dev');\n    case SamplingInnerName.TRACE_RELEASE:\n      return t('ex. 1*, [I3].[0-9].*');\n    default:\n      return undefined;\n  }\n}\n\nexport function getNewCondition(condition: Condition): SamplingConditionLogicalInner {\n  const newValue = (condition.match ?? '')\n    .split('\\n')\n    .filter(match => !!match.trim())\n    .map(match => match.trim());\n\n  if (condition.category === SamplingInnerName.TRACE_RELEASE) {\n    return {\n      op: SamplingInnerOperator.GLOB_MATCH,\n      name: condition.category,\n      value: newValue,\n    };\n  }\n\n  return {\n    op: SamplingInnerOperator.EQUAL,\n    name: condition.category,\n    value: newValue,\n    options: {\n      ignoreCase: true,\n    },\n  };\n}\n\nconst unexpectedErrorMessage = t('An internal error occurred while saving sampling rule');\n\ntype ResponseJSONDetailed = {\n  detail: string[];\n};\n\ntype ResponseJSON = {\n  dynamicSampling?: {\n    rules: Array<Partial<SamplingRule>>;\n  };\n};\n\nexport function getErrorMessage(\n  error: {\n    responseJSON?: ResponseJSON | ResponseJSONDetailed;\n  },\n  currentRuleIndex: number\n) {\n  const detailedErrorResponse = (error.responseJSON as undefined | ResponseJSONDetailed)\n    ?.detail;\n\n  if (detailedErrorResponse) {\n    // This is a temp solution until we enable error rules again, therefore it does not need translation\n    return detailedErrorResponse[0];\n  }\n\n  const errorResponse = error.responseJSON as undefined | ResponseJSON;\n\n  if (!errorResponse) {\n    return unexpectedErrorMessage;\n  }\n\n  const responseErrors = errorResponse.dynamicSampling?.rules[currentRuleIndex] ?? {};\n\n  const [type, _value] = Object.entries(responseErrors)[0];\n\n  if (type === 'sampleRate') {\n    return {\n      type: 'sampleRate',\n      message: t('Ensure this value is a floating number between 0 and 100'),\n    };\n  }\n\n  return unexpectedErrorMessage;\n}\n\nexport function getTagKey(condition: Condition) {\n  switch (condition.category) {\n    case SamplingInnerName.TRACE_RELEASE:\n      return 'release';\n    case SamplingInnerName.TRACE_ENVIRONMENT:\n      return 'environment';\n    default:\n      return undefined;\n  }\n}\n\nexport const distributedTracesConditions = [\n  SamplingInnerName.TRACE_RELEASE,\n  SamplingInnerName.TRACE_ENVIRONMENT,\n];\n\nexport function generateConditionCategoriesOptions(\n  conditionCategories: SamplingInnerName[]\n): [SamplingInnerName, string][] {\n  const sortedConditionCategories = conditionCategories\n    // sort dropdown options alphabetically based on display labels\n    .sort((a, b) => getInnerNameLabel(a).localeCompare(getInnerNameLabel(b)));\n\n  // massage into format that select component understands\n  return sortedConditionCategories.map(innerName => [\n    innerName,\n    getInnerNameLabel(innerName),\n  ]);\n}\n\nexport function formatCreateTagLabel(label: string) {\n  return tct('Add \"[newLabel]\"', {\n    newLabel: <TruncatedLabel value={label} />,\n  });\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\nimport {SamplingProjectIncompatibleAlert} from '../samplingProjectIncompatibleAlert';\nimport {isValidSampleRate, SERVER_SIDE_SAMPLING_DOC_LINK} from '../utils';\nimport {useRecommendedSdkUpgrades} from '../utils/useRecommendedSdkUpgrades';\n\nimport {FooterActions, Stepper, StyledNumberField} from './uniformRateModal';\n\ntype SpecifyClientRateModalProps = ModalRenderProps & {\n  onChange: (value: number | undefined) => void;\n  onGoNext: () => void;\n  onReadDocs: () => void;\n  organization: Organization;\n  projectId: Project['id'];\n  value: number | undefined;\n};\n\nexport function SpecifyClientRateModal({\n  Header,\n  Body,\n  Footer,\n  closeModal,\n  onReadDocs,\n  onGoNext,\n  organization,\n  projectId,\n  value,\n  onChange,\n}: SpecifyClientRateModalProps) {\n  const {isProjectIncompatible} = useRecommendedSdkUpgrades({\n    orgSlug: organization.slug,\n    projectId,\n  });\n\n  function handleReadDocs() {\n    trackAdvancedAnalyticsEvent('sampling.settings.modal.specify.client.rate_read_docs', {\n      organization,\n      project_id: projectId,\n    });\n\n    onReadDocs();\n  }\n\n  function handleGoNext() {\n    trackAdvancedAnalyticsEvent('sampling.settings.modal.specify.client.rate_next', {\n      organization,\n      project_id: projectId,\n    });\n\n    if (!defined(value)) {\n      return;\n    }\n\n    onGoNext();\n  }\n\n  const isValid = isValidSampleRate(value);\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{t('Specify current client(SDK) sample rate')}</h4>\n      </Header>\n      <Body>\n        <StyledNumberField\n          label={tct(\n            'Find the [textHighlight:tracesSampleRate] option in your SDK config, and copy it’s value into the field below.',\n            {\n              textHighlight: <TextHighlight />,\n            }\n          )}\n          type=\"number\"\n          name=\"current-client-sampling\"\n          placeholder=\"0.1\"\n          step=\"0.1\"\n          value={value ?? null}\n          onChange={newValue => {\n            onChange(newValue === '' ? undefined : newValue);\n          }}\n          stacked\n          flexibleControlStateSize\n          inline={false}\n        />\n        <SamplingProjectIncompatibleAlert\n          organization={organization}\n          projectId={projectId}\n          isProjectIncompatible={isProjectIncompatible}\n        />\n      </Body>\n      <Footer>\n        <FooterActions>\n          <Button href={SERVER_SIDE_SAMPLING_DOC_LINK} onClick={handleReadDocs} external>\n            {t('Read Docs')}\n          </Button>\n          <ButtonBar gap={1}>\n            <Stepper>{t('Step 1 of 3')}</Stepper>\n            <Button onClick={closeModal}>{t('Cancel')}</Button>\n            <Button\n              priority=\"primary\"\n              onClick={handleGoNext}\n              disabled={!isValid || isProjectIncompatible}\n              title={!isValid ? t('Sample rate is not valid') : undefined}\n            >\n              {t('Next')}\n            </Button>\n          </ButtonBar>\n        </FooterActions>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst TextHighlight = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n","import {css} from '@emotion/react';\n\nimport commonTheme from 'sentry/utils/theme';\n\nexport const responsiveModal = css`\n  @media (max-width: ${commonTheme.breakpoints.small}) {\n    width: 100%;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport {BarChart} from 'sentry/components/charts/barChart';\nimport {ChartContainer, HeaderTitle} from 'sentry/components/charts/styles';\nimport {Panel} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {formatAbbreviatedNumber} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\ntype Props = {\n  series: Series[];\n};\n\nfunction UniformRateChart({series}: Props) {\n  const legend = {\n    right: 10,\n    top: 5,\n    data: series.map(s => s.seriesName),\n  };\n\n  return (\n    <ChartPanel>\n      <ChartContainer>\n        <HeaderTitle>{t('Transactions (Last 30 days) ')}</HeaderTitle>\n        {getDynamicText({\n          value: (\n            <BarChart\n              legend={legend}\n              series={series}\n              grid={{\n                left: '10px',\n                right: '10px',\n                top: '40px',\n                bottom: '0px',\n              }}\n              height={200}\n              isGroupedByDate\n              showTimeInTooltip={false}\n              tooltip={{valueFormatter: value => formatAbbreviatedNumber(value)}}\n              yAxis={{\n                axisLabel: {\n                  formatter: (value: number) => formatAbbreviatedNumber(value),\n                },\n              }}\n            />\n          ),\n\n          fixed: <Placeholder height=\"224px\" />,\n        })}\n      </ChartContainer>\n    </ChartPanel>\n  );\n}\n\nconst ChartPanel = styled(Panel)`\n  margin-bottom: 0;\n  border-bottom-left-radius: 0;\n  border-bottom: none;\n  border-bottom-right-radius: 0;\n`;\n\nexport {UniformRateChart};\n","import {Fragment, useEffect, useMemo, useState} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {NumberField} from 'sentry/components/forms';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {PanelTable} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport Radio from 'sentry/components/radio';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconRefresh, IconWarning} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport ModalStore from 'sentry/stores/modalStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport space from 'sentry/styles/space';\nimport {Project, SeriesApi} from 'sentry/types';\nimport {SamplingRule, UniformModalsSubmit} from 'sentry/types/sampling';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {formatPercentage} from 'sentry/utils/formatters';\nimport {Outcome} from 'sentry/views/organizationStats/types';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport {SamplingProjectIncompatibleAlert} from '../samplingProjectIncompatibleAlert';\nimport {\n  getClientSampleRates,\n  isValidSampleRate,\n  percentageToRate,\n  rateToPercentage,\n  SERVER_SIDE_SAMPLING_DOC_LINK,\n} from '../utils';\nimport {hasFirstBucketsEmpty} from '../utils/hasFirstBucketsEmpty';\nimport {projectStatsToPredictedSeries} from '../utils/projectStatsToPredictedSeries';\nimport {projectStatsToSeries} from '../utils/projectStatsToSeries';\nimport useProjectStats from '../utils/useProjectStats';\nimport {useRecommendedSdkUpgrades} from '../utils/useRecommendedSdkUpgrades';\n\nimport {RecommendedStepsModal, RecommendedStepsModalProps} from './recommendedStepsModal';\nimport {SpecifyClientRateModal} from './specifyClientRateModal';\nimport {UniformRateChart} from './uniformRateChart';\n\nconst CONSERVATIVE_SAMPLE_RATE = 0.1;\n\nenum Strategy {\n  CURRENT = 'current',\n  RECOMMENDED = 'recommended',\n}\n\nenum Step {\n  SET_CURRENT_CLIENT_SAMPLE_RATE = 'set_current_client_sample_rate',\n  SET_UNIFORM_SAMPLE_RATE = 'set_uniform_sample_rate',\n  RECOMMENDED_STEPS = 'recommended_steps',\n}\n\ntype Props = Omit<\n  RecommendedStepsModalProps,\n  'onSubmit' | 'recommendedSdkUpgrades' | 'projectId' | 'recommendedSampleRate'\n> & {\n  onSubmit: UniformModalsSubmit;\n  project: Project;\n  rules: SamplingRule[];\n  projectStats?: SeriesApi;\n};\n\nexport function UniformRateModal({\n  Header,\n  Body,\n  Footer,\n  closeModal,\n  organization,\n  projectStats,\n  project,\n  uniformRule,\n  onSubmit,\n  onReadDocs,\n  ...props\n}: Props) {\n  const [rules, setRules] = useState(props.rules);\n  const [specifiedClientRate, setSpecifiedClientRate] = useState<undefined | number>(\n    undefined\n  );\n  const [activeStep, setActiveStep] = useState<Step | undefined>(undefined);\n  const [selectedStrategy, setSelectedStrategy] = useState<Strategy>(Strategy.CURRENT);\n\n  const modalStore = useLegacyStore(ModalStore);\n\n  const {\n    onRefetch: onRefetch30d,\n    projectStats: projectStats30d,\n    error: error30d,\n    loading: loading30d,\n  } = useProjectStats({\n    orgSlug: organization.slug,\n    projectId: project.id,\n    interval: '1d',\n    statsPeriod: '30d',\n    groupBy: useMemo(() => ['outcome', 'reason'], []),\n  });\n\n  const {recommendedSdkUpgrades, affectedProjects, isProjectIncompatible} =\n    useRecommendedSdkUpgrades({\n      orgSlug: organization.slug,\n      projectId: project.id,\n    });\n\n  const loading = loading30d || !projectStats;\n\n  useEffect(() => {\n    if (loading || !projectStats30d) {\n      return;\n    }\n\n    if (!projectStats30d.groups.length) {\n      setActiveStep(Step.SET_UNIFORM_SAMPLE_RATE);\n      return;\n    }\n\n    const clientDiscard = projectStats30d.groups.some(\n      g => g.by.outcome === Outcome.CLIENT_DISCARD\n    );\n\n    setActiveStep(\n      clientDiscard ? Step.SET_UNIFORM_SAMPLE_RATE : Step.SET_CURRENT_CLIENT_SAMPLE_RATE\n    );\n  }, [loading, projectStats30d]);\n\n  const shouldUseConservativeSampleRate =\n    hasFirstBucketsEmpty(projectStats30d, 27) &&\n    hasFirstBucketsEmpty(projectStats, 3) &&\n    !defined(specifiedClientRate);\n\n  useEffect(() => {\n    // updated or created rules will always have a new id,\n    // therefore the isEqual will always work in this case\n    if (modalStore.renderer === null && isEqual(rules, props.rules)) {\n      trackAdvancedAnalyticsEvent(\n        activeStep === Step.SET_CURRENT_CLIENT_SAMPLE_RATE\n          ? 'sampling.settings.modal.specify.client.rate_cancel'\n          : activeStep === Step.RECOMMENDED_STEPS\n          ? 'sampling.settings.modal.recommended.next.steps_cancel'\n          : 'sampling.settings.modal.uniform.rate_cancel',\n        {\n          organization,\n          project_id: project.id,\n        }\n      );\n    }\n  }, [activeStep, modalStore.renderer, organization, project.id, rules, props.rules]);\n\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent(\n      selectedStrategy === Strategy.RECOMMENDED\n        ? 'sampling.settings.modal.uniform.rate_switch_recommended'\n        : 'sampling.settings.modal.uniform.rate_switch_current',\n      {\n        organization,\n        project_id: project.id,\n      }\n    );\n  }, [selectedStrategy, organization, project.id]);\n\n  const uniformSampleRate = uniformRule?.sampleRate;\n\n  const {recommended: recommendedClientSampling, current: currentClientSampling} =\n    getClientSampleRates(projectStats, specifiedClientRate);\n\n  const currentServerSampling =\n    defined(uniformSampleRate) && !isNaN(uniformSampleRate)\n      ? uniformSampleRate\n      : undefined;\n  const recommendedServerSampling = shouldUseConservativeSampleRate\n    ? CONSERVATIVE_SAMPLE_RATE\n    : Math.min(currentClientSampling ?? 1, recommendedClientSampling ?? 1);\n\n  const [clientInput, setClientInput] = useState(\n    rateToPercentage(recommendedClientSampling)\n  );\n  const [serverInput, setServerInput] = useState(\n    rateToPercentage(recommendedServerSampling)\n  );\n  // ^^^ We use clientInput and serverInput variables just for the text fields, everywhere else we should use client and server variables vvv\n\n  const client = percentageToRate(clientInput);\n  const server = percentageToRate(serverInput);\n\n  const [saving, setSaving] = useState(false);\n\n  const shouldHaveNextStep =\n    client !== currentClientSampling || recommendedSdkUpgrades.length > 0;\n\n  useEffect(() => {\n    setClientInput(rateToPercentage(recommendedClientSampling));\n    setServerInput(rateToPercentage(recommendedServerSampling));\n  }, [recommendedClientSampling, recommendedServerSampling]);\n\n  const isEdited =\n    client !== recommendedClientSampling || server !== recommendedServerSampling;\n\n  const isServerRateHigherThanClientRate =\n    defined(client) && defined(server) ? client < server : false;\n\n  const isValid =\n    isValidSampleRate(client) &&\n    isValidSampleRate(server) &&\n    !isServerRateHigherThanClientRate;\n\n  function handlePrimaryButtonClick() {\n    // this can either be \"Next\" or \"Done\"\n\n    if (!isValid) {\n      return;\n    }\n\n    if (shouldHaveNextStep) {\n      trackAdvancedAnalyticsEvent('sampling.settings.modal.uniform.rate_next', {\n        organization,\n        project_id: project.id,\n      });\n\n      setActiveStep(Step.RECOMMENDED_STEPS);\n      return;\n    }\n\n    setSaving(true);\n\n    onSubmit({\n      recommendedSampleRate: !isEdited,\n      uniformRateModalOrigin: true,\n      sampleRate: server!,\n      rule: uniformRule,\n      onSuccess: newRules => {\n        setSaving(false);\n        setRules(newRules);\n        closeModal();\n      },\n      onError: () => {\n        setSaving(false);\n      },\n    });\n  }\n\n  function handleReadDocs() {\n    onReadDocs();\n\n    if (activeStep === undefined) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('sampling.settings.modal.uniform.rate_read_docs', {\n      organization,\n      project_id: project.id,\n    });\n  }\n\n  if (activeStep === undefined || loading || error30d) {\n    return (\n      <Fragment>\n        <Header closeButton>\n          {error30d ? (\n            <h4>{t('Set a global sample rate')}</h4>\n          ) : (\n            <Placeholder height=\"22px\" />\n          )}\n        </Header>\n        <Body>\n          {error30d ? <LoadingError onRetry={onRefetch30d} /> : <LoadingIndicator />}\n        </Body>\n        <Footer>\n          <FooterActions>\n            <Button\n              href={SERVER_SIDE_SAMPLING_DOC_LINK}\n              onClick={handleReadDocs}\n              external\n            >\n              {t('Read Docs')}\n            </Button>\n            <ButtonBar gap={1}>\n              <Button onClick={closeModal}>{t('Cancel')}</Button>\n              {error30d ? (\n                <Button\n                  priority=\"primary\"\n                  title={t('There was an error loading data')}\n                  disabled\n                >\n                  {t('Done')}\n                </Button>\n              ) : (\n                <Placeholder height=\"40px\" width=\"80px\" />\n              )}\n            </ButtonBar>\n          </FooterActions>\n        </Footer>\n      </Fragment>\n    );\n  }\n\n  if (activeStep === Step.SET_CURRENT_CLIENT_SAMPLE_RATE) {\n    return (\n      <SpecifyClientRateModal\n        {...props}\n        Header={Header}\n        Body={Body}\n        Footer={Footer}\n        closeModal={closeModal}\n        onReadDocs={onReadDocs}\n        organization={organization}\n        projectId={project.id}\n        value={specifiedClientRate}\n        onChange={setSpecifiedClientRate}\n        onGoNext={() => setActiveStep(Step.SET_UNIFORM_SAMPLE_RATE)}\n      />\n    );\n  }\n\n  if (activeStep === Step.RECOMMENDED_STEPS) {\n    return (\n      <RecommendedStepsModal\n        {...props}\n        Header={Header}\n        Body={Body}\n        Footer={Footer}\n        closeModal={closeModal}\n        organization={organization}\n        recommendedSdkUpgrades={recommendedSdkUpgrades}\n        onGoBack={() => setActiveStep(Step.SET_UNIFORM_SAMPLE_RATE)}\n        onSubmit={onSubmit}\n        onReadDocs={onReadDocs}\n        clientSampleRate={client}\n        serverSampleRate={server}\n        uniformRule={uniformRule}\n        projectId={project.id}\n        recommendedSampleRate={!isEdited}\n        onSetRules={setRules}\n      />\n    );\n  }\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{t('Set a global sample rate')}</h4>\n      </Header>\n      <Body>\n        <TextBlock>\n          {tct(\n            'Set a server-side sample rate for all transactions using our suggestion as a starting point. To accurately monitor overall performance, we also suggest changing your client(SDK) sample rate to allow more metrics to be processed. [learnMoreLink: Learn more about quota management].',\n            {\n              learnMoreLink: (\n                <ExternalLink\n                  href={`${SERVER_SIDE_SAMPLING_DOC_LINK}getting-started/#2-set-a-uniform-sampling-rate`}\n                />\n              ),\n            }\n          )}\n        </TextBlock>\n        <Fragment>\n          <UniformRateChart\n            series={\n              selectedStrategy === Strategy.CURRENT\n                ? projectStatsToSeries(projectStats30d, specifiedClientRate)\n                : projectStatsToPredictedSeries(\n                    projectStats30d,\n                    client,\n                    server,\n                    specifiedClientRate\n                  )\n            }\n          />\n\n          <StyledPanelTable\n            headers={[\n              <SamplingValuesColumn key=\"sampling-values\">\n                {t('Sampling Values')}\n              </SamplingValuesColumn>,\n              <ClientColumn key=\"client\">{t('Client')}</ClientColumn>,\n              <ClientHelpOrWarningColumn key=\"client-rate-help\" />,\n              <ServerColumn key=\"server\">{t('Server')}</ServerColumn>,\n              <ServerWarningColumn key=\"server-warning\" />,\n              <RefreshRatesColumn key=\"refresh-rates\" />,\n            ]}\n          >\n            <Fragment>\n              <SamplingValuesColumn>\n                <Label htmlFor=\"sampling-current\">\n                  <Radio\n                    id=\"sampling-current\"\n                    checked={selectedStrategy === Strategy.CURRENT}\n                    onChange={() => {\n                      setSelectedStrategy(Strategy.CURRENT);\n                    }}\n                  />\n                  {t('Current')}\n                </Label>\n              </SamplingValuesColumn>\n              <ClientColumn>\n                {defined(currentClientSampling)\n                  ? formatPercentage(currentClientSampling)\n                  : 'N/A'}\n              </ClientColumn>\n              <ClientHelpOrWarningColumn />\n              <ServerColumn>\n                {defined(currentServerSampling)\n                  ? formatPercentage(currentServerSampling)\n                  : 'N/A'}\n              </ServerColumn>\n              <ServerWarningColumn />\n              <RefreshRatesColumn />\n            </Fragment>\n            <Fragment>\n              <SamplingValuesColumn>\n                <Label htmlFor=\"sampling-recommended\">\n                  <Radio\n                    id=\"sampling-recommended\"\n                    checked={selectedStrategy === Strategy.RECOMMENDED}\n                    onChange={() => {\n                      setSelectedStrategy(Strategy.RECOMMENDED);\n                    }}\n                  />\n                  {isEdited ? t('New') : t('Suggested')}\n                  {!isEdited && (\n                    <QuestionTooltip\n                      title={t(\n                        'Optimal sample rates based on your organization’s usage and quota.'\n                      )}\n                      size=\"sm\"\n                    />\n                  )}\n                </Label>\n              </SamplingValuesColumn>\n              <ClientColumn>\n                <StyledNumberField\n                  name=\"recommended-client-sampling\"\n                  placeholder=\"%\"\n                  step=\"10\"\n                  value={clientInput ?? null}\n                  onChange={value => {\n                    setClientInput(value === '' ? undefined : value);\n                  }}\n                  onFocus={() => setSelectedStrategy(Strategy.RECOMMENDED)}\n                  stacked\n                  flexibleControlStateSize\n                  inline={false}\n                />\n              </ClientColumn>\n              <ClientHelpOrWarningColumn>\n                {isEdited && !isValidSampleRate(client) ? (\n                  <Tooltip\n                    title={t('Set a value between 0 and 100')}\n                    containerDisplayMode=\"inline-flex\"\n                  >\n                    <IconWarning\n                      color=\"red300\"\n                      size=\"sm\"\n                      data-test-id=\"invalid-client-rate\"\n                    />\n                  </Tooltip>\n                ) : (\n                  <QuestionTooltip\n                    title={t(\n                      'Changing the client(SDK) sample rate will require re-deployment.'\n                    )}\n                    size=\"sm\"\n                  />\n                )}\n              </ClientHelpOrWarningColumn>\n              <ServerColumn>\n                <StyledNumberField\n                  name=\"recommended-server-sampling\"\n                  placeholder=\"%\"\n                  step=\"10\"\n                  value={serverInput ?? null}\n                  onChange={value => {\n                    setServerInput(value === '' ? undefined : value);\n                  }}\n                  onFocus={() => setSelectedStrategy(Strategy.RECOMMENDED)}\n                  stacked\n                  flexibleControlStateSize\n                  inline={false}\n                />\n              </ServerColumn>\n              <ServerWarningColumn>\n                {isEdited && !isValidSampleRate(server) ? (\n                  <Tooltip\n                    title={t('Set a value between 0 and 100')}\n                    containerDisplayMode=\"inline-flex\"\n                  >\n                    <IconWarning\n                      color=\"red300\"\n                      size=\"sm\"\n                      data-test-id=\"invalid-server-rate\"\n                    />\n                  </Tooltip>\n                ) : (\n                  isServerRateHigherThanClientRate && (\n                    <Tooltip\n                      title={t(\n                        'Server sample rate shall not be higher than client sample rate'\n                      )}\n                      containerDisplayMode=\"inline-flex\"\n                    >\n                      <IconWarning\n                        color=\"red300\"\n                        size=\"sm\"\n                        data-test-id=\"invalid-server-rate\"\n                      />\n                    </Tooltip>\n                  )\n                )}\n              </ServerWarningColumn>\n              <RefreshRatesColumn>\n                {isEdited && (\n                  <Button\n                    title={t('Reset to suggested values')}\n                    icon={<IconRefresh size=\"sm\" />}\n                    aria-label={t('Reset to suggested values')}\n                    onClick={() => {\n                      setClientInput(rateToPercentage(recommendedClientSampling));\n                      setServerInput(rateToPercentage(recommendedServerSampling));\n                    }}\n                    borderless\n                    size=\"zero\"\n                  />\n                )}\n              </RefreshRatesColumn>\n            </Fragment>\n          </StyledPanelTable>\n\n          <SamplingProjectIncompatibleAlert\n            organization={organization}\n            projectId={project.id}\n            isProjectIncompatible={isProjectIncompatible}\n          />\n\n          {shouldUseConservativeSampleRate && (\n            <Alert type=\"info\" showIcon>\n              {t(\n                \"For accurate suggestions, we need at least 48hrs to ingest transactions. Meanwhile, here's a conservative server-side sampling rate which can be changed later on.\"\n              )}\n            </Alert>\n          )}\n\n          {affectedProjects.length > 0 && (\n            <Alert\n              data-test-id=\"affected-sdk-alert\"\n              type=\"info\"\n              showIcon\n              trailingItems={\n                <Button\n                  href={`${SERVER_SIDE_SAMPLING_DOC_LINK}#traces--propagation-of-sampling-decisions`}\n                  priority=\"link\"\n                  borderless\n                  external\n                >\n                  {t('Learn More')}\n                </Button>\n              }\n            >\n              {t('This rate will affect the transactions for the following projects:')}\n              <Projects>\n                {affectedProjects.map(affectedProject => (\n                  <ProjectBadge\n                    key={affectedProject.id}\n                    project={affectedProject}\n                    avatarSize={16}\n                  />\n                ))}\n              </Projects>\n            </Alert>\n          )}\n        </Fragment>\n      </Body>\n      <Footer>\n        <FooterActions>\n          <Button href={SERVER_SIDE_SAMPLING_DOC_LINK} onClick={handleReadDocs} external>\n            {t('Read Docs')}\n          </Button>\n\n          <ButtonBar gap={1}>\n            {shouldHaveNextStep && (\n              <Stepper>\n                {defined(specifiedClientRate) ? t('Step 2 of 3') : t('Step 1 of 2')}\n              </Stepper>\n            )}\n            {defined(specifiedClientRate) ? (\n              <Button onClick={() => setActiveStep(Step.SET_CURRENT_CLIENT_SAMPLE_RATE)}>\n                {t('Back')}\n              </Button>\n            ) : (\n              <Button onClick={closeModal}>{t('Cancel')}</Button>\n            )}\n            <Button\n              priority=\"primary\"\n              onClick={handlePrimaryButtonClick}\n              disabled={\n                saving ||\n                !isValid ||\n                selectedStrategy === Strategy.CURRENT ||\n                isProjectIncompatible\n              }\n              title={\n                selectedStrategy === Strategy.CURRENT\n                  ? t('Current sampling values selected')\n                  : !isValid\n                  ? t('Sample rate is not valid')\n                  : undefined\n              }\n            >\n              {shouldHaveNextStep ? t('Next') : t('Done')}\n            </Button>\n          </ButtonBar>\n        </FooterActions>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr 115px 24px 115px 16px 46px;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  > * {\n    padding: 0;\n  }\n`;\n\nconst Label = styled('label')`\n  font-weight: 400;\n  display: inline-flex;\n  align-items: center;\n  gap: ${space(1)};\n  margin-bottom: 0;\n`;\n\nexport const StyledNumberField = styled(NumberField)`\n  width: 100%;\n`;\n\nexport const FooterActions = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex: 1;\n  gap: ${space(1)};\n`;\n\nexport const Stepper = styled('span')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n`;\n\nconst SamplingValuesColumn = styled('div')`\n  padding: ${space(2)};\n  display: flex;\n`;\n\nconst ClientColumn = styled('div')`\n  padding: ${space(2)} ${space(1)} ${space(2)} ${space(2)};\n  text-align: right;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ClientHelpOrWarningColumn = styled('div')`\n  padding: ${space(2)} ${space(1)} ${space(2)} 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst ServerColumn = styled('div')`\n  padding: ${space(2)} ${space(1)} ${space(2)} ${space(2)};\n  text-align: right;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ServerWarningColumn = styled('div')`\n  padding: ${space(2)} 0;\n  display: flex;\n  align-items: center;\n`;\n\nconst RefreshRatesColumn = styled('div')`\n  padding: ${space(2)} ${space(2)} ${space(2)} ${space(1)};\n  display: inline-flex;\n`;\n\nconst Projects = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${space(1.5)};\n  justify-content: flex-start;\n  margin-top: ${space(1)};\n`;\n","import {Fragment} from 'react';\nimport {DraggableSyntheticListeners, UseDraggableArguments} from '@dnd-kit/core';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport MenuItemActionLink from 'sentry/components/actions/menuItemActionLink';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport NewBooleanField from 'sentry/components/forms/booleanField';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconDownload, IconEllipsis} from 'sentry/icons';\nimport {IconGrabbable} from 'sentry/icons/iconGrabbable';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport {SamplingRule, SamplingRuleOperator} from 'sentry/types/sampling';\nimport {formatPercentage} from 'sentry/utils/formatters';\n\nimport {getInnerNameLabel, isUniformRule} from './utils';\n\ntype Props = {\n  dragging: boolean;\n  /**\n   * Hide the grab button if true.\n   * This is used when the list has a single item, making sorting not possible.\n   */\n  hideGrabButton: boolean;\n  listeners: DraggableSyntheticListeners;\n  noPermission: boolean;\n  onActivate: () => void;\n  onDeleteRule: () => void;\n  onEditRule: () => void;\n  operator: SamplingRuleOperator;\n  rule: SamplingRule;\n  sorting: boolean;\n  /**\n   * If not empty, the activate rule toggle will be disabled.\n   */\n  upgradeSdkForProjects: Project['slug'][];\n  grabAttributes?: UseDraggableArguments['attributes'];\n};\n\nexport function Rule({\n  dragging,\n  rule,\n  noPermission,\n  onEditRule,\n  onDeleteRule,\n  onActivate,\n  listeners,\n  operator,\n  grabAttributes,\n  hideGrabButton,\n  upgradeSdkForProjects,\n}: Props) {\n  const isUniform = isUniformRule(rule);\n  const canDelete = !noPermission && !isUniform;\n  const canActivate = !noPermission && !upgradeSdkForProjects.length;\n  const canDrag = !isUniform && !noPermission;\n\n  return (\n    <Fragment>\n      <GrabColumn disabled={!canDrag}>\n        {hideGrabButton ? null : (\n          <Tooltip\n            title={\n              noPermission\n                ? t('You do not have permission to reorder rules')\n                : isUniform\n                ? t('Uniform rules cannot be reordered')\n                : undefined\n            }\n            containerDisplayMode=\"flex\"\n          >\n            <IconGrabbableWrapper\n              {...listeners}\n              {...grabAttributes}\n              aria-label={dragging ? t('Drop Rule') : t('Drag Rule')}\n              aria-disabled={!canDrag}\n            >\n              <IconGrabbable />\n            </IconGrabbableWrapper>\n          </Tooltip>\n        )}\n      </GrabColumn>\n      <OperatorColumn>\n        <Operator>\n          {operator === SamplingRuleOperator.IF\n            ? t('If')\n            : operator === SamplingRuleOperator.ELSE_IF\n            ? t('Else if')\n            : t('Else')}\n        </Operator>\n      </OperatorColumn>\n      <ConditionColumn>\n        {hideGrabButton && !rule.condition.inner.length\n          ? t('All')\n          : rule.condition.inner.map((condition, index) => (\n              <Fragment key={index}>\n                <ConditionName>{getInnerNameLabel(condition.name)}</ConditionName>\n                <ConditionEqualOperator>{'='}</ConditionEqualOperator>\n                {Array.isArray(condition.value) ? (\n                  <div>\n                    {[...condition.value].map((conditionValue, conditionValueIndex) => (\n                      <Fragment key={conditionValue}>\n                        <ConditionValue>{conditionValue}</ConditionValue>\n                        {conditionValueIndex !==\n                          (condition.value as string[]).length - 1 && (\n                          <ConditionSeparator>{'\\u002C'}</ConditionSeparator>\n                        )}\n                      </Fragment>\n                    ))}\n                  </div>\n                ) : (\n                  <ConditionValue>{String(condition.value)}</ConditionValue>\n                )}\n              </Fragment>\n            ))}\n      </ConditionColumn>\n      <RateColumn>\n        <SampleRate>{formatPercentage(rule.sampleRate)}</SampleRate>\n      </RateColumn>\n      <ActiveColumn>\n        <GuideAnchor\n          target=\"sampling_rule_toggle\"\n          onFinish={onActivate}\n          disabled={!canActivate || !isUniform}\n        >\n          <Tooltip\n            disabled={canActivate}\n            title={\n              !canActivate\n                ? tn(\n                    'To enable the rule, the recommended sdk version have to be updated',\n                    'To enable the rule, the recommended sdk versions have to be updated',\n                    upgradeSdkForProjects.length\n                  )\n                : undefined\n            }\n          >\n            <ActiveToggle\n              inline={false}\n              hideControlState\n              aria-label={rule.active ? t('Deactivate Rule') : t('Activate Rule')}\n              onClick={onActivate}\n              name=\"active\"\n              disabled={!canActivate}\n              value={rule.active}\n            />\n          </Tooltip>\n        </GuideAnchor>\n      </ActiveColumn>\n      <Column>\n        <EllipisDropDownButton\n          caret={false}\n          customTitle={\n            <Button aria-label={t('Actions')} icon={<IconEllipsis />} size=\"sm\" />\n          }\n          anchorRight\n        >\n          <MenuItemActionLink\n            shouldConfirm={false}\n            icon={<IconDownload size=\"xs\" />}\n            title={t('Edit')}\n            onClick={\n              !noPermission\n                ? onEditRule\n                : event => {\n                    event?.stopPropagation();\n                  }\n            }\n            disabled={noPermission}\n          >\n            <Tooltip\n              disabled={!noPermission}\n              title={t('You do not have permission to edit rules')}\n              containerDisplayMode=\"block\"\n            >\n              {t('Edit')}\n            </Tooltip>\n          </MenuItemActionLink>\n          <MenuItemActionLink\n            onAction={onDeleteRule}\n            message={t('Are you sure you wish to delete this rule?')}\n            icon={<IconDownload size=\"xs\" />}\n            title={t('Delete')}\n            disabled={!canDelete}\n            priority=\"danger\"\n            shouldConfirm\n          >\n            <Tooltip\n              disabled={canDelete}\n              title={\n                isUniform\n                  ? t(\"You can't delete the uniform rule\")\n                  : t('You do not have permission to delete rules')\n              }\n              containerDisplayMode=\"block\"\n            >\n              {t('Delete')}\n            </Tooltip>\n          </MenuItemActionLink>\n        </EllipisDropDownButton>\n      </Column>\n    </Fragment>\n  );\n}\n\nexport const Column = styled('div')`\n  display: flex;\n  padding: ${space(1)} ${space(2)};\n  cursor: default;\n  white-space: pre-wrap;\n  word-break: break-all;\n`;\n\nexport const GrabColumn = styled(Column)<{disabled?: boolean}>`\n  [role='button'] {\n    cursor: grab;\n  }\n\n  ${p =>\n    p.disabled &&\n    css`\n      [role='button'] {\n        cursor: not-allowed;\n      }\n      color: ${p.theme.disabled};\n    `}\n\n  display: none;\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n  }\n`;\n\nexport const OperatorColumn = styled(Column)`\n  display: none;\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n  }\n`;\n\nexport const ConditionColumn = styled(Column)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: flex-start;\n  flex-wrap: wrap;\n`;\n\nexport const RateColumn = styled(Column)`\n  justify-content: flex-end;\n  text-align: right;\n`;\n\nexport const ActiveColumn = styled(Column)`\n  justify-content: center;\n  text-align: center;\n  display: none;\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n  }\n`;\n\nconst IconGrabbableWrapper = styled('div')`\n  outline: none;\n  display: flex;\n  align-items: center;\n  /* match the height of edit and delete buttons */\n  height: 34px;\n`;\n\nconst ConditionEqualOperator = styled('div')`\n  color: ${p => p.theme.purple300};\n`;\n\nconst Operator = styled('div')`\n  color: ${p => p.theme.active};\n`;\n\nconst SampleRate = styled('div')`\n  white-space: pre-wrap;\n  word-break: break-all;\n`;\n\nconst ActiveToggle = styled(NewBooleanField)`\n  padding: 0;\n  height: 34px;\n  justify-content: center;\n`;\n\nconst ConditionName = styled('div')`\n  color: ${p => p.theme.gray400};\n`;\n\nconst ConditionValue = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst ConditionSeparator = styled(ConditionValue)`\n  padding-right: ${space(0.5)};\n`;\n\nconst EllipisDropDownButton = styled(DropdownLink)`\n  display: flex;\n  align-items: center;\n  transition: none;\n`;\n","import {Fragment} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'sentry/components/charts/styles';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t, tct} from 'sentry/locale';\nimport {ServerSideSamplingStore} from 'sentry/stores/serverSideSamplingStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {percent} from 'sentry/utils';\nimport {formatPercentage} from 'sentry/utils/formatters';\nimport useProjects from 'sentry/utils/useProjects';\nimport ColorBar from 'sentry/views/performance/vitalDetail/colorBar';\n\nimport {SERVER_SIDE_SAMPLING_DOC_LINK} from './utils';\n\ntype Props = {\n  orgSlug: Organization['slug'];\n};\n\nexport function SamplingBreakdown({orgSlug}: Props) {\n  const theme = useTheme();\n  const {samplingDistribution, fetching} = useLegacyStore(ServerSideSamplingStore);\n  const projectBreakdown = samplingDistribution.project_breakdown;\n  const {projects} = useProjects({\n    slugs: projectBreakdown?.map(project => project.project) ?? [],\n    orgId: orgSlug,\n  });\n  const totalCount = projectBreakdown?.reduce(\n    (acc, project) => acc + project['count()'],\n    0\n  );\n  const projectsWithPercentages = projects\n    .map(project => ({\n      project,\n      percentage: percent(\n        projectBreakdown?.find(pb => pb.project === project.slug)?.['count()'] ?? 0,\n        totalCount ?? 0\n      ),\n    }))\n    .sort((a, z) => z.percentage - a.percentage);\n\n  function projectWithPercentage(project: Project, percentage: number) {\n    return (\n      <ProjectWithPercentage key={project.slug}>\n        <ProjectBadge project={project} avatarSize={16} />\n        {formatPercentage(percentage / 100)}\n      </ProjectWithPercentage>\n    );\n  }\n\n  return (\n    <Panel>\n      <PanelBody withPadding>\n        <TitleWrapper>\n          <HeaderTitle>{t('Transaction Breakdown')}</HeaderTitle>\n          <QuestionTooltip\n            title={tct(\n              'Sampling rules defined here can also affect other projects. [learnMore: Learn more]',\n              {\n                learnMore: (\n                  <ExternalLink\n                    href={`${SERVER_SIDE_SAMPLING_DOC_LINK}#traces--propagation-of-sampling-decisions`}\n                  />\n                ),\n              }\n            )}\n            size=\"sm\"\n            isHoverable\n          />\n        </TitleWrapper>\n\n        {fetching ? (\n          <Fragment>\n            <Placeholder height=\"16px\" bottomGutter={1.5} />\n            <Placeholder height=\"21px\" width=\"250px\" />\n          </Fragment>\n        ) : (\n          <Fragment>\n            <ColorBar\n              colorStops={projectsWithPercentages.map(({project, percentage}, index) => ({\n                color: theme.charts.getColorPalette(projectsWithPercentages.length)[\n                  index\n                ],\n                percent: percentage,\n                renderBarStatus: (barStatus, key) => (\n                  <Tooltip\n                    title={projectWithPercentage(project, percentage)}\n                    skipWrapper\n                    isHoverable\n                    key={key}\n                  >\n                    {barStatus}\n                  </Tooltip>\n                ),\n              }))}\n            />\n            {projectsWithPercentages.length ? (\n              <Projects>\n                {projectsWithPercentages.map(({project, percentage}) =>\n                  projectWithPercentage(project, percentage)\n                )}\n              </Projects>\n            ) : (\n              <EmptyMessage>\n                {t(\n                  'There were no traces initiated from this project in the last 30 days.'\n                )}\n              </EmptyMessage>\n            )}\n          </Fragment>\n        )}\n      </PanelBody>\n    </Panel>\n  );\n}\n\nconst TitleWrapper = styled('div')`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  margin-bottom: ${space(1.5)};\n`;\n\nconst Projects = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${space(1.5)};\n  justify-content: flex-start;\n  align-items: center;\n  margin-top: ${space(1.5)};\n`;\n\nconst ProjectWithPercentage = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(0.5)};\n  color: ${p => p.theme.subText};\n`;\n\nconst EmptyMessage = styled('div')`\n  display: flex;\n  align-items: center;\n  min-height: 25px;\n  color: ${p => p.theme.subText};\n`;\n","import {useEffect} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\nimport {SERVER_SIDE_SAMPLING_DOC_LINK} from './utils';\n\ntype Props = {\n  isProjectIncompatible: boolean;\n  organization: Organization;\n  projectId: Project['id'];\n};\n\nexport function SamplingProjectIncompatibleAlert({\n  isProjectIncompatible,\n  organization,\n  projectId,\n}: Props) {\n  useEffect(() => {\n    if (isProjectIncompatible) {\n      trackAdvancedAnalyticsEvent('sampling.sdk.incompatible.alert', {\n        organization,\n        project_id: projectId,\n      });\n    }\n  }, [isProjectIncompatible, organization, projectId]);\n\n  if (!isProjectIncompatible) {\n    return null;\n  }\n\n  return (\n    <Alert\n      data-test-id=\"incompatible-project-alert\"\n      type=\"warning\"\n      showIcon\n      trailingItems={\n        <Button\n          href={`${SERVER_SIDE_SAMPLING_DOC_LINK}getting-started/#current-limitations`}\n          priority=\"link\"\n          borderless\n          external\n        >\n          {t('Learn More')}\n        </Button>\n      }\n    >\n      {t('Your project is currently incompatible with Server-Side Sampling.')}\n    </Alert>\n  );\n}\n","import styled from '@emotion/styled';\n\nimport onboardingServerSideSampling from 'sentry-images/spot/onboarding-server-side-sampling.svg';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport OnboardingPanel from 'sentry/components/onboardingPanel';\nimport {t} from 'sentry/locale';\n\nimport {SERVER_SIDE_SAMPLING_DOC_LINK} from './utils';\n\ntype Props = {\n  hasAccess: boolean;\n  isProjectIncompatible: boolean;\n  onGetStarted: () => void;\n  onReadDocs: () => void;\n};\n\nexport function SamplingPromo({\n  onGetStarted,\n  onReadDocs,\n  hasAccess,\n  isProjectIncompatible,\n}: Props) {\n  return (\n    <OnboardingPanel image={<img src={onboardingServerSideSampling} />}>\n      <h3>{t('Sample for relevancy')}</h3>\n      <Paragraph>\n        {t(\n          'Create rules to sample transactions under specific conditions, keeping what you need and dropping what you don’t.'\n        )}\n      </Paragraph>\n      <ButtonList gap={1}>\n        <Button\n          priority=\"primary\"\n          onClick={onGetStarted}\n          disabled={!hasAccess || isProjectIncompatible}\n          title={hasAccess ? undefined : t('You do not have permission to set up rules')}\n        >\n          {t('Start Setup')}\n        </Button>\n        <Button href={SERVER_SIDE_SAMPLING_DOC_LINK} onClick={onReadDocs} external>\n          {t('Read Docs')}\n        </Button>\n      </ButtonList>\n    </OnboardingPanel>\n  );\n}\n\nconst ButtonList = styled(ButtonBar)`\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n`;\n\nconst Paragraph = styled('p')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n","import {useEffect} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {Organization, Project, SeriesApi} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\nimport {RecommendedStepsModalProps} from './modals/recommendedStepsModal';\nimport {getClientSampleRates, SERVER_SIDE_SAMPLING_DOC_LINK} from './utils';\n\ntype Props = Pick<RecommendedStepsModalProps, 'onReadDocs'> & {\n  organization: Organization;\n  projectId: Project['id'];\n  projectStats?: SeriesApi;\n};\n\nexport function SamplingSDKClientRateChangeAlert({\n  projectStats,\n  onReadDocs,\n  organization,\n  projectId,\n}: Props) {\n  const {diff: clientSamplingDiff} = getClientSampleRates(projectStats);\n\n  const recommendChangingClientSdk =\n    defined(clientSamplingDiff) && clientSamplingDiff >= 50;\n\n  useEffect(() => {\n    if (!recommendChangingClientSdk) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('sampling.sdk.client.rate.change.alert', {\n      organization,\n      project_id: projectId,\n    });\n  }, [recommendChangingClientSdk, organization, projectId]);\n\n  if (!recommendChangingClientSdk) {\n    return null;\n  }\n\n  return (\n    <Alert\n      type=\"info\"\n      showIcon\n      trailingItems={\n        <Button\n          href={`${SERVER_SIDE_SAMPLING_DOC_LINK}getting-started/#4-increase-your-sdk-transaction-sample-rate`}\n          onClick={onReadDocs}\n          priority=\"link\"\n          borderless\n          external\n        >\n          {t('Learn More')}\n        </Button>\n      }\n    >\n      {t(\n        'To allow more metrics to be processed, we suggest changing your client(SDK) sample rate.'\n      )}\n    </Alert>\n  );\n}\n","import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {openModal} from 'sentry/actionCreators/modal';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {RecommendedSdkUpgrade} from 'sentry/types/sampling';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\nimport {\n  RecommendedStepsModal,\n  RecommendedStepsModalProps,\n} from './modals/recommendedStepsModal';\n\ntype Props = Pick<RecommendedStepsModalProps, 'projectId' | 'onReadDocs'> & {\n  organization: Organization;\n  recommendedSdkUpgrades: RecommendedSdkUpgrade[];\n};\n\nexport function SamplingSDKUpgradesAlert({\n  organization,\n  projectId,\n  recommendedSdkUpgrades,\n  onReadDocs,\n}: Props) {\n  useEffect(() => {\n    if (recommendedSdkUpgrades.length > 0) {\n      trackAdvancedAnalyticsEvent('sampling.sdk.updgrades.alert', {\n        organization,\n        project_id: projectId,\n      });\n    }\n  }, [recommendedSdkUpgrades.length, organization, projectId]);\n\n  function handleOpenRecommendedSteps() {\n    openModal(modalProps => (\n      <RecommendedStepsModal\n        {...modalProps}\n        onReadDocs={onReadDocs}\n        organization={organization}\n        projectId={projectId}\n        recommendedSdkUpgrades={recommendedSdkUpgrades}\n      />\n    ));\n  }\n\n  if (recommendedSdkUpgrades.length === 0) {\n    return null;\n  }\n\n  return (\n    <Alert\n      data-test-id=\"recommended-sdk-upgrades-alert\"\n      type=\"info\"\n      showIcon\n      trailingItems={\n        <Button onClick={handleOpenRecommendedSteps} priority=\"link\" borderless>\n          {t('Learn More')}\n        </Button>\n      }\n    >\n      {t(\n        'To activate server-side sampling rules, it’s a requirement to update the following project SDK(s):'\n      )}\n      <Projects>\n        {recommendedSdkUpgrades.map(recommendedSdkUpgrade => (\n          <ProjectBadge\n            key={recommendedSdkUpgrade.project.id}\n            project={recommendedSdkUpgrade.project}\n            avatarSize={16}\n          />\n        ))}\n      </Projects>\n    </Alert>\n  );\n}\n\nconst Projects = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${space(1.5)};\n  justify-content: flex-start;\n  margin-top: ${space(1)};\n`;\n","import {Fragment, useEffect, useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {\n  fetchSamplingDistribution,\n  fetchSamplingSdkVersions,\n} from 'sentry/actionCreators/serverSideSampling';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelFooter, PanelHeader} from 'sentry/components/panels';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {IconAdd} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport ProjectStore from 'sentry/stores/projectsStore';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport {\n  SamplingConditionOperator,\n  SamplingRule,\n  SamplingRuleOperator,\n  SamplingRuleType,\n  UniformModalsSubmit,\n} from 'sentry/types/sampling';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePrevious from 'sentry/utils/usePrevious';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/organization/permissionAlert';\n\nimport {SpecificConditionsModal} from './modals/specificConditionsModal';\nimport {responsiveModal} from './modals/styles';\nimport {UniformRateModal} from './modals/uniformRateModal';\nimport useProjectStats from './utils/useProjectStats';\nimport {useRecommendedSdkUpgrades} from './utils/useRecommendedSdkUpgrades';\nimport {DraggableRuleList, DraggableRuleListUpdateItemsProps} from './draggableRuleList';\nimport {\n  ActiveColumn,\n  Column,\n  ConditionColumn,\n  GrabColumn,\n  OperatorColumn,\n  RateColumn,\n  Rule,\n} from './rule';\nimport {SamplingBreakdown} from './samplingBreakdown';\nimport {SamplingProjectIncompatibleAlert} from './samplingProjectIncompatibleAlert';\nimport {SamplingPromo} from './samplingPromo';\nimport {SamplingSDKClientRateChangeAlert} from './samplingSDKClientRateChangeAlert';\nimport {SamplingSDKUpgradesAlert} from './samplingSDKUpgradesAlert';\nimport {isUniformRule, SERVER_SIDE_SAMPLING_DOC_LINK} from './utils';\n\ntype Props = {\n  project: Project;\n};\n\nexport function ServerSideSampling({project}: Props) {\n  const organization = useOrganization();\n  const api = useApi();\n\n  const hasAccess = organization.access.includes('project:write');\n  const currentRules = project.dynamicSampling?.rules;\n  const previousRules = usePrevious(currentRules);\n\n  const [rules, setRules] = useState<SamplingRule[]>(currentRules ?? []);\n\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('sampling.settings.view', {\n      organization,\n      project_id: project.id,\n    });\n  }, [project.id, organization]);\n\n  useEffect(() => {\n    if (!isEqual(previousRules, currentRules)) {\n      setRules(currentRules ?? []);\n    }\n  }, [currentRules, previousRules]);\n\n  useEffect(() => {\n    if (!hasAccess) {\n      return;\n    }\n\n    async function fetchRecommendedSdkUpgrades() {\n      await fetchSamplingDistribution({\n        orgSlug: organization.slug,\n        projSlug: project.slug,\n        api,\n      });\n\n      await fetchSamplingSdkVersions({\n        orgSlug: organization.slug,\n        api,\n        projectID: project.id,\n      });\n    }\n\n    fetchRecommendedSdkUpgrades();\n  }, [api, organization.slug, project.slug, project.id, hasAccess]);\n\n  const {projectStats} = useProjectStats({\n    orgSlug: organization.slug,\n    projectId: project?.id,\n    interval: '1h',\n    statsPeriod: '48h',\n    groupBy: 'outcome',\n  });\n\n  const {recommendedSdkUpgrades, isProjectIncompatible} = useRecommendedSdkUpgrades({\n    orgSlug: organization.slug,\n    projectId: project.id,\n  });\n\n  async function handleActivateToggle(rule: SamplingRule) {\n    if (isProjectIncompatible) {\n      addErrorMessage(\n        t('Your project is currently incompatible with Server-Side Sampling.')\n      );\n      return;\n    }\n\n    const newRules = rules.map(r => {\n      if (r.id === rule.id) {\n        return {\n          ...r,\n          id: 0,\n          active: !r.active,\n        };\n      }\n      return r;\n    });\n\n    addLoadingMessage();\n    try {\n      const result = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/`,\n        {\n          method: 'PUT',\n          data: {dynamicSampling: {rules: newRules}},\n        }\n      );\n      ProjectStore.onUpdateSuccess(result);\n      addSuccessMessage(t('Successfully updated the sampling rule'));\n    } catch (error) {\n      const message = t('Unable to update the sampling rule');\n      handleXhrErrorResponse(message)(error);\n      addErrorMessage(message);\n    }\n\n    if (isUniformRule(rule)) {\n      trackAdvancedAnalyticsEvent(\n        rule.active\n          ? 'sampling.settings.rule.uniform_deactivate'\n          : 'sampling.settings.rule.uniform_activate',\n        {\n          organization,\n          project_id: project.id,\n          sampling_rate: rule.sampleRate,\n        }\n      );\n    } else {\n      const analyticsConditions = rule.condition.inner.map(condition => condition.name);\n      const analyticsConditionsStringified = analyticsConditions.sort().join(', ');\n\n      trackAdvancedAnalyticsEvent(\n        rule.active\n          ? 'sampling.settings.rule.specific_deactivate'\n          : 'sampling.settings.rule.specific_activate',\n        {\n          organization,\n          project_id: project.id,\n          sampling_rate: rule.sampleRate,\n          conditions: analyticsConditions,\n          conditions_stringified: analyticsConditionsStringified,\n        }\n      );\n    }\n  }\n\n  function handleGetStarted() {\n    trackAdvancedAnalyticsEvent('sampling.settings.view_get_started', {\n      organization,\n      project_id: project.id,\n    });\n\n    openModal(\n      modalProps => (\n        <UniformRateModal\n          {...modalProps}\n          organization={organization}\n          project={project}\n          projectStats={projectStats}\n          rules={rules}\n          onSubmit={saveUniformRule}\n          onReadDocs={handleReadDocs}\n        />\n      ),\n      {\n        modalCss: responsiveModal,\n      }\n    );\n  }\n\n  async function handleSortRules({\n    overIndex,\n    reorderedItems: ruleIds,\n  }: DraggableRuleListUpdateItemsProps) {\n    if (!rules[overIndex].condition.inner.length) {\n      addErrorMessage(t('Specific rules cannot be below uniform rules'));\n      return;\n    }\n\n    const sortedRules = ruleIds\n      .map(ruleId => rules.find(rule => String(rule.id) === ruleId))\n      .filter(rule => !!rule) as SamplingRule[];\n\n    setRules(sortedRules);\n\n    try {\n      const result = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/`,\n        {\n          method: 'PUT',\n          data: {dynamicSampling: {rules: sortedRules}},\n        }\n      );\n      ProjectStore.onUpdateSuccess(result);\n      addSuccessMessage(t('Successfully sorted sampling rules'));\n    } catch (error) {\n      setRules(previousRules ?? []);\n      const message = t('Unable to sort sampling rules');\n      handleXhrErrorResponse(message)(error);\n      addErrorMessage(message);\n    }\n  }\n\n  function handleAddRule() {\n    openModal(modalProps => (\n      <SpecificConditionsModal\n        {...modalProps}\n        organization={organization}\n        project={project}\n        rules={rules}\n      />\n    ));\n  }\n\n  function handleEditRule(rule: SamplingRule) {\n    if (isUniformRule(rule)) {\n      openModal(\n        modalProps => (\n          <UniformRateModal\n            {...modalProps}\n            organization={organization}\n            project={project}\n            projectStats={projectStats}\n            uniformRule={rule}\n            rules={rules}\n            onSubmit={saveUniformRule}\n            onReadDocs={handleReadDocs}\n          />\n        ),\n        {\n          modalCss: responsiveModal,\n        }\n      );\n      return;\n    }\n\n    openModal(modalProps => (\n      <SpecificConditionsModal\n        {...modalProps}\n        organization={organization}\n        project={project}\n        rule={rule}\n        rules={rules}\n      />\n    ));\n  }\n\n  async function handleDeleteRule(rule: SamplingRule) {\n    const conditions = rule.condition.inner.map(({name}) => name);\n\n    trackAdvancedAnalyticsEvent('sampling.settings.rule.specific_delete', {\n      organization,\n      project_id: project.id,\n      sampling_rate: rule.sampleRate,\n      conditions,\n      conditions_stringified: conditions.sort().join(', '),\n    });\n\n    try {\n      const result = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/`,\n        {\n          method: 'PUT',\n          data: {dynamicSampling: {rules: rules.filter(({id}) => id !== rule.id)}},\n        }\n      );\n      ProjectStore.onUpdateSuccess(result);\n      addSuccessMessage(t('Successfully deleted sampling rule'));\n    } catch (error) {\n      const message = t('Unable to delete sampling rule');\n      handleXhrErrorResponse(message)(error);\n      addErrorMessage(message);\n    }\n  }\n\n  function handleReadDocs() {\n    trackAdvancedAnalyticsEvent('sampling.settings.view_read_docs', {\n      organization,\n      project_id: project.id,\n    });\n  }\n\n  async function saveUniformRule({\n    sampleRate,\n    uniformRateModalOrigin,\n    onError,\n    onSuccess,\n    rule,\n  }: Parameters<UniformModalsSubmit>[0]) {\n    if (isProjectIncompatible) {\n      addErrorMessage(\n        t('Your project is currently incompatible with Server-Side Sampling.')\n      );\n      return;\n    }\n\n    const newRule: SamplingRule = {\n      // All new/updated rules must have id equal to 0\n      id: 0,\n      active: rule ? rule.active : false,\n      type: SamplingRuleType.TRACE,\n      condition: {\n        op: SamplingConditionOperator.AND,\n        inner: [],\n      },\n      sampleRate,\n    };\n\n    trackAdvancedAnalyticsEvent(\n      uniformRateModalOrigin\n        ? 'sampling.settings.modal.uniform.rate_done'\n        : 'sampling.settings.modal.recommended.next.steps_done',\n      {\n        organization,\n        project_id: project.id,\n      }\n    );\n\n    trackAdvancedAnalyticsEvent(\n      rule\n        ? 'sampling.settings.rule.uniform_update'\n        : 'sampling.settings.rule.uniform_create',\n      {\n        organization,\n        project_id: project.id,\n        sampling_rate: newRule.sampleRate,\n        old_sampling_rate: rule ? rule.sampleRate : null,\n      }\n    );\n\n    trackAdvancedAnalyticsEvent('sampling.settings.rule.uniform_save', {\n      organization,\n      project_id: project.id,\n      sampling_rate: newRule.sampleRate,\n      old_sampling_rate: rule ? rule.sampleRate : null,\n    });\n\n    const newRules = rule\n      ? rules.map(existingRule => (existingRule.id === rule.id ? newRule : existingRule))\n      : [...rules, newRule];\n\n    try {\n      const response = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/`,\n        {method: 'PUT', data: {dynamicSampling: {rules: newRules}}}\n      );\n      ProjectStore.onUpdateSuccess(response);\n      addSuccessMessage(\n        rule\n          ? t('Successfully edited sampling rule')\n          : t('Successfully added sampling rule')\n      );\n      onSuccess?.(response.dynamicSampling?.rules ?? []);\n    } catch (error) {\n      addErrorMessage(\n        typeof error === 'string'\n          ? error\n          : error.message || t('Failed to save sampling rule')\n      );\n      onError?.();\n    }\n  }\n\n  // Rules without a condition (Else case) always have to be 'pinned' to the bottom of the list\n  // and cannot be sorted\n  const items = rules.map(rule => ({\n    ...rule,\n    id: String(rule.id),\n  }));\n\n  const uniformRule = rules.find(isUniformRule);\n\n  return (\n    <SentryDocumentTitle title={t('Server-Side Sampling')}>\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              {t('Server-Side Sampling')} <FeatureBadge type=\"beta\" />\n            </Fragment>\n          }\n        />\n        <TextBlock>\n          {tct(\n            'Enhance the Performance monitoring experience by targeting which transactions are most valuable to your organization. To learn more about our beta program, [faqLink: visit our FAQ], for more general information, [docsLink: read our docs].',\n            {\n              faqLink: (\n                <ExternalLink href=\"https://help.sentry.io/account/account-settings/dynamic-sampling/\" />\n              ),\n              docsLink: <ExternalLink href={SERVER_SIDE_SAMPLING_DOC_LINK} />,\n            }\n          )}\n        </TextBlock>\n        <PermissionAlert\n          access={['project:write']}\n          message={t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        />\n\n        <SamplingProjectIncompatibleAlert\n          organization={organization}\n          projectId={project.id}\n          isProjectIncompatible={isProjectIncompatible}\n        />\n\n        {!!rules.length && (\n          <SamplingSDKUpgradesAlert\n            organization={organization}\n            projectId={project.id}\n            recommendedSdkUpgrades={recommendedSdkUpgrades}\n            onReadDocs={handleReadDocs}\n          />\n        )}\n\n        {!!rules.length && !recommendedSdkUpgrades.length && (\n          <SamplingSDKClientRateChangeAlert\n            onReadDocs={handleReadDocs}\n            projectStats={projectStats}\n            organization={organization}\n            projectId={project.id}\n          />\n        )}\n\n        {hasAccess && <SamplingBreakdown orgSlug={organization.slug} />}\n        {!rules.length ? (\n          <SamplingPromo\n            onGetStarted={handleGetStarted}\n            onReadDocs={handleReadDocs}\n            hasAccess={hasAccess}\n            isProjectIncompatible={isProjectIncompatible}\n          />\n        ) : (\n          <RulesPanel>\n            <RulesPanelHeader lightText>\n              <RulesPanelLayout>\n                <GrabColumn />\n                <OperatorColumn>{t('Operator')}</OperatorColumn>\n                <ConditionColumn>{t('Condition')}</ConditionColumn>\n                <RateColumn>{t('Rate')}</RateColumn>\n                <ActiveColumn>{t('Active')}</ActiveColumn>\n                <Column />\n              </RulesPanelLayout>\n            </RulesPanelHeader>\n            <DraggableRuleList\n              disabled={!hasAccess}\n              items={items}\n              onUpdateItems={handleSortRules}\n              wrapperStyle={({isDragging, isSorting, index}) => {\n                if (isDragging) {\n                  return {\n                    cursor: 'grabbing',\n                  };\n                }\n                if (isSorting) {\n                  return {};\n                }\n                return {\n                  transform: 'none',\n                  transformOrigin: '0',\n                  '--box-shadow': 'none',\n                  '--box-shadow-picked-up': 'none',\n                  overflow: 'visible',\n                  position: 'relative',\n                  zIndex: rules.length - index,\n                  cursor: 'default',\n                };\n              }}\n              renderItem={({value, listeners, attributes, dragging, sorting}) => {\n                const itemsRuleIndex = items.findIndex(item => item.id === value);\n\n                if (itemsRuleIndex === -1) {\n                  return null;\n                }\n\n                const itemsRule = items[itemsRuleIndex];\n\n                const currentRule = {\n                  active: itemsRule.active,\n                  condition: itemsRule.condition,\n                  sampleRate: itemsRule.sampleRate,\n                  type: itemsRule.type,\n                  id: Number(itemsRule.id),\n                };\n\n                return (\n                  <RulesPanelLayout isContent>\n                    <Rule\n                      operator={\n                        itemsRule.id === items[0].id\n                          ? SamplingRuleOperator.IF\n                          : isUniformRule(currentRule)\n                          ? SamplingRuleOperator.ELSE\n                          : SamplingRuleOperator.ELSE_IF\n                      }\n                      hideGrabButton={items.length === 1}\n                      rule={currentRule}\n                      onEditRule={() => handleEditRule(currentRule)}\n                      onDeleteRule={() => handleDeleteRule(currentRule)}\n                      onActivate={() => handleActivateToggle(currentRule)}\n                      noPermission={!hasAccess}\n                      upgradeSdkForProjects={recommendedSdkUpgrades.map(\n                        recommendedSdkUpgrade => recommendedSdkUpgrade.project.slug\n                      )}\n                      listeners={listeners}\n                      grabAttributes={attributes}\n                      dragging={dragging}\n                      sorting={sorting}\n                    />\n                  </RulesPanelLayout>\n                );\n              }}\n            />\n            <RulesPanelFooter>\n              <ButtonBar gap={1}>\n                <Button\n                  href={SERVER_SIDE_SAMPLING_DOC_LINK}\n                  onClick={handleReadDocs}\n                  external\n                >\n                  {t('Read Docs')}\n                </Button>\n                <GuideAnchor\n                  target=\"add_conditional_rule\"\n                  disabled={!uniformRule?.active || !hasAccess || rules.length !== 1}\n                >\n                  <AddRuleButton\n                    disabled={!hasAccess}\n                    title={\n                      !hasAccess\n                        ? t(\"You don't have permission to add a rule\")\n                        : undefined\n                    }\n                    priority=\"primary\"\n                    onClick={handleAddRule}\n                    icon={<IconAdd isCircled />}\n                  >\n                    {t('Add Rule')}\n                  </AddRuleButton>\n                </GuideAnchor>\n              </ButtonBar>\n            </RulesPanelFooter>\n          </RulesPanel>\n        )}\n      </Fragment>\n    </SentryDocumentTitle>\n  );\n}\n\nconst RulesPanel = styled(Panel)``;\n\nconst RulesPanelHeader = styled(PanelHeader)`\n  padding: ${space(0.5)} 0;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst RulesPanelLayout = styled('div')<{isContent?: boolean}>`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr 0.5fr 74px;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 48px 97px 1fr 0.5fr 77px 74px;\n  }\n\n  ${p =>\n    p.isContent &&\n    css`\n      > * {\n        /* match the height of the ellipsis button */\n        line-height: 34px;\n        border-bottom: 1px solid ${p.theme.border};\n      }\n    `}\n`;\n\nconst RulesPanelFooter = styled(PanelFooter)`\n  border-top: none;\n  padding: ${space(1.5)} ${space(2)};\n  grid-column: 1 / -1;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst AddRuleButton = styled(Button)`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    width: 100%;\n  }\n`;\n","import {SeriesApi} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport {quantityField} from '.';\n\n// Returns true if the first X time buckets are 0 in the series api response\nexport function hasFirstBucketsEmpty(\n  stats: SeriesApi | undefined,\n  numberOfLeadingEmptyBuckets = 3\n) {\n  if (!defined(stats)) {\n    return false;\n  }\n\n  const numberOfEventsInTheFirstBuckets = stats.groups.reduce((acc, group) => {\n    let groupAcc = 0;\n    const series = group.series[quantityField];\n\n    for (let i = 0; i < numberOfLeadingEmptyBuckets; i++) {\n      groupAcc += series[i];\n    }\n\n    return acc + groupAcc;\n  }, 0);\n\n  return numberOfEventsInTheFirstBuckets === 0;\n}\n","import round from 'lodash/round';\n\nimport {t} from 'sentry/locale';\nimport {SeriesApi} from 'sentry/types';\nimport {SamplingInnerName, SamplingRule, SamplingRuleType} from 'sentry/types/sampling';\nimport {defined} from 'sentry/utils';\n\nimport {projectStatsToSampleRates} from './projectStatsToSampleRates';\n\nexport const SERVER_SIDE_SAMPLING_DOC_LINK =\n  'https://docs.sentry.io/product/data-management-settings/server-side-sampling/';\n\nexport function getInnerNameLabel(name: SamplingInnerName) {\n  switch (name) {\n    case SamplingInnerName.TRACE_ENVIRONMENT:\n      return t('Environment');\n    case SamplingInnerName.TRACE_RELEASE:\n      return t('Release');\n    default:\n      return '';\n  }\n}\n\nexport const quantityField = 'sum(quantity)';\n\nexport function isUniformRule(rule?: SamplingRule) {\n  if (!rule) {\n    return false;\n  }\n\n  return rule.type === SamplingRuleType.TRACE && rule.condition.inner.length === 0;\n}\n\nexport function isValidSampleRate(sampleRate: number | undefined) {\n  if (!defined(sampleRate)) {\n    return false;\n  }\n\n  return !isNaN(sampleRate) && sampleRate <= 1 && sampleRate >= 0;\n}\n\nexport function rateToPercentage(rate: number | undefined, decimalPlaces: number = 2) {\n  if (!defined(rate)) {\n    return rate;\n  }\n\n  return round(rate * 100, decimalPlaces);\n}\n\nexport function percentageToRate(rate: number | undefined, decimalPlaces: number = 4) {\n  if (!defined(rate)) {\n    return rate;\n  }\n\n  return round(rate / 100, decimalPlaces);\n}\n\nexport function getClientSampleRates(\n  projectStats: SeriesApi | undefined,\n  specifiedClientRate?: number\n) {\n  const {trueSampleRate, maxSafeSampleRate} = projectStatsToSampleRates(projectStats);\n\n  const current =\n    defined(specifiedClientRate) && !isNaN(specifiedClientRate)\n      ? specifiedClientRate\n      : defined(trueSampleRate) && !isNaN(trueSampleRate)\n      ? trueSampleRate\n      : undefined;\n\n  const recommended =\n    defined(maxSafeSampleRate) && !isNaN(maxSafeSampleRate)\n      ? maxSafeSampleRate\n      : undefined;\n\n  let diff: number | undefined = undefined;\n\n  if (defined(recommended) && defined(current)) {\n    if (recommended >= current) {\n      diff = ((recommended - current) / current) * 100;\n    } else {\n      diff = ((current - recommended) / recommended) * 100;\n    }\n  }\n\n  return {\n    current,\n    recommended,\n    diff,\n  };\n}\n","import moment from 'moment';\n\nimport {t} from 'sentry/locale';\nimport {SeriesApi} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport commonTheme from 'sentry/utils/theme';\nimport {Outcome} from 'sentry/views/organizationStats/types';\n\nimport {quantityField} from '.';\n\nexport function projectStatsToPredictedSeries(\n  projectStats?: SeriesApi,\n  client?: number,\n  server?: number,\n  specifiedClientRate?: number\n): Series[] {\n  if (!projectStats || !defined(client) || !defined(server)) {\n    return [];\n  }\n\n  const clientRate = Math.max(Math.min(client, 1), 0);\n  let serverRate = Math.max(Math.min(server, 1), 0);\n\n  const commonSeriesConfig = {\n    barMinHeight: 1,\n    type: 'bar',\n    stack: 'predictedUsage',\n  };\n\n  const seriesData: Record<\n    'indexedAndProcessed' | 'processed' | 'discarded',\n    Series['data']\n  > = {\n    indexedAndProcessed: [],\n    processed: [],\n    discarded: [],\n  };\n\n  (\n    projectStats.intervals.map((interval, index) => {\n      const result = {\n        indexedAndProcessed: 0,\n        processed: 0,\n        discarded: 0,\n      };\n      projectStats.groups.forEach(group => {\n        switch (group.by.outcome) {\n          case Outcome.ACCEPTED:\n            result.indexedAndProcessed += group.series[quantityField][index];\n            break;\n          case Outcome.CLIENT_DISCARD:\n            result.discarded += group.series[quantityField][index];\n            break;\n          case Outcome.FILTERED:\n            if (String(group.by.reason).startsWith('Sampled')) {\n              result.processed += group.series[quantityField][index];\n            }\n            break;\n          default:\n          // We do not take invalid, rate_limited and other filtered into account\n        }\n      });\n      return {\n        interval: moment(interval).valueOf(),\n        ...result,\n      };\n    }) as Array<\n      Record<'indexedAndProcessed' | 'processed' | 'discarded' | 'interval', number>\n    >\n  ).forEach((bucket, index) => {\n    const {indexedAndProcessed, processed, discarded, interval} = bucket;\n\n    if (clientRate < serverRate!) {\n      serverRate = clientRate;\n    }\n\n    let total = indexedAndProcessed + processed + discarded;\n\n    if (defined(specifiedClientRate)) {\n      // We assume that the clientDiscard is 0 and\n      // calculate the discard client (SDK) bucket according to the specified client rate\n      const newClientDiscard = total / specifiedClientRate - total;\n      total += newClientDiscard;\n    }\n\n    const newSentClient = total * clientRate;\n    const newDiscarded = total - newSentClient;\n    const newIndexedAndProcessed =\n      clientRate === 0 ? 0 : newSentClient * (serverRate! / clientRate);\n    const newProcessed = newSentClient - newIndexedAndProcessed;\n\n    seriesData.indexedAndProcessed[index] = {\n      name: interval,\n      value: Math.round(newIndexedAndProcessed),\n    };\n    seriesData.processed[index] = {\n      name: interval,\n      value: Math.round(newProcessed),\n    };\n    seriesData.discarded[index] = {\n      name: interval,\n      value: Math.round(newDiscarded),\n    };\n  });\n\n  return [\n    {\n      seriesName: t('Indexed and Processed'),\n      color: commonTheme.green300,\n      ...commonSeriesConfig,\n      data: seriesData.indexedAndProcessed,\n    },\n    {\n      seriesName: t('Processed'),\n      color: commonTheme.yellow300,\n      data: seriesData.processed,\n      ...commonSeriesConfig,\n    },\n    {\n      seriesName: t('Discarded'),\n      color: commonTheme.red300,\n      data: seriesData.discarded,\n      ...commonSeriesConfig,\n    },\n  ];\n}\n","import round from 'lodash/round';\n\nimport {SeriesApi} from 'sentry/types';\nimport {findClosestNumber} from 'sentry/utils/findClosestNumber';\nimport {Outcome} from 'sentry/views/organizationStats/types';\n\nimport {quantityField} from '.';\n\nconst MAX_PER_HOUR = 300 * 60 * 60;\nconst COMMON_SAMPLE_RATES = [\n  0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1,\n  0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9,\n  0.95, 1,\n].sort((a, z) => a - z);\n\nexport function projectStatsToSampleRates(stats: SeriesApi | undefined): {\n  hoursOverLimit?: number;\n  maxSafeSampleRate?: number;\n  trueSampleRate?: number;\n} {\n  if (!stats) {\n    return {\n      trueSampleRate: undefined,\n      maxSafeSampleRate: undefined,\n      hoursOverLimit: undefined,\n    };\n  }\n\n  const {groups, intervals} = stats;\n  const hours: number[] = [];\n  const trueSampleRates: number[] = [];\n  const safeSampleRates: number[] = [];\n  let hoursOverLimit = 0;\n\n  // We do not take filtered and invalid into account\n  const accepted = groups.find(g => g.by.outcome === Outcome.ACCEPTED)?.series[\n    quantityField\n  ];\n  const clientDiscard = groups.find(g => g.by.outcome === Outcome.CLIENT_DISCARD)?.series[\n    quantityField\n  ];\n  const rateLimited = groups.find(g => g.by.outcome === Outcome.RATE_LIMITED)?.series[\n    quantityField\n  ];\n\n  intervals.forEach((_interval, index) => {\n    const hourAccepted = accepted?.[index] ?? 0;\n    const hourClientDiscard = clientDiscard?.[index] ?? 0;\n    const hourRateLimited = rateLimited?.[index] ?? 0;\n\n    const hourRejected = hourClientDiscard + hourRateLimited;\n    const hourTotal = hourAccepted + hourRejected;\n    const hourTotalCapped = Math.min(hourTotal, MAX_PER_HOUR);\n    const trueSampleRate = hourTotal === 0 ? 1 : 1 - hourRejected / hourTotal;\n    const safeSampleRate = hourTotal === 0 ? 1 : hourTotalCapped / hourTotal;\n\n    hours.push(hourTotal);\n    trueSampleRates.push(trueSampleRate);\n    safeSampleRates.push(safeSampleRate);\n    if (hourTotal > MAX_PER_HOUR) {\n      hoursOverLimit += 1;\n    }\n  });\n\n  hours.sort((a, z) => a - z);\n  trueSampleRates.sort((a, z) => a - z);\n  safeSampleRates.sort((a, z) => a - z);\n\n  let trueSampleRate = trueSampleRates[Math.floor(trueSampleRates.length / 2)];\n  if (trueSampleRate > COMMON_SAMPLE_RATES[0]) {\n    trueSampleRate = findClosestNumber(trueSampleRate, COMMON_SAMPLE_RATES);\n  }\n\n  let maxSafeSampleRate = safeSampleRates[0];\n  if (maxSafeSampleRate > COMMON_SAMPLE_RATES[0]) {\n    maxSafeSampleRate = findClosestNumber(maxSafeSampleRate, COMMON_SAMPLE_RATES);\n  }\n\n  return {\n    trueSampleRate: round(trueSampleRate, 4),\n    maxSafeSampleRate: round(maxSafeSampleRate, 4),\n    hoursOverLimit,\n  };\n}\n","import cloneDeep from 'lodash/cloneDeep';\nimport moment from 'moment';\n\nimport {t} from 'sentry/locale';\nimport {SeriesApi} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport commonTheme from 'sentry/utils/theme';\nimport {Outcome} from 'sentry/views/organizationStats/types';\n\nimport {quantityField} from '.';\n\nexport function projectStatsToSeries(\n  projectStats: SeriesApi | undefined,\n  specifiedClientRate?: number\n): Series[] {\n  if (!projectStats) {\n    return [];\n  }\n\n  const commonSeriesConfig = {\n    barMinHeight: 1,\n    type: 'bar',\n    stack: 'usage',\n  };\n\n  const emptySeries = projectStats.intervals.map(interval => ({\n    name: moment(interval).valueOf(),\n    value: 0,\n  }));\n\n  const seriesData: Record<\n    'indexedAndProcessed' | 'processed' | 'discarded',\n    Series['data']\n  > = {\n    indexedAndProcessed: cloneDeep(emptySeries),\n    processed: cloneDeep(emptySeries),\n    discarded: cloneDeep(emptySeries),\n  };\n\n  projectStats.intervals.forEach((_interval, index) => {\n    projectStats.groups.forEach(group => {\n      switch (group.by.outcome) {\n        case Outcome.ACCEPTED:\n          seriesData.indexedAndProcessed[index].value +=\n            group.series[quantityField][index];\n          break;\n        case Outcome.CLIENT_DISCARD:\n          seriesData.discarded[index].value += group.series[quantityField][index];\n          break;\n        case Outcome.FILTERED:\n          if (String(group.by.reason).startsWith('Sampled')) {\n            seriesData.processed[index].value += group.series[quantityField][index];\n          }\n          break;\n        default:\n        // We do not take invalid, rate_limited and other filtered into account\n      }\n    });\n  });\n\n  if (defined(specifiedClientRate)) {\n    // We assume that the clientDiscard is 0 and\n    // calculate the discard client (SDK) bucket according to the specified client rate\n    seriesData.discarded = seriesData.discarded.map((bucket, index) => {\n      const totalHitServer =\n        seriesData.indexedAndProcessed[index].value + seriesData.processed[index].value;\n\n      return {\n        ...bucket,\n        value: totalHitServer / specifiedClientRate - totalHitServer,\n      };\n    });\n  }\n\n  return [\n    {\n      seriesName: t('Indexed and Processed'),\n      color: commonTheme.green300,\n      ...commonSeriesConfig,\n      data: seriesData.indexedAndProcessed,\n    },\n    {\n      seriesName: t('Processed'),\n      color: commonTheme.yellow300,\n      data: seriesData.processed,\n      ...commonSeriesConfig,\n    },\n    {\n      seriesName: t('Discarded'),\n      color: commonTheme.red300,\n      data: seriesData.discarded,\n      ...commonSeriesConfig,\n    },\n  ];\n}\n","import {useEffect, useState} from 'react';\n\nimport {t} from 'sentry/locale';\nimport {SeriesApi} from 'sentry/types';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\n\nimport {projectStatsToSeries} from './projectStatsToSeries';\n\nfunction useProjectStats({\n  orgSlug,\n  projectId,\n  interval,\n  groupBy,\n  statsPeriod,\n  disable = false,\n}) {\n  const api = useApi();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | undefined>(undefined);\n  const [projectStats, setProjectStats] = useState<SeriesApi | undefined>(undefined);\n  const [refetch, setRefetch] = useState(false);\n\n  useEffect(() => {\n    async function fetchStats() {\n      try {\n        setLoading(true);\n        setError(undefined);\n        const response = await api.requestPromise(`/organizations/${orgSlug}/stats_v2/`, {\n          query: {\n            category: 'transaction',\n            field: 'sum(quantity)',\n            groupBy,\n            project: projectId,\n            interval,\n            statsPeriod,\n          },\n        });\n\n        setProjectStats(response);\n        setLoading(false);\n        setRefetch(false);\n      } catch (err) {\n        const errorMessage = t('Unable to load project stats');\n        handleXhrErrorResponse(errorMessage)(err);\n        setError(errorMessage);\n        setLoading(false);\n        setRefetch(false);\n      }\n    }\n\n    if (!disable || refetch) {\n      fetchStats();\n    }\n  }, [api, projectId, orgSlug, interval, statsPeriod, disable, groupBy, refetch]);\n\n  return {\n    loading,\n    error,\n    projectStats,\n    projectStatsSeries: projectStatsToSeries(projectStats),\n    onRefetch: () => setRefetch(true),\n  };\n}\n\nexport default useProjectStats;\n","import {ServerSideSamplingStore} from 'sentry/stores/serverSideSamplingStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport useProjects from 'sentry/utils/useProjects';\n\ntype Props = {\n  orgSlug: Organization['slug'];\n  projectId: Project['id'];\n};\n\nexport function useRecommendedSdkUpgrades({orgSlug, projectId}: Props) {\n  const {samplingSdkVersions, fetching} = useLegacyStore(ServerSideSamplingStore);\n\n  const sdksToUpdate = samplingSdkVersions.filter(\n    ({isSendingSource, isSendingSampleRate, isSupportedPlatform}) => {\n      return (!isSendingSource || !isSendingSampleRate) && isSupportedPlatform;\n    }\n  );\n\n  const incompatibleSDKs = samplingSdkVersions.filter(\n    ({isSupportedPlatform}) => !isSupportedPlatform\n  );\n\n  const {projects} = useProjects({\n    slugs: [...sdksToUpdate, ...incompatibleSDKs].map(({project}) => project),\n    orgId: orgSlug,\n  });\n\n  const recommendedSdkUpgrades = projects\n    .map(project => {\n      const sdkInfo = sdksToUpdate.find(\n        sdkToUpdate => sdkToUpdate.project === project.slug\n      );\n\n      if (!sdkInfo) {\n        return undefined;\n      }\n\n      return {\n        project,\n        latestSDKName: sdkInfo.latestSDKName,\n        latestSDKVersion: sdkInfo.latestSDKVersion,\n      };\n    })\n    .filter(defined);\n\n  const incompatibleProjects = projects.filter(project =>\n    incompatibleSDKs.find(incompatibleSDK => incompatibleSDK.project === project.slug)\n  );\n\n  const isProjectIncompatible = incompatibleProjects.some(\n    incompatibleProject => incompatibleProject.id === projectId\n  );\n\n  const affectedProjects = [\n    ...recommendedSdkUpgrades.map(({project}) => project),\n    ...incompatibleProjects,\n  ];\n\n  return {\n    recommendedSdkUpgrades,\n    incompatibleProjects,\n    affectedProjects,\n    fetching,\n    isProjectIncompatible,\n  };\n}\n","'use strict';\nvar aCallable = require('../internals/a-callable');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aCallable(resolve);\n  this.reject = aCallable(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromiseConstructor && fails(function () {\n  // eslint-disable-next-line unicorn/no-thenable -- required for testing\n  NativePromisePrototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = isCallable(onFinally);\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn('Promise').prototype['finally'];\n  if (NativePromisePrototype['finally'] !== method) {\n    defineBuiltIn(NativePromisePrototype, 'finally', method, { unsafe: true });\n  }\n}\n"],"names":["t","ServerSideSamplingStore","handleXhrErrorResponse","fetchSamplingSdkVersions","api","orgSlug","projectID","samplingDistribution","getState","startTimestamp","endTimestamp","project_breakdown","setFetching","loadSamplingSdkVersionsSuccess","Promise","resolve","projectIds","map","projectBreakdown","project_id","promise","requestPromise","query","project","start","end","then","catch","response","errorMessage","finally","fetchSamplingDistribution","projSlug","reset","loadSamplingDistributionSuccess","ActionLink","MenuItem","MenuItemActionLink","className","props","disabled","InnerActionLink","p","theme","textColor","overflowEllipsis","background","Panel","space","OnboardingPanel","image","children","Container","breakpoints","small","medium","StyledBox","IlloBox","createStore","makeSafeRefluxStore","storeConfig","state","samplingSdkVersions","fetching","trigger","data","SamplingRuleType","SamplingConditionOperator","SamplingRuleOperator","SamplingInnerOperator","SamplingInnerName","findClosestNumber","number","numbersArray","reduce","previousBest","currentNumber","Math","abs","Outcome","ColorBar","barHeight","colorStops","percent","colorStop","barStatus","color","renderBarStatus","VitalBar","gray100","fractions","f","join","BarStatus","Access","Alert","PermissionAlert","access","message","hasAccess","useState","createPortal","DndContext","DragOverlay","arrayMove","SortableContext","verticalListSortingStrategy","DraggableRuleListItem","DraggableRuleListSortableItem","isUniformRule","DraggableRuleList","items","onUpdateItems","renderItem","wrapperStyle","setState","itemIds","item","id","getIndex","indexOf","bind","activeIndex","activeId","active","over","undefined","overIndex","reorderedItems","itemId","index","Number","isDragging","isSorting","document","body","value","dragging","transform","listeners","sorting","transition","forwardRef","attributes","round","x","y","scaleX","scaleY","Boolean","boxShadowBorder","boxShadowCommon","boxShadow","Wrapper","InnerWrapper","useSortable","setNodeRef","Feature","FeatureDisabled","PanelAlert","useOrganization","ServerSideSampling","ServerSideSamplingContainer","organization","Fragment","Button","ButtonBar","List","ListItem","OutdatedVersion","SdkOutdatedVersion","SdkProjectBadge","UpdatesList","tct","trackAdvancedAnalyticsEvent","formatPercentage","TextBlock","SamplingProjectIncompatibleAlert","isValidSampleRate","SERVER_SIDE_SAMPLING_DOC_LINK","projectStatsToSampleRates","useProjectStats","useRecommendedSdkUpgrades","FooterActions","Stepper","RecommendedStepsModal","Header","Body","Footer","closeModal","recommendedSdkUpgrades","onGoBack","onReadDocs","onSubmit","clientSampleRate","serverSampleRate","uniformRule","projectId","recommendedSampleRate","onSetRules","isProjectIncompatible","slug","saving","setSaving","projectStats","interval","statsPeriod","disable","groupBy","maxSafeSampleRate","suggestedClientSampleRate","isValid","handleDone","uniformRateModalOrigin","sampleRate","rule","onSuccess","newRules","onError","handleGoBack","handleReadDocs","length","upgradableProject","latestSDKName","latestSDKVersion","UpgradeSDKfromProjects","FieldRequiredBadge","TextareaField","IconDelete","getInnerNameLabel","TagValueAutocomplete","getMatchFieldPlaceholder","getTagKey","Conditions","conditions","onDelete","onChange","condition","category","match","isAutoCompleteField","TRACE_ENVIRONMENT","TRACE_RELEASE","ConditionWrapper","Cell","LeftCell","CenterCell","RightCell","StyledTextareaField","useEffect","createFilter","partition","addErrorMessage","addSuccessMessage","CompactSelect","NumberField","Option","PanelBody","PanelHeader","IconAdd","IconSearch","ProjectStore","defined","useApi","EmptyMessage","percentageToRate","rateToPercentage","distributedTracesConditions","generateConditionCategoriesOptions","getErrorMessage","getNewCondition","conditionAlreadyAddedTooltip","SpecificConditionsModal","rules","setData","getInitialState","isSaving","setIsSaving","conditionCategories","d","errors","samplePercentage","inner","innerItem","name","Array","isArray","convertRequestErrorResponse","error","type","handleSubmit","newRule","TRACE","op","AND","existingRule","specificRules","method","dynamicSampling","onUpdateSuccess","currentRuleIndex","findIndex","newR","analyticsConditions","analyticsConditionsStringified","sort","sampling_rate","conditions_stringified","old_conditions","old_conditions_stringified","old_sampling_rate","handleAddCondition","selectedOptions","previousCategories","addedCategories","filter","includes","addedCategory","handleDeleteCondition","newConditions","splice","handleChangeCondition","field","predefinedConditionsOptions","label","optionDisabled","some","tooltip","submitDisabled","size","candidate","input","containerProps","_value","e","key","Fields","StyledCompactSelect","StyledPanelHeader","StyledPanel","TriggerLabel","Description","components","debounce","fetchTagValues","Count","SelectField","TruncatedLabel","formatCreateTagLabel","tagKey","getAriaLabel","debouncedFetchValues","inputValue","loadOptions","createdOptions","split","v","tagValue","count","firstSeen","lastSeen","trailingItems","newValue","MultiValue","multiValueProps","innerProps","_selectValue","optionsArray","option","test","trim","filterText","StyledSelectField","StyledCount","subText","Truncate","useMedia","isSmallDevice","GLOB_MATCH","EQUAL","options","ignoreCase","unexpectedErrorMessage","detailedErrorResponse","responseJSON","detail","errorResponse","responseErrors","Object","entries","sortedConditionCategories","a","b","localeCompare","innerName","newLabel","StyledNumberField","SpecifyClientRateModal","onGoNext","handleGoNext","textHighlight","TextHighlight","gray300","css","commonTheme","responsiveModal","BarChart","ChartContainer","HeaderTitle","Placeholder","formatAbbreviatedNumber","getDynamicText","UniformRateChart","series","legend","right","top","s","seriesName","left","bottom","valueFormatter","axisLabel","formatter","fixed","ChartPanel","useMemo","isEqual","ProjectBadge","ExternalLink","LoadingError","LoadingIndicator","PanelTable","QuestionTooltip","Radio","Tooltip","IconRefresh","IconWarning","ModalStore","useLegacyStore","getClientSampleRates","hasFirstBucketsEmpty","projectStatsToPredictedSeries","projectStatsToSeries","CONSERVATIVE_SAMPLE_RATE","Strategy","Step","UniformRateModal","setRules","specifiedClientRate","setSpecifiedClientRate","activeStep","setActiveStep","selectedStrategy","setSelectedStrategy","CURRENT","modalStore","onRefetch","onRefetch30d","projectStats30d","error30d","loading","loading30d","affectedProjects","groups","SET_UNIFORM_SAMPLE_RATE","clientDiscard","g","by","outcome","CLIENT_DISCARD","SET_CURRENT_CLIENT_SAMPLE_RATE","shouldUseConservativeSampleRate","renderer","RECOMMENDED_STEPS","RECOMMENDED","uniformSampleRate","recommended","recommendedClientSampling","current","currentClientSampling","currentServerSampling","isNaN","recommendedServerSampling","min","clientInput","setClientInput","serverInput","setServerInput","client","server","shouldHaveNextStep","isEdited","isServerRateHigherThanClientRate","handlePrimaryButtonClick","learnMoreLink","affectedProject","StyledPanelTable","Label","fontSizeMedium","SamplingValuesColumn","ClientColumn","ClientHelpOrWarningColumn","ServerColumn","ServerWarningColumn","RefreshRatesColumn","Projects","GuideAnchor","DropdownLink","NewBooleanField","IconDownload","IconEllipsis","IconGrabbable","tn","Rule","noPermission","onEditRule","onDeleteRule","onActivate","operator","grabAttributes","hideGrabButton","upgradeSdkForProjects","isUniform","canDelete","canActivate","canDrag","IF","ELSE_IF","conditionValue","conditionValueIndex","String","event","stopPropagation","Column","GrabColumn","OperatorColumn","ConditionColumn","RateColumn","ActiveColumn","IconGrabbableWrapper","ConditionEqualOperator","purple300","Operator","SampleRate","ActiveToggle","ConditionName","gray400","ConditionValue","ConditionSeparator","EllipisDropDownButton","useTheme","useProjects","SamplingBreakdown","projects","slugs","orgId","totalCount","acc","projectsWithPercentages","percentage","find","pb","z","projectWithPercentage","learnMore","charts","getColorPalette","TitleWrapper","ProjectWithPercentage","onboardingServerSideSampling","SamplingPromo","onGetStarted","ButtonList","Paragraph","fontSizeLarge","SamplingSDKClientRateChangeAlert","diff","clientSamplingDiff","recommendChangingClientSdk","openModal","SamplingSDKUpgradesAlert","handleOpenRecommendedSteps","modalProps","recommendedSdkUpgrade","addLoadingMessage","FeatureBadge","PanelFooter","SentryDocumentTitle","usePrevious","SettingsPageHeader","currentRules","previousRules","fetchRecommendedSdkUpgrades","handleActivateToggle","r","result","handleGetStarted","saveUniformRule","modalCss","handleSortRules","ruleIds","sortedRules","ruleId","handleAddRule","handleEditRule","handleDeleteRule","faqLink","docsLink","cursor","transformOrigin","overflow","position","zIndex","itemsRuleIndex","itemsRule","currentRule","ELSE","RulesPanel","RulesPanelHeader","fontSizeSmall","RulesPanelLayout","isContent","border","RulesPanelFooter","AddRuleButton","quantityField","stats","numberOfLeadingEmptyBuckets","numberOfEventsInTheFirstBuckets","group","groupAcc","i","rate","decimalPlaces","trueSampleRate","moment","clientRate","max","serverRate","commonSeriesConfig","barMinHeight","stack","seriesData","indexedAndProcessed","processed","discarded","intervals","forEach","ACCEPTED","FILTERED","reason","startsWith","valueOf","bucket","total","newClientDiscard","newSentClient","newDiscarded","newIndexedAndProcessed","newProcessed","green300","yellow300","red300","MAX_PER_HOUR","COMMON_SAMPLE_RATES","hoursOverLimit","hours","trueSampleRates","safeSampleRates","accepted","rateLimited","RATE_LIMITED","_interval","hourAccepted","hourClientDiscard","hourRateLimited","hourRejected","hourTotal","hourTotalCapped","safeSampleRate","push","floor","cloneDeep","emptySeries","totalHitServer","setLoading","setError","setProjectStats","refetch","setRefetch","fetchStats","err","projectStatsSeries","sdksToUpdate","isSendingSource","isSendingSampleRate","isSupportedPlatform","incompatibleSDKs","sdkInfo","sdkToUpdate","incompatibleProjects","incompatibleSDK","incompatibleProject"],"sourceRoot":""}