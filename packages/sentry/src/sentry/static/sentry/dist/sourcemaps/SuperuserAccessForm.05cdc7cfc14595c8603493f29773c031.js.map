{"version":3,"file":"chunks/SuperuserAccessForm.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/superuserAccessForm.tsx","webpack:///./app/constants/superuserAccessErrors.tsx"],"sourcesContent":["import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport Form from 'sentry/components/forms/form';\nimport Hook from 'sentry/components/hook';\nimport ThemeAndStyleProvider from 'sentry/components/themeAndStyleProvider';\nimport {ErrorCodes} from 'sentry/constants/superuserAccessErrors';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport withApi from 'sentry/utils/withApi';\n\nimport Button from './button';\n\ntype Props = {\n  api: Client;\n};\n\ntype State = {\n  error: boolean;\n  errorType: string;\n};\n\nclass SuperuserAccessForm extends Component<Props, State> {\n  state: State = {\n    error: false,\n    errorType: '',\n  };\n\n  handleSubmit = async () => {\n    const {api} = this.props;\n    const data = {\n      isSuperuserModal: true,\n      superuserAccessCategory: 'cops_csm',\n      superuserReason: 'COPS and CSM use',\n    };\n    try {\n      await api.requestPromise('/auth/', {method: 'PUT', data});\n      this.handleSuccess();\n    } catch (err) {\n      this.handleError(err);\n    }\n  };\n\n  handleSuccess = () => {\n    window.location.reload();\n  };\n\n  handleError = err => {\n    let errorType = '';\n    if (err.status === 403) {\n      errorType = ErrorCodes.invalidPassword;\n    } else if (err.status === 401) {\n      errorType = ErrorCodes.invalidSSOSession;\n    } else if (err.status === 400) {\n      errorType = ErrorCodes.invalidAccessCategory;\n    } else {\n      errorType = ErrorCodes.unknownError;\n    }\n    this.setState({\n      error: true,\n      errorType,\n    });\n  };\n\n  handleLogout = async () => {\n    const {api} = this.props;\n    try {\n      await logout(api);\n    } catch {\n      // ignore errors\n    }\n    window.location.assign('/auth/login/');\n  };\n\n  render() {\n    const {error, errorType} = this.state;\n    if (errorType === ErrorCodes.invalidSSOSession) {\n      this.handleLogout();\n      return null;\n    }\n    return (\n      <ThemeAndStyleProvider>\n        <Form\n          apiMethod=\"PUT\"\n          apiEndpoint=\"/auth/\"\n          submitLabel={t('Continue')}\n          onSubmitSuccess={this.handleSuccess}\n          onSubmitError={this.handleError}\n          initialData={{isSuperuserModal: true}}\n          extraButton={\n            <BackWrapper>\n              <Button onClick={this.handleSubmit}>{t('COPS/CSM')}</Button>\n            </BackWrapper>\n          }\n          resetOnError\n        >\n          {error && (\n            <StyledAlert type=\"error\" showIcon>\n              {t(errorType)}\n            </StyledAlert>\n          )}\n          <Hook name=\"component:superuser-access-category\" />\n        </Form>\n      </ThemeAndStyleProvider>\n    );\n  }\n}\n\nconst StyledAlert = styled(Alert)`\n  margin-bottom: 0;\n`;\n\nconst BackWrapper = styled('div')`\n  width: 100%;\n  margin-left: ${space(4)};\n`;\n\nexport default withApi(SuperuserAccessForm);\n","export enum ErrorCodes {\n  invalidPassword = 'Incorrect password',\n  invalidSSOSession = 'Your SSO Session has expired, please reauthenticate',\n  invalidAccessCategory = 'Please fill out the access category and reason correctly',\n  unknownError = 'An error ocurred, please try again',\n}\n"],"names":["Component","logout","Alert","Form","Hook","ThemeAndStyleProvider","ErrorCodes","t","space","withApi","Button","SuperuserAccessForm","error","errorType","api","props","data","isSuperuserModal","superuserAccessCategory","superuserReason","requestPromise","method","handleSuccess","err","handleError","window","location","reload","status","invalidPassword","invalidSSOSession","invalidAccessCategory","unknownError","setState","assign","render","state","handleLogout","handleSubmit","StyledAlert","BackWrapper"],"sourceRoot":""}