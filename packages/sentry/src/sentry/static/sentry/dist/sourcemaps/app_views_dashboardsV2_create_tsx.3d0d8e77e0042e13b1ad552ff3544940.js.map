{"version":3,"file":"chunks/app_views_dashboardsV2_create_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AAOA,SAASe,eAAT,CAAyBC,KAAzB,EAAuC;EACrC,MAAM;IAACC;EAAD,IAAaD,KAAnB;EACA,MAAM;IAACE;EAAD,IAAeF,KAAK,CAACG,MAA3B;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,+CAAQ,EAA1C;;EACA,SAASqB,cAAT,GAA0B;IACxB,OACE,iEAAC,mEAAD;MAAA,UACE,iEAAC,+DAAD;QAAO,IAAI,EAAC,SAAZ;QAAA,UAAuBhB,gDAAC,CAAC,uCAAD;MAAxB;IADF,EADF;EAKD;;EAED,MAAMiB,QAAQ,GAAGL,UAAU,GACvBT,6DAAA,CAA0BgB,iBAAiB,IAAIA,iBAAiB,CAACC,EAAlB,KAAyBR,UAAxE,CADuB,GAEvBS,SAFJ;EAGA,MAAMC,SAAS,GAAGL,QAAQ,GAAGV,uDAAc,CAACU,QAAD,CAAjB,GAA8BV,uDAAc,CAACH,mDAAD,CAAtE;EACA,MAAMmB,YAAY,GAAGN,QAAQ,GAAGX,2DAAH,GAA4BA,0DAAzD;EACAZ,gDAAS,CAAC,MAAM;IACd,MAAMgC,iBAAiB,GAAGlB,iEAAwB,CAACG,QAAQ,CAACgB,KAAV,CAAlD;IACAZ,YAAY,CAACW,iBAAD,CAAZ;;IACA,IAAIA,iBAAJ,EAAuB;MACrB9B,gEAAA,CAAuBe,QAAQ,CAACkB,QAAhC;IACD;EACF,CANQ,EAMN,CAAClB,QAAQ,CAACkB,QAAV,CANM,CAAT;EAOA,OACE,iEAAC,qEAAD;IACE,QAAQ,EAAE,CAAC,iBAAD,CADZ;IAEE,YAAY,EAAEnB,KAAK,CAACoB,YAFtB;IAGE,cAAc,EAAEd,cAHlB;IAAA,UAKE,iEAAC,uEAAD;MAAA,UACE,iEAAC,gDAAD,OACMN,KADN;QAEE,YAAY,EAAEa,YAFhB;QAGE,SAAS,EAAED,SAHb;QAIE,UAAU,EAAE,EAJd;QAKE,SAAS,EAAER,SALb;QAME,cAAc,EAAE,MAAMC,YAAY,CAACM,SAAD;MANpC;IADF;EALF,EADF;AAkBD;;AA1CQZ;AA4CT,iEAAeP,yEAAgB,CAACO,eAAD,CAA/B","sources":["webpack:///./app/views/dashboardsV2/create.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport {DASHBOARDS_TEMPLATES, EMPTY_DASHBOARD} from './data';\nimport DashboardDetail from './detail';\nimport {DashboardState, Widget} from './types';\nimport {cloneDashboard, constructWidgetFromQuery} from './utils';\n\ntype Props = RouteComponentProps<{orgId: string; templateId?: string}, {}> & {\n  children: React.ReactNode;\n  organization: Organization;\n};\n\nfunction CreateDashboard(props: Props) {\n  const {location} = props;\n  const {templateId} = props.params;\n  const [newWidget, setNewWidget] = useState<Widget | undefined>();\n  function renderDisabled() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  const template = templateId\n    ? DASHBOARDS_TEMPLATES.find(dashboardTemplate => dashboardTemplate.id === templateId)\n    : undefined;\n  const dashboard = template ? cloneDashboard(template) : cloneDashboard(EMPTY_DASHBOARD);\n  const initialState = template ? DashboardState.PREVIEW : DashboardState.CREATE;\n  useEffect(() => {\n    const constructedWidget = constructWidgetFromQuery(location.query);\n    setNewWidget(constructedWidget);\n    if (constructedWidget) {\n      browserHistory.replace(location.pathname);\n    }\n  }, [location.pathname]);\n  return (\n    <Feature\n      features={['dashboards-edit']}\n      organization={props.organization}\n      renderDisabled={renderDisabled}\n    >\n      <ErrorBoundary>\n        <DashboardDetail\n          {...props}\n          initialState={initialState}\n          dashboard={dashboard}\n          dashboards={[]}\n          newWidget={newWidget}\n          onSetNewWidget={() => setNewWidget(undefined)}\n        />\n      </ErrorBoundary>\n    </Feature>\n  );\n}\n\nexport default withOrganization(CreateDashboard);\n"],"names":["useEffect","useState","browserHistory","Feature","Alert","ErrorBoundary","t","PageContent","withOrganization","DASHBOARDS_TEMPLATES","EMPTY_DASHBOARD","DashboardDetail","DashboardState","cloneDashboard","constructWidgetFromQuery","CreateDashboard","props","location","templateId","params","newWidget","setNewWidget","renderDisabled","template","find","dashboardTemplate","id","undefined","dashboard","initialState","PREVIEW","CREATE","constructedWidget","query","replace","pathname","organization"],"sourceRoot":""}