{"version":3,"file":"chunks/app_views_performance_trends_utils_tsx-app_views_performance_utils_tsx-app_views_performance_-d12d8e.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/discover/charts.tsx","webpack:///./app/views/performance/trends/types.tsx","webpack:///./app/views/performance/trends/utils.tsx","webpack:///./app/views/performance/utils.tsx","webpack:///./app/views/performance/vitalDetail/utils.tsx"],"sourcesContent":["import {LegendComponentOption} from 'echarts';\n\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport {AggregationOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(\n  value: number | null,\n  outputType: AggregationOutputType = 'number'\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  return tooltipFormatterUsingAggregateOutputType(value, outputType);\n}\n\n/**\n * Formatter for chart tooltips that takes the aggregate output type directly\n */\nexport function tooltipFormatterUsingAggregateOutputType(\n  value: number | null,\n  type: string\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    case 'size':\n      return formatBytesBase2(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  outputType: AggregationOutputType,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  return axisLabelFormatterUsingAggregateOutputType(\n    value,\n    outputType,\n    abbreviation,\n    durationUnit\n  );\n}\n\n/**\n * Formatter for chart axis labels that takes the aggregate output type directly\n */\nexport function axisLabelFormatterUsingAggregateOutputType(\n  value: number,\n  type: string,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value, durationUnit);\n    case 'size':\n      return formatBytesBase2(value, 0);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number, durationUnit?: number): string {\n  durationUnit ??= categorizeDuration(value);\n  if (value === 0) {\n    return '0';\n  }\n  switch (durationUnit) {\n    case WEEK: {\n      const label = (value / WEEK).toFixed(0);\n      return t('%swk', label);\n    }\n    case DAY: {\n      const label = (value / DAY).toFixed(0);\n      return t('%sd', label);\n    }\n    case HOUR: {\n      const label = (value / HOUR).toFixed(0);\n      return t('%shr', label);\n    }\n    case MINUTE: {\n      const label = (value / MINUTE).toFixed(0);\n      return t('%smin', label);\n    }\n    case SECOND: {\n      const label = (value / SECOND).toFixed(0);\n      return t('%ss', label);\n    }\n    default:\n      const label = value.toFixed(0);\n      return t('%sms', label);\n  }\n}\n\n/**\n * Given an array of series and an eCharts legend object,\n * finds the range of y values (min and max) based on which series is selected in the legend\n * Assumes series[0] > series[1] > ...\n * @param series Array of eCharts series\n * @param legend eCharts legend object\n * @returns\n */\nexport function findRangeOfMultiSeries(series: Series[], legend?: LegendComponentOption) {\n  let range: {max: number; min: number} | undefined;\n  if (series[0]?.data) {\n    let minSeries = series[0];\n    let maxSeries;\n    series.forEach(({seriesName, data}, idx) => {\n      if (legend?.selected?.[seriesName] !== false && data.length) {\n        minSeries = series[idx];\n        maxSeries ??= series[idx];\n      }\n    });\n    if (maxSeries?.data) {\n      const max = Math.max(\n        ...maxSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      const min = Math.min(\n        ...minSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      range = {max, min};\n    }\n  }\n  return range;\n}\n\n/**\n * Given a eCharts series and legend, returns the unit to be used on the yAxis for a duration chart\n * @param series eCharts series array\n * @param legend eCharts legend object\n * @returns\n */\nexport function getDurationUnit(\n  series: Series[],\n  legend?: LegendComponentOption\n): number {\n  let durationUnit = 0;\n  const range = findRangeOfMultiSeries(series, legend);\n  if (range) {\n    const avg = (range.max + range.min) / 2;\n    durationUnit = categorizeDuration((range.max - range.min) / 5); // avg of 5 yAxis ticks per chart\n\n    const numOfDigits = (avg / durationUnit).toFixed(0).length;\n    if (numOfDigits > 6) {\n      durationUnit = categorizeDuration(avg);\n    }\n  }\n  return durationUnit;\n}\n\n/**\n * Categorizes the duration by Second, Minute, Hour, etc\n * Ex) categorizeDuration(1200) = MINUTE\n * @param value Duration in ms\n */\nexport function categorizeDuration(value): number {\n  if (value >= WEEK) {\n    return WEEK;\n  }\n  if (value >= DAY) {\n    return DAY;\n  }\n  if (value >= HOUR) {\n    return HOUR;\n  }\n  if (value >= MINUTE) {\n    return MINUTE;\n  }\n  if (value >= SECOND) {\n    return SECOND;\n  }\n  return 1;\n}\n","import moment from 'moment';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {EventsStatsData, Project} from 'sentry/types';\nimport EventView, {LocationQuery} from 'sentry/utils/discover/eventView';\n\nexport type TrendView = EventView & {\n  middle?: string;\n  orderby?: string;\n  trendFunction?: string;\n  trendType?: TrendChangeType;\n};\n\nexport type TrendsQuery = EventQuery &\n  LocationQuery & {\n    interval?: string;\n    middle?: string;\n    trendFunction?: string;\n    trendType?: TrendChangeType;\n  };\n\nexport type TrendFunction = {\n  alias: string;\n  field: TrendFunctionField;\n  label: string;\n  legendLabel: string;\n};\n\nexport type TrendParameter = {\n  column: string;\n  label: string;\n};\n\nexport enum TrendChangeType {\n  IMPROVED = 'improved',\n  REGRESSION = 'regression',\n}\n\nexport enum TrendFunctionField {\n  P50 = 'p50',\n  P75 = 'p75',\n  P95 = 'p95',\n  P99 = 'p99',\n  AVG = 'avg',\n}\n\nexport enum TrendColumnField {\n  DURATION = 'transaction.duration',\n  LCP = 'measurements.lcp',\n  FCP = 'measurements.fcp',\n  FID = 'measurements.fid',\n  CLS = 'measurements.cls',\n  SPANS_DB = 'spans.db',\n  SPANS_HTTP = 'spans.http',\n  SPANS_BROWSER = 'spans.browser',\n  SPANS_RESOURCE = 'spans.resource',\n}\n\nexport type TrendStat = {\n  data: EventsStatsData;\n  order: number;\n};\n\nexport type TrendsStats = {\n  [transaction: string]: TrendStat;\n};\n\nexport type TrendsTransaction = {\n  aggregate_range_1: number;\n  aggregate_range_2: number;\n  count: number;\n\n  count_percentage: number;\n  count_range_1: number;\n  count_range_2: number;\n  project: string;\n  transaction: string;\n  trend_difference: number;\n  trend_percentage: number;\n};\n\nexport type TrendsDataEvents = {\n  data: TrendsTransaction[];\n  meta: any;\n};\n\nexport type TrendsData = {\n  events: TrendsDataEvents;\n  projects: Project[];\n  stats: TrendsStats;\n};\n\nexport type NormalizedTrendsTransaction = TrendsTransaction & {\n  received_at: Readonly<moment.Moment>;\n};\n","import {ASAP} from 'downsample/methods/ASAP';\nimport {Location} from 'history';\nimport moment from 'moment';\n\nimport {getInterval} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  AggregationKeyWithAlias,\n  Field,\n  generateFieldAsString,\n  Sort,\n} from 'sentry/utils/discover/fields';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport theme from 'sentry/utils/theme';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {platformToPerformanceType, PROJECT_PERFORMANCE_TYPE} from '../utils';\n\nimport {\n  NormalizedTrendsTransaction,\n  TrendChangeType,\n  TrendColumnField,\n  TrendFunction,\n  TrendFunctionField,\n  TrendParameter,\n  TrendsTransaction,\n  TrendView,\n} from './types';\n\nexport const DEFAULT_TRENDS_STATS_PERIOD = '14d';\nexport const DEFAULT_MAX_DURATION = '15min';\n\nexport const TRENDS_FUNCTIONS: TrendFunction[] = [\n  {\n    label: 'p50',\n    field: TrendFunctionField.P50,\n    alias: 'percentile_range',\n    legendLabel: 'p50',\n  },\n  {\n    label: 'p75',\n    field: TrendFunctionField.P75,\n    alias: 'percentile_range',\n    legendLabel: 'p75',\n  },\n  {\n    label: 'p95',\n    field: TrendFunctionField.P95,\n    alias: 'percentile_range',\n    legendLabel: 'p95',\n  },\n  {\n    label: 'p99',\n    field: TrendFunctionField.P99,\n    alias: 'percentile_range',\n    legendLabel: 'p99',\n  },\n  {\n    label: 'average',\n    field: TrendFunctionField.AVG,\n    alias: 'avg_range',\n    legendLabel: 'average',\n  },\n];\n\nexport const TRENDS_PARAMETERS: TrendParameter[] = [\n  {\n    label: 'Duration',\n    column: TrendColumnField.DURATION,\n  },\n  {\n    label: 'LCP',\n    column: TrendColumnField.LCP,\n  },\n  {\n    label: 'FCP',\n    column: TrendColumnField.FCP,\n  },\n  {\n    label: 'FID',\n    column: TrendColumnField.FID,\n  },\n  {\n    label: 'CLS',\n    column: TrendColumnField.CLS,\n  },\n  {\n    label: 'Spans (http)',\n    column: TrendColumnField.SPANS_HTTP,\n  },\n  {\n    label: 'Spans (db)',\n    column: TrendColumnField.SPANS_DB,\n  },\n  {\n    label: 'Spans (browser)',\n    column: TrendColumnField.SPANS_BROWSER,\n  },\n  {\n    label: 'Spans (resource)',\n    column: TrendColumnField.SPANS_RESOURCE,\n  },\n];\n\nexport const trendToColor = {\n  [TrendChangeType.IMPROVED]: {\n    lighter: theme.green200,\n    default: theme.green300,\n  },\n  [TrendChangeType.REGRESSION]: {\n    lighter: theme.red200,\n    default: theme.red300,\n  },\n};\n\nexport const trendSelectedQueryKeys = {\n  [TrendChangeType.IMPROVED]: 'improvedSelected',\n  [TrendChangeType.REGRESSION]: 'regressionSelected',\n};\n\nexport const trendUnselectedSeries = {\n  [TrendChangeType.IMPROVED]: 'improvedUnselectedSeries',\n  [TrendChangeType.REGRESSION]: 'regressionUnselectedSeries',\n};\n\nexport const trendCursorNames = {\n  [TrendChangeType.IMPROVED]: 'improvedCursor',\n  [TrendChangeType.REGRESSION]: 'regressionCursor',\n};\n\nexport function resetCursors() {\n  const cursors = {};\n  Object.values(trendCursorNames).forEach(cursor => (cursors[cursor] = undefined)); // Resets both cursors\n  return cursors;\n}\n\nexport function getCurrentTrendFunction(\n  location: Location,\n  _trendFunctionField?: TrendFunctionField\n): TrendFunction {\n  const trendFunctionField =\n    _trendFunctionField ?? decodeScalar(location?.query?.trendFunction);\n  const trendFunction = TRENDS_FUNCTIONS.find(({field}) => field === trendFunctionField);\n  return trendFunction || TRENDS_FUNCTIONS[0];\n}\n\nfunction getDefaultTrendParameter(\n  projects: Project[],\n  projectIds: Readonly<number[]>\n): TrendParameter {\n  const performanceType = platformToPerformanceType(projects, projectIds);\n  const trendParameter = performanceTypeToTrendParameterLabel(performanceType);\n\n  return trendParameter;\n}\n\nexport function getCurrentTrendParameter(\n  location: Location,\n  projects: Project[],\n  projectIds: Readonly<number[]>\n): TrendParameter {\n  const trendParameterLabel = decodeScalar(location?.query?.trendParameter);\n  const trendParameter = TRENDS_PARAMETERS.find(\n    ({label}) => label === trendParameterLabel\n  );\n\n  if (trendParameter) {\n    return trendParameter;\n  }\n\n  const defaultTrendParameter = getDefaultTrendParameter(projects, projectIds);\n  return defaultTrendParameter;\n}\n\nexport function performanceTypeToTrendParameterLabel(\n  performanceType: PROJECT_PERFORMANCE_TYPE\n): TrendParameter {\n  switch (performanceType) {\n    case PROJECT_PERFORMANCE_TYPE.FRONTEND:\n      return {\n        label: 'LCP',\n        column: TrendColumnField.LCP,\n      };\n    case PROJECT_PERFORMANCE_TYPE.ANY:\n    case PROJECT_PERFORMANCE_TYPE.BACKEND:\n    case PROJECT_PERFORMANCE_TYPE.FRONTEND_OTHER:\n    default:\n      return {\n        label: 'Duration',\n        column: TrendColumnField.DURATION,\n      };\n  }\n}\n\nexport function generateTrendFunctionAsString(\n  trendFunction: TrendFunctionField,\n  trendParameter: string\n): string {\n  return generateFieldAsString({\n    kind: 'function',\n    function: [\n      trendFunction as AggregationKeyWithAlias,\n      trendParameter,\n      undefined,\n      undefined,\n    ],\n  });\n}\n\nexport function transformDeltaSpread(from: number, to: number) {\n  const fromSeconds = from / 1000;\n  const toSeconds = to / 1000;\n\n  const showDigits = from > 1000 || to > 1000 || from < 10 || to < 10; // Show digits consistently if either has them\n\n  return {fromSeconds, toSeconds, showDigits};\n}\n\nexport function getTrendProjectId(\n  trend: NormalizedTrendsTransaction,\n  projects?: Project[]\n): string | undefined {\n  if (!trend.project || !projects) {\n    return undefined;\n  }\n  const transactionProject = projects.find(project => project.slug === trend.project);\n  return transactionProject?.id;\n}\n\nexport function modifyTrendView(\n  trendView: TrendView,\n  location: Location,\n  trendsType: TrendChangeType,\n  projects: Project[],\n  isProjectOnly?: boolean\n) {\n  const trendFunction = getCurrentTrendFunction(location);\n  const trendParameter = getCurrentTrendParameter(location, projects, trendView.project);\n\n  const transactionField = isProjectOnly ? [] : ['transaction'];\n  const fields = [...transactionField, 'project'].map(field => ({\n    field,\n  })) as Field[];\n\n  const trendSort = {\n    field: 'trend_percentage()',\n    kind: 'asc',\n  } as Sort;\n\n  trendView.trendType = trendsType;\n  if (trendsType === TrendChangeType.REGRESSION) {\n    trendSort.kind = 'desc';\n  }\n\n  if (trendFunction && trendParameter) {\n    trendView.trendFunction = generateTrendFunctionAsString(\n      trendFunction.field,\n      trendParameter.column\n    );\n  }\n  trendView.query = getLimitTransactionItems(trendView.query);\n\n  trendView.interval = getQueryInterval(location, trendView);\n\n  trendView.sorts = [trendSort];\n  trendView.fields = fields;\n}\n\nexport function modifyTrendsViewDefaultPeriod(eventView: EventView, location: Location) {\n  const {query} = location;\n\n  const hasStartAndEnd = query.start && query.end;\n\n  if (!query.statsPeriod && !hasStartAndEnd) {\n    eventView.statsPeriod = DEFAULT_TRENDS_STATS_PERIOD;\n  }\n  return eventView;\n}\n\nfunction getQueryInterval(location: Location, eventView: TrendView) {\n  const intervalFromQueryParam = decodeScalar(location?.query?.interval);\n  const {start, end, statsPeriod} = eventView;\n\n  const datetimeSelection = {\n    start: start || null,\n    end: end || null,\n    period: statsPeriod,\n  };\n\n  const intervalFromSmoothing = getInterval(datetimeSelection, 'high');\n\n  return intervalFromQueryParam || intervalFromSmoothing;\n}\n\nexport function transformValueDelta(value: number, trendType: TrendChangeType) {\n  const absoluteValue = Math.abs(value);\n\n  const changeLabel =\n    trendType === TrendChangeType.REGRESSION ? t('slower') : t('faster');\n\n  const seconds = absoluteValue / 1000;\n\n  const fixedDigits = absoluteValue > 1000 || absoluteValue < 10 ? 1 : 0;\n\n  return {seconds, fixedDigits, changeLabel};\n}\n\n/**\n * This will normalize the trends transactions while the current trend function and current data are out of sync\n * To minimize extra renders with missing results.\n */\nexport function normalizeTrends(\n  data: Array<TrendsTransaction>\n): Array<NormalizedTrendsTransaction> {\n  const received_at = moment(); // Adding the received time for the transaction so calls to get baseline always line up with the transaction\n  return data.map(row => {\n    return {\n      ...row,\n      received_at,\n      transaction: row.transaction,\n    } as NormalizedTrendsTransaction;\n  });\n}\n\nexport function getSelectedQueryKey(trendChangeType: TrendChangeType) {\n  return trendSelectedQueryKeys[trendChangeType];\n}\n\nexport function getUnselectedSeries(trendChangeType: TrendChangeType) {\n  return trendUnselectedSeries[trendChangeType];\n}\n\nexport function movingAverage(data, index, size) {\n  return (\n    data\n      .slice(index - size, index)\n      .map(a => a.value)\n      .reduce((a, b) => a + b, 0) / size\n  );\n}\n\n/**\n * This function applies defaults for trend and count percentage, and adds the confidence limit to the query\n */\nfunction getLimitTransactionItems(query: string) {\n  const limitQuery = new MutableSearch(query);\n  if (!limitQuery.hasFilter('count_percentage()')) {\n    limitQuery.addFilterValues('count_percentage()', ['>0.25', '<4']);\n  }\n  if (!limitQuery.hasFilter('trend_percentage()')) {\n    limitQuery.addFilterValues('trend_percentage()', ['>0%']);\n  }\n  if (!limitQuery.hasFilter('confidence()')) {\n    limitQuery.addFilterValues('confidence()', ['>6']);\n  }\n  return limitQuery.formatString();\n}\n\nexport const smoothTrend = (data: [number, number][], resolution = 100) => {\n  return ASAP(data, resolution);\n};\n\nexport const replaceSeriesName = (seriesName: string) => {\n  return ['p50', 'p75'].find(aggregate => seriesName.includes(aggregate));\n};\n\nexport const replaceSmoothedSeriesName = (seriesName: string) => {\n  return `Smoothed ${['p50', 'p75'].find(aggregate => seriesName.includes(aggregate))}`;\n};\n\nexport function transformEventStatsSmoothed(data?: Series[], seriesName?: string) {\n  let minValue = Number.MAX_SAFE_INTEGER;\n  let maxValue = 0;\n  if (!data) {\n    return {\n      maxValue,\n      minValue,\n      smoothedResults: undefined,\n    };\n  }\n\n  const smoothedResults: Series[] = [];\n\n  for (const current of data) {\n    const currentData = current.data;\n    const resultData: SeriesDataUnit[] = [];\n\n    const smoothed = smoothTrend(\n      currentData.map(({name, value}) => [Number(name), value])\n    );\n\n    for (let i = 0; i < smoothed.length; i++) {\n      const point = smoothed[i] as any;\n      const value = point.y;\n      resultData.push({\n        name: point.x,\n        value,\n      });\n      if (!isNaN(value)) {\n        const rounded = Math.round(value);\n        minValue = Math.min(rounded, minValue);\n        maxValue = Math.max(rounded, maxValue);\n      }\n    }\n    smoothedResults.push({\n      seriesName: seriesName || current.seriesName || 'Current',\n      data: resultData,\n      lineStyle: current.lineStyle,\n      color: current.color,\n    });\n  }\n\n  return {\n    minValue,\n    maxValue,\n    smoothedResults,\n  };\n}\n","import {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {backend, frontend, mobile} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\nimport {\n  NewQuery,\n  Organization,\n  OrganizationSummary,\n  PageFilters,\n  Project,\n  ReleaseProject,\n} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {statsPeriodToDays} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {TRACING_FIELDS} from 'sentry/utils/discover/fields';\nimport {getDuration} from 'sentry/utils/formatters';\nimport getCurrentSentryReactTransaction from 'sentry/utils/getCurrentSentryReactTransaction';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {DEFAULT_MAX_DURATION} from './trends/utils';\n\nexport const QUERY_KEYS = [\n  'environment',\n  'project',\n  'query',\n  'start',\n  'end',\n  'statsPeriod',\n] as const;\n\nexport const UNPARAMETERIZED_TRANSACTION = '<< unparameterized >>'; // Represents 'other' transactions with high cardinality names that were dropped on the metrics dataset.\nconst UNPARAMETRIZED_TRANSACTION = '<< unparametrized >>'; // Old spelling. Can be deleted in the future when all data for this transaction name is gone.\nexport const EXCLUDE_METRICS_UNPARAM_CONDITIONS = `(!transaction:\"${UNPARAMETERIZED_TRANSACTION}\" AND !transaction:\"${UNPARAMETRIZED_TRANSACTION}\")`;\nconst SHOW_UNPARAM_BANNER = 'showUnparameterizedBanner';\n\nexport function createUnnamedTransactionsDiscoverTarget(props: {\n  location: Location;\n  organization: Organization;\n}) {\n  const fields = [\n    'transaction',\n    'project',\n    'transaction.source',\n    'epm()',\n    'p50()',\n    'p95()',\n  ];\n\n  const query: NewQuery = {\n    id: undefined,\n    name: t('Performance - Unparameterized Transactions '),\n    query: 'event.type:transaction transaction.source:\"url\"',\n    projects: [],\n    fields,\n    version: 2,\n  };\n\n  const discoverEventView = EventView.fromNewQueryWithLocation(\n    query,\n    props.location\n  ).withSorts([{field: 'epm', kind: 'desc'}]);\n  const target = discoverEventView.getResultsViewUrlTarget(props.organization.slug);\n  target.query[SHOW_UNPARAM_BANNER] = 'true';\n  return target;\n}\n\n/**\n * Performance type can used to determine a default view or which specific field should be used by default on pages\n * where we don't want to wait for transaction data to return to determine how to display aspects of a page.\n */\nexport enum PROJECT_PERFORMANCE_TYPE {\n  ANY = 'any', // Fallback to transaction duration\n  FRONTEND = 'frontend',\n  BACKEND = 'backend',\n  FRONTEND_OTHER = 'frontend_other',\n  MOBILE = 'mobile',\n}\n\n// The native SDK is equally used on clients and end-devices as on\n// backend, the default view should be \"All Transactions\".\nconst FRONTEND_PLATFORMS: string[] = [...frontend];\nconst BACKEND_PLATFORMS: string[] = backend.filter(platform => platform !== 'native');\nconst MOBILE_PLATFORMS: string[] = [...mobile];\n\nexport function platformToPerformanceType(\n  projects: (Project | ReleaseProject)[],\n  projectIds: readonly number[]\n) {\n  if (projectIds.length === 0 || projectIds[0] === ALL_ACCESS_PROJECTS) {\n    return PROJECT_PERFORMANCE_TYPE.ANY;\n  }\n\n  const selectedProjects = projects.filter(p =>\n    projectIds.includes(parseInt(`${p.id}`, 10))\n  );\n\n  if (selectedProjects.length === 0 || selectedProjects.some(p => !p.platform)) {\n    return PROJECT_PERFORMANCE_TYPE.ANY;\n  }\n\n  if (\n    selectedProjects.every(project =>\n      FRONTEND_PLATFORMS.includes(project.platform as string)\n    )\n  ) {\n    return PROJECT_PERFORMANCE_TYPE.FRONTEND;\n  }\n\n  if (\n    selectedProjects.every(project =>\n      BACKEND_PLATFORMS.includes(project.platform as string)\n    )\n  ) {\n    return PROJECT_PERFORMANCE_TYPE.BACKEND;\n  }\n\n  if (\n    selectedProjects.every(project =>\n      MOBILE_PLATFORMS.includes(project.platform as string)\n    )\n  ) {\n    return PROJECT_PERFORMANCE_TYPE.MOBILE;\n  }\n\n  return PROJECT_PERFORMANCE_TYPE.ANY;\n}\n\n/**\n * Used for transaction summary to determine appropriate columns on a page, since there is no display field set for the page.\n */\nexport function platformAndConditionsToPerformanceType(\n  projects: Project[],\n  eventView: EventView\n) {\n  const performanceType = platformToPerformanceType(projects, eventView.project);\n  if (performanceType === PROJECT_PERFORMANCE_TYPE.FRONTEND) {\n    const conditions = new MutableSearch(eventView.query);\n    const ops = conditions.getFilterValues('!transaction.op');\n    if (ops.some(op => op === 'pageload')) {\n      return PROJECT_PERFORMANCE_TYPE.FRONTEND_OTHER;\n    }\n  }\n\n  return performanceType;\n}\n\n/**\n * Used for transaction summary to check the view itself, since it can have conditions which would exclude it from having vitals aside from platform.\n */\nexport function isSummaryViewFrontendPageLoad(eventView: EventView, projects: Project[]) {\n  return (\n    platformAndConditionsToPerformanceType(projects, eventView) ===\n    PROJECT_PERFORMANCE_TYPE.FRONTEND\n  );\n}\n\nexport function isSummaryViewFrontend(eventView: EventView, projects: Project[]) {\n  return (\n    platformAndConditionsToPerformanceType(projects, eventView) ===\n      PROJECT_PERFORMANCE_TYPE.FRONTEND ||\n    platformAndConditionsToPerformanceType(projects, eventView) ===\n      PROJECT_PERFORMANCE_TYPE.FRONTEND_OTHER\n  );\n}\n\nexport function getPerformanceLandingUrl(organization: OrganizationSummary): string {\n  return `/organizations/${organization.slug}/performance/`;\n}\n\nexport function getPerformanceTrendsUrl(organization: OrganizationSummary): string {\n  return `/organizations/${organization.slug}/performance/trends/`;\n}\n\nexport function getTransactionSearchQuery(location: Location, query: string = '') {\n  return decodeScalar(location.query.query, query).trim();\n}\n\nexport function handleTrendsClick({\n  location,\n  organization,\n  projectPlatforms,\n}: {\n  location: Location;\n  organization: Organization;\n  projectPlatforms: string;\n}) {\n  trackAnalyticsEvent({\n    eventKey: 'performance_views.change_view',\n    eventName: 'Performance Views: Change View',\n    organization_id: parseInt(organization.id, 10),\n    view_name: 'TRENDS',\n    project_platforms: projectPlatforms,\n  });\n\n  const target = trendsTargetRoute({location, organization});\n\n  browserHistory.push(target);\n}\n\nexport function trendsTargetRoute({\n  location,\n  organization,\n  initialConditions,\n  additionalQuery,\n}: {\n  location: Location;\n  organization: Organization;\n  additionalQuery?: {[x: string]: string};\n  initialConditions?: MutableSearch;\n}) {\n  const newQuery = {\n    ...location.query,\n    ...additionalQuery,\n  };\n\n  const query = decodeScalar(location.query.query, '');\n  const conditions = new MutableSearch(query);\n\n  const modifiedConditions = initialConditions ?? new MutableSearch([]);\n\n  if (conditions.hasFilter('tpm()')) {\n    modifiedConditions.setFilterValues('tpm()', conditions.getFilterValues('tpm()'));\n  } else {\n    modifiedConditions.setFilterValues('tpm()', ['>0.01']);\n  }\n  if (conditions.hasFilter('transaction.duration')) {\n    modifiedConditions.setFilterValues(\n      'transaction.duration',\n      conditions.getFilterValues('transaction.duration')\n    );\n  } else {\n    modifiedConditions.setFilterValues('transaction.duration', [\n      '>0',\n      `<${DEFAULT_MAX_DURATION}`,\n    ]);\n  }\n  newQuery.query = modifiedConditions.formatString();\n\n  return {pathname: getPerformanceTrendsUrl(organization), query: {...newQuery}};\n}\n\nexport function removeTracingKeysFromSearch(\n  currentFilter: MutableSearch,\n  options: {excludeTagKeys: Set<string>} = {\n    excludeTagKeys: new Set([\n      // event type can be \"transaction\" but we're searching for issues\n      'event.type',\n      // the project is already determined by the transaction,\n      // and issue search does not support the project filter\n      'project',\n    ]),\n  }\n) {\n  currentFilter.getFilterKeys().forEach(tagKey => {\n    const searchKey = tagKey.startsWith('!') ? tagKey.substr(1) : tagKey;\n    // Remove aggregates and transaction event fields\n    if (\n      // aggregates\n      searchKey.match(/\\w+\\(.*\\)/) ||\n      // transaction event fields\n      TRACING_FIELDS.includes(searchKey) ||\n      // tags that we don't want to pass to pass to issue search\n      options.excludeTagKeys.has(searchKey)\n    ) {\n      currentFilter.removeFilter(tagKey);\n    }\n  });\n\n  return currentFilter;\n}\n\nexport function addRoutePerformanceContext(selection: PageFilters) {\n  const transaction = getCurrentSentryReactTransaction();\n  const days = statsPeriodToDays(\n    selection.datetime.period,\n    selection.datetime.start,\n    selection.datetime.end\n  );\n  const oneDay = 86400;\n  const seconds = Math.floor(days * oneDay);\n\n  transaction?.setTag('query.period', seconds.toString());\n  let groupedPeriod = '>30d';\n  if (seconds <= oneDay) {\n    groupedPeriod = '<=1d';\n  } else if (seconds <= oneDay * 7) {\n    groupedPeriod = '<=7d';\n  } else if (seconds <= oneDay * 14) {\n    groupedPeriod = '<=14d';\n  } else if (seconds <= oneDay * 30) {\n    groupedPeriod = '<=30d';\n  }\n  transaction?.setTag('query.period.grouped', groupedPeriod);\n}\n\nexport function getTransactionName(location: Location): string | undefined {\n  const {transaction} = location.query;\n\n  return decodeScalar(transaction);\n}\n\nexport function getPerformanceDuration(milliseconds: number) {\n  return getDuration(milliseconds / 1000, milliseconds > 1000 ? 2 : 0, true);\n}\n\nexport function areMultipleProjectsSelected(eventView: EventView) {\n  if (!eventView.project.length) {\n    return true; // My projects\n  }\n  if (eventView.project.length === 1 && eventView.project[0] === ALL_ACCESS_PROJECTS) {\n    return true; // All projects\n  }\n  return false;\n}\n\nexport function getSelectedProjectPlatformsArray(\n  location: Location,\n  projects: Project[]\n) {\n  const projectQuery = location.query.project;\n  const selectedProjectIdSet = Array.isArray(projectQuery)\n    ? new Set(projectQuery)\n    : new Set([projectQuery]);\n\n  const selectedProjectPlatforms = projects.reduce((acc: string[], project) => {\n    if (selectedProjectIdSet.has(project.id)) {\n      acc.push(project.platform ?? 'undefined');\n    }\n\n    return acc;\n  }, []);\n\n  return selectedProjectPlatforms;\n}\n\nexport function getSelectedProjectPlatforms(location: Location, projects: Project[]) {\n  const selectedProjectPlatforms = getSelectedProjectPlatformsArray(location, projects);\n  return selectedProjectPlatforms.join(', ');\n}\n","import {Location, Query} from 'history';\n\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport {LineChartProps} from 'sentry/components/charts/lineChart';\nimport {getSeriesSelection} from 'sentry/components/charts/utils';\nimport {IconHappy, IconMeh, IconSad} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType, getAggregateAlias} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {Browser} from 'sentry/utils/performance/vitals/constants';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {Color, Theme} from 'sentry/utils/theme';\nimport {AlertType} from 'sentry/views/alerts/wizard/options';\n\nexport function generateVitalDetailRoute({orgSlug}: {orgSlug: string}): string {\n  return `/organizations/${orgSlug}/performance/vitaldetail/`;\n}\n\nexport const webVitalPoor = {\n  [WebVital.FP]: 3000,\n  [WebVital.FCP]: 3000,\n  [WebVital.LCP]: 4000,\n  [WebVital.FID]: 300,\n  [WebVital.CLS]: 0.25,\n};\n\nexport const webVitalMeh = {\n  [WebVital.FP]: 1000,\n  [WebVital.FCP]: 1000,\n  [WebVital.LCP]: 2500,\n  [WebVital.FID]: 100,\n  [WebVital.CLS]: 0.1,\n};\n\nexport enum VitalState {\n  POOR = 'Poor',\n  MEH = 'Meh',\n  GOOD = 'Good',\n}\n\nexport const vitalStateColors: Record<VitalState, Color> = {\n  [VitalState.POOR]: 'red300',\n  [VitalState.MEH]: 'yellow300',\n  [VitalState.GOOD]: 'green300',\n};\n\nexport const vitalStateIcons: Record<VitalState, React.ReactNode> = {\n  [VitalState.POOR]: <IconSad color={vitalStateColors[VitalState.POOR]} />,\n  [VitalState.MEH]: <IconMeh color={vitalStateColors[VitalState.MEH]} />,\n  [VitalState.GOOD]: <IconHappy color={vitalStateColors[VitalState.GOOD]} />,\n};\n\nexport function vitalDetailRouteWithQuery({\n  orgSlug,\n  vitalName,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  vitalName: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateVitalDetailRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      vitalName,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport function vitalNameFromLocation(location: Location): WebVital {\n  const _vitalName = decodeScalar(location.query.vitalName);\n\n  const vitalName = Object.values(WebVital).find(v => v === _vitalName);\n\n  if (vitalName) {\n    return vitalName;\n  }\n  return WebVital.LCP;\n}\n\nexport function getVitalChartTitle(webVital: WebVital): string {\n  if (webVital === WebVital.CLS) {\n    return t('CLS p75');\n  }\n  return t('Duration p75');\n}\n\nexport function getVitalDetailTablePoorStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalPoor[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport function getVitalDetailTableMehStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalMeh[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport const vitalMap: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: 'First Contentful Paint',\n  [WebVital.CLS]: 'Cumulative Layout Shift',\n  [WebVital.FID]: 'First Input Delay',\n  [WebVital.LCP]: 'Largest Contentful Paint',\n};\n\nexport const vitalChartTitleMap = vitalMap;\n\nexport const vitalDescription: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]:\n    'First Contentful Paint (FCP) measures the amount of time the first content takes to render in the viewport. Like FP, this could also show up in any form from the document object model (DOM), such as images, SVGs, or text blocks. At the moment, there is support for FCP in the following browsers:',\n  [WebVital.CLS]:\n    'Cumulative Layout Shift (CLS) is the sum of individual layout shift scores for every unexpected element shift during the rendering process. Imagine navigating to an article and trying to click a link before the page finishes loading. Before your cursor even gets there, the link may have shifted down due to an image rendering. Rather than using duration for this Web Vital, the CLS score represents the degree of disruptive and visually unstable shifts. At the moment, there is support for CLS in the following browsers:',\n  [WebVital.FID]:\n    'First Input Delay (FID) measures the response time when the user tries to interact with the viewport. Actions maybe include clicking a button, link or other custom Javascript controller. It is key in helping the user determine if a page is usable or not. At the moment, there is support for FID in the following browsers:',\n  [WebVital.LCP]:\n    'Largest Contentful Paint (LCP) measures the render time for the largest content to appear in the viewport. This may be in any form from the document object model (DOM), such as images, SVGs, or text blocks. It’s the largest pixel area in the viewport, thus most visually defining. LCP helps developers understand how long it takes to see the main content on the page. At the moment, there is support for LCP in the following browsers:',\n};\n\nexport const vitalAbbreviations: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: 'FCP',\n  [WebVital.CLS]: 'CLS',\n  [WebVital.FID]: 'FID',\n  [WebVital.LCP]: 'LCP',\n};\n\nexport const vitalAlertTypes: Partial<Record<WebVital, AlertType>> = {\n  [WebVital.FCP]: 'custom',\n  [WebVital.CLS]: 'cls',\n  [WebVital.FID]: 'fid',\n  [WebVital.LCP]: 'lcp',\n};\n\nexport function getMaxOfSeries(series: Series[]) {\n  let max = -Infinity;\n  for (const {data} of series) {\n    for (const point of data) {\n      max = Math.max(max, point.value);\n    }\n  }\n  return max;\n}\n\nexport const vitalSupportedBrowsers: Partial<Record<WebVital, Browser[]>> = {\n  [WebVital.LCP]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FID]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n    Browser.IE,\n  ],\n  [WebVital.CLS]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FP]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FCP]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n  ],\n  [WebVital.TTFB]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n    Browser.IE,\n  ],\n};\n\nexport function getVitalChartDefinitions({\n  theme,\n  location,\n  vital,\n  yAxis,\n}: {\n  location: Location;\n  theme: Theme;\n  vital: string;\n  yAxis: string;\n}) {\n  const utc = decodeScalar(location.query.utc) !== 'false';\n\n  const vitalPoor = webVitalPoor[vital];\n  const vitalMeh = webVitalMeh[vital];\n\n  const legend = {\n    right: 10,\n    top: 0,\n    selected: getSeriesSelection(location),\n  };\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    grid: {\n      left: '5px',\n      right: '10px',\n      top: '35px',\n      bottom: '0px',\n    },\n    seriesOptions: {\n      showSymbol: false,\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: (value: number, seriesName?: string) =>\n        tooltipFormatter(\n          value,\n          aggregateOutputType(vital === WebVital.CLS ? seriesName : yAxis)\n        ),\n    },\n    yAxis: {\n      min: 0,\n      max: vitalPoor,\n      axisLabel: {\n        color: theme.chartLabel,\n        showMaxLabel: false,\n        // coerces the axis to be time based\n        formatter: (value: number) =>\n          axisLabelFormatter(value, aggregateOutputType(yAxis)),\n      },\n    },\n  };\n\n  const markLines = [\n    {\n      seriesName: 'Thresholds',\n      type: 'line' as const,\n      data: [],\n      markLine: MarkLine({\n        silent: true,\n        lineStyle: {\n          color: theme.red300,\n          type: 'dashed',\n          width: 1.5,\n        },\n        label: {\n          show: true,\n          position: 'insideEndTop',\n          formatter: t('Poor'),\n        },\n        data: [\n          {\n            yAxis: vitalPoor,\n          } as any, // TODO(ts): date on this type is likely incomplete (needs @types/echarts@4.6.2)\n        ],\n      }),\n    },\n    {\n      seriesName: 'Thresholds',\n      type: 'line' as const,\n      data: [],\n      markLine: MarkLine({\n        silent: true,\n        lineStyle: {\n          color: theme.yellow300,\n          type: 'dashed',\n          width: 1.5,\n        },\n        label: {\n          show: true,\n          position: 'insideEndTop',\n          formatter: t('Meh'),\n        },\n        data: [\n          {\n            yAxis: vitalMeh,\n          } as any, // TODO(ts): date on this type is likely incomplete (needs @types/echarts@4.6.2)\n        ],\n      }),\n    },\n  ];\n\n  return {\n    vitalPoor,\n    vitalMeh,\n    legend,\n    chartOptions,\n    markLines,\n    utc,\n  };\n}\n"],"names":["t","defined","formatBytesBase2","DAY","formatAbbreviatedNumber","formatPercentage","getDuration","HOUR","MINUTE","SECOND","WEEK","tooltipFormatter","value","outputType","tooltipFormatterUsingAggregateOutputType","type","toLocaleString","toString","axisLabelFormatter","abbreviation","durationUnit","axisLabelFormatterUsingAggregateOutputType","axisDuration","categorizeDuration","label","toFixed","findRangeOfMultiSeries","series","legend","range","data","minSeries","maxSeries","forEach","idx","seriesName","selected","length","max","Math","map","filter","min","getDurationUnit","avg","numOfDigits","TrendChangeType","TrendFunctionField","TrendColumnField","ASAP","moment","getInterval","generateFieldAsString","decodeScalar","theme","MutableSearch","platformToPerformanceType","PROJECT_PERFORMANCE_TYPE","DEFAULT_TRENDS_STATS_PERIOD","DEFAULT_MAX_DURATION","TRENDS_FUNCTIONS","field","P50","alias","legendLabel","P75","P95","P99","AVG","TRENDS_PARAMETERS","column","DURATION","LCP","FCP","FID","CLS","SPANS_HTTP","SPANS_DB","SPANS_BROWSER","SPANS_RESOURCE","trendToColor","IMPROVED","lighter","green200","default","green300","REGRESSION","red200","red300","trendSelectedQueryKeys","trendUnselectedSeries","trendCursorNames","resetCursors","cursors","Object","values","cursor","undefined","getCurrentTrendFunction","location","_trendFunctionField","trendFunctionField","query","trendFunction","find","getDefaultTrendParameter","projects","projectIds","performanceType","trendParameter","performanceTypeToTrendParameterLabel","getCurrentTrendParameter","trendParameterLabel","defaultTrendParameter","FRONTEND","ANY","BACKEND","FRONTEND_OTHER","generateTrendFunctionAsString","kind","function","transformDeltaSpread","from","to","fromSeconds","toSeconds","showDigits","getTrendProjectId","trend","project","transactionProject","slug","id","modifyTrendView","trendView","trendsType","isProjectOnly","transactionField","fields","trendSort","trendType","getLimitTransactionItems","interval","getQueryInterval","sorts","modifyTrendsViewDefaultPeriod","eventView","hasStartAndEnd","start","end","statsPeriod","intervalFromQueryParam","datetimeSelection","period","intervalFromSmoothing","transformValueDelta","absoluteValue","abs","changeLabel","seconds","fixedDigits","normalizeTrends","received_at","row","transaction","getSelectedQueryKey","trendChangeType","getUnselectedSeries","movingAverage","index","size","slice","a","reduce","b","limitQuery","hasFilter","addFilterValues","formatString","smoothTrend","resolution","replaceSeriesName","aggregate","includes","replaceSmoothedSeriesName","transformEventStatsSmoothed","minValue","Number","MAX_SAFE_INTEGER","maxValue","smoothedResults","current","currentData","resultData","smoothed","name","i","point","y","push","x","isNaN","rounded","round","lineStyle","color","browserHistory","ALL_ACCESS_PROJECTS","backend","frontend","mobile","trackAnalyticsEvent","statsPeriodToDays","EventView","TRACING_FIELDS","getCurrentSentryReactTransaction","QUERY_KEYS","UNPARAMETERIZED_TRANSACTION","UNPARAMETRIZED_TRANSACTION","EXCLUDE_METRICS_UNPARAM_CONDITIONS","SHOW_UNPARAM_BANNER","createUnnamedTransactionsDiscoverTarget","props","version","discoverEventView","fromNewQueryWithLocation","withSorts","target","getResultsViewUrlTarget","organization","FRONTEND_PLATFORMS","BACKEND_PLATFORMS","platform","MOBILE_PLATFORMS","selectedProjects","p","parseInt","some","every","MOBILE","platformAndConditionsToPerformanceType","conditions","ops","getFilterValues","op","isSummaryViewFrontendPageLoad","isSummaryViewFrontend","getPerformanceLandingUrl","getPerformanceTrendsUrl","getTransactionSearchQuery","trim","handleTrendsClick","projectPlatforms","eventKey","eventName","organization_id","view_name","project_platforms","trendsTargetRoute","initialConditions","additionalQuery","newQuery","modifiedConditions","setFilterValues","pathname","removeTracingKeysFromSearch","currentFilter","options","excludeTagKeys","Set","getFilterKeys","tagKey","searchKey","startsWith","substr","match","has","removeFilter","addRoutePerformanceContext","selection","days","datetime","oneDay","floor","setTag","groupedPeriod","getTransactionName","getPerformanceDuration","milliseconds","areMultipleProjectsSelected","getSelectedProjectPlatformsArray","projectQuery","selectedProjectIdSet","Array","isArray","selectedProjectPlatforms","acc","getSelectedProjectPlatforms","join","MarkLine","getSeriesSelection","IconHappy","IconMeh","IconSad","aggregateOutputType","getAggregateAlias","WebVital","Browser","generateVitalDetailRoute","orgSlug","webVitalPoor","FP","webVitalMeh","VitalState","vitalStateColors","POOR","MEH","GOOD","vitalStateIcons","vitalDetailRouteWithQuery","vitalName","projectID","environment","vitalNameFromLocation","_vitalName","v","getVitalChartTitle","webVital","getVitalDetailTablePoorStatusFunction","vitalThreshold","statusFunction","getVitalDetailTableMehStatusFunction","vitalMap","vitalChartTitleMap","vitalDescription","vitalAbbreviations","vitalAlertTypes","getMaxOfSeries","Infinity","vitalSupportedBrowsers","CHROME","EDGE","OPERA","FIREFOX","SAFARI","IE","TTFB","getVitalChartDefinitions","vital","yAxis","utc","vitalPoor","vitalMeh","right","top","chartOptions","grid","left","bottom","seriesOptions","showSymbol","tooltip","trigger","valueFormatter","axisLabel","chartLabel","showMaxLabel","formatter","markLines","markLine","silent","width","show","position","yellow300"],"sourceRoot":""}