{"version":3,"file":"chunks/app_views_settings_project_projectKeys_list_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/project/projectKeys/list/index.tsx","webpack:///./app/views/settings/project/projectKeys/list/keyRow.tsx"],"sourcesContent":["import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport {IconAdd, IconFlag} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nimport KeyRow from './keyRow';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  keyList: ProjectKey[];\n} & AsyncView['state'];\n\nclass ProjectKeys extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Client Keys'), projectId, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  /**\n   * Optimistically remove key\n   */\n  handleRemoveKey = async (data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n\n    this.setState(state => ({\n      keyList: state.keyList.filter(key => key.id !== data.id),\n    }));\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'DELETE',\n      });\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        keyList: oldKeyList,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  handleToggleKey = async (isActive: boolean, data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.setState(state => {\n      const keyList = state.keyList.map(key => {\n        if (key.id === data.id) {\n          return {\n            ...key,\n            isActive: !data.isActive,\n          };\n        }\n\n        return key;\n      });\n      return {keyList};\n    });\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'PUT',\n        data: {isActive},\n      });\n      addSuccessMessage(isActive ? t('Enabled key') : t('Disabled key'));\n    } catch (_err) {\n      addErrorMessage(isActive ? t('Error enabling key') : t('Error disabling key'));\n      this.setState({keyList: oldKeyList});\n    }\n  };\n\n  handleCreateKey = async () => {\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      const data: ProjectKey = await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/keys/`,\n        {\n          method: 'POST',\n        }\n      );\n\n      this.setState(state => ({\n        keyList: [...state.keyList, data],\n      }));\n      addSuccessMessage(t('Created a new key.'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to create new key. Please try again.'));\n    }\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage\n          icon={<IconFlag size=\"xl\" />}\n          description={t('There are no keys active for this project.')}\n        />\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {location, organization, routes, params} = this.props;\n    const {orgId, projectId} = params;\n    const access = new Set(organization.access);\n\n    return (\n      <Fragment>\n        {this.state.keyList.map(key => (\n          <KeyRow\n            api={this.api}\n            access={access}\n            key={key.id}\n            orgId={orgId}\n            projectId={`${projectId}`}\n            data={key}\n            onToggle={this.handleToggleKey}\n            onRemove={this.handleRemoveKey}\n            routes={routes}\n            location={location}\n            params={params}\n          />\n        ))}\n        <Pagination pageLinks={this.state.keyListPageLinks} />\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const access = new Set(this.props.organization.access);\n    const isEmpty = !this.state.keyList.length;\n\n    return (\n      <div data-test-id=\"project-keys\">\n        <SettingsPageHeader\n          title={t('Client Keys')}\n          action={\n            access.has('project:write') ? (\n              <Button\n                onClick={this.handleCreateKey}\n                size=\"sm\"\n                priority=\"primary\"\n                icon={<IconAdd size=\"xs\" isCircled />}\n              >\n                {t('Generate New Key')}\n              </Button>\n            ) : null\n          }\n        />\n        <TextBlock>\n          {tct(\n            `To send data to Sentry you will need to configure an SDK with a client key\n          (usually referred to as the [code:SENTRY_DSN] value). For more\n          information on integrating Sentry with your application take a look at our\n          [link:documentation].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/configuration/options/\" />\n              ),\n              code: <code />,\n            }\n          )}\n        </TextBlock>\n\n        {isEmpty ? this.renderEmpty() : this.renderResults()}\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ProjectKeys);\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport ClippedBox from 'sentry/components/clippedBox';\nimport Confirm from 'sentry/components/confirm';\nimport Link from 'sentry/components/links/link';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Scope} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport ProjectKeyCredentials from 'sentry/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  access: Set<Scope>;\n  api: Client;\n  data: ProjectKey;\n  onRemove: (data: ProjectKey) => void;\n  onToggle: (isActive: boolean, data: ProjectKey) => void;\n  orgId: string;\n  projectId: string;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nclass KeyRow extends Component<Props> {\n  handleRemove = () => {\n    const {data, onRemove} = this.props;\n    onRemove(data);\n  };\n\n  handleEnable = () => {\n    const {onToggle, data} = this.props;\n    onToggle(true, data);\n  };\n\n  handleDisable = () => {\n    const {onToggle, data} = this.props;\n    onToggle(false, data);\n  };\n\n  render() {\n    const {access, data, routes, location, params} = this.props;\n    const editUrl = recreateRoute(`${data.id}/`, {routes, params, location});\n    const controlActive = access.has('project:write');\n\n    const controls = [\n      <Button key=\"edit\" to={editUrl} size=\"sm\">\n        {t('Configure')}\n      </Button>,\n      <Button\n        key=\"toggle\"\n        size=\"sm\"\n        onClick={data.isActive ? this.handleDisable : this.handleEnable}\n        disabled={!controlActive}\n      >\n        {data.isActive ? t('Disable') : t('Enable')}\n      </Button>,\n      <Confirm\n        key=\"remove\"\n        priority=\"danger\"\n        disabled={!controlActive}\n        onConfirm={this.handleRemove}\n        confirmText={t('Remove Key')}\n        message={t(\n          'Are you sure you want to remove this key? This action is irreversible.'\n        )}\n      >\n        <Button\n          size=\"sm\"\n          disabled={!controlActive}\n          icon={<IconDelete />}\n          aria-label={t('Delete')}\n        />\n      </Confirm>,\n    ];\n\n    return (\n      <Panel>\n        <PanelHeader hasButtons>\n          <Title disabled={!data.isActive}>\n            <PanelHeaderLink to={editUrl}>{data.label}</PanelHeaderLink>\n            {!data.isActive && (\n              <small>\n                {' \\u2014  '}\n                {t('Disabled')}\n              </small>\n            )}\n          </Title>\n          <Controls>\n            {controls.map((c, n) => (\n              <span key={n}> {c}</span>\n            ))}\n          </Controls>\n        </PanelHeader>\n\n        <StyledClippedBox clipHeight={300} defaultClipped btnText={t('Expand')}>\n          <StyledPanelBody disabled={!data.isActive}>\n            <ProjectKeyCredentials projectId={`${data.projectId}`} data={data} />\n          </StyledPanelBody>\n        </StyledClippedBox>\n      </Panel>\n    );\n  }\n}\n\nexport default KeyRow;\n\nconst StyledClippedBox = styled(ClippedBox)`\n  padding: 0;\n  margin: 0;\n  > *:last-child {\n    padding-bottom: ${space(3)};\n  }\n`;\n\nconst PanelHeaderLink = styled(Link)`\n  color: ${p => p.theme.subText};\n`;\n\nconst Title = styled('div')<{disabled: boolean}>`\n  flex: 1;\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n  margin-right: ${space(1)};\n`;\n\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(1)};\n  grid-auto-flow: column;\n`;\n\nconst StyledPanelBody = styled(PanelBody)<{disabled: boolean}>`\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n`;\n"],"names":["findLastIndex","replaceRouterParams","recreateRoute","to","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","slice","baseRoute","search","hash","fullRoute","join","routeTitleGen","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","Fragment","addErrorMessage","addLoadingMessage","addSuccessMessage","Button","ExternalLink","Pagination","Panel","IconAdd","IconFlag","t","tct","withOrganization","AsyncView","EmptyMessage","SettingsPageHeader","TextBlock","KeyRow","ProjectKeys","data","oldKeyList","state","keyList","setState","filter","key","id","orgId","projectId","props","api","requestPromise","method","_err","isActive","getTitle","getEndpoints","renderEmpty","renderResults","organization","access","Set","handleToggleKey","handleRemoveKey","keyListPageLinks","renderBody","isEmpty","length","has","handleCreateKey","link","code","Component","ClippedBox","Confirm","Link","PanelBody","PanelHeader","IconDelete","space","ProjectKeyCredentials","onRemove","onToggle","render","editUrl","controlActive","controls","handleDisable","handleEnable","handleRemove","label","c","n","StyledClippedBox","PanelHeaderLink","p","theme","subText","Title","disabled","Controls","StyledPanelBody"],"sourceRoot":""}