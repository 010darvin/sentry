{"version":3,"file":"chunks/app_components_featureFeedback_feedbackModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,MAAMuB,cAAc,GAAG,IAAInB,yDAAJ,CAAkB;EACvC;EACAoB,GAAG,EAAE,sEAFkC;EAGvCC,SAAS,EAAElB,8DAH4B;EAIvCmB,WAAW,EAAEpB,8DAJ0B;EAKvCqB,YAAY,EAAEtB,+DAAmBA;AALM,CAAlB,CAAvB;AAQA,MAAMuB,oBAAoB,GAAG,CAC3BhB,gDAAC,CAAC,2BAAD,CAD0B,EAE3BA,gDAAC,CAAC,qBAAD,CAF0B,EAG3BA,gDAAC,CAAC,cAAD,CAH0B,CAA7B;AAeO,SAASiB,aAAT,OAOG;EAAA,IAPoB;IAC5BC,MAD4B;IAE5BC,IAF4B;IAG5BC,MAH4B;IAI5BC,UAJ4B;IAK5BC,aAAa,GAAGN,oBALY;IAM5BO;EAN4B,CAOpB;EACR,MAAM;IAACC;EAAD,IAAiBpB,4EAAc,CAACD,uEAAD,CAArC;EACA,MAAM;IAACsB,QAAD;IAAWC,eAAe,EAAEC;EAA5B,IAA8CpB,qEAAW,EAA/D;EACA,MAAMqB,QAAQ,GAAGtB,sEAAW,EAA5B;EACA,MAAM;IAACuB,IAAD;IAAOC;EAAP,IAAuB5B,2EAAA,EAA7B;EAEA,MAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB3C,+CAAQ,CAAQ;IACxC4C,OAAO,EAAEC,SAD+B;IAExCC,cAAc,EAAED;EAFwB,CAAR,CAAlC;EAKA,MAAME,OAAO,GAAGhD,8CAAO,CAAC,MAAM;IAC5B,IAAIsC,cAAc,IAAIC,QAAQ,CAACU,KAAT,CAAeD,OAArC,EAA8C;MAC5C,OAAOZ,QAAQ,CAACc,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASb,QAAQ,CAACU,KAAT,CAAeD,OAA3C,CAAP;IACD;;IACD,OAAOF,SAAP;EACD,CALsB,EAKpB,CAACR,cAAD,EAAiBF,QAAjB,EAA2BG,QAAQ,CAACU,KAAT,CAAeD,OAA1C,CALoB,CAAvB;;EAOA,SAASK,YAAT,GAAwB;IAAA;;IACtB,MAAM;MAACR,OAAD;MAAUE;IAAV,IAA4BJ,KAAlC;;IAEA,IAAI,CAAC3B,sDAAO,CAAC6B,OAAD,CAAZ,EAAuB;MACrB;IACD;;IAEDvB,cAAc,CAACgC,YAAf,CAA4B;MAC1BC,OAAO,EAAER,cAAc,SAAd,IAAAA,cAAc,WAAd,IAAAA,cAAc,CAAES,IAAhB,KACJ,aAAYvB,aAAa,CAACY,OAAD,CAAU,MAAKE,cAAe,EADnD,GAEJ,aAAYd,aAAa,CAACY,OAAD,CAAU,EAHd;MAI1BY,OAAO,EAAE;QACPC,GAAG,EAAEnB,QAAQ,CAACoB;MADP,CAJiB;MAO1BC,KAAK,EAAE;QACLC,WAAW,2BAAE1B,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE2B,QAAhB,yEAA4B,EADlC;QAELC,SAAS,0BAAE5B,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE6B,MAAhB,uEAA0B,EAF9B;QAGLC,eAAe,uBAAEjB,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEc,QAAX,iEAAuB;MAHjC,CAPmB;MAY1BI,IAAI,EAAE;QACJhC;MADI,CAZoB;MAe1BM,IAf0B;MAgB1B2B,KAAK,EAAE;IAhBmB,CAA5B;IAmBA5D,kFAAiB,CAACI,gDAAC,CAAC,oDAAD,CAAF,CAAjB;IAEAqB,UAAU;EACX;;EAED,OACE,kEAAC,2CAAD;IAAA,WACE,iEAAC,MAAD;MAAQ,WAAW,MAAnB;MAAA,UACE;QAAA,UAAKrB,gDAAC,CAAC,iBAAD;MAAN;IADF,EADF,EAIE,kEAAC,IAAD;MAAA,WACE,iEAAC,2EAAD;QACE,KAAK,EAAEA,gDAAC,CAAC,kBAAD,CADV;QAEE,IAAI,EAAC,SAFP;QAGE,MAAM,EAAE,KAHV;QAIE,OAAO,EAAEsB,aAAa,CAACmC,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,MAA0B;UACnDC,KAAK,EAAED,KAD4C;UAEnDE,KAAK,EAAEH;QAF4C,CAA1B,CAAlB,CAJX;QAQE,WAAW,EAAE1D,gDAAC,CAAC,yBAAD,CARhB;QASE,KAAK,EAAEgC,KAAK,CAACE,OATf;QAUE,QAAQ,EAAE0B,KAAK,IAAI3B,QAAQ,CAAC,EAAC,GAAGD,KAAJ;UAAWE,OAAO,EAAE0B;QAApB,CAAD,CAV7B;QAWE,wBAAwB,MAX1B;QAYE,OAAO,MAZT;QAaE,QAAQ;MAbV,EADF,EAgBE,iEAAC,qDAAD;QACE,KAAK,EAAE5D,gDAAC,CAAC,qBAAD,CADV;QAEE,MAAM,EAAE,KAFV;QAGE,QAAQ,EAAE,KAHZ;QAIE,wBAAwB,MAJ1B;QAKE,OAAO,MALT;QAAA,UAOE,iEAAC,iFAAD;UACE,IAAI,EAAC,qBADP;UAEE,KAAK,EAAEgC,KAAK,CAACI,cAFf;UAGE,IAAI,EAAE,CAHR;UAIE,QAAQ,MAJV;UAKE,WAAW,EAAEpC,gDAAC,CAAC,sBAAD,CALhB;UAME,QAAQ,EAAE8D,KAAK,IACb7B,QAAQ,CAAC,EACP,GAAGD,KADI;YAEPI,cAAc,EAAE0B,KAAK,CAACC,MAAN,CAAaH;UAFtB,CAAD;QAPZ;MAPF,EAhBF,EAqCG9B,YAAY,IACX;QAAA,UACG7B,kDAAG,CACF,kKADE,EAEF;UACE+D,aAAa,EAAE,iEAAC,4DAAD;YAAc,IAAI,EAAC;UAAnB;QADjB,CAFE;MADN,EAtCJ;IAAA,EAJF,EAoDE,iEAAC,MAAD;MAAA,UACE,kEAAC,mDAAD;QAAW,GAAG,EAAE,CAAhB;QAAA,WACE,iEAAC,gEAAD;UAAQ,OAAO,EAAE3C,UAAjB;UAAA,UAA8BrB,gDAAC,CAAC,QAAD;QAA/B,EADF,EAEE,iEAAC,gEAAD;UACE,QAAQ,EAAC,SADX;UAEE,OAAO,EAAE0C,YAFX;UAGE,QAAQ,EAAE,CAACrC,sDAAO,CAAC2B,KAAK,CAACE,OAAP,CAHpB;UAAA,UAKGlC,gDAAC,CAAC,iBAAD;QALJ,EAFF;MAAA;IADF,EApDF;EAAA,EADF;AAmED;AA3HeiB;AA6HT,MAAMgD,QAAQ,GAAG;EAAH;EAAA;AAAA,KAAd;;;;;;;;;;;;;;;AC5KP;AAMO,SAAS3D,WAAT,GAAoE;EACzE,MAAM6D,KAAK,GAAGD,6EAAe,EAA7B;EACA,OAAOC,KAAK,CAACvC,QAAb;AACD;;;;;;;;;;;;;;;;;;;ACXD;AAEA;AAEO,SAASsC,eAAT,GAA2B;EAChC,MAAMC,KAAK,GAAGC,iDAAU,CAACC,mEAAD,CAAxB;;EACA,IAAIF,KAAK,KAAK,IAAd,EAAoB;IAClB,MAAM,IAAIG,KAAJ,CAAW,mDAAX,CAAN;EACD;;EACD,OAAOH,KAAP;AACD;;;;;;;;;;;;;;;ACVD;AAGA;AACO,MAAME,YAAY,gBAAGE,oDAAa,CAA+B,IAA/B,CAAlC","sources":["webpack:///./app/components/featureFeedback/feedbackModal.tsx","webpack:///./app/utils/useLocation.tsx","webpack:///./app/utils/useRouteContext.tsx","webpack:///./app/views/routeContext.tsx"],"sourcesContent":["import {Fragment, useMemo, useState} from 'react';\nimport {css} from '@emotion/react';\nimport {\n  BrowserClient,\n  defaultIntegrations,\n  defaultStackParser,\n  makeFetchTransport,\n} from '@sentry/react';\n\nimport {addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport Textarea from 'sentry/components/forms/controls/textarea';\nimport SelectField from 'sentry/components/forms/selectField';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {defined} from 'sentry/utils';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport ButtonBar from '../buttonBar';\nimport Field from '../forms/field';\nimport ExternalLink from '../links/externalLink';\n\nconst feedbackClient = new BrowserClient({\n  // feedback project under Sentry organization\n  dsn: 'https://3c5ef4e344a04a0694d187a1272e96de@o1.ingest.sentry.io/6356259',\n  transport: makeFetchTransport,\n  stackParser: defaultStackParser,\n  integrations: defaultIntegrations,\n});\n\nconst defaultFeedbackTypes = [\n  t(\"I don't like this feature\"),\n  t('I like this feature'),\n  t('Other reason'),\n];\n\nexport interface FeedBackModalProps {\n  featureName: string;\n  feedbackTypes?: string[];\n}\n\ninterface Props extends FeedBackModalProps, ModalRenderProps {}\n\ntype State = {additionalInfo?: string; subject?: number};\n\nexport function FeedbackModal({\n  Header,\n  Body,\n  Footer,\n  closeModal,\n  feedbackTypes = defaultFeedbackTypes,\n  featureName,\n}: Props) {\n  const {organization} = useLegacyStore(OrganizationStore);\n  const {projects, initiallyLoaded: projectsLoaded} = useProjects();\n  const location = useLocation();\n  const {user, isSelfHosted} = ConfigStore.getConfig();\n\n  const [state, setState] = useState<State>({\n    subject: undefined,\n    additionalInfo: undefined,\n  });\n\n  const project = useMemo(() => {\n    if (projectsLoaded && location.query.project) {\n      return projects.find(p => p.id === location.query.project);\n    }\n    return undefined;\n  }, [projectsLoaded, projects, location.query.project]);\n\n  function handleSubmit() {\n    const {subject, additionalInfo} = state;\n\n    if (!defined(subject)) {\n      return;\n    }\n\n    feedbackClient.captureEvent({\n      message: additionalInfo?.trim()\n        ? `Feedback: ${feedbackTypes[subject]} - ${additionalInfo}`\n        : `Feedback: ${feedbackTypes[subject]}`,\n      request: {\n        url: location.pathname,\n      },\n      extra: {\n        orgFeatures: organization?.features ?? [],\n        orgAccess: organization?.access ?? [],\n        projectFeatures: project?.features ?? [],\n      },\n      tags: {\n        featureName,\n      },\n      user,\n      level: 'info',\n    });\n\n    addSuccessMessage(t('Thanks for taking the time to provide us feedback!'));\n\n    closeModal();\n  }\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h3>{t('Submit Feedback')}</h3>\n      </Header>\n      <Body>\n        <SelectField\n          label={t('Type of feedback')}\n          name=\"subject\"\n          inline={false}\n          options={feedbackTypes.map((feedbackType, index) => ({\n            value: index,\n            label: feedbackType,\n          }))}\n          placeholder={t('Select type of feedback')}\n          value={state.subject}\n          onChange={value => setState({...state, subject: value})}\n          flexibleControlStateSize\n          stacked\n          required\n        />\n        <Field\n          label={t('Additional feedback')}\n          inline={false}\n          required={false}\n          flexibleControlStateSize\n          stacked\n        >\n          <Textarea\n            name=\"additional-feedback\"\n            value={state.additionalInfo}\n            rows={5}\n            autosize\n            placeholder={t('What did you expect?')}\n            onChange={event =>\n              setState({\n                ...state,\n                additionalInfo: event.target.value,\n              })\n            }\n          />\n        </Field>\n        {isSelfHosted && (\n          <p>\n            {tct(\n              \"You agree that any feedback you submit is subject to Sentry's [privacyPolicy:Privacy Policy] and Sentry may use such feedback without restriction or obligation.\",\n              {\n                privacyPolicy: <ExternalLink href=\"https://sentry.io/privacy/\" />,\n              }\n            )}\n          </p>\n        )}\n      </Body>\n      <Footer>\n        <ButtonBar gap={1}>\n          <Button onClick={closeModal}>{t('Cancel')}</Button>\n          <Button\n            priority=\"primary\"\n            onClick={handleSubmit}\n            disabled={!defined(state.subject)}\n          >\n            {t('Submit Feedback')}\n          </Button>\n        </ButtonBar>\n      </Footer>\n    </Fragment>\n  );\n}\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 680px;\n`;\n","import {Location, Query} from 'history';\n\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\n\ntype DefaultQuery<T = string> = {\n  [key: string]: T | T[] | null | undefined;\n};\n\nexport function useLocation<Q extends Query = DefaultQuery>(): Location<Q> {\n  const route = useRouteContext();\n  return route.location;\n}\n","import {useContext} from 'react';\n\nimport {RouteContext} from 'sentry/views/routeContext';\n\nexport function useRouteContext() {\n  const route = useContext(RouteContext);\n  if (route === null) {\n    throw new Error(`useRouteContext called outside of routes provider`);\n  }\n  return route;\n}\n","import {createContext} from 'react';\nimport {RouteContextInterface} from 'react-router';\n\n// TODO(nisanthan): Better types. Context will be the `props` arg from the RouterProps render method. This is typed as `any` by react-router\nexport const RouteContext = createContext<RouteContextInterface | null>(null);\n"],"names":["Fragment","useMemo","useState","css","BrowserClient","defaultIntegrations","defaultStackParser","makeFetchTransport","addSuccessMessage","Button","Textarea","SelectField","t","tct","ConfigStore","OrganizationStore","useLegacyStore","defined","useLocation","useProjects","ButtonBar","Field","ExternalLink","feedbackClient","dsn","transport","stackParser","integrations","defaultFeedbackTypes","FeedbackModal","Header","Body","Footer","closeModal","feedbackTypes","featureName","organization","projects","initiallyLoaded","projectsLoaded","location","user","isSelfHosted","getConfig","state","setState","subject","undefined","additionalInfo","project","query","find","p","id","handleSubmit","captureEvent","message","trim","request","url","pathname","extra","orgFeatures","features","orgAccess","access","projectFeatures","tags","level","map","feedbackType","index","value","label","event","target","privacyPolicy","modalCss","useRouteContext","route","useContext","RouteContext","Error","createContext"],"sourceRoot":""}