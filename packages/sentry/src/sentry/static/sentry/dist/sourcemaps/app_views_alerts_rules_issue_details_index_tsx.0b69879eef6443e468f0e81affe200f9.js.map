{"version":3,"file":"chunks/app_views_alerts_rules_issue_details_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;;;AAOA,SAASK,oBAAT,OAAyD;EAAA,IAA3B;IAACC,QAAD;IAAWC;EAAX,CAA2B;EACvD,MAAMC,YAAY,GAAGL,wEAAe,EAApC;EACA,MAAM;IAACM,QAAD;IAAWC;EAAX,IAAuBN,oEAAW,CAAC;IAACO,KAAK,EAAE,CAACJ,MAAM,CAACK,SAAR;EAAR,CAAD,CAAxC,CAFuD,CAIvD;;EACA,IAAIF,QAAJ,EAAc;IACZ,OAAO,gEAAC,0EAAD,KAAP;EACD;;EAED,OAAOJ,QAAQ,iBAAIL,qDAAc,CAACK,QAAD,CAA1B,gBACHN,mDAAY,CAACM,QAAD,EAAW;IACrBE,YADqB;IAErBK,OAAO,EAAEJ,QAAQ,CAAC,CAAD;EAFI,CAAX,CADT,GAKH,IALJ;AAMD;;AAED,iEAAeJ,oBAAf","sources":["webpack:///./app/views/alerts/rules/issue/details/index.tsx"],"sourcesContent":["import {cloneElement, isValidElement} from 'react';\nimport type {RouteComponentProps} from 'react-router';\n\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\ninterface Props\n  extends RouteComponentProps<{orgId: string; projectId: string; ruleId: string}, {}> {\n  children?: React.ReactNode;\n}\n\nfunction RuleDetailsContainer({children, params}: Props) {\n  const organization = useOrganization();\n  const {projects, fetching} = useProjects({slugs: [params.projectId]});\n\n  // Should almost never need to fetch project\n  if (fetching) {\n    return <LoadingIndicator />;\n  }\n\n  return children && isValidElement(children)\n    ? cloneElement(children, {\n        organization,\n        project: projects[0],\n      })\n    : null;\n}\n\nexport default RuleDetailsContainer;\n"],"names":["cloneElement","isValidElement","LoadingIndicator","useOrganization","useProjects","RuleDetailsContainer","children","params","organization","projects","fetching","slugs","projectId","project"],"sourceRoot":""}