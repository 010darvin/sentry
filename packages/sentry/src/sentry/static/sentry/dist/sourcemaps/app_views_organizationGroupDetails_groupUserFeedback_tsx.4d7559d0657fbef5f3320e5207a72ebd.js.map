{"version":3,"file":"chunks/app_views_organizationGroupDetails_groupUserFeedback_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;AAqBA,MAAMU,iBAAN,SAAgCV,4CAAhC,CAAwD;EAAA;IAAA;;IAAA,iGACvC;MACbW,OAAO,EAAE,IADI;MAEbC,KAAK,EAAE,KAFM;MAGbC,UAAU,EAAE,EAHC;MAIbC,SAAS,EAAE;IAJE,CADuC;;IAAA,qGAsB1C,MAAM;MAChB,KAAKC,QAAL,CAAc;QACZJ,OAAO,EAAE,IADG;QAEZC,KAAK,EAAE;MAFK,CAAd;MAKAH,8DAAqB,CAAC,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,EAAlB,EAAsB,EACzC,GAAG,KAAKF,KAAL,CAAWG,MAD2B;QAEzCC,MAAM,EAAE,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,KAApB,CAA0BF,MAA1B,IAAoC;MAFH,CAAtB,CAArB,CAIGG,IAJH,CAIQ,QAAqB;QAAA,IAApB,CAACC,IAAD,EAAOC,CAAP,EAAUC,IAAV,CAAoB;QACzB,KAAKX,QAAL,CAAc;UACZH,KAAK,EAAE,KADK;UAEZD,OAAO,EAAE,KAFG;UAGZE,UAAU,EAAEW,IAHA;UAIZV,SAAS,EAAEY,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEC,iBAAN,CAAwB,MAAxB;QAJC,CAAd;MAMD,CAXH,EAYGC,KAZH,CAYS,MAAM;QACX,KAAKb,QAAL,CAAc;UACZH,KAAK,EAAE,IADK;UAEZD,OAAO,EAAE;QAFG,CAAd;MAID,CAjBH;IAkBD,CA9CqD;EAAA;;EAQtDkB,iBAAiB,GAAG;IAClB,KAAKC,SAAL;EACD;;EAEDC,kBAAkB,CAACC,SAAD,EAAmB;IACnC,IACE,CAAC/B,qDAAO,CAAC+B,SAAS,CAACb,MAAX,EAAmB,KAAKH,KAAL,CAAWG,MAA9B,CAAR,IACAa,SAAS,CAACX,QAAV,CAAmBY,QAAnB,KAAgC,KAAKjB,KAAL,CAAWK,QAAX,CAAoBY,QADpD,IAEAD,SAAS,CAACX,QAAV,CAAmBa,MAAnB,KAA8B,KAAKlB,KAAL,CAAWK,QAAX,CAAoBa,MAHpD,EAIE;MACA,KAAKJ,SAAL;IACD;EACF;;EA4BDK,MAAM,GAAG;IACP,MAAM;MAACtB,UAAD;MAAaF,OAAb;MAAsBC;IAAtB,IAA+B,KAAKwB,KAA1C;IACA,MAAM;MAACC,YAAD;MAAepB;IAAf,IAAwB,KAAKD,KAAnC;;IAEA,IAAIL,OAAJ,EAAa;MACX,OAAO,iEAAC,0EAAD,KAAP;IACD;;IAED,IAAIC,KAAJ,EAAW;MACT,OAAO,iEAAC,sEAAD;QAAc,OAAO,EAAE,KAAKkB;MAA5B,EAAP;IACD;;IAED,IAAIjB,UAAU,CAACyB,MAAf,EAAuB;MACrB,OACE,iEAAC,kEAAD;QAAA,UACE,kEAAC,kEAAD;UAAA,WACGzB,UAAU,CAAC0B,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,KACd,iEAAC,6EAAD;YAEE,MAAM,EAAED,IAFV;YAGE,KAAK,EAAEH,YAAY,CAACK,IAHtB;YAIE,OAAO,EAAEzB,KAAK,CAACC;UAJjB,GACOuB,GADP,CADD,CADH,EASE,iEAAC,oEAAD;YAAY,SAAS,EAAE,KAAKL,KAAL,CAAWtB,SAAlC;YAAA,GAAiD,KAAKE;UAAtD,EATF;QAAA;MADF,EADF;IAeD;;IAED,OACE,iEAAC,kEAAD;MAAA,UACE,iEAAC,kEAAD;QAAa,SAAS,MAAtB;QAAA,UACE,iEAAC,2FAAD;UAAmB,UAAU,EAAE,CAACC,KAAK,CAAC0B,OAAN,CAAczB,EAAf;QAA/B;MADF;IADF,EADF;EAOD;;AArFqD;;AAAlDR;AAwFN,iEAAeH,yEAAgB,CAACG,iBAAD,CAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;AAEA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeuC,eAAf,CACLC,GADK,EAELC,KAFK,EAGLC,OAHK,EAILC,OAJK,EAKLC,QALK,EAMLC,SANK,EAOW;EAChB,MAAMC,GAAG,GACPH,OAAO,KAAK,QAAZ,IAAwBA,OAAO,KAAK,QAApC,GACK,WAAUD,OAAQ,WAAUC,OAAQ,GADzC,GAEK,aAAYF,KAAM,IAAGI,SAAU,WAAUF,OAAQ,GAHxD;EAKA,MAAM/B,KAA+B,GAAG,EAAxC;;EACA,IAAIgC,QAAQ,CAAChB,MAAT,KAAoB,CAAxB,EAA2B;IACzBhB,KAAK,CAACmC,WAAN,GAAoBH,QAApB;EACD;;EAED,MAAM9B,IAAI,GAAG,MAAM0B,GAAG,CAACQ,cAAJ,CAAmBF,GAAnB,EAAwB;IAAClC;EAAD,CAAxB,CAAnB;EACA,OAAOE,IAAP;AACD;AAEM,SAASmC,aAAT,CACLT,GADK,EAELC,KAFK,EAGLI,SAHK,EAILH,OAJK,EAKL;EACAP,uEAAU,CACRK,GADQ,EAER;IACEC,KADF;IAEEI,SAFF;IAGEK,OAAO,EAAE,CAACR,OAAD,CAHX;IAIES,YAAY,EAAE,IAJhB;IAKErC,IAAI,EAAE;MAACsC,OAAO,EAAE;IAAV;EALR,CAFQ,EASR,EATQ,CAAV;AAWD;AAEM,SAASrD,qBAAT,CAA+B2C,OAA/B,EAAgD9B,KAAhD,EAA+E;EACpF,MAAM4B,GAAG,GAAG,IAAIJ,8CAAJ,EAAZ;EAEA,OAAOI,GAAG,CAACQ,cAAJ,CAAoB,WAAUN,OAAQ,gBAAtC,EAAuD;IAC5DW,cAAc,EAAE,IAD4C;IAE5DzC;EAF4D,CAAvD,CAAP;AAID;AAED;AACA;AACA;AACA;AACA;;AACO,SAAS0C,mBAAT,CAA6BC,KAA7B,EAA2C;EAChD,MAAMC,GAAG,GAAGD,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgB;IAAA,IAAC;MAACC;IAAD,CAAD;IAAA,OAAWA,GAAG,KAAK,aAAnB;EAAA,CAAhB,CAAZ;EAEA,OAAOH,GAAG,GAAGA,GAAG,CAACI,KAAP,GAAe,IAAzB;AACD;AAED,MAAMC,oBAAoB,GAAG;EAC3BC,SAAS,EAAEzB,gDAAC,CACV,mFADU,CADe;EAI3B0B,QAAQ,EAAE1B,gDAAC,CACT,kFADS,CAJgB;EAO3B2B,UAAU,EAAE3B,gDAAC,CACX,iFADW,CAPc;EAU3B4B,cAAc,EAAE5B,gDAAC,CACf,4FADe,CAVU;EAa3B6B,SAAS,EAAE7B,gDAAC,CACV,wFADU;AAbe,CAA7B;AAkBA;AACA;AACA;AACA;AACA;;AACO,SAAS8B,qBAAT,CAA+B5D,KAA/B,EAAkE;EAAA,IAArB6D,WAAqB,uEAAP,KAAO;;EACvE,IAAI7D,KAAK,CAAC8D,mBAAN,IAA6B9D,KAAK,CAAC8D,mBAAN,CAA0BC,QAA3D,EAAqE;IACnE,OAAOhC,kDAAG,CAAC,mEAAD,EAAsE;MAC9EiC,IAAI,EAAEH,WAAW,GAAG,2EAAH,GAAc;QAAG,IAAI,EAAC;MAAR;IAD+C,CAAtE,CAAV;EAGD;;EAED,IAAI,CAAC7D,KAAK,CAACiE,YAAX,EAAyB;IACvB,OAAOnC,gDAAC,CAAC,oDAAD,CAAR;EACD;;EAED,IAAI9B,KAAK,CAAC8D,mBAAV,EAA+B;IAC7B,MAAM;MAACI;IAAD,IAAWlE,KAAK,CAAC8D,mBAAvB;;IACA,IAAII,MAAM,KAAK,SAAf,EAA0B;MACxB,OAAOpC,gDAAC,CACN,mFADM,CAAR;IAGD;;IAED,IAAIoC,MAAM,IAAIZ,oBAAoB,CAACa,cAArB,CAAoCD,MAApC,CAAd,EAA2D;MACzD,OAAOZ,oBAAoB,CAACY,MAAD,CAA3B;IACD;EACF;;EAED,OAAOnC,kDAAG,CACR,wGADQ,EAER;IACEiC,IAAI,EAAEH,WAAW,GAAG,2EAAH,GAAc;MAAG,IAAI,EAAC;IAAR;EADjC,CAFQ,CAAV;AAMD;AAEM,SAASO,0BAAT,CAAoCC,UAApC,EAAiE;EACtE;EACA,OAAO1C,qDAAO,CAAC,CAAC,GAAG0C,UAAJ,CAAD,EAAkB;IAAA,IAAC;MAACC;IAAD,CAAD;IAAA,OAAmB,IAAIC,IAAJ,CAASD,WAAT,CAAnB;EAAA,CAAlB,EAA4D,CAAC,MAAD,CAA5D,CAAP,CAA6E,CAA7E,CAAP;AACD;AAEM,IAAKE,kBAAZ,EAOA;;WAPYA;EAAAA;EAAAA;EAAAA;EAAAA;GAAAA,uBAAAA;;AAQL,SAASC,0BAAT,CACLzE,KADK,EAEL0E,kBAFK,EAGL;EACA,MAAM;IAACC,MAAD;IAASC,KAAT;IAAgBC,QAAQ,EAAER;EAA1B,IAAwCrE,KAA9C;EACA,MAAM8E,UAAU,GAAGC,MAAM,CAACH,KAAD,CAAzB;;EAEA,QAAQD,MAAR;IACE,KAAK,cAAL;MACE,OAAOH,kBAAkB,CAACQ,YAA1B;;IACF,KAAK,YAAL;MAAmB;QACjB,MAAMC,uBAAuB,GAC3BP,kBAD2B,aAC3BA,kBAD2B,cAC3BA,kBAD2B,GACLN,0BAA0B,CAACC,UAAD,CADlD;;QAEA,IAAI,CAAAY,uBAAuB,SAAvB,IAAAA,uBAAuB,WAAvB,YAAAA,uBAAuB,CAAEC,IAAzB,MAAkC,WAAtC,EAAmD;UACjD,IAAIJ,UAAU,KAAK,CAAnB,EAAsB;YACpB,OAAON,kBAAkB,CAACW,2BAA1B;UACD;;UACD,OAAOX,kBAAkB,CAACY,yBAA1B;QACD;;QACD,OAAOZ,kBAAkB,CAACa,SAA1B;MACD;;IACD;MACE,OAAOb,kBAAkB,CAACa,SAA1B;EAfJ;AAiBD;;;;;;;;;;AC1KD,kBAAkB,mBAAO,CAAC,8DAAgB;AAC1C,cAAc,mBAAO,CAAC,oDAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,sCAAsC;AACjD;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,OAAO,6BAA6B;AACpC,OAAO,6BAA6B;AACpC,OAAO,6BAA6B;AACpC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack:///./app/views/organizationGroupDetails/groupUserFeedback.tsx","webpack:///./app/views/organizationGroupDetails/utils.tsx","webpack:///../node_modules/lodash/orderBy.js"],"sourcesContent":["import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport isEqual from 'lodash/isEqual';\n\nimport EventUserFeedback from 'sentry/components/events/userFeedback';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Group, Organization, Project, UserReport} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {UserFeedbackEmpty} from 'sentry/views/userFeedback/userFeedbackEmpty';\n\nimport {fetchGroupUserReports} from './utils';\n\ntype RouteParams = {\n  groupId: string;\n  orgId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  environments: string[];\n  group: Group;\n  organization: Organization;\n  project: Project;\n};\n\ntype State = {\n  error: boolean;\n  loading: boolean;\n  reportList: UserReport[];\n  pageLinks?: string | null;\n};\n\nclass GroupUserFeedback extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    reportList: [],\n    pageLinks: '',\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      !isEqual(prevProps.params, this.props.params) ||\n      prevProps.location.pathname !== this.props.location.pathname ||\n      prevProps.location.search !== this.props.location.search\n    ) {\n      this.fetchData();\n    }\n  }\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    fetchGroupUserReports(this.props.group.id, {\n      ...this.props.params,\n      cursor: this.props.location.query.cursor || '',\n    })\n      .then(([data, _, resp]) => {\n        this.setState({\n          error: false,\n          loading: false,\n          reportList: data,\n          pageLinks: resp?.getResponseHeader('Link'),\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const {reportList, loading, error} = this.state;\n    const {organization, group} = this.props;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    if (reportList.length) {\n      return (\n        <Layout.Body>\n          <Layout.Main>\n            {reportList.map((item, idx) => (\n              <EventUserFeedback\n                key={idx}\n                report={item}\n                orgId={organization.slug}\n                issueId={group.id}\n              />\n            ))}\n            <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n          </Layout.Main>\n        </Layout.Body>\n      );\n    }\n\n    return (\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <UserFeedbackEmpty projectIds={[group.project.id]} />\n        </Layout.Main>\n      </Layout.Body>\n    );\n  }\n}\n\nexport default withOrganization(GroupUserFeedback);\n","import orderBy from 'lodash/orderBy';\n\nimport {bulkUpdate} from 'sentry/actionCreators/group';\nimport {Client} from 'sentry/api';\nimport {t, tct} from 'sentry/locale';\nimport {Group, GroupActivity} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\n/**\n * Fetches group data and mark as seen\n *\n * @param orgId organization slug\n * @param groupId groupId\n * @param eventId eventId or \"latest\" or \"oldest\"\n * @param envNames\n * @param projectId project slug required for eventId that is not latest or oldest\n */\nexport async function fetchGroupEvent(\n  api: Client,\n  orgId: string,\n  groupId: string,\n  eventId: string,\n  envNames: string[],\n  projectId?: string\n): Promise<Event> {\n  const url =\n    eventId === 'latest' || eventId === 'oldest'\n      ? `/issues/${groupId}/events/${eventId}/`\n      : `/projects/${orgId}/${projectId}/events/${eventId}/`;\n\n  const query: {environment?: string[]} = {};\n  if (envNames.length !== 0) {\n    query.environment = envNames;\n  }\n\n  const data = await api.requestPromise(url, {query});\n  return data;\n}\n\nexport function markEventSeen(\n  api: Client,\n  orgId: string,\n  projectId: string,\n  groupId: string\n) {\n  bulkUpdate(\n    api,\n    {\n      orgId,\n      projectId,\n      itemIds: [groupId],\n      failSilently: true,\n      data: {hasSeen: true},\n    },\n    {}\n  );\n}\n\nexport function fetchGroupUserReports(groupId: string, query: Record<string, string>) {\n  const api = new Client();\n\n  return api.requestPromise(`/issues/${groupId}/user-reports/`, {\n    includeAllArgs: true,\n    query,\n  });\n}\n\n/**\n * Returns the environment name for an event or null\n *\n * @param event\n */\nexport function getEventEnvironment(event: Event) {\n  const tag = event.tags.find(({key}) => key === 'environment');\n\n  return tag ? tag.value : null;\n}\n\nconst SUBSCRIPTION_REASONS = {\n  commented: t(\n    \"You're receiving workflow notifications because you have commented on this issue.\"\n  ),\n  assigned: t(\n    \"You're receiving workflow notifications because you were assigned to this issue.\"\n  ),\n  bookmarked: t(\n    \"You're receiving workflow notifications because you have bookmarked this issue.\"\n  ),\n  changed_status: t(\n    \"You're receiving workflow notifications because you have changed the status of this issue.\"\n  ),\n  mentioned: t(\n    \"You're receiving workflow notifications because you have been mentioned in this issue.\"\n  ),\n};\n\n/**\n * @param group\n * @param removeLinks add/remove links to subscription reasons text (default: false)\n * @returns Reason for subscription\n */\nexport function getSubscriptionReason(group: Group, removeLinks = false) {\n  if (group.subscriptionDetails && group.subscriptionDetails.disabled) {\n    return tct('You have [link:disabled workflow notifications] for this project.', {\n      link: removeLinks ? <span /> : <a href=\"/account/settings/notifications/\" />,\n    });\n  }\n\n  if (!group.isSubscribed) {\n    return t('Subscribe to workflow notifications for this issue');\n  }\n\n  if (group.subscriptionDetails) {\n    const {reason} = group.subscriptionDetails;\n    if (reason === 'unknown') {\n      return t(\n        \"You're receiving workflow notifications because you are subscribed to this issue.\"\n      );\n    }\n\n    if (reason && SUBSCRIPTION_REASONS.hasOwnProperty(reason)) {\n      return SUBSCRIPTION_REASONS[reason];\n    }\n  }\n\n  return tct(\n    \"You're receiving updates because you are [link:subscribed to workflow notifications] for this project.\",\n    {\n      link: removeLinks ? <span /> : <a href=\"/account/settings/notifications/\" />,\n    }\n  );\n}\n\nexport function getGroupMostRecentActivity(activities: GroupActivity[]) {\n  // Most recent activity\n  return orderBy([...activities], ({dateCreated}) => new Date(dateCreated), ['desc'])[0];\n}\n\nexport enum ReprocessingStatus {\n  REPROCESSED_AND_HASNT_EVENT = 'reprocessed_and_hasnt_event',\n  REPROCESSED_AND_HAS_EVENT = 'reprocessed_and_has_event',\n  REPROCESSING = 'reprocessing',\n  NO_STATUS = 'no_status',\n}\n\n// Reprocessing Checks\nexport function getGroupReprocessingStatus(\n  group: Group,\n  mostRecentActivity?: GroupActivity\n) {\n  const {status, count, activity: activities} = group;\n  const groupCount = Number(count);\n\n  switch (status) {\n    case 'reprocessing':\n      return ReprocessingStatus.REPROCESSING;\n    case 'unresolved': {\n      const groupMostRecentActivity =\n        mostRecentActivity ?? getGroupMostRecentActivity(activities);\n      if (groupMostRecentActivity?.type === 'reprocess') {\n        if (groupCount === 0) {\n          return ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT;\n        }\n        return ReprocessingStatus.REPROCESSED_AND_HAS_EVENT;\n      }\n      return ReprocessingStatus.NO_STATUS;\n    }\n    default:\n      return ReprocessingStatus.NO_STATUS;\n  }\n}\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n"],"names":["Component","isEqual","EventUserFeedback","Layout","LoadingError","LoadingIndicator","Pagination","withOrganization","UserFeedbackEmpty","fetchGroupUserReports","GroupUserFeedback","loading","error","reportList","pageLinks","setState","props","group","id","params","cursor","location","query","then","data","_","resp","getResponseHeader","catch","componentDidMount","fetchData","componentDidUpdate","prevProps","pathname","search","render","state","organization","length","map","item","idx","slug","project","orderBy","bulkUpdate","Client","t","tct","fetchGroupEvent","api","orgId","groupId","eventId","envNames","projectId","url","environment","requestPromise","markEventSeen","itemIds","failSilently","hasSeen","includeAllArgs","getEventEnvironment","event","tag","tags","find","key","value","SUBSCRIPTION_REASONS","commented","assigned","bookmarked","changed_status","mentioned","getSubscriptionReason","removeLinks","subscriptionDetails","disabled","link","isSubscribed","reason","hasOwnProperty","getGroupMostRecentActivity","activities","dateCreated","Date","ReprocessingStatus","getGroupReprocessingStatus","mostRecentActivity","status","count","activity","groupCount","Number","REPROCESSING","groupMostRecentActivity","type","REPROCESSED_AND_HASNT_EVENT","REPROCESSED_AND_HAS_EVENT","NO_STATUS"],"sourceRoot":""}