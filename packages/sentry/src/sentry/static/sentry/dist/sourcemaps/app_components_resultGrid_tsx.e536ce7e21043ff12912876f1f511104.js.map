{"version":3,"file":"chunks/app_components_resultGrid_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/resultGrid.tsx"],"sourcesContent":["import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {Client, RequestOptions} from 'sentry/api';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport MenuItem from 'sentry/components/menuItem';\nimport Pagination from 'sentry/components/pagination';\nimport {IconSearch} from 'sentry/icons';\nimport withApi from 'sentry/utils/withApi';\n\ntype Option = [value: string, label: string];\n\ntype FilterProps = {\n  location: Location;\n  name: string;\n  options: Option[];\n  path: string;\n  queryKey: string;\n  value: string;\n};\n\nclass Filter extends Component<FilterProps> {\n  getCurrentLabel() {\n    const selected = this.props.options.find(\n      item => item[0] === (this.props.value ?? '')\n    );\n    if (selected) {\n      return this.props.name + ': ' + selected[1];\n    }\n    return this.props.name + ': ' + 'Any';\n  }\n\n  getDefaultItem() {\n    const query = {...this.props.location.query, cursor: ''};\n    delete query[this.props.queryKey];\n\n    return (\n      <MenuItem\n        key=\"\"\n        isActive={this.props.value === '' || !this.props.value}\n        to={{pathname: this.props.path, query}}\n      >\n        Any\n      </MenuItem>\n    );\n  }\n\n  getSelector = () => (\n    <DropdownLink title={this.getCurrentLabel()}>\n      {this.getDefaultItem()}\n      {this.props.options.map(([value, label]) => {\n        const filterQuery = {\n          [this.props.queryKey]: value,\n          cursor: '',\n        };\n\n        const query = {...this.props.location.query, ...filterQuery};\n        return (\n          <MenuItem\n            key={value}\n            isActive={this.props.value === value}\n            to={{pathname: this.props.path, query}}\n          >\n            {label}\n          </MenuItem>\n        );\n      })}\n    </DropdownLink>\n  );\n\n  render() {\n    return (\n      <div className=\"filter-options\">\n        {this.props.options.length === 1 ? (\n          <strong>{this.getCurrentLabel()}</strong>\n        ) : (\n          this.getSelector()\n        )}\n      </div>\n    );\n  }\n}\n\ntype SortByProps = {\n  location: Location;\n  options: Option[];\n  path: string;\n  value: string;\n};\n\nclass SortBy extends Component<SortByProps> {\n  getCurrentSortLabel() {\n    return this.props.options.find(([value]) => value === this.props.value)?.[1];\n  }\n\n  getSortBySelector() {\n    return (\n      <DropdownLink title={this.getCurrentSortLabel()} className=\"sorted-by\">\n        {this.props.options.map(([value, label]) => {\n          const query = {...this.props.location.query, sortBy: value, cursor: ''};\n          return (\n            <MenuItem\n              isActive={this.props.value === value}\n              key={value}\n              to={{pathname: this.props.path, query}}\n            >\n              {label}\n            </MenuItem>\n          );\n        })}\n      </DropdownLink>\n    );\n  }\n\n  render() {\n    if (this.props.options.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"sort-options\">\n        Showing results sorted by\n        {this.props.options.length === 1 ? (\n          <strong className=\"sorted-by\">{this.getCurrentSortLabel()}</strong>\n        ) : (\n          this.getSortBySelector()\n        )}\n      </div>\n    );\n  }\n}\n\ntype FilterConfig = {\n  name: string;\n  options: Option[];\n};\n\n// XXX(ts): Using Partial here on the DefaultProps is not really correct, since\n// defaultProps guarantees they'll be set. But because this component is\n// wrapped with a HoC, we lose the defaultProps, and users of the component\ntype Props = {\n  api: Client;\n  location: Location;\n} & Partial<DefaultProps>;\n\ntype DefaultProps = {\n  columns: React.ReactNode[];\n  columnsForRow: (row: any) => React.ReactNode[];\n  defaultParams: Record<string, any>;\n  defaultSort: string;\n  endpoint: string;\n  filters: Record<string, FilterConfig>;\n  hasPagination: boolean;\n  hasSearch: boolean;\n  keyForRow: (row: any) => string;\n  method: RequestOptions['method'];\n  path: string;\n  sortOptions: Option[];\n};\n\ntype State = {\n  error: string | boolean;\n  filters: Record<string, string>;\n  loading: boolean;\n  pageLinks: null | string;\n  query: string;\n  rows: any[];\n  sortBy: string;\n};\n\nclass ResultGrid extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    path: '',\n    endpoint: '',\n    method: 'GET',\n    columns: [],\n    sortOptions: [],\n    filters: {},\n    defaultSort: '',\n    keyForRow: row => row.id,\n    columnsForRow: () => [],\n    defaultParams: {\n      per_page: 50,\n    },\n    hasPagination: true,\n    hasSearch: false,\n  };\n\n  state: State = this.defaultState;\n\n  componentWillMount() {\n    this.fetchData();\n  }\n\n  componentWillReceiveProps() {\n    const queryParams = this.query;\n    this.setState(\n      {\n        query: queryParams.query ?? '',\n        sortBy: queryParams.sortBy ?? this.props.defaultSort,\n        filters: {...queryParams},\n        pageLinks: null,\n        loading: true,\n        error: false,\n      },\n      this.fetchData\n    );\n  }\n\n  get defaultState() {\n    const queryParams = this.query;\n\n    return {\n      rows: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n      query: queryParams.query ?? '',\n      sortBy: queryParams.sortBy ?? this.props.defaultSort,\n      filters: {...queryParams},\n    } as State;\n  }\n\n  get query() {\n    return ((this.props.location ?? {}).query ?? {}) as {[k: string]: string};\n  }\n\n  remountComponent() {\n    this.setState(this.defaultState, this.fetchData);\n  }\n\n  refresh() {\n    this.setState({loading: true}, this.fetchData);\n  }\n\n  fetchData() {\n    // TODO(dcramer): this should explicitly allow filters/sortBy/cursor/perPage\n    const queryParams = {\n      ...this.props.defaultParams,\n      sortBy: this.state.sortBy,\n      ...this.query,\n    };\n\n    this.props.api.request(this.props.endpoint!, {\n      method: this.props.method,\n      data: queryParams,\n      success: (data, _, resp) => {\n        this.setState({\n          loading: false,\n          error: false,\n          rows: data,\n          pageLinks: resp?.getResponseHeader('Link') ?? null,\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  }\n\n  onSearch = (e: React.FormEvent<HTMLFormElement>) => {\n    const location = this.props.location ?? {};\n    const {query} = this.state;\n    const targetQueryParams = {...(location.query ?? {}), query, cursor: ''};\n\n    e.preventDefault();\n\n    browserHistory.push({\n      pathname: this.props.path,\n      query: targetQueryParams,\n    });\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({query: evt.target.value});\n  };\n\n  renderLoading() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>\n          <div className=\"loading\">\n            <div className=\"loading-indicator\" />\n            <div className=\"loading-message\">Hold on to your butts!</div>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  renderError() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>\n          <div className=\"alert-block alert-error\">Something bad happened :(</div>\n        </td>\n      </tr>\n    );\n  }\n\n  renderNoResults() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns!.length}>No results found.</td>\n      </tr>\n    );\n  }\n\n  renderResults() {\n    return this.state.rows.map(row => (\n      <tr key={this.props.keyForRow?.(row)}>{this.props.columnsForRow?.(row)}</tr>\n    ));\n  }\n\n  render() {\n    const {filters, sortOptions, path, location} = this.props;\n    return (\n      <div className=\"result-grid\">\n        <div className=\"table-options\">\n          {this.props.hasSearch && (\n            <div className=\"result-grid-search\">\n              <form onSubmit={this.onSearch}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control input-search\"\n                    placeholder=\"search\"\n                    style={{width: 300}}\n                    name=\"query\"\n                    autoComplete=\"off\"\n                    value={this.state.query}\n                    onChange={this.onQueryChange}\n                  />\n                  <button type=\"submit\" className=\"btn btn-sm btn-primary\">\n                    <IconSearch size=\"xs\" />\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n          <SortBy\n            options={sortOptions ?? []}\n            value={this.state.sortBy}\n            path={path ?? ''}\n            location={location}\n          />\n          {Object.keys(filters ?? {}).map(filterKey => (\n            <Filter\n              key={filterKey}\n              queryKey={filterKey}\n              value={this.state.filters[filterKey]}\n              path={path ?? ''}\n              location={location}\n              {...(filters?.[filterKey] as FilterConfig)}\n            />\n          ))}\n        </div>\n\n        <table className=\"table table-grid\">\n          <thead>\n            <tr>{this.props.columns}</tr>\n          </thead>\n          <tbody>\n            {this.state.loading\n              ? this.renderLoading()\n              : this.state.error\n              ? this.renderError()\n              : this.state.rows.length === 0\n              ? this.renderNoResults()\n              : this.renderResults()}\n          </tbody>\n        </table>\n        {this.props.hasPagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport {ResultGrid};\n\nexport default withApi(ResultGrid);\n"],"names":["Component","browserHistory","DropdownLink","MenuItem","Pagination","IconSearch","withApi","Filter","getCurrentLabel","getDefaultItem","props","options","map","value","label","filterQuery","queryKey","cursor","query","location","pathname","path","selected","find","item","name","render","length","getSelector","SortBy","getCurrentSortLabel","getSortBySelector","sortBy","ResultGrid","defaultState","e","state","targetQueryParams","preventDefault","push","evt","setState","target","componentWillMount","fetchData","componentWillReceiveProps","queryParams","defaultSort","filters","pageLinks","loading","error","rows","remountComponent","refresh","defaultParams","api","request","endpoint","method","data","success","_","resp","getResponseHeader","renderLoading","columns","renderError","renderNoResults","renderResults","row","columnsForRow","keyForRow","sortOptions","hasSearch","onSearch","width","onQueryChange","Object","keys","filterKey","hasPagination","id","per_page"],"sourceRoot":""}