{"version":3,"file":"chunks/app_utils_discover_charts_tsx-app_views_alerts_list_rules_teamFilter_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/discover/charts.tsx","webpack:///./app/views/alerts/list/rules/teamFilter.tsx"],"sourcesContent":["import {LegendComponentOption} from 'echarts';\n\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport {AggregationOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(\n  value: number | null,\n  outputType: AggregationOutputType = 'number'\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  return tooltipFormatterUsingAggregateOutputType(value, outputType);\n}\n\n/**\n * Formatter for chart tooltips that takes the aggregate output type directly\n */\nexport function tooltipFormatterUsingAggregateOutputType(\n  value: number | null,\n  type: string\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    case 'size':\n      return formatBytesBase2(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  outputType: AggregationOutputType,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  return axisLabelFormatterUsingAggregateOutputType(\n    value,\n    outputType,\n    abbreviation,\n    durationUnit\n  );\n}\n\n/**\n * Formatter for chart axis labels that takes the aggregate output type directly\n */\nexport function axisLabelFormatterUsingAggregateOutputType(\n  value: number,\n  type: string,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value, durationUnit);\n    case 'size':\n      return formatBytesBase2(value, 0);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number, durationUnit?: number): string {\n  durationUnit ??= categorizeDuration(value);\n  if (value === 0) {\n    return '0';\n  }\n  switch (durationUnit) {\n    case WEEK: {\n      const label = (value / WEEK).toFixed(0);\n      return t('%swk', label);\n    }\n    case DAY: {\n      const label = (value / DAY).toFixed(0);\n      return t('%sd', label);\n    }\n    case HOUR: {\n      const label = (value / HOUR).toFixed(0);\n      return t('%shr', label);\n    }\n    case MINUTE: {\n      const label = (value / MINUTE).toFixed(0);\n      return t('%smin', label);\n    }\n    case SECOND: {\n      const label = (value / SECOND).toFixed(0);\n      return t('%ss', label);\n    }\n    default:\n      const label = value.toFixed(0);\n      return t('%sms', label);\n  }\n}\n\n/**\n * Given an array of series and an eCharts legend object,\n * finds the range of y values (min and max) based on which series is selected in the legend\n * Assumes series[0] > series[1] > ...\n * @param series Array of eCharts series\n * @param legend eCharts legend object\n * @returns\n */\nexport function findRangeOfMultiSeries(series: Series[], legend?: LegendComponentOption) {\n  let range: {max: number; min: number} | undefined;\n  if (series[0]?.data) {\n    let minSeries = series[0];\n    let maxSeries;\n    series.forEach(({seriesName, data}, idx) => {\n      if (legend?.selected?.[seriesName] !== false && data.length) {\n        minSeries = series[idx];\n        maxSeries ??= series[idx];\n      }\n    });\n    if (maxSeries?.data) {\n      const max = Math.max(\n        ...maxSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      const min = Math.min(\n        ...minSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      range = {max, min};\n    }\n  }\n  return range;\n}\n\n/**\n * Given a eCharts series and legend, returns the unit to be used on the yAxis for a duration chart\n * @param series eCharts series array\n * @param legend eCharts legend object\n * @returns\n */\nexport function getDurationUnit(\n  series: Series[],\n  legend?: LegendComponentOption\n): number {\n  let durationUnit = 0;\n  const range = findRangeOfMultiSeries(series, legend);\n  if (range) {\n    const avg = (range.max + range.min) / 2;\n    durationUnit = categorizeDuration((range.max - range.min) / 5); // avg of 5 yAxis ticks per chart\n\n    const numOfDigits = (avg / durationUnit).toFixed(0).length;\n    if (numOfDigits > 6) {\n      durationUnit = categorizeDuration(avg);\n    }\n  }\n  return durationUnit;\n}\n\n/**\n * Categorizes the duration by Second, Minute, Hour, etc\n * Ex) categorizeDuration(1200) = MINUTE\n * @param value Duration in ms\n */\nexport function categorizeDuration(value): number {\n  if (value >= WEEK) {\n    return WEEK;\n  }\n  if (value >= DAY) {\n    return DAY;\n  }\n  if (value >= HOUR) {\n    return HOUR;\n  }\n  if (value >= MINUTE) {\n    return MINUTE;\n  }\n  if (value >= SECOND) {\n    return SECOND;\n  }\n  return 1;\n}\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport TeamAvatar from 'sentry/components/avatar/teamAvatar';\nimport Badge from 'sentry/components/badge';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {IconUser} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useTeams from 'sentry/utils/useTeams';\n\ninterface Props {\n  handleChangeFilter: (activeFilters: string[]) => void;\n  selectedTeams: string[];\n  /**\n   * only show teams user is a member of\n   */\n  showIsMemberTeams?: boolean;\n  /**\n   * show My Teams as the default dropdown description\n   */\n  showMyTeamsDescription?: boolean;\n  /**\n   * show suggested options (My Teams and Unassigned)\n   */\n  showSuggestedOptions?: boolean;\n}\n\nconst suggestedOptions = [\n  {\n    label: t('My Teams'),\n    value: 'myteams',\n  },\n  {\n    label: t('Unassigned'),\n    value: 'unassigned',\n  },\n];\n\nfunction TeamFilter({\n  selectedTeams,\n  handleChangeFilter,\n  showIsMemberTeams = false,\n  showSuggestedOptions = true,\n  showMyTeamsDescription = false,\n}: Props) {\n  const {teams, onSearch, fetching} = useTeams({provideUserTeams: showIsMemberTeams});\n\n  const teamOptions = useMemo(\n    () =>\n      teams.map(team => ({\n        value: team.id,\n        label: `#${team.slug}`,\n        leadingItems: <TeamAvatar team={team} size={18} />,\n      })),\n    [teams]\n  );\n\n  const [triggerIcon, triggerLabel] = useMemo(() => {\n    const firstSelectedSuggestion =\n      selectedTeams[0] && suggestedOptions.find(opt => opt.value === selectedTeams[0]);\n\n    const firstSelectedTeam =\n      selectedTeams[0] && teams.find(team => team.id === selectedTeams[0]);\n\n    if (firstSelectedSuggestion) {\n      return [<IconUser key={0} />, firstSelectedSuggestion.label];\n    }\n\n    if (firstSelectedTeam) {\n      return [\n        <TeamAvatar team={firstSelectedTeam} size={16} key={0} />,\n        `#${firstSelectedTeam.slug}`,\n      ];\n    }\n\n    return [\n      <IconUser key={0} />,\n      showMyTeamsDescription ? t('My Teams') : t('All Teams'),\n    ];\n  }, [selectedTeams, teams, showMyTeamsDescription]);\n\n  return (\n    <CompactSelect\n      multiple\n      isClearable\n      isSearchable\n      isLoading={fetching}\n      menuTitle={t('Filter teams')}\n      options={\n        showSuggestedOptions\n          ? [\n              {value: '_suggested', label: t('Suggested'), options: suggestedOptions},\n              {value: '_teams', label: t('Teams'), options: teamOptions},\n            ]\n          : teamOptions\n      }\n      value={selectedTeams}\n      onInputChange={debounce(val => void onSearch(val), DEFAULT_DEBOUNCE_DURATION)}\n      onChange={opts => handleChangeFilter(opts.map(opt => opt.value))}\n      triggerLabel={\n        <Fragment>\n          {triggerLabel}\n          {selectedTeams.length > 1 && (\n            <StyledBadge text={`+${selectedTeams.length - 1}`} />\n          )}\n        </Fragment>\n      }\n      triggerProps={{icon: triggerIcon}}\n    />\n  );\n}\n\nexport default TeamFilter;\n\nconst StyledBadge = styled(Badge)`\n  flex-shrink: 0;\n`;\n"],"names":["t","defined","formatBytesBase2","DAY","formatAbbreviatedNumber","formatPercentage","getDuration","HOUR","MINUTE","SECOND","WEEK","tooltipFormatter","value","outputType","tooltipFormatterUsingAggregateOutputType","type","toLocaleString","toString","axisLabelFormatter","abbreviation","durationUnit","axisLabelFormatterUsingAggregateOutputType","axisDuration","categorizeDuration","label","toFixed","findRangeOfMultiSeries","series","legend","range","data","minSeries","maxSeries","forEach","idx","seriesName","selected","length","max","Math","map","filter","min","getDurationUnit","avg","numOfDigits","Fragment","useMemo","debounce","TeamAvatar","Badge","CompactSelect","DEFAULT_DEBOUNCE_DURATION","IconUser","useTeams","suggestedOptions","TeamFilter","selectedTeams","handleChangeFilter","showIsMemberTeams","showSuggestedOptions","showMyTeamsDescription","teams","onSearch","fetching","provideUserTeams","teamOptions","team","id","slug","leadingItems","triggerIcon","triggerLabel","firstSelectedSuggestion","find","opt","firstSelectedTeam","options","val","opts","icon","StyledBadge"],"sourceRoot":""}