{"version":3,"file":"chunks/app_actions_organizationsActions_tsx-app_components_clipboard_tsx-app_components_forms_compac-1ced7e.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actions/organizationsActions.tsx","webpack:///./app/actions/projectActions.tsx","webpack:///./app/components/badge.tsx","webpack:///./app/components/clipboard.tsx","webpack:///./app/components/forms/compactSelect.tsx","webpack:///./app/components/globalSelectionLink.tsx","webpack:///./app/components/hovercard.tsx","webpack:///./app/components/organizations/pageFilters/utils.tsx","webpack:///./app/constants/pageFilters.tsx","webpack:///./app/stores/projectsStore.tsx","webpack:///./app/utils/events.tsx","webpack:///./app/utils/parseLinkHeader.tsx","webpack:///./app/utils/platform.tsx","webpack:///./app/utils/projects.tsx","webpack:///./app/utils/selectText.tsx","webpack:///./app/utils/useProjects.tsx","webpack:///./app/utils/withProjects.tsx"],"sourcesContent":["import {createActions} from 'reflux';\n\nconst OrganizationsActions = createActions([\n  'update',\n  'setActive',\n  'changeSlug',\n  'remove',\n  'removeSuccess',\n  'removeError',\n]);\n\nexport default OrganizationsActions;\n","import {createActions} from 'reflux';\n\nconst ProjectActions = createActions([\n  'addTeam',\n  'addTeamError',\n  'addTeamSuccess',\n  'changeSlug',\n  'createSuccess',\n  'loadProjects',\n  'loadStats',\n  'loadStatsError',\n  'loadStatsForProjectSuccess',\n  'loadStatsSuccess',\n  'removeProject',\n  'removeProjectError',\n  'removeProjectSuccess',\n  'removeTeam',\n  'removeTeamError',\n  'removeTeamSuccess',\n  'reset',\n  'setActive',\n  'update',\n  'updateError',\n  'updateSuccess',\n]);\n\nexport default ProjectActions;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport type {Theme} from 'sentry/utils/theme';\n\ninterface Props extends React.HTMLAttributes<HTMLSpanElement> {\n  text?: string | number | null;\n  type?: keyof Theme['badge'];\n}\n\nconst Badge = styled(({children, text, ...props}: Props) => (\n  <span {...props}>{children ?? text}</span>\n))<Props>`\n  display: inline-block;\n  height: 20px;\n  min-width: 20px;\n  line-height: 20px;\n  border-radius: 20px;\n  padding: 0 5px;\n  margin-left: ${space(0.5)};\n  font-size: 75%;\n  font-weight: 600;\n  text-align: center;\n  color: ${p => p.theme.badge[p.type ?? 'default'].color};\n  background: ${p => p.theme.badge[p.type ?? 'default'].background};\n  transition: background 100ms linear;\n\n  position: relative;\n`;\n\nexport default Badge;\n","import {cloneElement, isValidElement, useCallback, useEffect, useState} from 'react';\nimport {findDOMNode} from 'react-dom';\nimport copy from 'copy-text-to-clipboard';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  children: React.ReactNode;\n  /**\n   * Text to be copied on click\n   */\n  value: string;\n  /**\n   * Toast message to show on copy failures\n   */\n  errorMessage?: string;\n  /**\n   * Do not show a toast message on success\n   */\n  hideMessages?: boolean;\n  /**\n   * Hide children if browser does not support copying\n   */\n  hideUnsupported?: boolean;\n  /**\n   * Triggered if we fail to copy\n   */\n  onError?: () => void;\n  /**\n   * Trigger if we successfully copy\n   */\n  onSuccess?: () => void;\n  /**\n   * Message to show when we successfully copy\n   */\n  successMessage?: string;\n};\n\n/**\n * copy-text-to-clipboard relies on `document.execCommand('copy')`\n */\nfunction isSupported() {\n  return !!document.queryCommandSupported?.('copy');\n}\n\nfunction Clipboard({\n  hideMessages = false,\n  successMessage = t('Copied to clipboard'),\n  errorMessage = t('Error copying to clipboard'),\n  value,\n  onSuccess,\n  onError,\n  hideUnsupported,\n  children,\n}: Props) {\n  const [element, setElement] = useState<ReturnType<typeof findDOMNode>>();\n\n  const handleClick = useCallback(() => {\n    const copyWasSuccessful = copy(value);\n\n    if (!copyWasSuccessful) {\n      if (!hideMessages) {\n        addErrorMessage(errorMessage);\n      }\n      onError?.();\n      return;\n    }\n\n    if (!hideMessages) {\n      addSuccessMessage(successMessage);\n    }\n\n    onSuccess?.();\n  }, [value, onError, onSuccess, errorMessage, successMessage, hideMessages]);\n\n  useEffect(() => {\n    element?.addEventListener('click', handleClick);\n    return () => element?.removeEventListener('click', handleClick);\n  }, [handleClick, element]);\n\n  // XXX: Instead of assigning the `onClick` to the cloned child element, we\n  // attach a event listener, otherwise we would wipeout whatever click handler\n  // may be assigned on the child.\n  const handleMount = useCallback((ref: HTMLElement) => {\n    // eslint-disable-next-line react/no-find-dom-node\n    setElement(findDOMNode(ref));\n  }, []);\n\n  // Browser doesn't support `execCommand`\n  if (hideUnsupported && !isSupported()) {\n    return null;\n  }\n\n  if (!isValidElement(children)) {\n    return null;\n  }\n\n  return cloneElement(children, {ref: handleMount});\n}\n\nexport default Clipboard;\n","import {Fragment, useCallback, useEffect, useRef, useState} from 'react';\nimport {components as selectComponents} from 'react-select';\nimport styled from '@emotion/styled';\nimport {useButton} from '@react-aria/button';\nimport {FocusScope} from '@react-aria/focus';\nimport {useMenuTrigger} from '@react-aria/menu';\nimport {\n  AriaPositionProps,\n  OverlayProps,\n  useOverlay,\n  useOverlayPosition,\n} from '@react-aria/overlays';\nimport {mergeProps, useResizeObserver} from '@react-aria/utils';\nimport {useMenuTriggerState} from '@react-stately/menu';\n\nimport Badge from 'sentry/components/badge';\nimport Button from 'sentry/components/button';\nimport DropdownButton, {DropdownButtonProps} from 'sentry/components/dropdownButton';\nimport SelectControl, {\n  ControlProps,\n  GeneralSelectValue,\n} from 'sentry/components/forms/selectControl';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport space from 'sentry/styles/space';\nimport {FormSize} from 'sentry/utils/theme';\n\ninterface TriggerRenderingProps {\n  props: Omit<DropdownButtonProps, 'children'>;\n  ref: React.RefObject<HTMLButtonElement>;\n}\n\ninterface MenuProps extends OverlayProps, Omit<AriaPositionProps, 'overlayRef'> {\n  children: (maxHeight: number | string) => React.ReactNode;\n  maxMenuHeight?: number;\n  minMenuWidth?: number;\n}\n\ninterface Props<OptionType>\n  extends Omit<ControlProps<OptionType>, 'choices'>,\n    Partial<OverlayProps>,\n    Partial<AriaPositionProps> {\n  options: Array<OptionType & {options?: OptionType[]}>;\n  /**\n   * Pass class name to the outer wrap\n   */\n  className?: string;\n  /**\n   * Whether new options are being loaded. When true, CompactSelect will\n   * display a loading indicator in the header.\n   */\n  isLoading?: boolean;\n  onChangeValueMap?: (value: OptionType[]) => ControlProps<OptionType>['value'];\n  /**\n   * Tag name for the outer wrap, defaults to `div`\n   */\n  renderWrapAs?: React.ElementType;\n  /**\n   * Affects the size of the trigger button and menu items.\n   */\n  size?: FormSize;\n  /**\n   * Optionally replace the trigger button with a different component. Note\n   * that the replacement must have the `props` and `ref` (supplied in\n   * TriggerProps) forwarded its outer wrap, otherwise the accessibility\n   * features won't work correctly.\n   */\n  trigger?: (props: TriggerRenderingProps) => React.ReactNode;\n  /**\n   * By default, the menu trigger will be rendered as a button, with\n   * triggerLabel as the button label.\n   */\n  triggerLabel?: React.ReactNode;\n  /**\n   * If using the default button trigger (i.e. the custom `trigger` prop has\n   * not been provided), then `triggerProps` will be passed on to the button\n   * component.\n   */\n  triggerProps?: DropdownButtonProps;\n}\n\n/**\n * Recursively finds the selected option(s) from an options array. Useful for\n * non-flat arrays that contain sections (groups of options).\n */\nfunction getSelectedOptions<OptionType extends GeneralSelectValue = GeneralSelectValue>(\n  opts: Props<OptionType>['options'],\n  value: Props<OptionType>['value']\n): Props<OptionType>['options'] {\n  return opts.reduce((acc: Props<OptionType>['options'], cur) => {\n    if (cur.options) {\n      return acc.concat(getSelectedOptions(cur.options, value));\n    }\n    if (cur.value === value) {\n      return acc.concat(cur);\n    }\n    return acc;\n  }, []);\n}\n\n// Exported so we can further customize this component with react-select's\n// components prop elsewhere\nexport const CompactSelectControl = ({\n  innerProps,\n  ...props\n}: React.ComponentProps<typeof selectComponents.Control>) => {\n  const {hasValue, selectProps} = props;\n  const {isSearchable, menuTitle, isClearable, isLoading} = selectProps;\n\n  return (\n    <Fragment>\n      {(menuTitle || isClearable || isLoading) && (\n        <MenuHeader>\n          <MenuTitle>\n            <span>{menuTitle}</span>\n          </MenuTitle>\n          {isLoading && <StyledLoadingIndicator size={12} mini />}\n          {hasValue && isClearable && !isLoading && (\n            <ClearButton\n              type=\"button\"\n              size=\"zero\"\n              borderless\n              onClick={() => props.clearValue()}\n              // set tabIndex -1 to autofocus search on open\n              tabIndex={isSearchable ? -1 : undefined}\n            >\n              Clear\n            </ClearButton>\n          )}\n        </MenuHeader>\n      )}\n      <selectComponents.Control\n        {...props}\n        innerProps={{...innerProps, ...(!isSearchable && {'aria-hidden': true})}}\n      />\n    </Fragment>\n  );\n};\n\n// TODO(vl): Turn this into a reusable component\nfunction Menu({\n  // Trigger & trigger state\n  targetRef,\n  onClose,\n  // Overlay props\n  offset = 8,\n  crossOffset = 0,\n  containerPadding = 8,\n  placement = 'bottom left',\n  shouldCloseOnBlur = true,\n  isDismissable = true,\n  maxMenuHeight = 400,\n  minMenuWidth,\n  children,\n}: MenuProps) {\n  // Control the overlay's position\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const {overlayProps} = useOverlay(\n    {\n      isOpen: true,\n      onClose,\n      shouldCloseOnBlur,\n      isDismissable,\n      shouldCloseOnInteractOutside: target =>\n        target && targetRef.current !== target && !targetRef.current?.contains(target),\n    },\n    overlayRef\n  );\n  const {overlayProps: positionProps} = useOverlayPosition({\n    targetRef,\n    overlayRef,\n    offset,\n    crossOffset,\n    placement,\n    containerPadding,\n    isOpen: true,\n  });\n\n  const menuHeight = positionProps.style?.maxHeight\n    ? Math.min(+positionProps.style?.maxHeight, maxMenuHeight)\n    : 'none';\n\n  return (\n    <Overlay\n      ref={overlayRef}\n      minWidth={minMenuWidth}\n      {...mergeProps(overlayProps, positionProps)}\n    >\n      <FocusScope restoreFocus autoFocus>\n        {children(menuHeight)}\n      </FocusScope>\n    </Overlay>\n  );\n}\n\n/**\n * A select component with a more compact trigger button. Accepts the same\n * props as SelectControl, plus some more for the trigger button & overlay.\n */\nfunction CompactSelect<OptionType extends GeneralSelectValue = GeneralSelectValue>({\n  // Select props\n  options,\n  onChange,\n  defaultValue,\n  value: valueProp,\n  isDisabled: disabledProp,\n  isSearchable = false,\n  multiple,\n  placeholder = 'Search…',\n  onChangeValueMap,\n  // Trigger button & wrapper props\n  trigger,\n  triggerLabel,\n  triggerProps,\n  size = 'md',\n  className,\n  renderWrapAs,\n  closeOnSelect = true,\n  menuTitle,\n  onClose,\n  ...props\n}: Props<OptionType>) {\n  // Manage the dropdown menu's open state\n  const isDisabled = disabledProp || options?.length === 0;\n  const triggerRef = useRef<HTMLButtonElement>(null);\n  const state = useMenuTriggerState(props);\n  const {menuTriggerProps} = useMenuTrigger(\n    {type: 'listbox', isDisabled},\n    state,\n    triggerRef\n  );\n  const {buttonProps} = useButton(\n    {onPress: () => state.toggle(), isDisabled, ...menuTriggerProps},\n    triggerRef\n  );\n\n  // Keep an internal copy of the current select value and update the control\n  // button's label when the value changes\n  const [internalValue, setInternalValue] = useState(valueProp ?? defaultValue);\n\n  // Update the button label when the value changes\n  const getLabel = useCallback((): React.ReactNode => {\n    const newValue = valueProp ?? internalValue;\n    const valueSet = Array.isArray(newValue) ? newValue : [newValue];\n    const selectedOptions = valueSet\n      .map(val => getSelectedOptions<OptionType>(options, val))\n      .flat();\n\n    return (\n      <Fragment>\n        <ButtonLabel>{selectedOptions[0]?.label ?? ''}</ButtonLabel>\n        {selectedOptions.length > 1 && (\n          <StyledBadge text={`+${selectedOptions.length - 1}`} />\n        )}\n      </Fragment>\n    );\n  }, [options, valueProp, internalValue]);\n\n  const [label, setLabel] = useState<React.ReactNode>(null);\n  useEffect(() => {\n    setLabel(getLabel());\n  }, [getLabel]);\n\n  function onValueChange(option) {\n    const valueMap = onChangeValueMap ?? (opts => opts.map(opt => opt.value));\n    const newValue = Array.isArray(option) ? valueMap(option) : option?.value;\n    setInternalValue(newValue);\n    onChange?.(option);\n\n    if (closeOnSelect && !multiple) {\n      state.close();\n    }\n  }\n\n  // Calculate the current trigger element's width. This will be used as\n  // the min width for the menu.\n  const [triggerWidth, setTriggerWidth] = useState<number>();\n  // Update triggerWidth when its size changes using useResizeObserver\n  const updateTriggerWidth = useCallback(async () => {\n    // Wait until the trigger element finishes rendering, otherwise\n    // ResizeObserver might throw an infinite loop error.\n    await new Promise(resolve => window.setTimeout(resolve));\n    const newTriggerWidth = triggerRef.current?.offsetWidth;\n    newTriggerWidth && setTriggerWidth(newTriggerWidth);\n  }, [triggerRef]);\n  useResizeObserver({ref: triggerRef, onResize: updateTriggerWidth});\n  // If ResizeObserver is not available, manually update the width\n  // when any of [trigger, triggerLabel, triggerProps] changes.\n  useEffect(() => {\n    if (typeof window.ResizeObserver !== 'undefined') {\n      return;\n    }\n    updateTriggerWidth();\n  }, [updateTriggerWidth]);\n\n  function renderTrigger() {\n    if (trigger) {\n      return trigger({\n        props: {\n          size,\n          isOpen: state.isOpen,\n          ...triggerProps,\n          ...buttonProps,\n        },\n        ref: triggerRef,\n      });\n    }\n    return (\n      <DropdownButton\n        ref={triggerRef}\n        size={size}\n        isOpen={state.isOpen}\n        {...triggerProps}\n        {...buttonProps}\n      >\n        {triggerLabel ?? label}\n      </DropdownButton>\n    );\n  }\n\n  function onMenuClose() {\n    onClose?.();\n    state.close();\n  }\n\n  function renderMenu() {\n    if (!state.isOpen) {\n      return null;\n    }\n\n    return (\n      <Menu\n        targetRef={triggerRef}\n        onClose={onMenuClose}\n        minMenuWidth={triggerWidth}\n        {...props}\n      >\n        {menuHeight => (\n          <SelectControl\n            components={{Control: CompactSelectControl, ClearIndicator: null}}\n            {...props}\n            options={options}\n            value={valueProp ?? internalValue}\n            multiple={multiple}\n            onChange={onValueChange}\n            size={size}\n            menuTitle={menuTitle}\n            placeholder={placeholder}\n            isSearchable={isSearchable}\n            menuHeight={menuHeight}\n            menuPlacement=\"bottom\"\n            menuIsOpen\n            isCompact\n            controlShouldRenderValue={false}\n            hideSelectedOptions={false}\n            menuShouldScrollIntoView={false}\n            blurInputOnSelect={false}\n            closeMenuOnSelect={false}\n            closeMenuOnScroll={false}\n            openMenuOnFocus\n          />\n        )}\n      </Menu>\n    );\n  }\n\n  return (\n    <MenuControlWrap className={className} as={renderWrapAs} role=\"presentation\">\n      {renderTrigger()}\n      {renderMenu()}\n    </MenuControlWrap>\n  );\n}\n\nexport default CompactSelect;\n\nconst MenuControlWrap = styled('div')``;\n\nconst ButtonLabel = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  text-align: left;\n`;\n\nconst StyledBadge = styled(Badge)`\n  flex-shrink: 0;\n  top: auto;\n`;\n\nconst Overlay = styled('div')<{minWidth?: number}>`\n  max-width: calc(100% - ${space(2)});\n  border-radius: ${p => p.theme.borderRadius};\n  background: ${p => p.theme.backgroundElevated};\n  box-shadow: 0 0 0 1px ${p => p.theme.translucentBorder}, ${p => p.theme.dropShadowHeavy};\n  font-size: ${p => p.theme.fontSizeMedium};\n  overflow: hidden;\n\n  /* Override z-index from useOverlayPosition */\n  z-index: ${p => p.theme.zIndex.dropdown} !important;\n\n  ${p => p.minWidth && `min-width: ${p.minWidth}px;`}\n`;\n\nconst MenuHeader = styled('div')`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(0.75)} ${space(1)} ${space(0.75)} ${space(1.5)};\n  box-shadow: 0 1px 0 ${p => p.theme.translucentInnerBorder};\n  z-index: 1;\n`;\n\nconst MenuTitle = styled('span')`\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.headingColor};\n  white-space: nowrap;\n  margin-right: ${space(2)};\n`;\n\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  && {\n    margin: ${space(0.5)} ${space(0.5)} ${space(0.5)} ${space(1)};\n    height: ${space(1.5)};\n    width: ${space(1.5)};\n  }\n`;\n\nconst ClearButton = styled(Button)`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.subText};\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {LocationDescriptor} from 'history';\nimport * as qs from 'query-string';\n\nimport Link, {LinkProps} from 'sentry/components/links/link';\nimport {extractSelectionParameters} from 'sentry/components/organizations/pageFilters/utils';\n\ninterface Props extends WithRouterProps {\n  /**\n   * Location that is being linked to\n   */\n  to: LocationDescriptor;\n  children?: React.ReactNode;\n  /**\n   * Styles applied to the component's root\n   */\n  className?: string;\n  /**\n   * Click event (not for navigation)\n   */\n  onClick?: LinkProps['onClick'];\n  /**\n   * Inline styles\n   */\n  style?: React.CSSProperties;\n}\n\n/**\n * A modified link used for navigating between organization level pages that\n * will keep the global selection values (projects, environments, time) in the\n * querystring when navigating if it's present\n *\n * Falls back to <a> if there is no router present.\n */\nfunction GlobalSelectionLink(props: Props) {\n  const {location, to} = props;\n\n  const globalQuery = extractSelectionParameters(location?.query);\n  const hasGlobalQuery = Object.keys(globalQuery).length > 0;\n  const query =\n    typeof to === 'object' && to.query ? {...globalQuery, ...to.query} : globalQuery;\n\n  if (location) {\n    const toWithGlobalQuery: LocationDescriptor = !hasGlobalQuery\n      ? {}\n      : typeof to === 'string'\n      ? {pathname: to, query}\n      : {...to, query};\n\n    const routerProps = hasGlobalQuery\n      ? {...props, to: toWithGlobalQuery}\n      : {...props, to};\n\n    return <Link {...routerProps} />;\n  }\n\n  let queryStringObject = {};\n  if (typeof to === 'object' && to.search) {\n    queryStringObject = qs.parse(to.search);\n  }\n\n  queryStringObject = {...queryStringObject, ...globalQuery};\n\n  if (typeof to === 'object' && to.query) {\n    queryStringObject = {...queryStringObject, ...to.query};\n  }\n\n  const queryString = qs.stringify(queryStringObject);\n  const url =\n    (typeof to === 'string' ? to : to.pathname) + (queryString ? `?${queryString}` : '');\n\n  return <a {...props} href={url} />;\n}\n\nexport default withRouter(GlobalSelectionLink);\n","import {Fragment} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {AnimatePresence} from 'framer-motion';\n\nimport {Overlay, PositionWrapper} from 'sentry/components/overlay';\nimport space from 'sentry/styles/space';\nimport {ColorOrAlias} from 'sentry/utils/theme';\nimport {useHoverOverlay, UseHoverOverlayProps} from 'sentry/utils/useHoverOverlay';\n\ninterface HovercardProps extends Omit<UseHoverOverlayProps, 'isHoverable'> {\n  /**\n   * Classname to apply to the hovercard\n   */\n  children: React.ReactNode;\n  /**\n   * Element to display in the body\n   */\n  body?: React.ReactNode;\n  /**\n   * Classname to apply to body container\n   */\n  bodyClassName?: string;\n  /**\n   * Classname to apply to the hovercard container\n   */\n  containerClassName?: string;\n  /**\n   * Element to display in the header\n   */\n  header?: React.ReactNode;\n  /**\n   * Color of the arrow tip border\n   */\n  tipBorderColor?: ColorOrAlias;\n  /**\n   * Color of the arrow tip\n   */\n  tipColor?: ColorOrAlias;\n}\n\nfunction Hovercard({\n  body,\n  bodyClassName,\n  children,\n  className,\n  containerClassName,\n  header,\n  offset = 12,\n  displayTimeout = 100,\n  tipBorderColor = 'translucentBorder',\n  tipColor = 'backgroundElevated',\n  ...hoverOverlayProps\n}: HovercardProps): React.ReactElement {\n  const theme = useTheme();\n  const {wrapTrigger, isOpen, overlayProps, placement, arrowData, arrowProps} =\n    useHoverOverlay('hovercard', {\n      offset,\n      displayTimeout,\n      isHoverable: true,\n      className: containerClassName,\n      ...hoverOverlayProps,\n    });\n\n  // Nothing to render if no header or body. Be consistent with wrapping the\n  // children with the trigger in the case that the body / header is set while\n  // the trigger is hovered.\n  if (!body && !header) {\n    return <Fragment>{wrapTrigger(children)}</Fragment>;\n  }\n\n  const hovercardContent = isOpen && (\n    <PositionWrapper zIndex={theme.zIndex.hovercard} {...overlayProps}>\n      <StyledHovercard\n        animated\n        arrowProps={{\n          ...arrowProps,\n          size: 20,\n          background: tipColor,\n          border: tipBorderColor,\n        }}\n        originPoint={arrowData}\n        placement={placement}\n        className={className}\n      >\n        {header ? <Header>{header}</Header> : null}\n        {body ? <Body className={bodyClassName}>{body}</Body> : null}\n      </StyledHovercard>\n    </PositionWrapper>\n  );\n\n  return (\n    <Fragment>\n      {wrapTrigger(children)}\n      {createPortal(<AnimatePresence>{hovercardContent}</AnimatePresence>, document.body)}\n    </Fragment>\n  );\n}\n\nconst StyledHovercard = styled(Overlay)`\n  width: 295px;\n  line-height: 1.2;\n\n  h6 {\n    color: ${p => p.theme.subText};\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    margin-bottom: ${space(1)};\n    text-transform: uppercase;\n  }\n`;\n\nconst Header = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  background: ${p => p.theme.backgroundSecondary};\n  border-bottom: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadiusTop};\n  font-weight: 600;\n  word-wrap: break-word;\n  padding: ${space(1.5)};\n`;\n\nconst Body = styled('div')`\n  padding: ${space(2)};\n  min-height: 30px;\n`;\n\nconst Divider = styled('div')`\n  position: relative;\n  margin-top: ${space(1.5)};\n  margin-bottom: ${space(1)};\n\n  &:before {\n    display: block;\n    position: absolute;\n    content: '';\n    height: 1px;\n    top: 50%;\n    left: ${space(2)};\n    right: ${space(2)};\n    background: ${p => p.theme.innerBorder};\n    z-index: -1;\n  }\n\n  h6 {\n    display: inline;\n    padding-right: ${space(1)};\n    background: ${p => p.theme.background};\n  }\n`;\n\nexport {Hovercard, Header, Body, Divider};\n","import {Location} from 'history';\nimport identity from 'lodash/identity';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport pickBy from 'lodash/pickBy';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DATE_TIME_KEYS, URL_PARAM} from 'sentry/constants/pageFilters';\nimport {PageFilters} from 'sentry/types';\n\n/**\n * Make a default page filters object\n */\nexport function getDefaultSelection(): PageFilters {\n  const datetime = {\n    start: null,\n    end: null,\n    period: DEFAULT_STATS_PERIOD,\n    utc: null,\n  };\n\n  return {\n    projects: [],\n    environments: [],\n    datetime,\n  };\n}\n\n/**\n * Extract the page filter parameters from an object\n * Useful for extracting page filter properties from the current URL\n * when building another URL.\n */\nexport function extractSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(URL_PARAM)), identity);\n}\n\n/**\n * Extract the page filter datetime parameters from an object.\n */\nexport function extractDatetimeSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(DATE_TIME_KEYS)), identity);\n}\n\n/**\n * Compare the non-utc values of two selections.\n * Useful when re-fetching data based on page filters changing.\n *\n * utc is not compared as there is a problem somewhere in the selection\n * data flow that results in it being undefined | null | boolean instead of null | boolean.\n * The additional undefined state makes this function just as unreliable as isEqual(selection, other)\n */\nexport function isSelectionEqual(selection: PageFilters, other: PageFilters): boolean {\n  if (\n    !isEqual(selection.projects, other.projects) ||\n    !isEqual(selection.environments, other.environments)\n  ) {\n    return false;\n  }\n\n  // Use string comparison as we aren't interested in the identity of the datetimes.\n  if (\n    selection.datetime.period !== other.datetime.period ||\n    selection.datetime.start?.toString() !== other.datetime.start?.toString() ||\n    selection.datetime.end?.toString() !== other.datetime.end?.toString()\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","export const URL_PARAM = {\n  START: 'start',\n  END: 'end',\n  UTC: 'utc',\n  PERIOD: 'statsPeriod',\n  PROJECT: 'project',\n  ENVIRONMENT: 'environment',\n};\n\nexport const PAGE_URL_PARAM = {\n  PAGE_START: 'pageStart',\n  PAGE_END: 'pageEnd',\n  PAGE_UTC: 'pageUtc',\n  PAGE_PERIOD: 'pageStatsPeriod',\n};\n\nexport const DATE_TIME = {\n  START: 'start',\n  END: 'end',\n  PERIOD: 'period',\n  UTC: 'utc',\n};\n\nexport const DATE_TIME_KEYS = [...Object.values(DATE_TIME), 'statsPeriod'];\n\nexport const ALL_ACCESS_PROJECTS = -1;\n","import {createStore} from 'reflux';\n\nimport ProjectActions from 'sentry/actions/projectActions';\nimport TeamActions from 'sentry/actions/teamActions';\nimport {Project, Team} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\nimport {CommonStoreDefinition} from './types';\n\ntype State = {\n  loading: boolean;\n  projects: Project[];\n};\n\ntype StatsData = Record<string, Project['stats']>;\n\n/**\n * Attributes that need typing but aren't part of the external interface,\n */\ntype InternalDefinition = {\n  itemsById: Record<string, Project>;\n  loading: boolean;\n  removeTeamFromProject(teamSlug: string, project: Project): void;\n};\n\ninterface ProjectsStoreDefinition\n  extends InternalDefinition,\n    CommonStoreDefinition<State> {\n  getAll(): Project[];\n  getById(id?: string): Project | undefined;\n  getBySlug(slug?: string): Project | undefined;\n  init(): void;\n  isLoading(): boolean;\n  loadInitialData(projects: Project[]): void;\n  onAddTeam(team: Team, projectSlug: string): void;\n  onChangeSlug(prevSlug: string, newSlug: string): void;\n  onCreateSuccess(project: Project): void;\n  onDeleteTeam(slug: string): void;\n  onRemoveTeam(teamSlug: string, projectSlug: string): void;\n  onStatsLoadSuccess(data: StatsData): void;\n  onUpdateSuccess(data: Partial<Project>): void;\n  reset(): void;\n}\n\nconst storeConfig: ProjectsStoreDefinition = {\n  itemsById: {},\n  loading: true,\n  unsubscribeListeners: [],\n\n  init() {\n    this.reset();\n\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.addTeamSuccess, this.onAddTeam)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.changeSlug, this.onChangeSlug)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.createSuccess, this.onCreateSuccess)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.loadProjects, this.loadInitialData)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.loadStatsSuccess, this.onStatsLoadSuccess)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.removeTeamSuccess, this.onRemoveTeam)\n    );\n    this.unsubscribeListeners.push(this.listenTo(ProjectActions.reset, this.reset));\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.updateSuccess, this.onUpdateSuccess)\n    );\n\n    this.unsubscribeListeners.push(\n      this.listenTo(TeamActions.removeTeamSuccess, this.onDeleteTeam)\n    );\n  },\n\n  reset() {\n    this.itemsById = {};\n    this.loading = true;\n  },\n\n  loadInitialData(items: Project[]) {\n    const mapping = items.map(project => [project.id, project] as const);\n\n    this.itemsById = Object.fromEntries(mapping);\n    this.loading = false;\n\n    this.trigger(new Set(Object.keys(this.itemsById)));\n  },\n\n  onChangeSlug(prevSlug: string, newSlug: string) {\n    const prevProject = this.getBySlug(prevSlug);\n\n    if (!prevProject) {\n      return;\n    }\n\n    const newProject = {...prevProject, slug: newSlug};\n\n    this.itemsById = {...this.itemsById, [newProject.id]: newProject};\n    this.trigger(new Set([prevProject.id]));\n  },\n\n  onCreateSuccess(project: Project) {\n    this.itemsById = {...this.itemsById, [project.id]: project};\n    this.trigger(new Set([project.id]));\n  },\n\n  onUpdateSuccess(data: Partial<Project>) {\n    const project = this.getById(data.id);\n\n    if (!project) {\n      return;\n    }\n\n    const newProject = {...project, ...data};\n\n    this.itemsById = {...this.itemsById, [project.id]: newProject};\n    this.trigger(new Set([data.id]));\n  },\n\n  onStatsLoadSuccess(data) {\n    const entries = Object.entries(data || {}).filter(\n      ([projectId]) => projectId in this.itemsById\n    );\n\n    // Assign stats into projects\n    entries.forEach(([projectId, stats]) => {\n      this.itemsById[projectId].stats = stats;\n    });\n\n    const touchedIds = entries.map(([projectId]) => projectId);\n    this.trigger(new Set(touchedIds));\n  },\n\n  /**\n   * Listener for when a team is completely removed\n   *\n   * @param teamSlug Team Slug\n   */\n  onDeleteTeam(teamSlug: string) {\n    // Look for team in all projects\n    const projects = this.getAll().filter(({teams}) =>\n      teams.find(({slug}) => slug === teamSlug)\n    );\n\n    projects.forEach(project => this.removeTeamFromProject(teamSlug, project));\n\n    const affectedProjectIds = projects.map(project => project.id);\n    this.trigger(new Set(affectedProjectIds));\n  },\n\n  onRemoveTeam(teamSlug: string, projectSlug: string) {\n    const project = this.getBySlug(projectSlug);\n\n    if (!project) {\n      return;\n    }\n\n    this.removeTeamFromProject(teamSlug, project);\n    this.trigger(new Set([project.id]));\n  },\n\n  onAddTeam(team: Team, projectSlug: string) {\n    const project = this.getBySlug(projectSlug);\n\n    // Don't do anything if we can't find a project\n    if (!project) {\n      return;\n    }\n\n    const newProject = {...project, teams: [...project.teams, team]};\n\n    this.itemsById = {...this.itemsById, [project.id]: newProject};\n    this.trigger(new Set([project.id]));\n  },\n\n  // Internal method, does not trigger\n  removeTeamFromProject(teamSlug: string, project: Project) {\n    const newTeams = project.teams.filter(({slug}) => slug !== teamSlug);\n    const newProject = {...project, teams: newTeams};\n\n    this.itemsById = {...this.itemsById, [project.id]: newProject};\n  },\n\n  isLoading() {\n    return this.loading;\n  },\n\n  getAll() {\n    return Object.values(this.itemsById).sort((a, b) => a.slug.localeCompare(b.slug));\n  },\n\n  getById(id) {\n    return this.getAll().find(project => project.id === id);\n  },\n\n  getBySlug(slug) {\n    return this.getAll().find(project => project.slug === slug);\n  },\n\n  getState() {\n    return {\n      projects: this.getAll(),\n      loading: this.loading,\n    };\n  },\n};\n\nconst ProjectsStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ProjectsStore;\n","import {\n  BaseGroup,\n  EventMetadata,\n  EventOrGroupType,\n  GroupTombstone,\n  TreeLabelPart,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {isMobilePlatform, isNativePlatform} from 'sentry/utils/platform';\n\nfunction isTombstone(maybe: BaseGroup | Event | GroupTombstone): maybe is GroupTombstone {\n  return !maybe.hasOwnProperty('type');\n}\n\n/**\n * Extract the display message from an event.\n */\nexport function getMessage(\n  event: Event | BaseGroup | GroupTombstone\n): string | undefined {\n  if (isTombstone(event)) {\n    return event.culprit || '';\n  }\n\n  const {metadata, type, culprit} = event;\n\n  switch (type) {\n    case EventOrGroupType.ERROR:\n      return metadata.value;\n    case EventOrGroupType.CSP:\n      return metadata.message;\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      return '';\n    default:\n      return culprit || '';\n  }\n}\n\n/**\n * Get the location from an event.\n */\nexport function getLocation(event: Event | BaseGroup | GroupTombstone) {\n  if (isTombstone(event)) {\n    return undefined;\n  }\n\n  if (event.type === EventOrGroupType.ERROR && isNativePlatform(event.platform)) {\n    return event.metadata.filename || undefined;\n  }\n\n  return undefined;\n}\n\nexport function getTreeLabelPartDetails(part: TreeLabelPart) {\n  // Note: This function also exists in Python in eventtypes/base.py, to make\n  // porting efforts simpler it's recommended to keep both variants\n  // structurally similar.\n  if (typeof part === 'string') {\n    return part;\n  }\n\n  const label = part?.function || part?.package || part?.filebase || part?.type;\n  const classbase = part?.classbase;\n\n  if (classbase) {\n    return label ? `${classbase}.${label}` : classbase;\n  }\n\n  return label || '<unknown>';\n}\n\nfunction computeTitleWithTreeLabel(metadata: EventMetadata) {\n  const {type, current_tree_label, finest_tree_label} = metadata;\n\n  const treeLabel = current_tree_label || finest_tree_label;\n\n  const formattedTreeLabel = treeLabel\n    ? treeLabel.map(labelPart => getTreeLabelPartDetails(labelPart)).join(' | ')\n    : undefined;\n\n  if (!type) {\n    return {\n      title: formattedTreeLabel || metadata.function || '<unknown>',\n      treeLabel,\n    };\n  }\n\n  if (!formattedTreeLabel) {\n    return {title: type, treeLabel: undefined};\n  }\n\n  return {\n    title: `${type} | ${formattedTreeLabel}`,\n    treeLabel: [{type}, ...(treeLabel ?? [])],\n  };\n}\n\nexport function getTitle(\n  event: Event | BaseGroup,\n  features: string[] = [],\n  grouping = false\n) {\n  const {metadata, type, culprit} = event;\n\n  const customTitle =\n    features.includes('custom-event-title') && metadata?.title\n      ? metadata.title\n      : undefined;\n\n  switch (type) {\n    case EventOrGroupType.ERROR: {\n      if (customTitle) {\n        return {\n          title: customTitle,\n          subtitle: culprit,\n          treeLabel: undefined,\n        };\n      }\n\n      const displayTitleWithTreeLabel =\n        features.includes('grouping-title-ui') &&\n        (grouping ||\n          isNativePlatform(event.platform) ||\n          isMobilePlatform(event.platform));\n\n      if (displayTitleWithTreeLabel) {\n        return {\n          subtitle: culprit,\n          ...computeTitleWithTreeLabel(metadata),\n        };\n      }\n\n      return {\n        subtitle: culprit,\n        title: metadata.type || metadata.function || '<unknown>',\n        treeLabel: undefined,\n      };\n    }\n    case EventOrGroupType.CSP:\n      return {\n        title: customTitle ?? metadata.directive ?? '',\n        subtitle: metadata.uri ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      // Due to a regression some reports did not have message persisted\n      // (https://github.com/getsentry/sentry/pull/19794) so we need to fall\n      // back to the computed title for these.\n      return {\n        title: customTitle ?? (metadata.message || event.title),\n        subtitle: metadata.origin ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.DEFAULT:\n      return {\n        title: customTitle ?? metadata.title ?? '',\n        subtitle: '',\n        treeLabel: undefined,\n      };\n    default:\n      return {\n        title: customTitle ?? event.title,\n        subtitle: '',\n        treeLabel: undefined,\n      };\n  }\n}\n\n/**\n * Returns a short eventId with only 8 characters\n */\nexport function getShortEventId(eventId: string) {\n  return eventId.substring(0, 8);\n}\n","type Result = Record<string, {cursor: string; href: string; results: boolean | null}>;\n\nexport default function parseLinkHeader(header: string | null): Result {\n  if (header === null || header === '') {\n    return {};\n  }\n\n  const headerValues = header.split(',');\n  const links = {};\n\n  headerValues.forEach(val => {\n    const match =\n      /<([^>]+)>; rel=\"([^\"]+)\"(?:; results=\"([^\"]+)\")?(?:; cursor=\"([^\"]+)\")?/g.exec(\n        val\n      );\n    const hasResults = match![3] === 'true' ? true : match![3] === 'false' ? false : null;\n\n    links[match![2]] = {\n      href: match![1],\n      results: hasResults,\n      cursor: match![4],\n    };\n  });\n\n  return links;\n}\n","import {mobile} from 'sentry/data/platformCategories';\n\nexport function isNativePlatform(platform: string | undefined) {\n  switch (platform) {\n    case 'cocoa':\n    case 'objc':\n    case 'native':\n    case 'swift':\n    case 'c':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isMobilePlatform(platform: string | undefined) {\n  if (!platform) {\n    return false;\n  }\n\n  return ([...mobile] as string[]).includes(platform);\n}\n","import {Component} from 'react';\nimport memoize from 'lodash/memoize';\nimport partition from 'lodash/partition';\nimport uniqBy from 'lodash/uniqBy';\n\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Client} from 'sentry/api';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport {AvatarProject, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport RequestError from 'sentry/utils/requestError/requestError';\nimport withApi from 'sentry/utils/withApi';\nimport withProjects from 'sentry/utils/withProjects';\n\ntype ProjectPlaceholder = AvatarProject;\n\ntype State = {\n  /**\n   * The error that occurred if fetching failed\n   */\n  fetchError: null | RequestError;\n\n  /**\n   * Projects from API\n   */\n  fetchedProjects: Project[] | ProjectPlaceholder[];\n\n  /**\n   * This is state for when fetching data from API\n   */\n  fetching: boolean;\n\n  /**\n   * Project results (from API) are paginated and there are more projects\n   * that are not in the initial queryset\n   */\n  hasMore: null | boolean;\n\n  /**\n   * Reflects whether or not the initial fetch for the requested projects\n   * was fulfilled\n   */\n  initiallyLoaded: boolean;\n\n  /**\n   * This is set when we fail to find some slugs from both store and API\n   */\n  isIncomplete: null | boolean;\n  prevSearch: null | string;\n  /**\n   * Projects fetched from store\n   */\n  projectsFromStore: Project[];\n\n  nextCursor?: null | string;\n};\n\ntype RenderProps = {\n  /**\n   * Calls API and searches for project, accepts a callback function with signature:\n   * fn(searchTerm, {append: bool})\n   */\n  onSearch: (searchTerm: string, {append: boolean}) => void;\n\n  /**\n   * We want to make sure that at the minimum, we return a list of objects with only `slug`\n   * while we load actual project data\n   */\n  projects: Project[] | ProjectPlaceholder[];\n} & Pick<\n  State,\n  'isIncomplete' | 'fetching' | 'hasMore' | 'initiallyLoaded' | 'fetchError'\n>;\ntype RenderFunc = (props: RenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * If slugs is passed, forward placeholder objects with slugs while fetching\n   */\n  passthroughPlaceholderProject?: boolean;\n};\n\ntype Props = {\n  api: Client;\n\n  children: RenderFunc;\n\n  /**\n   * Organization slug\n   */\n  orgId: string;\n\n  /**\n   * List of projects that have we already have summaries for (i.e. from store)\n   */\n  projects: Project[];\n\n  /**\n   * Whether to fetch all the projects in the organization of which the user\n   * has access to\n   * */\n  allProjects?: boolean;\n\n  /**\n   * Number of projects to return when not using `props.slugs`\n   */\n  limit?: number;\n\n  /**\n   * List of project ids to look for summaries for, this can be from `props.projects`,\n   * otherwise fetch from API\n   */\n  projectIds?: number[];\n  /**\n   * List of slugs to look for summaries for, this can be from `props.projects`,\n   * otherwise fetch from API\n   */\n  slugs?: string[];\n} & DefaultProps;\n\nclass BaseProjects extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    passthroughPlaceholderProject: true,\n  };\n\n  state: State = {\n    fetchedProjects: [],\n    projectsFromStore: [],\n    initiallyLoaded: false,\n    fetching: false,\n    isIncomplete: null,\n    hasMore: null,\n    prevSearch: null,\n    nextCursor: null,\n    fetchError: null,\n  };\n\n  componentDidMount() {\n    const {slugs, projectIds} = this.props;\n\n    if (!!slugs?.length) {\n      this.loadSpecificProjects();\n    } else if (!!projectIds?.length) {\n      this.loadSpecificProjectsFromIds();\n    } else {\n      this.loadAllProjects();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {projects} = this.props;\n\n    if (projects !== prevProps.projects) {\n      this.updateProjectsFromStore();\n    }\n  }\n\n  /**\n   * Function to update projects when the store emits updates\n   */\n  updateProjectsFromStore() {\n    const {allProjects, projects, slugs} = this.props;\n\n    if (allProjects) {\n      this.setState({fetchedProjects: projects});\n      return;\n    }\n\n    if (!!slugs?.length) {\n      // Extract the requested projects from the store based on props.slugs\n      const projectsMap = this.getProjectsMap(projects);\n      const projectsFromStore = slugs.map(slug => projectsMap.get(slug)).filter(defined);\n      this.setState({projectsFromStore});\n    }\n  }\n\n  /**\n   * List of projects that need to be fetched via API\n   */\n  fetchQueue: Set<string> = new Set();\n\n  /**\n   * Memoized function that returns a `Map<project.slug, project>`\n   */\n  getProjectsMap: (projects: Project[]) => Map<string, Project> = memoize(\n    projects => new Map(projects.map(project => [project.slug, project]))\n  );\n\n  /**\n   * Memoized function that returns a `Map<project.id, project>`\n   */\n  getProjectsIdMap: (projects: Project[]) => Map<number, Project> = memoize(\n    projects => new Map(projects.map(project => [parseInt(project.id, 10), project]))\n  );\n\n  /**\n   * When `props.slugs` is included, identifies what projects we already\n   * have summaries for and what projects need to be fetched from API\n   */\n  loadSpecificProjects = () => {\n    const {slugs, projects} = this.props;\n\n    const projectsMap = this.getProjectsMap(projects);\n\n    // Split slugs into projects that are in store and not in store\n    // (so we can request projects not in store)\n    const [inStore, notInStore] = partition(slugs, slug => projectsMap.has(slug));\n\n    // Get the actual summaries of projects that are in store\n    const projectsFromStore = inStore.map(slug => projectsMap.get(slug)).filter(defined);\n\n    // Add to queue\n    notInStore.forEach(slug => this.fetchQueue.add(slug));\n\n    this.setState({\n      // placeholders for projects we need to fetch\n      fetchedProjects: notInStore.map(slug => ({slug})),\n      // set initiallyLoaded if any projects were fetched from store\n      initiallyLoaded: !!inStore.length,\n      projectsFromStore,\n    });\n\n    if (!notInStore.length) {\n      return;\n    }\n\n    this.fetchSpecificProjects();\n  };\n\n  /**\n   * When `props.projectIds` is included, identifies if we already\n   * have summaries them, otherwise fetches all projects from API\n   */\n  loadSpecificProjectsFromIds = () => {\n    const {projectIds, projects} = this.props;\n\n    const projectsMap = this.getProjectsIdMap(projects);\n\n    // Split projectIds into projects that are in store and not in store\n    // (so we can request projects not in store)\n    const [inStore, notInStore] = partition(projectIds, id => projectsMap.has(id));\n\n    if (notInStore.length) {\n      this.loadAllProjects();\n      return;\n    }\n\n    // Get the actual summaries of projects that are in store\n    const projectsFromStore = inStore.map(id => projectsMap.get(id)).filter(defined);\n\n    this.setState({\n      // set initiallyLoaded if any projects were fetched from store\n      initiallyLoaded: !!inStore.length,\n      projectsFromStore,\n    });\n  };\n\n  /**\n   * These will fetch projects via API (using project slug) provided by `this.fetchQueue`\n   */\n  fetchSpecificProjects = async () => {\n    const {api, orgId, passthroughPlaceholderProject} = this.props;\n\n    if (!this.fetchQueue.size) {\n      return;\n    }\n\n    this.setState({\n      fetching: true,\n    });\n\n    let projects: Project[] = [];\n    let fetchError = null;\n\n    try {\n      const {results} = await fetchProjects(api, orgId, {\n        slugs: Array.from(this.fetchQueue),\n      });\n      projects = results;\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n      fetchError = err;\n    }\n\n    const projectsMap = this.getProjectsMap(projects);\n\n    // For each item in the fetch queue, lookup the project object and in the case\n    // where something wrong has happened and we were unable to get project summary from\n    // the server, just fill in with an object with only the slug\n    const projectsOrPlaceholder: Project[] | ProjectPlaceholder[] = Array.from(\n      this.fetchQueue\n    )\n      .map(slug =>\n        projectsMap.has(slug)\n          ? projectsMap.get(slug)\n          : !!passthroughPlaceholderProject\n          ? {slug}\n          : null\n      )\n      .filter(defined);\n\n    this.setState({\n      fetchedProjects: projectsOrPlaceholder,\n      isIncomplete: this.fetchQueue.size !== projects.length,\n      initiallyLoaded: true,\n      fetching: false,\n      fetchError,\n    });\n\n    this.fetchQueue.clear();\n  };\n\n  /**\n   * If `props.slugs` is not provided, request from API a list of paginated project summaries\n   * that are in `prop.orgId`.\n   *\n   * Provide render prop with results as well as `hasMore` to indicate there are more results.\n   * Downstream consumers should use this to notify users so that they can e.g. narrow down\n   * results using search\n   */\n  loadAllProjects = async () => {\n    const {api, orgId, limit, allProjects} = this.props;\n\n    this.setState({\n      fetching: true,\n    });\n\n    try {\n      const {results, hasMore, nextCursor} = await fetchProjects(api, orgId, {\n        limit,\n        allProjects,\n      });\n\n      this.setState({\n        fetching: false,\n        fetchedProjects: results,\n        initiallyLoaded: true,\n        hasMore,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      this.setState({\n        fetching: false,\n        fetchedProjects: [],\n        initiallyLoaded: true,\n        fetchError: err,\n      });\n    }\n  };\n\n  /**\n   * This is an action provided to consumers for them to update the current projects\n   * result set using a simple search query. You can allow the new results to either\n   * be appended or replace the existing results.\n   *\n   * @param {String} search The search term to use\n   * @param {Object} options Options object\n   * @param {Boolean} options.append Results should be appended to existing list (otherwise, will replace)\n   */\n  handleSearch = async (search: string, {append}: {append?: boolean} = {}) => {\n    const {api, orgId, limit} = this.props;\n    const {prevSearch} = this.state;\n    const cursor = this.state.nextCursor;\n\n    this.setState({fetching: true});\n\n    try {\n      const {results, hasMore, nextCursor} = await fetchProjects(api, orgId, {\n        search,\n        limit,\n        prevSearch,\n        cursor,\n      });\n\n      this.setState((state: State) => {\n        let fetchedProjects;\n        if (append) {\n          // Remove duplicates\n          fetchedProjects = uniqBy(\n            [...state.fetchedProjects, ...results],\n            ({slug}) => slug\n          );\n        } else {\n          fetchedProjects = results;\n        }\n        return {\n          fetchedProjects,\n          hasMore,\n          fetching: false,\n          prevSearch: search,\n          nextCursor,\n        };\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      this.setState({\n        fetching: false,\n        fetchError: err,\n      });\n    }\n  };\n\n  render() {\n    const {slugs, children} = this.props;\n\n    const renderProps = {\n      // We want to make sure that at the minimum, we return a list of objects with only `slug`\n      // while we load actual project data\n      projects: this.state.initiallyLoaded\n        ? [...this.state.fetchedProjects, ...this.state.projectsFromStore]\n        : (slugs && slugs.map(slug => ({slug}))) || [],\n\n      // This is set when we fail to find some slugs from both store and API\n      isIncomplete: this.state.isIncomplete,\n\n      // This is state for when fetching data from API\n      fetching: this.state.fetching,\n\n      // Project results (from API) are paginated and there are more projects\n      // that are not in the initial queryset\n      hasMore: this.state.hasMore,\n\n      // Calls API and searches for project, accepts a callback function with signature:\n      //\n      // fn(searchTerm, {append: bool})\n      onSearch: this.handleSearch,\n\n      // Reflects whether or not the initial fetch for the requested projects\n      // was fulfilled\n      initiallyLoaded: this.state.initiallyLoaded,\n\n      // The error that occurred if fetching failed\n      fetchError: this.state.fetchError,\n    };\n\n    return children(renderProps);\n  }\n}\n\n/**\n * @deprecated consider using useProjects if possible.\n *\n * This is a utility component that should be used to fetch an organization's projects (summary).\n * It can either fetch explicit projects (e.g. via slug) or a paginated list of projects.\n * These will be passed down to the render prop (`children`).\n *\n * The legacy way of handling this is that `ProjectSummary[]` is expected to be included in an\n * `Organization` as well as being saved to `ProjectsStore`.\n */\nconst Projects = withProjects(withApi(BaseProjects));\n\nexport default Projects;\n\ntype FetchProjectsOptions = {\n  cursor?: State['nextCursor'];\n  prevSearch?: State['prevSearch'];\n  search?: State['prevSearch'];\n  slugs?: string[];\n} & Pick<Props, 'limit' | 'allProjects'>;\n\nasync function fetchProjects(\n  api: Client,\n  orgId: string,\n  {slugs, search, limit, prevSearch, cursor, allProjects}: FetchProjectsOptions = {}\n) {\n  const query: {\n    collapse: string[];\n    all_projects?: number;\n    cursor?: typeof cursor;\n    per_page?: number;\n    query?: string;\n  } = {\n    // Never return latestDeploys project property from api\n    collapse: ['latestDeploys'],\n  };\n\n  if (slugs && slugs.length) {\n    query.query = slugs.map(slug => `slug:${slug}`).join(' ');\n  }\n\n  if (search) {\n    query.query = `${query.query ? `${query.query} ` : ''}${search}`;\n  }\n\n  if (((!prevSearch && !search) || prevSearch === search) && cursor) {\n    query.cursor = cursor;\n  }\n\n  // \"0\" shouldn't be a valid value, so this check is fine\n  if (limit) {\n    query.per_page = limit;\n  }\n\n  if (allProjects) {\n    const projects = ProjectsStore.getAll();\n    const loading = ProjectsStore.isLoading();\n    // If the projects store is loaded then return all projects from the store\n    if (!loading) {\n      return {\n        results: projects,\n        hasMore: false,\n      };\n    }\n    // Otherwise mark the query to fetch all projects from the API\n    query.all_projects = 1;\n  }\n\n  let hasMore: null | boolean = false;\n  let nextCursor: null | string = null;\n  const [data, , resp] = await api.requestPromise(`/organizations/${orgId}/projects/`, {\n    includeAllArgs: true,\n    query,\n  });\n\n  const pageLinks = resp?.getResponseHeader('Link');\n  if (pageLinks) {\n    const paginationObject = parseLinkHeader(pageLinks);\n    hasMore =\n      paginationObject &&\n      (paginationObject.next.results || paginationObject.previous.results);\n    nextCursor = paginationObject.next.cursor;\n  }\n\n  // populate the projects store if all projects were fetched\n  if (allProjects) {\n    ProjectActions.loadProjects(data);\n  }\n\n  return {\n    results: data,\n    hasMore,\n    nextCursor,\n  };\n}\n","export function selectText(node: HTMLElement): void {\n  if (node instanceof HTMLInputElement && node.type === 'text') {\n    node.select();\n  } else if (node instanceof Node && window.getSelection) {\n    const range = document.createRange();\n    range.selectNode(node);\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n}\n","import {useEffect, useRef, useState} from 'react';\nimport uniqBy from 'lodash/uniqBy';\n\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Client} from 'sentry/api';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {AvatarProject, Project} from 'sentry/types';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport RequestError from 'sentry/utils/requestError/requestError';\nimport useApi from 'sentry/utils/useApi';\n\ntype ProjectPlaceholder = AvatarProject;\n\ntype State = {\n  /**\n   * The error that occurred if fetching failed\n   */\n  fetchError: null | RequestError;\n  /**\n   * This is state for when fetching data from API\n   */\n  fetching: boolean;\n  /**\n   * Indicates that Project results (from API) are paginated and there are more\n   * projects that are not in the initial response\n   */\n  hasMore: null | boolean;\n  /**\n   * Reflects whether or not the initial fetch for the requested projects\n   * was fulfilled. This accounts for both the store and specifically loaded\n   * slugs.\n   */\n  initiallyLoaded: boolean;\n  /**\n   * The last query we searched. Used to validate the cursor\n   */\n  lastSearch: null | string;\n  /**\n   * Pagination\n   */\n  nextCursor?: null | string;\n};\n\ntype Result = {\n  /**\n   * This is an action provided to consumers for them to update the current\n   * projects result set using a simple search query.\n   *\n   * Will always add new options into the store.\n   */\n  onSearch: (searchTerm: string) => Promise<void>;\n  /**\n   * When loading specific slugs, placeholder objects will be returned\n   */\n  placeholders: ProjectPlaceholder[];\n  /**\n   * The loaded projects list\n   */\n  projects: Project[];\n} & Pick<State, 'fetching' | 'hasMore' | 'fetchError' | 'initiallyLoaded'>;\n\ntype Options = {\n  /**\n   * Number of projects to return when not using `props.slugs`\n   */\n  limit?: number;\n  /**\n   * Specify an orgId, overriding the organization in the current context\n   */\n  orgId?: string;\n  /**\n   * List of slugs to look for summaries for, this can be from `props.projects`,\n   * otherwise fetch from API\n   */\n  slugs?: string[];\n};\n\ntype FetchProjectsOptions = {\n  cursor?: State['nextCursor'];\n  lastSearch?: State['lastSearch'];\n  limit?: Options['limit'];\n  search?: State['lastSearch'];\n  slugs?: string[];\n};\n\n/**\n * Helper function to actually load projects\n */\nasync function fetchProjects(\n  api: Client,\n  orgId: string,\n  {slugs, search, limit, lastSearch, cursor}: FetchProjectsOptions = {}\n) {\n  const query: {\n    collapse: string[];\n    all_projects?: number;\n    cursor?: typeof cursor;\n    per_page?: number;\n    query?: string;\n  } = {\n    // Never return latestDeploys project property from api\n    collapse: ['latestDeploys'],\n  };\n\n  if (slugs !== undefined && slugs.length > 0) {\n    query.query = slugs.map(slug => `slug:${slug}`).join(' ');\n  }\n\n  if (search) {\n    query.query = `${query.query ?? ''}${search}`.trim();\n  }\n\n  const prevSearchMatches = (!lastSearch && !search) || lastSearch === search;\n\n  if (prevSearchMatches && cursor) {\n    query.cursor = cursor;\n  }\n\n  if (limit !== undefined) {\n    query.per_page = limit;\n  }\n\n  let hasMore: null | boolean = false;\n  let nextCursor: null | string = null;\n  const [data, , resp] = await api.requestPromise(`/organizations/${orgId}/projects/`, {\n    includeAllArgs: true,\n    query,\n  });\n\n  const pageLinks = resp?.getResponseHeader('Link');\n  if (pageLinks) {\n    const paginationObject = parseLinkHeader(pageLinks);\n    hasMore = paginationObject?.next?.results || paginationObject?.previous?.results;\n    nextCursor = paginationObject?.next?.cursor;\n  }\n\n  return {results: data, hasMore, nextCursor};\n}\n\n/**\n * Provides projects from the ProjectStore\n *\n * This hook also provides a way to select specific project slugs, and search\n * (type-ahead) for more projects that may not be in the project store.\n *\n * NOTE: Currently ALL projects are always loaded, but this hook is designed\n * for future-compat in a world where we do _not_ load all projects.\n */\nfunction useProjects({limit, slugs, orgId: propOrgId}: Options = {}) {\n  const api = useApi();\n\n  const {organization} = useLegacyStore(OrganizationStore);\n  const store = useLegacyStore(ProjectsStore);\n\n  const orgId = propOrgId ?? organization?.slug;\n\n  const storeSlugs = new Set(store.projects.map(t => t.slug));\n  const slugsToLoad = slugs?.filter(slug => !storeSlugs.has(slug)) ?? [];\n  const shouldLoadSlugs = slugsToLoad.length > 0;\n\n  const [state, setState] = useState<State>({\n    initiallyLoaded: !store.loading && !shouldLoadSlugs,\n    fetching: shouldLoadSlugs,\n    hasMore: null,\n    lastSearch: null,\n    nextCursor: null,\n    fetchError: null,\n  });\n\n  const slugsRef = useRef<Set<string> | null>(null);\n\n  // Only initialize slugsRef.current once and modify it when we receive new\n  // slugs determined through set equality\n  if (slugs !== undefined) {\n    if (slugsRef.current === null) {\n      slugsRef.current = new Set(slugs);\n    }\n\n    if (\n      slugs.length !== slugsRef.current.size ||\n      slugs.some(slug => !slugsRef.current?.has(slug))\n    ) {\n      slugsRef.current = new Set(slugs);\n    }\n  }\n\n  async function loadProjectsBySlug() {\n    if (orgId === undefined) {\n      // eslint-disable-next-line no-console\n      console.error('Cannot use useProjects({slugs}) without an organization in context');\n      return;\n    }\n\n    setState({...state, fetching: true});\n    try {\n      const {results, hasMore, nextCursor} = await fetchProjects(api, orgId, {\n        slugs: slugsToLoad,\n        limit,\n      });\n\n      const fetchedProjects = uniqBy([...store.projects, ...results], ({slug}) => slug);\n      ProjectActions.loadProjects(fetchedProjects);\n\n      setState({\n        ...state,\n        hasMore,\n        fetching: false,\n        initiallyLoaded: true,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({\n        ...state,\n        fetching: false,\n        initiallyLoaded: !store.loading,\n        fetchError: err,\n      });\n    }\n  }\n\n  async function handleSearch(search: string) {\n    const {lastSearch} = state;\n    const cursor = state.nextCursor;\n\n    if (search === '') {\n      return;\n    }\n\n    if (orgId === undefined) {\n      // eslint-disable-next-line no-console\n      console.error('Cannot use useProjects.onSearch without an organization in context');\n      return;\n    }\n\n    setState({...state, fetching: true});\n\n    try {\n      api.clear();\n      const {results, hasMore, nextCursor} = await fetchProjects(api, orgId, {\n        search,\n        limit,\n        lastSearch,\n        cursor,\n      });\n\n      const fetchedProjects = uniqBy([...store.projects, ...results], ({slug}) => slug);\n\n      // Only update the store if we have more items\n      if (fetchedProjects.length > store.projects.length) {\n        ProjectActions.loadProjects(fetchedProjects);\n      }\n\n      setState({\n        ...state,\n        hasMore,\n        fetching: false,\n        lastSearch: search,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, fetchError: err});\n    }\n  }\n\n  useEffect(() => {\n    // Load specified team slugs\n    if (shouldLoadSlugs) {\n      loadProjectsBySlug();\n      return;\n    }\n  }, [slugsRef.current]);\n\n  // Update initiallyLoaded when we finish loading within the projectStore\n  useEffect(() => {\n    const storeLoaded = !store.loading;\n\n    if (state.initiallyLoaded === storeLoaded) {\n      return;\n    }\n\n    if (shouldLoadSlugs) {\n      return;\n    }\n\n    setState({...state, initiallyLoaded: storeLoaded});\n  }, [store.loading]);\n\n  const {initiallyLoaded, fetching, fetchError, hasMore} = state;\n\n  const filteredProjects = slugs\n    ? store.projects.filter(t => slugs.includes(t.slug))\n    : store.projects;\n\n  const placeholders = slugsToLoad.map(slug => ({slug}));\n\n  const result: Result = {\n    projects: filteredProjects,\n    placeholders,\n    fetching: fetching || store.loading,\n    initiallyLoaded,\n    fetchError,\n    hasMore,\n    onSearch: handleSearch,\n  };\n\n  return result;\n}\n\nexport default useProjects;\n","import {Project} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport useProjects from 'sentry/utils/useProjects';\n\ntype InjectedProjectsProps = {\n  projects: Project[];\n  loadingProjects?: boolean;\n};\n\n/**\n * Higher order component that uses ProjectsStore and provides a list of projects\n */\nfunction withProjects<P extends InjectedProjectsProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  type Props = Omit<P, keyof InjectedProjectsProps>;\n\n  const Wrapper: React.FC<Props> = props => {\n    const {projects, initiallyLoaded} = useProjects();\n    const loadingProjects = !initiallyLoaded;\n\n    return <WrappedComponent {...(props as P)} {...{projects, loadingProjects}} />;\n  };\n\n  Wrapper.displayName = `withProjects(${getDisplayName(WrappedComponent)})`;\n\n  return Wrapper;\n}\n\nexport default withProjects;\n"],"names":["createActions","OrganizationsActions","ProjectActions","space","Badge","children","text","props","p","theme","badge","type","color","background","cloneElement","isValidElement","useCallback","useEffect","useState","findDOMNode","copy","addErrorMessage","addSuccessMessage","t","isSupported","document","queryCommandSupported","Clipboard","hideMessages","successMessage","errorMessage","value","onSuccess","onError","hideUnsupported","element","setElement","handleClick","copyWasSuccessful","addEventListener","removeEventListener","handleMount","ref","Fragment","useRef","components","selectComponents","useButton","FocusScope","useMenuTrigger","useOverlay","useOverlayPosition","mergeProps","useResizeObserver","useMenuTriggerState","Button","DropdownButton","SelectControl","LoadingIndicator","getSelectedOptions","opts","reduce","acc","cur","options","concat","CompactSelectControl","innerProps","hasValue","selectProps","isSearchable","menuTitle","isClearable","isLoading","clearValue","undefined","Menu","targetRef","onClose","offset","crossOffset","containerPadding","placement","shouldCloseOnBlur","isDismissable","maxMenuHeight","minMenuWidth","overlayRef","overlayProps","isOpen","shouldCloseOnInteractOutside","target","current","contains","positionProps","menuHeight","style","maxHeight","Math","min","CompactSelect","onChange","defaultValue","valueProp","isDisabled","disabledProp","multiple","placeholder","onChangeValueMap","trigger","triggerLabel","triggerProps","size","className","renderWrapAs","closeOnSelect","length","triggerRef","state","menuTriggerProps","buttonProps","onPress","toggle","internalValue","setInternalValue","getLabel","newValue","valueSet","Array","isArray","selectedOptions","map","val","flat","label","setLabel","onValueChange","option","valueMap","opt","close","triggerWidth","setTriggerWidth","updateTriggerWidth","Promise","resolve","window","setTimeout","newTriggerWidth","offsetWidth","onResize","ResizeObserver","renderTrigger","onMenuClose","renderMenu","Control","ClearIndicator","MenuControlWrap","ButtonLabel","overflowEllipsis","StyledBadge","Overlay","borderRadius","backgroundElevated","translucentBorder","dropShadowHeavy","fontSizeMedium","zIndex","dropdown","minWidth","MenuHeader","translucentInnerBorder","MenuTitle","fontSizeSmall","headingColor","StyledLoadingIndicator","ClearButton","subText","withRouter","qs","Link","extractSelectionParameters","GlobalSelectionLink","location","to","globalQuery","query","hasGlobalQuery","Object","keys","toWithGlobalQuery","pathname","routerProps","queryStringObject","search","parse","queryString","stringify","url","createPortal","useTheme","AnimatePresence","PositionWrapper","useHoverOverlay","Hovercard","body","bodyClassName","containerClassName","header","displayTimeout","tipBorderColor","tipColor","hoverOverlayProps","wrapTrigger","arrowData","arrowProps","isHoverable","hovercardContent","hovercard","border","StyledHovercard","fontSizeExtraSmall","Header","backgroundSecondary","borderRadiusTop","Body","Divider","innerBorder","identity","isEqual","pick","pickBy","DEFAULT_STATS_PERIOD","DATE_TIME_KEYS","URL_PARAM","getDefaultSelection","datetime","start","end","period","utc","projects","environments","values","extractDatetimeSelectionParameters","isSelectionEqual","selection","other","toString","START","END","UTC","PERIOD","PROJECT","ENVIRONMENT","PAGE_URL_PARAM","PAGE_START","PAGE_END","PAGE_UTC","PAGE_PERIOD","DATE_TIME","ALL_ACCESS_PROJECTS","createStore","TeamActions","makeSafeRefluxStore","storeConfig","itemsById","loading","unsubscribeListeners","init","reset","push","listenTo","addTeamSuccess","onAddTeam","changeSlug","onChangeSlug","createSuccess","onCreateSuccess","loadProjects","loadInitialData","loadStatsSuccess","onStatsLoadSuccess","removeTeamSuccess","onRemoveTeam","updateSuccess","onUpdateSuccess","onDeleteTeam","items","mapping","project","id","fromEntries","Set","prevSlug","newSlug","prevProject","getBySlug","newProject","slug","data","getById","entries","filter","projectId","forEach","stats","touchedIds","teamSlug","getAll","teams","find","removeTeamFromProject","affectedProjectIds","projectSlug","team","newTeams","sort","a","b","localeCompare","getState","ProjectsStore","EventOrGroupType","isMobilePlatform","isNativePlatform","isTombstone","maybe","hasOwnProperty","getMessage","event","culprit","metadata","ERROR","CSP","message","EXPECTCT","EXPECTSTAPLE","HPKP","getLocation","platform","filename","getTreeLabelPartDetails","part","function","package","filebase","classbase","computeTitleWithTreeLabel","current_tree_label","finest_tree_label","treeLabel","formattedTreeLabel","labelPart","join","title","getTitle","features","grouping","customTitle","includes","subtitle","displayTitleWithTreeLabel","directive","uri","origin","DEFAULT","getShortEventId","eventId","substring","parseLinkHeader","headerValues","split","links","match","exec","hasResults","href","results","cursor","mobile","Component","memoize","partition","uniqBy","defined","withApi","withProjects","BaseProjects","fetchedProjects","projectsFromStore","initiallyLoaded","fetching","isIncomplete","hasMore","prevSearch","nextCursor","fetchError","Map","parseInt","slugs","projectsMap","getProjectsMap","inStore","notInStore","has","get","fetchQueue","add","setState","fetchSpecificProjects","projectIds","getProjectsIdMap","loadAllProjects","api","orgId","passthroughPlaceholderProject","fetchProjects","from","err","console","error","projectsOrPlaceholder","clear","limit","allProjects","append","componentDidMount","loadSpecificProjects","loadSpecificProjectsFromIds","componentDidUpdate","prevProps","updateProjectsFromStore","render","renderProps","onSearch","handleSearch","Projects","collapse","per_page","all_projects","resp","requestPromise","includeAllArgs","pageLinks","getResponseHeader","paginationObject","next","previous","selectText","node","HTMLInputElement","select","Node","getSelection","range","createRange","selectNode","removeAllRanges","addRange","OrganizationStore","useLegacyStore","useApi","lastSearch","trim","prevSearchMatches","useProjects","propOrgId","organization","store","storeSlugs","slugsToLoad","shouldLoadSlugs","slugsRef","some","loadProjectsBySlug","storeLoaded","filteredProjects","placeholders","result","getDisplayName","WrappedComponent","Wrapper","loadingProjects","displayName"],"sourceRoot":""}