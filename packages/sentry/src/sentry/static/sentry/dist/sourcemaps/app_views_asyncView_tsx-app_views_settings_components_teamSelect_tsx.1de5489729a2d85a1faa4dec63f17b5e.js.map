{"version":3,"file":"chunks/app_views_asyncView_tsx-app_views_settings_components_teamSelect_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/teamSelect.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport {TeamBadge} from 'sentry/components/idBadge/teamBadge';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Team} from 'sentry/types';\nimport useTeams from 'sentry/utils/useTeams';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\ntype Props = {\n  /**\n   * Should button be disabled\n   */\n  disabled: boolean;\n  /**\n   * callback when teams are added\n   */\n  onAddTeam: (team: Team) => void;\n  /**\n   * Callback when teams are removed\n   */\n  onRemoveTeam: (teamSlug: string) => void;\n  organization: Organization;\n  /**\n   * Teams that are already selected.\n   */\n  selectedTeams: Team[];\n  /**\n   * Message to display when the last team is removed\n   * if empty no confirm will be displayed.\n   */\n  confirmLastTeamRemoveMessage?: string;\n  /**\n   * Used to determine whether we should show a loading state while waiting for teams\n   */\n  loadingTeams?: boolean;\n  /**\n   * Optional menu header.\n   */\n  menuHeader?: React.ReactElement;\n};\n\nfunction TeamSelect({\n  disabled,\n  selectedTeams,\n  menuHeader,\n  organization,\n  onAddTeam,\n  onRemoveTeam,\n  confirmLastTeamRemoveMessage,\n  loadingTeams,\n}: Props) {\n  const {teams, onSearch, fetching} = useTeams();\n\n  const handleAddTeam = (option: Item) => {\n    const team = teams.find(tm => tm.slug === option.value);\n    if (team) {\n      onAddTeam(team);\n    }\n  };\n\n  const renderBody = () => {\n    if (selectedTeams.length === 0) {\n      return <EmptyMessage>{t('No Teams assigned')}</EmptyMessage>;\n    }\n    const confirmMessage =\n      selectedTeams.length === 1 && confirmLastTeamRemoveMessage\n        ? confirmLastTeamRemoveMessage\n        : null;\n\n    return selectedTeams.map(team => (\n      <TeamRow\n        key={team.slug}\n        orgId={organization.slug}\n        team={team}\n        onRemove={slug => onRemoveTeam(slug)}\n        disabled={disabled}\n        confirmMessage={confirmMessage}\n      />\n    ));\n  };\n\n  // Only show options that aren't selected in the dropdown\n  const options = teams\n    .filter(team => !selectedTeams.some(selectedTeam => selectedTeam.slug === team.slug))\n    .map((team, index) => ({\n      index,\n      value: team.slug,\n      searchKey: team.slug,\n      label: <DropdownTeamBadge avatarSize={18} team={team} />,\n    }));\n\n  return (\n    <Panel>\n      <PanelHeader hasButtons>\n        {t('Team')}\n        <DropdownAutoComplete\n          items={options}\n          busyItemsStillVisible={fetching}\n          onChange={debounce<(e: React.ChangeEvent<HTMLInputElement>) => void>(\n            e => onSearch(e.target.value),\n            DEFAULT_DEBOUNCE_DURATION\n          )}\n          onSelect={handleAddTeam}\n          emptyMessage={t('No teams')}\n          menuHeader={menuHeader}\n          disabled={disabled}\n          alignMenu=\"right\"\n        >\n          {({isOpen}) => (\n            <DropdownButton\n              aria-label={t('Add Team')}\n              isOpen={isOpen}\n              size=\"xs\"\n              disabled={disabled}\n            >\n              {t('Add Team')}\n            </DropdownButton>\n          )}\n        </DropdownAutoComplete>\n      </PanelHeader>\n\n      <PanelBody>{loadingTeams ? <LoadingIndicator /> : renderBody()}</PanelBody>\n    </Panel>\n  );\n}\n\ntype TeamRowProps = {\n  confirmMessage: string | null;\n  disabled: boolean;\n  onRemove: Props['onRemoveTeam'];\n  orgId: string;\n  team: Team;\n};\n\nconst TeamRow = ({orgId, team, onRemove, disabled, confirmMessage}: TeamRowProps) => (\n  <TeamPanelItem>\n    <StyledLink to={`/settings/${orgId}/teams/${team.slug}/`}>\n      <TeamBadge team={team} />\n    </StyledLink>\n    <Confirm\n      message={confirmMessage}\n      bypass={!confirmMessage}\n      onConfirm={() => onRemove(team.slug)}\n      disabled={disabled}\n    >\n      <Button size=\"xs\" icon={<IconSubtract isCircled size=\"xs\" />} disabled={disabled}>\n        {t('Remove')}\n      </Button>\n    </Confirm>\n  </TeamPanelItem>\n);\n\nconst DropdownTeamBadge = styled(TeamBadge)`\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-transform: none;\n`;\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst StyledLink = styled(Link)`\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nexport default TeamSelect;\n"],"names":["AsyncComponent","SentryDocumentTitle","AsyncView","getTitle","render","renderComponent","debounce","Button","Confirm","DropdownAutoComplete","DropdownButton","TeamBadge","Link","LoadingIndicator","Panel","PanelBody","PanelHeader","PanelItem","DEFAULT_DEBOUNCE_DURATION","IconSubtract","t","space","useTeams","EmptyMessage","TeamSelect","disabled","selectedTeams","menuHeader","organization","onAddTeam","onRemoveTeam","confirmLastTeamRemoveMessage","loadingTeams","teams","onSearch","fetching","handleAddTeam","option","team","find","tm","slug","value","renderBody","length","confirmMessage","map","options","filter","some","selectedTeam","index","searchKey","label","e","target","isOpen","TeamRow","orgId","onRemove","DropdownTeamBadge","p","theme","fontSizeMedium","TeamPanelItem","StyledLink"],"sourceRoot":""}