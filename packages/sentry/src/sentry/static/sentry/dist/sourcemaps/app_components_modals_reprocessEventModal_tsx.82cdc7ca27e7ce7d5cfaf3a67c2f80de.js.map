{"version":3,"file":"chunks/app_components_modals_reprocessEventModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/modals/reprocessEventModal.tsx"],"sourcesContent":["import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Form from 'sentry/components/forms/form';\nimport NumberField from 'sentry/components/forms/numberField';\nimport RadioField from 'sentry/components/forms/radioField';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, Organization} from 'sentry/types';\n\nconst impacts = [\n  tct(\n    \"[strong:Quota applies.] Every event you choose to reprocess counts against your plan's quota. Rate limits and spike protection do not apply.\",\n    {strong: <strong />}\n  ),\n  tct(\n    '[strong:Attachment storage required.] If your events come from minidumps or unreal crash reports, you must have [link:attachment storage] enabled.',\n    {\n      strong: <strong />,\n      link: (\n        <ExternalLink href=\"https://docs.sentry.io/platforms/native/enriching-events/attachments/#crash-reports-and-privacy\" />\n      ),\n    }\n  ),\n  t(\n    'Please wait one hour after upload before attempting to reprocess missing debug files.'\n  ),\n];\n\nconst remainingEventsChoices: [string, string][] = [\n  ['keep', t('Keep')],\n  ['delete', t('Delete')],\n];\n\nexport type ReprocessEventModalOptions = {\n  groupId: Group['id'];\n  organization: Organization;\n};\n\ntype Props = ModalRenderProps & ReprocessEventModalOptions;\n\ntype State = {\n  maxEvents?: number;\n};\n\nclass ReprocessingEventModal extends Component<Props, State> {\n  state: State = {maxEvents: undefined};\n\n  handleSuccess = () => {\n    const {closeModal} = this.props;\n\n    closeModal();\n    window.location.reload();\n  };\n\n  handleError() {\n    addErrorMessage(t('Failed to reprocess. Please check your input.'));\n  }\n\n  handleMaxEventsChange = (maxEvents: string) => {\n    this.setState({maxEvents: Number(maxEvents) || undefined});\n  };\n\n  render() {\n    const {organization, Header, Body, closeModal, groupId} = this.props;\n    const {maxEvents} = this.state;\n    const orgSlug = organization.slug;\n    const endpoint = `/organizations/${orgSlug}/issues/${groupId}/reprocessing/`;\n    const title = t('Reprocess Events');\n\n    return (\n      <Fragment>\n        <Header closeButton>{title}</Header>\n        <Body>\n          <Introduction>\n            {t(\n              'Reprocessing applies new debug files and grouping enhancements to this Issue. Please consider these impacts:'\n            )}\n          </Introduction>\n          <StyledList symbol=\"bullet\">\n            {impacts.map((impact, index) => (\n              <ListItem key={index}>{impact}</ListItem>\n            ))}\n          </StyledList>\n          <Introduction>\n            {tct('For more information, please refer to [link:the documentation.]', {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/reprocessing/\" />\n              ),\n            })}\n          </Introduction>\n          <Form\n            submitLabel={title}\n            apiEndpoint={endpoint}\n            apiMethod=\"POST\"\n            initialData={{maxEvents: undefined, remainingEvents: 'keep'}}\n            onSubmitSuccess={this.handleSuccess}\n            onSubmitError={this.handleError}\n            onCancel={closeModal}\n            footerClass=\"modal-footer\"\n          >\n            <NumberField\n              name=\"maxEvents\"\n              label={t('Number of events to be reprocessed')}\n              help={t('If you set a limit, we will reprocess your most recent events.')}\n              placeholder={t('Reprocess all events')}\n              onChange={this.handleMaxEventsChange}\n              min={1}\n            />\n\n            <RadioField\n              orientInline\n              label={t('Remaining events')}\n              help={t('What to do with the events that are not reprocessed.')}\n              name=\"remainingEvents\"\n              choices={remainingEventsChoices}\n              disabled={maxEvents === undefined}\n            />\n          </Form>\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nexport default ReprocessingEventModal;\n\nconst Introduction = styled('p')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst StyledList = styled(List)`\n  gap: ${space(1)};\n  margin-bottom: ${space(4)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n"],"names":["Component","Fragment","addErrorMessage","Form","NumberField","RadioField","ExternalLink","List","ListItem","t","tct","space","impacts","strong","link","remainingEventsChoices","ReprocessingEventModal","maxEvents","undefined","closeModal","props","window","location","reload","setState","Number","handleError","render","organization","Header","Body","groupId","state","orgSlug","slug","endpoint","title","map","impact","index","remainingEvents","handleSuccess","handleMaxEventsChange","Introduction","p","theme","fontSizeLarge","StyledList","fontSizeMedium"],"sourceRoot":""}