{"version":3,"file":"chunks/app_utils_discover_genericDiscoverQuery_tsx-app_views_performance_traceDetails_utils_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/interfaces/spans/constants.tsx","webpack:///./app/components/events/interfaces/spans/utils.tsx","webpack:///./app/components/performance/waterfall/treeConnector.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/utils/performance/contexts/performanceEventViewContext.tsx","webpack:///./app/utils/performance/contexts/utils.tsx","webpack:///./app/utils/performance/quickTrace/utils.tsx","webpack:///./app/utils/performance/vitals/constants.tsx","webpack:///./app/views/performance/traceDetails/utils.tsx"],"sourcesContent":["export const MINIMAP_HEIGHT = 120;\n\nexport const MINIMAP_SPAN_BAR_HEIGHT = 4;\n\nexport const NUM_OF_SPANS_FIT_IN_MINI_MAP = MINIMAP_HEIGHT / MINIMAP_SPAN_BAR_HEIGHT;\n\nexport const TIME_AXIS_HEIGHT = 20;\n\nconst SECONDARY_HEADER_HEIGHT = 20;\n\nexport const MINIMAP_CONTAINER_HEIGHT =\n  MINIMAP_HEIGHT + TIME_AXIS_HEIGHT + SECONDARY_HEADER_HEIGHT + 1;\n\nexport const VIEW_HANDLE_HEIGHT = 18;\n\nexport const MERGE_LABELS_THRESHOLD_PERCENT = 10;\n","import {browserHistory} from 'react-router';\nimport {Location} from 'history';\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\nimport maxBy from 'lodash/maxBy';\nimport set from 'lodash/set';\nimport moment from 'moment';\n\nimport {\n  TOGGLE_BORDER_BOX,\n  TOGGLE_BUTTON_MAX_WIDTH,\n} from 'sentry/components/performance/waterfall/treeConnector';\nimport {Organization} from 'sentry/types';\nimport {EntryType, EventTransaction} from 'sentry/types/event';\nimport {assert} from 'sentry/types/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {WebVital} from 'sentry/utils/fields';\nimport {TraceError} from 'sentry/utils/performance/quickTrace/types';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {getPerformanceTransaction} from 'sentry/utils/performanceForSentry';\nimport {Theme} from 'sentry/utils/theme';\n\nimport {MERGE_LABELS_THRESHOLD_PERCENT} from './constants';\nimport {\n  EnhancedSpan,\n  FocusedSpanIDMap,\n  GapSpanType,\n  OrphanSpanType,\n  OrphanTreeDepth,\n  ParsedTraceType,\n  ProcessedSpanType,\n  RawSpanType,\n  SpanEntry,\n  SpanType,\n  TraceContextType,\n  TreeDepthType,\n} from './types';\n\nexport const isValidSpanID = (maybeSpanID: any) =>\n  isString(maybeSpanID) && maybeSpanID.length > 0;\n\nexport const setSpansOnTransaction = (spanCount: number) => {\n  const transaction = getPerformanceTransaction();\n\n  if (!transaction || spanCount === 0) {\n    return;\n  }\n\n  const spanCountGroups = [10, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1001];\n  const spanGroup = spanCountGroups.find(g => spanCount <= g) || -1;\n\n  transaction.setTag('ui.spanCount', spanCount);\n  transaction.setTag('ui.spanCount.grouped', `<=${spanGroup}`);\n};\n\nexport type SpanBoundsType = {endTimestamp: number; startTimestamp: number};\nexport type SpanGeneratedBoundsType =\n  | {isSpanVisibleInView: boolean; type: 'TRACE_TIMESTAMPS_EQUAL'}\n  | {isSpanVisibleInView: boolean; type: 'INVALID_VIEW_WINDOW'}\n  | {\n      isSpanVisibleInView: boolean;\n      start: number;\n      type: 'TIMESTAMPS_EQUAL';\n      width: number;\n    }\n  | {\n      end: number;\n      isSpanVisibleInView: boolean;\n      start: number;\n      type: 'TIMESTAMPS_REVERSED';\n    }\n  | {\n      end: number;\n      isSpanVisibleInView: boolean;\n      start: number;\n      type: 'TIMESTAMPS_STABLE';\n    };\n\nexport type SpanViewBoundsType = {\n  isSpanVisibleInView: boolean;\n  left: undefined | number;\n  warning: undefined | string;\n  width: undefined | number;\n};\n\nconst normalizeTimestamps = (spanBounds: SpanBoundsType): SpanBoundsType => {\n  const {startTimestamp, endTimestamp} = spanBounds;\n\n  if (startTimestamp > endTimestamp) {\n    return {startTimestamp: endTimestamp, endTimestamp: startTimestamp};\n  }\n\n  return spanBounds;\n};\n\nexport enum TimestampStatus {\n  Stable,\n  Reversed,\n  Equal,\n}\n\nexport const parseSpanTimestamps = (spanBounds: SpanBoundsType): TimestampStatus => {\n  const startTimestamp: number = spanBounds.startTimestamp;\n  const endTimestamp: number = spanBounds.endTimestamp;\n\n  if (startTimestamp < endTimestamp) {\n    return TimestampStatus.Stable;\n  }\n\n  if (startTimestamp === endTimestamp) {\n    return TimestampStatus.Equal;\n  }\n\n  return TimestampStatus.Reversed;\n};\n\n// given the start and end trace timestamps, and the view window, we want to generate a function\n// that'll output the relative %'s for the width and placements relative to the left-hand side.\n//\n// The view window (viewStart and viewEnd) are percentage values (between 0% and 100%), they correspond to the window placement\n// between the start and end trace timestamps.\nexport const boundsGenerator = (bounds: {\n  // unix timestamp\n  traceEndTimestamp: number;\n  traceStartTimestamp: number;\n  // in [0, 1]\n  viewEnd: number;\n  // unix timestamp\n  viewStart: number; // in [0, 1]\n}) => {\n  const {viewStart, viewEnd} = bounds;\n\n  const {startTimestamp: traceStartTimestamp, endTimestamp: traceEndTimestamp} =\n    normalizeTimestamps({\n      startTimestamp: bounds.traceStartTimestamp,\n      endTimestamp: bounds.traceEndTimestamp,\n    });\n\n  // viewStart and viewEnd are percentage values (%) of the view window relative to the left\n  // side of the trace view minimap\n\n  // invariant: viewStart <= viewEnd\n\n  // duration of the entire trace in seconds\n  const traceDuration = traceEndTimestamp - traceStartTimestamp;\n\n  const viewStartTimestamp = traceStartTimestamp + viewStart * traceDuration;\n  const viewEndTimestamp = traceEndTimestamp - (1 - viewEnd) * traceDuration;\n  const viewDuration = viewEndTimestamp - viewStartTimestamp;\n\n  return (spanBounds: SpanBoundsType): SpanGeneratedBoundsType => {\n    // TODO: alberto.... refactor so this is impossible 😠\n    if (traceDuration <= 0) {\n      return {\n        type: 'TRACE_TIMESTAMPS_EQUAL',\n        isSpanVisibleInView: true,\n      };\n    }\n\n    if (viewDuration <= 0) {\n      return {\n        type: 'INVALID_VIEW_WINDOW',\n        isSpanVisibleInView: true,\n      };\n    }\n\n    const {startTimestamp, endTimestamp} = normalizeTimestamps(spanBounds);\n\n    const timestampStatus = parseSpanTimestamps(spanBounds);\n\n    const start = (startTimestamp - viewStartTimestamp) / viewDuration;\n    const end = (endTimestamp - viewStartTimestamp) / viewDuration;\n\n    const isSpanVisibleInView = end > 0 && start < 1;\n\n    switch (timestampStatus) {\n      case TimestampStatus.Equal: {\n        return {\n          type: 'TIMESTAMPS_EQUAL',\n          start,\n          width: 1,\n          // a span bar is visible even if they're at the extreme ends of the view selection.\n          // these edge cases are:\n          // start == end == 0, and\n          // start == end == 1\n          isSpanVisibleInView: end >= 0 && start <= 1,\n        };\n      }\n      case TimestampStatus.Reversed: {\n        return {\n          type: 'TIMESTAMPS_REVERSED',\n          start,\n          end,\n          isSpanVisibleInView,\n        };\n      }\n      case TimestampStatus.Stable: {\n        return {\n          type: 'TIMESTAMPS_STABLE',\n          start,\n          end,\n          isSpanVisibleInView,\n        };\n      }\n      default: {\n        const _exhaustiveCheck: never = timestampStatus;\n        return _exhaustiveCheck;\n      }\n    }\n  };\n};\n\nexport function generateRootSpan(trace: ParsedTraceType): RawSpanType {\n  const rootSpan: RawSpanType = {\n    trace_id: trace.traceID,\n    span_id: trace.rootSpanID,\n    parent_span_id: trace.parentSpanID,\n    start_timestamp: trace.traceStartTimestamp,\n    timestamp: trace.traceEndTimestamp,\n    op: trace.op,\n    description: trace.description,\n    data: {},\n    status: trace.rootSpanStatus,\n    hash: trace.hash,\n    exclusive_time: trace.exclusiveTime,\n  };\n\n  return rootSpan;\n}\n\n// start and end are assumed to be unix timestamps with fractional seconds\nexport function getTraceDateTimeRange(input: {end: number; start: number}): {\n  end: string;\n  start: string;\n} {\n  const start = moment\n    .unix(input.start)\n    .subtract(12, 'hours')\n    .utc()\n    .format('YYYY-MM-DDTHH:mm:ss.SSS');\n\n  const end = moment\n    .unix(input.end)\n    .add(12, 'hours')\n    .utc()\n    .format('YYYY-MM-DDTHH:mm:ss.SSS');\n\n  return {\n    start,\n    end,\n  };\n}\n\nexport function isGapSpan(span: ProcessedSpanType): span is GapSpanType {\n  if ('type' in span) {\n    return span.type === 'gap';\n  }\n\n  return false;\n}\n\nexport function isOrphanSpan(span: ProcessedSpanType): span is OrphanSpanType {\n  if ('type' in span) {\n    if (span.type === 'orphan') {\n      return true;\n    }\n\n    if (span.type === 'gap') {\n      return span.isOrphan;\n    }\n  }\n\n  return false;\n}\n\nexport function getSpanID(span: ProcessedSpanType, defaultSpanID: string = ''): string {\n  if (isGapSpan(span)) {\n    return defaultSpanID;\n  }\n\n  return span.span_id;\n}\n\nexport function getSpanOperation(span: ProcessedSpanType): string | undefined {\n  if (isGapSpan(span)) {\n    return undefined;\n  }\n\n  return span.op;\n}\n\nexport function getSpanTraceID(span: ProcessedSpanType): string {\n  if (isGapSpan(span)) {\n    return 'gap-span';\n  }\n\n  return span.trace_id;\n}\n\nexport function getSpanParentSpanID(span: ProcessedSpanType): string | undefined {\n  if (isGapSpan(span)) {\n    return 'gap-span';\n  }\n\n  return span.parent_span_id;\n}\n\nexport function getTraceContext(\n  event: Readonly<EventTransaction>\n): TraceContextType | undefined {\n  return event?.contexts?.trace;\n}\n\nexport function parseTrace(event: Readonly<EventTransaction>): ParsedTraceType {\n  const spanEntry = event.entries.find((entry: SpanEntry | any): entry is SpanEntry => {\n    return entry.type === EntryType.SPANS;\n  });\n\n  const spans: Array<RawSpanType> = spanEntry?.data ?? [];\n\n  const traceContext = getTraceContext(event);\n  const traceID = (traceContext && traceContext.trace_id) || '';\n  const rootSpanID = (traceContext && traceContext.span_id) || '';\n  const rootSpanOpName = (traceContext && traceContext.op) || 'transaction';\n  const description = traceContext && traceContext.description;\n  const parentSpanID = traceContext && traceContext.parent_span_id;\n  const rootSpanStatus = traceContext && traceContext.status;\n  const hash = traceContext && traceContext.hash;\n  const exclusiveTime = traceContext && traceContext.exclusive_time;\n\n  if (!spanEntry || spans.length <= 0) {\n    return {\n      op: rootSpanOpName,\n      childSpans: {},\n      traceStartTimestamp: event.startTimestamp,\n      traceEndTimestamp: event.endTimestamp,\n      traceID,\n      rootSpanID,\n      rootSpanStatus,\n      parentSpanID,\n      spans: [],\n      description,\n      hash,\n      exclusiveTime,\n    };\n  }\n\n  // any span may be a parent of another span\n  const potentialParents = new Set(\n    spans.map(span => {\n      return span.span_id;\n    })\n  );\n\n  // the root transaction span is a parent of all other spans\n  potentialParents.add(rootSpanID);\n\n  // we reduce spans to become an object mapping span ids to their children\n\n  const init: ParsedTraceType = {\n    op: rootSpanOpName,\n    childSpans: {},\n    traceStartTimestamp: event.startTimestamp,\n    traceEndTimestamp: event.endTimestamp,\n    traceID,\n    rootSpanID,\n    rootSpanStatus,\n    parentSpanID,\n    spans,\n    description,\n    hash,\n    exclusiveTime,\n  };\n\n  const reduced: ParsedTraceType = spans.reduce((acc, inputSpan) => {\n    let span: SpanType = inputSpan;\n\n    const parentSpanId = getSpanParentSpanID(span);\n\n    const hasParent = parentSpanId && potentialParents.has(parentSpanId);\n\n    if (!isValidSpanID(parentSpanId) || !hasParent) {\n      // this span is considered an orphan with respect to the spans within this transaction.\n      // although the span is an orphan, it's still a descendant of this transaction,\n      // so we set its parent span id to be the root transaction span's id\n      span.parent_span_id = rootSpanID;\n\n      span = {\n        type: 'orphan',\n        ...span,\n      } as OrphanSpanType;\n    }\n\n    assert(span.parent_span_id);\n\n    // get any span children whose parent_span_id is equal to span.parent_span_id,\n    // otherwise start with an empty array\n    const spanChildren: Array<SpanType> = acc.childSpans[span.parent_span_id] ?? [];\n\n    spanChildren.push(span);\n\n    set(acc.childSpans, span.parent_span_id, spanChildren);\n\n    // set trace start & end timestamps based on given span's start and end timestamps\n\n    if (!acc.traceStartTimestamp || span.start_timestamp < acc.traceStartTimestamp) {\n      acc.traceStartTimestamp = span.start_timestamp;\n    }\n\n    // establish trace end timestamp\n\n    const hasEndTimestamp = isNumber(span.timestamp);\n\n    if (!acc.traceEndTimestamp) {\n      if (hasEndTimestamp) {\n        acc.traceEndTimestamp = span.timestamp;\n        return acc;\n      }\n\n      acc.traceEndTimestamp = span.start_timestamp;\n      return acc;\n    }\n\n    if (hasEndTimestamp && span.timestamp! > acc.traceEndTimestamp) {\n      acc.traceEndTimestamp = span.timestamp;\n      return acc;\n    }\n\n    if (span.start_timestamp > acc.traceEndTimestamp) {\n      acc.traceEndTimestamp = span.start_timestamp;\n    }\n\n    return acc;\n  }, init);\n\n  // sort span children\n\n  Object.values(reduced.childSpans).forEach(spanChildren => {\n    spanChildren.sort(sortSpans);\n  });\n\n  return reduced;\n}\n\nfunction sortSpans(firstSpan: SpanType, secondSpan: SpanType) {\n  // orphan spans come after non-orphan spans.\n\n  if (isOrphanSpan(firstSpan) && !isOrphanSpan(secondSpan)) {\n    // sort secondSpan before firstSpan\n    return 1;\n  }\n\n  if (!isOrphanSpan(firstSpan) && isOrphanSpan(secondSpan)) {\n    // sort firstSpan before secondSpan\n    return -1;\n  }\n\n  // sort spans by their start timestamp in ascending order\n\n  if (firstSpan.start_timestamp < secondSpan.start_timestamp) {\n    // sort firstSpan before secondSpan\n    return -1;\n  }\n\n  if (firstSpan.start_timestamp === secondSpan.start_timestamp) {\n    return 0;\n  }\n\n  // sort secondSpan before firstSpan\n  return 1;\n}\n\nexport function isOrphanTreeDepth(\n  treeDepth: TreeDepthType\n): treeDepth is OrphanTreeDepth {\n  if (typeof treeDepth === 'number') {\n    return false;\n  }\n  return treeDepth?.type === 'orphan';\n}\n\nexport function unwrapTreeDepth(treeDepth: TreeDepthType): number {\n  if (isOrphanTreeDepth(treeDepth)) {\n    return treeDepth.depth;\n  }\n\n  return treeDepth;\n}\n\nexport function isEventFromBrowserJavaScriptSDK(event: EventTransaction): boolean {\n  const sdkName = event.sdk?.name;\n  if (!sdkName) {\n    return false;\n  }\n  // based on https://github.com/getsentry/sentry-javascript/blob/master/packages/browser/src/version.ts\n  return [\n    'sentry.javascript.browser',\n    'sentry.javascript.react',\n    'sentry.javascript.gatsby',\n    'sentry.javascript.ember',\n    'sentry.javascript.vue',\n    'sentry.javascript.angular',\n    'sentry.javascript.nextjs',\n    'sentry.javascript.electron',\n    'sentry.javascript.remix',\n  ].includes(sdkName.toLowerCase());\n}\n\n// Durationless ops from: https://github.com/getsentry/sentry-javascript/blob/0defcdcc2dfe719343efc359d58c3f90743da2cd/packages/apm/src/integrations/tracing.ts#L629-L688\n// PerformanceMark: Duration is 0 as per https://developer.mozilla.org/en-US/docs/Web/API/PerformanceMark\n// PerformancePaintTiming: Duration is 0 as per https://developer.mozilla.org/en-US/docs/Web/API/PerformancePaintTiming\nexport const durationlessBrowserOps = ['mark', 'paint'];\n\ntype Measurements = {\n  [name: string]: {\n    failedThreshold: boolean;\n    timestamp: number;\n    value: number | undefined;\n  };\n};\n\ntype VerticalMark = {\n  failedThreshold: boolean;\n  marks: Measurements;\n};\n\nfunction hasFailedThreshold(marks: Measurements): boolean {\n  const names = Object.keys(marks);\n  const records = Object.values(WEB_VITAL_DETAILS).filter(vital =>\n    names.includes(vital.slug)\n  );\n\n  return records.some(record => {\n    const {value} = marks[record.slug];\n    if (typeof value === 'number' && typeof record.poorThreshold === 'number') {\n      return value >= record.poorThreshold;\n    }\n    return false;\n  });\n}\n\nexport function getMeasurements(\n  event: EventTransaction,\n  generateBounds: (bounds: SpanBoundsType) => SpanGeneratedBoundsType\n): Map<number, VerticalMark> {\n  if (!event.measurements || !event.startTimestamp) {\n    return new Map();\n  }\n\n  const {startTimestamp} = event;\n\n  // Note: CLS and INP should not be included here, since they are not timeline-based measurements.\n  const allowedVitals = new Set<string>([\n    WebVital.FCP,\n    WebVital.FP,\n    WebVital.FID,\n    WebVital.LCP,\n    WebVital.TTFB,\n  ]);\n\n  const measurements = Object.keys(event.measurements)\n    .filter(name => allowedVitals.has(`measurements.${name}`))\n    .map(name => {\n      const associatedMeasurement = event.measurements![name];\n      return {\n        name,\n        // Time timestamp is in seconds, but the measurement value is given in ms so convert it here\n        timestamp: startTimestamp + associatedMeasurement.value / 1000,\n        value: associatedMeasurement ? associatedMeasurement.value : undefined,\n      };\n    });\n\n  const mergedMeasurements = new Map<number, VerticalMark>();\n\n  measurements.forEach(measurement => {\n    const name = measurement.name;\n    const value = measurement.value;\n\n    const bounds = generateBounds({\n      startTimestamp: measurement.timestamp,\n      endTimestamp: measurement.timestamp,\n    });\n\n    // This condition will never be hit, since we're using the same value for start and end in generateBounds\n    // I've put this condition here to prevent the TS linter from complaining\n    if (bounds.type !== 'TIMESTAMPS_EQUAL') {\n      return;\n    }\n\n    const roundedPos = Math.round(bounds.start * 100);\n\n    // Compare this position with the position of the other measurements, to determine if\n    // they are close enough to be bucketed together\n\n    for (const [otherPos] of mergedMeasurements) {\n      const positionDelta = Math.abs(otherPos - roundedPos);\n      if (positionDelta <= MERGE_LABELS_THRESHOLD_PERCENT) {\n        const verticalMark = mergedMeasurements.get(otherPos)!;\n\n        const {poorThreshold} = WEB_VITAL_DETAILS[`measurements.${name}`];\n\n        verticalMark.marks = {\n          ...verticalMark.marks,\n          [name]: {\n            value,\n            timestamp: measurement.timestamp,\n            failedThreshold: value ? value >= poorThreshold : false,\n          },\n        };\n\n        if (!verticalMark.failedThreshold) {\n          verticalMark.failedThreshold = hasFailedThreshold(verticalMark.marks);\n        }\n\n        mergedMeasurements.set(otherPos, verticalMark);\n        return;\n      }\n    }\n\n    const {poorThreshold} = WEB_VITAL_DETAILS[`measurements.${name}`];\n\n    const marks = {\n      [name]: {\n        value,\n        timestamp: measurement.timestamp,\n        failedThreshold: value ? value >= poorThreshold : false,\n      },\n    };\n\n    mergedMeasurements.set(roundedPos, {\n      marks,\n      failedThreshold: hasFailedThreshold(marks),\n    });\n  });\n\n  return mergedMeasurements;\n}\n\nexport function getMeasurementBounds(\n  timestamp: number,\n  generateBounds: (bounds: SpanBoundsType) => SpanGeneratedBoundsType\n): SpanViewBoundsType {\n  const bounds = generateBounds({\n    startTimestamp: timestamp,\n    endTimestamp: timestamp,\n  });\n\n  switch (bounds.type) {\n    case 'TRACE_TIMESTAMPS_EQUAL':\n    case 'INVALID_VIEW_WINDOW': {\n      return {\n        warning: undefined,\n        left: undefined,\n        width: undefined,\n        isSpanVisibleInView: bounds.isSpanVisibleInView,\n      };\n    }\n    case 'TIMESTAMPS_EQUAL': {\n      return {\n        warning: undefined,\n        left: bounds.start,\n        width: 0.00001,\n        isSpanVisibleInView: bounds.isSpanVisibleInView,\n      };\n    }\n    case 'TIMESTAMPS_REVERSED': {\n      return {\n        warning: undefined,\n        left: bounds.start,\n        width: bounds.end - bounds.start,\n        isSpanVisibleInView: bounds.isSpanVisibleInView,\n      };\n    }\n    case 'TIMESTAMPS_STABLE': {\n      return {\n        warning: void 0,\n        left: bounds.start,\n        width: bounds.end - bounds.start,\n        isSpanVisibleInView: bounds.isSpanVisibleInView,\n      };\n    }\n    default: {\n      const _exhaustiveCheck: never = bounds;\n      return _exhaustiveCheck;\n    }\n  }\n}\n\nexport function scrollToSpan(\n  spanId: string,\n  scrollToHash: (hash: string) => void,\n  location: Location,\n  organization: Organization\n) {\n  return (e: React.MouseEvent<Element>) => {\n    // do not use the default anchor behaviour\n    // because it will be hidden behind the minimap\n    e.preventDefault();\n\n    const hash = spanTargetHash(spanId);\n\n    scrollToHash(hash);\n\n    // TODO(txiao): This is causing a rerender of the whole page,\n    // which can be slow.\n    //\n    // make sure to update the location\n    browserHistory.push({\n      ...location,\n      hash,\n    });\n\n    trackAdvancedAnalyticsEvent('performance_views.event_details.anchor_span', {\n      organization,\n      span_id: spanId,\n    });\n  };\n}\n\nexport function spanTargetHash(spanId: string): string {\n  return `#span-${spanId}`;\n}\n\nexport function getSiblingGroupKey(span: SpanType, occurrence?: number): string {\n  if (occurrence !== undefined) {\n    return `${span.op}.${span.description}.${occurrence}`;\n  }\n\n  return `${span.op}.${span.description}`;\n}\n\nexport function getSpanGroupTimestamps(spanGroup: EnhancedSpan[]) {\n  return spanGroup.reduce(\n    (acc, spanGroupItem) => {\n      const {start_timestamp, timestamp} = spanGroupItem.span;\n\n      let newStartTimestamp = acc.startTimestamp;\n      let newEndTimestamp = acc.endTimestamp;\n\n      if (start_timestamp < newStartTimestamp) {\n        newStartTimestamp = start_timestamp;\n      }\n\n      if (newEndTimestamp < timestamp) {\n        newEndTimestamp = timestamp;\n      }\n\n      return {\n        startTimestamp: newStartTimestamp,\n        endTimestamp: newEndTimestamp,\n      };\n    },\n    {\n      startTimestamp: spanGroup[0].span.start_timestamp,\n      endTimestamp: spanGroup[0].span.timestamp,\n    }\n  );\n}\n\nexport function getSpanGroupBounds(\n  spanGroup: EnhancedSpan[],\n  generateBounds: (bounds: SpanBoundsType) => SpanGeneratedBoundsType\n): SpanViewBoundsType {\n  const {startTimestamp, endTimestamp} = getSpanGroupTimestamps(spanGroup);\n\n  const bounds = generateBounds({\n    startTimestamp,\n    endTimestamp,\n  });\n\n  switch (bounds.type) {\n    case 'TRACE_TIMESTAMPS_EQUAL':\n    case 'INVALID_VIEW_WINDOW': {\n      return {\n        warning: void 0,\n        left: void 0,\n        width: void 0,\n        isSpanVisibleInView: bounds.isSpanVisibleInView,\n      };\n    }\n    case 'TIMESTAMPS_EQUAL': {\n      return {\n        warning: void 0,\n        left: bounds.start,\n        width: 0.00001,\n        isSpanVisibleInView: bounds.isSpanVisibleInView,\n      };\n    }\n    case 'TIMESTAMPS_REVERSED':\n    case 'TIMESTAMPS_STABLE': {\n      return {\n        warning: void 0,\n        left: bounds.start,\n        width: bounds.end - bounds.start,\n        isSpanVisibleInView: bounds.isSpanVisibleInView,\n      };\n    }\n    default: {\n      const _exhaustiveCheck: never = bounds;\n      return _exhaustiveCheck;\n    }\n  }\n}\n\nexport class SpansInViewMap {\n  spanDepthsInView: Map<string, number>;\n  treeDepthSum: number;\n  length: number;\n  isRootSpanInView: boolean;\n\n  constructor(isRootSpanInView: boolean) {\n    this.spanDepthsInView = new Map();\n    this.treeDepthSum = 0;\n    this.length = 0;\n    this.isRootSpanInView = isRootSpanInView;\n  }\n\n  /**\n   *\n   * @param spanId\n   * @param treeDepth\n   * @returns false if the span is already stored, true otherwise\n   */\n  addSpan(spanId: string, treeDepth: number): boolean {\n    if (this.spanDepthsInView.has(spanId)) {\n      return false;\n    }\n\n    this.spanDepthsInView.set(spanId, treeDepth);\n    this.length += 1;\n    this.treeDepthSum += treeDepth;\n\n    if (treeDepth === 0) {\n      this.isRootSpanInView = true;\n    }\n\n    return true;\n  }\n\n  /**\n   *\n   * @param spanId\n   * @returns false if the span does not exist within the span, true otherwise\n   */\n  removeSpan(spanId: string): boolean {\n    if (!this.spanDepthsInView.has(spanId)) {\n      return false;\n    }\n\n    const treeDepth = this.spanDepthsInView.get(spanId);\n    this.spanDepthsInView.delete(spanId);\n    this.length -= 1;\n    this.treeDepthSum -= treeDepth!;\n\n    if (treeDepth === 0) {\n      this.isRootSpanInView = false;\n    }\n\n    return true;\n  }\n\n  has(spanId: string) {\n    return this.spanDepthsInView.has(spanId);\n  }\n\n  getScrollVal() {\n    if (this.isRootSpanInView) {\n      return 0;\n    }\n\n    const avgDepth = Math.round(this.treeDepthSum / this.length);\n    return avgDepth * (TOGGLE_BORDER_BOX / 2) - TOGGLE_BUTTON_MAX_WIDTH / 2;\n  }\n}\n\nexport function isSpanIdFocused(spanId: string, focusedSpanIds: FocusedSpanIDMap) {\n  return (\n    spanId in focusedSpanIds ||\n    Object.values(focusedSpanIds).some(relatedSpans => relatedSpans.has(spanId))\n  );\n}\n\nexport function getCumulativeAlertLevelFromErrors(\n  errors?: Pick<TraceError, 'level'>[]\n): keyof Theme['alert'] | undefined {\n  const highestErrorLevel = maxBy(\n    errors || [],\n    error => ERROR_LEVEL_WEIGHTS[error.level]\n  )?.level;\n\n  if (!highestErrorLevel) {\n    return undefined;\n  }\n  return ERROR_LEVEL_TO_ALERT_TYPE[highestErrorLevel];\n}\n\n// Maps the six known error levels to one of three Alert component types\nconst ERROR_LEVEL_TO_ALERT_TYPE: Record<TraceError['level'], keyof Theme['alert']> = {\n  fatal: 'error',\n  error: 'error',\n  default: 'error',\n  warning: 'warning',\n  sample: 'info',\n  info: 'info',\n};\n\n// Allows sorting errors according to their level of severity\nconst ERROR_LEVEL_WEIGHTS: Record<TraceError['level'], number> = {\n  fatal: 5,\n  error: 4,\n  default: 4,\n  warning: 3,\n  sample: 2,\n  info: 1,\n};\n","import styled from '@emotion/styled';\n\nimport {ROW_HEIGHT} from 'sentry/components/performance/waterfall/constants';\nimport {getToggleTheme} from 'sentry/components/performance/waterfall/utils';\nimport {IconChevron} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\nconst TOGGLE_BUTTON_MARGIN_RIGHT = 16;\nexport const TOGGLE_BUTTON_MAX_WIDTH = 30;\nexport const TOGGLE_BORDER_BOX = TOGGLE_BUTTON_MAX_WIDTH + TOGGLE_BUTTON_MARGIN_RIGHT;\nconst TREE_TOGGLE_CONTAINER_WIDTH = 40;\n\nexport const ConnectorBar = styled('div')<{orphanBranch: boolean}>`\n  height: 250%;\n\n  border-left: 2px ${p => (p.orphanBranch ? 'dashed' : 'solid')} ${p => p.theme.border};\n  position: absolute;\n  top: 0;\n`;\n\ntype TogglerTypes = {\n  hasToggler?: boolean;\n  isLast?: boolean;\n};\n\nexport const TreeConnector = styled('div')<TogglerTypes & {orphanBranch: boolean}>`\n  height: ${p => (p.isLast ? ROW_HEIGHT / 2 + 1 : ROW_HEIGHT)}px;\n  width: 100%;\n  border-left: ${p => `2px ${p.orphanBranch ? 'dashed' : 'solid'} ${p.theme.border};`};\n  position: absolute;\n  top: 0;\n\n  ${p =>\n    p.isLast\n      ? `\n      border-bottom: 2px ${p.orphanBranch ? 'dashed' : 'solid'} ${p.theme.border};\n      border-bottom-left-radius: ${p.theme.borderRadius};`\n      : `\n      &:before {\n        content: '';\n        height: 2px;\n        left: -2px;\n        border-bottom: 2px ${p.orphanBranch ? 'dashed' : 'solid'} ${p.theme.border};\n        width: calc(100% - 2px);\n        position: absolute;\n        bottom: calc(50% - 1px);\n      }`}\n\n  &:after {\n    content: '';\n    background-color: ${p => p.theme.border};\n    border-radius: 50%;\n    height: 6px;\n    width: 6px;\n    position: absolute;\n    right: 0;\n    top: ${ROW_HEIGHT / 2 - 3}px;\n  }\n`;\n\ntype SpanTreeTogglerAndDivProps = {\n  disabled: boolean;\n  errored: boolean;\n  isExpanded: boolean;\n  isSpanGroupToggler?: boolean;\n};\n\nexport const TreeToggle = styled('div')<SpanTreeTogglerAndDivProps>`\n  height: 16px;\n  white-space: nowrap;\n  min-width: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 99px;\n  padding: 0px ${space(0.5)};\n  transition: all 0.15s ease-in-out;\n  font-size: 10px;\n  line-height: 0;\n  z-index: 1;\n  box-shadow: ${p => p.theme.dropShadowLightest};\n\n  ${p => getToggleTheme(p)}\n`;\n\nexport const TreeToggleContainer = styled('div')<TogglerTypes>`\n  position: relative;\n  height: ${ROW_HEIGHT}px;\n  width: ${TREE_TOGGLE_CONTAINER_WIDTH}px;\n  min-width: ${TREE_TOGGLE_CONTAINER_WIDTH}px;\n  margin-right: ${space(1)};\n  z-index: ${p => p.theme.zIndex.traceView.spanTreeToggler};\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nexport const TreeToggleIcon = styled(IconChevron)`\n  width: 7px;\n  margin-left: ${space(0.25)};\n`;\n","import {Component, useContext} from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport EventView, {\n  ImmutableEventView,\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'sentry/utils/discover/eventView';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\nimport {PerformanceEventViewContext} from 'sentry/utils/performance/contexts/performanceEventViewContext';\nimport {OrganizationContext} from 'sentry/views/organizationContext';\n\nexport class QueryError {\n  message: string;\n  private originalError: any; // For debugging in case parseError picks a value that doesn't make sense.\n  constructor(errorMessage: string, originalError?: any) {\n    this.message = errorMessage;\n    this.originalError = originalError;\n  }\n\n  getOriginalError() {\n    return this.originalError;\n  }\n}\n\nexport type GenericChildrenProps<T> = {\n  /**\n   * Error, if not null.\n   */\n  error: null | QueryError;\n  /**\n   * Loading state of this query.\n   */\n  isLoading: boolean;\n  /**\n   * Pagelinks, if applicable. Can be provided to the Pagination component.\n   */\n  pageLinks: null | string;\n  /**\n   * Data / result.\n   */\n  tableData: T | null;\n};\n\ntype OptionalContextProps = {\n  eventView?: EventView | ImmutableEventView;\n  orgSlug?: string;\n};\n\ntype BaseDiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Appends a raw string to query to be able to sidestep the tokenizer.\n   * @deprecated\n   */\n  forceAppendRawQueryString?: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * Sets referrer parameter in the API Payload. Set of allowed referrers are defined\n   * on the OrganizationEventsV2Endpoint view.\n   */\n  referrer?: string;\n  /**\n   * A callback to set an error so that the error can be rendered in parent components\n   */\n  setError?: (errObject: QueryError | undefined) => void;\n};\n\nexport type DiscoverQueryPropsWithContext = BaseDiscoverQueryProps & OptionalContextProps;\nexport type DiscoverQueryProps = BaseDiscoverQueryProps & {\n  eventView: EventView | ImmutableEventView;\n  orgSlug: string;\n};\n\ntype InnerRequestProps<P> = DiscoverQueryProps & P;\ntype OuterRequestProps<P> = DiscoverQueryPropsWithContext & P;\n\nexport type ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype ComponentProps<T, P> = {\n  /**\n   * Route to the endpoint\n   */\n  route: string;\n  /**\n   * A hook to modify data into the correct output after data has been received\n   */\n  afterFetch?: (data: any, props?: Props<T, P>) => T;\n  /**\n   * A hook before fetch that can be used to do things like clearing the api\n   */\n  beforeFetch?: (api: Client) => void;\n  /**\n   * A hook for parent orchestrators to pass down data based on query results, unlike afterFetch it is not meant for specializations as it will not modify data.\n   */\n  didFetch?: (data: T) => void;\n  /**\n   * Allows components to modify the payload before it is set.\n   */\n  getRequestPayload?: (props: Props<T, P>) => any;\n  /**\n   * An external hook to parse errors in case there are differences for a specific api.\n   */\n  parseError?: (error: any) => QueryError | null;\n  /**\n   * An external hook in addition to the event view check to check if data should be refetched\n   */\n  shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n};\n\ntype Props<T, P> = InnerRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\ntype OuterProps<T, P> = OuterRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass _GenericDiscoverQuery<T, P> extends Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if the payload changes\n    const refetchCondition = this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    const {cursor, limit, noPagination, referrer} = props;\n    const payload = this.props.getRequestPayload\n      ? this.props.getRequestPayload(props)\n      : props.eventView.getEventsAPIPayload(\n          props.location,\n          props.forceAppendRawQueryString\n        );\n\n    if (cursor) {\n      payload.cursor = cursor;\n    }\n    if (limit) {\n      payload.per_page = limit;\n    }\n    if (noPagination) {\n      payload.noPagination = noPagination;\n    }\n    if (referrer) {\n      payload.referrer = referrer;\n    }\n\n    Object.assign(payload, props.queryExtras ?? {});\n\n    return payload;\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  /**\n   * The error type isn't consistent across APIs. We see detail as just string some times, other times as an object.\n   */\n  _parseError = (error: any): QueryError | null => {\n    if (this.props.parseError) {\n      return this.props.parseError(error);\n    }\n\n    if (!error) {\n      return null;\n    }\n\n    const detail = error.responseJSON?.detail;\n    if (typeof detail === 'string') {\n      return new QueryError(detail, error);\n    }\n\n    const message = detail?.message;\n    if (typeof message === 'string') {\n      return new QueryError(message, error);\n    }\n\n    const unknownError = new QueryError(t('An unknown error occurred.'), error);\n    return unknownError;\n  };\n\n  fetchData = async () => {\n    const {\n      api,\n      queryBatching,\n      beforeFetch,\n      afterFetch,\n      didFetch,\n      eventView,\n      orgSlug,\n      route,\n      setError,\n    } = this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    beforeFetch?.(api);\n\n    // clear any inflight requests since they are now stale\n    api.clear();\n\n    try {\n      const [data, , resp] = await doDiscoverQuery<T>(\n        api,\n        url,\n        apiPayload,\n        queryBatching\n      );\n\n      if (this.state.tableFetchID !== tableFetchID) {\n        // invariant: a different request was initiated after this request\n        return;\n      }\n\n      const tableData = afterFetch ? afterFetch(data, this.props) : data;\n      didFetch?.(tableData);\n\n      this.setState(prevState => ({\n        isLoading: false,\n        tableFetchID: undefined,\n        error: null,\n        pageLinks: resp?.getResponseHeader('Link') ?? prevState.pageLinks,\n        tableData,\n      }));\n    } catch (err) {\n      const error = this._parseError(err);\n      this.setState({\n        isLoading: false,\n        tableFetchID: undefined,\n        error,\n        tableData: null,\n      });\n      if (setError) {\n        setError(error ?? undefined);\n      }\n    }\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\n// Shim to allow us to use generic discover query or any specialization with or without passing org slug or eventview, which are now contexts.\n// This will help keep tests working and we can remove extra uses of context-provided props and update tests as we go.\nexport function GenericDiscoverQuery<T, P>(props: OuterProps<T, P>) {\n  const organizationSlug = useContext(OrganizationContext)?.slug;\n  const performanceEventView = useContext(PerformanceEventViewContext)?.eventView;\n\n  const orgSlug = props.orgSlug ?? organizationSlug;\n  const eventView = props.eventView ?? performanceEventView;\n\n  if (orgSlug === undefined || eventView === undefined) {\n    throw new Error('GenericDiscoverQuery requires both an orgSlug and eventView');\n  }\n\n  const _props: Props<T, P> = {\n    ...props,\n    orgSlug,\n    eventView,\n  };\n  return <_GenericDiscoverQuery<T, P> {..._props} />;\n}\n\nexport type DiscoverQueryRequestParams = Partial<EventQuery & LocationQuery>;\n\nexport function doDiscoverQuery<T>(\n  api: Client,\n  url: string,\n  params: DiscoverQueryRequestParams,\n  queryBatching?: QueryBatching\n): Promise<[T, string | undefined, ResponseMeta<T> | undefined]> {\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, url, {\n      query: params,\n      includeAllArgs: true,\n    });\n  }\n\n  return api.requestPromise(url, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      // marking params as any so as to not cause typescript errors\n      ...(params as any),\n    },\n  });\n}\n\nexport default GenericDiscoverQuery;\n","import EventView, {ImmutableEventView} from 'sentry/utils/discover/eventView';\n\nimport {createDefinedContext} from './utils';\n\ntype usePerformanceEventViewContext = {\n  eventView: EventView;\n};\n\nconst [\n  PerformanceEventViewProvider,\n  _usePerformanceEventView,\n  PerformanceEventViewContext,\n] = createDefinedContext<usePerformanceEventViewContext>({\n  name: 'PerformanceEventViewContext',\n});\n\nexport {PerformanceEventViewProvider, PerformanceEventViewContext};\n\n// Provides a readonly event view. Also omits anything that isn't currently read-only, although in the future we should switch the code in EventView instead.\n// If you need mutability, use the mutable version.\nexport function usePerformanceEventView(): ImmutableEventView {\n  return _usePerformanceEventView().eventView;\n}\n\nexport function useMutablePerformanceEventView() {\n  return usePerformanceEventView().clone();\n}\n","import {createContext, useContext} from 'react';\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n/*\n * Creates provider, context and useContext hook, guarding against calling useContext without a provider.\n * [0]: https://github.com/chakra-ui/chakra-ui/blob/c0f9c287df0397e2aa9bd90eb3d5c2f2c08aa0b1/packages/utils/src/react-helpers.ts#L27\n *\n * Renamed to createDefinedContext to not conflate with React context.\n */\nexport function createDefinedContext<ContextType>(options: {\n  name: string;\n  errorMessage?: string;\n  strict?: boolean;\n}) {\n  const {\n    strict = true,\n    errorMessage = `useContext for \"${options.name}\" must be inside a Provider with a value`,\n    name,\n  } = options;\n\n  const Context = createContext<ContextType | undefined>(undefined);\n\n  Context.displayName = name;\n\n  function useDefinedContext() {\n    const context = useContext(Context);\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n    return context;\n  }\n\n  return [\n    Context.Provider,\n    useDefinedContext,\n    Context,\n  ] as CreateContextReturn<ContextType>;\n}\n","import omit from 'lodash/omit';\nimport moment from 'moment-timezone';\n\nimport {getTraceDateTimeRange} from 'sentry/components/events/interfaces/spans/utils';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {OrganizationSummary} from 'sentry/types';\nimport {Event, EventTransaction} from 'sentry/types/event';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {DiscoverQueryProps} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  QuickTrace,\n  QuickTraceEvent,\n  TraceFull,\n  TraceFullDetailed,\n  TraceLite,\n} from 'sentry/utils/performance/quickTrace/types';\n\nexport function isTransaction(event: Event): event is EventTransaction {\n  return event.type === 'transaction';\n}\n\n/**\n * An event can be an error or a transaction. We need to check whether the current\n * event id is in the list of errors as well\n */\nexport function isCurrentEvent(\n  event: TraceFull | QuickTraceEvent,\n  currentEvent: Event\n): boolean {\n  if (isTransaction(currentEvent)) {\n    return event.event_id === currentEvent.id;\n  }\n  return (\n    event.errors !== undefined && event.errors.some(e => e.event_id === currentEvent.id)\n  );\n}\n\ntype PathNode = {\n  event: TraceFull;\n  path: TraceLite;\n};\n\n/**\n * The `events-full` endpoint returns the full trace containing the specified event.\n * This means any sibling paths in the trace will also be returned.\n *\n * This method strips away these sibling paths leaving only the path from the root to\n * the specified event and all of its children/descendants.\n *\n * This method additionally flattens the trace into an array of the transactions in\n * the trace.\n */\nexport function flattenRelevantPaths(\n  currentEvent: Event,\n  traceFull: TraceFull\n): TraceLite {\n  const relevantPath: TraceLite = [];\n  const events: TraceFull[] = [];\n\n  /**\n   * First find a path from the root transaction to the current transaction via\n   * a breadth first search. This adds all transactions from the root to the\n   * current transaction (excluding the current transaction itself), to the\n   * relevant path.\n   */\n  const paths: PathNode[] = [{event: traceFull, path: []}];\n  while (paths.length) {\n    const current = paths.shift()!;\n    if (isCurrentEvent(current.event, currentEvent)) {\n      for (const node of current.path) {\n        relevantPath.push(node);\n      }\n      events.push(current.event);\n    } else {\n      const path = [...current.path, simplifyEvent(current.event)];\n      for (const child of current.event.children) {\n        paths.push({event: child, path});\n      }\n    }\n  }\n\n  if (!events.length) {\n    throw new Error('No relevant path exists!');\n  }\n\n  /**\n   * Traverse all transactions from current transaction onwards and add\n   * them all to the relevant path.\n   */\n  while (events.length) {\n    const current = events.shift()!;\n    for (const child of current.children) {\n      events.push(child);\n    }\n    relevantPath.push(simplifyEvent(current));\n  }\n\n  return relevantPath;\n}\n\nfunction simplifyEvent(event: TraceFull): QuickTraceEvent {\n  return omit(event, ['children']);\n}\n\ntype ParsedQuickTrace = {\n  /**\n   * `[]` represents the lack of ancestors in a full trace navigator\n   * `null` represents the uncertainty of ancestors in a lite trace navigator\n   */\n  ancestors: QuickTraceEvent[] | null;\n  /**\n   * `[]` represents the lack of children in a full/lite trace navigator\n   */\n  children: QuickTraceEvent[];\n  current: QuickTraceEvent;\n  /**\n   * `[]` represents the lack of descendants in a full trace navigator\n   * `null` represents the uncertainty of descendants in a lite trace navigator\n   */\n  descendants: QuickTraceEvent[] | null;\n  /**\n   * `null` represents either the lack of a direct parent or the uncertainty\n   * of what the parent is\n   */\n  parent: QuickTraceEvent | null;\n  /**\n   * `null` represents the lack of a root. It may still have a parent\n   */\n  root: QuickTraceEvent | null;\n};\n\nexport function parseQuickTrace(\n  quickTrace: QuickTrace,\n  event: Event,\n  organization: OrganizationSummary\n): ParsedQuickTrace | null {\n  const {type, trace} = quickTrace;\n\n  if (type === 'empty' || trace === null) {\n    throw new Error('Current event not in trace navigator!');\n  }\n\n  const isFullTrace = type === 'full';\n\n  const current = trace.find(e => isCurrentEvent(e, event)) ?? null;\n  if (current === null) {\n    throw new Error('Current event not in trace navigator!');\n  }\n\n  /**\n   * The parent event is the direct ancestor of the current event.\n   * This takes priority over the root, meaning if the parent is\n   * the root of the trace, this favours showing it as the parent.\n   */\n  const parent = current.parent_event_id\n    ? trace.find(e => e.event_id === current.parent_event_id) ?? null\n    : null;\n\n  /**\n   * The root event is the first event in the trace. This has lower priority\n   * than the parent event, meaning if the root event is the parent event of\n   * the current event, this favours showing it as the parent event.\n   */\n  const root =\n    trace.find(\n      e =>\n        // a root can't be the current event\n        e.event_id !== current.event_id &&\n        // a root can't be the direct parent\n        e.event_id !== parent?.event_id &&\n        // a root has to to be the first generation\n        e.generation === 0\n    ) ?? null;\n\n  const isChildren = e => e.parent_event_id === current.event_id;\n\n  const isDescendant = e =>\n    // the current generation needs to be known to determine a descendant\n    current.generation !== null &&\n    // the event's generation needs to be known to determine a descendant\n    e.generation !== null &&\n    // a descendant is the generation after the direct children\n    current.generation + 1 < e.generation;\n\n  const isAncestor = e =>\n    // the current generation needs to be known to determine an ancestor\n    current.generation !== null &&\n    // the event's generation needs to be known to determine an ancestor\n    e.generation !== null &&\n    // an ancestor can't be the root\n    e.generation > 0 &&\n    // an ancestor is the generation before the direct parent\n    current.generation - 1 > e.generation;\n\n  const ancestors: TraceLite | null = isFullTrace ? [] : null;\n  const children: TraceLite = [];\n  const descendants: TraceLite | null = isFullTrace ? [] : null;\n  const projects = new Set();\n\n  trace.forEach(e => {\n    projects.add(e.project_id);\n    if (isChildren(e)) {\n      children.push(e);\n    } else if (isFullTrace) {\n      if (isAncestor(e)) {\n        ancestors?.push(e);\n      } else if (isDescendant(e)) {\n        descendants?.push(e);\n      }\n    }\n  });\n\n  if (isFullTrace && projects.size > 1) {\n    handleProjectMeta(organization, projects.size);\n  }\n\n  return {\n    root,\n    ancestors: ancestors === null ? null : sortTraceLite(ancestors),\n    parent,\n    current,\n    children: sortTraceLite(children),\n    descendants: descendants === null ? null : sortTraceLite(descendants),\n  };\n}\n\nfunction sortTraceLite(trace: TraceLite): TraceLite {\n  return trace.sort((a, b) => b['transaction.duration'] - a['transaction.duration']);\n}\n\nexport function getTraceRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), ['field', 'sort', 'per_page']);\n}\n\nexport function makeEventView({\n  start,\n  end,\n  statsPeriod,\n}: {\n  end?: string;\n  start?: string;\n  statsPeriod?: string | null;\n}) {\n  return EventView.fromSavedQuery({\n    id: undefined,\n    version: 2,\n    name: '',\n    // This field doesn't actually do anything,\n    // just here to satisfy a constraint in EventView.\n    fields: ['transaction.duration'],\n    projects: [ALL_ACCESS_PROJECTS],\n    query: '',\n    environment: [],\n    start,\n    end,\n    range: statsPeriod ?? undefined,\n  });\n}\n\nexport function getTraceTimeRangeFromEvent(event: Event): {end: string; start: string} {\n  const start = isTransaction(event)\n    ? event.startTimestamp\n    : moment(event.dateReceived ? event.dateReceived : event.dateCreated).valueOf() /\n      1000;\n  const end = isTransaction(event) ? event.endTimestamp : start;\n  return getTraceDateTimeRange({start, end});\n}\n\nexport function reduceTrace<T>(\n  trace: TraceFullDetailed,\n  visitor: (acc: T, e: TraceFullDetailed) => T,\n  initialValue: T\n): T {\n  let result = initialValue;\n\n  const events = [trace];\n  while (events.length) {\n    const current = events.pop()!;\n    for (const child of current.children) {\n      events.push(child);\n    }\n    result = visitor(result, current);\n  }\n\n  return result;\n}\n\nexport function filterTrace(\n  trace: TraceFullDetailed,\n  predicate: (transaction: TraceFullDetailed) => boolean\n): TraceFullDetailed[] {\n  return reduceTrace<TraceFullDetailed[]>(\n    trace,\n    (transactions, transaction) => {\n      if (predicate(transaction)) {\n        transactions.push(transaction);\n      }\n      return transactions;\n    },\n    []\n  );\n}\n\nexport function isTraceFull(transaction): transaction is TraceFull {\n  return Boolean((transaction as TraceFull).event_id);\n}\n\nexport function isTraceFullDetailed(transaction): transaction is TraceFullDetailed {\n  return Boolean((transaction as TraceFullDetailed).event_id);\n}\n\nfunction handleProjectMeta(organization: OrganizationSummary, projects: number) {\n  trackAnalyticsEvent({\n    eventKey: 'quick_trace.connected_services',\n    eventName: 'Quick Trace: Connected Services',\n    organization_id: parseInt(organization.id, 10),\n    projects,\n  });\n}\n","import {t} from 'sentry/locale';\nimport {measurementType} from 'sentry/utils/discover/fields';\nimport {MobileVital, WebVital} from 'sentry/utils/fields';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    poorThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    poorThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\nexport const MOBILE_VITAL_DETAILS: Record<MobileVital, Vital> = {\n  [MobileVital.AppStartCold]: {\n    slug: 'app_start_cold',\n    name: t('App Start Cold'),\n    description: t(\n      'Cold start is a measure of the application start up time from scratch.'\n    ),\n    type: measurementType(MobileVital.AppStartCold),\n  },\n  [MobileVital.AppStartWarm]: {\n    slug: 'app_start_warm',\n    name: t('App Start Warm'),\n    description: t(\n      'Warm start is a measure of the application start up time while still in memory.'\n    ),\n    type: measurementType(MobileVital.AppStartWarm),\n  },\n  [MobileVital.FramesTotal]: {\n    slug: 'frames_total',\n    name: t('Total Frames'),\n    description: t(\n      'Total frames is a count of the number of frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesTotal),\n  },\n  [MobileVital.FramesSlow]: {\n    slug: 'frames_slow',\n    name: t('Slow Frames'),\n    description: t(\n      'Slow frames is a count of the number of slow frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesSlow),\n  },\n  [MobileVital.FramesFrozen]: {\n    slug: 'frames_frozen',\n    name: t('Frozen Frames'),\n    description: t(\n      'Frozen frames is a count of the number of frozen frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesFrozen),\n  },\n  [MobileVital.FramesSlowRate]: {\n    slug: 'frames_slow_rate',\n    name: t('Slow Frames Rate'),\n    description: t(\n      'Slow Frames Rate is the percentage of frames recorded within a transaction that is considered slow.'\n    ),\n    type: measurementType(MobileVital.FramesSlowRate),\n  },\n  [MobileVital.FramesFrozenRate]: {\n    slug: 'frames_frozen_rate',\n    name: t('Frozen Frames Rate'),\n    description: t(\n      'Frozen Frames Rate is the percentage of frames recorded within a transaction that is considered frozen.'\n    ),\n    type: measurementType(MobileVital.FramesFrozenRate),\n  },\n  [MobileVital.StallCount]: {\n    slug: 'stall_count',\n    name: t('Stalls'),\n    description: t(\n      'Stalls is the number of times the application stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallCount),\n  },\n  [MobileVital.StallTotalTime]: {\n    slug: 'stall_total_time',\n    name: t('Total Stall Time'),\n    description: t(\n      'Stall Total Time is the total amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallTotalTime),\n  },\n  [MobileVital.StallLongestTime]: {\n    slug: 'stall_longest_time',\n    name: t('Longest Stall Time'),\n    description: t(\n      'Stall Longest Time is the longest amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallLongestTime),\n  },\n  [MobileVital.StallPercentage]: {\n    slug: 'stall_percentage',\n    name: t('Stall Percentage'),\n    description: t(\n      'Stall Percentage is the percentage of the transaction duration the application was stalled.'\n    ),\n    type: measurementType(MobileVital.StallPercentage),\n  },\n};\n\nexport enum Browser {\n  CHROME = 'Chrome',\n  EDGE = 'Edge',\n  OPERA = 'Opera',\n  FIREFOX = 'Firefox',\n  SAFARI = 'Safari',\n  IE = 'IE',\n}\n","import {LocationDescriptor, Query} from 'history';\n\nimport {PAGE_URL_PARAM} from 'sentry/constants/pageFilters';\nimport {OrganizationSummary} from 'sentry/types';\nimport {TraceFullDetailed} from 'sentry/utils/performance/quickTrace/types';\nimport {reduceTrace} from 'sentry/utils/performance/quickTrace/utils';\n\nimport {TraceInfo} from './types';\n\nexport function getTraceDetailsUrl(\n  organization: OrganizationSummary,\n  traceSlug: string,\n  dateSelection,\n  query: Query\n): LocationDescriptor {\n  const {start, end, statsPeriod} = dateSelection;\n  return {\n    pathname: `/organizations/${organization.slug}/performance/trace/${traceSlug}/`,\n    query: {\n      ...query,\n      statsPeriod,\n      [PAGE_URL_PARAM.PAGE_START]: start,\n      [PAGE_URL_PARAM.PAGE_END]: end,\n    },\n  };\n}\n\nfunction traceVisitor() {\n  return (accumulator: TraceInfo, event: TraceFullDetailed) => {\n    for (const error of event.errors ?? []) {\n      accumulator.errors.add(error.event_id);\n    }\n\n    accumulator.transactions.add(event.event_id);\n    accumulator.projects.add(event.project_slug);\n\n    accumulator.startTimestamp = Math.min(\n      accumulator.startTimestamp,\n      event.start_timestamp\n    );\n    accumulator.endTimestamp = Math.max(accumulator.endTimestamp, event.timestamp);\n\n    accumulator.maxGeneration = Math.max(accumulator.maxGeneration, event.generation);\n\n    return accumulator;\n  };\n}\n\nexport function getTraceInfo(traces: TraceFullDetailed[]) {\n  const initial = {\n    projects: new Set<string>(),\n    errors: new Set<string>(),\n    transactions: new Set<string>(),\n    startTimestamp: Number.MAX_SAFE_INTEGER,\n    endTimestamp: 0,\n    maxGeneration: 0,\n  };\n\n  return traces.reduce(\n    (info: TraceInfo, trace: TraceFullDetailed) =>\n      reduceTrace<TraceInfo>(trace, traceVisitor(), info),\n    initial\n  );\n}\n\nexport function isRootTransaction(trace: TraceFullDetailed): boolean {\n  // Root transactions has no parent_span_id\n  return trace.parent_span_id === null;\n}\n"],"names":["MINIMAP_HEIGHT","MINIMAP_SPAN_BAR_HEIGHT","NUM_OF_SPANS_FIT_IN_MINI_MAP","TIME_AXIS_HEIGHT","SECONDARY_HEADER_HEIGHT","MINIMAP_CONTAINER_HEIGHT","VIEW_HANDLE_HEIGHT","MERGE_LABELS_THRESHOLD_PERCENT","browserHistory","isNumber","isString","maxBy","set","moment","TOGGLE_BORDER_BOX","TOGGLE_BUTTON_MAX_WIDTH","EntryType","assert","trackAdvancedAnalyticsEvent","WebVital","WEB_VITAL_DETAILS","getPerformanceTransaction","isValidSpanID","maybeSpanID","length","setSpansOnTransaction","spanCount","transaction","spanCountGroups","spanGroup","find","g","setTag","normalizeTimestamps","spanBounds","startTimestamp","endTimestamp","TimestampStatus","parseSpanTimestamps","Stable","Equal","Reversed","boundsGenerator","bounds","viewStart","viewEnd","traceStartTimestamp","traceEndTimestamp","traceDuration","viewStartTimestamp","viewEndTimestamp","viewDuration","type","isSpanVisibleInView","timestampStatus","start","end","width","_exhaustiveCheck","generateRootSpan","trace","rootSpan","trace_id","traceID","span_id","rootSpanID","parent_span_id","parentSpanID","start_timestamp","timestamp","op","description","data","status","rootSpanStatus","hash","exclusive_time","exclusiveTime","getTraceDateTimeRange","input","unix","subtract","utc","format","add","isGapSpan","span","isOrphanSpan","isOrphan","getSpanID","defaultSpanID","getSpanOperation","undefined","getSpanTraceID","getSpanParentSpanID","getTraceContext","event","contexts","parseTrace","spanEntry","entries","entry","SPANS","spans","traceContext","rootSpanOpName","childSpans","potentialParents","Set","map","init","reduced","reduce","acc","inputSpan","parentSpanId","hasParent","has","spanChildren","push","hasEndTimestamp","Object","values","forEach","sort","sortSpans","firstSpan","secondSpan","isOrphanTreeDepth","treeDepth","unwrapTreeDepth","depth","isEventFromBrowserJavaScriptSDK","sdkName","sdk","name","includes","toLowerCase","durationlessBrowserOps","hasFailedThreshold","marks","names","keys","records","filter","vital","slug","some","record","value","poorThreshold","getMeasurements","generateBounds","measurements","Map","allowedVitals","FCP","FP","FID","LCP","TTFB","associatedMeasurement","mergedMeasurements","measurement","roundedPos","Math","round","otherPos","positionDelta","abs","verticalMark","get","failedThreshold","getMeasurementBounds","warning","left","scrollToSpan","spanId","scrollToHash","location","organization","e","preventDefault","spanTargetHash","getSiblingGroupKey","occurrence","getSpanGroupTimestamps","spanGroupItem","newStartTimestamp","newEndTimestamp","getSpanGroupBounds","SpansInViewMap","constructor","isRootSpanInView","spanDepthsInView","treeDepthSum","addSpan","removeSpan","delete","getScrollVal","avgDepth","isSpanIdFocused","focusedSpanIds","relatedSpans","getCumulativeAlertLevelFromErrors","errors","highestErrorLevel","error","ERROR_LEVEL_WEIGHTS","level","ERROR_LEVEL_TO_ALERT_TYPE","fatal","default","sample","info","ROW_HEIGHT","getToggleTheme","IconChevron","space","TOGGLE_BUTTON_MARGIN_RIGHT","TREE_TOGGLE_CONTAINER_WIDTH","ConnectorBar","p","orphanBranch","theme","border","TreeConnector","isLast","borderRadius","TreeToggle","dropShadowLightest","TreeToggleContainer","zIndex","traceView","spanTreeToggler","TreeToggleIcon","Component","useContext","t","isAPIPayloadSimilar","PerformanceEventViewContext","OrganizationContext","QueryError","errorMessage","originalError","message","getOriginalError","_GenericDiscoverQuery","isLoading","tableFetchID","tableData","pageLinks","prevProps","thisAPIPayload","getPayload","props","otherAPIPayload","limit","route","cursor","parseError","detail","responseJSON","unknownError","api","queryBatching","beforeFetch","afterFetch","didFetch","eventView","orgSlug","setError","isValid","url","Symbol","apiPayload","setState","clear","resp","doDiscoverQuery","state","prevState","getResponseHeader","err","_parseError","componentDidMount","fetchData","componentDidUpdate","refetchCondition","_shouldRefetchData","eventViewValidation","shouldRefetchExternal","shouldRefetchData","noPagination","referrer","payload","getRequestPayload","getEventsAPIPayload","forceAppendRawQueryString","per_page","assign","queryExtras","render","childrenProps","children","GenericDiscoverQuery","organizationSlug","performanceEventView","Error","_props","params","batchRequest","query","includeAllArgs","requestPromise","method","createDefinedContext","PerformanceEventViewProvider","_usePerformanceEventView","usePerformanceEventView","useMutablePerformanceEventView","clone","createContext","options","strict","Context","displayName","useDefinedContext","context","Provider","omit","ALL_ACCESS_PROJECTS","trackAnalyticsEvent","EventView","isTransaction","isCurrentEvent","currentEvent","event_id","id","flattenRelevantPaths","traceFull","relevantPath","events","paths","path","current","shift","node","simplifyEvent","child","parseQuickTrace","quickTrace","isFullTrace","parent","parent_event_id","root","generation","isChildren","isDescendant","isAncestor","ancestors","descendants","projects","project_id","size","handleProjectMeta","sortTraceLite","a","b","getTraceRequestPayload","makeEventView","statsPeriod","fromSavedQuery","version","fields","environment","range","getTraceTimeRangeFromEvent","dateReceived","dateCreated","valueOf","reduceTrace","visitor","initialValue","result","pop","filterTrace","predicate","transactions","isTraceFull","Boolean","isTraceFullDetailed","eventKey","eventName","organization_id","parseInt","measurementType","MobileVital","acronym","CLS","RequestTime","MOBILE_VITAL_DETAILS","AppStartCold","AppStartWarm","FramesTotal","FramesSlow","FramesFrozen","FramesSlowRate","FramesFrozenRate","StallCount","StallTotalTime","StallLongestTime","StallPercentage","Browser","PAGE_URL_PARAM","getTraceDetailsUrl","traceSlug","dateSelection","pathname","PAGE_START","PAGE_END","traceVisitor","accumulator","project_slug","min","max","maxGeneration","getTraceInfo","traces","initial","Number","MAX_SAFE_INTEGER","isRootTransaction"],"sourceRoot":""}