{"version":3,"file":"chunks/app_views_performance_transactionSummary_transactionOverview_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/breakdownBars.tsx","webpack:///./app/utils/performance/anomalies/anomaliesQuery.tsx","webpack:///./app/utils/performance/suspectSpans/suspectSpansQuery.tsx","webpack:///./app/views/eventsV2/tags.tsx","webpack:///./app/views/performance/transactionSummary/transactionOverview/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionOverview/index.tsx","webpack:///./app/views/performance/transactionSummary/transactionOverview/relatedIssues.tsx","webpack:///./app/views/performance/transactionSummary/transactionOverview/sidebarCharts.tsx","webpack:///./app/views/performance/transactionSummary/transactionOverview/sidebarMEPCharts.tsx","webpack:///./app/views/performance/transactionSummary/transactionOverview/statusBreakdown.tsx","webpack:///./app/views/performance/transactionSummary/transactionOverview/suspectSpans.tsx","webpack:///./app/views/performance/transactionSummary/transactionOverview/userStats.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/suspectSpansTable.tsx","webpack:///./app/views/performance/transactionSummary/transactionVitals/constants.tsx","webpack:///./app/views/performance/vitalDetail/vitalInfo.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {formatPercentage} from 'sentry/utils/formatters';\n\ntype Point = {\n  label: string;\n  value: number;\n  onClick?: () => void;\n};\n\ntype Props = {\n  /**\n   * The data to display. The caller should order the points\n   * in the order they want bars displayed.\n   */\n  data: Point[];\n};\n\nfunction BreakdownBars({data}: Props) {\n  const total = data.reduce((sum, point) => point.value + sum, 0);\n  return (\n    <BreakdownGrid>\n      {data.map((point, i) => (\n        <Fragment key={`${i}:${point.label}`}>\n          <Percentage>{formatPercentage(point.value / total, 0)}</Percentage>\n          <BarContainer\n            data-test-id={`status-${point.label}`}\n            cursor={point.onClick ? 'pointer' : 'default'}\n            onClick={point.onClick}\n          >\n            <Bar style={{width: `${((point.value / total) * 100).toFixed(2)}%`}} />\n            <Label>{point.label}</Label>\n          </BarContainer>\n        </Fragment>\n      ))}\n    </BreakdownGrid>\n  );\n}\n\nexport default BreakdownBars;\n\nconst BreakdownGrid = styled('div')`\n  display: grid;\n  grid-template-columns: min-content auto;\n  column-gap: ${space(1)};\n  row-gap: ${space(1)};\n`;\n\nconst Percentage = styled('div')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  text-align: right;\n`;\n\nconst BarContainer = styled('div')<{cursor: 'pointer' | 'default'}>`\n  padding-left: ${space(1)};\n  padding-right: ${space(1)};\n  position: relative;\n  cursor: ${p => p.cursor};\n`;\n\nconst Label = styled('span')`\n  position: relative;\n  color: ${p => p.theme.textColor};\n  z-index: 2;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst Bar = styled('div')`\n  border-radius: 2px;\n  background-color: ${p => p.theme.border};\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  height: 100%;\n  width: 0%;\n`;\n","import {EventsStatsData, Organization} from 'sentry/types';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\nimport {ANOMALY_FLAG} from 'sentry/views/performance/transactionSummary/transactionAnomalies/utils';\n\ntype AnomaliesProps = {};\ntype RequestProps = DiscoverQueryProps & AnomaliesProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<AnomaliesProps>, 'tableData'> & {\n  data: AnomalyPayload | null;\n};\n\ntype Props = Omit<RequestProps, 'orgSlug'> & {\n  children: (props: ChildrenProps) => React.ReactNode;\n  organization: Organization;\n};\n\nexport type AnomalyConfidence = 'high' | 'low';\n\n// Should match events stats data in format.\ntype AnomalyStatsData = {\n  data: EventsStatsData;\n  end?: number;\n  start?: number;\n};\n\n// Anomaly info describes what the anomaly service determines is an 'anomaly area'.\nexport type AnomalyInfo = {\n  confidence: AnomalyConfidence;\n  end: number;\n  expected: number;\n  id: string;\n  received: number;\n  start: number;\n};\n\nexport type AnomalyPayload = {\n  anomalies: AnomalyInfo[];\n  y: AnomalyStatsData;\n  yhat_lower: AnomalyStatsData;\n  yhat_upper: AnomalyStatsData;\n};\n\nfunction transformStatsTimes(stats: AnomalyStatsData) {\n  stats.data.forEach(d => (d[0] = d[0] * 1000));\n  return stats;\n}\nfunction transformAnomaliesTimes(anoms: AnomalyInfo[]) {\n  anoms.forEach(a => {\n    a.start = a.start * 1000;\n    a.end = a.end * 1000;\n  });\n  return anoms;\n}\n\nfunction transformPayload(payload: AnomalyPayload): AnomalyPayload {\n  const newPayload = {...payload};\n  if (!payload.y || !payload.yhat_lower || !payload.yhat_upper || !payload.anomalies) {\n    return newPayload;\n  }\n\n  newPayload.y = transformStatsTimes(payload.y);\n  newPayload.yhat_upper = transformStatsTimes(payload.yhat_upper);\n  newPayload.yhat_lower = transformStatsTimes(payload.yhat_lower);\n  newPayload.anomalies = transformAnomaliesTimes(payload.anomalies);\n  return newPayload;\n}\n\nfunction AnomaliesSeriesQuery(props: Props) {\n  if (!props.organization.features.includes(ANOMALY_FLAG)) {\n    return (\n      <div>\n        {props.children({data: null, isLoading: false, error: null, pageLinks: null})}\n      </div>\n    );\n  }\n\n  return (\n    <GenericDiscoverQuery<AnomalyPayload, {}>\n      route=\"transaction-anomaly-detection\"\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({\n          data: tableData && tableData.y ? transformPayload(tableData) : null,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(AnomaliesSeriesQuery);\n","import omit from 'lodash/omit';\n\nimport {defined} from 'sentry/utils';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SuspectSpans} from './types';\n\ntype SuspectSpansProps = {\n  maxExclusiveTime?: string;\n  minExclusiveTime?: string;\n  perSuspect?: number;\n  spanGroups?: string[];\n  spanOps?: string[];\n};\n\ntype RequestProps = DiscoverQueryProps & SuspectSpansProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<SuspectSpansProps>, 'tableData'> & {\n  suspectSpans: SuspectSpans | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getSuspectSpanPayload(props: RequestProps) {\n  const {perSuspect, spanOps, spanGroups, minExclusiveTime, maxExclusiveTime} = props;\n  const payload = {\n    perSuspect,\n    spanOp: spanOps,\n    spanGroup: spanGroups,\n    min_exclusive_time: minExclusiveTime,\n    max_exclusive_time: maxExclusiveTime,\n  };\n  if (!defined(payload.perSuspect)) {\n    delete payload.perSuspect;\n  }\n  if (!defined(payload.spanOp)) {\n    delete payload.spanOp;\n  }\n  if (!defined(payload.spanGroup)) {\n    delete payload.spanGroup;\n  }\n  const additionalPayload = props.eventView.getEventsAPIPayload(props.location);\n  return {\n    ...payload,\n    ...additionalPayload,\n  };\n}\n\nfunction SuspectSpansQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SuspectSpans, SuspectSpansProps>\n      route=\"events-spans-performance\"\n      getRequestPayload={getSuspectSpanPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({suspectSpans: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SuspectSpansQuery);\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport {Location, LocationDescriptor} from 'history';\n\nimport {fetchTagFacets, Tag, TagSegment} from 'sentry/actionCreators/events';\nimport {Client} from 'sentry/api';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport Placeholder from 'sentry/components/placeholder';\nimport TagDistributionMeter from 'sentry/components/tagDistributionMeter';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView, {isAPIPayloadSimilar} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  eventView: EventView;\n  generateUrl: (key: string, value: string) => LocationDescriptor;\n  location: Location;\n  organization: Organization;\n  totalValues: null | number;\n  confirmedQuery?: boolean;\n};\n\ntype State = {\n  error: string;\n  loading: boolean;\n  tags: Tag[];\n  totalValues: null | number;\n};\n\nclass Tags extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    tags: [],\n    totalValues: null,\n    error: '',\n  };\n\n  componentDidMount() {\n    this.fetchData(true);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      this.shouldRefetchData(prevProps) ||\n      prevProps.confirmedQuery !== this.props.confirmedQuery\n    ) {\n      this.fetchData();\n    }\n  }\n\n  shouldRefetchData = (prevProps: Props): boolean => {\n    const thisAPIPayload = this.props.eventView.getFacetsAPIPayload(this.props.location);\n    const otherAPIPayload = prevProps.eventView.getFacetsAPIPayload(prevProps.location);\n\n    return !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload);\n  };\n\n  fetchData = async (forceFetchData = false) => {\n    const {api, organization, eventView, location, confirmedQuery} = this.props;\n    this.setState({loading: true, error: '', tags: []});\n\n    // Fetch should be forced after mounting as confirmedQuery isn't guaranteed\n    // since this component can mount/unmount via show/hide tags separate from\n    // data being loaded for the rest of the page.\n    if (!forceFetchData && confirmedQuery === false) {\n      return;\n    }\n\n    try {\n      const tags = await fetchTagFacets(\n        api,\n        organization.slug,\n        eventView.getFacetsAPIPayload(location)\n      );\n      this.setState({loading: false, tags});\n    } catch (err) {\n      Sentry.captureException(err);\n      this.setState({loading: false, error: err});\n    }\n  };\n\n  handleTagClick = (tag: string) => {\n    const {organization} = this.props;\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.facet_map.clicked',\n      eventName: 'Discoverv2: Clicked on a tag on the facet map',\n      tag,\n      organization_id: parseInt(organization.id, 10),\n    });\n  };\n\n  renderTag(tag: Tag) {\n    const {generateUrl, totalValues} = this.props;\n\n    const segments: TagSegment[] = tag.topValues.map(segment => {\n      segment.url = generateUrl(tag.key, segment.value);\n\n      return segment;\n    });\n    // Ensure we don't show >100% if there's a slight mismatch between the facets\n    // endpoint and the totals endpoint\n    const maxTotalValues =\n      segments.length > 0\n        ? Math.max(Number(totalValues), segments[0].count)\n        : totalValues;\n    return (\n      <TagDistributionMeter\n        key={tag.key}\n        title={tag.key}\n        segments={segments}\n        totalValues={Number(maxTotalValues)}\n        renderLoading={() => <StyledPlaceholder height=\"16px\" />}\n        onTagClick={this.handleTagClick}\n        showReleasePackage\n      />\n    );\n  }\n\n  renderPlaceholders() {\n    return (\n      <Fragment>\n        <StyledPlaceholderTitle key=\"title-1\" />\n        <StyledPlaceholder key=\"bar-1\" />\n        <StyledPlaceholderTitle key=\"title-2\" />\n        <StyledPlaceholder key=\"bar-2\" />\n        <StyledPlaceholderTitle key=\"title-3\" />\n        <StyledPlaceholder key=\"bar-3\" />\n      </Fragment>\n    );\n  }\n\n  renderBody = () => {\n    const {loading, error, tags} = this.state;\n    if (loading) {\n      return this.renderPlaceholders();\n    }\n    if (error) {\n      return (\n        <ErrorPanel height=\"132px\">\n          <IconWarning color=\"gray300\" size=\"lg\" />\n        </ErrorPanel>\n      );\n    }\n    if (tags.length > 0) {\n      return tags.map(tag => this.renderTag(tag));\n    }\n    return <StyledEmptyStateWarning small>{t('No tags found')}</StyledEmptyStateWarning>;\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <SectionHeading>{t('Tag Summary')}</SectionHeading>\n        {this.renderBody()}\n      </Fragment>\n    );\n  }\n}\n\nconst StyledEmptyStateWarning = styled(EmptyStateWarning)`\n  height: 132px;\n  padding: 54px 15%;\n`;\n\nconst StyledPlaceholder = styled(Placeholder)`\n  border-radius: ${p => p.theme.borderRadius};\n  height: 16px;\n  margin-bottom: ${space(1.5)};\n`;\n\nconst StyledPlaceholderTitle = styled(Placeholder)`\n  width: 100px;\n  height: 12px;\n  margin-bottom: ${space(0.5)};\n`;\n\nexport {Tags};\nexport default withApi(Tags);\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport Feature from 'sentry/components/acl/feature';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport TransactionsList, {\n  DropdownOption,\n} from 'sentry/components/discover/transactionsList';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {defined, generateQueryWithTag} from 'sentry/utils';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  formatTagKey,\n  getAggregateAlias,\n  isRelativeSpanOperationBreakdownField,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  SPAN_OP_RELATIVE_BREAKDOWN_FIELD,\n} from 'sentry/utils/discover/fields';\nimport {QueryError} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {canUseMetricsData} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport withProjects from 'sentry/utils/withProjects';\nimport {Actions, updateQuery} from 'sentry/views/eventsV2/table/cellAction';\nimport {TableColumn} from 'sentry/views/eventsV2/table/types';\nimport Tags from 'sentry/views/eventsV2/tags';\nimport {\n  PERCENTILE as VITAL_PERCENTILE,\n  VITAL_GROUPS,\n} from 'sentry/views/performance/transactionSummary/transactionVitals/constants';\n\nimport {isSummaryViewFrontend, isSummaryViewFrontendPageLoad} from '../../utils';\nimport Filter, {\n  decodeFilterFromLocation,\n  filterToField,\n  filterToSearchConditions,\n  SpanOperationBreakdownFilter,\n} from '../filter';\nimport {\n  generateTraceLink,\n  generateTransactionLink,\n  normalizeSearchConditions,\n  SidebarSpacer,\n  TransactionFilterOptions,\n} from '../utils';\n\nimport TransactionSummaryCharts from './charts';\nimport RelatedIssues from './relatedIssues';\nimport SidebarCharts from './sidebarCharts';\nimport SidebarMEPCharts from './sidebarMEPCharts';\nimport StatusBreakdown from './statusBreakdown';\nimport SuspectSpans from './suspectSpans';\nimport {TagExplorer} from './tagExplorer';\nimport UserStats from './userStats';\n\ntype Props = {\n  error: QueryError | null;\n  eventView: EventView;\n  isLoading: boolean;\n  location: Location;\n  onChangeFilter: (newFilter: SpanOperationBreakdownFilter) => void;\n  organization: Organization;\n  projectId: string;\n  projects: Project[];\n  spanOperationBreakdownFilter: SpanOperationBreakdownFilter;\n  totalValues: Record<string, number> | null;\n  transactionName: string;\n};\n\nfunction SummaryContent({\n  eventView,\n  location,\n  totalValues,\n  spanOperationBreakdownFilter,\n  organization,\n  projects,\n  isLoading,\n  error,\n  projectId,\n  transactionName,\n  onChangeFilter,\n}: Props) {\n  const useAggregateAlias = !organization.features.includes(\n    'performance-frontend-use-events-endpoint'\n  );\n  function handleSearch(query: string) {\n    const queryParams = normalizeDateTimeParams({\n      ...(location.query || {}),\n      query,\n    });\n\n    // do not propagate pagination when making a new search\n    const searchQueryParams = omit(queryParams, 'cursor');\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: searchQueryParams,\n    });\n  }\n\n  function generateTagUrl(key: string, value: string) {\n    const query = generateQueryWithTag(location.query, {key: formatTagKey(key), value});\n\n    return {\n      ...location,\n      query,\n    };\n  }\n\n  function handleCellAction(column: TableColumn<React.ReactText>) {\n    return (action: Actions, value: React.ReactText) => {\n      const searchConditions = normalizeSearchConditions(eventView.query);\n\n      updateQuery(searchConditions, action, column, value);\n\n      browserHistory.push({\n        pathname: location.pathname,\n        query: {\n          ...location.query,\n          cursor: undefined,\n          query: searchConditions.formatString(),\n        },\n      });\n    };\n  }\n\n  function handleTransactionsListSortChange(value: string) {\n    const target = {\n      pathname: location.pathname,\n      query: {...location.query, showTransactions: value, transactionCursor: undefined},\n    };\n\n    browserHistory.push(target);\n  }\n\n  function handleAllEventsViewClick() {\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.summary.view_in_transaction_events',\n      eventName: 'Performance Views: View in All Events from Transaction Summary',\n      organization_id: parseInt(organization.id, 10),\n    });\n  }\n\n  function generateEventView(\n    transactionsListEventView: EventView,\n    transactionsListTitles: string[]\n  ) {\n    const {selected} = getTransactionsListSort(location, {\n      p95: (useAggregateAlias ? totalValues?.p95 : totalValues?.['p95()']) ?? 0,\n      spanOperationBreakdownFilter,\n    });\n    const sortedEventView = transactionsListEventView.withSorts([selected.sort]);\n\n    if (spanOperationBreakdownFilter === SpanOperationBreakdownFilter.None) {\n      const fields = [\n        // Remove the extra field columns\n        ...sortedEventView.fields.slice(0, transactionsListTitles.length),\n      ];\n\n      // omit \"Operation Duration\" column\n      sortedEventView.fields = fields.filter(({field}) => {\n        return !isRelativeSpanOperationBreakdownField(field);\n      });\n    }\n    return sortedEventView;\n  }\n\n  const hasPerformanceChartInterpolation = organization.features.includes(\n    'performance-chart-interpolation'\n  );\n\n  const query = decodeScalar(location.query.query, '');\n  const totalCount =\n    totalValues === null\n      ? null\n      : useAggregateAlias\n      ? totalValues.count\n      : totalValues['count()'];\n\n  // NOTE: This is not a robust check for whether or not a transaction is a front end\n  // transaction, however it will suffice for now.\n  const hasWebVitals =\n    isSummaryViewFrontendPageLoad(eventView, projects) ||\n    (totalValues !== null &&\n      VITAL_GROUPS.some(group =>\n        group.vitals.some(vital => {\n          const functionName = `percentile(${vital},${VITAL_PERCENTILE})`;\n          const field = useAggregateAlias\n            ? getAggregateAlias(functionName)\n            : functionName;\n          return Number.isFinite(totalValues[field]);\n        })\n      ));\n\n  const isFrontendView = isSummaryViewFrontend(eventView, projects);\n\n  const transactionsListTitles = [\n    t('event id'),\n    t('user'),\n    t('total duration'),\n    t('trace id'),\n    t('timestamp'),\n  ];\n\n  let transactionsListEventView = eventView.clone();\n\n  if (organization.features.includes('performance-ops-breakdown')) {\n    // update search conditions\n\n    const spanOperationBreakdownConditions = filterToSearchConditions(\n      spanOperationBreakdownFilter,\n      location\n    );\n\n    if (spanOperationBreakdownConditions) {\n      eventView = eventView.clone();\n      eventView.query = `${eventView.query} ${spanOperationBreakdownConditions}`.trim();\n      transactionsListEventView = eventView.clone();\n    }\n\n    // update header titles of transactions list\n\n    const operationDurationTableTitle =\n      spanOperationBreakdownFilter === SpanOperationBreakdownFilter.None\n        ? t('operation duration')\n        : `${spanOperationBreakdownFilter} duration`;\n\n    // add ops breakdown duration column as the 3rd column\n    transactionsListTitles.splice(2, 0, operationDurationTableTitle);\n\n    // span_ops_breakdown.relative is a preserved name and a marker for the associated\n    // field renderer to be used to generate the relative ops breakdown\n    let durationField = SPAN_OP_RELATIVE_BREAKDOWN_FIELD;\n\n    if (spanOperationBreakdownFilter !== SpanOperationBreakdownFilter.None) {\n      durationField = filterToField(spanOperationBreakdownFilter)!;\n    }\n\n    const fields = [...transactionsListEventView.fields];\n\n    // add ops breakdown duration column as the 3rd column\n    fields.splice(2, 0, {field: durationField});\n\n    if (spanOperationBreakdownFilter === SpanOperationBreakdownFilter.None) {\n      fields.push(\n        ...SPAN_OP_BREAKDOWN_FIELDS.map(field => {\n          return {field};\n        })\n      );\n    }\n\n    transactionsListEventView.fields = fields;\n  }\n\n  const openAllEventsProps = {\n    generatePerformanceTransactionEventsView: () => {\n      const performanceTransactionEventsView = generateEventView(\n        transactionsListEventView,\n        transactionsListTitles\n      );\n      performanceTransactionEventsView.query = query;\n      return performanceTransactionEventsView;\n    },\n    handleOpenAllEventsClick: handleAllEventsViewClick,\n  };\n\n  const isUsingMetrics = canUseMetricsData(organization);\n\n  return (\n    <Fragment>\n      <Layout.Main>\n        <FilterActions>\n          <Filter\n            organization={organization}\n            currentFilter={spanOperationBreakdownFilter}\n            onChangeFilter={onChangeFilter}\n          />\n          <PageFilterBar condensed>\n            <EnvironmentPageFilter />\n            <DatePageFilter alignDropdown=\"left\" />\n          </PageFilterBar>\n          <StyledSearchBar\n            searchSource=\"transaction_summary\"\n            organization={organization}\n            projectIds={eventView.project}\n            query={query}\n            fields={eventView.fields}\n            onSearch={handleSearch}\n            maxQueryLength={MAX_QUERY_LENGTH}\n          />\n        </FilterActions>\n        <TransactionSummaryCharts\n          organization={organization}\n          location={location}\n          eventView={eventView}\n          totalValues={totalCount}\n          currentFilter={spanOperationBreakdownFilter}\n          withoutZerofill={hasPerformanceChartInterpolation}\n        />\n        <TransactionsList\n          location={location}\n          organization={organization}\n          eventView={transactionsListEventView}\n          {...openAllEventsProps}\n          showTransactions={\n            decodeScalar(\n              location.query.showTransactions,\n              TransactionFilterOptions.SLOW\n            ) as TransactionFilterOptions\n          }\n          breakdown={decodeFilterFromLocation(location)}\n          titles={transactionsListTitles}\n          handleDropdownChange={handleTransactionsListSortChange}\n          generateLink={{\n            id: generateTransactionLink(transactionName),\n            trace: generateTraceLink(eventView.normalizeDateSelection(location)),\n          }}\n          handleCellAction={handleCellAction}\n          {...getTransactionsListSort(location, {\n            p95: (useAggregateAlias ? totalValues?.p95 : totalValues?.['p95()']) ?? 0,\n            spanOperationBreakdownFilter,\n          })}\n          forceLoading={isLoading}\n        />\n        <Feature\n          requireAll={false}\n          features={['organizations:performance-suspect-spans-view']}\n        >\n          <SuspectSpans\n            location={location}\n            organization={organization}\n            eventView={eventView}\n            totals={\n              defined(totalValues?.['count()'])\n                ? {'count()': totalValues!['count()']}\n                : null\n            }\n            projectId={projectId}\n            transactionName={transactionName}\n          />\n        </Feature>\n        <TagExplorer\n          eventView={eventView}\n          organization={organization}\n          location={location}\n          projects={projects}\n          transactionName={transactionName}\n          currentFilter={spanOperationBreakdownFilter}\n        />\n        <RelatedIssues\n          organization={organization}\n          location={location}\n          transaction={transactionName}\n          start={eventView.start}\n          end={eventView.end}\n          statsPeriod={eventView.statsPeriod}\n        />\n      </Layout.Main>\n      <Layout.Side>\n        {(isUsingMetrics ?? null) && (\n          <Fragment>\n            <SidebarMEPCharts\n              organization={organization}\n              isLoading={isLoading}\n              error={error}\n              totals={totalValues}\n              eventView={eventView}\n              transactionName={transactionName}\n              isShowingMetricsEventCount\n            />\n            <SidebarSpacer />\n          </Fragment>\n        )}\n        <UserStats\n          organization={organization}\n          location={location}\n          isLoading={isLoading}\n          hasWebVitals={hasWebVitals}\n          error={error}\n          totals={totalValues}\n          transactionName={transactionName}\n          eventView={eventView}\n        />\n        {!isFrontendView && (\n          <StatusBreakdown\n            eventView={eventView}\n            organization={organization}\n            location={location}\n          />\n        )}\n        <SidebarSpacer />\n        {isUsingMetrics ? (\n          <SidebarMEPCharts\n            organization={organization}\n            isLoading={isLoading}\n            error={error}\n            totals={totalValues}\n            eventView={eventView}\n            transactionName={transactionName}\n          />\n        ) : (\n          <SidebarCharts\n            organization={organization}\n            isLoading={isLoading}\n            error={error}\n            totals={totalValues}\n            eventView={eventView}\n            transactionName={transactionName}\n          />\n        )}\n        <SidebarSpacer />\n        <Tags\n          generateUrl={generateTagUrl}\n          totalValues={totalCount}\n          eventView={eventView}\n          organization={organization}\n          location={location}\n        />\n      </Layout.Side>\n    </Fragment>\n  );\n}\n\nfunction getFilterOptions({\n  p95,\n  spanOperationBreakdownFilter,\n}: {\n  p95: number;\n  spanOperationBreakdownFilter: SpanOperationBreakdownFilter;\n}): DropdownOption[] {\n  if (spanOperationBreakdownFilter === SpanOperationBreakdownFilter.None) {\n    return [\n      {\n        sort: {kind: 'asc', field: 'transaction.duration'},\n        value: TransactionFilterOptions.FASTEST,\n        label: t('Fastest Transactions'),\n      },\n      {\n        query: [['transaction.duration', `<=${p95.toFixed(0)}`]],\n        sort: {kind: 'desc', field: 'transaction.duration'},\n        value: TransactionFilterOptions.SLOW,\n        label: t('Slow Transactions (p95)'),\n      },\n      {\n        sort: {kind: 'desc', field: 'transaction.duration'},\n        value: TransactionFilterOptions.OUTLIER,\n        label: t('Outlier Transactions (p100)'),\n      },\n      {\n        sort: {kind: 'desc', field: 'timestamp'},\n        value: TransactionFilterOptions.RECENT,\n        label: t('Recent Transactions'),\n      },\n    ];\n  }\n\n  const field = filterToField(spanOperationBreakdownFilter)!;\n  const operationName = spanOperationBreakdownFilter;\n\n  return [\n    {\n      sort: {kind: 'asc', field},\n      value: TransactionFilterOptions.FASTEST,\n      label: t('Fastest %s Operations', operationName),\n    },\n    {\n      query: [['transaction.duration', `<=${p95.toFixed(0)}`]],\n      sort: {kind: 'desc', field},\n      value: TransactionFilterOptions.SLOW,\n      label: t('Slow %s Operations (p95)', operationName),\n    },\n    {\n      sort: {kind: 'desc', field},\n      value: TransactionFilterOptions.OUTLIER,\n      label: t('Outlier %s Operations (p100)', operationName),\n    },\n    {\n      sort: {kind: 'desc', field: 'timestamp'},\n      value: TransactionFilterOptions.RECENT,\n      label: t('Recent Transactions'),\n    },\n  ];\n}\n\nfunction getTransactionsListSort(\n  location: Location,\n  options: {p95: number; spanOperationBreakdownFilter: SpanOperationBreakdownFilter}\n): {options: DropdownOption[]; selected: DropdownOption} {\n  const sortOptions = getFilterOptions(options);\n  const urlParam = decodeScalar(\n    location.query.showTransactions,\n    TransactionFilterOptions.SLOW\n  );\n  const selectedSort = sortOptions.find(opt => opt.value === urlParam) || sortOptions[0];\n  return {selected: selectedSort, options: sortOptions};\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(2, min-content);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: auto auto 1fr;\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    order: 1;\n    grid-column: 1/4;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    order: initial;\n    grid-column: auto;\n  }\n`;\n\nexport default withProjects(SummaryContent);\n","import {useEffect} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {loadOrganizationTags} from 'sentry/actionCreators/tags';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {Column, isAggregateField, QueryFieldValue} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {MEPSettingProvider} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport {removeHistogramQueryStrings} from 'sentry/utils/performance/histogram';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useApi from 'sentry/utils/useApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport {addRoutePerformanceContext} from '../../utils';\nimport {\n  decodeFilterFromLocation,\n  filterToLocationQuery,\n  SpanOperationBreakdownFilter,\n} from '../filter';\nimport PageLayout, {ChildProps} from '../pageLayout';\nimport Tab from '../tabs';\nimport {\n  PERCENTILE as VITAL_PERCENTILE,\n  VITAL_GROUPS,\n} from '../transactionVitals/constants';\n\nimport {ZOOM_END, ZOOM_START} from './latencyChart/utils';\nimport SummaryContent from './content';\n\n// Used to cast the totals request to numbers\n// as React.ReactText\ntype TotalValues = Record<string, number>;\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  selection: PageFilters;\n};\n\nfunction TransactionOverview(props: Props) {\n  const api = useApi();\n\n  const {location, selection, organization, projects} = props;\n\n  useEffect(() => {\n    loadOrganizationTags(api, organization.slug, selection);\n    addRoutePerformanceContext(selection);\n    trackAdvancedAnalyticsEvent('performance_views.transaction_summary.view', {\n      organization,\n    });\n  }, [selection, organization, api]);\n\n  return (\n    <MEPSettingProvider>\n      <PageLayout\n        location={location}\n        organization={organization}\n        projects={projects}\n        tab={Tab.TransactionSummary}\n        getDocumentTitle={getDocumentTitle}\n        generateEventView={generateEventView}\n        childComponent={OverviewContentWrapper}\n      />\n    </MEPSettingProvider>\n  );\n}\n\nfunction OverviewContentWrapper(props: ChildProps) {\n  const {\n    location,\n    organization,\n    eventView,\n    projectId,\n    transactionName,\n    transactionThreshold,\n    transactionThresholdMetric,\n  } = props;\n  const useEvents = organization.features.includes(\n    'performance-frontend-use-events-endpoint'\n  );\n\n  const spanOperationBreakdownFilter = decodeFilterFromLocation(location);\n\n  const totalsView = getTotalsEventView(organization, eventView);\n\n  const onChangeFilter = (newFilter: SpanOperationBreakdownFilter) => {\n    trackAdvancedAnalyticsEvent('performance_views.filter_dropdown.selection', {\n      organization,\n      action: newFilter as string,\n    });\n\n    const nextQuery: Location['query'] = {\n      ...removeHistogramQueryStrings(location, [ZOOM_START, ZOOM_END]),\n      ...filterToLocationQuery(newFilter),\n    };\n\n    if (newFilter === SpanOperationBreakdownFilter.None) {\n      delete nextQuery.breakdown;\n    }\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: nextQuery,\n    });\n  };\n\n  return (\n    <DiscoverQuery\n      eventView={totalsView}\n      orgSlug={organization.slug}\n      location={location}\n      transactionThreshold={transactionThreshold}\n      transactionThresholdMetric={transactionThresholdMetric}\n      referrer=\"api.performance.transaction-summary\"\n      useEvents={useEvents}\n    >\n      {({isLoading, error, tableData}) => {\n        const totals: TotalValues | null =\n          (tableData?.data?.[0] as {[k: string]: number}) ?? null;\n        return (\n          <SummaryContent\n            location={location}\n            organization={organization}\n            eventView={eventView}\n            projectId={projectId}\n            transactionName={transactionName}\n            isLoading={isLoading}\n            error={error}\n            totalValues={totals}\n            onChangeFilter={onChangeFilter}\n            spanOperationBreakdownFilter={spanOperationBreakdownFilter}\n          />\n        );\n      }}\n    </DiscoverQuery>\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Performance')].join(' - ');\n  }\n\n  return [t('Summary'), t('Performance')].join(' - ');\n}\n\nfunction generateEventView({\n  location,\n  transactionName,\n}: {\n  location: Location;\n  transactionName: string;\n}): EventView {\n  // Use the user supplied query but overwrite any transaction or event type\n  // conditions they applied.\n  const query = decodeScalar(location.query.query, '');\n  const conditions = new MutableSearch(query);\n\n  conditions.setFilterValues('event.type', ['transaction']);\n  conditions.setFilterValues('transaction', [transactionName]);\n\n  Object.keys(conditions.filters).forEach(field => {\n    if (isAggregateField(field)) {\n      conditions.removeFilter(field);\n    }\n  });\n\n  const fields = ['id', 'user.display', 'transaction.duration', 'trace', 'timestamp'];\n\n  return EventView.fromNewQueryWithLocation(\n    {\n      id: undefined,\n      version: 2,\n      name: transactionName,\n      fields,\n      query: conditions.formatString(),\n      projects: [],\n    },\n    location\n  );\n}\n\nfunction getTotalsEventView(\n  _organization: Organization,\n  eventView: EventView\n): EventView {\n  const vitals = VITAL_GROUPS.map(({vitals: vs}) => vs).reduce((keys: WebVital[], vs) => {\n    vs.forEach(vital => keys.push(vital));\n    return keys;\n  }, []);\n\n  const totalsColumns: QueryFieldValue[] = [\n    {\n      kind: 'function',\n      function: ['p95', '', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['count', '', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['count_unique', 'user', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['failure_rate', '', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['tpm', '', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['count_miserable', 'user', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['user_misery', '', undefined, undefined],\n    },\n    {\n      kind: 'function',\n      function: ['apdex', '', undefined, undefined],\n    },\n  ];\n\n  return eventView.withColumns([\n    ...totalsColumns,\n    ...vitals.map(\n      vital =>\n        ({\n          kind: 'function',\n          function: ['percentile', vital, VITAL_PERCENTILE.toString(), undefined],\n        } as Column)\n    ),\n  ]);\n}\n\nexport default withPageFilters(withProjects(withOrganization(TransactionOverview)));\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport pick from 'lodash/pick';\n\nimport Button from 'sentry/components/button';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport GroupList from 'sentry/components/issues/groupList';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {DEFAULT_RELATIVE_PERIODS} from 'sentry/constants';\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {OrganizationSummary} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {removeTracingKeysFromSearch} from '../../utils';\n\ntype Props = {\n  location: Location;\n  organization: OrganizationSummary;\n  transaction: string;\n  end?: string;\n  start?: string;\n  statsPeriod?: string | null;\n};\n\nclass RelatedIssues extends Component<Props> {\n  getIssuesEndpoint() {\n    const {transaction, organization, start, end, statsPeriod, location} = this.props;\n\n    const queryParams = {\n      start,\n      end,\n      statsPeriod,\n      limit: 5,\n      sort: 'new',\n      ...pick(location.query, [...Object.values(URL_PARAM), 'cursor']),\n    };\n    const currentFilter = new MutableSearch(decodeScalar(location.query.query, ''));\n    removeTracingKeysFromSearch(currentFilter);\n    currentFilter\n      .addFreeText('is:unresolved')\n      .setFilterValues('transaction', [transaction]);\n\n    return {\n      path: `/organizations/${organization.slug}/issues/`,\n      queryParams: {\n        ...queryParams,\n        query: currentFilter.formatString(),\n      },\n    };\n  }\n\n  handleOpenClick = () => {\n    const {organization} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'performance_views.summary.open_issues',\n      eventName: 'Performance Views: Open issues from transaction summary',\n      organization_id: parseInt(organization.id, 10),\n    });\n  };\n\n  renderEmptyMessage = () => {\n    const {statsPeriod} = this.props;\n\n    const selectedTimePeriod = statsPeriod && DEFAULT_RELATIVE_PERIODS[statsPeriod];\n    const displayedPeriod = selectedTimePeriod\n      ? selectedTimePeriod.toLowerCase()\n      : t('given timeframe');\n\n    return (\n      <Panel>\n        <PanelBody>\n          <EmptyStateWarning>\n            <p>\n              {tct('No new issues for this transaction for the [timePeriod].', {\n                timePeriod: displayedPeriod,\n              })}\n            </p>\n          </EmptyStateWarning>\n        </PanelBody>\n      </Panel>\n    );\n  };\n\n  render() {\n    const {organization} = this.props;\n    const {path, queryParams} = this.getIssuesEndpoint();\n    const issueSearch = {\n      pathname: `/organizations/${organization.slug}/issues/`,\n      query: queryParams,\n    };\n\n    return (\n      <Fragment>\n        <ControlsWrapper>\n          <SectionHeading>{t('Related Issues')}</SectionHeading>\n          <Button\n            data-test-id=\"issues-open\"\n            size=\"xs\"\n            to={issueSearch}\n            onClick={this.handleOpenClick}\n          >\n            {t('Open in Issues')}\n          </Button>\n        </ControlsWrapper>\n\n        <TableWrapper>\n          <GroupList\n            orgId={organization.slug}\n            endpointPath={path}\n            queryParams={queryParams}\n            query=\"\"\n            canSelectGroups={false}\n            renderEmptyMessage={this.renderEmptyMessage}\n            withChart={false}\n            withPagination={false}\n          />\n        </TableWrapper>\n      </Fragment>\n    );\n  }\n}\n\nconst ControlsWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(1)};\n`;\n\nconst TableWrapper = styled('div')`\n  margin-bottom: ${space(4)};\n  ${Panel} {\n    /* smaller space between table and pagination */\n    margin-bottom: -${space(1)};\n  }\n`;\n\nexport default RelatedIssues;\n","// eslint-disable-next-line no-restricted-imports\nimport {browserHistory, InjectedRouter, withRouter, WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport color from 'color';\nimport {Location} from 'history';\n\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport MarkPoint from 'sentry/components/charts/components/markPoint';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {LineChart, LineChartProps} from 'sentry/components/charts/lineChart';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {getInterval} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {tooltipFormatter} from 'sentry/utils/discover/charts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {QueryError} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  formatAbbreviatedNumber,\n  formatFloat,\n  formatPercentage,\n} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport AnomaliesQuery from 'sentry/utils/performance/anomalies/anomaliesQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useApi from 'sentry/utils/useApi';\nimport {getTermHelp, PERFORMANCE_TERM} from 'sentry/views/performance/data';\n\nimport {\n  anomaliesRouteWithQuery,\n  ANOMALY_FLAG,\n  anomalyToColor,\n} from '../transactionAnomalies/utils';\n\ntype ContainerProps = WithRouterProps & {\n  error: QueryError | null;\n  eventView: EventView;\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  totals: Record<string, number> | null;\n  transactionName: string;\n};\n\ntype Props = Pick<ContainerProps, 'organization' | 'isLoading' | 'error' | 'totals'> & {\n  chartData: {\n    chartOptions: Omit<LineChartProps, 'series'>;\n    errored: boolean;\n    loading: boolean;\n    reloading: boolean;\n    series: LineChartProps['series'];\n  };\n  eventView: EventView;\n  location: Location;\n  router: InjectedRouter;\n  transactionName: string;\n  utc: boolean;\n  end?: Date;\n  start?: Date;\n  statsPeriod?: string | null;\n};\n\nfunction SidebarCharts({\n  organization,\n  isLoading,\n  error,\n  totals,\n  start,\n  end,\n  utc,\n  router,\n  statsPeriod,\n  chartData,\n  eventView,\n  location,\n  transactionName,\n}: Props) {\n  const useAggregateAlias = !organization.features.includes(\n    'performance-frontend-use-events-endpoint'\n  );\n  const theme = useTheme();\n  return (\n    <RelativeBox>\n      <ChartLabel top=\"0px\">\n        <ChartTitle>\n          {t('Apdex')}\n          <QuestionTooltip\n            position=\"top\"\n            title={getTermHelp(organization, PERFORMANCE_TERM.APDEX)}\n            size=\"sm\"\n          />\n        </ChartTitle>\n        <ChartSummaryValue\n          data-test-id=\"apdex-summary-value\"\n          isLoading={isLoading}\n          error={error}\n          value={\n            totals\n              ? formatFloat(useAggregateAlias ? totals.apdex : totals['apdex()'], 4)\n              : null\n          }\n        />\n      </ChartLabel>\n\n      <ChartLabel top=\"160px\">\n        <ChartTitle>\n          {t('Failure Rate')}\n          <QuestionTooltip\n            position=\"top\"\n            title={getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE)}\n            size=\"sm\"\n          />\n        </ChartTitle>\n        <ChartSummaryValue\n          data-test-id=\"failure-rate-summary-value\"\n          isLoading={isLoading}\n          error={error}\n          value={\n            totals\n              ? formatPercentage(\n                  useAggregateAlias ? totals.failure_rate : totals['failure_rate()']\n                )\n              : null\n          }\n        />\n      </ChartLabel>\n\n      <ChartLabel top=\"320px\">\n        <ChartTitle>\n          {t('TPM')}\n          <QuestionTooltip\n            position=\"top\"\n            title={getTermHelp(organization, PERFORMANCE_TERM.TPM)}\n            size=\"sm\"\n          />\n        </ChartTitle>\n        <ChartSummaryValue\n          data-test-id=\"tpm-summary-value\"\n          isLoading={isLoading}\n          error={error}\n          value={\n            totals\n              ? tct('[tpm] tpm', {\n                  tpm: formatFloat(useAggregateAlias ? totals.tpm : totals['tpm()'], 4),\n                })\n              : null\n          }\n        />\n      </ChartLabel>\n\n      <AnomaliesQuery\n        location={location}\n        organization={organization}\n        eventView={eventView}\n      >\n        {results => (\n          <ChartZoom\n            router={router}\n            period={statsPeriod}\n            start={start}\n            end={end}\n            utc={utc}\n            xAxisIndex={[0, 1, 2]}\n          >\n            {zoomRenderProps => {\n              const {errored, loading, reloading, chartOptions, series} = chartData;\n\n              if (errored) {\n                return (\n                  <ErrorPanel height=\"580px\">\n                    <IconWarning color=\"gray300\" size=\"lg\" />\n                  </ErrorPanel>\n                );\n              }\n\n              if (organization.features.includes(ANOMALY_FLAG)) {\n                const epmSeries = series.find(\n                  s => s.seriesName.includes('epm') || s.seriesName.includes('tpm')\n                );\n                if (epmSeries && results.data) {\n                  epmSeries.markPoint = MarkPoint({\n                    data: results.data.anomalies.map(a => ({\n                      name: a.id,\n                      yAxis: epmSeries.data.find(({name}) => name > (a.end + a.start) / 2)\n                        ?.value,\n                      // TODO: the above is O(n*m), remove after we change the api to include the midpoint of y.\n                      xAxis: a.start,\n                      itemStyle: {\n                        borderColor: color(anomalyToColor(a.confidence, theme)).string(),\n                        color: color(anomalyToColor(a.confidence, theme))\n                          .alpha(0.2)\n                          .rgb()\n                          .string(),\n                      },\n                      onClick: () => {\n                        const target = anomaliesRouteWithQuery({\n                          orgSlug: organization.slug,\n                          query: location.query,\n                          projectID: decodeScalar(location.query.project),\n                          transaction: transactionName,\n                        });\n                        browserHistory.push(target);\n                      },\n                    })),\n                    symbol: 'circle',\n                    symbolSize: 16,\n                  });\n                }\n              }\n\n              return (\n                <TransitionChart loading={loading} reloading={reloading} height=\"580px\">\n                  <TransparentLoadingMask visible={reloading} />\n                  {getDynamicText({\n                    value: (\n                      <LineChart {...zoomRenderProps} {...chartOptions} series={series} />\n                    ),\n                    fixed: <Placeholder height=\"480px\" testId=\"skeleton-ui\" />,\n                  })}\n                </TransitionChart>\n              );\n            }}\n          </ChartZoom>\n        )}\n      </AnomaliesQuery>\n    </RelativeBox>\n  );\n}\n\nfunction SidebarChartsContainer({\n  location,\n  eventView,\n  organization,\n  router,\n  isLoading,\n  error,\n  totals,\n  transactionName,\n}: ContainerProps) {\n  const api = useApi();\n  const theme = useTheme();\n\n  const colors = theme.charts.getColorPalette(3);\n  const statsPeriod = eventView.statsPeriod;\n  const start = eventView.start ? getUtcToLocalDateObject(eventView.start) : undefined;\n  const end = eventView.end ? getUtcToLocalDateObject(eventView.end) : undefined;\n  const project = eventView.project;\n  const environment = eventView.environment;\n  const query = eventView.query;\n  const utc = normalizeDateTimeParams(location.query).utc === 'true';\n\n  const axisLineConfig = {\n    scale: true,\n    axisLine: {\n      show: false,\n    },\n    axisTick: {\n      show: false,\n    },\n    splitLine: {\n      show: false,\n    },\n  };\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    height: 480,\n    grid: [\n      {\n        top: '60px',\n        left: '10px',\n        right: '10px',\n        height: '100px',\n      },\n      {\n        top: '220px',\n        left: '10px',\n        right: '10px',\n        height: '100px',\n      },\n      {\n        top: '380px',\n        left: '10px',\n        right: '10px',\n        height: '120px',\n      },\n    ],\n    axisPointer: {\n      // Link each x-axis together.\n      link: [{xAxisIndex: [0, 1, 2]}],\n    },\n    xAxes: Array.from(new Array(3)).map((_i, index) => ({\n      gridIndex: index,\n      type: 'time',\n      show: false,\n    })),\n    yAxes: [\n      {\n        // apdex\n        gridIndex: 0,\n        interval: 0.2,\n        axisLabel: {\n          formatter: (value: number) => `${formatFloat(value, 1)}`,\n          color: theme.chartLabel,\n        },\n        ...axisLineConfig,\n      },\n      {\n        // failure rate\n        gridIndex: 1,\n        splitNumber: 4,\n        interval: 0.5,\n        max: 1.0,\n        axisLabel: {\n          formatter: (value: number) => formatPercentage(value, 0),\n          color: theme.chartLabel,\n        },\n        ...axisLineConfig,\n      },\n      {\n        // throughput\n        gridIndex: 2,\n        splitNumber: 4,\n        axisLabel: {\n          formatter: formatAbbreviatedNumber,\n          color: theme.chartLabel,\n        },\n        ...axisLineConfig,\n      },\n    ],\n    utc,\n    isGroupedByDate: true,\n    showTimeInTooltip: true,\n    colors: [colors[0], colors[1], colors[2]],\n    tooltip: {\n      trigger: 'axis',\n      truncate: 80,\n      valueFormatter: (value, label) =>\n        tooltipFormatter(value, aggregateOutputType(label)),\n      nameFormatter(value: string) {\n        return value === 'epm()' ? 'tpm()' : value;\n      },\n    },\n  };\n\n  const requestCommonProps = {\n    api,\n    start,\n    end,\n    period: statsPeriod,\n    project,\n    environment,\n    query,\n  };\n\n  const contentCommonProps = {\n    organization,\n    router,\n    error,\n    isLoading,\n    start,\n    end,\n    utc,\n    totals,\n  };\n\n  const datetimeSelection = {\n    start: start || null,\n    end: end || null,\n    period: statsPeriod,\n  };\n\n  return (\n    <EventsRequest\n      {...requestCommonProps}\n      organization={organization}\n      interval={getInterval(datetimeSelection)}\n      showLoading={false}\n      includePrevious={false}\n      yAxis={['apdex()', 'failure_rate()', 'epm()']}\n      partial\n      referrer=\"api.performance.transaction-summary.sidebar-chart\"\n    >\n      {({results, errored, loading, reloading}) => {\n        const series = results\n          ? results.map((values, i: number) => ({\n              ...values,\n              yAxisIndex: i,\n              xAxisIndex: i,\n            }))\n          : [];\n\n        return (\n          <SidebarCharts\n            {...contentCommonProps}\n            transactionName={transactionName}\n            location={location}\n            eventView={eventView}\n            chartData={{series, errored, loading, reloading, chartOptions}}\n          />\n        );\n      }}\n    </EventsRequest>\n  );\n}\n\ntype ChartValueProps = {\n  'data-test-id': string;\n  error: QueryError | null;\n  isLoading: boolean;\n  value: React.ReactNode;\n};\n\nfunction ChartSummaryValue({error, isLoading, value, ...props}: ChartValueProps) {\n  if (error) {\n    return <div {...props}>{'\\u2014'}</div>;\n  }\n\n  if (isLoading) {\n    return <Placeholder height=\"24px\" {...props} />;\n  }\n\n  return <ChartValue {...props}>{value}</ChartValue>;\n}\n\nconst RelativeBox = styled('div')`\n  position: relative;\n`;\n\nconst ChartTitle = styled(SectionHeading)`\n  margin: 0;\n`;\n\nconst ChartLabel = styled('div')<{top: string}>`\n  position: absolute;\n  top: ${p => p.top};\n  z-index: 1;\n`;\n\nconst ChartValue = styled('div')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nexport default withRouter(SidebarChartsContainer);\n","import {Fragment} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {InjectedRouter, withRouter, WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {LineChart, LineChartProps} from 'sentry/components/charts/lineChart';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {getInterval} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {tooltipFormatter} from 'sentry/utils/discover/charts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {QueryError} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  formatAbbreviatedNumber,\n  formatFloat,\n  formatPercentage,\n} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {\n  MetricsCardinalityContext,\n  useMetricsCardinalityContext,\n} from 'sentry/utils/performance/contexts/metricsCardinality';\nimport {Theme} from 'sentry/utils/theme';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useApi from 'sentry/utils/useApi';\nimport {getTermHelp, PERFORMANCE_TERM} from 'sentry/views/performance/data';\n\nimport {getMetricOnlyQueryParams} from '../../landing/widgets/utils';\n\ntype ContainerProps = WithRouterProps & {\n  error: QueryError | null;\n  eventView: EventView;\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  totals: Record<string, number> | null;\n  transactionName: string;\n  isShowingMetricsEventCount?: boolean;\n};\n\ninterface ChartData {\n  chartOptions: Omit<LineChartProps, 'series'>;\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  series: LineChartProps['series'];\n}\n\ntype Props = Pick<ContainerProps, 'organization' | 'isLoading' | 'error' | 'totals'> & {\n  chartData: ChartData;\n  eventView: EventView;\n  location: Location;\n  router: InjectedRouter;\n  transactionName: string;\n  utc: boolean;\n  end?: Date;\n  isShowingMetricsEventCount?: boolean;\n  isUsingMEP?: boolean;\n  metricsChartData?: ChartData;\n  start?: Date;\n  statsPeriod?: string | null;\n};\n\nfunction SidebarCharts(props: Props) {\n  const {isShowingMetricsEventCount, start, end, utc, router, statsPeriod, chartData} =\n    props;\n  const placeholderHeight = isShowingMetricsEventCount ? '200px' : '300px';\n  const boxHeight = isShowingMetricsEventCount ? '300px' : '400px';\n  return (\n    <RelativeBox>\n      <ChartLabels {...props} />\n      <ChartZoom\n        router={router}\n        period={statsPeriod}\n        start={start}\n        end={end}\n        utc={utc}\n        xAxisIndex={[0, 1, 2]}\n      >\n        {zoomRenderProps => {\n          const {errored, loading, reloading, chartOptions, series} = chartData;\n\n          if (errored) {\n            return (\n              <ErrorPanel height={boxHeight}>\n                <IconWarning color=\"gray300\" size=\"lg\" />\n              </ErrorPanel>\n            );\n          }\n\n          return (\n            <TransitionChart loading={loading} reloading={reloading} height={boxHeight}>\n              <TransparentLoadingMask visible={reloading} />\n              {getDynamicText({\n                value: (\n                  <LineChart {...zoomRenderProps} {...chartOptions} series={series} />\n                ),\n                fixed: <Placeholder height={placeholderHeight} testId=\"skeleton-ui\" />,\n              })}\n            </TransitionChart>\n          );\n        }}\n      </ChartZoom>\n    </RelativeBox>\n  );\n}\n\nfunction getDatasetCounts({\n  chartData,\n  metricsChartData,\n  metricsCardinality,\n}: {\n  metricsCardinality: MetricsCardinalityContext;\n  chartData?: ChartData;\n  metricsChartData?: ChartData;\n}) {\n  const transactionCount =\n    chartData?.series[0]?.data.reduce((sum, {value}) => sum + value, 0) ?? 0;\n  const metricsCount =\n    metricsChartData?.series[0]?.data.reduce((sum, {value}) => sum + value, 0) ?? 0;\n  const missingMetrics =\n    (!metricsCount && transactionCount) ||\n    metricsCount < transactionCount ||\n    metricsCardinality.outcome?.forceTransactionsOnly;\n  return {\n    transactionCount,\n    metricsCount,\n    missingMetrics,\n  };\n}\n\nfunction ChartLabels({\n  organization,\n  isLoading,\n  totals,\n  error,\n  isShowingMetricsEventCount,\n  chartData,\n  metricsChartData,\n}: Props) {\n  const useAggregateAlias = !organization.features.includes(\n    'performance-frontend-use-events-endpoint'\n  );\n  const metricsCardinality = useMetricsCardinalityContext();\n\n  if (isShowingMetricsEventCount) {\n    const {transactionCount, metricsCount, missingMetrics} = getDatasetCounts({\n      chartData,\n      metricsChartData,\n      metricsCardinality,\n    });\n\n    return (\n      <Fragment>\n        <ChartLabel top=\"0px\">\n          <ChartTitle>\n            {t('Count')}\n            <QuestionTooltip\n              position=\"top\"\n              title={t(\n                'The count of events for the selected time period, showing the indexed events powering this page with filters compared to total processed events.'\n              )}\n              size=\"sm\"\n            />\n          </ChartTitle>\n          <ChartSummaryValue\n            data-test-id=\"tpm-summary-value\"\n            isLoading={isLoading}\n            error={error}\n            value={\n              totals\n                ? missingMetrics\n                  ? tct('[txnCount]', {\n                      txnCount: formatAbbreviatedNumber(transactionCount),\n                    })\n                  : tct('[txnCount] of [metricCount]', {\n                      txnCount: formatAbbreviatedNumber(transactionCount),\n                      metricCount: formatAbbreviatedNumber(metricsCount),\n                    })\n                : null\n            }\n          />\n        </ChartLabel>\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <ChartLabel top=\"0px\">\n        <ChartTitle>\n          {t('Apdex')}\n          <QuestionTooltip\n            position=\"top\"\n            title={getTermHelp(organization, PERFORMANCE_TERM.APDEX)}\n            size=\"sm\"\n          />\n        </ChartTitle>\n        <ChartSummaryValue\n          data-test-id=\"apdex-summary-value\"\n          isLoading={isLoading}\n          error={error}\n          value={\n            totals\n              ? formatFloat(useAggregateAlias ? totals.apdex : totals['apdex()'], 4)\n              : null\n          }\n        />\n      </ChartLabel>\n\n      <ChartLabel top=\"160px\">\n        <ChartTitle>\n          {t('Failure Rate')}\n          <QuestionTooltip\n            position=\"top\"\n            title={getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE)}\n            size=\"sm\"\n          />\n        </ChartTitle>\n        <ChartSummaryValue\n          data-test-id=\"failure-rate-summary-value\"\n          isLoading={isLoading}\n          error={error}\n          value={\n            totals\n              ? formatPercentage(\n                  useAggregateAlias ? totals.failure_rate : totals['failure_rate()']\n                )\n              : null\n          }\n        />\n      </ChartLabel>\n    </Fragment>\n  );\n}\n\nfunction getSideChartsOptions({\n  theme,\n  utc,\n  isShowingMetricsEventCount,\n}: {\n  theme: Theme;\n  utc: boolean;\n  isShowingMetricsEventCount?: boolean;\n}) {\n  const colors = theme.charts.getColorPalette(3);\n\n  const axisLineConfig = {\n    scale: true,\n    axisLine: {\n      show: false,\n    },\n    axisTick: {\n      show: false,\n    },\n    splitLine: {\n      show: false,\n    },\n  };\n\n  if (isShowingMetricsEventCount) {\n    const chartOptions: Omit<LineChartProps, 'series'> = {\n      height: 200,\n      grid: [\n        {\n          top: '60px',\n          left: '10px',\n          right: '10px',\n          height: '160px',\n        },\n      ],\n      axisPointer: {\n        // Link each x-axis together.\n        link: [{xAxisIndex: [0]}],\n      },\n      xAxes: Array.from(new Array(1)).map((_i, index) => ({\n        gridIndex: index,\n        type: 'time',\n        show: false,\n      })),\n      yAxes: [\n        {\n          // throughput\n          gridIndex: 0,\n          splitNumber: 4,\n          axisLabel: {\n            formatter: formatAbbreviatedNumber,\n            color: theme.chartLabel,\n          },\n          ...axisLineConfig,\n        },\n        {\n          // throughput\n          gridIndex: 0,\n          splitNumber: 4,\n          axisLabel: {\n            formatter: formatAbbreviatedNumber,\n            color: theme.chartLabel,\n          },\n          ...axisLineConfig,\n        },\n      ],\n      utc,\n      isGroupedByDate: true,\n      showTimeInTooltip: true,\n      colors: [colors[0], theme.gray300],\n      tooltip: {\n        trigger: 'axis',\n        truncate: 80,\n        valueFormatter: (value, label) =>\n          tooltipFormatter(value, aggregateOutputType(label)),\n        nameFormatter(value: string) {\n          return value === 'epm()' ? 'tpm()' : value;\n        },\n      },\n    };\n    return chartOptions;\n  }\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    height: 300,\n    grid: [\n      {\n        top: '60px',\n        left: '10px',\n        right: '10px',\n        height: '100px',\n      },\n      {\n        top: '220px',\n        left: '10px',\n        right: '10px',\n        height: '100px',\n      },\n    ],\n    axisPointer: {\n      // Link each x-axis together.\n      link: [{xAxisIndex: [0, 1]}],\n    },\n    xAxes: Array.from(new Array(2)).map((_i, index) => ({\n      gridIndex: index,\n      type: 'time',\n      show: false,\n    })),\n    yAxes: [\n      {\n        // apdex\n        gridIndex: 0,\n        interval: 0.2,\n        axisLabel: {\n          formatter: (value: number) => `${formatFloat(value, 1)}`,\n          color: theme.chartLabel,\n        },\n        ...axisLineConfig,\n      },\n      {\n        // failure rate\n        gridIndex: 1,\n        splitNumber: 4,\n        interval: 0.5,\n        max: 1.0,\n        axisLabel: {\n          formatter: (value: number) => formatPercentage(value, 0),\n          color: theme.chartLabel,\n        },\n        ...axisLineConfig,\n      },\n    ],\n    utc,\n    isGroupedByDate: true,\n    showTimeInTooltip: true,\n    colors: [colors[1], colors[2]],\n    tooltip: {\n      trigger: 'axis',\n      truncate: 80,\n      valueFormatter: (value, label) =>\n        tooltipFormatter(value, aggregateOutputType(label)),\n      nameFormatter(value: string) {\n        return value === 'epm()' ? 'tpm()' : value;\n      },\n    },\n  };\n  return chartOptions;\n}\n\n/**\n * Temporary function to remove 0 values from beginning and end of the metrics time series.\n * TODO(): Fix the data coming back from the api so it's consistent with existing count data.\n */\nfunction trimLeadingTrailingZeroCounts(series: Series | undefined) {\n  if (!series?.data) {\n    return undefined;\n  }\n\n  if (series.data[0] && series.data[0].value === 0) {\n    series.data.shift();\n  }\n\n  if (\n    series.data[series.data.length - 1] &&\n    series.data[series.data.length - 1].value === 0\n  ) {\n    series.data.pop();\n  }\n\n  return series;\n}\n\nconst ALLOWED_QUERY_KEYS = ['transaction.op', 'transaction'];\n\nfunction SidebarChartsContainer({\n  location,\n  eventView,\n  organization,\n  router,\n  isLoading,\n  error,\n  totals,\n  transactionName,\n  isShowingMetricsEventCount,\n}: ContainerProps) {\n  const api = useApi();\n  const theme = useTheme();\n  const metricsCardinality = useMetricsCardinalityContext();\n\n  const statsPeriod = eventView.statsPeriod;\n  const start = eventView.start ? getUtcToLocalDateObject(eventView.start) : undefined;\n  const end = eventView.end ? getUtcToLocalDateObject(eventView.end) : undefined;\n  const project = eventView.project;\n  const environment = eventView.environment;\n  const query = eventView.query;\n  const utc = normalizeDateTimeParams(location.query).utc === 'true';\n\n  const chartOptions = getSideChartsOptions({\n    theme,\n    utc,\n    isShowingMetricsEventCount,\n  });\n\n  const requestCommonProps = {\n    api,\n    start,\n    end,\n    period: statsPeriod,\n    project,\n    environment,\n    query,\n  };\n\n  const contentCommonProps = {\n    organization,\n    router,\n    error,\n    isLoading,\n    start,\n    end,\n    utc,\n    totals,\n  };\n\n  const datetimeSelection = {\n    start: start || null,\n    end: end || null,\n    period: statsPeriod,\n  };\n\n  const yAxis = isShowingMetricsEventCount\n    ? ['count()', 'tpm()']\n    : ['apdex()', 'failure_rate()'];\n\n  const requestProps = {\n    ...requestCommonProps,\n    organization,\n    interval: getInterval(datetimeSelection),\n    showLoading: false,\n    includePrevious: false,\n    yAxis,\n    partial: true,\n    referrer: 'api.performance.transaction-summary.sidebar-chart',\n  };\n\n  return (\n    <EventsRequest {...requestProps}>\n      {({results: eventsResults, errored, loading, reloading}) => {\n        const _results = isShowingMetricsEventCount\n          ? (eventsResults || []).slice(0, 1)\n          : eventsResults;\n        const series = _results\n          ? _results.map((values, i: number) => ({\n              ...values,\n              yAxisIndex: i,\n              xAxisIndex: i,\n            }))\n          : [];\n\n        const metricsCompatibleQueryProps = {...requestProps};\n        const eventsQuery = new MutableSearch(query);\n        const compatibleQuery = new MutableSearch('');\n\n        for (const queryKey of ALLOWED_QUERY_KEYS) {\n          if (eventsQuery.hasFilter(queryKey)) {\n            compatibleQuery.setFilterValues(\n              queryKey,\n              eventsQuery.getFilterValues(queryKey)\n            );\n          }\n        }\n\n        metricsCompatibleQueryProps.query = compatibleQuery.formatString();\n\n        return (\n          <EventsRequest\n            {...metricsCompatibleQueryProps}\n            api={new Client()}\n            queryExtras={getMetricOnlyQueryParams()}\n          >\n            {metricsChartData => {\n              const metricSeries = metricsChartData.results\n                ? metricsChartData.results.map((values, i: number) => ({\n                    ...values,\n                    yAxisIndex: i,\n                    xAxisIndex: i,\n                  }))\n                : [];\n\n              const chartData = {series, errored, loading, reloading, chartOptions};\n              const _metricsChartData = {\n                ...metricsChartData,\n                series: metricSeries,\n                chartOptions,\n              };\n              if (isShowingMetricsEventCount && metricSeries.length) {\n                const countSeries = series[0];\n\n                if (countSeries) {\n                  countSeries.seriesName = t('Indexed Events');\n                  const trimmed = trimLeadingTrailingZeroCounts(countSeries);\n\n                  if (trimmed) {\n                    series[0] = {...countSeries, ...trimmed};\n                  }\n                }\n\n                const {missingMetrics} = getDatasetCounts({\n                  chartData,\n                  metricsChartData: _metricsChartData,\n                  metricsCardinality,\n                });\n\n                const metricsCountSeries = metricSeries[0];\n                if (!missingMetrics) {\n                  if (metricsCountSeries) {\n                    metricsCountSeries.seriesName = t('Processed Events');\n                    metricsCountSeries.lineStyle = {\n                      type: 'dashed',\n                      width: 1.5,\n                    };\n                    const trimmed = trimLeadingTrailingZeroCounts(metricsCountSeries);\n                    if (trimmed) {\n                      metricSeries[0] = {...metricsCountSeries, ...trimmed};\n                    }\n                  }\n                  series.push(metricsCountSeries);\n                }\n              }\n\n              return (\n                <SidebarCharts\n                  {...contentCommonProps}\n                  transactionName={transactionName}\n                  location={location}\n                  eventView={eventView}\n                  chartData={chartData}\n                  isShowingMetricsEventCount={isShowingMetricsEventCount}\n                  metricsChartData={_metricsChartData}\n                />\n              );\n            }}\n          </EventsRequest>\n        );\n      }}\n    </EventsRequest>\n  );\n}\n\ntype ChartValueProps = {\n  'data-test-id': string;\n  error: QueryError | null;\n  isLoading: boolean;\n  value: React.ReactNode;\n};\n\nfunction ChartSummaryValue({error, isLoading, value, ...props}: ChartValueProps) {\n  if (error) {\n    return <div {...props}>{'\\u2014'}</div>;\n  }\n\n  if (isLoading) {\n    return <Placeholder height=\"24px\" {...props} />;\n  }\n\n  return <ChartValue {...props}>{value}</ChartValue>;\n}\n\nconst RelativeBox = styled('div')`\n  position: relative;\n`;\n\nconst ChartTitle = styled(SectionHeading)`\n  margin: 0;\n`;\n\nconst ChartLabel = styled('div')<{top: string}>`\n  position: absolute;\n  top: ${p => p.top};\n  z-index: 1;\n`;\n\nconst ChartValue = styled('div')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nexport default withRouter(SidebarChartsContainer);\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport BreakdownBars from 'sentry/components/charts/breakdownBars';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTermHelp, PERFORMANCE_TERM} from 'sentry/views/performance/data';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n};\n\nfunction StatusBreakdown({eventView, location, organization}: Props) {\n  const useEvents = organization.features.includes(\n    'performance-frontend-use-events-endpoint'\n  );\n  const breakdownView = eventView\n    .withColumns([\n      {kind: 'function', function: ['count', '', '', undefined]},\n      {kind: 'field', field: 'transaction.status'},\n    ])\n    .withSorts([{kind: 'desc', field: 'count'}]);\n\n  return (\n    <Fragment>\n      <SectionHeading>\n        {t('Status Breakdown')}\n        <QuestionTooltip\n          position=\"top\"\n          title={getTermHelp(organization, PERFORMANCE_TERM.STATUS_BREAKDOWN)}\n          size=\"sm\"\n        />\n      </SectionHeading>\n      <DiscoverQuery\n        eventView={breakdownView}\n        location={location}\n        orgSlug={organization.slug}\n        referrer=\"api.performance.status-breakdown\"\n        useEvents={useEvents}\n      >\n        {({isLoading, error, tableData}) => {\n          if (isLoading) {\n            return <Placeholder height=\"124px\" />;\n          }\n          if (error) {\n            return (\n              <ErrorPanel height=\"124px\">\n                <IconWarning color=\"gray300\" size=\"lg\" />\n              </ErrorPanel>\n            );\n          }\n          if (!tableData || tableData.data.length === 0) {\n            return (\n              <EmptyStatusBreakdown small>{t('No statuses found')}</EmptyStatusBreakdown>\n            );\n          }\n          const points = tableData.data.map(row => ({\n            label: String(row['transaction.status']),\n            value: parseInt(String(row[useEvents ? 'count()' : 'count']), 10),\n            onClick: () => {\n              const query = new MutableSearch(eventView.query);\n              query\n                .removeFilter('!transaction.status')\n                .setFilterValues('transaction.status', [\n                  row['transaction.status'] as string,\n                ]);\n              browserHistory.push({\n                pathname: location.pathname,\n                query: {\n                  ...location.query,\n                  cursor: undefined,\n                  query: query.formatString(),\n                },\n              });\n\n              trackAdvancedAnalyticsEvent(\n                'performance_views.transaction_summary.status_breakdown_click',\n                {\n                  organization,\n                  status: row['transaction.status'] as string,\n                }\n              );\n            },\n          }));\n          return <BreakdownBars data={points} />;\n        }}\n      </DiscoverQuery>\n    </Fragment>\n  );\n}\n\nconst EmptyStatusBreakdown = styled(EmptyStateWarning)`\n  height: 124px;\n  padding: 50px 15%;\n`;\n\nexport default StatusBreakdown;\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Button from 'sentry/components/button';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Pagination, {CursorHandler} from 'sentry/components/pagination';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SuspectSpansQuery from 'sentry/utils/performance/suspectSpans/suspectSpansQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport SuspectSpansTable from '../transactionSpans/suspectSpansTable';\nimport {\n  SpanSortOthers,\n  SpanSortPercentiles,\n  SpansTotalValues,\n} from '../transactionSpans/types';\nimport {\n  getSuspectSpanSortFromLocation,\n  SPAN_SORT_TO_FIELDS,\n  spansRouteWithQuery,\n} from '../transactionSpans/utils';\n\nconst SPANS_CURSOR_NAME = 'spansCursor';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projectId: string;\n  totals: SpansTotalValues | null;\n  transactionName: string;\n};\n\nexport default function SuspectSpans(props: Props) {\n  const {location, organization, eventView, totals, projectId, transactionName} = props;\n  const sort = getSuspectSpanSortFromLocation(location, 'spanSort');\n  const cursor = decodeScalar(location.query?.[SPANS_CURSOR_NAME]);\n\n  const sortedEventView = eventView\n    .withColumns(\n      [...Object.values(SpanSortOthers), ...Object.values(SpanSortPercentiles)].map(\n        field => ({kind: 'field', field})\n      )\n    )\n    .withSorts([{kind: 'desc', field: sort.field}]);\n  const fields = SPAN_SORT_TO_FIELDS[sort.field];\n  sortedEventView.fields = fields ? fields.map(field => ({field})) : [];\n\n  const {projects} = useProjects();\n\n  return (\n    <SuspectSpansQuery\n      location={location}\n      orgSlug={organization.slug}\n      eventView={sortedEventView}\n      limit={4}\n      perSuspect={0}\n      cursor={cursor}\n    >\n      {({suspectSpans, isLoading, pageLinks}) => (\n        <Fragment>\n          <SuspectSpansHeader\n            location={location}\n            organization={organization}\n            projectId={projectId}\n            transactionName={transactionName}\n            pageLinks={pageLinks}\n          />\n          <SuspectSpansTable\n            location={location}\n            organization={organization}\n            transactionName={transactionName}\n            project={projects.find(p => p.id === projectId)}\n            isLoading={isLoading}\n            suspectSpans={suspectSpans ?? []}\n            totals={totals}\n            sort={SpanSortOthers.SUM_EXCLUSIVE_TIME}\n          />\n        </Fragment>\n      )}\n    </SuspectSpansQuery>\n  );\n}\n\ntype HeaderProps = {\n  location: Location;\n  organization: Organization;\n  pageLinks: string | null;\n  projectId: string;\n  transactionName: string;\n};\n\nfunction SuspectSpansHeader(props: HeaderProps) {\n  const {location, organization, projectId, transactionName, pageLinks} = props;\n\n  const viewAllTarget = spansRouteWithQuery({\n    orgSlug: organization.slug,\n    transaction: transactionName,\n    projectID: projectId,\n    query: location.query,\n  });\n\n  const handleCursor: CursorHandler = (cursor, pathname, query) => {\n    browserHistory.push({\n      pathname,\n      query: {...query, [SPANS_CURSOR_NAME]: cursor},\n    });\n  };\n\n  return (\n    <Header>\n      <SectionHeading>{t('Suspect Spans')}</SectionHeading>\n      <Button to={viewAllTarget} size=\"xs\" data-test-id=\"suspect-spans-open-tab\">\n        {t('View All Spans')}\n      </Button>\n      <StyledPagination pageLinks={pageLinks} onCursor={handleCursor} size=\"xs\" />\n    </Header>\n  );\n}\n\nconst Header = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr auto auto;\n  margin-bottom: ${space(1)};\n  align-items: center;\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin: 0 0 0 ${space(1)};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport UserMisery from 'sentry/components/userMisery';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {QueryError} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {WebVital} from 'sentry/utils/fields';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {getTermHelp, PERFORMANCE_TERM} from 'sentry/views/performance/data';\nimport {vitalsRouteWithQuery} from 'sentry/views/performance/transactionSummary/transactionVitals/utils';\nimport {SidebarSpacer} from 'sentry/views/performance/transactionSummary/utils';\nimport VitalInfo from 'sentry/views/performance/vitalDetail/vitalInfo';\n\ntype Props = {\n  error: QueryError | null;\n  eventView: EventView;\n  hasWebVitals: boolean;\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  totals: Record<string, number> | null;\n  transactionName: string;\n};\n\nfunction UserStats({\n  isLoading,\n  hasWebVitals,\n  error,\n  totals,\n  location,\n  organization,\n  transactionName,\n  eventView,\n}: Props) {\n  const useAggregateAlias = !organization.features.includes(\n    'performance-frontend-use-events-endpoint'\n  );\n  let userMisery = error !== null ? <div>{'\\u2014'}</div> : <Placeholder height=\"34px\" />;\n\n  if (!isLoading && error === null && totals) {\n    const threshold: number | undefined = totals.project_threshold_config[1];\n    const miserableUsers: number | undefined = useAggregateAlias\n      ? totals.count_miserable_user\n      : totals['count_miserable_user()'];\n    const userMiseryScore: number = useAggregateAlias\n      ? totals.user_misery\n      : totals['user_misery()'];\n    const totalUsers = useAggregateAlias\n      ? totals.count_unique_user\n      : totals['count_unique_user()'];\n    userMisery = (\n      <UserMisery\n        bars={40}\n        barHeight={30}\n        userMisery={userMiseryScore}\n        miseryLimit={threshold}\n        totalUsers={totalUsers}\n        miserableUsers={miserableUsers}\n      />\n    );\n  }\n\n  const orgSlug = organization.slug;\n\n  const webVitalsTarget = vitalsRouteWithQuery({\n    orgSlug,\n    transaction: transactionName,\n    projectID: decodeScalar(location.query.project),\n    query: location.query,\n  });\n\n  return (\n    <Fragment>\n      {hasWebVitals && (\n        <Fragment>\n          <VitalsHeading>\n            <SectionHeading>\n              {t('Web Vitals')}\n              <QuestionTooltip\n                position=\"top\"\n                title={t(\n                  'Web Vitals with p75 better than the \"poor\" threshold, as defined by Google Web Vitals.'\n                )}\n                size=\"sm\"\n              />\n            </SectionHeading>\n            <Link to={webVitalsTarget}>\n              <IconOpen />\n            </Link>\n          </VitalsHeading>\n          <VitalInfo\n            location={location}\n            vital={[WebVital.FCP, WebVital.LCP, WebVital.FID, WebVital.CLS]}\n            orgSlug={orgSlug}\n            environment={eventView.environment}\n            start={eventView.start}\n            end={eventView.end}\n            statsPeriod={eventView.statsPeriod}\n            project={eventView.project}\n            hideVitalThresholds\n            hideDurationDetail\n          />\n          <SidebarSpacer />\n        </Fragment>\n      )}\n      <SectionHeading>\n        {t('User Misery')}\n        <QuestionTooltip\n          position=\"top\"\n          title={getTermHelp(organization, PERFORMANCE_TERM.USER_MISERY)}\n          size=\"sm\"\n        />\n      </SectionHeading>\n      {userMisery}\n      <SidebarSpacer />\n    </Fragment>\n  );\n}\n\nconst VitalsHeading = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport default UserStats;\n","import {Query} from 'history';\n\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\n\nexport function generateSpanDetailsRoute({\n  orgSlug,\n  spanSlug,\n}: {\n  orgSlug: String;\n  spanSlug: SpanSlug;\n}): string {\n  const spanComponent = `${encodeURIComponent(spanSlug.op)}:${spanSlug.group}`;\n  return `/organizations/${orgSlug}/performance/summary/spans/${spanComponent}/`;\n}\n\nexport function spanDetailsRouteWithQuery({\n  orgSlug,\n  transaction,\n  query,\n  spanSlug,\n  projectID,\n}: {\n  orgSlug: string;\n  query: Query;\n  spanSlug: SpanSlug;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateSpanDetailsRoute({\n    orgSlug,\n    spanSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport enum ZoomKeys {\n  MIN = 'min',\n  MAX = 'max',\n}\n","import {ReactNode} from 'react';\nimport {Location} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {ColumnType, fieldAlignment} from 'sentry/utils/discover/fields';\nimport {Container as TableCellContainer} from 'sentry/utils/discover/styles';\nimport {SuspectSpans} from 'sentry/utils/performance/suspectSpans/types';\n\nimport {spanDetailsRouteWithQuery} from './spanDetails/utils';\nimport {SpanSort, SpanSortOthers, SpanSortPercentiles, SpansTotalValues} from './types';\n\ntype Props = {\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  sort: SpanSort;\n  suspectSpans: SuspectSpans;\n  totals: SpansTotalValues | null;\n  transactionName: string;\n  project?: Project;\n};\n\nexport default function SuspectSpansTable(props: Props) {\n  const {\n    location,\n    organization,\n    transactionName,\n    isLoading,\n    suspectSpans,\n    totals,\n    sort,\n    project,\n  } = props;\n\n  const data: TableDataRowWithExtras[] = suspectSpans.map(suspectSpan => ({\n    operation: suspectSpan.op,\n    group: suspectSpan.group,\n    description: suspectSpan.description,\n    totalCount: suspectSpan.count,\n    frequency:\n      // Frequency is computed using the `uniq` function in ClickHouse.\n      // Because it is an approximation, it can occasionally exceed the number of events.\n      defined(suspectSpan.frequency) && defined(totals?.['count()'])\n        ? Math.min(1, suspectSpan.frequency / totals!['count()'])\n        : null,\n    avgOccurrences: suspectSpan.avgOccurrences,\n    p50ExclusiveTime: suspectSpan.p50ExclusiveTime,\n    p75ExclusiveTime: suspectSpan.p75ExclusiveTime,\n    p95ExclusiveTime: suspectSpan.p95ExclusiveTime,\n    p99ExclusiveTime: suspectSpan.p99ExclusiveTime,\n    sumExclusiveTime: suspectSpan.sumExclusiveTime,\n  }));\n\n  return (\n    <GridEditable\n      isLoading={isLoading}\n      data={data}\n      columnOrder={COLUMN_ORDER[sort].map(column => COLUMNS[column])}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell,\n        renderBodyCell: renderBodyCellWithMeta(\n          location,\n          organization,\n          transactionName,\n          project\n        ),\n      }}\n      location={location}\n    />\n  );\n}\n\nfunction renderHeadCell(column: TableColumn, _index: number): ReactNode {\n  const align = fieldAlignment(column.key, COLUMN_TYPE[column.key]);\n  return (\n    <SortLink\n      title={column.name}\n      align={align}\n      direction={undefined}\n      canSort={false}\n      generateSortLink={() => undefined}\n    />\n  );\n}\n\nfunction renderBodyCellWithMeta(\n  location: Location,\n  organization: Organization,\n  transactionName: string,\n  project?: Project\n) {\n  return (column: TableColumn, dataRow: TableDataRowWithExtras): React.ReactNode => {\n    const fieldRenderer = getFieldRenderer(column.key, COLUMN_TYPE);\n\n    if (column.key === 'description') {\n      const target = spanDetailsRouteWithQuery({\n        orgSlug: organization.slug,\n        transaction: transactionName,\n        query: location.query,\n        spanSlug: {op: dataRow.operation, group: dataRow.group},\n        projectID: project?.id,\n      });\n      return (\n        <TableCellContainer>\n          <Link to={target}>{dataRow[column.key] ?? t('(unnamed span)')}</Link>\n        </TableCellContainer>\n      );\n    }\n\n    return fieldRenderer(dataRow, {location, organization});\n  };\n}\n\ntype TableColumnKey =\n  | 'operation'\n  | 'description'\n  | 'totalCount'\n  | 'frequency'\n  | 'avgOccurrences'\n  | 'p50ExclusiveTime'\n  | 'p75ExclusiveTime'\n  | 'p95ExclusiveTime'\n  | 'p99ExclusiveTime'\n  | 'sumExclusiveTime';\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableDataRowWithExtras = TableDataRow & {\n  group: string;\n};\n\nconst COLUMN_ORDER: Record<SpanSort, TableColumnKey[]> = {\n  [SpanSortOthers.COUNT]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortOthers.AVG_OCCURRENCE]: [\n    'operation',\n    'description',\n    'avgOccurrences',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortOthers.SUM_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P50_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p50ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P75_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P95_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p95ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P99_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p99ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n};\n\nconst COLUMNS: Record<TableColumnKey, TableColumn> = {\n  operation: {\n    key: 'operation',\n    name: t('Span Operation'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  description: {\n    key: 'description',\n    name: t('Span Name'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  totalCount: {\n    key: 'totalCount',\n    name: t('Total Count'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  frequency: {\n    key: 'frequency',\n    name: t('Frequency'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  avgOccurrences: {\n    key: 'avgOccurrences',\n    name: t('Average Occurrences'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p50ExclusiveTime: {\n    key: 'p50ExclusiveTime',\n    name: t('P50 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p75ExclusiveTime: {\n    key: 'p75ExclusiveTime',\n    name: t('P75 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p95ExclusiveTime: {\n    key: 'p95ExclusiveTime',\n    name: t('P95 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p99ExclusiveTime: {\n    key: 'p99ExclusiveTime',\n    name: t('P99 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  sumExclusiveTime: {\n    key: 'sumExclusiveTime',\n    name: t('Total Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nconst COLUMN_TYPE: Record<TableColumnKey, ColumnType> = {\n  operation: 'string',\n  description: 'string',\n  totalCount: 'integer',\n  frequency: 'percentage',\n  avgOccurrences: 'number',\n  p50ExclusiveTime: 'duration',\n  p75ExclusiveTime: 'duration',\n  p95ExclusiveTime: 'duration',\n  p99ExclusiveTime: 'duration',\n  sumExclusiveTime: 'duration',\n};\n","import {WebVital} from 'sentry/utils/fields';\nimport {WEB_VITAL_DETAILS} from 'sentry/utils/performance/vitals/constants';\nimport {VitalGroup} from 'sentry/utils/performance/vitals/types';\nimport theme from 'sentry/utils/theme';\n\nexport const NUM_BUCKETS = 100;\n\nexport const PERCENTILE = 0.75;\n\n/**\n * This defines the grouping for histograms. Histograms that are in the same group\n * will be queried together on initial load for alignment. However, the zoom controls\n * are defined for each measurement independently.\n */\nconst _VITAL_GROUPS = [\n  {\n    vitals: [WebVital.FP, WebVital.FCP, WebVital.LCP],\n    min: 0,\n  },\n  {\n    vitals: [WebVital.FID],\n    min: 0,\n    precision: 2,\n  },\n  {\n    vitals: [WebVital.CLS],\n    min: 0,\n    precision: 2,\n  },\n];\n\nconst _COLORS = [\n  ...theme.charts.getColorPalette(\n    _VITAL_GROUPS.reduce((count, {vitals}) => count + vitals.length, 0) - 1\n  ),\n].reverse();\n\nexport const VITAL_GROUPS: VitalGroup[] = _VITAL_GROUPS.map(group => ({\n  ...group,\n  colors: _COLORS.splice(0, group.vitals.length),\n}));\n\nexport const ZOOM_KEYS = _VITAL_GROUPS.reduce((keys: string[], {vitals}) => {\n  vitals.forEach(vital => {\n    const vitalSlug = WEB_VITAL_DETAILS[vital].slug;\n    keys.push(`${vitalSlug}Start`);\n    keys.push(`${vitalSlug}End`);\n  });\n  return keys;\n}, []);\n","import {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {WebVital} from 'sentry/utils/fields';\nimport VitalsCardDiscoverQuery from 'sentry/utils/performance/vitals/vitalsCardsDiscoverQuery';\n\nimport {VitalBar} from '../landing/vitalsCards';\n\ntype ViewProps = Pick<\n  EventView,\n  'environment' | 'project' | 'start' | 'end' | 'statsPeriod'\n>;\n\ntype Props = ViewProps & {\n  location: Location;\n  orgSlug: Organization['slug'];\n  vital: WebVital | WebVital[];\n  hideBar?: boolean;\n  hideDurationDetail?: boolean;\n  hideStates?: boolean;\n  hideVitalPercentNames?: boolean;\n  hideVitalThresholds?: boolean;\n  isLoading?: boolean;\n  p75AllTransactions?: number;\n};\n\nfunction VitalInfo({\n  vital,\n  location,\n  isLoading,\n  hideBar,\n  hideStates,\n  hideVitalPercentNames,\n  hideVitalThresholds,\n  hideDurationDetail,\n}: Props) {\n  const vitals = Array.isArray(vital) ? vital : [vital];\n  const contentCommonProps = {\n    vital,\n    showBar: !hideBar,\n    showStates: !hideStates,\n    showVitalPercentNames: !hideVitalPercentNames,\n    showVitalThresholds: !hideVitalThresholds,\n    showDurationDetail: !hideDurationDetail,\n  };\n\n  return (\n    <VitalsCardDiscoverQuery location={location} vitals={vitals}>\n      {({isLoading: loading, vitalsData}) => (\n        <VitalBar\n          {...contentCommonProps}\n          isLoading={isLoading || loading}\n          data={vitalsData}\n        />\n      )}\n    </VitalsCardDiscoverQuery>\n  );\n}\n\nexport default VitalInfo;\n"],"names":["Fragment","space","formatPercentage","BreakdownBars","data","total","reduce","sum","point","value","map","i","label","onClick","width","toFixed","BreakdownGrid","Percentage","p","theme","fontSizeExtraLarge","BarContainer","cursor","Label","textColor","fontSizeSmall","Bar","border","GenericDiscoverQuery","withApi","ANOMALY_FLAG","transformStatsTimes","stats","forEach","d","transformAnomaliesTimes","anoms","a","start","end","transformPayload","payload","newPayload","y","yhat_lower","yhat_upper","anomalies","AnomaliesSeriesQuery","props","organization","features","includes","children","isLoading","error","pageLinks","tableData","rest","omit","defined","getSuspectSpanPayload","perSuspect","spanOps","spanGroups","minExclusiveTime","maxExclusiveTime","spanOp","spanGroup","min_exclusive_time","max_exclusive_time","additionalPayload","eventView","getEventsAPIPayload","location","SuspectSpansQuery","suspectSpans","Component","Sentry","fetchTagFacets","ErrorPanel","SectionHeading","EmptyStateWarning","Placeholder","TagDistributionMeter","IconWarning","t","trackAnalyticsEvent","isAPIPayloadSimilar","Tags","loading","tags","totalValues","prevProps","thisAPIPayload","getFacetsAPIPayload","otherAPIPayload","forceFetchData","api","confirmedQuery","setState","slug","err","captureException","tag","eventKey","eventName","organization_id","parseInt","id","state","renderPlaceholders","length","renderTag","componentDidMount","fetchData","componentDidUpdate","shouldRefetchData","generateUrl","segments","topValues","segment","url","key","maxTotalValues","Math","max","Number","count","handleTagClick","render","renderBody","StyledEmptyStateWarning","StyledPlaceholder","borderRadius","StyledPlaceholderTitle","browserHistory","Feature","DatePageFilter","TransactionsList","EnvironmentPageFilter","SearchBar","Layout","PageFilterBar","normalizeDateTimeParams","MAX_QUERY_LENGTH","generateQueryWithTag","formatTagKey","getAggregateAlias","isRelativeSpanOperationBreakdownField","SPAN_OP_BREAKDOWN_FIELDS","SPAN_OP_RELATIVE_BREAKDOWN_FIELD","canUseMetricsData","decodeScalar","withProjects","updateQuery","PERCENTILE","VITAL_PERCENTILE","VITAL_GROUPS","isSummaryViewFrontend","isSummaryViewFrontendPageLoad","Filter","decodeFilterFromLocation","filterToField","filterToSearchConditions","SpanOperationBreakdownFilter","generateTraceLink","generateTransactionLink","normalizeSearchConditions","SidebarSpacer","TransactionFilterOptions","TransactionSummaryCharts","RelatedIssues","SidebarCharts","SidebarMEPCharts","StatusBreakdown","SuspectSpans","TagExplorer","UserStats","SummaryContent","spanOperationBreakdownFilter","projects","projectId","transactionName","onChangeFilter","useAggregateAlias","handleSearch","query","queryParams","searchQueryParams","push","pathname","generateTagUrl","handleCellAction","column","action","searchConditions","undefined","formatString","handleTransactionsListSortChange","target","showTransactions","transactionCursor","handleAllEventsViewClick","generateEventView","transactionsListEventView","transactionsListTitles","selected","getTransactionsListSort","p95","sortedEventView","withSorts","sort","None","fields","slice","filter","field","hasPerformanceChartInterpolation","totalCount","hasWebVitals","some","group","vitals","vital","functionName","isFinite","isFrontendView","clone","spanOperationBreakdownConditions","trim","operationDurationTableTitle","splice","durationField","openAllEventsProps","generatePerformanceTransactionEventsView","performanceTransactionEventsView","handleOpenAllEventsClick","isUsingMetrics","project","SLOW","trace","normalizeDateSelection","statsPeriod","getFilterOptions","kind","FASTEST","OUTLIER","RECENT","operationName","options","sortOptions","urlParam","selectedSort","find","opt","FilterActions","breakpoints","small","xlarge","StyledSearchBar","useEffect","loadOrganizationTags","trackAdvancedAnalyticsEvent","DiscoverQuery","EventView","isAggregateField","MEPSettingProvider","removeHistogramQueryStrings","MutableSearch","useApi","withOrganization","withPageFilters","addRoutePerformanceContext","filterToLocationQuery","PageLayout","Tab","ZOOM_END","ZOOM_START","TransactionOverview","selection","TransactionSummary","getDocumentTitle","OverviewContentWrapper","transactionThreshold","transactionThresholdMetric","useEvents","totalsView","getTotalsEventView","newFilter","nextQuery","breakdown","totals","hasTransactionName","String","join","conditions","setFilterValues","Object","keys","filters","removeFilter","fromNewQueryWithLocation","version","name","_organization","vs","totalsColumns","function","withColumns","toString","pick","Button","GroupList","Panel","PanelBody","DEFAULT_RELATIVE_PERIODS","URL_PARAM","tct","removeTracingKeysFromSearch","selectedTimePeriod","displayedPeriod","toLowerCase","timePeriod","getIssuesEndpoint","transaction","limit","values","currentFilter","addFreeText","path","issueSearch","handleOpenClick","renderEmptyMessage","ControlsWrapper","TableWrapper","withRouter","useTheme","color","ChartZoom","MarkPoint","EventsRequest","LineChart","TransitionChart","TransparentLoadingMask","getInterval","QuestionTooltip","getUtcToLocalDateObject","tooltipFormatter","aggregateOutputType","formatAbbreviatedNumber","formatFloat","getDynamicText","AnomaliesQuery","getTermHelp","PERFORMANCE_TERM","anomaliesRouteWithQuery","anomalyToColor","utc","router","chartData","APDEX","apdex","FAILURE_RATE","failure_rate","TPM","tpm","results","zoomRenderProps","errored","reloading","chartOptions","series","epmSeries","s","seriesName","markPoint","yAxis","xAxis","itemStyle","borderColor","confidence","string","alpha","rgb","orgSlug","projectID","symbol","symbolSize","fixed","SidebarChartsContainer","colors","charts","getColorPalette","environment","axisLineConfig","scale","axisLine","show","axisTick","splitLine","height","grid","top","left","right","axisPointer","link","xAxisIndex","xAxes","Array","from","_i","index","gridIndex","type","yAxes","interval","axisLabel","formatter","chartLabel","splitNumber","isGroupedByDate","showTimeInTooltip","tooltip","trigger","truncate","valueFormatter","nameFormatter","requestCommonProps","period","contentCommonProps","datetimeSelection","yAxisIndex","ChartSummaryValue","RelativeBox","ChartTitle","ChartLabel","ChartValue","Client","useMetricsCardinalityContext","getMetricOnlyQueryParams","isShowingMetricsEventCount","placeholderHeight","boxHeight","getDatasetCounts","metricsChartData","metricsCardinality","transactionCount","metricsCount","missingMetrics","outcome","forceTransactionsOnly","ChartLabels","txnCount","metricCount","getSideChartsOptions","gray300","trimLeadingTrailingZeroCounts","shift","pop","ALLOWED_QUERY_KEYS","requestProps","showLoading","includePrevious","partial","referrer","eventsResults","_results","metricsCompatibleQueryProps","eventsQuery","compatibleQuery","queryKey","hasFilter","getFilterValues","metricSeries","_metricsChartData","countSeries","trimmed","metricsCountSeries","lineStyle","breakdownView","STATUS_BREAKDOWN","points","row","status","EmptyStatusBreakdown","Pagination","useProjects","SuspectSpansTable","SpanSortOthers","SpanSortPercentiles","getSuspectSpanSortFromLocation","SPAN_SORT_TO_FIELDS","spansRouteWithQuery","SPANS_CURSOR_NAME","SUM_EXCLUSIVE_TIME","SuspectSpansHeader","viewAllTarget","handleCursor","Header","StyledPagination","Link","UserMisery","IconOpen","WebVital","vitalsRouteWithQuery","VitalInfo","userMisery","threshold","project_threshold_config","miserableUsers","count_miserable_user","userMiseryScore","user_misery","totalUsers","count_unique_user","webVitalsTarget","FCP","LCP","FID","CLS","USER_MISERY","VitalsHeading","generateSpanDetailsRoute","spanSlug","spanComponent","encodeURIComponent","op","spanDetailsRouteWithQuery","ZoomKeys","GridEditable","COL_WIDTH_UNDEFINED","SortLink","getFieldRenderer","fieldAlignment","Container","TableCellContainer","suspectSpan","operation","description","frequency","min","avgOccurrences","p50ExclusiveTime","p75ExclusiveTime","p95ExclusiveTime","p99ExclusiveTime","sumExclusiveTime","COLUMN_ORDER","COLUMNS","renderHeadCell","renderBodyCell","renderBodyCellWithMeta","_index","align","COLUMN_TYPE","dataRow","fieldRenderer","COUNT","AVG_OCCURRENCE","P50_EXCLUSIVE_TIME","P75_EXCLUSIVE_TIME","P95_EXCLUSIVE_TIME","P99_EXCLUSIVE_TIME","WEB_VITAL_DETAILS","NUM_BUCKETS","_VITAL_GROUPS","FP","precision","_COLORS","reverse","ZOOM_KEYS","vitalSlug","VitalsCardDiscoverQuery","VitalBar","hideBar","hideStates","hideVitalPercentNames","hideVitalThresholds","hideDurationDetail","isArray","showBar","showStates","showVitalPercentNames","showVitalThresholds","showDurationDetail","vitalsData"],"sourceRoot":""}