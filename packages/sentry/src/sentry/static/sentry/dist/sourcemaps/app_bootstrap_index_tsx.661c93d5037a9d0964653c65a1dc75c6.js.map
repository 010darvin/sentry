{"version":3,"file":"chunks/app_bootstrap_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":";;;;;;;;;;;;;AAEA,MAAMA,aAAa,GAAG,qBAAtB;;AAEA,MAAMC,eAAe,GAAIC,IAAD,IAAkB;EACxCC,MAAM,CAACC,cAAP,GAAwBF,IAAI,CAACE,cAA7B;EAEA,OAAOF,IAAP;AACD,CAJD;AAMA;AACA;AACA;AACA;;;AACA,eAAeG,iBAAf,GAAmC;EACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,aAAD,CAA5B;EACA,MAAME,IAAY,GAAG,MAAMI,QAAQ,CAACE,IAAT,EAA3B;EAEAL,MAAM,CAACM,aAAP,GAAuBP,IAAvB;EAEA,OAAOD,eAAe,CAACC,IAAD,CAAtB;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,eAAeQ,SAAf,GAA2B;EAChC,MAAMC,aAAa,GAAGR,MAAM,CAACM,aAA7B,CADgC,CAGhC;EACA;EACA;;EACA,IAAIE,aAAa,KAAKC,SAAtB,EAAiC;IAC/B,OAAO,MAAMP,iBAAiB,EAA9B;EACD;;EAED,OAAOJ,eAAe,CAACU,aAAD,CAAtB;AACD","sources":["webpack:///./app/bootstrap/index.tsx"],"sourcesContent":["import {Config} from 'sentry/types';\n\nconst BOOTSTRAP_URL = '/api/client-config/';\n\nconst bootApplication = (data: Config) => {\n  window.csrfCookieName = data.csrfCookieName;\n\n  return data;\n};\n\n/**\n * Load the client configuration data using the BOOTSTRAP_URL. Used when\n * running in standalone SPA mode.\n */\nasync function bootWithHydration() {\n  const response = await fetch(BOOTSTRAP_URL);\n  const data: Config = await response.json();\n\n  window.__initialData = data;\n\n  return bootApplication(data);\n}\n\n/**\n * Load client configuration bootstrap data. This will detect if the app is\n * running in SPA mode or being booted from the django-rendered layout.html\n * template.\n */\nexport async function bootstrap() {\n  const bootstrapData = window.__initialData;\n\n  // If __initialData is not already set on the window, we are likely running in\n  // pure SPA mode, meaning django is not serving our frontend application and we\n  // need to make an API request to hydrate the bootstrap data to boot the app.\n  if (bootstrapData === undefined) {\n    return await bootWithHydration();\n  }\n\n  return bootApplication(bootstrapData);\n}\n"],"names":["BOOTSTRAP_URL","bootApplication","data","window","csrfCookieName","bootWithHydration","response","fetch","json","__initialData","bootstrap","bootstrapData","undefined"],"sourceRoot":""}