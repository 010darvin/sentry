{"version":3,"file":"chunks/app_views_settings_organizationTeams_teamProjects_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/settings/components/settingsProjectItem.tsx","webpack:///./app/views/settings/organizationTeams/teamProjects.tsx"],"sourcesContent":["import {useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport BookmarkStar from 'sentry/components/projects/bookmarkStar';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n};\n\nfunction ProjectItem({project, organization}: Props) {\n  const [isBookmarked, setBookmarked] = useState(project.isBookmarked);\n\n  return (\n    <Wrapper>\n      <BookmarkStar\n        organization={organization}\n        project={project}\n        isBookmarked={isBookmarked}\n        onToggle={state => setBookmarked(state)}\n      />\n      <ProjectBadge\n        to={`/settings/${organization.slug}/projects/${project.slug}/`}\n        avatarSize={18}\n        project={project}\n      />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  align-items: center;\n  gap: ${space(1.5)};\n`;\n\nexport default ProjectItem;\n","import {Component, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconFlag, IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {sortProjects} from 'sentry/utils';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport ProjectListItem from 'sentry/views/settings/components/settingsProjectItem';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n} & RouteComponentProps<{orgId: string; teamId: string}, {}>;\n\ntype State = {\n  error: boolean;\n  linkedProjects: Project[];\n  loading: boolean;\n  pageLinks: null | string;\n  unlinkedProjects: Project[];\n};\n\ntype DropdownAutoCompleteProps = React.ComponentProps<typeof DropdownAutoComplete>;\ntype Item = Parameters<NonNullable<DropdownAutoCompleteProps['onSelect']>>[0];\n\nclass TeamProjects extends Component<Props, State> {\n  state: State = {\n    error: false,\n    loading: true,\n    pageLinks: null,\n    unlinkedProjects: [],\n    linkedProjects: [],\n  };\n\n  componentDidMount() {\n    this.fetchAll();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.params.orgId !== this.props.params.orgId ||\n      prevProps.params.teamId !== this.props.params.teamId\n    ) {\n      this.fetchAll();\n    }\n\n    if (prevProps.location !== this.props.location) {\n      this.fetchTeamProjects();\n    }\n  }\n\n  fetchAll = () => {\n    this.fetchTeamProjects();\n    this.fetchUnlinkedProjects();\n  };\n\n  fetchTeamProjects() {\n    const {\n      location,\n      params: {orgId, teamId},\n    } = this.props;\n\n    this.setState({loading: true});\n\n    this.props.api\n      .requestPromise(`/organizations/${orgId}/projects/`, {\n        query: {\n          query: `team:${teamId}`,\n          cursor: location.query.cursor || '',\n        },\n        includeAllArgs: true,\n      })\n      .then(([linkedProjects, _, resp]) => {\n        this.setState({\n          loading: false,\n          error: false,\n          linkedProjects,\n          pageLinks: resp?.getResponseHeader('Link') ?? null,\n        });\n      })\n      .catch(() => {\n        this.setState({loading: false, error: true});\n      });\n  }\n\n  fetchUnlinkedProjects(query = '') {\n    const {\n      params: {orgId, teamId},\n    } = this.props;\n\n    this.props.api\n      .requestPromise(`/organizations/${orgId}/projects/`, {\n        query: {\n          query: query ? `!team:${teamId} ${query}` : `!team:${teamId}`,\n        },\n      })\n      .then(unlinkedProjects => {\n        this.setState({unlinkedProjects});\n      });\n  }\n\n  handleLinkProject = (project: Project, action: string) => {\n    const {orgId, teamId} = this.props.params;\n    this.props.api.request(`/projects/${orgId}/${project.slug}/teams/${teamId}/`, {\n      method: action === 'add' ? 'POST' : 'DELETE',\n      success: resp => {\n        this.fetchAll();\n        ProjectActions.updateSuccess(resp);\n        addSuccessMessage(\n          action === 'add'\n            ? t('Successfully added project to team.')\n            : t('Successfully removed project from team')\n        );\n      },\n      error: () => {\n        addErrorMessage(t(\"Wasn't able to change project association.\"));\n      },\n    });\n  };\n\n  handleProjectSelected = (selection: Item) => {\n    const project = this.state.unlinkedProjects.find(p => p.id === selection.value);\n    if (project) {\n      this.handleLinkProject(project, 'add');\n    }\n  };\n\n  handleQueryUpdate = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    this.fetchUnlinkedProjects(evt.target.value);\n  };\n\n  projectPanelContents(projects: Project[]) {\n    const {organization} = this.props;\n    const access = new Set(organization.access);\n    const canWrite = access.has('org:write');\n\n    return projects.length ? (\n      sortProjects(projects).map(project => (\n        <StyledPanelItem key={project.id}>\n          <ProjectListItem project={project} organization={organization} />\n          <Tooltip\n            disabled={canWrite}\n            title={t('You do not have enough permission to change project association.')}\n          >\n            <Button\n              size=\"sm\"\n              disabled={!canWrite}\n              icon={<IconSubtract isCircled size=\"xs\" />}\n              aria-label={t('Remove')}\n              onClick={() => {\n                this.handleLinkProject(project, 'remove');\n              }}\n            >\n              {t('Remove')}\n            </Button>\n          </Tooltip>\n        </StyledPanelItem>\n      ))\n    ) : (\n      <EmptyMessage size=\"large\" icon={<IconFlag size=\"xl\" />}>\n        {t(\"This team doesn't have access to any projects.\")}\n      </EmptyMessage>\n    );\n  }\n\n  render() {\n    const {linkedProjects, unlinkedProjects, error, loading} = this.state;\n\n    if (error) {\n      return <LoadingError onRetry={() => this.fetchAll()} />;\n    }\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    const access = new Set(this.props.organization.access);\n\n    const otherProjects = unlinkedProjects.map(p => ({\n      value: p.id,\n      searchKey: p.slug,\n      label: <ProjectListElement>{p.slug}</ProjectListElement>,\n    }));\n\n    return (\n      <Fragment>\n        <Panel>\n          <PanelHeader hasButtons>\n            <div>{t('Projects')}</div>\n            <div style={{textTransform: 'none'}}>\n              {!access.has('org:write') ? (\n                <DropdownButton\n                  disabled\n                  title={t('You do not have enough permission to associate a project.')}\n                  size=\"xs\"\n                >\n                  {t('Add Project')}\n                </DropdownButton>\n              ) : (\n                <DropdownAutoComplete\n                  items={otherProjects}\n                  onChange={this.handleQueryUpdate}\n                  onSelect={this.handleProjectSelected}\n                  emptyMessage={t('No projects')}\n                  alignMenu=\"right\"\n                >\n                  {({isOpen}) => (\n                    <DropdownButton isOpen={isOpen} size=\"xs\">\n                      {t('Add Project')}\n                    </DropdownButton>\n                  )}\n                </DropdownAutoComplete>\n              )}\n            </div>\n          </PanelHeader>\n          <PanelBody>{this.projectPanelContents(linkedProjects)}</PanelBody>\n        </Panel>\n        <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(2)};\n`;\n\nconst ProjectListElement = styled('div')`\n  padding: ${space(0.25)} 0;\n`;\n\nexport {TeamProjects};\n\nexport default withApi(withOrganization(TeamProjects));\n"],"names":["useState","ProjectBadge","BookmarkStar","space","ProjectItem","project","organization","isBookmarked","setBookmarked","state","slug","Wrapper","Component","Fragment","addErrorMessage","addSuccessMessage","ProjectActions","Button","DropdownAutoComplete","DropdownButton","LoadingError","LoadingIndicator","Pagination","Panel","PanelBody","PanelHeader","PanelItem","Tooltip","IconFlag","IconSubtract","t","sortProjects","withApi","withOrganization","EmptyMessage","ProjectListItem","TeamProjects","error","loading","pageLinks","unlinkedProjects","linkedProjects","fetchTeamProjects","fetchUnlinkedProjects","action","orgId","teamId","props","params","api","request","method","success","resp","fetchAll","updateSuccess","selection","find","p","id","value","handleLinkProject","evt","target","componentDidMount","componentDidUpdate","prevProps","location","setState","requestPromise","query","cursor","includeAllArgs","then","_","getResponseHeader","catch","projectPanelContents","projects","access","Set","canWrite","has","length","map","render","otherProjects","searchKey","label","textTransform","handleQueryUpdate","handleProjectSelected","isOpen","StyledPanelItem","ProjectListElement"],"sourceRoot":""}