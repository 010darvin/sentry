{"version":3,"file":"chunks/app_views_performance_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/utils/performance/contexts/metricsCardinality.tsx","webpack:///./app/utils/performance/contexts/metricsEnhancedSetting.tsx","webpack:///./app/utils/performance/contexts/performanceEventViewContext.tsx","webpack:///./app/utils/performance/contexts/utils.tsx","webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuery.tsx","webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums.tsx","webpack:///./app/views/performance/index.tsx"],"sourcesContent":["import {Component, useContext} from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport EventView, {\n  ImmutableEventView,\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'sentry/utils/discover/eventView';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\nimport {PerformanceEventViewContext} from 'sentry/utils/performance/contexts/performanceEventViewContext';\nimport {OrganizationContext} from 'sentry/views/organizationContext';\n\nexport class QueryError {\n  message: string;\n  private originalError: any; // For debugging in case parseError picks a value that doesn't make sense.\n  constructor(errorMessage: string, originalError?: any) {\n    this.message = errorMessage;\n    this.originalError = originalError;\n  }\n\n  getOriginalError() {\n    return this.originalError;\n  }\n}\n\nexport type GenericChildrenProps<T> = {\n  /**\n   * Error, if not null.\n   */\n  error: null | QueryError;\n  /**\n   * Loading state of this query.\n   */\n  isLoading: boolean;\n  /**\n   * Pagelinks, if applicable. Can be provided to the Pagination component.\n   */\n  pageLinks: null | string;\n  /**\n   * Data / result.\n   */\n  tableData: T | null;\n};\n\ntype OptionalContextProps = {\n  eventView?: EventView | ImmutableEventView;\n  orgSlug?: string;\n};\n\ntype BaseDiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Appends a raw string to query to be able to sidestep the tokenizer.\n   * @deprecated\n   */\n  forceAppendRawQueryString?: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * Sets referrer parameter in the API Payload. Set of allowed referrers are defined\n   * on the OrganizationEventsV2Endpoint view.\n   */\n  referrer?: string;\n  /**\n   * A callback to set an error so that the error can be rendered in parent components\n   */\n  setError?: (errObject: QueryError | undefined) => void;\n};\n\nexport type DiscoverQueryPropsWithContext = BaseDiscoverQueryProps & OptionalContextProps;\nexport type DiscoverQueryProps = BaseDiscoverQueryProps & {\n  eventView: EventView | ImmutableEventView;\n  orgSlug: string;\n};\n\ntype InnerRequestProps<P> = DiscoverQueryProps & P;\ntype OuterRequestProps<P> = DiscoverQueryPropsWithContext & P;\n\nexport type ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype ComponentProps<T, P> = {\n  /**\n   * Route to the endpoint\n   */\n  route: string;\n  /**\n   * A hook to modify data into the correct output after data has been received\n   */\n  afterFetch?: (data: any, props?: Props<T, P>) => T;\n  /**\n   * A hook before fetch that can be used to do things like clearing the api\n   */\n  beforeFetch?: (api: Client) => void;\n  /**\n   * A hook for parent orchestrators to pass down data based on query results, unlike afterFetch it is not meant for specializations as it will not modify data.\n   */\n  didFetch?: (data: T) => void;\n  /**\n   * Allows components to modify the payload before it is set.\n   */\n  getRequestPayload?: (props: Props<T, P>) => any;\n  /**\n   * An external hook to parse errors in case there are differences for a specific api.\n   */\n  parseError?: (error: any) => QueryError | null;\n  /**\n   * An external hook in addition to the event view check to check if data should be refetched\n   */\n  shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n};\n\ntype Props<T, P> = InnerRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\ntype OuterProps<T, P> = OuterRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass _GenericDiscoverQuery<T, P> extends Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if the payload changes\n    const refetchCondition = this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    const {cursor, limit, noPagination, referrer} = props;\n    const payload = this.props.getRequestPayload\n      ? this.props.getRequestPayload(props)\n      : props.eventView.getEventsAPIPayload(\n          props.location,\n          props.forceAppendRawQueryString\n        );\n\n    if (cursor) {\n      payload.cursor = cursor;\n    }\n    if (limit) {\n      payload.per_page = limit;\n    }\n    if (noPagination) {\n      payload.noPagination = noPagination;\n    }\n    if (referrer) {\n      payload.referrer = referrer;\n    }\n\n    Object.assign(payload, props.queryExtras ?? {});\n\n    return payload;\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  /**\n   * The error type isn't consistent across APIs. We see detail as just string some times, other times as an object.\n   */\n  _parseError = (error: any): QueryError | null => {\n    if (this.props.parseError) {\n      return this.props.parseError(error);\n    }\n\n    if (!error) {\n      return null;\n    }\n\n    const detail = error.responseJSON?.detail;\n    if (typeof detail === 'string') {\n      return new QueryError(detail, error);\n    }\n\n    const message = detail?.message;\n    if (typeof message === 'string') {\n      return new QueryError(message, error);\n    }\n\n    const unknownError = new QueryError(t('An unknown error occurred.'), error);\n    return unknownError;\n  };\n\n  fetchData = async () => {\n    const {\n      api,\n      queryBatching,\n      beforeFetch,\n      afterFetch,\n      didFetch,\n      eventView,\n      orgSlug,\n      route,\n      setError,\n    } = this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    beforeFetch?.(api);\n\n    // clear any inflight requests since they are now stale\n    api.clear();\n\n    try {\n      const [data, , resp] = await doDiscoverQuery<T>(\n        api,\n        url,\n        apiPayload,\n        queryBatching\n      );\n\n      if (this.state.tableFetchID !== tableFetchID) {\n        // invariant: a different request was initiated after this request\n        return;\n      }\n\n      const tableData = afterFetch ? afterFetch(data, this.props) : data;\n      didFetch?.(tableData);\n\n      this.setState(prevState => ({\n        isLoading: false,\n        tableFetchID: undefined,\n        error: null,\n        pageLinks: resp?.getResponseHeader('Link') ?? prevState.pageLinks,\n        tableData,\n      }));\n    } catch (err) {\n      const error = this._parseError(err);\n      this.setState({\n        isLoading: false,\n        tableFetchID: undefined,\n        error,\n        tableData: null,\n      });\n      if (setError) {\n        setError(error ?? undefined);\n      }\n    }\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\n// Shim to allow us to use generic discover query or any specialization with or without passing org slug or eventview, which are now contexts.\n// This will help keep tests working and we can remove extra uses of context-provided props and update tests as we go.\nexport function GenericDiscoverQuery<T, P>(props: OuterProps<T, P>) {\n  const organizationSlug = useContext(OrganizationContext)?.slug;\n  const performanceEventView = useContext(PerformanceEventViewContext)?.eventView;\n\n  const orgSlug = props.orgSlug ?? organizationSlug;\n  const eventView = props.eventView ?? performanceEventView;\n\n  if (orgSlug === undefined || eventView === undefined) {\n    throw new Error('GenericDiscoverQuery requires both an orgSlug and eventView');\n  }\n\n  const _props: Props<T, P> = {\n    ...props,\n    orgSlug,\n    eventView,\n  };\n  return <_GenericDiscoverQuery<T, P> {..._props} />;\n}\n\nexport type DiscoverQueryRequestParams = Partial<EventQuery & LocationQuery>;\n\nexport function doDiscoverQuery<T>(\n  api: Client,\n  url: string,\n  params: DiscoverQueryRequestParams,\n  queryBatching?: QueryBatching\n): Promise<[T, string | undefined, ResponseMeta<T> | undefined]> {\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, url, {\n      query: params,\n      includeAllArgs: true,\n    });\n  }\n\n  return api.requestPromise(url, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      // marking params as any so as to not cause typescript errors\n      ...(params as any),\n    },\n  });\n}\n\nexport default GenericDiscoverQuery;\n","import {Fragment, ReactNode} from 'react';\nimport {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport {parsePeriodToHours} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {canUseMetricsData} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport MetricsCompatibilityQuery, {\n  MetricsCompatibilityData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuery';\nimport MetricsCompatibilitySumsQuery, {\n  MetricsCompatibilitySumData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums';\n\nimport {createDefinedContext} from './utils';\n\nexport interface MetricDataSwitcherOutcome {\n  forceTransactionsOnly: boolean;\n  compatibleProjects?: number[];\n  shouldNotifyUnnamedTransactions?: boolean;\n  shouldWarnIncompatibleSDK?: boolean;\n}\nexport interface MetricsCardinalityContext {\n  isLoading: boolean;\n  outcome?: MetricDataSwitcherOutcome;\n}\n\ntype MergedMetricsData = MetricsCompatibilityData & MetricsCompatibilitySumData;\n\nconst [_Provider, _useContext, _Context] =\n  createDefinedContext<MetricsCardinalityContext>({\n    name: 'MetricsCardinalityContext',\n    strict: false,\n  });\n\n/**\n * This provider determines whether the metrics data is storing performance information correctly before we\n * make dozens of requests on pages such as performance landing and dashboards.\n */\nexport const MetricsCardinalityProvider = (props: {\n  children: ReactNode;\n  location: Location;\n  organization: Organization;\n}) => {\n  const isUsingMetrics = canUseMetricsData(props.organization);\n\n  if (!isUsingMetrics) {\n    return (\n      <_Provider\n        value={{\n          isLoading: false,\n          outcome: {\n            forceTransactionsOnly: true,\n          },\n        }}\n      >\n        {props.children}\n      </_Provider>\n    );\n  }\n\n  const baseDiscoverProps = {\n    location: props.location,\n    orgSlug: props.organization.slug,\n    cursor: '0:0:0',\n  };\n  const eventView = EventView.fromLocation(props.location);\n  eventView.fields = [{field: 'tpm()'}];\n  const _eventView = adjustEventViewTime(eventView);\n\n  return (\n    <Fragment>\n      <MetricsCompatibilityQuery eventView={_eventView} {...baseDiscoverProps}>\n        {compatabilityResult => (\n          <MetricsCompatibilitySumsQuery eventView={_eventView} {...baseDiscoverProps}>\n            {sumsResult => (\n              <_Provider\n                value={{\n                  isLoading: compatabilityResult.isLoading || sumsResult.isLoading,\n                  outcome:\n                    compatabilityResult.isLoading || sumsResult.isLoading\n                      ? undefined\n                      : getMetricsOutcome(\n                          compatabilityResult.tableData && sumsResult.tableData\n                            ? {\n                                ...compatabilityResult.tableData,\n                                ...sumsResult.tableData,\n                              }\n                            : null,\n                          !!compatabilityResult.error && !!sumsResult.error\n                        ),\n                }}\n              >\n                {props.children}\n              </_Provider>\n            )}\n          </MetricsCompatibilitySumsQuery>\n        )}\n      </MetricsCompatibilityQuery>\n    </Fragment>\n  );\n};\n\nexport const MetricCardinalityConsumer = _Context.Consumer;\n\nexport const useMetricsCardinalityContext = _useContext;\n\n/**\n * Logic for picking sides of metrics vs. transactions along with the associated warnings.\n */\nfunction getMetricsOutcome(\n  dataCounts: MergedMetricsData | null,\n  hasOtherFallbackCondition: boolean\n) {\n  const fallbackOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: true,\n  };\n  const successOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: false,\n  };\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n  const compatibleProjects = dataCounts.compatible_projects;\n\n  if (hasOtherFallbackCondition) {\n    return fallbackOutcome;\n  }\n\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n\n  if (checkForSamplingRules(dataCounts)) {\n    return fallbackOutcome;\n  }\n\n  if (checkNoDataFallback(dataCounts)) {\n    return fallbackOutcome;\n  }\n\n  if (checkIncompatibleData(dataCounts)) {\n    return {\n      shouldWarnIncompatibleSDK: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfAllOtherData(dataCounts)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfPartialOtherData(dataCounts)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      compatibleProjects,\n      forceTransactionsOnly: false,\n    };\n  }\n\n  return successOutcome;\n}\n\n/**\n * Fallback if very similar amounts of metrics and transactions are found.\n * No projects with dynamic sampling means no rules have been enabled yet.\n */\nfunction checkForSamplingRules(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  if (!dataCounts.dynamic_sampling_projects?.length) {\n    return true;\n  }\n  if (counts.metricsCount === 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Fallback if no metrics found.\n */\nfunction checkNoDataFallback(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return !counts.metricsCount;\n}\n\n/**\n * Fallback and warn if incompatible data found (old specific SDKs).\n */\nfunction checkIncompatibleData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.nullCount > 0;\n}\n\n/**\n * Fallback and warn about unnamed transactions (specific SDKs).\n */\nfunction checkIfAllOtherData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.unparamCount >= counts.metricsCount;\n}\n\n/**\n * Show metrics but warn about unnamed transactions.\n */\nfunction checkIfPartialOtherData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.unparamCount > 0;\n}\n\n/**\n * Temporary function, can be removed after API changes.\n */\nfunction normalizeCounts({sum}: MergedMetricsData) {\n  try {\n    const metricsCount = Number(sum.metrics);\n    const unparamCount = Number(sum.metrics_unparam);\n    const nullCount = Number(sum.metrics_null);\n    return {\n      metricsCount,\n      unparamCount,\n      nullCount,\n    };\n  } catch (_) {\n    return {\n      metricsCount: 0,\n      unparamCount: 0,\n      nullCount: 0,\n    };\n  }\n}\n\n/**\n * Performance optimization to limit the amount of rows scanned before showing the landing page.\n */\nfunction adjustEventViewTime(eventView: EventView) {\n  const _eventView = eventView.clone();\n\n  if (!_eventView.start && !_eventView.end) {\n    if (!_eventView.statsPeriod) {\n      _eventView.statsPeriod = '1h';\n      _eventView.start = undefined;\n      _eventView.end = undefined;\n    } else {\n      const periodHours = parsePeriodToHours(_eventView.statsPeriod);\n      if (periodHours > 1) {\n        _eventView.statsPeriod = '1h';\n        _eventView.start = undefined;\n        _eventView.end = undefined;\n      }\n    }\n  }\n  return _eventView;\n}\n","import {Dispatch, ReactNode, useCallback, useReducer} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport localStorage from 'sentry/utils/localStorage';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {createDefinedContext} from './utils';\n\nexport interface MetricsEnhancedSettingContext {\n  autoSampleState: AutoSampleState;\n  memoizationKey: string;\n  metricSettingState: MEPState | null;\n  setAutoSampleState: Dispatch<AutoSampleState>;\n  setMetricSettingState: Dispatch<MEPState>;\n  shouldQueryProvideMEPAutoParams: boolean;\n  shouldQueryProvideMEPMetricParams: boolean;\n  shouldQueryProvideMEPTransactionParams: boolean;\n}\n\nconst [_MEPSettingProvider, _useMEPSettingContext, _MEPSettingContext] =\n  createDefinedContext<MetricsEnhancedSettingContext>({\n    name: 'MetricsEnhancedSettingContext',\n  });\n\nexport const MEPConsumer = _MEPSettingContext.Consumer;\n\n/**\n * These will be called something else in the copy, but functionally the data is coming from metrics / transactions.\n * \"Unset\" should be the initial state before any queries return for the first time.\n */\nexport enum AutoSampleState {\n  unset = 'unset',\n  metrics = 'metrics',\n  transactions = 'transactions',\n}\n\n/**\n * Metrics/transactions will be called something else in the copy, but functionally the data is coming from metrics / transactions.\n */\nexport enum MEPState {\n  auto = 'auto',\n  metricsOnly = 'metricsOnly',\n  transactionsOnly = 'transactionsOnly',\n}\n\nexport const METRIC_SETTING_PARAM = 'metricSetting';\nexport const METRIC_SEARCH_SETTING_PARAM = 'metricSearchSetting'; // TODO: Clean this up since we don't need multiple params in practice.\n\nconst storageKey = 'performance.metrics-enhanced-setting';\nexport class MEPSetting {\n  static get(): MEPState | null {\n    const value = localStorage.getItem(storageKey);\n    if (value) {\n      if (!(value in MEPState)) {\n        localStorage.removeItem(storageKey);\n        return null;\n      }\n      return MEPState[value];\n    }\n    return null;\n  }\n\n  static set(value: MEPState) {\n    localStorage.setItem(storageKey, value);\n  }\n}\n\nexport function canUseMetricsDevUI(organization: Organization) {\n  return organization.features.includes('performance-use-metrics');\n}\n\nexport function canUseMetricsData(organization: Organization) {\n  const isDevFlagOn = canUseMetricsDevUI(organization); // Forces metrics data on as well.\n  const isInternalViewOn = organization.features.includes(\n    'performance-transaction-name-only-search'\n  ); // TODO: Swap this flag out.\n\n  const samplingRolloutFlag = organization.features.includes('server-side-sampling');\n  const isRollingOut =\n    samplingRolloutFlag && organization.features.includes('mep-rollout-flag');\n\n  return isDevFlagOn || isInternalViewOn || isRollingOut;\n}\n\nexport const MEPSettingProvider = ({\n  children,\n  location,\n  _hasMEPState,\n  forceTransactions,\n}: {\n  children: ReactNode;\n  _hasMEPState?: MEPState;\n  forceTransactions?: boolean;\n  location?: Location;\n}) => {\n  const organization = useOrganization();\n\n  const canUseMEP = canUseMetricsData(organization);\n\n  const allowedStates = [MEPState.metricsOnly, MEPState.transactionsOnly];\n  const _metricSettingFromParam = location\n    ? decodeScalar(location.query[METRIC_SETTING_PARAM])\n    : MEPState.metricsOnly;\n  let defaultMetricsState = MEPState.metricsOnly;\n\n  if (forceTransactions) {\n    defaultMetricsState = MEPState.transactionsOnly;\n  }\n\n  const metricSettingFromParam =\n    allowedStates.find(s => s === _metricSettingFromParam) ?? defaultMetricsState;\n\n  const isControlledMEP = typeof _hasMEPState !== 'undefined';\n\n  const [_metricSettingState, _setMetricSettingState] = useReducer(\n    (_: MEPState, next: MEPState) => next,\n    metricSettingFromParam\n  );\n\n  const setMetricSettingState = useCallback(\n    (settingState: MEPState) => {\n      if (!location) {\n        return;\n      }\n      browserHistory.replace({\n        ...location,\n        query: {\n          ...location.query,\n          [METRIC_SETTING_PARAM]: settingState,\n        },\n      });\n      _setMetricSettingState(settingState);\n    },\n    [location, _setMetricSettingState]\n  );\n\n  const [autoSampleState, setAutoSampleState] = useReducer(\n    (_: AutoSampleState, next: AutoSampleState) => next,\n    AutoSampleState.unset\n  );\n\n  const metricSettingState = isControlledMEP ? _hasMEPState : _metricSettingState;\n\n  const shouldQueryProvideMEPAutoParams =\n    canUseMEP && metricSettingState === MEPState.auto;\n  const shouldQueryProvideMEPMetricParams =\n    canUseMEP && metricSettingState === MEPState.metricsOnly;\n  const shouldQueryProvideMEPTransactionParams =\n    canUseMEP && metricSettingState === MEPState.transactionsOnly;\n\n  const memoizationKey = `${metricSettingState}`;\n\n  return (\n    <_MEPSettingProvider\n      value={{\n        autoSampleState,\n        metricSettingState,\n        shouldQueryProvideMEPAutoParams,\n        shouldQueryProvideMEPMetricParams,\n        shouldQueryProvideMEPTransactionParams,\n        memoizationKey,\n        setMetricSettingState,\n        setAutoSampleState,\n      }}\n    >\n      {children}\n    </_MEPSettingProvider>\n  );\n};\n\nexport const useMEPSettingContext = _useMEPSettingContext;\n","import EventView, {ImmutableEventView} from 'sentry/utils/discover/eventView';\n\nimport {createDefinedContext} from './utils';\n\ntype usePerformanceEventViewContext = {\n  eventView: EventView;\n};\n\nconst [\n  PerformanceEventViewProvider,\n  _usePerformanceEventView,\n  PerformanceEventViewContext,\n] = createDefinedContext<usePerformanceEventViewContext>({\n  name: 'PerformanceEventViewContext',\n});\n\nexport {PerformanceEventViewProvider, PerformanceEventViewContext};\n\n// Provides a readonly event view. Also omits anything that isn't currently read-only, although in the future we should switch the code in EventView instead.\n// If you need mutability, use the mutable version.\nexport function usePerformanceEventView(): ImmutableEventView {\n  return _usePerformanceEventView().eventView;\n}\n\nexport function useMutablePerformanceEventView() {\n  return usePerformanceEventView().clone();\n}\n","import {createContext, useContext} from 'react';\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n/*\n * Creates provider, context and useContext hook, guarding against calling useContext without a provider.\n * [0]: https://github.com/chakra-ui/chakra-ui/blob/c0f9c287df0397e2aa9bd90eb3d5c2f2c08aa0b1/packages/utils/src/react-helpers.ts#L27\n *\n * Renamed to createDefinedContext to not conflate with React context.\n */\nexport function createDefinedContext<ContextType>(options: {\n  name: string;\n  errorMessage?: string;\n  strict?: boolean;\n}) {\n  const {\n    strict = true,\n    errorMessage = `useContext for \"${options.name}\" must be inside a Provider with a value`,\n    name,\n  } = options;\n\n  const Context = createContext<ContextType | undefined>(undefined);\n\n  Context.displayName = name;\n\n  function useDefinedContext() {\n    const context = useContext(Context);\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n    return context;\n  }\n\n  return [\n    Context.Provider,\n    useDefinedContext,\n    Context,\n  ] as CreateContextReturn<ContextType>;\n}\n","import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport useApi from 'sentry/utils/useApi';\n\nexport interface MetricsCompatibilityData {\n  compatible_projects?: number[];\n  dynamic_sampling_projects?: number[];\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilityData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilityQuery({children, ...props}: QueryProps) {\n  const api = useApi();\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilityData, {}>\n      route=\"metrics-compatibility-sums\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n      api={api}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport useApi from 'sentry/utils/useApi';\n\nexport interface MetricsCompatibilitySumData {\n  sum: {\n    metrics?: number;\n    metrics_null?: number;\n    metrics_unparam?: number;\n  };\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilitySumData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilitySumsQuery({children, ...props}: QueryProps) {\n  const api = useApi();\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilitySumData, {}>\n      route=\"metrics-compatibility\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n      api={api}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization} from 'sentry/types';\nimport {MetricsCardinalityProvider} from 'sentry/utils/performance/contexts/metricsCardinality';\nimport {MEPSettingProvider} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  children: React.ReactChildren;\n  location: Location;\n  organization: Organization;\n};\n\nfunction PerformanceContainer({organization, location, children}: Props) {\n  function renderNoAccess() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  return (\n    <Feature\n      hookName=\"feature-disabled:performance-page\"\n      features={['performance-view']}\n      organization={organization}\n      renderDisabled={renderNoAccess}\n    >\n      <MetricsCardinalityProvider location={location} organization={organization}>\n        <MEPSettingProvider>{children}</MEPSettingProvider>\n      </MetricsCardinalityProvider>\n    </Feature>\n  );\n}\n\nexport default withOrganization(PerformanceContainer);\n"],"names":["Component","useContext","t","isAPIPayloadSimilar","PerformanceEventViewContext","OrganizationContext","QueryError","constructor","errorMessage","originalError","message","getOriginalError","_GenericDiscoverQuery","isLoading","tableFetchID","undefined","error","tableData","pageLinks","prevProps","thisAPIPayload","getPayload","props","otherAPIPayload","limit","route","cursor","parseError","detail","responseJSON","unknownError","api","queryBatching","beforeFetch","afterFetch","didFetch","eventView","orgSlug","setError","isValid","url","Symbol","apiPayload","setState","clear","data","resp","doDiscoverQuery","state","prevState","getResponseHeader","err","_parseError","componentDidMount","fetchData","componentDidUpdate","refetchCondition","_shouldRefetchData","eventViewValidation","shouldRefetchExternal","shouldRefetchData","noPagination","referrer","payload","getRequestPayload","getEventsAPIPayload","location","forceAppendRawQueryString","per_page","Object","assign","queryExtras","render","childrenProps","children","GenericDiscoverQuery","organizationSlug","slug","performanceEventView","Error","_props","params","batchRequest","query","includeAllArgs","requestPromise","method","Fragment","parsePeriodToHours","EventView","canUseMetricsData","MetricsCompatibilityQuery","MetricsCompatibilitySumsQuery","createDefinedContext","_Provider","_useContext","_Context","name","strict","MetricsCardinalityProvider","isUsingMetrics","organization","outcome","forceTransactionsOnly","baseDiscoverProps","fromLocation","fields","field","_eventView","adjustEventViewTime","compatabilityResult","sumsResult","getMetricsOutcome","MetricCardinalityConsumer","Consumer","useMetricsCardinalityContext","dataCounts","hasOtherFallbackCondition","fallbackOutcome","successOutcome","compatibleProjects","compatible_projects","checkForSamplingRules","checkNoDataFallback","checkIncompatibleData","shouldWarnIncompatibleSDK","checkIfAllOtherData","shouldNotifyUnnamedTransactions","checkIfPartialOtherData","counts","normalizeCounts","dynamic_sampling_projects","length","metricsCount","nullCount","unparamCount","sum","Number","metrics","metrics_unparam","metrics_null","_","clone","start","end","statsPeriod","periodHours","useCallback","useReducer","browserHistory","localStorage","decodeScalar","useOrganization","_MEPSettingProvider","_useMEPSettingContext","_MEPSettingContext","MEPConsumer","AutoSampleState","MEPState","METRIC_SETTING_PARAM","METRIC_SEARCH_SETTING_PARAM","storageKey","MEPSetting","get","value","getItem","removeItem","set","setItem","canUseMetricsDevUI","features","includes","isDevFlagOn","isInternalViewOn","samplingRolloutFlag","isRollingOut","MEPSettingProvider","_hasMEPState","forceTransactions","canUseMEP","allowedStates","metricsOnly","transactionsOnly","_metricSettingFromParam","defaultMetricsState","metricSettingFromParam","find","s","isControlledMEP","_metricSettingState","_setMetricSettingState","next","setMetricSettingState","settingState","replace","autoSampleState","setAutoSampleState","unset","metricSettingState","shouldQueryProvideMEPAutoParams","auto","shouldQueryProvideMEPMetricParams","shouldQueryProvideMEPTransactionParams","memoizationKey","useMEPSettingContext","PerformanceEventViewProvider","_usePerformanceEventView","usePerformanceEventView","useMutablePerformanceEventView","createContext","options","Context","displayName","useDefinedContext","context","Provider","omit","useApi","rest","Feature","Alert","PageContent","withOrganization","PerformanceContainer","renderNoAccess"],"sourceRoot":""}