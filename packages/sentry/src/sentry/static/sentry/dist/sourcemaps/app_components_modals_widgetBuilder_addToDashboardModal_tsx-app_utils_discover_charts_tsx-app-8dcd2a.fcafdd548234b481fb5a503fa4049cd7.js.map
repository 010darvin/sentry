{"version":3,"file":"chunks/app_components_modals_widgetBuilder_addToDashboardModal_tsx-app_utils_discover_charts_tsx-app-8dcd2a.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/modals/widgetBuilder/addToDashboardModal.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./app/utils/withProject.tsx","webpack:///../node_modules/lodash/_baseExtremum.js","webpack:///../node_modules/lodash/_baseGt.js"],"sourcesContent":["import {Fragment, useEffect, useState} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location, Query} from 'history';\n\nimport {\n  fetchDashboard,\n  fetchDashboards,\n  updateDashboard,\n} from 'sentry/actionCreators/dashboards';\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {DateString, Organization, PageFilters, SelectValue} from 'sentry/types';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\nimport {\n  DashboardDetails,\n  DashboardListItem,\n  DisplayType,\n  MAX_WIDGETS,\n  Widget,\n} from 'sentry/views/dashboardsV2/types';\nimport {\n  getDashboardFiltersFromURL,\n  getSavedFiltersAsPageFilters,\n  getSavedPageFilters,\n} from 'sentry/views/dashboardsV2/utils';\nimport {NEW_DASHBOARD_ID} from 'sentry/views/dashboardsV2/widgetBuilder/utils';\nimport WidgetCard from 'sentry/views/dashboardsV2/widgetCard';\n\ntype WidgetAsQueryParams = Query & {\n  defaultTableColumns: string[];\n  defaultTitle: string;\n  defaultWidgetQuery: string;\n  displayType: DisplayType;\n  environment: string[];\n  project: number[];\n  source: string;\n  end?: DateString;\n  start?: DateString;\n  statsPeriod?: string | null;\n};\n\nexport type AddToDashboardModalProps = {\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n  selection: PageFilters;\n  widget: Widget;\n  widgetAsQueryParams: WidgetAsQueryParams;\n};\n\ntype Props = ModalRenderProps & AddToDashboardModalProps;\n\nconst SELECT_DASHBOARD_MESSAGE = t('Select a dashboard');\n\nfunction AddToDashboardModal({\n  Header,\n  Body,\n  Footer,\n  closeModal,\n  location,\n  organization,\n  router,\n  selection,\n  widget,\n  widgetAsQueryParams,\n}: Props) {\n  const api = useApi();\n  const [dashboards, setDashboards] = useState<DashboardListItem[] | null>(null);\n  const [selectedDashboard, setSelectedDashboard] = useState<DashboardDetails | null>(\n    null\n  );\n  const [selectedDashboardId, setSelectedDashboardId] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Track mounted state so we dont call setState on unmounted components\n    let unmounted = false;\n\n    fetchDashboards(api, organization.slug).then(response => {\n      // If component has unmounted, dont set state\n      if (unmounted) {\n        return;\n      }\n\n      setDashboards(response);\n    });\n\n    return () => {\n      unmounted = true;\n    };\n  }, [api, organization.slug]);\n\n  useEffect(() => {\n    // Track mounted state so we dont call setState on unmounted components\n    let unmounted = false;\n\n    if (selectedDashboardId === NEW_DASHBOARD_ID || selectedDashboardId === null) {\n      setSelectedDashboard(null);\n    } else {\n      fetchDashboard(api, organization.slug, selectedDashboardId).then(response => {\n        // If component has unmounted, dont set state\n        if (unmounted) {\n          return;\n        }\n\n        setSelectedDashboard(response);\n      });\n    }\n\n    return () => {\n      unmounted = true;\n    };\n  }, [api, organization.slug, selectedDashboardId]);\n\n  function handleGoToBuilder() {\n    const pathname =\n      selectedDashboardId === NEW_DASHBOARD_ID\n        ? `/organizations/${organization.slug}/dashboards/new/widget/new/`\n        : `/organizations/${organization.slug}/dashboard/${selectedDashboardId}/widget/new/`;\n\n    router.push({\n      pathname,\n      query: {\n        ...widgetAsQueryParams,\n        ...(organization.features.includes('dashboards-top-level-filter') &&\n        selectedDashboard\n          ? getSavedPageFilters(selectedDashboard)\n          : {}),\n      },\n    });\n    closeModal();\n  }\n\n  async function handleAddAndStayInDiscover() {\n    if (selectedDashboard === null) {\n      return;\n    }\n\n    let orderby = widget.queries[0].orderby;\n    if (!!!(DisplayType.AREA && widget.queries[0].columns.length)) {\n      orderby = ''; // Clear orderby if its not a top n visualization.\n    }\n    const query = widget.queries[0];\n\n    const newWidget = {\n      ...widget,\n      title: widget.title === '' ? t('All Events') : widget.title,\n      queries: [{...query, orderby}],\n    };\n\n    try {\n      const newDashboard = {\n        ...selectedDashboard,\n        widgets: [...selectedDashboard.widgets, newWidget],\n      };\n\n      await updateDashboard(api, organization.slug, newDashboard);\n\n      closeModal();\n      addSuccessMessage(t('Successfully added widget to dashboard'));\n    } catch (e) {\n      const errorMessage = t('Unable to add widget to dashboard');\n      handleXhrErrorResponse(errorMessage)(e);\n      addErrorMessage(errorMessage);\n    }\n  }\n\n  const canSubmit = selectedDashboardId !== null;\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{t('Add to Dashboard')}</h4>\n      </Header>\n      <Body>\n        <Wrapper>\n          <SelectControl\n            disabled={dashboards === null}\n            menuPlacement=\"auto\"\n            name=\"dashboard\"\n            placeholder={t('Select Dashboard')}\n            value={selectedDashboardId}\n            options={\n              dashboards && [\n                {label: t('+ Create New Dashboard'), value: 'new'},\n                ...dashboards.map(({title, id, widgetDisplay}) => ({\n                  label: title,\n                  value: id,\n                  disabled: widgetDisplay.length >= MAX_WIDGETS,\n                  tooltip:\n                    widgetDisplay.length >= MAX_WIDGETS &&\n                    tct('Max widgets ([maxWidgets]) per dashboard reached.', {\n                      maxWidgets: MAX_WIDGETS,\n                    }),\n                  tooltipOptions: {position: 'right'},\n                })),\n              ]\n            }\n            onChange={(option: SelectValue<string>) => {\n              if (option.disabled) {\n                return;\n              }\n              setSelectedDashboardId(option.value);\n            }}\n          />\n        </Wrapper>\n        <Wrapper>\n          {organization.features.includes('dashboards-top-level-filter')\n            ? t(\n                'Any conflicting filters from this query will be overridden by Dashboard filters. This is a preview of how the widget will appear in your dashboard.'\n              )\n            : t('This is a preview of how the widget will appear in your dashboard.')}\n        </Wrapper>\n        <WidgetCard\n          api={api}\n          organization={organization}\n          currentWidgetDragging={false}\n          isEditing={false}\n          isSorting={false}\n          widgetLimitReached={false}\n          selection={\n            organization.features.includes('dashboards-top-level-filter') &&\n            selectedDashboard\n              ? getSavedFiltersAsPageFilters(selectedDashboard)\n              : selection\n          }\n          dashboardFilters={\n            organization.features.includes('dashboards-top-level-filter')\n              ? getDashboardFiltersFromURL(location) ?? selectedDashboard?.filters\n              : {}\n          }\n          widget={widget}\n          showStoredAlert\n        />\n      </Body>\n\n      <Footer>\n        <StyledButtonBar gap={1.5}>\n          <Button\n            onClick={handleAddAndStayInDiscover}\n            disabled={!canSubmit || selectedDashboardId === NEW_DASHBOARD_ID}\n            title={canSubmit ? undefined : SELECT_DASHBOARD_MESSAGE}\n          >\n            {t('Add + Stay in Discover')}\n          </Button>\n          <Button\n            priority=\"primary\"\n            onClick={handleGoToBuilder}\n            disabled={!canSubmit}\n            title={canSubmit ? undefined : SELECT_DASHBOARD_MESSAGE}\n          >\n            {t('Open in Widget Builder')}\n          </Button>\n        </StyledButtonBar>\n      </Footer>\n    </Fragment>\n  );\n}\n\nexport default AddToDashboardModal;\n\nconst Wrapper = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  @media (max-width: ${props => props.theme.breakpoints.small}) {\n    grid-template-rows: repeat(2, 1fr);\n    gap: ${space(1.5)};\n    width: 100%;\n\n    > button {\n      width: 100%;\n    }\n  }\n`;\n\nexport const modalCss = css`\n  max-width: 700px;\n  margin: 70px auto;\n`;\n","import {LegendComponentOption} from 'echarts';\n\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport {AggregationOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(\n  value: number | null,\n  outputType: AggregationOutputType = 'number'\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  return tooltipFormatterUsingAggregateOutputType(value, outputType);\n}\n\n/**\n * Formatter for chart tooltips that takes the aggregate output type directly\n */\nexport function tooltipFormatterUsingAggregateOutputType(\n  value: number | null,\n  type: string\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    case 'size':\n      return formatBytesBase2(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  outputType: AggregationOutputType,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  return axisLabelFormatterUsingAggregateOutputType(\n    value,\n    outputType,\n    abbreviation,\n    durationUnit\n  );\n}\n\n/**\n * Formatter for chart axis labels that takes the aggregate output type directly\n */\nexport function axisLabelFormatterUsingAggregateOutputType(\n  value: number,\n  type: string,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value, durationUnit);\n    case 'size':\n      return formatBytesBase2(value, 0);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number, durationUnit?: number): string {\n  durationUnit ??= categorizeDuration(value);\n  if (value === 0) {\n    return '0';\n  }\n  switch (durationUnit) {\n    case WEEK: {\n      const label = (value / WEEK).toFixed(0);\n      return t('%swk', label);\n    }\n    case DAY: {\n      const label = (value / DAY).toFixed(0);\n      return t('%sd', label);\n    }\n    case HOUR: {\n      const label = (value / HOUR).toFixed(0);\n      return t('%shr', label);\n    }\n    case MINUTE: {\n      const label = (value / MINUTE).toFixed(0);\n      return t('%smin', label);\n    }\n    case SECOND: {\n      const label = (value / SECOND).toFixed(0);\n      return t('%ss', label);\n    }\n    default:\n      const label = value.toFixed(0);\n      return t('%sms', label);\n  }\n}\n\n/**\n * Given an array of series and an eCharts legend object,\n * finds the range of y values (min and max) based on which series is selected in the legend\n * Assumes series[0] > series[1] > ...\n * @param series Array of eCharts series\n * @param legend eCharts legend object\n * @returns\n */\nexport function findRangeOfMultiSeries(series: Series[], legend?: LegendComponentOption) {\n  let range: {max: number; min: number} | undefined;\n  if (series[0]?.data) {\n    let minSeries = series[0];\n    let maxSeries;\n    series.forEach(({seriesName, data}, idx) => {\n      if (legend?.selected?.[seriesName] !== false && data.length) {\n        minSeries = series[idx];\n        maxSeries ??= series[idx];\n      }\n    });\n    if (maxSeries?.data) {\n      const max = Math.max(\n        ...maxSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      const min = Math.min(\n        ...minSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      range = {max, min};\n    }\n  }\n  return range;\n}\n\n/**\n * Given a eCharts series and legend, returns the unit to be used on the yAxis for a duration chart\n * @param series eCharts series array\n * @param legend eCharts legend object\n * @returns\n */\nexport function getDurationUnit(\n  series: Series[],\n  legend?: LegendComponentOption\n): number {\n  let durationUnit = 0;\n  const range = findRangeOfMultiSeries(series, legend);\n  if (range) {\n    const avg = (range.max + range.min) / 2;\n    durationUnit = categorizeDuration((range.max - range.min) / 5); // avg of 5 yAxis ticks per chart\n\n    const numOfDigits = (avg / durationUnit).toFixed(0).length;\n    if (numOfDigits > 6) {\n      durationUnit = categorizeDuration(avg);\n    }\n  }\n  return durationUnit;\n}\n\n/**\n * Categorizes the duration by Second, Minute, Hour, etc\n * Ex) categorizeDuration(1200) = MINUTE\n * @param value Duration in ms\n */\nexport function categorizeDuration(value): number {\n  if (value >= WEEK) {\n    return WEEK;\n  }\n  if (value >= DAY) {\n    return DAY;\n  }\n  if (value >= HOUR) {\n    return HOUR;\n  }\n  if (value >= MINUTE) {\n    return MINUTE;\n  }\n  if (value >= SECOND) {\n    return SECOND;\n  }\n  return 1;\n}\n","import {Component} from 'react';\n\nimport SentryTypes from 'sentry/sentryTypes';\nimport {Project} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedProjectProps = {\n  project?: Project;\n};\n\n/**\n * Currently wraps component with project from context\n */\nconst withProject = <P extends InjectedProjectProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends Component<\n    Omit<P, keyof InjectedProjectProps> & Partial<InjectedProjectProps>\n  > {\n    static displayName = `withProject(${getDisplayName(WrappedComponent)})`;\n    static contextTypes = {\n      project: SentryTypes.Project,\n    };\n\n    render() {\n      const {project, ...props} = this.props;\n      return (\n        <WrappedComponent\n          {...({project: project ?? this.context.project, ...props} as P)}\n        />\n      );\n    }\n  };\n\nexport default withProject;\n","var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n"],"names":["Fragment","useEffect","useState","css","fetchDashboard","fetchDashboards","updateDashboard","addErrorMessage","addSuccessMessage","Button","ButtonBar","SelectControl","t","tct","space","handleXhrErrorResponse","useApi","DisplayType","MAX_WIDGETS","getDashboardFiltersFromURL","getSavedFiltersAsPageFilters","getSavedPageFilters","NEW_DASHBOARD_ID","WidgetCard","SELECT_DASHBOARD_MESSAGE","AddToDashboardModal","Header","Body","Footer","closeModal","location","organization","router","selection","widget","widgetAsQueryParams","api","dashboards","setDashboards","selectedDashboard","setSelectedDashboard","selectedDashboardId","setSelectedDashboardId","unmounted","slug","then","response","handleGoToBuilder","pathname","push","query","features","includes","handleAddAndStayInDiscover","orderby","queries","AREA","columns","length","newWidget","title","newDashboard","widgets","e","errorMessage","canSubmit","label","value","map","id","widgetDisplay","disabled","tooltip","maxWidgets","tooltipOptions","position","option","filters","undefined","Wrapper","StyledButtonBar","props","theme","breakpoints","small","modalCss","defined","formatBytesBase2","DAY","formatAbbreviatedNumber","formatPercentage","getDuration","HOUR","MINUTE","SECOND","WEEK","tooltipFormatter","outputType","tooltipFormatterUsingAggregateOutputType","type","toLocaleString","toString","axisLabelFormatter","abbreviation","durationUnit","axisLabelFormatterUsingAggregateOutputType","axisDuration","categorizeDuration","toFixed","findRangeOfMultiSeries","series","legend","range","data","minSeries","maxSeries","forEach","idx","seriesName","selected","max","Math","filter","min","getDurationUnit","avg","numOfDigits","Component","SentryTypes","getDisplayName","withProject","WrappedComponent","render","project","context","Project"],"sourceRoot":""}