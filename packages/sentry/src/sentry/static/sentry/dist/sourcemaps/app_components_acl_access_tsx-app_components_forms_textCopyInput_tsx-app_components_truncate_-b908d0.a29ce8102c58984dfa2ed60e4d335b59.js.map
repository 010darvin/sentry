{"version":3,"file":"chunks/app_components_acl_access_tsx-app_components_forms_textCopyInput_tsx-app_components_truncate_-b908d0.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/access.tsx","webpack:///./app/components/forms/textCopyInput.tsx","webpack:///./app/components/truncate.tsx","webpack:///./app/utils/useOrganization.tsx","webpack:///./app/utils/withConfig.tsx","webpack:///./app/views/organizationContext.tsx"],"sourcesContent":["import {Component} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Config, Organization, Scope} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst DEFAULT_NO_ACCESS_MESSAGE = (\n  <Alert type=\"error\" showIcon>\n    {t('You do not have sufficient permissions to access this.')}\n  </Alert>\n);\n\n// Props that function children will get.\nexport type ChildRenderProps = {\n  hasAccess: boolean;\n  hasSuperuser: boolean;\n};\n\ntype ChildFunction = (props: ChildRenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * List of required access levels\n   */\n  access: Scope[];\n\n  /**\n   * Custom renderer function for \"no access\" message OR `true` to use\n   * default message. `false` will suppress message.\n   */\n  renderNoAccessMessage: ChildFunction | boolean;\n\n  /**\n   * Requires superuser\n   */\n  isSuperuser?: boolean;\n\n  /**\n   * Should the component require all access levels or just one or more.\n   */\n  requireAll?: boolean;\n};\n\nconst defaultProps: DefaultProps = {\n  renderNoAccessMessage: false,\n  isSuperuser: false,\n  requireAll: true,\n  access: [],\n};\n\ntype Props = {\n  /**\n   * Configuration from ConfigStore\n   */\n  config: Config;\n\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode | ChildFunction;\n} & Partial<DefaultProps>;\n\n/**\n * Component to handle access restrictions.\n */\nclass Access extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      organization,\n      config,\n      access,\n      requireAll,\n      isSuperuser,\n      renderNoAccessMessage,\n      children,\n    } = this.props;\n\n    const {access: orgAccess} = organization || {access: []};\n    const method = requireAll ? 'every' : 'some';\n\n    const hasAccess = !access || access[method](acc => orgAccess.includes(acc));\n    const hasSuperuser = !!(config.user && config.user.isSuperuser);\n\n    const renderProps: ChildRenderProps = {\n      hasAccess,\n      hasSuperuser,\n    };\n\n    const render = hasAccess && (!isSuperuser || hasSuperuser);\n\n    if (!render && typeof renderNoAccessMessage === 'function') {\n      return renderNoAccessMessage(renderProps);\n    }\n    if (!render && renderNoAccessMessage) {\n      return DEFAULT_NO_ACCESS_MESSAGE;\n    }\n\n    if (isRenderFunc<ChildFunction>(children)) {\n      return children(renderProps);\n    }\n\n    return render ? children : null;\n  }\n}\n\nexport default withOrganization(withConfig(Access));\n","import {Component, createRef} from 'react';\nimport {findDOMNode} from 'react-dom';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Clipboard from 'sentry/components/clipboard';\nimport {IconCopy} from 'sentry/icons';\nimport {inputStyles} from 'sentry/styles/input';\nimport {selectText} from 'sentry/utils/selectText';\n\nconst Wrapper = styled('div')`\n  display: flex;\n`;\n\nexport const StyledInput = styled('input')<{rtl?: boolean}>`\n  ${inputStyles};\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  direction: ${p => (p.rtl ? 'rtl' : 'ltr')};\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.backgroundSecondary};\n    border-right-width: 0;\n  }\n`;\n\nconst OverflowContainer = styled('div')`\n  flex-grow: 1;\n  border: none;\n`;\n\nexport const StyledCopyButton = styled(Button)`\n  flex-shrink: 1;\n  border-radius: 0 0.25em 0.25em 0;\n  box-shadow: none;\n`;\n\ntype Props = {\n  /**\n   * Text to copy\n   */\n  children: string;\n  className?: string;\n  disabled?: boolean;\n  onCopy?: (value: string, event: React.MouseEvent) => void;\n  /**\n   * Always show the ending of a long overflowing text in input\n   */\n  rtl?: boolean;\n  style?: React.CSSProperties;\n};\n\nclass TextCopyInput extends Component<Props> {\n  textRef = createRef<HTMLInputElement>();\n\n  // Select text when copy button is clicked\n  handleCopyClick = (e: React.MouseEvent) => {\n    if (!this.textRef.current) {\n      return;\n    }\n\n    const {onCopy, children} = this.props;\n\n    this.handleSelectText();\n\n    onCopy?.(children, e);\n\n    e.stopPropagation();\n  };\n\n  handleSelectText = () => {\n    const {rtl} = this.props;\n\n    if (!this.textRef.current) {\n      return;\n    }\n\n    // We use findDOMNode here because `this.textRef` is not a dom node,\n    // it's a ref to AutoSelectText\n    const node = findDOMNode(this.textRef.current); // eslint-disable-line react/no-find-dom-node\n    if (!node || !(node instanceof HTMLElement)) {\n      return;\n    }\n\n    if (rtl && node instanceof HTMLInputElement) {\n      // we don't want to select the first character - \\u202A, nor the last - \\u202C\n      node.setSelectionRange(1, node.value.length - 1);\n    } else {\n      selectText(node);\n    }\n  };\n\n  render() {\n    const {className, disabled, style, children, rtl} = this.props;\n\n    /**\n     * We are using direction: rtl; to always show the ending of a long overflowing text in input.\n     *\n     * This however means that the trailing characters with BiDi class O.N. ('Other Neutrals') goes to the other side.\n     * Hello! becomes !Hello and vice versa. This is a problem for us when we want to show path in this component, because\n     * /user/local/bin becomes user/local/bin/. Wrapping in unicode characters for left-to-righ embedding solves this,\n     * however we need to be aware of them when selecting the text - we are solving that by offsetting the selectionRange.\n     */\n    const inputValue = rtl ? '\\u202A' + children + '\\u202C' : children;\n\n    return (\n      <Wrapper className={className}>\n        <OverflowContainer>\n          <StyledInput\n            readOnly\n            disabled={disabled}\n            ref={this.textRef}\n            style={style}\n            value={inputValue}\n            onClick={this.handleSelectText}\n            rtl={rtl}\n          />\n        </OverflowContainer>\n        <Clipboard hideUnsupported value={children}>\n          <StyledCopyButton\n            type=\"button\"\n            disabled={disabled}\n            onClick={this.handleCopyClick}\n          >\n            <IconCopy />\n          </StyledCopyButton>\n        </Clipboard>\n      </Wrapper>\n    );\n  }\n}\n\nexport default TextCopyInput;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype DefaultProps = {\n  className: string;\n  expandDirection: 'left' | 'right';\n  expandable: boolean;\n  leftTrim: boolean;\n  maxLength: number;\n  minLength: number;\n};\n\ntype Props = DefaultProps & {\n  value: string;\n  trimRegex?: RegExp;\n};\n\ntype State = {\n  isExpanded: boolean;\n};\n\nclass Truncate extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    className: '',\n    minLength: 15,\n    maxLength: 50,\n    leftTrim: false,\n    expandable: true,\n    expandDirection: 'right',\n  };\n\n  state: State = {\n    isExpanded: false,\n  };\n\n  onFocus = () => {\n    const {value, maxLength} = this.props;\n    if (value.length <= maxLength) {\n      return;\n    }\n    this.setState({isExpanded: true});\n  };\n\n  onBlur = () => {\n    if (this.state.isExpanded) {\n      this.setState({isExpanded: false});\n    }\n  };\n\n  render() {\n    const {\n      className,\n      leftTrim,\n      trimRegex,\n      minLength,\n      maxLength,\n      value,\n      expandable,\n      expandDirection,\n    } = this.props;\n    const isTruncated = value.length > maxLength;\n    let shortValue: React.ReactNode = '';\n\n    if (isTruncated) {\n      const slicedValue = leftTrim\n        ? value.slice(value.length - (maxLength - 4), value.length)\n        : value.slice(0, maxLength - 4);\n\n      // Try to trim to values from the regex\n      if (trimRegex && leftTrim) {\n        const valueIndex = slicedValue.search(trimRegex);\n        shortValue = (\n          <span>\n            …{' '}\n            {valueIndex > 0 && valueIndex <= maxLength - minLength\n              ? slicedValue.slice(slicedValue.search(trimRegex), slicedValue.length)\n              : slicedValue}\n          </span>\n        );\n      } else if (trimRegex && !leftTrim) {\n        const matches = slicedValue.match(trimRegex);\n        let lastIndex = matches\n          ? slicedValue.lastIndexOf(matches[matches.length - 1]) + 1\n          : slicedValue.length;\n        if (lastIndex <= minLength) {\n          lastIndex = slicedValue.length;\n        }\n        shortValue = <span>{slicedValue.slice(0, lastIndex)} …</span>;\n      } else if (leftTrim) {\n        shortValue = <span>… {slicedValue}</span>;\n      } else {\n        shortValue = <span>{slicedValue} …</span>;\n      }\n    } else {\n      shortValue = value;\n    }\n\n    return (\n      <Wrapper\n        className={className}\n        onMouseOver={expandable ? this.onFocus : undefined}\n        onMouseOut={expandable ? this.onBlur : undefined}\n        onFocus={expandable ? this.onFocus : undefined}\n        onBlur={expandable ? this.onBlur : undefined}\n      >\n        <span>{shortValue}</span>\n        {isTruncated && (\n          <FullValue expanded={this.state.isExpanded} expandDirection={expandDirection}>\n            {value}\n          </FullValue>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('span')`\n  position: relative;\n`;\n\nexport const FullValue = styled('span')<{\n  expandDirection: 'left' | 'right';\n  expanded: boolean;\n}>`\n  display: none;\n  position: absolute;\n  background: ${p => p.theme.background};\n  padding: ${space(0.5)};\n  border: 1px solid ${p => p.theme.innerBorder};\n  white-space: nowrap;\n  border-radius: ${space(0.5)};\n  top: -5px;\n  ${p => p.expandDirection === 'left' && 'right: -5px;'}\n  ${p => p.expandDirection === 'right' && 'left: -5px;'}\n\n  ${p =>\n    p.expanded &&\n    `\n    z-index: ${p.theme.zIndex.truncationFullValue};\n    display: block;\n    `}\n`;\n\nexport default Truncate;\n","import {useContext} from 'react';\n\nimport {OrganizationContext} from 'sentry/views/organizationContext';\n\nfunction useOrganization() {\n  const organization = useContext(OrganizationContext);\n  if (!organization) {\n    throw new Error('useOrganization called but organization is not set.');\n  }\n  return organization;\n}\n\nexport default useOrganization;\n","import ConfigStore from 'sentry/stores/configStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {Config} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedConfigProps = {\n  config: Config;\n};\n\n/**\n * Higher order component that passes the config object to the wrapped\n * component\n */\nfunction withConfig<P extends InjectedConfigProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  type Props = Omit<P, keyof InjectedConfigProps> & Partial<InjectedConfigProps>;\n\n  const Wrapper: React.FC<Props> = props => {\n    const config = useLegacyStore(ConfigStore);\n    const allProps = {config, ...props} as P;\n\n    return <WrappedComponent {...allProps} />;\n  };\n\n  Wrapper.displayName = `withConfig(${getDisplayName(WrappedComponent)})`;\n\n  return Wrapper;\n}\n\nexport default withConfig;\n","import {createContext} from 'react';\n\nimport {Organization} from 'sentry/types';\n\nexport const OrganizationContext = createContext<Organization | null>(null);\n"],"names":["Component","Alert","t","isRenderFunc","withConfig","withOrganization","DEFAULT_NO_ACCESS_MESSAGE","defaultProps","renderNoAccessMessage","isSuperuser","requireAll","access","Access","render","organization","config","children","props","orgAccess","method","hasAccess","acc","includes","hasSuperuser","user","renderProps","createRef","findDOMNode","Button","Clipboard","IconCopy","inputStyles","selectText","Wrapper","StyledInput","p","theme","backgroundSecondary","rtl","OverflowContainer","StyledCopyButton","TextCopyInput","e","textRef","current","onCopy","handleSelectText","stopPropagation","node","HTMLElement","HTMLInputElement","setSelectionRange","value","length","className","disabled","style","inputValue","handleCopyClick","space","Truncate","isExpanded","maxLength","setState","state","leftTrim","trimRegex","minLength","expandable","expandDirection","isTruncated","shortValue","slicedValue","slice","valueIndex","search","matches","match","lastIndex","lastIndexOf","onFocus","undefined","onBlur","FullValue","background","innerBorder","expanded","zIndex","truncationFullValue","useContext","OrganizationContext","useOrganization","Error","ConfigStore","useLegacyStore","getDisplayName","WrappedComponent","allProps","displayName","createContext"],"sourceRoot":""}