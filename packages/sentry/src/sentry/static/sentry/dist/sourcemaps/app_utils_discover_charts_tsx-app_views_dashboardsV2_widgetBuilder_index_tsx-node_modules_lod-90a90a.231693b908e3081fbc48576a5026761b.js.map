{"version":3,"file":"chunks/app_utils_discover_charts_tsx-app_views_dashboardsV2_widgetBuilder_index_tsx-node_modules_lod-90a90a.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/featureFeedback/index.tsx","webpack:///./app/utils/customMeasurements/customMeasurementsContext.tsx","webpack:///./app/utils/customMeasurements/customMeasurementsProvider.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./app/utils/useCustomMeasurements.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/columnsStep/columnFields.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/columnsStep/index.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/dataSetStep.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/filterResultsStep/index.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/groupByStep/groupBySelector.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/groupByStep/index.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/groupByStep/queryField.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/groupByStep/sortableQueryField.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/visualizationStep.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/yAxisStep/index.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/yAxisStep/yAxisSelector/addButton.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/yAxisStep/yAxisSelector/deleteButton.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/buildSteps/yAxisStep/yAxisSelector/index.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/footer.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/header.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/index.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/widgetBuilder.tsx","webpack:///./app/views/dashboardsV2/widgetBuilder/widgetLibrary/index.tsx","webpack:///./app/views/dashboardsV2/widgetLibrary/data.tsx","webpack:///../node_modules/lodash/_baseExtremum.js","webpack:///../node_modules/lodash/_baseGt.js"],"sourcesContent":["import {openModal} from 'sentry/actionCreators/modal';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport {IconMegaphone} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\nimport {FeedBackModalProps} from './feedbackModal';\n\nexport interface FeatureFeedbackProps extends FeedBackModalProps {\n  buttonProps?: Partial<ButtonProps>;\n}\n\n// Provides a button that, when clicked, opens a modal with a form that,\n// when filled and submitted, will send feedback to Sentry (feedbacks project).\nexport function FeatureFeedback({\n  feedbackTypes,\n  featureName,\n  buttonProps = {},\n}: FeatureFeedbackProps) {\n  async function handleClick() {\n    const mod = await import('sentry/components/featureFeedback/feedbackModal');\n\n    const {FeedbackModal, modalCss} = mod;\n\n    openModal(\n      deps => (\n        <FeedbackModal\n          {...deps}\n          featureName={featureName}\n          feedbackTypes={feedbackTypes}\n        />\n      ),\n      {\n        modalCss,\n      }\n    );\n  }\n\n  return (\n    <Button icon={<IconMegaphone />} onClick={handleClick} {...buttonProps}>\n      {t('Give Feedback')}\n    </Button>\n  );\n}\n","import {createContext} from 'react';\n\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\n\nexport interface CustomMeasurementsContextValue {\n  customMeasurements: CustomMeasurementCollection;\n}\n\nexport const CustomMeasurementsContext = createContext<\n  CustomMeasurementsContextValue | undefined\n>(undefined);\n","import {useEffect, useState} from 'react';\nimport {Query} from 'history';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\n\nimport {\n  CustomMeasurementsContext,\n  CustomMeasurementsContextValue,\n} from './customMeasurementsContext';\n\ntype MeasurementsMetaResponse = {\n  [x: string]: {functions: string[]};\n};\n\nfunction fetchCustomMeasurements(\n  api: Client,\n  organization: Organization,\n  selection?: PageFilters\n): Promise<MeasurementsMetaResponse> {\n  const query: Query = selection?.datetime\n    ? {...normalizeDateTimeParams(selection.datetime)}\n    : {};\n\n  if (selection?.projects) {\n    query.project = selection.projects.map(String);\n  }\n\n  return api.requestPromise(`/organizations/${organization.slug}/measurements-meta/`, {\n    method: 'GET',\n    query,\n  });\n}\n\ntype CustomMeasurementsProviderProps = {\n  children:\n    | React.ReactNode\n    | ((props: CustomMeasurementsContextValue) => React.ReactNode);\n  organization: Organization;\n  selection?: PageFilters;\n};\n\nexport function CustomMeasurementsProvider({\n  children,\n  organization,\n  selection,\n}: CustomMeasurementsProviderProps) {\n  const api = useApi();\n  const [state, setState] = useState({customMeasurements: {}});\n\n  useEffect(() => {\n    let shouldCancelRequest = false;\n\n    if (\n      organization.features.includes('dashboards-mep') ||\n      organization.features.includes('mep-rollout-flag')\n    ) {\n      fetchCustomMeasurements(api, organization, selection)\n        .then(response => {\n          if (shouldCancelRequest) {\n            return;\n          }\n\n          const newCustomMeasurements = Object.keys(\n            response\n          ).reduce<CustomMeasurementCollection>((acc, customMeasurement) => {\n            acc[customMeasurement] = {\n              key: customMeasurement,\n              name: customMeasurement,\n              functions: response[customMeasurement].functions,\n            };\n            return acc;\n          }, {});\n\n          setState({customMeasurements: newCustomMeasurements});\n        })\n        .catch(e => {\n          if (shouldCancelRequest) {\n            return;\n          }\n\n          const errorResponse =\n            e?.responseJSON ?? t('Unable to fetch custom performance metrics');\n          addErrorMessage(errorResponse);\n          handleXhrErrorResponse(errorResponse)(e);\n        });\n    }\n\n    return () => {\n      shouldCancelRequest = true;\n    };\n  }, [selection, api, organization]);\n\n  return (\n    <CustomMeasurementsContext.Provider value={state}>\n      {typeof children === 'function' ? children(state) : children}\n    </CustomMeasurementsContext.Provider>\n  );\n}\n","import {LegendComponentOption} from 'echarts';\n\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport {AggregationOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(\n  value: number | null,\n  outputType: AggregationOutputType = 'number'\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  return tooltipFormatterUsingAggregateOutputType(value, outputType);\n}\n\n/**\n * Formatter for chart tooltips that takes the aggregate output type directly\n */\nexport function tooltipFormatterUsingAggregateOutputType(\n  value: number | null,\n  type: string\n): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    case 'size':\n      return formatBytesBase2(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  outputType: AggregationOutputType,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  return axisLabelFormatterUsingAggregateOutputType(\n    value,\n    outputType,\n    abbreviation,\n    durationUnit\n  );\n}\n\n/**\n * Formatter for chart axis labels that takes the aggregate output type directly\n */\nexport function axisLabelFormatterUsingAggregateOutputType(\n  value: number,\n  type: string,\n  abbreviation: boolean = false,\n  durationUnit?: number\n): string {\n  switch (type) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value, durationUnit);\n    case 'size':\n      return formatBytesBase2(value, 0);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number, durationUnit?: number): string {\n  durationUnit ??= categorizeDuration(value);\n  if (value === 0) {\n    return '0';\n  }\n  switch (durationUnit) {\n    case WEEK: {\n      const label = (value / WEEK).toFixed(0);\n      return t('%swk', label);\n    }\n    case DAY: {\n      const label = (value / DAY).toFixed(0);\n      return t('%sd', label);\n    }\n    case HOUR: {\n      const label = (value / HOUR).toFixed(0);\n      return t('%shr', label);\n    }\n    case MINUTE: {\n      const label = (value / MINUTE).toFixed(0);\n      return t('%smin', label);\n    }\n    case SECOND: {\n      const label = (value / SECOND).toFixed(0);\n      return t('%ss', label);\n    }\n    default:\n      const label = value.toFixed(0);\n      return t('%sms', label);\n  }\n}\n\n/**\n * Given an array of series and an eCharts legend object,\n * finds the range of y values (min and max) based on which series is selected in the legend\n * Assumes series[0] > series[1] > ...\n * @param series Array of eCharts series\n * @param legend eCharts legend object\n * @returns\n */\nexport function findRangeOfMultiSeries(series: Series[], legend?: LegendComponentOption) {\n  let range: {max: number; min: number} | undefined;\n  if (series[0]?.data) {\n    let minSeries = series[0];\n    let maxSeries;\n    series.forEach(({seriesName, data}, idx) => {\n      if (legend?.selected?.[seriesName] !== false && data.length) {\n        minSeries = series[idx];\n        maxSeries ??= series[idx];\n      }\n    });\n    if (maxSeries?.data) {\n      const max = Math.max(\n        ...maxSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      const min = Math.min(\n        ...minSeries.data.map(({value}) => value).filter(value => !!value)\n      );\n      range = {max, min};\n    }\n  }\n  return range;\n}\n\n/**\n * Given a eCharts series and legend, returns the unit to be used on the yAxis for a duration chart\n * @param series eCharts series array\n * @param legend eCharts legend object\n * @returns\n */\nexport function getDurationUnit(\n  series: Series[],\n  legend?: LegendComponentOption\n): number {\n  let durationUnit = 0;\n  const range = findRangeOfMultiSeries(series, legend);\n  if (range) {\n    const avg = (range.max + range.min) / 2;\n    durationUnit = categorizeDuration((range.max - range.min) / 5); // avg of 5 yAxis ticks per chart\n\n    const numOfDigits = (avg / durationUnit).toFixed(0).length;\n    if (numOfDigits > 6) {\n      durationUnit = categorizeDuration(avg);\n    }\n  }\n  return durationUnit;\n}\n\n/**\n * Categorizes the duration by Second, Minute, Hour, etc\n * Ex) categorizeDuration(1200) = MINUTE\n * @param value Duration in ms\n */\nexport function categorizeDuration(value): number {\n  if (value >= WEEK) {\n    return WEEK;\n  }\n  if (value >= DAY) {\n    return DAY;\n  }\n  if (value >= HOUR) {\n    return HOUR;\n  }\n  if (value >= MINUTE) {\n    return MINUTE;\n  }\n  if (value >= SECOND) {\n    return SECOND;\n  }\n  return 1;\n}\n","import {useContext} from 'react';\n\nimport {CustomMeasurementsContext} from 'sentry/utils/customMeasurements/customMeasurementsContext';\n\nexport default function useCustomMeasurements() {\n  const customMeasurementsContext = useContext(CustomMeasurementsContext);\n\n  if (!customMeasurementsContext) {\n    throw new Error(\n      'useCustomMeasurements was called outside of CustomMeasurementsProvider'\n    );\n  }\n\n  return customMeasurementsContext;\n}\n","import styled from '@emotion/styled';\n\nimport Field from 'sentry/components/forms/field';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {QueryFieldValue} from 'sentry/utils/discover/fields';\nimport {DisplayType, WidgetType} from 'sentry/views/dashboardsV2/types';\nimport ColumnEditCollection from 'sentry/views/eventsV2/table/columnEditCollection';\nimport {FieldValueOption} from 'sentry/views/eventsV2/table/queryField';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\n\ninterface Props {\n  displayType: DisplayType;\n  fieldOptions: ReturnType<typeof generateFieldOptions>;\n  fields: QueryFieldValue[];\n  onChange: (newColumns: QueryFieldValue[]) => void;\n  organization: Organization;\n  widgetType: WidgetType;\n  errors?: Record<string, string>[];\n  filterAggregateParameters?: (option: FieldValueOption) => boolean;\n  filterPrimaryOptions?: (option: FieldValueOption) => boolean;\n  noFieldsMessage?: string;\n}\n\nexport function ColumnFields({\n  displayType,\n  fieldOptions,\n  widgetType,\n  fields,\n  organization,\n  errors,\n  onChange,\n  filterAggregateParameters,\n  filterPrimaryOptions,\n  noFieldsMessage,\n}: Props) {\n  return (\n    <Field\n      inline={false}\n      error={errors?.find(error => error?.fields)?.fields}\n      flexibleControlStateSize\n      stacked\n    >\n      {displayType === DisplayType.TABLE ? (\n        <ColumnCollectionEdit\n          columns={fields}\n          onChange={onChange}\n          fieldOptions={fieldOptions}\n          organization={organization}\n          source={widgetType}\n          showAliasField={organization.features.includes(\n            'new-widget-builder-experience-design'\n          )}\n          filterAggregateParameters={filterAggregateParameters}\n          filterPrimaryOptions={filterPrimaryOptions}\n          noFieldsMessage={noFieldsMessage}\n        />\n      ) : (\n        // The only other display type this component\n        // renders for is TOP_N, where the n - 1 fields\n        // are columns and the nth field is the y-axis\n        <ColumnCollectionEdit\n          columns={fields.slice(0, fields.length - 1)}\n          onChange={newColumns => {\n            onChange([...newColumns, fields[fields.length - 1]]);\n          }}\n          fieldOptions={fieldOptions}\n          organization={organization}\n          source={widgetType}\n          filterPrimaryOptions={filterPrimaryOptions}\n          noFieldsMessage={noFieldsMessage}\n        />\n      )}\n    </Field>\n  );\n}\n\nconst ColumnCollectionEdit = styled(ColumnEditCollection)`\n  margin-top: ${space(1)};\n`;\n","import ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, TagCollection} from 'sentry/types';\nimport {QueryFieldValue} from 'sentry/utils/discover/fields';\nimport useCustomMeasurements from 'sentry/utils/useCustomMeasurements';\nimport {getDatasetConfig} from 'sentry/views/dashboardsV2/datasetConfig/base';\nimport {DisplayType, WidgetQuery, WidgetType} from 'sentry/views/dashboardsV2/types';\n\nimport {DataSet} from '../../utils';\nimport {BuildStep} from '../buildStep';\n\nimport {ColumnFields} from './columnFields';\n\ninterface Props {\n  dataSet: DataSet;\n  displayType: DisplayType;\n  explodedFields: QueryFieldValue[];\n  handleColumnFieldChange: (newFields: QueryFieldValue[]) => void;\n  onQueryChange: (queryIndex: number, newQuery: WidgetQuery) => void;\n  organization: Organization;\n  queries: WidgetQuery[];\n  tags: TagCollection;\n  widgetType: WidgetType;\n  queryErrors?: Record<string, any>[];\n}\n\nexport function ColumnsStep({\n  dataSet,\n  displayType,\n  organization,\n  widgetType,\n  handleColumnFieldChange,\n  queryErrors,\n  explodedFields,\n  tags,\n}: Props) {\n  const {customMeasurements} = useCustomMeasurements();\n  const datasetConfig = getDatasetConfig(widgetType);\n  return (\n    <BuildStep\n      title={t('Choose your columns')}\n      description={\n        dataSet === DataSet.ISSUES\n          ? tct(\n              '[fieldTagLink: Field and tag] columns will help you view more details about the issues (e.g., title).',\n              {\n                fieldTagLink: (\n                  <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/search/searchable-properties/#event-properties\" />\n                ),\n              }\n            )\n          : dataSet === DataSet.RELEASES\n          ? tct(\n              'To stack sessions, add [functionLink: functions] f(x) that may take in additional parameters. [fieldTagLink: Field and tag] columns will help you view more details about the sessions (e.g., releases).',\n              {\n                functionLink: (\n                  <ExternalLink href=\"https://docs.sentry.io/product/discover-queries/query-builder/#filter-by-table-columns\" />\n                ),\n                fieldTagLink: (\n                  <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/search/searchable-properties/#release-properties\" />\n                ),\n              }\n            )\n          : tct(\n              'To stack events, add [functionLink: functions] f(x) that may take in additional parameters. [fieldTagLink: Field and tag] columns will help you view more details about the events (e.g., title).',\n              {\n                functionLink: (\n                  <ExternalLink href=\"https://docs.sentry.io/product/discover-queries/query-builder/#filter-by-table-columns\" />\n                ),\n                fieldTagLink: (\n                  <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/search/searchable-properties/#event-properties\" />\n                ),\n              }\n            )\n      }\n    >\n      <ColumnFields\n        displayType={displayType}\n        organization={organization}\n        widgetType={widgetType}\n        fields={explodedFields}\n        errors={queryErrors}\n        fieldOptions={datasetConfig.getTableFieldOptions(\n          organization,\n          tags,\n          customMeasurements\n        )}\n        filterAggregateParameters={datasetConfig.filterAggregateParams}\n        filterPrimaryOptions={datasetConfig.filterTableOptions}\n        onChange={handleColumnFieldChange}\n      />\n    </BuildStep>\n  );\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport RadioGroup, {RadioGroupProps} from 'sentry/components/forms/controls/radioGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {DisplayType} from 'sentry/views/dashboardsV2/types';\n\nimport {DataSet} from '../utils';\n\nimport {BuildStep} from './buildStep';\n\nconst DATASET_CHOICES: [DataSet, string][] = [\n  [DataSet.EVENTS, t('Errors and Transactions')],\n  [DataSet.ISSUES, t('Issues (States, Assignment, Time, etc.)')],\n];\n\ninterface Props {\n  dataSet: DataSet;\n  displayType: DisplayType;\n  hasReleaseHealthFeature: boolean;\n  onChange: (dataSet: DataSet) => void;\n}\n\nexport function DataSetStep({\n  dataSet,\n  onChange,\n  hasReleaseHealthFeature,\n  displayType,\n}: Props) {\n  const disabledChoices: RadioGroupProps<string>['disabledChoices'] = [];\n\n  if (displayType !== DisplayType.TABLE) {\n    disabledChoices.push([\n      DataSet.ISSUES,\n      t('This dataset is restricted to tabular visualization.'),\n    ]);\n\n    if (displayType === DisplayType.WORLD_MAP) {\n      disabledChoices.push([\n        DataSet.RELEASES,\n        t(\n          'This dataset is restricted to big number, tabular and time series visualizations.'\n        ),\n      ]);\n    }\n  }\n\n  return (\n    <BuildStep\n      title={t('Choose your dataset')}\n      description={tct(\n        `This reflects the type of information you want to use. To learn more, [link: read the docs].`,\n        {\n          link: (\n            <ExternalLink href=\"https://docs.sentry.io/product/dashboards/widget-builder/#choose-your-dataset\" />\n          ),\n        }\n      )}\n    >\n      <DataSetChoices\n        label=\"dataSet\"\n        value={dataSet}\n        choices={\n          hasReleaseHealthFeature\n            ? [\n                ...DATASET_CHOICES,\n                [\n                  DataSet.RELEASES,\n                  <Fragment key=\"releases-dataset\">\n                    {t('Releases (Sessions, Crash rates)')} <FeatureBadge type=\"new\" />\n                  </Fragment>,\n                ],\n              ]\n            : DATASET_CHOICES\n        }\n        disabledChoices={disabledChoices}\n        onChange={newDataSet => {\n          onChange(newDataSet as DataSet);\n        }}\n      />\n    </BuildStep>\n  );\n}\n\nconst DataSetChoices = styled(RadioGroup)`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${space(2)};\n`;\n","import {useCallback} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport Field from 'sentry/components/forms/field';\nimport Input from 'sentry/components/input';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {IconAdd, IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {ReleasesProvider} from 'sentry/utils/releases/releasesProvider';\nimport {getDatasetConfig} from 'sentry/views/dashboardsV2/datasetConfig/base';\nimport ReleasesSelectControl from 'sentry/views/dashboardsV2/releasesSelectControl';\nimport {\n  DashboardFilterKeys,\n  DashboardFilters,\n  WidgetQuery,\n  WidgetType,\n} from 'sentry/views/dashboardsV2/types';\n\nimport {BuildStep} from '../buildStep';\n\ninterface Props {\n  canAddSearchConditions: boolean;\n  hideLegendAlias: boolean;\n  location: Location;\n  onAddSearchConditions: () => void;\n  onQueryChange: (queryIndex: number, newQuery: WidgetQuery) => void;\n  onQueryRemove: (queryIndex: number) => void;\n  organization: Organization;\n  queries: WidgetQuery[];\n  selection: PageFilters;\n  widgetType: WidgetType;\n  dashboardFilters?: DashboardFilters;\n  projectIds?: number[] | readonly number[];\n  queryErrors?: Record<string, any>[];\n}\n\nexport function FilterResultsStep({\n  canAddSearchConditions,\n  dashboardFilters,\n  location,\n  queries,\n  onQueryRemove,\n  onAddSearchConditions,\n  onQueryChange,\n  organization,\n  hideLegendAlias,\n  queryErrors,\n  widgetType,\n  selection,\n}: Props) {\n  const handleSearch = useCallback(\n    (queryIndex: number) => {\n      return (field: string) => {\n        const newQuery: WidgetQuery = {\n          ...queries[queryIndex],\n          conditions: field,\n        };\n\n        onQueryChange(queryIndex, newQuery);\n      };\n    },\n    [onQueryChange, queries]\n  );\n\n  const handleClose = useCallback(\n    (queryIndex: number) => {\n      return (field: string) => {\n        const newQuery: WidgetQuery = {\n          ...queries[queryIndex],\n          conditions: field,\n        };\n        onQueryChange(queryIndex, newQuery);\n      };\n    },\n    [onQueryChange, queries]\n  );\n\n  const datasetConfig = getDatasetConfig(widgetType);\n\n  return (\n    <BuildStep\n      title={t('Filter your results')}\n      description={\n        canAddSearchConditions\n          ? t(\n              'This is how you filter down your search. You can add multiple queries to compare data for each overlay.'\n            )\n          : t('This is how you filter down your search.')\n      }\n    >\n      <Feature features={['dashboards-top-level-filter']}>\n        <StyledPageFilterBar>\n          <ProjectPageFilter disabled />\n          <EnvironmentPageFilter disabled />\n          <DatePageFilter alignDropdown=\"left\" disabled />\n        </StyledPageFilterBar>\n        <FilterButtons>\n          <ReleasesProvider organization={organization} selection={selection}>\n            <StyledReleasesSelectControl\n              selectedReleases={\n                (DashboardFilterKeys.RELEASE in location.query\n                  ? decodeList(location.query[DashboardFilterKeys.RELEASE])\n                  : dashboardFilters?.[DashboardFilterKeys.RELEASE]) ?? []\n              }\n              isDisabled\n              className=\"widget-release-select\"\n            />\n          </ReleasesProvider>\n        </FilterButtons>\n      </Feature>\n      <div>\n        {queries.map((query, queryIndex) => {\n          return (\n            <QueryField\n              key={queryIndex}\n              inline={false}\n              flexibleControlStateSize\n              stacked\n              error={queryErrors?.[queryIndex]?.conditions}\n            >\n              <SearchConditionsWrapper>\n                <datasetConfig.SearchBar\n                  organization={organization}\n                  pageFilters={selection}\n                  onClose={handleClose(queryIndex)}\n                  onSearch={handleSearch(queryIndex)}\n                  widgetQuery={query}\n                />\n                {!hideLegendAlias && (\n                  <LegendAliasInput\n                    type=\"text\"\n                    name=\"name\"\n                    value={query.name}\n                    placeholder={t('Legend Alias')}\n                    onChange={event => {\n                      const newQuery: WidgetQuery = {\n                        ...queries[queryIndex],\n                        name: event.target.value,\n                      };\n                      onQueryChange(queryIndex, newQuery);\n                    }}\n                  />\n                )}\n                {queries.length > 1 && (\n                  <Button\n                    size=\"zero\"\n                    borderless\n                    onClick={() => onQueryRemove(queryIndex)}\n                    icon={<IconDelete />}\n                    title={t('Remove query')}\n                    aria-label={t('Remove query')}\n                  />\n                )}\n              </SearchConditionsWrapper>\n            </QueryField>\n          );\n        })}\n        {canAddSearchConditions && (\n          <Button size=\"sm\" icon={<IconAdd isCircled />} onClick={onAddSearchConditions}>\n            {t('Add Query')}\n          </Button>\n        )}\n      </div>\n    </BuildStep>\n  );\n}\n\nconst LegendAliasInput = styled(Input)`\n  width: 33%;\n`;\n\nconst QueryField = styled(Field)`\n  padding-bottom: ${space(1)};\n`;\n\nconst StyledPageFilterBar = styled(PageFilterBar)`\n  margin-bottom: ${space(1)};\n  margin-right: ${space(2)};\n`;\n\nconst FilterButtons = styled(ButtonBar)`\n  grid-template-columns: 1fr;\n\n  margin-bottom: ${space(1)};\n  margin-right: ${space(2)};\n\n  justify-content: space-between;\n`;\n\nconst StyledReleasesSelectControl = styled(ReleasesSelectControl)`\n  button {\n    width: 100%;\n  }\n`;\n\nconst SearchConditionsWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n\n  > * + * {\n    margin-left: ${space(1)};\n  }\n`;\n","import React, {Fragment, useMemo, useState} from 'react';\nimport {closestCenter, DndContext, DragOverlay} from '@dnd-kit/core';\nimport {arrayMove, SortableContext, verticalListSortingStrategy} from '@dnd-kit/sortable';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Field from 'sentry/components/forms/field';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {generateFieldAsString, QueryFieldValue} from 'sentry/utils/discover/fields';\nimport {FieldValueKind} from 'sentry/views/eventsV2/table/types';\nimport {generateFieldOptions} from 'sentry/views/eventsV2/utils';\n\nimport {QueryField} from './queryField';\nimport {SortableQueryField} from './sortableQueryField';\n\nconst GROUP_BY_LIMIT = 20;\nconst EMPTY_FIELD: QueryFieldValue = {kind: FieldValueKind.FIELD, field: ''};\n\ntype FieldOptions = ReturnType<typeof generateFieldOptions>;\ninterface Props {\n  fieldOptions: FieldOptions;\n  onChange: (fields: QueryFieldValue[]) => void;\n  columns?: QueryFieldValue[];\n}\n\nexport function GroupBySelector({fieldOptions, columns = [], onChange}: Props) {\n  const [activeId, setActiveId] = useState<string | null>(null);\n\n  function handleAdd() {\n    const newColumns =\n      columns.length === 0\n        ? [{...EMPTY_FIELD}, {...EMPTY_FIELD}]\n        : [...columns, {...EMPTY_FIELD}];\n    onChange(newColumns);\n  }\n\n  function handleSelect(value: QueryFieldValue, index?: number) {\n    const newColumns = [...columns];\n    if (columns.length === 0) {\n      newColumns.push(value);\n    } else if (defined(index)) {\n      newColumns[index] = value;\n    }\n    onChange(newColumns);\n  }\n\n  function handleRemove(index: number) {\n    const newColumns = [...columns];\n    newColumns.splice(index, 1);\n    onChange(newColumns);\n  }\n\n  const hasOnlySingleColumnWithValue =\n    columns.length === 1 &&\n    columns[0].kind === FieldValueKind.FIELD &&\n    columns[0]?.field !== '';\n\n  const canDrag = columns.length > 1;\n  const canDelete = canDrag || hasOnlySingleColumnWithValue;\n  const columnFieldsAsString = columns.map(generateFieldAsString);\n\n  const {filteredFieldOptions, columnsAsFieldOptions} = useMemo(() => {\n    return Object.keys(fieldOptions).reduce(\n      (acc, key) => {\n        const value = fieldOptions[key];\n        const optionInColumnsIndex = columnFieldsAsString.findIndex(\n          column => column === value.value.meta.name\n        );\n        if (optionInColumnsIndex === -1) {\n          acc.filteredFieldOptions[key] = value;\n          return acc;\n        }\n        acc.columnsAsFieldOptions[optionInColumnsIndex] = {[key]: value};\n        return acc;\n      },\n      {\n        filteredFieldOptions: {},\n        columnsAsFieldOptions: [],\n      } as {\n        columnsAsFieldOptions: FieldOptions[];\n        filteredFieldOptions: FieldOptions;\n      }\n    );\n  }, [fieldOptions, columns]);\n\n  const items = useMemo(() => {\n    return columns.reduce((acc, _column, index) => {\n      acc.push(String(index));\n      return acc;\n    }, [] as string[]);\n  }, [columns]);\n\n  return (\n    <Fragment>\n      <StyledField inline={false} flexibleControlStateSize stacked>\n        {columns.length === 0 ? (\n          <QueryField\n            value={EMPTY_FIELD}\n            fieldOptions={filteredFieldOptions}\n            onChange={value => handleSelect(value, 0)}\n            canDelete={canDelete}\n          />\n        ) : (\n          <DndContext\n            collisionDetection={closestCenter}\n            onDragStart={({active}) => {\n              setActiveId(active.id);\n            }}\n            onDragEnd={({over, active}) => {\n              setActiveId(null);\n\n              if (over) {\n                const getIndex = items.indexOf.bind(items);\n                const activeIndex = getIndex(active.id);\n                const overIndex = getIndex(over.id);\n\n                if (activeIndex !== overIndex) {\n                  onChange(arrayMove(columns, activeIndex, overIndex));\n                }\n              }\n            }}\n            onDragCancel={() => {\n              setActiveId(null);\n            }}\n          >\n            <SortableContext items={items} strategy={verticalListSortingStrategy}>\n              <SortableQueryFields>\n                {columns.map((column, index) => (\n                  <SortableQueryField\n                    key={items[index]}\n                    dragId={items[index]}\n                    value={column}\n                    fieldOptions={{\n                      ...filteredFieldOptions,\n                      ...columnsAsFieldOptions[index],\n                    }}\n                    onChange={value => handleSelect(value, index)}\n                    onDelete={() => handleRemove(index)}\n                    canDrag={canDrag}\n                    canDelete={canDelete}\n                  />\n                ))}\n              </SortableQueryFields>\n            </SortableContext>\n            <DragOverlay dropAnimation={null}>\n              {activeId ? (\n                <Ghost>\n                  <QueryField\n                    value={columns[Number(activeId)]}\n                    fieldOptions={{\n                      ...filteredFieldOptions,\n                      ...columnsAsFieldOptions[Number(activeId)],\n                    }}\n                    onChange={value => handleSelect(value, Number(activeId))}\n                    canDrag={canDrag}\n                    canDelete={canDelete}\n                  />\n                </Ghost>\n              ) : null}\n            </DragOverlay>\n          </DndContext>\n        )}\n      </StyledField>\n      {columns.length < GROUP_BY_LIMIT && (\n        <AddGroupButton size=\"sm\" icon={<IconAdd isCircled />} onClick={handleAdd}>\n          {t('Add Group')}\n        </AddGroupButton>\n      )}\n    </Fragment>\n  );\n}\n\nconst StyledField = styled(Field)`\n  padding-bottom: ${space(1)};\n`;\n\nconst AddGroupButton = styled(Button)`\n  width: min-content;\n`;\n\nconst SortableQueryFields = styled('div')`\n  display: grid;\n  grid-auto-flow: row;\n  gap: ${space(1)};\n`;\n\nconst Ghost = styled('div')`\n  position: absolute;\n  background: ${p => p.theme.background};\n  padding: ${space(0.5)};\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);\n  opacity: 0.8;\n  cursor: grabbing;\n  padding-right: ${space(2)};\n  width: 100%;\n\n  button {\n    cursor: grabbing;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    width: 710px;\n  }\n`;\n","import {t} from 'sentry/locale';\nimport {Organization, TagCollection} from 'sentry/types';\nimport {QueryFieldValue} from 'sentry/utils/discover/fields';\nimport {getDatasetConfig} from 'sentry/views/dashboardsV2/datasetConfig/base';\n\nimport {DataSet} from '../../utils';\nimport {DATA_SET_TO_WIDGET_TYPE} from '../../widgetBuilder';\nimport {BuildStep} from '../buildStep';\n\nimport {GroupBySelector} from './groupBySelector';\n\ninterface Props {\n  columns: QueryFieldValue[];\n  dataSet: DataSet;\n  onGroupByChange: (newFields: QueryFieldValue[]) => void;\n  organization: Organization;\n  tags: TagCollection;\n}\n\nexport function GroupByStep({\n  dataSet,\n  columns,\n  onGroupByChange,\n  organization,\n  tags,\n}: Props) {\n  const datasetConfig = getDatasetConfig(DATA_SET_TO_WIDGET_TYPE[dataSet]);\n  return (\n    <BuildStep\n      title={t('Group your results')}\n      description={t('This is how you can group your data result by field or tag.')}\n    >\n      <GroupBySelector\n        columns={columns}\n        fieldOptions={\n          datasetConfig.getGroupByFieldOptions\n            ? datasetConfig.getGroupByFieldOptions(organization, tags)\n            : {}\n        }\n        onChange={onGroupByChange}\n      />\n    </BuildStep>\n  );\n}\n","import {Fragment} from 'react';\nimport {DraggableSyntheticListeners, UseDraggableArguments} from '@dnd-kit/core';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {IconDelete, IconGrabbable} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {QueryFieldValue} from 'sentry/utils/discover/fields';\nimport {QueryField as TableQueryField} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValueKind} from 'sentry/views/eventsV2/table/types';\n\nexport interface QueryFieldProps {\n  fieldOptions: React.ComponentProps<typeof TableQueryField>['fieldOptions'];\n  onChange: (newValue: QueryFieldValue) => void;\n  value: QueryFieldValue;\n  attributes?: UseDraggableArguments['attributes'];\n  canDelete?: boolean;\n  canDrag?: boolean;\n  forwardRef?: React.Ref<HTMLDivElement>;\n  isDragging?: boolean;\n  listeners?: DraggableSyntheticListeners;\n  onDelete?: () => void;\n  style?: React.CSSProperties;\n}\n\nexport function QueryField({\n  onDelete,\n  onChange,\n  fieldOptions,\n  value,\n  forwardRef,\n  listeners,\n  attributes,\n  canDelete,\n  canDrag,\n  style,\n  isDragging,\n}: QueryFieldProps) {\n  return (\n    <QueryFieldWrapper ref={forwardRef} style={style}>\n      {isDragging ? null : (\n        <Fragment>\n          {canDrag && (\n            <DragAndReorderButton\n              {...listeners}\n              {...attributes}\n              aria-label={t('Drag to reorder')}\n              icon={<IconGrabbable size=\"xs\" />}\n              size=\"zero\"\n              borderless\n            />\n          )}\n          <TableQueryField\n            placeholder={t('Select group')}\n            fieldValue={value}\n            fieldOptions={fieldOptions}\n            onChange={onChange}\n            filterPrimaryOptions={option => option.value.kind !== FieldValueKind.FUNCTION}\n          />\n          {canDelete && (\n            <Button\n              size=\"zero\"\n              borderless\n              onClick={onDelete}\n              icon={<IconDelete />}\n              title={t('Remove group')}\n              aria-label={t('Remove group')}\n            />\n          )}\n        </Fragment>\n      )}\n    </QueryFieldWrapper>\n  );\n}\n\nconst DragAndReorderButton = styled(Button)`\n  height: 40px;\n`;\n\nconst QueryFieldWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n\n  > * + * {\n    margin-left: ${space(1)};\n  }\n`;\n","import {useSortable} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\nimport {useTheme} from '@emotion/react';\n\nimport {QueryField, QueryFieldProps} from './queryField';\n\ninterface SortableItemProps extends QueryFieldProps {\n  dragId: string;\n}\n\nexport function SortableQueryField({dragId, ...props}: SortableItemProps) {\n  const theme = useTheme();\n  const {listeners, setNodeRef, transform, transition, attributes, isDragging} =\n    useSortable({\n      id: dragId,\n      transition: null,\n    });\n\n  let style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    zIndex: 'auto',\n  } as React.CSSProperties;\n\n  if (isDragging) {\n    style = {\n      ...style,\n      zIndex: 100,\n      height: '40px',\n      border: `2px dashed ${theme.border}`,\n      borderRadius: theme.borderRadius,\n    };\n  }\n\n  return (\n    <QueryField\n      forwardRef={setNodeRef}\n      listeners={listeners}\n      attributes={attributes}\n      isDragging={isDragging}\n      style={style}\n      {...props}\n    />\n  );\n}\n","import {CSSProperties, useCallback, useEffect, useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport {TableCell} from 'sentry/components/charts/simpleTableChart';\nimport Field from 'sentry/components/forms/field';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport {PanelAlert} from 'sentry/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters, SelectValue} from 'sentry/types';\nimport usePrevious from 'sentry/utils/usePrevious';\nimport {DashboardFilters, DisplayType, Widget} from 'sentry/views/dashboardsV2/types';\n\nimport {getDashboardFiltersFromURL} from '../../utils';\nimport WidgetCard, {WidgetCardPanel} from '../../widgetCard';\nimport {displayTypes} from '../utils';\n\nimport {BuildStep} from './buildStep';\n\ninterface Props {\n  displayType: DisplayType;\n  location: Location;\n  onChange: (displayType: DisplayType) => void;\n  organization: Organization;\n  pageFilters: PageFilters;\n  widget: Widget;\n  dashboardFilters?: DashboardFilters;\n  error?: string;\n  noDashboardsMEPProvider?: boolean;\n}\n\nexport function VisualizationStep({\n  organization,\n  pageFilters,\n  displayType,\n  error,\n  onChange,\n  widget,\n  noDashboardsMEPProvider,\n  dashboardFilters,\n  location,\n}: Props) {\n  const [debouncedWidget, setDebouncedWidget] = useState(widget);\n\n  const previousWidget = usePrevious(widget);\n\n  // Disabling for now because we use debounce to avoid excessively hitting\n  // our endpoints, but useCallback wants an inline function and not one\n  // returned from debounce\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceWidget = useCallback(\n    debounce((value: Widget, shouldCancelUpdates: boolean) => {\n      if (shouldCancelUpdates) {\n        return;\n      }\n      setDebouncedWidget(value);\n    }, DEFAULT_DEBOUNCE_DURATION),\n    []\n  );\n\n  useEffect(() => {\n    let shouldCancelUpdates = false;\n\n    if (!isEqual(previousWidget, widget)) {\n      debounceWidget(widget, shouldCancelUpdates);\n    }\n\n    return () => {\n      shouldCancelUpdates = true;\n    };\n  }, [widget, previousWidget, debounceWidget]);\n\n  const displayOptions = Object.keys(displayTypes).map(value => ({\n    label: displayTypes[value],\n    value,\n  }));\n\n  return (\n    <BuildStep\n      title={t('Choose your visualization')}\n      description={t(\n        'This is a preview of how your widget will appear in the dashboard.'\n      )}\n    >\n      <Field error={error} inline={false} flexibleControlStateSize stacked>\n        <SelectControl\n          name=\"displayType\"\n          options={displayOptions}\n          value={displayType}\n          onChange={(option: SelectValue<DisplayType>) => {\n            onChange(option.value);\n          }}\n          styles={{\n            singleValue: (provided: CSSProperties) => ({\n              ...provided,\n              width: `calc(100% - ${space(1)})`,\n            }),\n          }}\n        />\n      </Field>\n      <VisualizationWrapper displayType={displayType}>\n        <WidgetCard\n          organization={organization}\n          selection={pageFilters}\n          widget={debouncedWidget}\n          dashboardFilters={getDashboardFiltersFromURL(location) ?? dashboardFilters}\n          isEditing={false}\n          widgetLimitReached={false}\n          renderErrorMessage={errorMessage =>\n            typeof errorMessage === 'string' && (\n              <PanelAlert type=\"error\">{errorMessage}</PanelAlert>\n            )\n          }\n          isSorting={false}\n          currentWidgetDragging={false}\n          noLazyLoad\n          showStoredAlert\n          noDashboardsMEPProvider={noDashboardsMEPProvider}\n        />\n      </VisualizationWrapper>\n    </BuildStep>\n  );\n}\n\nconst VisualizationWrapper = styled('div')<{displayType: DisplayType}>`\n  padding-right: ${space(2)};\n  ${WidgetCardPanel} {\n    height: initial;\n  }\n  ${p =>\n    p.displayType === DisplayType.TABLE &&\n    css`\n      overflow: hidden;\n      ${TableCell} {\n        /* 24px ActorContainer height + 16px top and bottom padding + 1px border = 41px */\n        height: 41px;\n      }\n      ${WidgetCardPanel} {\n        /* total size of a table, if it would display 5 rows of content */\n        height: 301px;\n      }\n    `};\n`;\n","import {t} from 'sentry/locale';\nimport {Organization, TagCollection} from 'sentry/types';\nimport {QueryFieldValue} from 'sentry/utils/discover/fields';\nimport {DisplayType, WidgetType} from 'sentry/views/dashboardsV2/types';\n\nimport {DataSet} from '../../utils';\nimport {BuildStep} from '../buildStep';\n\nimport {YAxisSelector} from './yAxisSelector';\n\ninterface Props {\n  aggregates: QueryFieldValue[];\n  dataSet: DataSet;\n  displayType: DisplayType;\n  onYAxisChange: (newFields: QueryFieldValue[]) => void;\n  organization: Organization;\n  tags: TagCollection;\n  widgetType: WidgetType;\n  queryErrors?: Record<string, any>[];\n}\n\nexport function YAxisStep({\n  displayType,\n  queryErrors,\n  aggregates,\n  onYAxisChange,\n  tags,\n  widgetType,\n}: Props) {\n  return (\n    <BuildStep\n      title={\n        displayType === DisplayType.BIG_NUMBER\n          ? t('Choose what to plot')\n          : t('Choose what to plot in the y-axis')\n      }\n      description={\n        [DisplayType.AREA, DisplayType.BAR, DisplayType.LINE].includes(displayType)\n          ? t(\n              \"This is the data you'd be visualizing in the display. If the overlay units conflict, the charts will always base it off of the first line.\"\n            )\n          : t(\"This is the data you'd be visualizing in the display.\")\n      }\n    >\n      <YAxisSelector\n        widgetType={widgetType}\n        displayType={displayType}\n        aggregates={aggregates}\n        onChange={onYAxisChange}\n        tags={tags}\n        errors={queryErrors}\n      />\n    </BuildStep>\n  );\n}\n","import {MouseEventHandler} from 'react';\n\nimport Button from 'sentry/components/button';\nimport {IconAdd} from 'sentry/icons';\n\ninterface Props {\n  onAdd: MouseEventHandler<Element>;\n  title: string;\n}\n\nexport function AddButton({title, onAdd}: Props) {\n  return (\n    <Button size=\"sm\" onClick={onAdd} icon={<IconAdd isCircled />}>\n      {title}\n    </Button>\n  );\n}\n","import {MouseEventHandler} from 'react';\n\nimport Button from 'sentry/components/button';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ninterface Props {\n  onDelete: MouseEventHandler<Element>;\n}\n\nexport function DeleteButton({onDelete}: Props) {\n  return (\n    <Button\n      size=\"zero\"\n      borderless\n      onClick={onDelete}\n      icon={<IconDelete />}\n      title={t('Remove this Y-Axis')}\n      aria-label={t('Remove this Y-Axis')}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Field from 'sentry/components/forms/field';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {TagCollection} from 'sentry/types';\nimport {QueryFieldValue} from 'sentry/utils/discover/fields';\nimport useCustomMeasurements from 'sentry/utils/useCustomMeasurements';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport {getDatasetConfig} from 'sentry/views/dashboardsV2/datasetConfig/base';\nimport {DisplayType, Widget} from 'sentry/views/dashboardsV2/types';\nimport {QueryField} from 'sentry/views/eventsV2/table/queryField';\nimport {FieldValueKind} from 'sentry/views/eventsV2/table/types';\n\nimport {AddButton} from './addButton';\nimport {DeleteButton} from './deleteButton';\n\ninterface Props {\n  aggregates: QueryFieldValue[];\n  displayType: DisplayType;\n  /**\n   * Fired when aggregates are added/removed/modified/reordered.\n   */\n  onChange: (aggregates: QueryFieldValue[]) => void;\n  tags: TagCollection;\n  widgetType: Widget['widgetType'];\n  errors?: Record<string, any>;\n  noFieldsMessage?: string;\n}\n\nexport function YAxisSelector({\n  displayType,\n  widgetType,\n  aggregates,\n  tags,\n  onChange,\n  errors,\n  noFieldsMessage,\n}: Props) {\n  const organization = useOrganization();\n  const datasetConfig = getDatasetConfig(widgetType);\n\n  const {customMeasurements} = useCustomMeasurements();\n\n  function handleAddOverlay(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const newAggregates = [\n      ...aggregates,\n      {kind: FieldValueKind.FIELD, field: ''} as QueryFieldValue,\n    ];\n    onChange(newAggregates);\n  }\n\n  function handleAddEquation(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const newAggregates = [\n      ...aggregates,\n      {kind: FieldValueKind.EQUATION, field: ''} as QueryFieldValue,\n    ];\n    onChange(newAggregates);\n  }\n\n  function handleRemoveQueryField(event: React.MouseEvent, fieldIndex: number) {\n    event.preventDefault();\n\n    const newAggregates = [...aggregates];\n    newAggregates.splice(fieldIndex, 1);\n    onChange(newAggregates);\n  }\n\n  function handleChangeQueryField(value: QueryFieldValue, fieldIndex: number) {\n    const newAggregates = [...aggregates];\n    newAggregates[fieldIndex] = value;\n    onChange(newAggregates);\n  }\n\n  const fieldError = errors?.find(error => error?.aggregates)?.aggregates;\n  const canDelete = aggregates.length > 1;\n\n  const hideAddYAxisButtons =\n    ([DisplayType.WORLD_MAP, DisplayType.BIG_NUMBER].includes(displayType) &&\n      aggregates.length === 1) ||\n    ([DisplayType.LINE, DisplayType.AREA, DisplayType.BAR].includes(displayType) &&\n      aggregates.length === 3);\n\n  return (\n    <Field inline={false} flexibleControlStateSize error={fieldError} stacked>\n      {aggregates.map((fieldValue, i) => (\n        <QueryFieldWrapper key={`${fieldValue}:${i}`}>\n          <QueryField\n            fieldValue={fieldValue}\n            fieldOptions={datasetConfig.getTableFieldOptions(\n              organization,\n              tags,\n              customMeasurements\n            )}\n            onChange={value => handleChangeQueryField(value, i)}\n            filterPrimaryOptions={datasetConfig.filterYAxisOptions?.(displayType)}\n            filterAggregateParameters={datasetConfig.filterYAxisAggregateParams?.(\n              fieldValue,\n              displayType\n            )}\n            otherColumns={aggregates}\n            noFieldsMessage={noFieldsMessage}\n          />\n          {aggregates.length > 1 &&\n            (canDelete || fieldValue.kind === FieldValueKind.EQUATION) && (\n              <DeleteButton onDelete={event => handleRemoveQueryField(event, i)} />\n            )}\n        </QueryFieldWrapper>\n      ))}\n      {!hideAddYAxisButtons && (\n        <Actions gap={1}>\n          <AddButton title={t('Add Overlay')} onAdd={handleAddOverlay} />\n          {datasetConfig.enableEquations && (\n            <AddButton title={t('Add an Equation')} onAdd={handleAddEquation} />\n          )}\n        </Actions>\n      )}\n    </Field>\n  );\n}\n\nconst QueryFieldWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  :not(:last-child) {\n    margin-bottom: ${space(1)};\n  }\n\n  > * + * {\n    margin-left: ${space(1)};\n  }\n`;\n\nconst Actions = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport type {LinkProps} from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ninterface Props {\n  goBackLocation: LinkProps['to'];\n  invalidForm: boolean;\n  onSave: (event: React.MouseEvent) => void;\n  isEditing?: boolean;\n  onDelete?: () => void;\n}\n\nexport function Footer({\n  goBackLocation,\n  onSave,\n  onDelete,\n  invalidForm,\n  isEditing,\n}: Props) {\n  return (\n    <Wrapper>\n      <Actions gap={1}>\n        <Button to={goBackLocation}>{t('Cancel')}</Button>\n        {isEditing && onDelete && (\n          <Confirm\n            priority=\"danger\"\n            message={t('Are you sure you want to delete this widget?')}\n            onConfirm={onDelete}\n          >\n            <Button priority=\"danger\">{t('Delete')}</Button>\n          </Confirm>\n        )}\n        <Button\n          priority=\"primary\"\n          onClick={onSave}\n          disabled={invalidForm}\n          title={invalidForm ? t('Required fields must be filled out') : undefined}\n        >\n          {isEditing ? t('Update Widget') : t('Add Widget')}\n        </Button>\n      </Actions>\n    </Wrapper>\n  );\n}\n\nconst Actions = styled(ButtonBar)`\n  justify-content: flex-end;\n  max-width: 1000px;\n  padding: ${space(4)} ${space(2)};\n\n  /* to match Layout.Main padding + Field padding-right */\n  padding-right: calc(${space(2)} + ${space(2)});\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${space(4)};\n\n    /* to match Layout.Main padding + Field padding-right */\n    padding-right: calc(${space(4)} + ${space(2)});\n  }\n`;\n\nconst Wrapper = styled('div')`\n  background: ${p => p.theme.background};\n  border-top: 1px solid ${p => p.theme.gray200};\n`;\n","import Breadcrumbs from 'sentry/components/breadcrumbs';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport EditableText from 'sentry/components/editableText';\nimport {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport type {LinkProps} from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\n\nimport {DashboardDetails} from '../types';\n\ninterface Props {\n  dashboardTitle: DashboardDetails['title'];\n  goBackLocation: LinkProps['to'];\n  onChangeTitle: (title: string) => void;\n  orgSlug: string;\n  title: string;\n}\n\nexport function Header({\n  title,\n  orgSlug,\n  goBackLocation,\n  dashboardTitle,\n  onChangeTitle,\n}: Props) {\n  return (\n    <Layout.Header>\n      <Layout.HeaderContent>\n        <Breadcrumbs\n          crumbs={[\n            {\n              to: `/organizations/${orgSlug}/dashboards/`,\n              label: t('Dashboards'),\n            },\n            {\n              to: goBackLocation,\n              label: dashboardTitle,\n            },\n            {label: t('Widget Builder')},\n          ]}\n        />\n        <Layout.Title>\n          <EditableText\n            aria-label={t('Widget title')}\n            value={title}\n            onChange={onChangeTitle}\n            errorMessage={t('Widget title is required')}\n            maxLength={255}\n          />\n        </Layout.Title>\n      </Layout.HeaderContent>\n\n      <Layout.HeaderActions>\n        <ButtonBar gap={1}>\n          <FeatureFeedback featureName=\"widget-builder\" />\n          <Button\n            external\n            href=\"https://docs.sentry.io/product/dashboards/custom-dashboards/#widget-builder\"\n          >\n            {t('Read the docs')}\n          </Button>\n        </ButtonBar>\n      </Layout.HeaderActions>\n    </Layout.Header>\n  );\n}\n","import Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport WidgetBuilder from './widgetBuilder';\n\ninterface WidgetBuilderProps\n  extends Omit<React.ComponentProps<typeof WidgetBuilder>, 'organization'> {}\n\nfunction WidgetBuilderContainer(props: WidgetBuilderProps) {\n  const organization = useOrganization();\n\n  return (\n    <Feature\n      features={['new-widget-builder-experience-design', 'dashboards-edit']}\n      organization={organization}\n      renderDisabled={() => (\n        <PageContent>\n          <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n        </PageContent>\n      )}\n    >\n      <WidgetBuilder {...props} organization={organization} />\n    </Feature>\n  );\n}\n\nexport {WidgetBuilderProps};\nexport default WidgetBuilderContainer;\n","import {useEffect, useMemo, useState} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport set from 'lodash/set';\n\nimport {validateWidget} from 'sentry/actionCreators/dashboards';\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {fetchOrgMembers} from 'sentry/actionCreators/members';\nimport {loadOrganizationTags} from 'sentry/actionCreators/tags';\nimport {generateOrderOptions} from 'sentry/components/dashboards/widgetQueriesForm';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport LoadingError from 'sentry/components/loadingError';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {\n  DateString,\n  Organization,\n  PageFilters,\n  SelectValue,\n  TagCollection,\n} from 'sentry/types';\nimport {defined, objectIsEmpty} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {CustomMeasurementsProvider} from 'sentry/utils/customMeasurements/customMeasurementsProvider';\nimport {\n  explodeField,\n  generateFieldAsString,\n  getColumnsAndAggregates,\n  getColumnsAndAggregatesAsStrings,\n  QueryFieldValue,\n} from 'sentry/utils/discover/fields';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport withTags from 'sentry/utils/withTags';\nimport {\n  assignTempId,\n  enforceWidgetHeightValues,\n  generateWidgetsAfterCompaction,\n  getDefaultWidgetHeight,\n} from 'sentry/views/dashboardsV2/layoutUtils';\nimport {\n  DashboardDetails,\n  DashboardListItem,\n  DashboardWidgetSource,\n  DisplayType,\n  Widget,\n  WidgetQuery,\n  WidgetType,\n} from 'sentry/views/dashboardsV2/types';\nimport {isCustomMeasurementWidget} from 'sentry/views/dashboardsV2/utils';\n\nimport {DEFAULT_STATS_PERIOD} from '../data';\nimport {getDatasetConfig} from '../datasetConfig/base';\nimport {\n  DashboardsMEPConsumer,\n  DashboardsMEPProvider,\n} from '../widgetCard/dashboardsMEPContext';\n\nimport {ColumnsStep} from './buildSteps/columnsStep';\nimport {DataSetStep} from './buildSteps/dataSetStep';\nimport {FilterResultsStep} from './buildSteps/filterResultsStep';\nimport {GroupByStep} from './buildSteps/groupByStep';\nimport {SortByStep} from './buildSteps/sortByStep';\nimport {VisualizationStep} from './buildSteps/visualizationStep';\nimport {YAxisStep} from './buildSteps/yAxisStep';\nimport {Footer} from './footer';\nimport {Header} from './header';\nimport {\n  DataSet,\n  DEFAULT_RESULTS_LIMIT,\n  getIsTimeseriesChart,\n  getParsedDefaultWidgetQuery,\n  getResultsLimit,\n  mapErrors,\n  NEW_DASHBOARD_ID,\n  normalizeQueries,\n} from './utils';\nimport {WidgetLibrary} from './widgetLibrary';\n\nconst WIDGET_TYPE_TO_DATA_SET = {\n  [WidgetType.DISCOVER]: DataSet.EVENTS,\n  [WidgetType.ISSUE]: DataSet.ISSUES,\n  [WidgetType.RELEASE]: DataSet.RELEASES,\n};\n\nexport const DATA_SET_TO_WIDGET_TYPE = {\n  [DataSet.EVENTS]: WidgetType.DISCOVER,\n  [DataSet.ISSUES]: WidgetType.ISSUE,\n  [DataSet.RELEASES]: WidgetType.RELEASE,\n};\n\ninterface RouteParams {\n  dashboardId: string;\n  orgId: string;\n  widgetIndex?: string;\n}\n\ninterface QueryData {\n  queryConditions: string[];\n  queryFields: string[];\n  queryNames: string[];\n  queryOrderby: string;\n}\n\ninterface Props extends RouteComponentProps<RouteParams, {}> {\n  dashboard: DashboardDetails;\n  onSave: (widgets: Widget[]) => void;\n  organization: Organization;\n  selection: PageFilters;\n  tags: TagCollection;\n  displayType?: DisplayType;\n  end?: DateString;\n  start?: DateString;\n  statsPeriod?: string | null;\n}\n\ninterface State {\n  dashboards: DashboardListItem[];\n  dataSet: DataSet;\n  displayType: Widget['displayType'];\n  interval: Widget['interval'];\n  limit: Widget['limit'];\n  loading: boolean;\n  prebuiltWidgetId: null | string;\n  queries: Widget['queries'];\n  title: string;\n  userHasModified: boolean;\n  errors?: Record<string, any>;\n  selectedDashboard?: SelectValue<string>;\n  widgetToBeUpdated?: Widget;\n}\n\nfunction WidgetBuilder({\n  dashboard,\n  params,\n  location,\n  organization,\n  selection,\n  start,\n  end,\n  statsPeriod,\n  onSave,\n  route,\n  router,\n  tags,\n}: Props) {\n  const {widgetIndex, orgId, dashboardId} = params;\n  const {source, displayType, defaultTitle, limit} = location.query;\n  const defaultWidgetQuery = getParsedDefaultWidgetQuery(\n    location.query.defaultWidgetQuery\n  );\n\n  // defaultTableColumns can be a single string if location.query only contains\n  // 1 value for this key. Ensure it is a string[]\n  let {defaultTableColumns}: {defaultTableColumns: string[]} = location.query;\n  if (typeof defaultTableColumns === 'string') {\n    defaultTableColumns = [defaultTableColumns];\n  }\n\n  // Feature flag for new widget builder design. This feature is still a work in progress and not yet available internally.\n  const widgetBuilderNewDesign = organization.features.includes(\n    'new-widget-builder-experience-design'\n  );\n  const hasReleaseHealthFeature = organization.features.includes('dashboards-releases');\n\n  const filteredDashboardWidgets = dashboard.widgets.filter(({widgetType}) => {\n    if (widgetType === WidgetType.RELEASE) {\n      return hasReleaseHealthFeature;\n    }\n    return true;\n  });\n\n  const isEditing = defined(widgetIndex);\n  const widgetIndexNum = Number(widgetIndex);\n  const isValidWidgetIndex =\n    widgetIndexNum >= 0 &&\n    widgetIndexNum < filteredDashboardWidgets.length &&\n    Number.isInteger(widgetIndexNum);\n  const orgSlug = organization.slug;\n\n  // Construct PageFilters object using statsPeriod/start/end props so we can\n  // render widget graph using saved timeframe from Saved/Prebuilt Query\n  const pageFilters: PageFilters = statsPeriod\n    ? {...selection, datetime: {start: null, end: null, period: statsPeriod, utc: null}}\n    : start && end\n    ? {...selection, datetime: {start, end, period: null, utc: null}}\n    : selection;\n\n  // when opening from discover or issues page, the user selects the dashboard in the widget UI\n  const notDashboardsOrigin = [\n    DashboardWidgetSource.DISCOVERV2,\n    DashboardWidgetSource.ISSUE_DETAILS,\n  ].includes(source);\n\n  const api = useApi();\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const [datasetConfig, setDataSetConfig] = useState<ReturnType<typeof getDatasetConfig>>(\n    getDatasetConfig(WidgetType.DISCOVER)\n  );\n  const [state, setState] = useState<State>(() => {\n    const defaultState: State = {\n      title: defaultTitle ?? t('Custom Widget'),\n      displayType:\n        (widgetBuilderNewDesign && displayType === DisplayType.TOP_N\n          ? DisplayType.AREA\n          : displayType) ?? DisplayType.TABLE,\n      interval: '5m',\n      queries: [],\n      limit: limit ? Number(limit) : undefined,\n      errors: undefined,\n      loading: !!notDashboardsOrigin,\n      dashboards: [],\n      userHasModified: false,\n      prebuiltWidgetId: null,\n      dataSet: DataSet.EVENTS,\n    };\n\n    if (defaultWidgetQuery) {\n      if (widgetBuilderNewDesign) {\n        defaultState.queries = [\n          {\n            ...defaultWidgetQuery,\n            orderby:\n              defaultWidgetQuery.orderby ||\n              (datasetConfig.getTableSortOptions\n                ? datasetConfig.getTableSortOptions(organization, defaultWidgetQuery)[0]\n                    .value\n                : ''),\n          },\n        ];\n      } else {\n        defaultState.queries = [{...defaultWidgetQuery}];\n      }\n\n      if (\n        ![DisplayType.TABLE, DisplayType.TOP_N].includes(defaultState.displayType) &&\n        !(\n          getIsTimeseriesChart(defaultState.displayType) &&\n          defaultState.queries[0].columns.length\n        )\n      ) {\n        defaultState.queries[0].orderby = '';\n      }\n    } else {\n      defaultState.queries = [{...datasetConfig.defaultWidgetQuery}];\n    }\n\n    return defaultState;\n  });\n\n  const [widgetToBeUpdated, setWidgetToBeUpdated] = useState<Widget | null>(null);\n\n  // For analytics around widget library selection\n  const [latestLibrarySelectionTitle, setLatestLibrarySelectionTitle] = useState<\n    string | null\n  >(null);\n\n  useEffect(() => {\n    trackAdvancedAnalyticsEvent('dashboards_views.widget_builder.opened', {\n      organization,\n      new_widget: !isEditing,\n    });\n\n    if (objectIsEmpty(tags)) {\n      loadOrganizationTags(api, organization.slug, {\n        ...selection,\n        // Pin the request to 14d to avoid timeouts, see DD-967 for\n        // more information\n        datetime: {period: '14d', start: null, end: null, utc: null},\n      });\n    }\n\n    if (isEditing && isValidWidgetIndex) {\n      const widgetFromDashboard = filteredDashboardWidgets[widgetIndexNum];\n\n      let queries;\n      let newDisplayType = widgetFromDashboard.displayType;\n      let newLimit = widgetFromDashboard.limit;\n      if (widgetFromDashboard.displayType === DisplayType.TOP_N) {\n        newLimit = DEFAULT_RESULTS_LIMIT;\n        newDisplayType = DisplayType.AREA;\n\n        queries = normalizeQueries({\n          displayType: newDisplayType,\n          queries: widgetFromDashboard.queries,\n          widgetType: widgetFromDashboard.widgetType ?? WidgetType.DISCOVER,\n          widgetBuilderNewDesign,\n        }).map(query => ({\n          ...query,\n          // Use the last aggregate because that's where the y-axis is stored\n          aggregates: query.aggregates.length\n            ? [query.aggregates[query.aggregates.length - 1]]\n            : [],\n        }));\n      } else {\n        queries = normalizeQueries({\n          displayType: newDisplayType,\n          queries: widgetFromDashboard.queries,\n          widgetType: widgetFromDashboard.widgetType ?? WidgetType.DISCOVER,\n          widgetBuilderNewDesign,\n        });\n      }\n\n      setState({\n        title: widgetFromDashboard.title,\n        displayType: newDisplayType,\n        interval: widgetFromDashboard.interval,\n        queries,\n        errors: undefined,\n        loading: false,\n        dashboards: [],\n        userHasModified: false,\n        dataSet: widgetFromDashboard.widgetType\n          ? WIDGET_TYPE_TO_DATA_SET[widgetFromDashboard.widgetType]\n          : DataSet.EVENTS,\n        limit: newLimit,\n        prebuiltWidgetId: null,\n      });\n      setDataSetConfig(getDatasetConfig(widgetFromDashboard.widgetType));\n      setWidgetToBeUpdated(widgetFromDashboard);\n    }\n    // This should only run once on mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    async function fetchDashboards() {\n      const promise: Promise<DashboardListItem[]> = api.requestPromise(\n        `/organizations/${organization.slug}/dashboards/`,\n        {\n          method: 'GET',\n          query: {sort: 'myDashboardsAndRecentlyViewed'},\n        }\n      );\n\n      try {\n        const dashboards = await promise;\n        setState(prevState => ({...prevState, dashboards, loading: false}));\n      } catch (error) {\n        const errorMessage = t('Unable to fetch dashboards');\n        addErrorMessage(errorMessage);\n        handleXhrErrorResponse(errorMessage)(error);\n        setState(prevState => ({...prevState, loading: false}));\n      }\n    }\n\n    if (notDashboardsOrigin) {\n      fetchDashboards();\n    }\n\n    if (widgetBuilderNewDesign) {\n      setState(prevState => ({\n        ...prevState,\n        selectedDashboard: {\n          label: dashboard.title,\n          value: dashboard.id || NEW_DASHBOARD_ID,\n        },\n      }));\n    }\n  }, [\n    api,\n    dashboard.id,\n    dashboard.title,\n    notDashboardsOrigin,\n    organization.slug,\n    source,\n    widgetBuilderNewDesign,\n  ]);\n\n  useEffect(() => {\n    fetchOrgMembers(api, organization.slug, selection.projects?.map(String));\n  }, [selection.projects, api, organization.slug]);\n\n  useEffect(() => {\n    const onUnload = () => {\n      if (!isSubmitting && state.userHasModified) {\n        return t('You have unsaved changes, are you sure you want to leave?');\n      }\n      return undefined;\n    };\n\n    router.setRouteLeaveHook(route, onUnload);\n  }, [isSubmitting, state.userHasModified, route, router]);\n\n  const widgetType =\n    state.dataSet === DataSet.EVENTS\n      ? WidgetType.DISCOVER\n      : state.dataSet === DataSet.ISSUES\n      ? WidgetType.ISSUE\n      : WidgetType.RELEASE;\n\n  const currentWidget = {\n    title: state.title,\n    displayType: state.displayType,\n    interval: state.interval,\n    queries: state.queries,\n    limit: state.limit,\n    widgetType,\n  };\n\n  const currentDashboardId = state.selectedDashboard?.value ?? dashboardId;\n  const queryParamsWithoutSource = omit(location.query, 'source');\n  const previousLocation = {\n    pathname:\n      defined(currentDashboardId) && currentDashboardId !== NEW_DASHBOARD_ID\n        ? `/organizations/${orgId}/dashboard/${currentDashboardId}/`\n        : `/organizations/${orgId}/dashboards/${NEW_DASHBOARD_ID}/`,\n    query: isEmpty(queryParamsWithoutSource) ? undefined : queryParamsWithoutSource,\n  };\n\n  const isTimeseriesChart = getIsTimeseriesChart(state.displayType);\n\n  const isTabularChart = [DisplayType.TABLE, DisplayType.TOP_N].includes(\n    state.displayType\n  );\n\n  function updateFieldsAccordingToDisplayType(newDisplayType: DisplayType) {\n    setState(prevState => {\n      const newState = cloneDeep(prevState);\n\n      if (!!!datasetConfig.supportedDisplayTypes.includes(newDisplayType)) {\n        // Set to Events dataset if Display Type is not supported by\n        // current dataset\n        set(\n          newState,\n          'queries',\n          normalizeQueries({\n            displayType: newDisplayType,\n            queries: [{...getDatasetConfig(WidgetType.DISCOVER).defaultWidgetQuery}],\n            widgetType: WidgetType.DISCOVER,\n            widgetBuilderNewDesign,\n          })\n        );\n        set(newState, 'dataSet', DataSet.EVENTS);\n        setDataSetConfig(getDatasetConfig(WidgetType.DISCOVER));\n        return {...newState, errors: undefined};\n      }\n\n      const normalized = normalizeQueries({\n        displayType: newDisplayType,\n        queries: prevState.queries,\n        widgetType: DATA_SET_TO_WIDGET_TYPE[prevState.dataSet],\n        widgetBuilderNewDesign,\n      });\n\n      if (newDisplayType === DisplayType.TOP_N) {\n        // TOP N display should only allow a single query\n        normalized.splice(1);\n      }\n\n      if (!prevState.userHasModified) {\n        // Default widget provided by Add to Dashboard from Discover\n        if (defaultWidgetQuery && defaultTableColumns) {\n          // If switching to Table visualization, use saved query fields for Y-Axis if user has not made query changes\n          // This is so the widget can reflect the same columns as the table in Discover without requiring additional user input\n          if (newDisplayType === DisplayType.TABLE) {\n            normalized.forEach(query => {\n              const tableQuery = getColumnsAndAggregates(defaultTableColumns);\n              query.columns = [...tableQuery.columns];\n              query.aggregates = [...tableQuery.aggregates];\n              query.fields = [...defaultTableColumns];\n              query.orderby =\n                defaultWidgetQuery.orderby ??\n                (query.fields.length ? `${query.fields[0]}` : '-');\n            });\n          } else if (newDisplayType === displayType) {\n            // When switching back to original display type, default fields back to the fields provided from the discover query\n            normalized.forEach(query => {\n              query.fields = [\n                ...defaultWidgetQuery.columns,\n                ...defaultWidgetQuery.aggregates,\n              ];\n              query.aggregates = [...defaultWidgetQuery.aggregates];\n              query.columns = [...defaultWidgetQuery.columns];\n              if (\n                !!defaultWidgetQuery.orderby &&\n                (displayType === DisplayType.TOP_N || defaultWidgetQuery.columns.length)\n              ) {\n                query.orderby = defaultWidgetQuery.orderby;\n              }\n            });\n          }\n        }\n      }\n\n      set(newState, 'queries', normalized);\n\n      if (widgetBuilderNewDesign) {\n        if (\n          getIsTimeseriesChart(newDisplayType) &&\n          normalized[0].columns.filter(column => !!column).length\n        ) {\n          // If a limit already exists (i.e. going between timeseries) then keep it,\n          // otherwise calculate a limit\n          newState.limit =\n            prevState.limit ??\n            Math.min(\n              getResultsLimit(normalized.length, normalized[0].columns.length),\n              DEFAULT_RESULTS_LIMIT\n            );\n        } else {\n          newState.limit = undefined;\n        }\n      }\n\n      set(newState, 'userHasModified', true);\n      return {...newState, errors: undefined};\n    });\n  }\n\n  function getUpdateWidgetIndex() {\n    if (!widgetToBeUpdated) {\n      return -1;\n    }\n\n    return dashboard.widgets.findIndex(widget => {\n      if (defined(widget.id)) {\n        return widget.id === widgetToBeUpdated.id;\n      }\n\n      if (defined(widget.tempId)) {\n        return widget.tempId === widgetToBeUpdated.tempId;\n      }\n\n      return false;\n    });\n  }\n\n  function handleDisplayTypeOrTitleChange<\n    F extends keyof Pick<State, 'displayType' | 'title'>\n  >(field: F, value: State[F]) {\n    trackAdvancedAnalyticsEvent('dashboards_views.widget_builder.change', {\n      from: source,\n      field,\n      value,\n      widget_type: widgetType,\n      organization,\n      new_widget: !isEditing,\n    });\n\n    setState(prevState => {\n      const newState = cloneDeep(prevState);\n      set(newState, field, value);\n      if (field === 'title') {\n        set(newState, 'userHasModified', true);\n      }\n      return {...newState, errors: undefined};\n    });\n\n    if (field === 'displayType' && value !== state.displayType) {\n      updateFieldsAccordingToDisplayType(value as DisplayType);\n    }\n  }\n\n  function handleDataSetChange(newDataSet: string) {\n    trackAdvancedAnalyticsEvent('dashboards_views.widget_builder.change', {\n      from: source,\n      field: 'dataSet',\n      value: newDataSet,\n      widget_type: widgetType,\n      organization,\n      new_widget: !isEditing,\n    });\n    setState(prevState => {\n      const newState = cloneDeep(prevState);\n      newState.queries.splice(0, newState.queries.length);\n      set(newState, 'dataSet', newDataSet);\n\n      if (newDataSet === DataSet.ISSUES) {\n        set(newState, 'displayType', DisplayType.TABLE);\n      }\n\n      const config = getDatasetConfig(DATA_SET_TO_WIDGET_TYPE[newDataSet]);\n      setDataSetConfig(config);\n\n      newState.queries.push(\n        ...(widgetToBeUpdated?.widgetType &&\n        WIDGET_TYPE_TO_DATA_SET[widgetToBeUpdated.widgetType] === newDataSet\n          ? widgetToBeUpdated.queries\n          : [{...config.defaultWidgetQuery}])\n      );\n\n      set(newState, 'userHasModified', true);\n      return {...newState, errors: undefined};\n    });\n  }\n\n  function handleAddSearchConditions() {\n    setState(prevState => {\n      const newState = cloneDeep(prevState);\n      const config = getDatasetConfig(DATA_SET_TO_WIDGET_TYPE[prevState.dataSet]);\n      const query = cloneDeep(config.defaultWidgetQuery);\n      query.fields = prevState.queries[0].fields;\n      query.aggregates = prevState.queries[0].aggregates;\n      query.columns = prevState.queries[0].columns;\n      query.orderby = prevState.queries[0].orderby;\n      newState.queries.push(query);\n      return newState;\n    });\n  }\n\n  function handleQueryRemove(index: number) {\n    setState(prevState => {\n      const newState = cloneDeep(prevState);\n      newState.queries.splice(index, 1);\n      return {...newState, errors: undefined};\n    });\n  }\n\n  function handleQueryChange(queryIndex: number, newQuery: WidgetQuery) {\n    setState(prevState => {\n      const newState = cloneDeep(prevState);\n      set(newState, `queries.${queryIndex}`, newQuery);\n      set(newState, 'userHasModified', true);\n      return {...newState, errors: undefined};\n    });\n  }\n  function getHandleColumnFieldChange(isMetricsData?: boolean) {\n    function handleColumnFieldChange(newFields: QueryFieldValue[]) {\n      const fieldStrings = newFields.map(generateFieldAsString);\n      const splitFields = getColumnsAndAggregatesAsStrings(newFields);\n      const newState = cloneDeep(state);\n      let newQuery = cloneDeep(newState.queries[0]);\n\n      newQuery.fields = fieldStrings;\n      newQuery.aggregates = splitFields.aggregates;\n      newQuery.columns = splitFields.columns;\n      newQuery.fieldAliases = splitFields.fieldAliases;\n\n      if (datasetConfig.handleColumnFieldChangeOverride) {\n        newQuery = datasetConfig.handleColumnFieldChangeOverride(newQuery);\n      }\n\n      if (datasetConfig.handleOrderByReset) {\n        // If widget is metric backed, don't default to sorting by transaction unless its the only column\n        // Sorting by transaction is not supported in metrics\n        if (\n          isMetricsData &&\n          fieldStrings.some(\n            fieldString => !['transaction', 'title'].includes(fieldString)\n          )\n        ) {\n          newQuery = datasetConfig.handleOrderByReset(\n            newQuery,\n            fieldStrings.filter(\n              fieldString => !['transaction', 'title'].includes(fieldString)\n            )\n          );\n        } else {\n          newQuery = datasetConfig.handleOrderByReset(newQuery, fieldStrings);\n        }\n      }\n\n      set(newState, 'queries', [newQuery]);\n      set(newState, 'userHasModified', true);\n      setState(newState);\n    }\n    return handleColumnFieldChange;\n  }\n\n  function handleYAxisChange(newFields: QueryFieldValue[]) {\n    const fieldStrings = newFields.map(generateFieldAsString);\n    const newState = cloneDeep(state);\n\n    const newQueries = state.queries.map(query => {\n      let newQuery = cloneDeep(query);\n\n      if (state.displayType === DisplayType.TOP_N) {\n        // Top N queries use n-1 fields for columns and the nth field for y-axis\n        newQuery.fields = [\n          ...(newQuery.fields?.slice(0, newQuery.fields.length - 1) ?? []),\n          ...fieldStrings,\n        ];\n        newQuery.aggregates = [\n          ...newQuery.aggregates.slice(0, newQuery.aggregates.length - 1),\n          ...fieldStrings,\n        ];\n      } else {\n        newQuery.fields = [...newQuery.columns, ...fieldStrings];\n        newQuery.aggregates = fieldStrings;\n      }\n\n      if (datasetConfig.handleOrderByReset) {\n        newQuery = datasetConfig.handleOrderByReset(newQuery, fieldStrings);\n      }\n\n      return newQuery;\n    });\n\n    set(newState, 'queries', newQueries);\n    set(newState, 'userHasModified', true);\n\n    const groupByFields = newState.queries[0].columns.filter(\n      field => !(field === 'equation|')\n    );\n    if (groupByFields.length === 0) {\n      set(newState, 'limit', undefined);\n    } else {\n      set(\n        newState,\n        'limit',\n        Math.min(\n          newState.limit ?? DEFAULT_RESULTS_LIMIT,\n          getResultsLimit(newQueries.length, newQueries[0].aggregates.length)\n        )\n      );\n    }\n\n    setState(newState);\n  }\n\n  function handleGroupByChange(newFields: QueryFieldValue[]) {\n    const fieldStrings = newFields.map(generateFieldAsString);\n\n    const newState = cloneDeep(state);\n\n    const newQueries = state.queries.map(query => {\n      const newQuery = cloneDeep(query);\n      newQuery.columns = fieldStrings;\n\n      if (!fieldStrings.length) {\n        // The grouping was cleared, so clear the orderby\n        newQuery.orderby = '';\n      } else if (!newQuery.orderby) {\n        const orderOptions = generateOrderOptions({\n          widgetType: widgetType ?? WidgetType.DISCOVER,\n          widgetBuilderNewDesign,\n          columns: query.columns,\n          aggregates: query.aggregates,\n        });\n        let orderOption: string;\n        // If no orderby options are available because of DISABLED_SORTS\n        if (!!!orderOptions.length) {\n          newQuery.orderby = '';\n        } else {\n          orderOption = orderOptions[0].value;\n          newQuery.orderby = `-${orderOption}`;\n        }\n      }\n      return newQuery;\n    });\n\n    set(newState, 'userHasModified', true);\n    set(newState, 'queries', newQueries);\n\n    const groupByFields = newState.queries[0].columns.filter(\n      field => !(field === 'equation|')\n    );\n\n    if (groupByFields.length === 0) {\n      set(newState, 'limit', undefined);\n    } else {\n      set(\n        newState,\n        'limit',\n        Math.min(\n          newState.limit ?? DEFAULT_RESULTS_LIMIT,\n          getResultsLimit(newQueries.length, newQueries[0].aggregates.length)\n        )\n      );\n    }\n\n    setState(newState);\n  }\n\n  function handleLimitChange(newLimit: number) {\n    setState(prevState => ({...prevState, limit: newLimit}));\n  }\n\n  function handleSortByChange(newSortBy: string) {\n    const newState = cloneDeep(state);\n\n    state.queries.forEach((query, index) => {\n      const newQuery = cloneDeep(query);\n      newQuery.orderby = newSortBy;\n      set(newState, `queries.${index}`, newQuery);\n    });\n\n    set(newState, 'userHasModified', true);\n    setState(newState);\n  }\n\n  function handleDelete() {\n    if (!isEditing) {\n      return;\n    }\n\n    setIsSubmitting(true);\n    let nextWidgetList = [...dashboard.widgets];\n    const updateWidgetIndex = getUpdateWidgetIndex();\n    nextWidgetList.splice(updateWidgetIndex, 1);\n    nextWidgetList = generateWidgetsAfterCompaction(nextWidgetList);\n\n    onSave(nextWidgetList);\n    router.push(previousLocation);\n  }\n\n  async function handleSave() {\n    const widgetData: Widget = assignTempId(currentWidget);\n\n    if (widgetToBeUpdated) {\n      widgetData.layout = widgetToBeUpdated?.layout;\n    }\n\n    // Only Table and Top N views need orderby\n    if (!widgetBuilderNewDesign && !isTabularChart) {\n      widgetData.queries.forEach(query => {\n        query.orderby = '';\n      });\n    }\n\n    if (!widgetBuilderNewDesign) {\n      widgetData.queries.forEach(query => omit(query, 'fieldAliases'));\n    }\n\n    // Only Time Series charts shall have a limit\n    if (widgetBuilderNewDesign && !isTimeseriesChart) {\n      widgetData.limit = undefined;\n    }\n\n    if (!(await dataIsValid(widgetData))) {\n      return;\n    }\n\n    if (latestLibrarySelectionTitle) {\n      // User has selected a widget library in this session\n      trackAdvancedAnalyticsEvent('dashboards_views.widget_library.add_widget', {\n        organization,\n        title: latestLibrarySelectionTitle,\n      });\n    }\n\n    setIsSubmitting(true);\n    if (notDashboardsOrigin) {\n      submitFromSelectedDashboard(widgetData);\n      return;\n    }\n\n    if (!!widgetToBeUpdated) {\n      let nextWidgetList = [...dashboard.widgets];\n      const updateWidgetIndex = getUpdateWidgetIndex();\n      const nextWidgetData = {...widgetData, id: widgetToBeUpdated.id};\n\n      // Only modify and re-compact if the default height has changed\n      if (\n        getDefaultWidgetHeight(widgetToBeUpdated.displayType) !==\n        getDefaultWidgetHeight(widgetData.displayType)\n      ) {\n        nextWidgetList[updateWidgetIndex] = enforceWidgetHeightValues(nextWidgetData);\n        nextWidgetList = generateWidgetsAfterCompaction(nextWidgetList);\n      } else {\n        nextWidgetList[updateWidgetIndex] = nextWidgetData;\n      }\n\n      onSave(nextWidgetList);\n      addSuccessMessage(t('Updated widget.'));\n      goToDashboards(dashboardId ?? NEW_DASHBOARD_ID);\n      trackAdvancedAnalyticsEvent('dashboards_views.widget_builder.save', {\n        organization,\n        data_set: widgetData.widgetType ?? WidgetType.DISCOVER,\n        new_widget: false,\n      });\n      return;\n    }\n\n    onSave([...dashboard.widgets, widgetData]);\n    addSuccessMessage(t('Added widget.'));\n    goToDashboards(dashboardId ?? NEW_DASHBOARD_ID);\n    trackAdvancedAnalyticsEvent('dashboards_views.widget_builder.save', {\n      organization,\n      data_set: widgetData.widgetType ?? WidgetType.DISCOVER,\n      new_widget: true,\n    });\n  }\n\n  async function dataIsValid(widgetData: Widget): Promise<boolean> {\n    if (notDashboardsOrigin) {\n      // Validate that a dashboard was selected since api call to /dashboards/widgets/ does not check for dashboard\n      if (\n        !state.selectedDashboard ||\n        !(\n          state.dashboards.find(\n            ({title, id}) =>\n              title === state.selectedDashboard?.label &&\n              id === state.selectedDashboard?.value\n          ) || state.selectedDashboard.value === NEW_DASHBOARD_ID\n        )\n      ) {\n        setState({\n          ...state,\n          errors: {...state.errors, dashboard: t('This field may not be blank')},\n        });\n        return false;\n      }\n    }\n\n    setState({...state, loading: true});\n\n    try {\n      await validateWidget(api, organization.slug, widgetData);\n      return true;\n    } catch (error) {\n      setState({\n        ...state,\n        loading: false,\n        errors: {...state.errors, ...mapErrors(error?.responseJSON ?? {}, {})},\n      });\n      return false;\n    }\n  }\n\n  function submitFromSelectedDashboard(widgetData: Widget) {\n    if (!state.selectedDashboard) {\n      return;\n    }\n\n    const queryData: QueryData = {\n      queryNames: [],\n      queryConditions: [],\n      queryFields: [\n        ...widgetData.queries[0].columns,\n        ...widgetData.queries[0].aggregates,\n      ],\n      queryOrderby: widgetData.queries[0].orderby,\n    };\n\n    widgetData.queries.forEach(query => {\n      queryData.queryNames.push(query.name);\n      queryData.queryConditions.push(query.conditions);\n    });\n\n    const pathQuery = {\n      displayType: widgetData.displayType,\n      interval: widgetData.interval,\n      title: widgetData.title,\n      ...queryData,\n      // Propagate page filters\n      project: pageFilters.projects,\n      environment: pageFilters.environments,\n      ...omit(pageFilters.datetime, 'period'),\n      statsPeriod: pageFilters.datetime?.period,\n    };\n\n    addSuccessMessage(t('Added widget.'));\n    goToDashboards(state.selectedDashboard.value, pathQuery);\n  }\n\n  function goToDashboards(id: string, query?: Record<string, any>) {\n    const pathQuery =\n      !isEmpty(queryParamsWithoutSource) || query\n        ? {\n            ...queryParamsWithoutSource,\n            ...query,\n          }\n        : undefined;\n\n    if (id === NEW_DASHBOARD_ID) {\n      router.push({\n        pathname: `/organizations/${organization.slug}/dashboards/new/`,\n        query: pathQuery,\n      });\n      return;\n    }\n\n    router.push({\n      pathname: `/organizations/${organization.slug}/dashboard/${id}/`,\n      query: pathQuery,\n    });\n  }\n\n  function isFormInvalid(isMetricsData?: boolean) {\n    // Block saving if the widget uses custom measurements and is not able to be fulfilled with metrics\n    const incompatibleCustomMeasurementWidget =\n      !isMetricsData && isCustomMeasurementWidget(currentWidget);\n    if (\n      incompatibleCustomMeasurementWidget ||\n      (notDashboardsOrigin && !state.selectedDashboard)\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  const canAddSearchConditions =\n    [DisplayType.LINE, DisplayType.AREA, DisplayType.BAR].includes(state.displayType) &&\n    state.queries.length < 3;\n\n  const hideLegendAlias = [\n    DisplayType.TABLE,\n    DisplayType.WORLD_MAP,\n    DisplayType.BIG_NUMBER,\n  ].includes(state.displayType);\n\n  // Tabular visualizations will always have only one query and that query cannot be deleted,\n  // so we will always have the first query available to get data from.\n  const {columns, aggregates, fields, fieldAliases = []} = state.queries[0];\n\n  const explodedColumns = useMemo(() => {\n    return columns.map((field, index) =>\n      explodeField({field, alias: fieldAliases[index]})\n    );\n  }, [columns, fieldAliases]);\n\n  const explodedAggregates = useMemo(() => {\n    return aggregates.map((field, index) =>\n      explodeField({field, alias: fieldAliases[index]})\n    );\n  }, [aggregates, fieldAliases]);\n\n  const explodedFields = defined(fields)\n    ? fields.map((field, index) => explodeField({field, alias: fieldAliases[index]}))\n    : [...explodedColumns, ...explodedAggregates];\n\n  const groupByValueSelected = currentWidget.queries.some(query => {\n    const noEmptyColumns = query.columns.filter(column => !!column);\n    return noEmptyColumns.length > 0;\n  });\n\n  // The SortBy field shall only be displayed in tabular visualizations or\n  // on time-series visualizations when at least one groupBy value is selected\n  const displaySortByStep =\n    (widgetBuilderNewDesign && isTimeseriesChart && groupByValueSelected) ||\n    isTabularChart;\n\n  if (isEditing && !isValidWidgetIndex) {\n    return (\n      <SentryDocumentTitle title={dashboard.title} orgSlug={orgSlug}>\n        <PageContent>\n          <LoadingError message={t('The widget you want to edit was not found.')} />\n        </PageContent>\n      </SentryDocumentTitle>\n    );\n  }\n\n  return (\n    <SentryDocumentTitle title={dashboard.title} orgSlug={orgSlug}>\n      <PageFiltersContainer\n        defaultSelection={{\n          datetime: {start: null, end: null, utc: null, period: DEFAULT_STATS_PERIOD},\n        }}\n      >\n        <CustomMeasurementsProvider organization={organization} selection={selection}>\n          <DashboardsMEPProvider>\n            <PageContentWithoutPadding>\n              <Header\n                orgSlug={orgSlug}\n                title={state.title}\n                dashboardTitle={dashboard.title}\n                goBackLocation={previousLocation}\n                onChangeTitle={newTitle => {\n                  handleDisplayTypeOrTitleChange('title', newTitle);\n                }}\n              />\n              <Body>\n                <MainWrapper>\n                  <Main>\n                    {!!!organization.features.includes('dashboards-top-level-filter') && (\n                      <StyledPageFilterBar condensed>\n                        <ProjectPageFilter />\n                        <EnvironmentPageFilter />\n                        <DatePageFilter alignDropdown=\"left\" />\n                      </StyledPageFilterBar>\n                    )}\n                    <BuildSteps symbol=\"colored-numeric\">\n                      <VisualizationStep\n                        location={location}\n                        widget={currentWidget}\n                        dashboardFilters={dashboard.filters}\n                        organization={organization}\n                        pageFilters={pageFilters}\n                        displayType={state.displayType}\n                        error={state.errors?.displayType}\n                        onChange={newDisplayType => {\n                          handleDisplayTypeOrTitleChange('displayType', newDisplayType);\n                        }}\n                        noDashboardsMEPProvider\n                      />\n                      <DataSetStep\n                        dataSet={state.dataSet}\n                        displayType={state.displayType}\n                        onChange={handleDataSetChange}\n                        hasReleaseHealthFeature={hasReleaseHealthFeature}\n                      />\n                      {isTabularChart && (\n                        <DashboardsMEPConsumer>\n                          {({isMetricsData}) => (\n                            <ColumnsStep\n                              dataSet={state.dataSet}\n                              queries={state.queries}\n                              displayType={state.displayType}\n                              widgetType={widgetType}\n                              queryErrors={state.errors?.queries}\n                              onQueryChange={handleQueryChange}\n                              handleColumnFieldChange={getHandleColumnFieldChange(\n                                isMetricsData\n                              )}\n                              explodedFields={explodedFields}\n                              tags={tags}\n                              organization={organization}\n                            />\n                          )}\n                        </DashboardsMEPConsumer>\n                      )}\n                      {![DisplayType.TABLE].includes(state.displayType) && (\n                        <YAxisStep\n                          dataSet={state.dataSet}\n                          displayType={state.displayType}\n                          widgetType={widgetType}\n                          queryErrors={state.errors?.queries}\n                          onYAxisChange={newFields => {\n                            handleYAxisChange(newFields);\n                          }}\n                          aggregates={explodedAggregates}\n                          tags={tags}\n                          organization={organization}\n                        />\n                      )}\n                      <FilterResultsStep\n                        queries={state.queries}\n                        hideLegendAlias={hideLegendAlias}\n                        canAddSearchConditions={canAddSearchConditions}\n                        organization={organization}\n                        queryErrors={state.errors?.queries}\n                        onAddSearchConditions={handleAddSearchConditions}\n                        onQueryChange={handleQueryChange}\n                        onQueryRemove={handleQueryRemove}\n                        selection={pageFilters}\n                        widgetType={widgetType}\n                        dashboardFilters={dashboard.filters}\n                        location={location}\n                      />\n                      {widgetBuilderNewDesign && isTimeseriesChart && (\n                        <GroupByStep\n                          columns={columns\n                            .filter(field => !(field === 'equation|'))\n                            .map((field, index) =>\n                              explodeField({field, alias: fieldAliases[index]})\n                            )}\n                          onGroupByChange={handleGroupByChange}\n                          organization={organization}\n                          tags={tags}\n                          dataSet={state.dataSet}\n                        />\n                      )}\n                      {displaySortByStep && (\n                        <SortByStep\n                          limit={state.limit}\n                          displayType={state.displayType}\n                          queries={state.queries}\n                          dataSet={state.dataSet}\n                          widgetBuilderNewDesign={widgetBuilderNewDesign}\n                          error={state.errors?.orderby}\n                          onSortByChange={handleSortByChange}\n                          onLimitChange={handleLimitChange}\n                          organization={organization}\n                          widgetType={widgetType}\n                          tags={tags}\n                        />\n                      )}\n                    </BuildSteps>\n                  </Main>\n                  <DashboardsMEPConsumer>\n                    {({isMetricsData}) => (\n                      <Footer\n                        goBackLocation={previousLocation}\n                        isEditing={isEditing}\n                        onSave={handleSave}\n                        onDelete={handleDelete}\n                        invalidForm={isFormInvalid(isMetricsData)}\n                      />\n                    )}\n                  </DashboardsMEPConsumer>\n                </MainWrapper>\n                <Side>\n                  <WidgetLibrary\n                    organization={organization}\n                    widgetBuilderNewDesign={widgetBuilderNewDesign}\n                    selectedWidgetId={\n                      state.userHasModified ? null : state.prebuiltWidgetId\n                    }\n                    onWidgetSelect={prebuiltWidget => {\n                      setLatestLibrarySelectionTitle(prebuiltWidget.title);\n                      setDataSetConfig(\n                        getDatasetConfig(prebuiltWidget.widgetType || WidgetType.DISCOVER)\n                      );\n                      const {id, ...prebuiltWidgetProps} = prebuiltWidget;\n                      setState({\n                        ...state,\n                        ...prebuiltWidgetProps,\n                        dataSet: prebuiltWidget.widgetType\n                          ? WIDGET_TYPE_TO_DATA_SET[prebuiltWidget.widgetType]\n                          : DataSet.EVENTS,\n                        userHasModified: false,\n                        prebuiltWidgetId: id || null,\n                      });\n                    }}\n                    bypassOverwriteModal={!state.userHasModified}\n                  />\n                </Side>\n              </Body>\n            </PageContentWithoutPadding>\n          </DashboardsMEPProvider>\n        </CustomMeasurementsProvider>\n      </PageFiltersContainer>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withPageFilters(withTags(WidgetBuilder));\n\nconst PageContentWithoutPadding = styled(PageContent)`\n  padding: 0;\n`;\n\nconst StyledPageFilterBar = styled(PageFilterBar)`\n  margin-bottom: ${space(2)};\n`;\n\nconst BuildSteps = styled(List)`\n  gap: ${space(4)};\n  max-width: 100%;\n`;\n\nconst Body = styled(Layout.Body)`\n  && {\n    gap: 0;\n    padding: 0;\n  }\n\n  grid-template-rows: 1fr;\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    grid-template-columns: minmax(100px, auto) 400px;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\n// HACK: Since we add 30px of padding to the ListItems\n// there is 30px of overlap when the screen is just above 1200px.\n// When we're up to 1230px (1200 + 30 to account for the padding)\n// we decrease the width of ListItems by 30px\nconst Main = styled(Layout.Main)`\n  max-width: 1000px;\n  flex: 1;\n\n  padding: ${space(4)} ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${space(4)};\n  }\n\n  @media (max-width: calc(${p => p.theme.breakpoints.large} + ${space(4)})) {\n    ${ListItem} {\n      width: calc(100% - ${space(4)});\n    }\n  }\n`;\n\nconst Side = styled(Layout.Side)`\n  padding: ${space(4)} ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    border-top: 1px solid ${p => p.theme.gray200};\n    grid-row: 2/2;\n    grid-column: 1/-1;\n    max-width: 100%;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    border-left: 1px solid ${p => p.theme.gray200};\n\n    /* to be consistent with Layout.Body in other verticals */\n    padding-right: ${space(4)};\n    max-width: 400px;\n  }\n`;\n\nconst MainWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    grid-column: 1/-1;\n  }\n`;\n","import {Fragment} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {openWidgetBuilderOverwriteModal} from 'sentry/actionCreators/modal';\nimport {OverwriteWidgetModalProps} from 'sentry/components/modals/widgetBuilder/overwriteWidgetModal';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {DisplayType, WidgetType} from 'sentry/views/dashboardsV2/types';\nimport {\n  getTopNConvertedDefaultWidgets,\n  WidgetTemplate,\n} from 'sentry/views/dashboardsV2/widgetLibrary/data';\n\nimport {normalizeQueries} from '../utils';\n\nimport {Card} from './card';\n\ninterface Props {\n  bypassOverwriteModal: boolean;\n  onWidgetSelect: (widget: WidgetTemplate) => void;\n  organization: Organization;\n  selectedWidgetId: string | null;\n  widgetBuilderNewDesign: boolean;\n}\n\nexport function WidgetLibrary({\n  bypassOverwriteModal,\n  onWidgetSelect,\n  widgetBuilderNewDesign,\n  organization,\n  selectedWidgetId,\n}: Props) {\n  const theme = useTheme();\n  let defaultWidgets = getTopNConvertedDefaultWidgets();\n  if (!!!organization.features.includes('dashboards-releases')) {\n    defaultWidgets = defaultWidgets.filter(\n      widget => !!!(widget.widgetType === WidgetType.RELEASE)\n    );\n  }\n\n  function getLibrarySelectionHandler(\n    widget: OverwriteWidgetModalProps['widget'],\n    iconColor: OverwriteWidgetModalProps['iconColor']\n  ) {\n    return function handleWidgetSelect() {\n      if (bypassOverwriteModal) {\n        onWidgetSelect(widget);\n        return;\n      }\n\n      openWidgetBuilderOverwriteModal({\n        onConfirm: () => onWidgetSelect(widget),\n        widget,\n        iconColor,\n      });\n    };\n  }\n\n  return (\n    <Fragment>\n      <Header>{t('Widget Library')}</Header>\n      <WidgetLibraryWrapper>\n        {defaultWidgets.map((widget, index) => {\n          const iconColor = theme.charts.getColorPalette(defaultWidgets.length - 2)[\n            index\n          ];\n\n          const displayType =\n            widgetBuilderNewDesign && widget.displayType === DisplayType.TOP_N\n              ? DisplayType.TABLE\n              : widget.displayType;\n\n          const normalizedQueries = normalizeQueries({\n            displayType,\n            queries: widget.queries,\n            widgetBuilderNewDesign,\n            widgetType: widget.widgetType,\n          });\n\n          const newWidget = {\n            ...widget,\n            displayType,\n            queries: normalizedQueries,\n          };\n\n          return (\n            <CardHoverWrapper\n              selected={selectedWidgetId === widget.id}\n              key={widget.title}\n              onClick={getLibrarySelectionHandler(newWidget, iconColor)}\n            >\n              <Card widget={newWidget} iconColor={iconColor} />\n            </CardHoverWrapper>\n          );\n        })}\n      </WidgetLibraryWrapper>\n    </Fragment>\n  );\n}\n\nconst WidgetLibraryWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled('h5')`\n  /* to be aligned with the 30px of Layout.main padding */\n  padding-left: calc(${space(2)} - ${space(0.25)});\n`;\n\nconst CardHoverWrapper = styled('div')<{selected: boolean}>`\n  /* to be aligned with the 30px of Layout.main padding - 1px of the widget item border */\n  padding: calc(${space(2)} - 3px);\n  border: 1px solid transparent;\n  border-radius: ${p => p.theme.borderRadius};\n  transition: border-color 0.3s ease;\n  cursor: pointer;\n  &:hover {\n    border-color: ${p => p.theme.gray100};\n  }\n  ${p => p.selected && `border-color: ${p.theme.gray200};`}\n`;\n","import {t} from 'sentry/locale';\nimport {TOP_N} from 'sentry/utils/discover/types';\n\nimport {DisplayType, Widget, WidgetType} from '../types';\n\nexport type WidgetTemplate = Widget & {\n  description: string;\n};\n\nexport const DEFAULT_WIDGETS: Readonly<Array<WidgetTemplate>> = [\n  {\n    id: 'duration-distribution',\n    title: t('Duration Distribution'),\n    description: t('Compare transaction durations across different percentiles.'),\n    displayType: DisplayType.LINE,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'event.type:transaction',\n        fields: [\n          'p50(transaction.duration)',\n          'p75(transaction.duration)',\n          'p95(transaction.duration)',\n        ],\n        aggregates: [\n          'p50(transaction.duration)',\n          'p75(transaction.duration)',\n          'p95(transaction.duration)',\n        ],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'high-throughput-transactions',\n    title: t('High Throughput Transactions'),\n    description: t('Top 5 transactions with the largest volume.'),\n    displayType: DisplayType.TOP_N,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'event.type:transaction',\n        fields: ['transaction', 'count()'],\n        aggregates: ['count()'],\n        columns: ['transaction'],\n        orderby: '-count()',\n      },\n    ],\n  },\n  {\n    id: 'crash-rates-recent-releases',\n    title: t('Crash Rates for Recent Releases'),\n    description: t('Percentage of crashed sessions for latest releases.'),\n    displayType: DisplayType.LINE,\n    widgetType: WidgetType.RELEASE,\n    interval: '5m',\n    limit: 8,\n    queries: [\n      {\n        name: '',\n        conditions: '',\n        fields: ['crash_rate(session)', 'release'],\n        aggregates: ['crash_rate(session)'],\n        columns: ['release'],\n        orderby: '-release',\n      },\n    ],\n  },\n  {\n    id: 'session-health',\n    title: t('Session Health'),\n    description: t('Number of abnormal, crashed, errored and healthy sessions.'),\n    displayType: DisplayType.TABLE,\n    widgetType: WidgetType.RELEASE,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: '',\n        fields: ['session.status', 'sum(session)'],\n        aggregates: ['sum(session)'],\n        columns: ['session.status'],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'lcp-country',\n    title: t('LCP by Country'),\n    description: t('Density map showing page load times by country.'),\n    displayType: DisplayType.WORLD_MAP,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'has:geo.country_code',\n        fields: ['p75(measurements.lcp)'],\n        aggregates: ['p75(measurements.lcp)'],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'miserable-users',\n    title: t('Miserable Users'),\n    description: t('Unique users who have experienced slow load times.'),\n    displayType: DisplayType.BIG_NUMBER,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: '',\n        fields: ['count_miserable(user,300)'],\n        aggregates: ['count_miserable(user,300)'],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'slow-vs-fast',\n    title: t('Slow vs. Fast Transactions'),\n    description: t('Percentage breakdown of transaction durations over and under 300ms.'),\n    displayType: DisplayType.BAR,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'event.type:transaction',\n        fields: [\n          'equation|(count_if(transaction.duration,greater,300) / count()) * 100',\n          'equation|(count_if(transaction.duration,lessOrEquals,300) / count()) * 100',\n        ],\n        aggregates: [\n          'equation|(count_if(transaction.duration,greater,300) / count()) * 100',\n          'equation|(count_if(transaction.duration,lessOrEquals,300) / count()) * 100',\n        ],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n  {\n    id: 'issue-for-review',\n    title: t('Issues For Review'),\n    description: t('Most recently seen unresolved issues for review.'),\n    displayType: DisplayType.TABLE,\n    widgetType: WidgetType.ISSUE,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'is:unresolved is:for_review',\n        fields: ['issue', 'assignee', 'events', 'title'],\n        aggregates: [],\n        columns: ['issue', 'assignee', 'events', 'title'],\n        orderby: 'date',\n      },\n    ],\n  },\n  {\n    id: 'top-unhandled',\n    title: t('Top Unhandled Error Types'),\n    description: t('Most frequently encountered unhandled errors.'),\n    displayType: DisplayType.TOP_N,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'error.unhandled:true',\n        fields: ['error.type', 'count()'],\n        aggregates: ['count()'],\n        columns: ['error.type'],\n        orderby: '-count()',\n      },\n    ],\n  },\n  {\n    id: 'users-affected',\n    title: t('Users Affected by Errors'),\n    description: t('Footprint of unique users affected by errors.'),\n    displayType: DisplayType.LINE,\n    widgetType: WidgetType.DISCOVER,\n    interval: '5m',\n    queries: [\n      {\n        name: '',\n        conditions: 'event.type:error',\n        fields: ['count_unique(user)', 'count()'],\n        aggregates: ['count_unique(user)', 'count()'],\n        columns: [],\n        orderby: '',\n      },\n    ],\n  },\n];\n\nexport function getTopNConvertedDefaultWidgets(): Readonly<Array<WidgetTemplate>> {\n  return DEFAULT_WIDGETS.map(widget => {\n    if (widget.displayType === DisplayType.TOP_N) {\n      return {\n        ...widget,\n        displayType: DisplayType.AREA,\n        limit: TOP_N,\n      };\n    }\n    return widget;\n  });\n}\n","var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n"],"names":["openModal","Button","IconMegaphone","t","FeatureFeedback","feedbackTypes","featureName","buttonProps","handleClick","mod","FeedbackModal","modalCss","deps","createContext","CustomMeasurementsContext","undefined","useEffect","useState","addErrorMessage","normalizeDateTimeParams","handleXhrErrorResponse","useApi","fetchCustomMeasurements","api","organization","selection","query","datetime","projects","project","map","String","requestPromise","slug","method","CustomMeasurementsProvider","children","state","setState","customMeasurements","shouldCancelRequest","features","includes","then","response","newCustomMeasurements","Object","keys","reduce","acc","customMeasurement","key","name","functions","catch","e","errorResponse","responseJSON","defined","formatBytesBase2","DAY","formatAbbreviatedNumber","formatPercentage","getDuration","HOUR","MINUTE","SECOND","WEEK","tooltipFormatter","value","outputType","tooltipFormatterUsingAggregateOutputType","type","toLocaleString","toString","axisLabelFormatter","abbreviation","durationUnit","axisLabelFormatterUsingAggregateOutputType","axisDuration","categorizeDuration","label","toFixed","findRangeOfMultiSeries","series","legend","range","data","minSeries","maxSeries","forEach","idx","seriesName","selected","length","max","Math","filter","min","getDurationUnit","avg","numOfDigits","useContext","useCustomMeasurements","customMeasurementsContext","Error","Field","space","DisplayType","ColumnEditCollection","ColumnFields","displayType","fieldOptions","widgetType","fields","errors","onChange","filterAggregateParameters","filterPrimaryOptions","noFieldsMessage","find","error","TABLE","slice","newColumns","ColumnCollectionEdit","ExternalLink","tct","getDatasetConfig","DataSet","BuildStep","ColumnsStep","dataSet","handleColumnFieldChange","queryErrors","explodedFields","tags","datasetConfig","ISSUES","fieldTagLink","RELEASES","functionLink","getTableFieldOptions","filterAggregateParams","filterTableOptions","Fragment","FeatureBadge","RadioGroup","DATASET_CHOICES","EVENTS","DataSetStep","hasReleaseHealthFeature","disabledChoices","push","WORLD_MAP","link","newDataSet","DataSetChoices","useCallback","Feature","ButtonBar","DatePageFilter","EnvironmentPageFilter","Input","PageFilterBar","ProjectPageFilter","IconAdd","IconDelete","decodeList","ReleasesProvider","ReleasesSelectControl","DashboardFilterKeys","FilterResultsStep","canAddSearchConditions","dashboardFilters","location","queries","onQueryRemove","onAddSearchConditions","onQueryChange","hideLegendAlias","handleSearch","queryIndex","field","newQuery","conditions","handleClose","RELEASE","event","target","LegendAliasInput","QueryField","StyledPageFilterBar","FilterButtons","StyledReleasesSelectControl","SearchConditionsWrapper","React","useMemo","closestCenter","DndContext","DragOverlay","arrayMove","SortableContext","verticalListSortingStrategy","generateFieldAsString","FieldValueKind","SortableQueryField","GROUP_BY_LIMIT","EMPTY_FIELD","kind","FIELD","GroupBySelector","columns","activeId","setActiveId","handleAdd","handleSelect","index","handleRemove","splice","hasOnlySingleColumnWithValue","canDrag","canDelete","columnFieldsAsString","filteredFieldOptions","columnsAsFieldOptions","optionInColumnsIndex","findIndex","column","meta","items","_column","active","id","over","getIndex","indexOf","bind","activeIndex","overIndex","Number","StyledField","AddGroupButton","SortableQueryFields","Ghost","p","theme","background","borderRadius","breakpoints","small","DATA_SET_TO_WIDGET_TYPE","GroupByStep","onGroupByChange","getGroupByFieldOptions","IconGrabbable","TableQueryField","onDelete","forwardRef","listeners","attributes","style","isDragging","option","FUNCTION","DragAndReorderButton","QueryFieldWrapper","useSortable","CSS","useTheme","dragId","props","setNodeRef","transform","transition","Transform","zIndex","height","border","css","debounce","isEqual","TableCell","SelectControl","PanelAlert","DEFAULT_DEBOUNCE_DURATION","usePrevious","getDashboardFiltersFromURL","WidgetCard","WidgetCardPanel","displayTypes","VisualizationStep","pageFilters","widget","noDashboardsMEPProvider","debouncedWidget","setDebouncedWidget","previousWidget","debounceWidget","shouldCancelUpdates","displayOptions","singleValue","provided","width","errorMessage","VisualizationWrapper","YAxisSelector","YAxisStep","aggregates","onYAxisChange","BIG_NUMBER","AREA","BAR","LINE","AddButton","title","onAdd","DeleteButton","useOrganization","handleAddOverlay","preventDefault","newAggregates","handleAddEquation","EQUATION","handleRemoveQueryField","fieldIndex","handleChangeQueryField","fieldError","hideAddYAxisButtons","fieldValue","i","filterYAxisOptions","filterYAxisAggregateParams","enableEquations","Actions","Confirm","Footer","goBackLocation","onSave","invalidForm","isEditing","medium","Wrapper","gray200","Breadcrumbs","EditableText","Layout","Header","orgSlug","dashboardTitle","onChangeTitle","to","Alert","PageContent","WidgetBuilder","WidgetBuilderContainer","cloneDeep","isEmpty","omit","set","validateWidget","addSuccessMessage","fetchOrgMembers","loadOrganizationTags","generateOrderOptions","List","ListItem","LoadingError","PageFiltersContainer","SentryDocumentTitle","objectIsEmpty","trackAdvancedAnalyticsEvent","explodeField","getColumnsAndAggregates","getColumnsAndAggregatesAsStrings","withPageFilters","withTags","assignTempId","enforceWidgetHeightValues","generateWidgetsAfterCompaction","getDefaultWidgetHeight","DashboardWidgetSource","WidgetType","isCustomMeasurementWidget","DEFAULT_STATS_PERIOD","DashboardsMEPConsumer","DashboardsMEPProvider","SortByStep","DEFAULT_RESULTS_LIMIT","getIsTimeseriesChart","getParsedDefaultWidgetQuery","getResultsLimit","mapErrors","NEW_DASHBOARD_ID","normalizeQueries","WidgetLibrary","WIDGET_TYPE_TO_DATA_SET","DISCOVER","ISSUE","dashboard","params","start","end","statsPeriod","route","router","widgetIndex","orgId","dashboardId","source","defaultTitle","limit","defaultWidgetQuery","defaultTableColumns","widgetBuilderNewDesign","filteredDashboardWidgets","widgets","widgetIndexNum","isValidWidgetIndex","isInteger","period","utc","notDashboardsOrigin","DISCOVERV2","ISSUE_DETAILS","isSubmitting","setIsSubmitting","setDataSetConfig","defaultState","TOP_N","interval","loading","dashboards","userHasModified","prebuiltWidgetId","orderby","getTableSortOptions","widgetToBeUpdated","setWidgetToBeUpdated","latestLibrarySelectionTitle","setLatestLibrarySelectionTitle","new_widget","widgetFromDashboard","newDisplayType","newLimit","fetchDashboards","promise","sort","prevState","selectedDashboard","onUnload","setRouteLeaveHook","currentWidget","currentDashboardId","queryParamsWithoutSource","previousLocation","pathname","isTimeseriesChart","isTabularChart","updateFieldsAccordingToDisplayType","newState","supportedDisplayTypes","normalized","tableQuery","getUpdateWidgetIndex","tempId","handleDisplayTypeOrTitleChange","from","widget_type","handleDataSetChange","config","handleAddSearchConditions","handleQueryRemove","handleQueryChange","getHandleColumnFieldChange","isMetricsData","newFields","fieldStrings","splitFields","fieldAliases","handleColumnFieldChangeOverride","handleOrderByReset","some","fieldString","handleYAxisChange","newQueries","groupByFields","handleGroupByChange","orderOptions","orderOption","handleLimitChange","handleSortByChange","newSortBy","handleDelete","nextWidgetList","updateWidgetIndex","handleSave","widgetData","layout","dataIsValid","submitFromSelectedDashboard","nextWidgetData","goToDashboards","data_set","queryData","queryNames","queryConditions","queryFields","queryOrderby","pathQuery","environment","environments","isFormInvalid","incompatibleCustomMeasurementWidget","explodedColumns","alias","explodedAggregates","groupByValueSelected","noEmptyColumns","displaySortByStep","newTitle","filters","prebuiltWidget","prebuiltWidgetProps","PageContentWithoutPadding","BuildSteps","Body","large","xlarge","Main","Side","MainWrapper","openWidgetBuilderOverwriteModal","getTopNConvertedDefaultWidgets","Card","bypassOverwriteModal","onWidgetSelect","selectedWidgetId","defaultWidgets","getLibrarySelectionHandler","iconColor","handleWidgetSelect","onConfirm","charts","getColorPalette","normalizedQueries","newWidget","WidgetLibraryWrapper","CardHoverWrapper","gray100","DEFAULT_WIDGETS","description"],"sourceRoot":""}