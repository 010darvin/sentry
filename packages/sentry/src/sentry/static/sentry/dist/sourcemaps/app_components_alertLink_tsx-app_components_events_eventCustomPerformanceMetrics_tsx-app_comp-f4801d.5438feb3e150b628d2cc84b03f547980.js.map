{"version":3,"file":"chunks/app_components_alertLink_tsx-app_components_events_eventCustomPerformanceMetrics_tsx-app_comp-f4801d.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/alertLink.tsx","webpack:///./app/components/events/eventCustomPerformanceMetrics.tsx","webpack:///./app/components/events/eventVitals.tsx","webpack:///./app/components/keyValueTable.tsx","webpack:///./app/components/tagsTable.tsx","webpack:///./app/components/tagsTableRow.tsx","webpack:///./app/utils/measurements/index.tsx","webpack:///./app/utils/performance/quickTrace/quickTraceQuery.tsx","webpack:///./app/utils/performance/quickTrace/traceFullQuery.tsx","webpack:///./app/utils/performance/quickTrace/traceLiteQuery.tsx","webpack:///./app/utils/performance/quickTrace/traceMetaQuery.tsx","webpack:///./app/views/dashboardsV2/utils.tsx","webpack:///./app/views/performance/transactionDetails/eventMetas.tsx","webpack:///./app/views/performance/transactionDetails/quickTraceMeta.tsx","webpack:///./app/views/performance/transactionDetails/styles.tsx","webpack:///../node_modules/lodash/_charsStartIndex.js","webpack:///../node_modules/lodash/trimStart.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {IconChevron} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  children?: React.ReactNode;\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  openInNewTab: boolean;\n  priority: Priority;\n  size: Size;\n  withoutMarginBottom: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & Partial<DefaultProps> & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nfunction AlertLink({\n  size = 'normal',\n  priority = 'warning',\n  icon,\n  children,\n  onClick,\n  withoutMarginBottom = false,\n  openInNewTab = false,\n  to,\n  href,\n  ['data-test-id']: dataTestId,\n}: Props) {\n  return (\n    <StyledLink\n      data-test-id={dataTestId}\n      to={to}\n      href={href}\n      onClick={onClick}\n      size={size}\n      priority={priority}\n      withoutMarginBottom={withoutMarginBottom}\n      openInNewTab={openInNewTab}\n    >\n      {icon && <IconWrapper>{icon}</IconWrapper>}\n      <AlertLinkText>{children}</AlertLinkText>\n      <IconLink>\n        <IconChevron direction=\"right\" />\n      </IconLink>\n    </StyledLink>\n  );\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  align-items: center;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeMedium};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  height: calc(${p => p.theme.fontSizeMedium} * ${p => p.theme.text.lineHeightBody});\n  margin-right: ${space(1)};\n  align-items: center;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin-right: 0;\n  margin-left: ${space(1)};\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: ${p => p.theme.text.lineHeightBody};\n  flex-grow: 1;\n`;\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {\n  DURATION_UNITS,\n  FIELD_FORMATTERS,\n  PERCENTAGE_UNITS,\n  SIZE_UNITS,\n} from 'sentry/utils/discover/fieldRenderers';\nimport {isCustomMeasurement} from 'sentry/views/dashboardsV2/utils';\n\ntype Props = {\n  event: Event;\n  location: Location;\n  organization: Organization;\n};\n\nfunction isNotMarkMeasurement(field: string) {\n  return !field.startsWith('mark.');\n}\n\nexport default function EventCustomPerformanceMetrics({\n  event,\n  location,\n  organization,\n}: Props) {\n  const measurementNames = Object.keys(event.measurements ?? {})\n    .filter(name => isCustomMeasurement(`measurements.${name}`))\n    .filter(isNotMarkMeasurement)\n    .sort();\n\n  if (measurementNames.length === 0) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <SectionHeading>{t('Custom Performance Metrics')}</SectionHeading>\n      <FeatureBadge type=\"beta\" />\n      <Measurements>\n        {measurementNames.map(name => {\n          return (\n            <EventCustomPerformanceMetric\n              key={name}\n              event={event}\n              name={name}\n              location={location}\n              organization={organization}\n            />\n          );\n        })}\n      </Measurements>\n    </Container>\n  );\n}\n\ntype EventCustomPerformanceMetricProps = Props & {\n  name: string;\n};\n\nfunction getFieldTypeFromUnit(unit) {\n  if (unit) {\n    if (DURATION_UNITS[unit]) {\n      return 'duration';\n    }\n    if (SIZE_UNITS[unit]) {\n      return 'size';\n    }\n    if (PERCENTAGE_UNITS.includes(unit)) {\n      return 'percentage';\n    }\n    if (unit === 'none') {\n      return 'integer';\n    }\n  }\n  return 'number';\n}\n\nfunction EventCustomPerformanceMetric({\n  event,\n  name,\n  location,\n  organization,\n}: EventCustomPerformanceMetricProps) {\n  const {value, unit} = event.measurements?.[name] ?? {};\n  if (value === null) {\n    return null;\n  }\n\n  const fieldType = getFieldTypeFromUnit(unit);\n  const rendered = fieldType\n    ? FIELD_FORMATTERS[fieldType].renderFunc(\n        name,\n        {[name]: value},\n        {location, organization, unit}\n      )\n    : value;\n\n  return (\n    <StyledPanel>\n      <div>{name}</div>\n      <ValueRow>\n        <Value>{rendered}</Value>\n      </ValueRow>\n    </StyledPanel>\n  );\n}\n\nconst Measurements = styled('div')`\n  display: grid;\n  grid-column-gap: ${space(1)};\n`;\n\nconst Container = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-bottom: ${space(4)};\n`;\n\nconst StyledPanel = styled(Panel)`\n  padding: ${space(1)} ${space(1.5)};\n  margin-bottom: ${space(1)};\n`;\n\nconst ValueRow = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Value = styled('span')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport {Panel} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconFire, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\nimport {formattedValue} from 'sentry/utils/measurements/index';\nimport {\n  MOBILE_VITAL_DETAILS,\n  WEB_VITAL_DETAILS,\n} from 'sentry/utils/performance/vitals/constants';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\nimport {IconSize} from 'sentry/utils/theme';\n\nfunction isOutdatedSdk(event: Event): boolean {\n  if (!event.sdk?.version) {\n    return false;\n  }\n\n  const sdkVersion = event.sdk.version;\n  return (\n    sdkVersion.startsWith('5.26.') ||\n    sdkVersion.startsWith('5.27.0') ||\n    sdkVersion.startsWith('5.27.1') ||\n    sdkVersion.startsWith('5.27.2')\n  );\n}\n\ntype Props = {\n  event: Event;\n};\n\nexport default function EventVitals({event}: Props) {\n  return (\n    <Fragment>\n      <WebVitals event={event} />\n      <MobileVitals event={event} />\n    </Fragment>\n  );\n}\n\nfunction WebVitals({event}: Props) {\n  const measurementNames = Object.keys(event.measurements ?? {})\n    .filter(name => Boolean(WEB_VITAL_DETAILS[`measurements.${name}`]))\n    .sort();\n\n  if (measurementNames.length === 0) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <SectionHeading>\n        {t('Web Vitals')}\n        {isOutdatedSdk(event) && (\n          <WarningIconContainer size=\"sm\">\n            <Tooltip\n              title={t(\n                'These vitals were collected using an outdated SDK version and may not be accurate. To ensure accurate web vitals in new transaction events, please update your SDK to the latest version.'\n              )}\n              position=\"top\"\n              containerDisplayMode=\"inline-block\"\n            >\n              <IconWarning size=\"sm\" />\n            </Tooltip>\n          </WarningIconContainer>\n        )}\n      </SectionHeading>\n      <Measurements>\n        {measurementNames.map(name => {\n          // Measurements are referred to by their full name `measurements.<name>`\n          // here but are stored using their abbreviated name `<name>`. Make sure\n          // to convert it appropriately.\n          const measurement = `measurements.${name}`;\n          const vital = WEB_VITAL_DETAILS[measurement];\n\n          return <EventVital key={name} event={event} name={name} vital={vital} />;\n        })}\n      </Measurements>\n    </Container>\n  );\n}\n\nfunction MobileVitals({event}: Props) {\n  const measurementNames = Object.keys(event.measurements ?? {})\n    .filter(name => Boolean(MOBILE_VITAL_DETAILS[`measurements.${name}`]))\n    .sort();\n\n  if (measurementNames.length === 0) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <SectionHeading>{t('Mobile Vitals')}</SectionHeading>\n      <Measurements>\n        {measurementNames.map(name => {\n          // Measurements are referred to by their full name `measurements.<name>`\n          // here but are stored using their abbreviated name `<name>`. Make sure\n          // to convert it appropriately.\n          const measurement = `measurements.${name}`;\n          const vital = MOBILE_VITAL_DETAILS[measurement];\n\n          return <EventVital key={name} event={event} name={name} vital={vital} />;\n        })}\n      </Measurements>\n    </Container>\n  );\n}\n\ntype EventVitalProps = Props & {\n  name: string;\n  vital?: Vital;\n};\n\nfunction EventVital({event, name, vital}: EventVitalProps) {\n  const value = event.measurements?.[name].value ?? null;\n  if (value === null || !vital) {\n    return null;\n  }\n\n  const failedThreshold = defined(vital.poorThreshold) && value >= vital.poorThreshold;\n\n  const currentValue = formattedValue(vital, value);\n  const thresholdValue = formattedValue(vital, vital?.poorThreshold ?? 0);\n\n  return (\n    <EventVitalContainer>\n      <StyledPanel failedThreshold={failedThreshold}>\n        <Name>{vital.name ?? name}</Name>\n        <ValueRow>\n          {failedThreshold ? (\n            <FireIconContainer size=\"sm\">\n              <Tooltip\n                title={t('Fails threshold at %s.', thresholdValue)}\n                position=\"top\"\n                containerDisplayMode=\"inline-block\"\n              >\n                <IconFire size=\"sm\" />\n              </Tooltip>\n            </FireIconContainer>\n          ) : null}\n          <Value failedThreshold={failedThreshold}>{currentValue}</Value>\n        </ValueRow>\n      </StyledPanel>\n    </EventVitalContainer>\n  );\n}\n\nconst Measurements = styled('div')`\n  display: grid;\n  grid-column-gap: ${space(1)};\n`;\n\nconst Container = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-bottom: ${space(4)};\n`;\n\nconst StyledPanel = styled(Panel)<{failedThreshold: boolean}>`\n  padding: ${space(1)} ${space(1.5)};\n  margin-bottom: ${space(1)};\n  ${p => p.failedThreshold && `border: 1px solid ${p.theme.red300};`}\n`;\n\nconst Name = styled('div')``;\n\nconst ValueRow = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst WarningIconContainer = styled('span')<{size: IconSize | string}>`\n  display: inline-block;\n  height: ${p => p.theme.iconSizes[p.size] ?? p.size};\n  line-height: ${p => p.theme.iconSizes[p.size] ?? p.size};\n  margin-left: ${space(0.5)};\n  color: ${p => p.theme.red300};\n`;\n\nconst FireIconContainer = styled('span')<{size: IconSize | string}>`\n  display: inline-block;\n  height: ${p => p.theme.iconSizes[p.size] ?? p.size};\n  line-height: ${p => p.theme.iconSizes[p.size] ?? p.size};\n  margin-right: ${space(0.5)};\n  color: ${p => p.theme.red300};\n`;\n\nconst Value = styled('span')<{failedThreshold: boolean}>`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  ${p => p.failedThreshold && `color: ${p.theme.red300};`}\n`;\n\nexport const EventVitalContainer = styled('div')``;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = {\n  keyName: React.ReactNode;\n  value: React.ReactNode;\n};\n\nexport const KeyValueTable = styled('dl')`\n  display: grid;\n  grid-template-columns: 50% 50%;\n`;\n\nexport const KeyValueTableRow = ({keyName, value}: Props) => {\n  return (\n    <Fragment>\n      <Key>{keyName}</Key>\n      <Value>{value}</Value>\n    </Fragment>\n  );\n};\n\nconst commonStyles = ({theme}: {theme: Theme}) => `\nfont-size: ${theme.fontSizeMedium};\npadding: ${space(0.5)} ${space(1)};\nfont-weight: normal;\nline-height: inherit;\n${p => p.theme.overflowEllipsis};\n&:nth-of-type(2n-1) {\n  background-color: ${theme.backgroundSecondary};\n}\n`;\n\nconst Key = styled('dt')`\n  ${commonStyles};\n  color: ${p => p.theme.textColor};\n`;\n\nconst Value = styled('dd')`\n  ${commonStyles};\n  color: ${p => p.theme.subText};\n  text-align: right;\n`;\n","import styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {KeyValueTable} from 'sentry/components/keyValueTable';\nimport TagsTableRow from 'sentry/components/tagsTableRow';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Event, EventTag} from 'sentry/types/event';\n\ntype Props = {\n  event: Event;\n  generateUrl: (tag: EventTag) => LocationDescriptor;\n  query: string;\n};\n\nexport function TagsTable({event, query, generateUrl}: Props) {\n  const meta = event._meta?.tags;\n\n  return (\n    <StyledTagsTable>\n      <SectionHeading>{t('Tag Details')}</SectionHeading>\n      {!!meta?.[''] && !event.tags ? (\n        <AnnotatedText value={event.tags} meta={meta?.['']} />\n      ) : (\n        <KeyValueTable>\n          {event.tags.map((tag, index) => (\n            <TagsTableRow\n              key={tag.key}\n              tag={tag}\n              query={query}\n              generateUrl={generateUrl}\n              meta={meta?.[index]}\n            />\n          ))}\n        </KeyValueTable>\n      )}\n    </StyledTagsTable>\n  );\n}\n\nconst StyledTagsTable = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n","import styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\n\nimport {KeyValueTableRow} from 'sentry/components/keyValueTable';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {t} from 'sentry/locale';\nimport {EventTag} from 'sentry/types/event';\n\nimport AnnotatedText from './events/meta/annotatedText';\n\ninterface Props {\n  generateUrl: (tag: EventTag) => LocationDescriptor;\n  query: string;\n  tag: EventTag;\n  meta?: Record<any, any>;\n}\n\nfunction TagsTableRow({tag, query, generateUrl, meta}: Props) {\n  const tagInQuery = query.includes(`${tag.key}:`);\n  const target = tagInQuery ? undefined : generateUrl(tag);\n  const keyMetaData = meta?.key?.[''];\n  const valueMetaData = meta?.value?.[''];\n\n  const renderTagValue = () => {\n    switch (tag.key) {\n      case 'release':\n        return <Version version={tag.value} anchor={false} withPackage />;\n      default:\n        return tag.value;\n    }\n  };\n  return (\n    <KeyValueTableRow\n      keyName={\n        !!keyMetaData && !tag.key ? (\n          <AnnotatedText value={tag.key} meta={keyMetaData} />\n        ) : (\n          <StyledTooltip title={tag.key}>{tag.key}</StyledTooltip>\n        )\n      }\n      value={\n        !!valueMetaData && !tag.value ? (\n          <AnnotatedText value={tag.value} meta={valueMetaData} />\n        ) : keyMetaData?.err?.length ? (\n          <ValueContainer>{renderTagValue()}</ValueContainer>\n        ) : tagInQuery ? (\n          <StyledTooltip title={t('This tag is in the current filter conditions')}>\n            <ValueContainer>{renderTagValue()}</ValueContainer>\n          </StyledTooltip>\n        ) : (\n          <StyledTooltip title={renderTagValue()}>\n            <Link to={target || ''}>{renderTagValue()}</Link>\n          </StyledTooltip>\n        )\n      }\n    />\n  );\n}\n\nexport default TagsTableRow;\n\nconst StyledTooltip = styled(Tooltip)`\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst ValueContainer = styled('span')`\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: normal;\n`;\n","import {getDuration} from 'sentry/utils/formatters';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport function formattedValue(record: Vital | undefined, value: number): string {\n  if (record && record.type === 'duration') {\n    return getDuration(value / 1000, 3);\n  }\n  if (record && record.type === 'integer') {\n    return value.toFixed(0);\n  }\n\n  return value.toFixed(3);\n}\n","import {Fragment} from 'react';\n\nimport {Event} from 'sentry/types/event';\nimport {DiscoverQueryProps} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {TraceFullQuery} from 'sentry/utils/performance/quickTrace/traceFullQuery';\nimport TraceLiteQuery from 'sentry/utils/performance/quickTrace/traceLiteQuery';\nimport {QuickTraceQueryChildrenProps} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  flattenRelevantPaths,\n  getTraceTimeRangeFromEvent,\n  isCurrentEvent,\n} from 'sentry/utils/performance/quickTrace/utils';\n\ntype QueryProps = Omit<DiscoverQueryProps, 'api' | 'eventView'> & {\n  children: (props: QuickTraceQueryChildrenProps) => React.ReactNode;\n  event: Event | undefined;\n};\n\nexport default function QuickTraceQuery({children, event, ...props}: QueryProps) {\n  const renderEmpty = () => (\n    <Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        trace: [],\n        type: 'empty',\n        currentEvent: null,\n      })}\n    </Fragment>\n  );\n\n  if (!event) {\n    return renderEmpty();\n  }\n\n  const traceId = event.contexts?.trace?.trace_id;\n\n  if (!traceId) {\n    return renderEmpty();\n  }\n\n  const {start, end} = getTraceTimeRangeFromEvent(event);\n\n  return (\n    <TraceLiteQuery\n      eventId={event.id}\n      traceId={traceId}\n      start={start}\n      end={end}\n      {...props}\n    >\n      {traceLiteResults => (\n        <TraceFullQuery\n          eventId={event.id}\n          traceId={traceId}\n          start={start}\n          end={end}\n          {...props}\n        >\n          {traceFullResults => {\n            if (\n              !traceFullResults.isLoading &&\n              traceFullResults.error === null &&\n              traceFullResults.traces !== null\n            ) {\n              for (const subtrace of traceFullResults.traces) {\n                try {\n                  const trace = flattenRelevantPaths(event, subtrace);\n                  return children({\n                    ...traceFullResults,\n                    trace,\n                    currentEvent: trace.find(e => isCurrentEvent(e, event)) ?? null,\n                  });\n                } catch {\n                  // let this fall through and check the next subtrace\n                  // or use the trace lite results\n                }\n              }\n            }\n\n            if (\n              !traceLiteResults.isLoading &&\n              traceLiteResults.error === null &&\n              traceLiteResults.trace !== null\n            ) {\n              const {trace} = traceLiteResults;\n              return children({\n                ...traceLiteResults,\n                currentEvent: trace.find(e => isCurrentEvent(e, event)) ?? null,\n              });\n            }\n\n            return children({\n              // only use the light results loading state if it didn't error\n              // if it did, we should rely on the full results\n              isLoading: traceLiteResults.error\n                ? traceFullResults.isLoading\n                : traceLiteResults.isLoading || traceFullResults.isLoading,\n              // swallow any errors from the light results because we\n              // should rely on the full results in this situations\n              error: traceFullResults.error,\n              trace: [],\n              // if we reach this point but there were some traces in the full results,\n              // that means there were other transactions in the trace, but the current\n              // event could not be found\n              type: traceFullResults.traces?.length ? 'missing' : 'empty',\n              currentEvent: null,\n            });\n          }}\n        </TraceFullQuery>\n      )}\n    </TraceLiteQuery>\n  );\n}\n","import {Fragment} from 'react';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  FullQuickTrace,\n  TraceFull,\n  TraceFullDetailed,\n  TraceRequestProps,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\nimport withApi from 'sentry/utils/withApi';\n\ntype AdditionalQueryProps = {\n  detailed?: boolean;\n  eventId?: string;\n};\n\ntype TraceFullQueryChildrenProps<T> = BaseTraceChildrenProps &\n  Omit<FullQuickTrace, 'trace'> & {\n    /**\n     * The `event-trace` endpoint returns a full trace with the parent-child\n     * relationships. It can be flattened into a `QuickTraceEvent` if necessary.\n     */\n    traces: T | null;\n  };\n\ntype QueryProps<T> = Omit<TraceRequestProps, 'eventView'> &\n  AdditionalQueryProps & {\n    children: (props: TraceFullQueryChildrenProps<T>) => React.ReactNode;\n  };\n\nfunction getTraceFullRequestPayload({\n  detailed,\n  eventId,\n  ...props\n}: DiscoverQueryProps & AdditionalQueryProps) {\n  const additionalApiPayload: any = getTraceRequestPayload(props);\n  additionalApiPayload.detailed = detailed ? '1' : '0';\n  if (eventId) {\n    additionalApiPayload.event_id = eventId;\n  }\n  return additionalApiPayload;\n}\n\nfunction EmptyTrace<T>({children}: Pick<QueryProps<T>, 'children'>) {\n  return (\n    <Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        traces: null,\n        type: 'full',\n      })}\n    </Fragment>\n  );\n}\n\nfunction GenericTraceFullQuery<T>({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps<T>) {\n  if (!traceId) {\n    return <EmptyTrace<T>>{children}</EmptyTrace>;\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<T, AdditionalQueryProps>\n      route={`events-trace/${traceId}`}\n      getRequestPayload={getTraceFullRequestPayload}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) =>\n        children({\n          // This is using '||` instead of '??` here because\n          // the client returns a empty string when the response\n          // is 204. And we want the empty string, undefined and\n          // null to be converted to null.\n          traces: tableData || null,\n          type: 'full',\n          ...rest,\n        })\n      }\n    </GenericDiscoverQuery>\n  );\n}\n\nexport const TraceFullQuery = withApi(\n  (props: Omit<QueryProps<TraceFull[]>, 'detailed'>) => (\n    <GenericTraceFullQuery<TraceFull[]> {...props} detailed={false} />\n  )\n);\n\nexport const TraceFullDetailedQuery = withApi(\n  (props: Omit<QueryProps<TraceFullDetailed[]>, 'detailed'>) => (\n    <GenericTraceFullQuery<TraceFullDetailed[]> {...props} detailed />\n  )\n);\n","import {Fragment} from 'react';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  PartialQuickTrace,\n  TraceLite,\n  TraceRequestProps,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\nimport withApi from 'sentry/utils/withApi';\n\ntype AdditionalQueryProps = {\n  eventId: string;\n};\n\ntype TraceLiteQueryChildrenProps = BaseTraceChildrenProps &\n  Omit<PartialQuickTrace, 'trace'> & {\n    trace: TraceLite | null;\n  };\n\ntype QueryProps = Omit<TraceRequestProps, 'eventView'> &\n  AdditionalQueryProps & {\n    children: (props: TraceLiteQueryChildrenProps) => React.ReactNode;\n  };\n\nfunction getTraceLiteRequestPayload({\n  eventId,\n  ...props\n}: DiscoverQueryProps & AdditionalQueryProps) {\n  const additionalApiPayload = getTraceRequestPayload(props);\n  return Object.assign({event_id: eventId}, additionalApiPayload);\n}\n\nfunction EmptyTrace({children}: Pick<QueryProps, 'children'>) {\n  return (\n    <Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        trace: null,\n        type: 'partial',\n      })}\n    </Fragment>\n  );\n}\n\nfunction TraceLiteQuery({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps) {\n  if (!traceId) {\n    return <EmptyTrace>{children}</EmptyTrace>;\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<TraceLite, AdditionalQueryProps>\n      route={`events-trace-light/${traceId}`}\n      getRequestPayload={getTraceLiteRequestPayload}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) =>\n        children({\n          // This is using '||` instead of '??` here because\n          // the client returns a empty string when the response\n          // is 204. And we want the empty string, undefined and\n          // null to be converted to null.\n          trace: tableData || null,\n          type: 'partial',\n          ...rest,\n        })\n      }\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(TraceLiteQuery);\n","import {Fragment} from 'react';\n\nimport GenericDiscoverQuery from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  TraceMeta,\n  TraceRequestProps,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\nimport withApi from 'sentry/utils/withApi';\n\nexport type TraceMetaQueryChildrenProps = BaseTraceChildrenProps & {\n  meta: TraceMeta | null;\n};\n\ntype QueryProps = Omit<TraceRequestProps, 'eventView'> & {\n  children: (props: TraceMetaQueryChildrenProps) => React.ReactNode;\n};\n\nfunction TraceMetaQuery({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps) {\n  if (!traceId) {\n    return (\n      <Fragment>\n        {children({\n          isLoading: false,\n          error: null,\n          meta: null,\n        })}\n      </Fragment>\n    );\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<TraceMeta, {}>\n      route={`events-trace-meta/${traceId}`}\n      getRequestPayload={getTraceRequestPayload}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          meta: tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(TraceMetaQuery);\n","import {browserHistory} from 'react-router';\nimport {Location, Query} from 'history';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport trimStart from 'lodash/trimStart';\nimport * as qs from 'query-string';\n\nimport WidgetArea from 'sentry-images/dashboard/widget-area.svg';\nimport WidgetBar from 'sentry-images/dashboard/widget-bar.svg';\nimport WidgetBigNumber from 'sentry-images/dashboard/widget-big-number.svg';\nimport WidgetLine from 'sentry-images/dashboard/widget-line-1.svg';\nimport WidgetTable from 'sentry-images/dashboard/widget-table.svg';\nimport WidgetWorldMap from 'sentry-images/dashboard/widget-world-map.svg';\n\nimport {parseArithmetic} from 'sentry/components/arithmeticInput/parser';\nimport {\n  Fidelity,\n  getDiffInMinutes,\n  getInterval,\n  SIX_HOURS,\n  TWENTY_FOUR_HOURS,\n} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeString} from 'sentry/components/organizations/pageFilters/parse';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getUtcDateString, parsePeriodToHours} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  getAggregateAlias,\n  getAggregateArg,\n  getColumnsAndAggregates,\n  isEquation,\n  isMeasurement,\n  stripEquationPrefix,\n} from 'sentry/utils/discover/fields';\nimport {DisplayModes} from 'sentry/utils/discover/types';\nimport {getMeasurements} from 'sentry/utils/measurements/measurements';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {\n  DashboardDetails,\n  DashboardFilterKeys,\n  DashboardFilters,\n  DisplayType,\n  Widget,\n  WidgetQuery,\n  WidgetType,\n} from 'sentry/views/dashboardsV2/types';\n\nexport type ValidationError = {\n  [key: string]: string | string[] | ValidationError[] | ValidationError;\n};\n\nexport type FlatValidationError = {\n  [key: string]: string | FlatValidationError[] | FlatValidationError;\n};\n\nexport function cloneDashboard(dashboard: DashboardDetails): DashboardDetails {\n  return cloneDeep(dashboard);\n}\n\nexport function eventViewFromWidget(\n  title: string,\n  query: WidgetQuery,\n  selection: PageFilters,\n  widgetDisplayType?: DisplayType\n): EventView {\n  const {start, end, period: statsPeriod} = selection.datetime;\n  const {projects, environments} = selection;\n\n  // World Map requires an additional column (geo.country_code) to display in discover when navigating from the widget\n  const fields =\n    widgetDisplayType === DisplayType.WORLD_MAP &&\n    !query.columns.includes('geo.country_code')\n      ? ['geo.country_code', ...query.columns, ...query.aggregates]\n      : [...query.columns, ...query.aggregates];\n  const conditions =\n    widgetDisplayType === DisplayType.WORLD_MAP &&\n    !query.conditions.includes('has:geo.country_code')\n      ? `${query.conditions} has:geo.country_code`.trim()\n      : query.conditions;\n\n  const {orderby} = query;\n  // Need to convert orderby to aggregate alias because eventView still uses aggregate alias format\n  const aggregateAliasOrderBy = orderby\n    ? `${orderby.startsWith('-') ? '-' : ''}${getAggregateAlias(trimStart(orderby, '-'))}`\n    : orderby;\n  return EventView.fromSavedQuery({\n    id: undefined,\n    name: title,\n    version: 2,\n    fields,\n    query: conditions,\n    orderby: aggregateAliasOrderBy,\n    projects,\n    range: statsPeriod ?? undefined,\n    start: start ? getUtcDateString(start) : undefined,\n    end: end ? getUtcDateString(end) : undefined,\n    environment: environments,\n  });\n}\n\nfunction coerceStringToArray(value?: string | string[] | null) {\n  return typeof value === 'string' ? [value] : value;\n}\n\nexport function constructWidgetFromQuery(query?: Query): Widget | undefined {\n  if (query) {\n    const queryNames = coerceStringToArray(query.queryNames);\n    const queryConditions = coerceStringToArray(query.queryConditions);\n    const queryFields = coerceStringToArray(query.queryFields);\n    const queries: WidgetQuery[] = [];\n    if (\n      queryConditions &&\n      queryNames &&\n      queryFields &&\n      typeof query.queryOrderby === 'string'\n    ) {\n      const {columns, aggregates} = getColumnsAndAggregates(queryFields);\n      queryConditions.forEach((condition, index) => {\n        queries.push({\n          name: queryNames[index],\n          conditions: condition,\n          fields: queryFields,\n          columns,\n          aggregates,\n          orderby: query.queryOrderby as string,\n        });\n      });\n    }\n    if (query.title && query.displayType && query.interval && queries.length > 0) {\n      const newWidget: Widget = {\n        ...(pick(query, ['title', 'displayType', 'interval']) as {\n          displayType: DisplayType;\n          interval: string;\n          title: string;\n        }),\n        widgetType: WidgetType.DISCOVER,\n        queries,\n      };\n      return newWidget;\n    }\n  }\n  return undefined;\n}\n\nexport function miniWidget(displayType: DisplayType): string {\n  switch (displayType) {\n    case DisplayType.BAR:\n      return WidgetBar;\n    case DisplayType.AREA:\n    case DisplayType.TOP_N:\n      return WidgetArea;\n    case DisplayType.BIG_NUMBER:\n      return WidgetBigNumber;\n    case DisplayType.TABLE:\n      return WidgetTable;\n    case DisplayType.WORLD_MAP:\n      return WidgetWorldMap;\n    case DisplayType.LINE:\n    default:\n      return WidgetLine;\n  }\n}\n\nexport function getWidgetInterval(\n  displayType: DisplayType,\n  datetimeObj: Partial<PageFilters['datetime']>,\n  widgetInterval?: string,\n  fidelity?: Fidelity\n): string {\n  // Don't fetch more than 66 bins as we're plotting on a small area.\n  const MAX_BIN_COUNT = 66;\n\n  // Bars charts are daily totals to aligned with discover. It also makes them\n  // usefully different from line/area charts until we expose the interval control, or remove it.\n  let interval = displayType === 'bar' ? '1d' : widgetInterval;\n  if (!interval) {\n    // Default to 5 minutes\n    interval = '5m';\n  }\n  const desiredPeriod = parsePeriodToHours(interval);\n  const selectedRange = getDiffInMinutes(datetimeObj);\n\n  if (fidelity) {\n    // Primarily to support lower fidelity for Release Health widgets\n    // the sort on releases and hit the metrics API endpoint.\n    interval = getInterval(datetimeObj, fidelity);\n    if (selectedRange > SIX_HOURS && selectedRange <= TWENTY_FOUR_HOURS) {\n      interval = '1h';\n    }\n    return displayType === 'bar' ? '1d' : interval;\n  }\n\n  // selectedRange is in minutes, desiredPeriod is in hours\n  // convert desiredPeriod to minutes\n  if (selectedRange / (desiredPeriod * 60) > MAX_BIN_COUNT) {\n    const highInterval = getInterval(datetimeObj, 'high');\n    // Only return high fidelity interval if desired interval is higher fidelity\n    if (desiredPeriod < parsePeriodToHours(highInterval)) {\n      return highInterval;\n    }\n  }\n  return interval;\n}\n\nexport function getFieldsFromEquations(fields: string[]): string[] {\n  // Gather all fields and functions used in equations and prepend them to the provided fields\n  const termsSet: Set<string> = new Set();\n  fields.filter(isEquation).forEach(field => {\n    const parsed = parseArithmetic(stripEquationPrefix(field)).tc;\n    parsed.fields.forEach(({term}) => termsSet.add(term as string));\n    parsed.functions.forEach(({term}) => termsSet.add(term as string));\n  });\n  return Array.from(termsSet);\n}\n\nexport function getWidgetDiscoverUrl(\n  widget: Widget,\n  selection: PageFilters,\n  organization: Organization,\n  index: number = 0,\n  isMetricsData: boolean = false\n) {\n  const eventView = eventViewFromWidget(\n    widget.title,\n    widget.queries[index],\n    selection,\n    widget.displayType\n  );\n  const discoverLocation = eventView.getResultsViewUrlTarget(organization.slug);\n\n  // Pull a max of 3 valid Y-Axis from the widget\n  const yAxisOptions = eventView.getYAxisOptions().map(({value}) => value);\n  discoverLocation.query.yAxis = [\n    ...new Set(\n      widget.queries[0].aggregates.filter(aggregate => yAxisOptions.includes(aggregate))\n    ),\n  ].slice(0, 3);\n\n  // Visualization specific transforms\n  switch (widget.displayType) {\n    case DisplayType.WORLD_MAP:\n      discoverLocation.query.display = DisplayModes.WORLDMAP;\n      break;\n    case DisplayType.BAR:\n      discoverLocation.query.display = DisplayModes.BAR;\n      break;\n    case DisplayType.TOP_N:\n      discoverLocation.query.display = DisplayModes.TOP5;\n      // Last field is used as the yAxis\n      const aggregates = widget.queries[0].aggregates;\n      discoverLocation.query.yAxis = aggregates[aggregates.length - 1];\n      if (aggregates.slice(0, -1).includes(aggregates[aggregates.length - 1])) {\n        discoverLocation.query.field = aggregates.slice(0, -1);\n      }\n      break;\n    default:\n      break;\n  }\n\n  // Equation fields need to have their terms explicitly selected as columns in the discover table\n  const fields = discoverLocation.query.field;\n  const query = widget.queries[0];\n  const queryFields = defined(query.fields)\n    ? query.fields\n    : [...query.columns, ...query.aggregates];\n  const equationFields = getFieldsFromEquations(queryFields);\n  // Updates fields by adding any individual terms from equation fields as a column\n  equationFields.forEach(term => {\n    if (Array.isArray(fields) && !fields.includes(term)) {\n      fields.unshift(term);\n    }\n  });\n\n  if (isMetricsData) {\n    discoverLocation.query.fromMetric = 'true';\n  }\n\n  // Construct and return the discover url\n  const discoverPath = `${discoverLocation.pathname}?${qs.stringify({\n    ...discoverLocation.query,\n  })}`;\n  return discoverPath;\n}\n\nexport function getWidgetIssueUrl(\n  widget: Widget,\n  selection: PageFilters,\n  organization: Organization\n) {\n  const {start, end, utc, period} = selection.datetime;\n  const datetime =\n    start && end\n      ? {start: getUtcDateString(start), end: getUtcDateString(end), utc}\n      : {statsPeriod: period};\n  const issuesLocation = `/organizations/${organization.slug}/issues/?${qs.stringify({\n    query: widget.queries?.[0]?.conditions,\n    sort: widget.queries?.[0]?.orderby,\n    ...datetime,\n    project: selection.projects,\n    environment: selection.environments,\n  })}`;\n  return issuesLocation;\n}\n\nexport function getWidgetReleasesUrl(\n  _widget: Widget,\n  selection: PageFilters,\n  organization: Organization\n) {\n  const {start, end, utc, period} = selection.datetime;\n  const datetime =\n    start && end\n      ? {start: getUtcDateString(start), end: getUtcDateString(end), utc}\n      : {statsPeriod: period};\n  const releasesLocation = `/organizations/${organization.slug}/releases/?${qs.stringify({\n    ...datetime,\n    project: selection.projects,\n    environment: selection.environments,\n  })}`;\n  return releasesLocation;\n}\n\nexport function flattenErrors(\n  data: ValidationError | string,\n  update: FlatValidationError\n): FlatValidationError {\n  if (typeof data === 'string') {\n    update.error = data;\n  } else {\n    Object.keys(data).forEach((key: string) => {\n      const value = data[key];\n      if (typeof value === 'string') {\n        update[key] = value;\n        return;\n      }\n      // Recurse into nested objects.\n      if (Array.isArray(value) && typeof value[0] === 'string') {\n        update[key] = value[0];\n        return;\n      }\n      if (Array.isArray(value) && typeof value[0] === 'object') {\n        (value as ValidationError[]).map(item => flattenErrors(item, update));\n      } else {\n        flattenErrors(value as ValidationError, update);\n      }\n    });\n  }\n  return update;\n}\n\nexport function getDashboardsMEPQueryParams(isMEPEnabled: boolean) {\n  return isMEPEnabled\n    ? {\n        dataset: 'metricsEnhanced',\n      }\n    : {};\n}\n\nexport function getNumEquations(possibleEquations: string[]) {\n  return possibleEquations.filter(isEquation).length;\n}\n\nexport function isCustomMeasurement(field: string) {\n  const definedMeasurements = Object.keys(getMeasurements());\n  return isMeasurement(field) && !definedMeasurements.includes(field);\n}\n\nexport function isCustomMeasurementWidget(widget: Widget) {\n  return (\n    widget.widgetType === WidgetType.DISCOVER &&\n    widget.queries.some(({aggregates, columns, fields}) => {\n      const aggregateArgs = aggregates.reduce((acc: string[], aggregate) => {\n        // Should be ok to use getAggregateArg. getAggregateArg only returns the first arg\n        // but there aren't any custom measurement aggregates that use custom measurements\n        // outside of the first arg.\n        const aggregateArg = getAggregateArg(aggregate);\n        if (aggregateArg) {\n          acc.push(aggregateArg);\n        }\n        return acc;\n      }, []);\n      return [...aggregateArgs, ...columns, ...(fields ?? [])].some(field =>\n        isCustomMeasurement(field)\n      );\n    })\n  );\n}\n\nexport function getCustomMeasurementQueryParams() {\n  return {\n    dataset: 'metrics',\n  };\n}\n\nexport function isWidgetUsingTransactionName(widget: Widget) {\n  return (\n    widget.widgetType === WidgetType.DISCOVER &&\n    widget.queries.some(({aggregates, columns, fields}) => {\n      const aggregateArgs = aggregates.reduce((acc: string[], aggregate) => {\n        const aggregateArg = getAggregateArg(aggregate);\n        if (aggregateArg) {\n          acc.push(aggregateArg);\n        }\n        return acc;\n      }, []);\n      return [...aggregateArgs, ...columns, ...(fields ?? [])].some(\n        field => field === 'transaction'\n      );\n    })\n  );\n}\n\nexport function hasSavedPageFilters(dashboard: DashboardDetails) {\n  return !(\n    isEmpty(dashboard.projects) &&\n    dashboard.environment === undefined &&\n    dashboard.start === undefined &&\n    dashboard.end === undefined &&\n    dashboard.period === undefined\n  );\n}\n\nexport function hasUnsavedFilterChanges(\n  initialDashboard: DashboardDetails,\n  location: Location\n) {\n  // Use Sets to compare the filter fields that are arrays\n  type Filters = {\n    end?: string;\n    environment?: Set<string>;\n    period?: string;\n    projects?: Set<number>;\n    release?: Set<string>;\n    start?: string;\n    utc?: boolean;\n  };\n\n  const savedFilters: Filters = {\n    projects: new Set(initialDashboard.projects),\n    environment: new Set(initialDashboard.environment),\n    period: initialDashboard.period,\n    start: normalizeDateTimeString(initialDashboard.start),\n    end: normalizeDateTimeString(initialDashboard.end),\n    utc: initialDashboard.utc,\n  };\n  let currentFilters = {\n    ...getCurrentPageFilters(location),\n  } as unknown as Filters;\n  currentFilters = {\n    ...currentFilters,\n    projects: new Set(currentFilters.projects),\n    environment: new Set(currentFilters.environment),\n  };\n\n  if (defined(location.query?.release)) {\n    // Release is only included in the comparison if it exists in the query\n    // params, otherwise the dashboard should be using its saved state\n    savedFilters.release = new Set(initialDashboard.filters?.release);\n    currentFilters.release = new Set(location.query?.release);\n  }\n\n  return !isEqual(savedFilters, currentFilters);\n}\n\nexport function getSavedFiltersAsPageFilters(dashboard: DashboardDetails): PageFilters {\n  return {\n    datetime: {\n      end: dashboard.end || null,\n      period: dashboard.period || null,\n      start: dashboard.start || null,\n      utc: null,\n    },\n    environments: dashboard.environment || [],\n    projects: dashboard.projects || [],\n  };\n}\n\nexport function getSavedPageFilters(dashboard: DashboardDetails) {\n  return {\n    project: dashboard.projects,\n    environment: dashboard.environment,\n    statsPeriod: dashboard.period,\n    start: normalizeDateTimeString(dashboard.start),\n    end: normalizeDateTimeString(dashboard.end),\n    utc: dashboard.utc,\n  };\n}\n\nexport function resetPageFilters(dashboard: DashboardDetails, location: Location) {\n  browserHistory.replace({\n    ...location,\n    query: getSavedPageFilters(dashboard),\n  });\n}\n\nexport function getCurrentPageFilters(\n  location: Location\n): Pick<\n  DashboardDetails,\n  'projects' | 'environment' | 'period' | 'start' | 'end' | 'utc'\n> {\n  const {project, environment, statsPeriod, start, end, utc} = location.query ?? {};\n  return {\n    // Ensure projects and environment are sent as arrays, or undefined in the request\n    // location.query will return a string if there's only one value\n    projects:\n      project === undefined || project === null\n        ? []\n        : typeof project === 'string'\n        ? [Number(project)]\n        : project.map(Number),\n    environment:\n      typeof environment === 'string' ? [environment] : environment ?? undefined,\n    period: statsPeriod as string | undefined,\n    start: defined(start) ? normalizeDateTimeString(start as string) : undefined,\n    end: defined(end) ? normalizeDateTimeString(end as string) : undefined,\n    utc: defined(utc) ? utc === 'true' : undefined,\n  };\n}\n\nexport function getDashboardFiltersFromURL(location: Location): DashboardFilters | null {\n  const dashboardFilters: DashboardFilters = {};\n  Object.values(DashboardFilterKeys).forEach(key => {\n    if (defined(location.query?.[key])) {\n      dashboardFilters[key] = decodeList(location.query?.[key]);\n    }\n  });\n  return !isEmpty(dashboardFilters) ? dashboardFilters : null;\n}\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Clipboard from 'sentry/components/clipboard';\nimport DateTime from 'sentry/components/dateTime';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport TimeSince from 'sentry/components/timeSince';\nimport Tooltip from 'sentry/components/tooltip';\nimport {frontend} from 'sentry/data/platformCategories';\nimport {IconCopy} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AvatarProject, OrganizationSummary} from 'sentry/types';\nimport {Event, EventTransaction} from 'sentry/types/event';\nimport {getShortEventId} from 'sentry/utils/events';\nimport {getDuration} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {\n  QuickTraceQueryChildrenProps,\n  TraceMeta,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {isTransaction} from 'sentry/utils/performance/quickTrace/utils';\nimport Projects from 'sentry/utils/projects';\nimport theme from 'sentry/utils/theme';\n\nimport QuickTraceMeta from './quickTraceMeta';\nimport {MetaData} from './styles';\n\ntype Props = Pick<\n  React.ComponentProps<typeof QuickTraceMeta>,\n  'errorDest' | 'transactionDest'\n> & {\n  event: Event;\n  location: Location;\n  meta: TraceMeta | null;\n  organization: OrganizationSummary;\n  projectId: string;\n  quickTrace: QuickTraceQueryChildrenProps | null;\n};\n\ntype State = {\n  isLargeScreen: boolean;\n};\n\n/**\n * This should match the breakpoint chosen for the `EventDetailHeader` below\n */\nconst BREAKPOINT_MEDIA_QUERY = `(min-width: ${theme.breakpoints.large})`;\n\nclass EventMetas extends Component<Props, State> {\n  state: State = {\n    isLargeScreen: window.matchMedia?.(BREAKPOINT_MEDIA_QUERY)?.matches,\n  };\n\n  componentDidMount() {\n    if (this.mq) {\n      this.mq.addListener(this.handleMediaQueryChange);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.mq) {\n      this.mq.removeListener(this.handleMediaQueryChange);\n    }\n  }\n\n  mq = window.matchMedia?.(BREAKPOINT_MEDIA_QUERY);\n\n  handleMediaQueryChange = (changed: MediaQueryListEvent) => {\n    this.setState({\n      isLargeScreen: changed.matches,\n    });\n  };\n\n  render() {\n    const {\n      event,\n      organization,\n      projectId,\n      location,\n      quickTrace,\n      meta,\n      errorDest,\n      transactionDest,\n    } = this.props;\n    const {isLargeScreen} = this.state;\n\n    const type = isTransaction(event) ? 'transaction' : 'event';\n\n    const timestamp = (\n      <TimeSince date={event.dateCreated || (event.endTimestamp || 0) * 1000} />\n    );\n\n    const httpStatus = <HttpStatus event={event} />;\n\n    return (\n      <Projects orgId={organization.slug} slugs={[projectId]}>\n        {({projects}) => {\n          const project = projects.find(p => p.slug === projectId);\n          return (\n            <EventDetailHeader type={type}>\n              <MetaData\n                headingText={t('Event ID')}\n                tooltipText={t('The unique ID assigned to this %s.', type)}\n                bodyText={<EventID event={event} />}\n                subtext={\n                  <ProjectBadge\n                    project={project ? project : {slug: projectId}}\n                    avatarSize={16}\n                  />\n                }\n              />\n              {isTransaction(event) ? (\n                <MetaData\n                  headingText={t('Event Duration')}\n                  tooltipText={t(\n                    'The time elapsed between the start and end of this transaction.'\n                  )}\n                  bodyText={getDuration(\n                    event.endTimestamp - event.startTimestamp,\n                    2,\n                    true\n                  )}\n                  subtext={timestamp}\n                />\n              ) : (\n                <MetaData\n                  headingText={t('Created')}\n                  tooltipText={t('The time at which this event was created.')}\n                  bodyText={timestamp}\n                  subtext={getDynamicText({\n                    value: <DateTime date={event.dateCreated} />,\n                    fixed: 'May 6, 2021 3:27:01 UTC',\n                  })}\n                />\n              )}\n              {isTransaction(event) && (\n                <MetaData\n                  headingText={t('Status')}\n                  tooltipText={t(\n                    'The status of this transaction indicating if it succeeded or otherwise.'\n                  )}\n                  bodyText={getStatusBodyText(project, event, meta)}\n                  subtext={httpStatus}\n                />\n              )}\n              <QuickTraceContainer>\n                <QuickTraceMeta\n                  event={event}\n                  project={project}\n                  location={location}\n                  quickTrace={quickTrace}\n                  traceMeta={meta}\n                  anchor={isLargeScreen ? 'right' : 'left'}\n                  errorDest={errorDest}\n                  transactionDest={transactionDest}\n                />\n              </QuickTraceContainer>\n            </EventDetailHeader>\n          );\n        }}\n      </Projects>\n    );\n  }\n}\n\nconst EventDetailHeader = styled('div')<{type?: 'transaction' | 'event'}>`\n  display: grid;\n  grid-template-columns: repeat(${p => (p.type === 'transaction' ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(2, auto);\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    margin-bottom: 0;\n  }\n\n  /* This should match the breakpoint chosen for BREAKPOINT_MEDIA_QUERY above. */\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    ${p =>\n      p.type === 'transaction'\n        ? 'grid-template-columns: minmax(160px, 1fr) minmax(160px, 1fr) minmax(160px, 1fr) 6fr;'\n        : 'grid-template-columns: minmax(160px, 1fr) minmax(200px, 1fr) 6fr;'};\n    grid-row-gap: 0;\n  }\n`;\n\nconst QuickTraceContainer = styled('div')`\n  grid-column: 1/4;\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    justify-self: flex-end;\n    min-width: 325px;\n    grid-column: unset;\n  }\n`;\n\nfunction EventID({event}: {event: Event}) {\n  return (\n    <Clipboard value={event.eventID}>\n      <EventIDContainer>\n        <EventIDWrapper>{getShortEventId(event.eventID)}</EventIDWrapper>\n        <Tooltip title={event.eventID} position=\"top\">\n          <IconCopy color=\"subText\" />\n        </Tooltip>\n      </EventIDContainer>\n    </Clipboard>\n  );\n}\n\nconst EventIDContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst EventIDWrapper = styled('span')`\n  margin-right: ${space(1)};\n`;\n\nfunction HttpStatus({event}: {event: Event}) {\n  const {tags} = event;\n\n  const emptyStatus = <Fragment>{'\\u2014'}</Fragment>;\n\n  if (!Array.isArray(tags)) {\n    return emptyStatus;\n  }\n\n  const tag = tags.find(tagObject => tagObject.key === 'http.status_code');\n\n  if (!tag) {\n    return emptyStatus;\n  }\n\n  return <Fragment>HTTP {tag.value}</Fragment>;\n}\n\n/*\n  TODO: Ash\n  I put this in place as a temporary patch to prevent successful frontend transactions from being set as 'unknown', which is what Relay sets by default\n  if there is no status set by the SDK. In the future, the possible statuses will be revised and frontend transactions should properly have a status set.\n  When that change is implemented, this function can simply be replaced with:\n\n  event.contexts?.trace?.status ?? '\\u2014';\n*/\n\nfunction getStatusBodyText(\n  project: AvatarProject | undefined,\n  event: EventTransaction,\n  meta: TraceMeta | null\n): string {\n  const isFrontendProject = frontend.some(val => val === project?.platform);\n\n  if (\n    isFrontendProject &&\n    meta &&\n    meta.errors === 0 &&\n    event.contexts?.trace?.status === 'unknown'\n  ) {\n    return 'ok';\n  }\n\n  return event.contexts?.trace?.status ?? '\\u2014';\n}\n\nexport default EventMetas;\n","import {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuickTrace from 'sentry/components/quickTrace';\nimport {generateTraceTarget} from 'sentry/components/quickTrace/utils';\nimport {t, tct, tn} from 'sentry/locale';\nimport {AvatarProject, OrganizationSummary} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {getConfigureTracingDocsLink} from 'sentry/utils/docs';\nimport {getShortEventId} from 'sentry/utils/events';\nimport {\n  QuickTraceQueryChildrenProps,\n  TraceMeta,\n} from 'sentry/utils/performance/quickTrace/types';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {MetaData} from './styles';\n\ntype Props = Pick<\n  React.ComponentProps<typeof QuickTrace>,\n  'errorDest' | 'transactionDest'\n> & {\n  anchor: 'left' | 'right';\n  event: Event;\n  location: Location;\n  quickTrace: QuickTraceQueryChildrenProps | null;\n  traceMeta: TraceMeta | null;\n  project?: AvatarProject;\n};\n\nfunction handleTraceLink(organization: OrganizationSummary) {\n  trackAnalyticsEvent({\n    eventKey: 'quick_trace.trace_id.clicked',\n    eventName: 'Quick Trace: Trace ID clicked',\n    organization_id: parseInt(organization.id, 10),\n    source: 'events',\n  });\n}\n\nexport default function QuickTraceMeta({\n  event,\n  location,\n  quickTrace,\n  traceMeta,\n  anchor,\n  errorDest,\n  transactionDest,\n  project,\n}: Props) {\n  const organization = useOrganization();\n  const features = ['performance-view'];\n\n  const noFeatureMessage = t('Requires performance monitoring.');\n\n  const docsLink = getConfigureTracingDocsLink(project);\n\n  const traceId = event.contexts?.trace?.trace_id ?? null;\n  const traceTarget = generateTraceTarget(event, organization);\n\n  let body: React.ReactNode;\n  let footer: React.ReactNode;\n\n  if (!traceId || !quickTrace || quickTrace.trace === null) {\n    // this platform doesn't support performance don't show anything here\n    if (docsLink === null) {\n      return null;\n    }\n\n    body = t('Missing Trace');\n\n    // need to configure tracing\n    footer = <ExternalLink href={docsLink}>{t('Read the docs')}</ExternalLink>;\n  } else {\n    if (quickTrace.isLoading) {\n      body = <Placeholder height=\"24px\" />;\n    } else if (quickTrace.error) {\n      body = '\\u2014';\n    } else {\n      body = (\n        <ErrorBoundary mini>\n          <QuickTrace\n            event={event}\n            quickTrace={{\n              type: quickTrace.type,\n              trace: quickTrace.trace,\n            }}\n            location={location}\n            organization={organization}\n            anchor={anchor}\n            errorDest={errorDest}\n            transactionDest={transactionDest}\n          />\n        </ErrorBoundary>\n      );\n    }\n\n    footer = (\n      <Link to={traceTarget} onClick={() => handleTraceLink(organization)}>\n        {tct('View Full Trace: [id][events]', {\n          id: getShortEventId(traceId ?? ''),\n          events: traceMeta\n            ? tn(' (%s event)', ' (%s events)', traceMeta.transactions + traceMeta.errors)\n            : '',\n        })}\n      </Link>\n    );\n  }\n\n  return (\n    <Feature hookName=\"feature-disabled:performance-quick-trace\" features={features}>\n      {({hasFeature}) => {\n        // also need to enable the performance feature\n        if (!hasFeature) {\n          footer = (\n            <Hovercard\n              body={\n                <FeatureDisabled\n                  features={features}\n                  hideHelpToggle\n                  message={noFeatureMessage}\n                  featureName={noFeatureMessage}\n                />\n              }\n            >\n              {footer}\n            </Hovercard>\n          );\n        }\n\n        return <QuickTraceMetaBase body={body} footer={footer} />;\n      }}\n    </Feature>\n  );\n}\n\nexport function QuickTraceMetaBase({\n  body,\n  footer,\n}: {\n  body: React.ReactNode;\n  footer: React.ReactNode;\n}) {\n  return (\n    <MetaData\n      headingText={t('Trace Navigator')}\n      tooltipText={t(\n        'An abbreviated version of the full trace. Related frontend and backend services can be added to provide further visibility.'\n      )}\n      bodyText={<div data-test-id=\"quick-trace-body\">{body}</div>}\n      subtext={<div data-test-id=\"quick-trace-footer\">{footer}</div>}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport space from 'sentry/styles/space';\n\ntype MetaDataProps = {\n  bodyText: React.ReactNode;\n  headingText: string;\n  subtext: React.ReactNode;\n  tooltipText: string;\n  badge?: 'alpha' | 'beta' | 'new';\n};\n\nexport function MetaData({\n  headingText,\n  tooltipText,\n  bodyText,\n  subtext,\n  badge,\n}: MetaDataProps) {\n  return (\n    <HeaderInfo>\n      <StyledSectionHeading>\n        {headingText}\n        <QuestionTooltip\n          position=\"top\"\n          size=\"sm\"\n          containerDisplayMode=\"block\"\n          title={tooltipText}\n        />\n        {badge && <StyledFeatureBadge type={badge} />}\n      </StyledSectionHeading>\n      <SectionBody>{bodyText}</SectionBody>\n      <SectionSubtext>{subtext}</SectionSubtext>\n    </HeaderInfo>\n  );\n}\n\nconst HeaderInfo = styled('div')`\n  height: 78px;\n`;\n\nconst StyledSectionHeading = styled(SectionHeading)`\n  margin: 0;\n`;\n\nconst SectionBody = styled('div')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  padding: ${space(0.5)} 0;\n  max-height: 32px;\n`;\n\nconst StyledFeatureBadge = styled(FeatureBadge)`\n  margin: 0;\n`;\n\nexport const SectionSubtext = styled('div')<{type?: 'error' | 'default'}>`\n  color: ${p => (p.type === 'error' ? p.theme.error : p.theme.subText)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsStartIndex;\n","var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nmodule.exports = trimStart;\n"],"names":["omit","ExternalLink","Link","IconChevron","space","AlertLink","size","priority","icon","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","props","linkProps","p","theme","alert","backgroundLight","textColor","fontSizeMedium","border","IconWrapper","text","lineHeightBody","IconLink","AlertLinkText","SectionHeading","FeatureBadge","Panel","t","DURATION_UNITS","FIELD_FORMATTERS","PERCENTAGE_UNITS","SIZE_UNITS","isCustomMeasurement","isNotMarkMeasurement","field","startsWith","EventCustomPerformanceMetrics","event","location","organization","measurementNames","Object","keys","measurements","filter","name","sort","length","map","getFieldTypeFromUnit","unit","includes","EventCustomPerformanceMetric","value","fieldType","rendered","renderFunc","Measurements","Container","StyledPanel","ValueRow","Value","fontSizeExtraLarge","Fragment","Tooltip","IconFire","IconWarning","defined","formattedValue","MOBILE_VITAL_DETAILS","WEB_VITAL_DETAILS","isOutdatedSdk","sdk","version","sdkVersion","EventVitals","WebVitals","Boolean","measurement","vital","MobileVitals","EventVital","failedThreshold","poorThreshold","currentValue","thresholdValue","red300","Name","WarningIconContainer","iconSizes","FireIconContainer","EventVitalContainer","KeyValueTable","KeyValueTableRow","keyName","commonStyles","overflowEllipsis","backgroundSecondary","Key","subText","AnnotatedText","TagsTableRow","TagsTable","query","generateUrl","meta","_meta","tags","tag","index","key","StyledTagsTable","Version","tagInQuery","target","undefined","keyMetaData","valueMetaData","renderTagValue","err","StyledTooltip","ValueContainer","getDuration","record","type","toFixed","TraceFullQuery","TraceLiteQuery","flattenRelevantPaths","getTraceTimeRangeFromEvent","isCurrentEvent","QuickTraceQuery","renderEmpty","isLoading","error","trace","currentEvent","traceId","contexts","trace_id","start","end","id","traceLiteResults","traceFullResults","traces","subtrace","find","e","GenericDiscoverQuery","getTraceRequestPayload","makeEventView","withApi","getTraceFullRequestPayload","detailed","eventId","additionalApiPayload","event_id","EmptyTrace","GenericTraceFullQuery","statsPeriod","eventView","tableData","rest","TraceFullDetailedQuery","getTraceLiteRequestPayload","assign","TraceMetaQuery","browserHistory","cloneDeep","isEmpty","isEqual","pick","trimStart","qs","WidgetArea","WidgetBar","WidgetBigNumber","WidgetLine","WidgetTable","WidgetWorldMap","parseArithmetic","getDiffInMinutes","getInterval","SIX_HOURS","TWENTY_FOUR_HOURS","normalizeDateTimeString","getUtcDateString","parsePeriodToHours","EventView","getAggregateAlias","getAggregateArg","getColumnsAndAggregates","isEquation","isMeasurement","stripEquationPrefix","DisplayModes","getMeasurements","decodeList","DashboardFilterKeys","DisplayType","WidgetType","cloneDashboard","dashboard","eventViewFromWidget","title","selection","widgetDisplayType","period","datetime","projects","environments","fields","WORLD_MAP","columns","aggregates","conditions","trim","orderby","aggregateAliasOrderBy","fromSavedQuery","range","environment","coerceStringToArray","constructWidgetFromQuery","queryNames","queryConditions","queryFields","queries","queryOrderby","forEach","condition","push","displayType","interval","newWidget","widgetType","DISCOVER","miniWidget","BAR","AREA","TOP_N","BIG_NUMBER","TABLE","LINE","getWidgetInterval","datetimeObj","widgetInterval","fidelity","MAX_BIN_COUNT","desiredPeriod","selectedRange","highInterval","getFieldsFromEquations","termsSet","Set","parsed","tc","term","add","functions","Array","from","getWidgetDiscoverUrl","widget","isMetricsData","discoverLocation","getResultsViewUrlTarget","slug","yAxisOptions","getYAxisOptions","yAxis","aggregate","slice","display","WORLDMAP","TOP5","equationFields","isArray","unshift","fromMetric","discoverPath","pathname","stringify","getWidgetIssueUrl","utc","issuesLocation","project","getWidgetReleasesUrl","_widget","releasesLocation","flattenErrors","data","update","item","getDashboardsMEPQueryParams","isMEPEnabled","dataset","getNumEquations","possibleEquations","definedMeasurements","isCustomMeasurementWidget","some","aggregateArgs","reduce","acc","aggregateArg","getCustomMeasurementQueryParams","isWidgetUsingTransactionName","hasSavedPageFilters","hasUnsavedFilterChanges","initialDashboard","savedFilters","currentFilters","getCurrentPageFilters","release","filters","getSavedFiltersAsPageFilters","getSavedPageFilters","resetPageFilters","replace","Number","getDashboardFiltersFromURL","dashboardFilters","values","Component","Clipboard","DateTime","ProjectBadge","TimeSince","frontend","IconCopy","getShortEventId","getDynamicText","isTransaction","Projects","QuickTraceMeta","MetaData","BREAKPOINT_MEDIA_QUERY","breakpoints","large","EventMetas","isLargeScreen","window","matchMedia","matches","changed","setState","componentDidMount","mq","addListener","handleMediaQueryChange","componentWillUnmount","removeListener","render","projectId","quickTrace","errorDest","transactionDest","state","timestamp","dateCreated","endTimestamp","httpStatus","startTimestamp","fixed","getStatusBodyText","EventDetailHeader","medium","QuickTraceContainer","EventID","eventID","EventIDContainer","EventIDWrapper","HttpStatus","emptyStatus","tagObject","isFrontendProject","val","platform","errors","status","Feature","FeatureDisabled","ErrorBoundary","Hovercard","Placeholder","QuickTrace","generateTraceTarget","tct","tn","trackAnalyticsEvent","getConfigureTracingDocsLink","useOrganization","handleTraceLink","eventKey","eventName","organization_id","parseInt","source","traceMeta","anchor","features","noFeatureMessage","docsLink","traceTarget","body","footer","events","transactions","hasFeature","QuickTraceMetaBase","QuestionTooltip","headingText","tooltipText","bodyText","subtext","badge","HeaderInfo","StyledSectionHeading","SectionBody","StyledFeatureBadge","SectionSubtext"],"sourceRoot":""}