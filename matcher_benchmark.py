import pyperf

from sentry.utils.pytest.sentry import pytest_configure

pytest_configure({})

from sentry.ownership.grammar import Matcher

runner = pyperf.Runner()


example_issue_data = {
    "stacktrace": {
        "frames": [
            {
                "filename": "celery/app/trace.py",
                "absPath": "/usr/local/lib/python3.8/site-packages/celery/app/trace.py",
                "module": "celery.app.trace",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "__protected_call__",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [699, "            stack = self.request_stack"],
                    [700, "            req = stack.top"],
                    [701, "            if req and not req._protected and \\"],
                    [702, "                    len(stack) == 1 and not req.called_directly:"],
                    [703, "                req._protected = 1"],
                    [704, "                return self.run(*args, **kwargs)"],
                    [705, "            return orig(self, *args, **kwargs)"],
                    [706, "        BaseTask.__call__ = __protected_call__"],
                    [707, "        BaseTask._stackprotected = True"],
                ],
                "lineNo": 704,
                "colNo": None,
                "inApp": False,
                "trust": None,
                "errors": None,
                "vars": {
                    "args": [
                        "6770040",
                        {
                            "culprit": "'(error: (27.0180336a.chunk)'",
                            "event_id": "'d727432b99d94d06b406d8fb2e06d93b'",
                            "fingerprint": ["'{{ default }}'"],
                            "level": "'error'",
                            "logger": "''",
                            "platform": "'javascript'",
                            "received": "1674120577.857233",
                            "timestamp": "1674120575.598",
                            "type": "'error'",
                            "version": "'7'",
                        },
                    ],
                    "kwargs": {"dry_run": "False"},
                    "orig": "<function Task.__call__ at 0x7ff4917d05e0>",
                    "req": "<Context: {'lang': None, 'task': 'sentry.tasks.derive_code_mappings.derive_code_mappings', 'id': 'b3a37247-bbb6-4052-b1a4-63ac2a0c83fc', 'root_id': None, 'parent_id': None, 'group': None, 'meth': None, 'shadow': None, 'eta': None, 'expires': None, 'retries': 0, 'timelimit': (None, None), 'argsrepr': None, 'kwargsrepr': None, 'origin': None, 'reply_to': 'fb107868-d5f8-3108-918f-c93878d35b75', 'correlation_id': 'b3a37247-bbb6-4052-b1a4-63ac2a0c83fc', 'hostname': 'getsentry-worker-derive-code-mappings-production-8868999c9pxph7', 'delivery_info': {'exchange': '', 'routing_key': 'derive_code_mappings', 'priority': None, 'redelivered': False}, 'args': (6770040, <NodeData: id=78075767213ddc6efec7c4c691a9d6fc data=CanonicalKeyDict({'event_id': 'd727432b99d94d06b406d8fb2e06d93b', 'level': 'error', 'version': '7', 'type': 'error', 'fingerprint': ['{{ default }}'], 'culprit': '(error: (27.0180336a.chunk)', 'logger': '', 'platform': 'javascript', 'timestamp': 1674120575.598, 'received': 1674120577.857233, 'release': '...",
                    "self": "<@task: sentry.tasks.derive_code_mappings.derive_code_mappings of sentry at 0x7ff491955070>",
                    "stack": "<celery.utils.threads._LocalStack object at 0x7ff474bd7a60>",
                },
            },
            {
                "filename": "celery/app/autoretry.py",
                "absPath": "/usr/local/lib/python3.8/site-packages/celery/app/autoretry.py",
                "module": "celery.app.autoretry",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "run",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [30, "    if autoretry_for and not hasattr(task, '_orig_run'):"],
                    [31, ""],
                    [32, "        @wraps(task.run)"],
                    [33, "        def run(*args, **kwargs):"],
                    [34, "            try:"],
                    [35, "                return task._orig_run(*args, **kwargs)"],
                    [36, "            except Ignore:"],
                    [37, "                # If Ignore signal occures task shouldn't be retried,"],
                    [38, "                # even if it suits autoretry_for list"],
                    [39, "                raise"],
                    [40, "            except Retry:"],
                ],
                "lineNo": 35,
                "colNo": None,
                "inApp": False,
                "trust": None,
                "errors": None,
                "vars": {
                    "args": [
                        "6770040",
                        {
                            "culprit": "'(error: (27.0180336a.chunk)'",
                            "event_id": "'d727432b99d94d06b406d8fb2e06d93b'",
                            "fingerprint": ["'{{ default }}'"],
                            "level": "'error'",
                            "logger": "''",
                            "platform": "'javascript'",
                            "received": "1674120577.857233",
                            "timestamp": "1674120575.598",
                            "type": "'error'",
                            "version": "'7'",
                        },
                    ],
                    "autoretry_for": ["<class 'sentry.utils.locking.UnableToAcquireLock'>"],
                    "kwargs": {"dry_run": "False"},
                    "retry_backoff": "0",
                    "retry_backoff_max": "600",
                    "retry_jitter": "True",
                    "retry_kwargs": {},
                    "task": "<@task: sentry.tasks.derive_code_mappings.derive_code_mappings of sentry at 0x7ff491955070>",
                },
            },
            {
                "filename": "sentry/tasks/base.py",
                "absPath": "/usr/src/sentry/src/sentry/tasks/base.py",
                "module": "sentry.tasks.base",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "_wrapped",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [59, '                scope.set_tag("transaction_id", transaction_id)'],
                    [60, ""],
                    [
                        61,
                        "            with metrics.timer(key, instance=instance), track_memory_usage(",
                    ],
                    [62, '                "jobs.memory_change", instance=instance'],
                    [63, "            ):"],
                    [64, "                result = func(*args, **kwargs)"],
                    [65, ""],
                    [66, "            return result"],
                    [67, ""],
                    [
                        68,
                        "        # We never use result backends in Celery. Leaving `trail=True` means that if we schedule",
                    ],
                    [
                        69,
                        "        # many tasks from a parent task, each task leaks memory. This can lead to the scheduler",
                    ],
                ],
                "lineNo": 64,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "args": [
                        "6770040",
                        {
                            "culprit": "'(error: (27.0180336a.chunk)'",
                            "event_id": "'d727432b99d94d06b406d8fb2e06d93b'",
                            "fingerprint": ["'{{ default }}'"],
                            "level": "'error'",
                            "logger": "''",
                            "platform": "'javascript'",
                            "received": "1674120577.857233",
                            "timestamp": "1674120575.598",
                            "type": "'error'",
                            "version": "'7'",
                        },
                    ],
                    "func": "<function derive_code_mappings at 0x7ff477d04dc0>",
                    "instance": "'sentry.tasks.derive_code_mappings.derive_code_mappings'",
                    "key": "'jobs.duration'",
                    "kwargs": {"dry_run": "False"},
                    "name": "'sentry.tasks.derive_code_mappings.derive_code_mappings'",
                    "scope": "<Scope id=0x7ff483e50250 name=celery>",
                    "stat_suffix": "None",
                    "transaction_id": "None",
                },
            },
            {
                "filename": "sentry/tasks/derive_code_mappings.py",
                "absPath": "/usr/src/sentry/src/sentry/tasks/derive_code_mappings.py",
                "module": "sentry.tasks.derive_code_mappings",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "derive_code_mappings",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [88, ""],
                    [89, '        if msg == "Not Found":'],
                    [
                        90,
                        '            logger.warning("The org has uninstalled the Sentry App.", extra=extra)',
                    ],
                    [91, "            return"],
                    [92, ""],
                    [93, "        raise error  # Let's be report the issue"],
                    [94, "    except UnableToAcquireLock as error:"],
                    [95, '        extra["error"] = error'],
                    [
                        96,
                        '        logger.warning("derive_code_mappings.getting_lock_failed", extra=extra)',
                    ],
                    [97, "        # This will cause the auto-retry logic to try again"],
                    [98, "        raise error"],
                ],
                "lineNo": 93,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "data": {
                        "culprit": "'(error: (27.0180336a.chunk)'",
                        "event_id": "'d727432b99d94d06b406d8fb2e06d93b'",
                        "fingerprint": ["'{{ default }}'"],
                        "level": "'error'",
                        "logger": "''",
                        "platform": "'javascript'",
                        "received": "1674120577.857233",
                        "timestamp": "1674120575.598",
                        "type": "'error'",
                        "version": "'7'",
                    },
                    "dry_run": "False",
                    "extra": {"error": "[Filtered]", "organization.slug": "'wirelesstable'"},
                    "feat_key": "'organizations:derive-code-mappings'",
                    "installation": "<sentry.integrations.github.integration.GitHubIntegration object at 0x7ff4741b8100>",
                    "org": "<Organization at 0x7ff46b28a820: id=110532, owner_id=None, name='wirelesstable', slug='wirelesstable'>",
                    "org_has_flag": "True",
                    "project": "<Project at 0x7ff46bfef370: id=6770040, team_id=None, name='frontend', slug='frontend'>",
                    "project_id": "6770040",
                    "stacktrace_paths": [
                        "'pages/LoginPage/LoginForm.js'",
                        "[Filtered]",
                        "'/referrals'",
                        "'/static/js/27.0180336a.chunk.js)'",
                    ],
                },
            },
            {
                "filename": "sentry/tasks/derive_code_mappings.py",
                "absPath": "/usr/src/sentry/src/sentry/tasks/derive_code_mappings.py",
                "module": "sentry.tasks.derive_code_mappings",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "derive_code_mappings",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [
                        76,
                        '    lock = locks.get(key=f"get_trees_for_org:{org.slug}", duration=60 * 10, name="process_pending")',
                    ],
                    [77, ""],
                    [78, "    try:"],
                    [79, "        with lock.acquire():"],
                    [80, "            # This method is specific to the GithubIntegration"],
                    [81, "            trees = installation.get_trees_for_org()  # type: ignore"],
                    [82, "    except ApiError as error:"],
                    [83, "        msg = error.text"],
                    [84, "        if error.json:"],
                    [85, "            json_data: JSONData = error.json"],
                    [86, '            msg = json_data.get("message")'],
                ],
                "lineNo": 81,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "data": {
                        "culprit": "'(error: (27.0180336a.chunk)'",
                        "event_id": "'d727432b99d94d06b406d8fb2e06d93b'",
                        "fingerprint": ["'{{ default }}'"],
                        "level": "'error'",
                        "logger": "''",
                        "platform": "'javascript'",
                        "received": "1674120577.857233",
                        "timestamp": "1674120575.598",
                        "type": "'error'",
                        "version": "'7'",
                    },
                    "dry_run": "False",
                    "extra": {"error": "[Filtered]", "organization.slug": "'wirelesstable'"},
                    "feat_key": "'organizations:derive-code-mappings'",
                    "installation": "<sentry.integrations.github.integration.GitHubIntegration object at 0x7ff4741b8100>",
                    "org": "<Organization at 0x7ff46b28a820: id=110532, owner_id=None, name='wirelesstable', slug='wirelesstable'>",
                    "org_has_flag": "True",
                    "project": "<Project at 0x7ff46bfef370: id=6770040, team_id=None, name='frontend', slug='frontend'>",
                    "project_id": "6770040",
                    "stacktrace_paths": [
                        "'pages/LoginPage/LoginForm.js'",
                        "[Filtered]",
                        "'/referrals'",
                        "'/static/js/27.0180336a.chunk.js)'",
                    ],
                },
            },
            {
                "filename": "sentry/integrations/github/integration.py",
                "absPath": "/usr/src/sentry/src/sentry/integrations/github/integration.py",
                "module": "sentry.integrations.github.integration",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "get_trees_for_org",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [
                        111,
                        '        gh_org = self.model.metadata["domain_name"].split("github.com/")[1]',
                    ],
                    [
                        112,
                        "        organization_context = organization_service.get_organization_by_id(",
                    ],
                    [113, "            id=self.org_integration.organization_id, user_id=None"],
                    [114, "        )"],
                    [115, "        return ("],
                    [116, "            self.get_client().get_trees_for_org("],
                    [117, "                cache_key=organization_context.organization.slug,"],
                    [118, "                gh_org=gh_org,"],
                    [119, "                cache_seconds=cache_seconds,"],
                    [120, "            )"],
                    [121, "            if organization_context"],
                ],
                "lineNo": 116,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "cache_seconds": "86400",
                    "gh_org": "'wireless-table'",
                    "organization_context": "ApiUserOrganizationContext(user_id=None, organization=ApiOrganization(slug='wirelesstable', id=110532, name='wirelesstable', teams=[ApiTeam(id=134612, status=0, organization_id=110532, slug='wirelesstable', actor_id=None)], projects=[ApiProject(id=6770041, slug='us-frontend', name='us-frontend', organization_id=110532, status=0), ApiProject(id=6770040, slug='frontend', name='frontend', organization_id=110532, status=0), ApiProject(id=6770038, slug='backend', name='backend', organization_id=110532, status=0), ApiProject(id=6770042, slug='tr-frontend', name='tr-frontend', organization_id=110532, status=0), ApiProject(id=6770047, slug='pro-app', name='pro-app', organization_id=110532, status=0)], flags=ApiOrganizationFlags(allow_joinleave=<Bit: number=0, is_set=True>, enhanced_privacy=<Bit: number=1, is_set=False>, disable_shared_issues=<Bit: number=2, is_set=False>, early_adopter=<Bit: number=3, is_set=False>, require_2fa=<Bit: number=4, is_set=False>, disable_new_visibility_features=<Bit: number=5, is_set=F...",
                    "self": "<sentry.integrations.github.integration.GitHubIntegration object at 0x7ff4741b8100>",
                },
            },
            {
                "filename": "sentry/integrations/github/client.py",
                "absPath": "/usr/src/sentry/src/sentry/integrations/github/client.py",
                "module": "sentry.integrations.github.client",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "get_trees_for_org",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [172, '        extra = {"gh_org": gh_org}'],
                    [173, "        if not repositories:"],
                    [174, "            # Simply removing unnecessary fields from the response"],
                    [175, "            repositories = ["],
                    [
                        176,
                        '                {"full_name": repo["full_name"], "default_branch": repo["default_branch"]}',
                    ],
                    [
                        177,
                        "                for repo in self.get_repositories(fetch_max_pages=True)",
                    ],
                    [178, "            ]"],
                    [179, "            cache.set(cache_key, repositories, cache_seconds)"],
                    [
                        180,
                        "            next_time = datetime.now() + timedelta(seconds=cache_seconds)",
                    ],
                    [181, '            extra["next_time"] = str(next_time)'],
                    [182, '            logger.info("Caching trees for Github org.", extra=extra)'],
                ],
                "lineNo": 177,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "cache_key": "'githubtrees:repositories:wirelesstable:wireless-table'",
                    "cache_seconds": "86400",
                    "extra": {"gh_org": "'wireless-table'"},
                    "gh_org": "'wireless-table'",
                    "repositories": "None",
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                    "trees": {},
                },
            },
            {
                "filename": "sentry/integrations/github/client.py",
                "absPath": "/usr/src/sentry/src/sentry/integrations/github/client.py",
                "module": "sentry.integrations.github.client",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "get_repositories",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [212, ""],
                    [213, "        This fetches all repositories accessible to the Github App"],
                    [
                        214,
                        "        https://docs.github.com/en/rest/apps/installations#list-repositories-accessible-to-the-app-installation",
                    ],
                    [215, '        """'],
                    [216, "        # Explicitly typing to satisfy mypy."],
                    [217, "        repos: JSONData = self.get_with_pagination("],
                    [218, '            "/installation/repositories",'],
                    [219, '            response_key="repositories",'],
                    [
                        220,
                        "            page_number_limit=self.page_number_limit if fetch_max_pages else 1,",
                    ],
                    [221, "        )"],
                    [222, '        return [repo for repo in repos if not repo.get("archived")]'],
                ],
                "lineNo": 217,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "fetch_max_pages": "True",
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                },
            },
            {
                "filename": "sentry/integrations/github/client.py",
                "absPath": "/usr/src/sentry/src/sentry/integrations/github/client.py",
                "module": "sentry.integrations.github.client",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "get_with_pagination",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [266, "            trace_id=trace_id,"],
                    [267, "            sampled=True,"],
                    [268, "        ):"],
                    [269, "            output = []"],
                    [270, ""],
                    [271, '            resp = self.get(path, params={"per_page": self.page_size})'],
                    [
                        272,
                        "            output.extend(resp) if not response_key else output.extend(resp[response_key])",
                    ],
                    [273, "            page_number = 1"],
                    [274, ""],
                    [
                        275,
                        "            # XXX: In order to speed up this function we will need to parallelize this",
                    ],
                    [
                        276,
                        "            # Use ThreadPoolExecutor; see src/sentry/utils/snuba.py#L358",
                    ],
                ],
                "lineNo": 271,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "output": [],
                    "page_number_limit": "50",
                    "parent_span_id": "'b87d63aeae70f991'",
                    "path": "'/installation/repositories'",
                    "response_key": "'repositories'",
                    "scope": "<Scope id=0x7ff483e50250 name=celery>",
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                    "trace_id": "'337fabba55694b06b8d7d1210315a07a'",
                },
            },
            {
                "filename": "sentry/shared_integrations/client/base.py",
                "absPath": "/usr/src/sentry/src/sentry/shared_integrations/client/base.py",
                "module": "sentry.shared_integrations.client.base",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "get",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [187, ""],
                    [
                        188,
                        "    def get_cached(self, path: str, *args: Any, **kwargs: Any) -> BaseApiResponseX:",
                    ],
                    [189, '        return self._get_cached(path, "GET", *args, **kwargs)'],
                    [190, ""],
                    [191, "    def get(self, *args: Any, **kwargs: Any) -> BaseApiResponseX:"],
                    [192, '        return self.request("GET", *args, **kwargs)'],
                    [193, ""],
                    [194, "    def patch(self, *args: Any, **kwargs: Any) -> BaseApiResponseX:"],
                    [195, '        return self.request("PATCH", *args, **kwargs)'],
                    [196, ""],
                    [197, "    def post(self, *args: Any, **kwargs: Any) -> BaseApiResponseX:"],
                ],
                "lineNo": 192,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "args": ["'/installation/repositories'"],
                    "kwargs": {"params": {"per_page": "100"}},
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                },
            },
            {
                "filename": "sentry/integrations/github/client.py",
                "absPath": "/usr/src/sentry/src/sentry/integrations/github/client.py",
                "module": "sentry.integrations.github.client",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "request",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [314, "        data: Mapping[str, Any] | None = None,"],
                    [315, "        params: Mapping[str, Any] | None = None,"],
                    [316, "    ) -> JSONData:"],
                    [317, "        if headers is None:"],
                    [318, "            headers = {"],
                    [319, '                "Authorization": f"token {self.get_token()}",'],
                    [320, "                # TODO(jess): remove this whenever it's out of preview"],
                    [
                        321,
                        '                "Accept": "application/vnd.github.machine-man-preview+json",',
                    ],
                    [322, "            }"],
                    [
                        323,
                        "        return self._request(method, path, headers=headers, data=data, params=params)",
                    ],
                    [324, ""],
                ],
                "lineNo": 319,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "data": "None",
                    "headers": "None",
                    "method": "'GET'",
                    "params": {"per_page": "100"},
                    "path": "'/installation/repositories'",
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                },
            },
            {
                "filename": "sentry/integrations/github/client.py",
                "absPath": "/usr/src/sentry/src/sentry/integrations/github/client.py",
                "module": "sentry.integrations.github.client",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "get_token",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [
                        339,
                        '            or (datetime.strptime(expires_at, "%Y-%m-%dT%H:%M:%S") < datetime.utcnow())',
                    ],
                    [340, "            or force_refresh"],
                    [341, "        ):"],
                    [342, "            from copy import deepcopy"],
                    [343, ""],
                    [344, "            res = self.create_token()"],
                    [345, '            token = res["token"]'],
                    [
                        346,
                        '            expires_at = datetime.strptime(res["expires_at"], "%Y-%m-%dT%H:%M:%SZ").isoformat()',
                    ],
                    [347, "            new_metadata = deepcopy(self.integration.metadata)"],
                    [
                        348,
                        '            new_metadata.update({"access_token": token, "expires_at": expires_at})',
                    ],
                    [
                        349,
                        "            self.integration = integration_service.update_integration(  # type: ignore",
                    ],
                ],
                "lineNo": 344,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "deepcopy": "<function deepcopy at 0x7ff4a9d4bdc0>",
                    "expires_at": "'2022-11-11T21:49:00'",
                    "force_refresh": "False",
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                    "token": "[Filtered]",
                },
            },
            {
                "filename": "sentry/integrations/github/client.py",
                "absPath": "/usr/src/sentry/src/sentry/integrations/github/client.py",
                "module": "sentry.integrations.github.client",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "create_token",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [356, "        headers = {"],
                    [357, "            # TODO(jess): remove this whenever it's out of preview"],
                    [
                        358,
                        '            "Accept": "application/vnd.github.machine-man-preview+json",',
                    ],
                    [359, "        }"],
                    [360, "        headers.update(jwt.authorization_header(self.get_jwt()))"],
                    [361, "        return self.post("],
                    [
                        362,
                        '            f"/app/installations/{self.integration.external_id}/access_tokens",',
                    ],
                    [363, "            headers=headers,"],
                    [364, "        )"],
                    [365, ""],
                    [
                        366,
                        "    def check_file(self, repo: Repository, path: str, version: str) -> str | None:",
                    ],
                ],
                "lineNo": 361,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "headers": {
                        "Accept": "'application/vnd.github.machine-man-preview+json'",
                        "Authorization": "[Filtered]",
                    },
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                },
            },
            {
                "filename": "sentry/shared_integrations/client/base.py",
                "absPath": "/usr/src/sentry/src/sentry/shared_integrations/client/base.py",
                "module": "sentry.shared_integrations.client.base",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "post",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [193, ""],
                    [194, "    def patch(self, *args: Any, **kwargs: Any) -> BaseApiResponseX:"],
                    [195, '        return self.request("PATCH", *args, **kwargs)'],
                    [196, ""],
                    [197, "    def post(self, *args: Any, **kwargs: Any) -> BaseApiResponseX:"],
                    [198, '        return self.request("POST", *args, **kwargs)'],
                    [199, ""],
                    [200, "    def put(self, *args: Any, **kwargs: Any) -> BaseApiResponseX:"],
                    [201, '        return self.request("PUT", *args, **kwargs)'],
                    [202, ""],
                    [203, "    def head(self, *args: Any, **kwargs: Any) -> BaseApiResponseX:"],
                ],
                "lineNo": 198,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "args": ["[Filtered]"],
                    "kwargs": {
                        "headers": {
                            "Accept": "'application/vnd.github.machine-man-preview+json'",
                            "Authorization": "[Filtered]",
                        }
                    },
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                },
            },
            {
                "filename": "sentry/integrations/github/client.py",
                "absPath": "/usr/src/sentry/src/sentry/integrations/github/client.py",
                "module": "sentry.integrations.github.client",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "request",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [318, "            headers = {"],
                    [319, '                "Authorization": f"token {self.get_token()}",'],
                    [320, "                # TODO(jess): remove this whenever it's out of preview"],
                    [
                        321,
                        '                "Accept": "application/vnd.github.machine-man-preview+json",',
                    ],
                    [322, "            }"],
                    [
                        323,
                        "        return self._request(method, path, headers=headers, data=data, params=params)",
                    ],
                    [324, ""],
                    [325, "    def get_token(self, force_refresh: bool = False) -> str:"],
                    [326, '        """'],
                    [
                        327,
                        "        Get token retrieves the active access token from the integration model.",
                    ],
                    [
                        328,
                        "        Should the token have expired, a new token will be generated and",
                    ],
                ],
                "lineNo": 323,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "data": "None",
                    "headers": {
                        "Accept": "'application/vnd.github.machine-man-preview+json'",
                        "Authorization": "[Filtered]",
                    },
                    "method": "'POST'",
                    "params": "None",
                    "path": "[Filtered]",
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                },
            },
            {
                "filename": "sentry/shared_integrations/client/base.py",
                "absPath": "/usr/src/sentry/src/sentry/shared_integrations/client/base.py",
                "module": "sentry.shared_integrations.client.base",
                "package": None,
                "platform": None,
                "instructionAddr": None,
                "symbolAddr": None,
                "function": "_request",
                "rawFunction": None,
                "symbol": None,
                "context": [
                    [153, "                        extra[self.integration_type] = self.name"],
                    [
                        154,
                        '                    self.logger.exception("request.error", extra=extra)',
                    ],
                    [155, ""],
                    [
                        156,
                        '                    raise ApiError("Internal Error", url=full_url) from e',
                    ],
                    [157, "                self.track_response_data(resp.status_code, span, e)"],
                    [
                        158,
                        "                raise ApiError.from_response(resp, url=full_url) from e",
                    ],
                    [159, ""],
                    [
                        160,
                        "            self.track_response_data(resp.status_code, span, None, resp)",
                    ],
                    [161, ""],
                    [162, "            if resp.status_code == 204:"],
                    [163, "                return {}"],
                ],
                "lineNo": 158,
                "colNo": None,
                "inApp": True,
                "trust": None,
                "errors": None,
                "vars": {
                    "allow_redirects": "True",
                    "allow_text": "False",
                    "auth": "[Filtered]",
                    "data": "None",
                    "headers": {
                        "Accept": "'application/vnd.github.machine-man-preview+json'",
                        "Authorization": "[Filtered]",
                    },
                    "json": "True",
                    "method": "'POST'",
                    "params": "None",
                    "path": "[Filtered]",
                    "self": "<sentry.integrations.github.client.GitHubAppsClient object at 0x7ff46bfef0a0>",
                },
            },
        ]
    }
}


def baseline_func():
    Matcher("codeowners", "sentry/tasks/derive_code_mappings.py").test(example_issue_data)


def improved_func():
    Matcher("codeowners", "sentry/tasks/derive_code_mappings.py").test(example_issue_data, True)


runner.bench_func("baseline_func", baseline_func)
runner.bench_func("improved_func", improved_func)
