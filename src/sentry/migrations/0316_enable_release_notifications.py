# Generated by Django 2.2.28 on 2022-08-29 22:26

from enum import Enum

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


class ExternalProviders(Enum):
    # only need Email and Slack
    EMAIL = 100
    SLACK = 110


class NotificationSettingOptionValues(Enum):
    # Set all users to always receive notification
    ALWAYS = 20


class NotificationType(Enum):
    # only need Active Release
    ACTIVE_RELEASE = 31


class NotificationScopeType(Enum):
    # only need User
    USER = 0


# Set the new ACTIVE_RELEASE notification to always notify for users in the Sentry org.
def backfill_active_release_notification_settings(apps, schema_editor):
    OrganizationMember = apps.get_model("sentry", "OrganizationMember")
    for om in RangeQuerySetWrapperWithProgressBar(
        OrganizationMember.objects.filter(organization_id=1).select_related("user")
    ):
        user = om.user
        NotificationSetting = apps.get_model("sentry", "NotificationSetting")
        NotificationSetting.objects.create(
            scope_type=NotificationScopeType.USER.value,
            target_id=user.actor_id,
            provider=ExternalProviders.SLACK.value,
            type=NotificationType.ACTIVE_RELEASE.value,
            scope_identifier=user.id,
            value=NotificationSettingOptionValues.ALWAYS.value,
        )

        NotificationSetting.objects.create(
            scope_type=NotificationScopeType.USER.value,
            target_id=user.actor_id,
            provider=ExternalProviders.EMAIL.value,
            type=NotificationType.ACTIVE_RELEASE.value,
            scope_identifier=user.id,
            value=NotificationSettingOptionValues.ALWAYS.value,
        )


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = False

    # This flag is used to decide whether to run this migration in a transaction or not. Generally
    # we don't want to run in a transaction here, since for long running operations like data
    # back-fills this results in us locking an increasing number of rows until we finally commit.
    atomic = False

    dependencies = [
        ("sentry", "0315_add_type_to_group"),
    ]

    operations = [
        migrations.RunPython(
            backfill_active_release_notification_settings,
            migrations.RunPython.noop,
            hints={
                "tables": [
                    "sentry_notificationsetting",
                    "sentry_organizationmember",
                ]
            },
        ),
    ]
