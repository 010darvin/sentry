# Generated by Django 2.2.28 on 2023-04-26 21:58

from django.db import migrations
from django.utils.text import slugify

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


def resolve_mismatched_team_slugs_for_scim(apps, schema_editor):
    Team = apps.get_model("sentry", "Team")

    for team in RangeQuerySetWrapperWithProgressBar(Team.objects.all()):
        if team.idp_provisioned and team.slug != slugify(team.name):
            team.slug = slugify(team.name)
            team.save()


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = True

    dependencies = [
        ("sentry", "0433_set_monitor_status_to_object_status_only"),
    ]

    operations = [
        migrations.RunPython(
            resolve_mismatched_team_slugs_for_scim,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["sentry_team"]},
        )
    ]
