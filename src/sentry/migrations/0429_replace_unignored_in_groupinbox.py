# Generated by Django 2.2.28 on 2023-04-25 20:50

from enum import Enum

from django.db import migrations

from sentry.new_migrations.migrations import CheckedMigration
from sentry.utils.query import RangeQuerySetWrapperWithProgressBar


class GroupInboxReason(Enum):
    UNIGNORED = 1
    ONGOING = 6


def replace_unignored_in_groupinbox(apps, schema_editor):
    GroupInbox = apps.get_model("sentry", "GroupInbox")

    for group_inbox in RangeQuerySetWrapperWithProgressBar(
        GroupInbox.objects.filter(reason=GroupInboxReason.UNIGNORED.value)
    ):
        group_inbox.reason = GroupInboxReason.ONGOING.value
        group_inbox.reason_details = None
        group_inbox.save(update_fields=["reason", "reason_details"])


class Migration(CheckedMigration):
    # This flag is used to mark that a migration shouldn't be automatically run in production. For
    # the most part, this should only be used for operations where it's safe to run the migration
    # after your code has deployed. So this should not be used for most operations that alter the
    # schema of a table.
    # Here are some things that make sense to mark as dangerous:
    # - Large data migrations. Typically we want these to be run manually by ops so that they can
    #   be monitored and not block the deploy for a long period of time while they run.
    # - Adding indexes to large tables. Since this can take a long time, we'd generally prefer to
    #   have ops run this and not block the deploy. Note that while adding an index is a schema
    #   change, it's completely safe to run the operation after the code has deployed.
    is_dangerous = False

    dependencies = [
        ("sentry", "0428_backfill_denormalize_notification_actor"),
    ]

    operations = [
        migrations.RunPython(
            replace_unignored_in_groupinbox,
            reverse_code=migrations.RunPython.noop,
            hints={"tables": ["sentry_groupinbox"]},
        ),
    ]
